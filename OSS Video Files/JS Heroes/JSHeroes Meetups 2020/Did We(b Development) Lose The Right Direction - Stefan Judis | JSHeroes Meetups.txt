Title: Did We(b Development) Lose The Right Direction - Stefan Judis | JSHeroes Meetups
Publication date: 2020-11-10
Playlist: JSHeroes Meetups 2020
Description: 
	Note: This talk was originally scheduled for the 2020 edition of JSHeroes, back in April, so we kindly asked Stefan to present it at this online meetup.

Keeping up with the state of web technology is one of the biggest challenges for us developers today. We invent new tools; we define new best practices, everything’s new, always... And we do all that for good user experience! We do all that to build the best possible web – it’s all about our users. But is it, really? Or do developers like to play with technology secretly loving the new and shiny? Or do we only pretend that it’s about users, and behind closed doors, it's developer experience that matters to us? Did we lose direction? Is it time for a critical look at the state of the web and the role JavaScript plays in it?

About Stefan:
Stefan started programming ten years ago and quickly fell in love with web performance, new technologies, and accessibility. He is also a curator of the web performance online resource Perf Tooling, contributes to a variety of open source projects, and enjoys sharing nerdy discoveries.
Captions: 
	00:00:05,440 --> 00:00:08,640
and we are live

00:00:09,760 --> 00:00:14,799
yeah now you should see the applause is

00:00:13,200 --> 00:00:18,080
from the action

00:00:14,799 --> 00:00:21,359
yeah so welcome everyone um

00:00:18,080 --> 00:00:23,920
this is our uh probably

00:00:21,359 --> 00:00:25,599
close to our 20th event this year i

00:00:23,920 --> 00:00:27,840
don't even know like we had a lot of

00:00:25,599 --> 00:00:28,960
a lot of these online meetups at js

00:00:27,840 --> 00:00:32,320
heroes

00:00:28,960 --> 00:00:36,079
are super happy to to get the community

00:00:32,320 --> 00:00:39,280
together every once every few weeks

00:00:36,079 --> 00:00:42,480
um this week we have

00:00:39,280 --> 00:00:46,559
um another special guest

00:00:42,480 --> 00:00:47,520
we invited one of the speakers that was

00:00:46,559 --> 00:00:50,640
supposed to be

00:00:47,520 --> 00:00:53,840
in april 2020 include but

00:00:50,640 --> 00:00:56,800
it didn't happen unfortunately

00:00:53,840 --> 00:00:59,840
but we are very fortunate that stefan

00:00:56,800 --> 00:00:59,840
was kind enough to

00:00:59,920 --> 00:01:05,199
join us for this session today he has a

00:01:02,879 --> 00:01:08,000
very interesting talk he wants to

00:01:05,199 --> 00:01:08,880
share with the community now for those

00:01:08,000 --> 00:01:12,640
who don't

00:01:08,880 --> 00:01:13,520
know him um stefan is uh devrel at

00:01:12,640 --> 00:01:16,560
contentful

00:01:13,520 --> 00:01:17,439
he was a speaker at js heroes 2018 i

00:01:16,560 --> 00:01:19,680
think

00:01:17,439 --> 00:01:20,799
that was yeah two years ago two years

00:01:19,680 --> 00:01:22,799
and a half

00:01:20,799 --> 00:01:24,320
and again he was supposed to be again in

00:01:22,799 --> 00:01:27,360
00:01:24,320 --> 00:01:30,479
um and just one

00:01:27,360 --> 00:01:32,159
small insight about him if you are not

00:01:30,479 --> 00:01:34,079
following him on twitter you should

00:01:32,159 --> 00:01:37,200
definitely go follow him

00:01:34,079 --> 00:01:39,200
uh i think he's one of the people that

00:01:37,200 --> 00:01:41,280
shares the most interesting content when

00:01:39,200 --> 00:01:43,600
it comes to really like all these small

00:01:41,280 --> 00:01:45,759
little tricks about web development

00:01:43,600 --> 00:01:47,119
uh he has you know tons of different

00:01:45,759 --> 00:01:49,680
things from

00:01:47,119 --> 00:01:50,560
uh dev sheets tiny helpers today i

00:01:49,680 --> 00:01:54,720
learned i i

00:01:50,560 --> 00:01:57,600
at some point i lost count but i always

00:01:54,720 --> 00:01:59,280
welcome all the bits of information that

00:01:57,600 --> 00:02:00,799
i get from his tweets so make sure you

00:01:59,280 --> 00:02:04,240
follow him on twitter

00:02:00,799 --> 00:02:07,439
and yeah uh stefan

00:02:04,240 --> 00:02:09,200
stage is yours thanks so much for having

00:02:07,439 --> 00:02:11,039
me it's bummer that

00:02:09,200 --> 00:02:13,280
we couldn't do last year but we already

00:02:11,039 --> 00:02:13,280
um

00:02:13,440 --> 00:02:17,760
i'm looking for forward to j series when

00:02:16,400 --> 00:02:19,120
when we all can come together in the

00:02:17,760 --> 00:02:22,879
future and

00:02:19,120 --> 00:02:26,239
here now i would like to

00:02:22,879 --> 00:02:29,520
do a long rant about web development

00:02:26,239 --> 00:02:30,160
so before i start i have to say that i'm

00:02:29,520 --> 00:02:33,920
a

00:02:30,160 --> 00:02:36,319
javascript fanboy um

00:02:33,920 --> 00:02:37,360
in the next 30 minutes or 35 minutes i

00:02:36,319 --> 00:02:38,560
really just want to question a little

00:02:37,360 --> 00:02:40,640
bit what we're doing

00:02:38,560 --> 00:02:42,720
lately and the talk is called did web

00:02:40,640 --> 00:02:45,840
development lose the right direction

00:02:42,720 --> 00:02:47,599
so this is a talk about general best

00:02:45,840 --> 00:02:49,680
practices

00:02:47,599 --> 00:02:51,519
and alex already introduced myself a

00:02:49,680 --> 00:02:53,920
little bit i'm stefan

00:02:51,519 --> 00:02:55,120
i work for contentful which is this

00:02:53,920 --> 00:02:56,800
content platform

00:02:55,120 --> 00:02:58,560
which provides you an api if you want to

00:02:56,800 --> 00:02:59,920
run your jamstack sites and want to have

00:02:58,560 --> 00:03:01,120
an editor interface or something like

00:02:59,920 --> 00:03:04,159
this

00:03:01,120 --> 00:03:05,120
and i was also already asked why i don't

00:03:04,159 --> 00:03:08,159
look like this

00:03:05,120 --> 00:03:10,319
today um

00:03:08,159 --> 00:03:12,319
maybe the next time uh so this is when i

00:03:10,319 --> 00:03:14,400
spoke at the j's heroes

00:03:12,319 --> 00:03:16,159
uh the first time and there were a few

00:03:14,400 --> 00:03:19,519
people that decided to go on stage

00:03:16,159 --> 00:03:21,440
in a onesie costume so

00:03:19,519 --> 00:03:23,360
i usually don't look that angry though

00:03:21,440 --> 00:03:24,799
um i just picked a random

00:03:23,360 --> 00:03:28,080
screenshot but it was a lot of fun i had

00:03:24,799 --> 00:03:30,640
a fabulous time at j series at that time

00:03:28,080 --> 00:03:32,000
and i started web development basically

00:03:30,640 --> 00:03:33,519
10 years ago and let's talk

00:03:32,000 --> 00:03:36,000
a little bit about this state of web

00:03:33,519 --> 00:03:39,519
development at the time when i started

00:03:36,000 --> 00:03:42,400
so i worked at tv initially and i mixed

00:03:39,519 --> 00:03:42,720
um tv shows so i sat in front of this

00:03:42,400 --> 00:03:44,159
mix

00:03:42,720 --> 00:03:46,159
massive mixer and then i became a

00:03:44,159 --> 00:03:48,080
developer and when i did my first

00:03:46,159 --> 00:03:49,680
internship in an e-commerce

00:03:48,080 --> 00:03:51,519
business this was the tech stack that i

00:03:49,680 --> 00:03:53,360
was confronted with so it was a mysql

00:03:51,519 --> 00:03:55,200
database it was an apache service was

00:03:53,360 --> 00:03:58,239
all running on php

00:03:55,200 --> 00:04:01,439
and i was already like

00:03:58,239 --> 00:04:04,000
that is a lot of stuff to learn

00:04:01,439 --> 00:04:04,640
and then this magento shop which it was

00:04:04,000 --> 00:04:06,720
at the time

00:04:04,640 --> 00:04:08,159
slowly but surely moved more things into

00:04:06,720 --> 00:04:09,680
the front end layer

00:04:08,159 --> 00:04:11,599
and what we had at the time was

00:04:09,680 --> 00:04:13,439
prototype and jquery

00:04:11,599 --> 00:04:15,840
so for the people that that do web

00:04:13,439 --> 00:04:17,359
development long enough

00:04:15,840 --> 00:04:19,680
prototype is basically more or less the

00:04:17,359 --> 00:04:21,759
same as jquery but we had both of them

00:04:19,680 --> 00:04:23,120
for legacy reasons in there so then we

00:04:21,759 --> 00:04:25,280
had the magento shop

00:04:23,120 --> 00:04:27,120
and then this thing came up that was

00:04:25,280 --> 00:04:29,520
called backbone

00:04:27,120 --> 00:04:31,040
which initially brought more layers into

00:04:29,520 --> 00:04:34,080
the front end stuff

00:04:31,040 --> 00:04:36,160
um best practices started to evolve in

00:04:34,080 --> 00:04:37,919
the front end because developers

00:04:36,160 --> 00:04:39,680
understood that there's a lot of cool

00:04:37,919 --> 00:04:41,280
stuff possible in the browser so what

00:04:39,680 --> 00:04:43,840
you see here is why slow

00:04:41,280 --> 00:04:45,600
which is a was a collection of best

00:04:43,840 --> 00:04:49,280
practices to deliver

00:04:45,600 --> 00:04:51,600
fast and good web experiences

00:04:49,280 --> 00:04:52,720
and i was completely hooked by this

00:04:51,600 --> 00:04:56,000
whole development thing

00:04:52,720 --> 00:04:57,440
and probably i still am and what you do

00:04:56,000 --> 00:04:58,320
when you're a developer you start

00:04:57,440 --> 00:05:00,320
blogging

00:04:58,320 --> 00:05:02,400
or at least you start trying to start

00:05:00,320 --> 00:05:05,199
blogging so this was my first blog

00:05:02,400 --> 00:05:05,919
um it's called for bison kinder e it was

00:05:05,199 --> 00:05:08,240
three

00:05:05,919 --> 00:05:09,039
myself and three friends and we wanted

00:05:08,240 --> 00:05:12,400
to

00:05:09,039 --> 00:05:14,000
just become bloggers i think we made it

00:05:12,400 --> 00:05:16,160
to eight posts

00:05:14,000 --> 00:05:19,120
in in total then at the end and

00:05:16,160 --> 00:05:21,039
everything was running on jekyll

00:05:19,120 --> 00:05:22,639
and it's still online but i'm not

00:05:21,039 --> 00:05:24,639
posting there anymore

00:05:22,639 --> 00:05:25,919
and then i think there was this one

00:05:24,639 --> 00:05:28,800
moment when things

00:05:25,919 --> 00:05:29,680
changed drastically and that was with

00:05:28,800 --> 00:05:32,880
grunt

00:05:29,680 --> 00:05:34,880
and gulp so this was what i did uh to

00:05:32,880 --> 00:05:36,960
the moment of grunt and gallop was

00:05:34,880 --> 00:05:38,479
that where there were some custom main

00:05:36,960 --> 00:05:40,400
build processes that were mainly

00:05:38,479 --> 00:05:41,120
minifying and concatenating javascript

00:05:40,400 --> 00:05:43,360
files

00:05:41,120 --> 00:05:45,759
and with grant and gulp and these new

00:05:43,360 --> 00:05:49,360
tools it became

00:05:45,759 --> 00:05:51,360
very almost required to have complex

00:05:49,360 --> 00:05:53,600
front-end development tool chains in the

00:05:51,360 --> 00:05:55,840
projects that i was building

00:05:53,600 --> 00:05:57,600
then i did angularjs so the first

00:05:55,840 --> 00:05:59,360
version for a little bit

00:05:57,600 --> 00:06:00,800
and on the side i played around with

00:05:59,360 --> 00:06:03,919
react and view

00:06:00,800 --> 00:06:05,680
and yeah what should i say i mean i'm

00:06:03,919 --> 00:06:07,440
i'm wearing a javascript hat here i

00:06:05,680 --> 00:06:09,199
really love the technology and even

00:06:07,440 --> 00:06:13,280
though i hate it sometimes i still

00:06:09,199 --> 00:06:15,280
love that things evolved that quickly

00:06:13,280 --> 00:06:16,800
so i dropped the blog with my friends

00:06:15,280 --> 00:06:18,840
because i was mainly i was the only

00:06:16,800 --> 00:06:21,600
person actually writing there

00:06:18,840 --> 00:06:23,360
um and then i started blogging on my own

00:06:21,600 --> 00:06:24,880
site so what you see here is my own blog

00:06:23,360 --> 00:06:26,400
you see that there are some fancy

00:06:24,880 --> 00:06:28,720
transitionings uh

00:06:26,400 --> 00:06:30,240
going on it was built with a common

00:06:28,720 --> 00:06:32,479
javascript framework

00:06:30,240 --> 00:06:33,680
it is statically pre-rendered oh oh

00:06:32,479 --> 00:06:35,199
there was actually also

00:06:33,680 --> 00:06:38,080
clues in there when i recorded that did

00:06:35,199 --> 00:06:41,440
you see that um

00:06:38,080 --> 00:06:43,280
and i used so i i used this blog from

00:06:41,440 --> 00:06:45,840
2017 to 2020

00:06:43,280 --> 00:06:46,840
and was fairly happy with it so if in

00:06:45,840 --> 00:06:50,000
case you

00:06:46,840 --> 00:06:50,880
um you are monitoring how this stuff

00:06:50,000 --> 00:06:52,479
actually

00:06:50,880 --> 00:06:54,560
is on a kind of performance and

00:06:52,479 --> 00:06:56,319
accessibility and quality scale

00:06:54,560 --> 00:06:58,080
what you can use is you can go into

00:06:56,319 --> 00:06:59,199
google chrome and they ship a tool that

00:06:58,080 --> 00:07:00,800
is called lighthouse

00:06:59,199 --> 00:07:02,560
and you see there that my blog at the

00:07:00,800 --> 00:07:04,960
time was fairly green

00:07:02,560 --> 00:07:06,240
so it had a 90 performance score best

00:07:04,960 --> 00:07:08,160
practices

00:07:06,240 --> 00:07:09,440
almost green but accessibility in zero

00:07:08,160 --> 00:07:12,479
00:07:09,440 --> 00:07:14,639
all crude i felt good about this

00:07:12,479 --> 00:07:16,319
if you care about web performance you

00:07:14,639 --> 00:07:16,560
might also know this tool so what you

00:07:16,319 --> 00:07:19,280
see

00:07:16,560 --> 00:07:20,479
is webpagetest this is a tool where you

00:07:19,280 --> 00:07:22,479
can dump in your

00:07:20,479 --> 00:07:23,919
website or url and it gives you a bunch

00:07:22,479 --> 00:07:25,680
of performance metrics

00:07:23,919 --> 00:07:27,199
so you see there that i had a speed

00:07:25,680 --> 00:07:29,919
index

00:07:27,199 --> 00:07:31,599
of a second which means that the

00:07:29,919 --> 00:07:33,919
majority of the site on a good

00:07:31,599 --> 00:07:36,639
connection was visible after one second

00:07:33,919 --> 00:07:37,759
and even on a three g connection the

00:07:36,639 --> 00:07:40,479
speed index was

00:07:37,759 --> 00:07:42,319
around four to three seconds and i felt

00:07:40,479 --> 00:07:45,120
good about this

00:07:42,319 --> 00:07:46,400
and when you look at lighthouse scores

00:07:45,120 --> 00:07:48,960
there's this rule

00:07:46,400 --> 00:07:50,319
that usually on the top five of the

00:07:48,960 --> 00:07:51,039
performant websites when you have a

00:07:50,319 --> 00:07:54,720
score

00:07:51,039 --> 00:07:57,840
over 90. so it wasn't a good spot there

00:07:54,720 --> 00:07:58,240
right and of course there was a lot of

00:07:57,840 --> 00:07:59,840
stuff

00:07:58,240 --> 00:08:01,599
included in there a lot of complexity i

00:07:59,840 --> 00:08:02,879
shipped the whole block with http 2

00:08:01,599 --> 00:08:04,319
which is now more or less a common

00:08:02,879 --> 00:08:05,680
standard everything was compressed

00:08:04,319 --> 00:08:08,960
minified i shipped a

00:08:05,680 --> 00:08:10,879
no module a module bridge to ship

00:08:08,960 --> 00:08:13,199
not polyfill javascript for modern

00:08:10,879 --> 00:08:15,599
browsers i had special font handling

00:08:13,199 --> 00:08:17,759
there with font display swap

00:08:15,599 --> 00:08:19,520
i preloaded a bunch of things and of

00:08:17,759 --> 00:08:22,319
course i

00:08:19,520 --> 00:08:24,000
had several bundles everything was super

00:08:22,319 --> 00:08:26,479
nicely splitted

00:08:24,000 --> 00:08:29,759
so that i only ship to the browser and

00:08:26,479 --> 00:08:32,960
the users what they actually care about

00:08:29,759 --> 00:08:32,960
and then one thing happened

00:08:33,200 --> 00:08:40,560
then i saw this website this is a random

00:08:35,839 --> 00:08:42,560
website from italy uh

00:08:40,560 --> 00:08:43,760
and this was trending on hacking use

00:08:42,560 --> 00:08:45,360
actually and when

00:08:43,760 --> 00:08:47,279
i don't know how you feel about that but

00:08:45,360 --> 00:08:47,839
when i click around there there's one

00:08:47,279 --> 00:08:50,160
thing

00:08:47,839 --> 00:08:50,959
it feels super snappy and the fact here

00:08:50,160 --> 00:08:52,480
is

00:08:50,959 --> 00:08:54,000
that it's still maintained so there are

00:08:52,480 --> 00:08:56,800
a lot of gifs and it looks very

00:08:54,000 --> 00:08:58,560
90s even maybe i don't know it looks

00:08:56,800 --> 00:09:01,279
very 90s

00:08:58,560 --> 00:09:03,279
but when you then look under the hood

00:09:01,279 --> 00:09:05,040
the html is not great there are a lot of

00:09:03,279 --> 00:09:09,839
gifs in there

00:09:05,040 --> 00:09:13,440
but what happens when you run lighthouse

00:09:09,839 --> 00:09:15,360
on this site so what happens now is that

00:09:13,440 --> 00:09:17,440
this site is not performing great in

00:09:15,360 --> 00:09:21,279
accessibility best practices or xao

00:09:17,440 --> 00:09:24,000
but it's beating my site

00:09:21,279 --> 00:09:26,480
big times and i spent hours and hours

00:09:24,000 --> 00:09:27,360
and hours tweaking and optimizing my own

00:09:26,480 --> 00:09:28,959
site

00:09:27,360 --> 00:09:31,440
and even the blog that i mentioned

00:09:28,959 --> 00:09:33,200
beforehand which i built

00:09:31,440 --> 00:09:35,200
when i was a developer with one two

00:09:33,200 --> 00:09:36,839
years of experience using jekyll

00:09:35,200 --> 00:09:38,480
and i had no clue what i'm doing was

00:09:36,839 --> 00:09:41,760
outperforming

00:09:38,480 --> 00:09:44,640
my cutting edge website that is

00:09:41,760 --> 00:09:45,200
built on modern technology so i went

00:09:44,640 --> 00:09:47,040
back to

00:09:45,200 --> 00:09:49,440
web page tests and in case you don't

00:09:47,040 --> 00:09:52,080
know you can also go to webpagetest.org

00:09:49,440 --> 00:09:55,120
video and you can just paste a few urls

00:09:52,080 --> 00:09:57,839
and then you get a video like this

00:09:55,120 --> 00:10:00,240
and these two sites were actually faster

00:09:57,839 --> 00:10:02,320
than what i did with all my

00:10:00,240 --> 00:10:03,519
front-end engineering engineering

00:10:02,320 --> 00:10:06,800
knowledge

00:10:03,519 --> 00:10:10,079
so you could now say chef and you just

00:10:06,800 --> 00:10:12,079
messed it up and honestly i think

00:10:10,079 --> 00:10:14,000
that could be but the question that i

00:10:12,079 --> 00:10:16,560
want to ask you is how can it be

00:10:14,000 --> 00:10:19,040
so easy to mess up so when we have a

00:10:16,560 --> 00:10:20,880
detailed look at these three websites

00:10:19,040 --> 00:10:22,079
then you see that oh and i have to move

00:10:20,880 --> 00:10:24,640
the window here a little bit because i

00:10:22,079 --> 00:10:24,640
don't see my

00:10:24,720 --> 00:10:28,720
okay okay then you see that my site

00:10:27,600 --> 00:10:31,680
ships

00:10:28,720 --> 00:10:32,000
overall way more resources when you look

00:10:31,680 --> 00:10:36,320
at the

00:10:32,000 --> 00:10:39,440
index html that i ship it is huge

00:10:36,320 --> 00:10:40,640
the css resources are more or less the

00:10:39,440 --> 00:10:42,320
same

00:10:40,640 --> 00:10:44,240
but when you then look at the javascript

00:10:42,320 --> 00:10:47,519
resources that i'm shipping

00:10:44,240 --> 00:10:50,560
way way more stuff for maybe

00:10:47,519 --> 00:10:52,160
a similar experience image resources

00:10:50,560 --> 00:10:52,800
doesn't really don't really matter in

00:10:52,160 --> 00:10:54,800
here

00:10:52,800 --> 00:10:56,959
and then all these kind of numbers add

00:10:54,800 --> 00:11:00,800
up to this

00:10:56,959 --> 00:11:02,720
worse speed index of my site

00:11:00,800 --> 00:11:04,240
so when you look at the speed index and

00:11:02,720 --> 00:11:06,240
how it is calculated

00:11:04,240 --> 00:11:08,079
you will see here that it is a

00:11:06,240 --> 00:11:09,120
combination basically of a lot of

00:11:08,079 --> 00:11:11,440
different things

00:11:09,120 --> 00:11:13,360
and the speed index just changed a few

00:11:11,440 --> 00:11:15,040
months ago how it was calculated

00:11:13,360 --> 00:11:16,399
so in the newest lighthouse version this

00:11:15,040 --> 00:11:19,519
is how it is calculated

00:11:16,399 --> 00:11:21,200
so it is 15 first contentful paint which

00:11:19,519 --> 00:11:22,000
is the first thing that has a meaning on

00:11:21,200 --> 00:11:25,040
the screen

00:11:22,000 --> 00:11:26,480
then it's 15 times interactive which

00:11:25,040 --> 00:11:28,240
means that all the javascript is

00:11:26,480 --> 00:11:29,920
downloaded and parsed then 50

00:11:28,240 --> 00:11:32,399
of the speed index which is kind of the

00:11:29,920 --> 00:11:34,320
completeness of the screen

00:11:32,399 --> 00:11:36,560
then the largest contentful paint which

00:11:34,320 --> 00:11:38,079
goes for this bumpy experience right you

00:11:36,560 --> 00:11:39,920
don't want to have

00:11:38,079 --> 00:11:42,399
images kicking in so that you click the

00:11:39,920 --> 00:11:44,480
wrong thing then we have 20 percent

00:11:42,399 --> 00:11:46,880
um time or consideration there of the

00:11:44,480 --> 00:11:49,200
total blocking time

00:11:46,880 --> 00:11:50,959
and then we have a cumulative layout

00:11:49,200 --> 00:11:53,120
shift which also goes for this

00:11:50,959 --> 00:11:56,079
bumpy experience and when you look at

00:11:53,120 --> 00:11:58,880
these metrics you will see that

00:11:56,079 --> 00:12:01,440
actually 40 of these are bound to

00:11:58,880 --> 00:12:03,120
javascript because javascript is single

00:12:01,440 --> 00:12:04,800
threaded and it runs on the main thread

00:12:03,120 --> 00:12:06,720
if you ship a lot of javascript

00:12:04,800 --> 00:12:08,079
this will block and harm the user

00:12:06,720 --> 00:12:09,279
experience

00:12:08,079 --> 00:12:11,120
if you want to learn a little bit more

00:12:09,279 --> 00:12:12,720
about how lighthouse works and how this

00:12:11,120 --> 00:12:15,760
whole thing is calculated

00:12:12,720 --> 00:12:16,560
um carolina wrote a very nice blog post

00:12:15,760 --> 00:12:18,800
there on

00:12:16,560 --> 00:12:20,560
the calibre blog which is also another

00:12:18,800 --> 00:12:23,519
web performance monitoring tool

00:12:20,560 --> 00:12:24,000
and paul irish published this lighthouse

00:12:23,519 --> 00:12:26,079
scoring

00:12:24,000 --> 00:12:28,320
calculator that you can check out so if

00:12:26,079 --> 00:12:31,519
you wonder what it takes to get from

00:12:28,320 --> 00:12:32,800
92 to 93 um you can tweak and play

00:12:31,519 --> 00:12:35,200
around with these numbers and you will

00:12:32,800 --> 00:12:38,160
find out how you can have a better

00:12:35,200 --> 00:12:38,959
lighthouse score so these javascript

00:12:38,160 --> 00:12:41,600
resources and

00:12:38,959 --> 00:12:43,279
these javascript um numbers are

00:12:41,600 --> 00:12:46,160
important because

00:12:43,279 --> 00:12:47,200
this is the effect or the impact of

00:12:46,160 --> 00:12:48,959
javascript

00:12:47,200 --> 00:12:50,240
so what you see here is two websites

00:12:48,959 --> 00:12:51,920
that are loaded

00:12:50,240 --> 00:12:53,519
and due to the fact that they ship

00:12:51,920 --> 00:12:55,760
static html

00:12:53,519 --> 00:12:56,720
it looks like they are ready but they

00:12:55,760 --> 00:12:59,279
are not

00:12:56,720 --> 00:13:00,959
they are unresponsive and depending on

00:12:59,279 --> 00:13:02,399
the connection or the device that your

00:13:00,959 --> 00:13:05,760
users

00:13:02,399 --> 00:13:07,920
are on this can really affect

00:13:05,760 --> 00:13:10,399
the overall user experience because a

00:13:07,920 --> 00:13:13,600
normal non-technical user

00:13:10,399 --> 00:13:14,560
does not understand why this button

00:13:13,600 --> 00:13:18,079
click

00:13:14,560 --> 00:13:20,480
doesn't work and when you have a look at

00:13:18,079 --> 00:13:21,360
some statistics on how long it actually

00:13:20,480 --> 00:13:23,839
takes

00:13:21,360 --> 00:13:24,399
so what a lot of people do and this is

00:13:23,839 --> 00:13:26,560
probably

00:13:24,399 --> 00:13:28,639
sometimes myself included is testing

00:13:26,560 --> 00:13:31,200
javascript execution times on

00:13:28,639 --> 00:13:32,720
fairly recent devices this is far away

00:13:31,200 --> 00:13:34,880
from being the reality

00:13:32,720 --> 00:13:36,320
and what you see there is a blog post by

00:13:34,880 --> 00:13:37,360
tim cutler who does a lot of web

00:13:36,320 --> 00:13:39,279
performance stuff

00:13:37,360 --> 00:13:40,480
and you see here that the javascript

00:13:39,279 --> 00:13:43,040
execution

00:13:40,480 --> 00:13:44,480
cpu time for for example for react

00:13:43,040 --> 00:13:49,680
projects ranges from

00:13:44,480 --> 00:13:52,800
5 seconds to 20 seconds due to

00:13:49,680 --> 00:13:54,800
low end devices and i want to ask you

00:13:52,800 --> 00:13:58,800
the question do you wait 20 seconds

00:13:54,800 --> 00:14:01,360
for something to become responsive i

00:13:58,800 --> 00:14:03,120
i really have to have to want to see to

00:14:01,360 --> 00:14:04,880
wait that long

00:14:03,120 --> 00:14:06,639
and then there are kind of examples like

00:14:04,880 --> 00:14:08,399
for example netflix and they had

00:14:06,639 --> 00:14:10,560
something in their login flow

00:14:08,399 --> 00:14:12,000
which was a client-side uh react

00:14:10,560 --> 00:14:13,199
application

00:14:12,000 --> 00:14:15,920
and they found out that when they

00:14:13,199 --> 00:14:17,440
dropped this and they went with some

00:14:15,920 --> 00:14:18,320
vanilla javascript because when you

00:14:17,440 --> 00:14:20,240
think of it

00:14:18,320 --> 00:14:22,320
a signup form is a little bit of

00:14:20,240 --> 00:14:25,680
validation it's a little bit

00:14:22,320 --> 00:14:27,920
of ajax if you want to do that

00:14:25,680 --> 00:14:29,600
you don't necessarily need a framework

00:14:27,920 --> 00:14:30,399
for that and they found out that they

00:14:29,600 --> 00:14:33,440
could

00:14:30,399 --> 00:14:34,800
drop the time to interactive by 50 and

00:14:33,440 --> 00:14:37,279
when you're building

00:14:34,800 --> 00:14:38,720
something like netflix the sign up

00:14:37,279 --> 00:14:41,040
experience

00:14:38,720 --> 00:14:42,639
is extremely important for you because

00:14:41,040 --> 00:14:44,639
this is why you're building this and get

00:14:42,639 --> 00:14:46,079
people in the platform

00:14:44,639 --> 00:14:47,839
and when you look at the overall page

00:14:46,079 --> 00:14:50,800
rate you always have to consider that

00:14:47,839 --> 00:14:51,760
150 kilobytes of an image is nothing

00:14:50,800 --> 00:14:55,120
compared

00:14:51,760 --> 00:14:56,720
to 150 kilobytes of javascript

00:14:55,120 --> 00:14:58,720
because javascript has to be download

00:14:56,720 --> 00:15:02,160
executed and parsed

00:14:58,720 --> 00:15:05,920
page rate is not equal page rate

00:15:02,160 --> 00:15:08,959
so i showed you the my very very heavy

00:15:05,920 --> 00:15:11,199
index html file so when i

00:15:08,959 --> 00:15:13,000
initially released my new block redesign

00:15:11,199 --> 00:15:14,800
i tweeted it out and a person

00:15:13,000 --> 00:15:16,720
[Music]

00:15:14,800 --> 00:15:19,120
so i hang out on twitter as alex said

00:15:16,720 --> 00:15:21,680
right so a person showed up was like 300

00:15:19,120 --> 00:15:25,360
kilobyte in your html5

00:15:21,680 --> 00:15:26,079
what are you doing and what i did

00:15:25,360 --> 00:15:29,519
basically is

00:15:26,079 --> 00:15:31,120
that i argued myself into or out of this

00:15:29,519 --> 00:15:33,360
discussion because i told

00:15:31,120 --> 00:15:34,240
the person that it was a very modern

00:15:33,360 --> 00:15:36,800
tech stack

00:15:34,240 --> 00:15:37,839
it um follows best practices for the

00:15:36,800 --> 00:15:40,480
current

00:15:37,839 --> 00:15:41,600
javascript ecosystem and after gzipped

00:15:40,480 --> 00:15:44,959
it doesn't matter

00:15:41,600 --> 00:15:46,720
anymore anyways so basically what i did

00:15:44,959 --> 00:15:48,079
there is that i said it's great because

00:15:46,720 --> 00:15:51,040
it's fast and it's still

00:15:48,079 --> 00:15:54,000
lighter than the rest of the internet

00:15:51,040 --> 00:15:56,160
but now when i look back a few years

00:15:54,000 --> 00:15:57,360
what i actually did at that moment was

00:15:56,160 --> 00:15:59,519
like

00:15:57,360 --> 00:16:02,399
i'm just really digging the tech stack

00:15:59,519 --> 00:16:04,320
um and i tried to argue myself

00:16:02,399 --> 00:16:07,759
and make a point for this architecture

00:16:04,320 --> 00:16:10,399
for a block which is static contact

00:16:07,759 --> 00:16:11,440
so what was in there so i had this is

00:16:10,399 --> 00:16:12,959
the initial page

00:16:11,440 --> 00:16:15,839
at the time two or three years ago and

00:16:12,959 --> 00:16:18,560
what was in there something like this

00:16:15,839 --> 00:16:20,880
so this is a common architecture for um

00:16:18,560 --> 00:16:23,040
universal or isomorphic javascript apps

00:16:20,880 --> 00:16:24,720
so you run javascript on the server you

00:16:23,040 --> 00:16:26,480
use some data and then you have to tell

00:16:24,720 --> 00:16:28,399
the client javascript

00:16:26,480 --> 00:16:31,120
what data was actually used to render

00:16:28,399 --> 00:16:33,920
this html

00:16:31,120 --> 00:16:35,759
so what i decided is that i enlivened

00:16:33,920 --> 00:16:38,639
and pre-loaded

00:16:35,759 --> 00:16:41,279
articles with an average session length

00:16:38,639 --> 00:16:44,000
of 1.1 pages

00:16:41,279 --> 00:16:46,560
and why did i do that i did that for

00:16:44,000 --> 00:16:48,839
better performance

00:16:46,560 --> 00:16:51,120
just so that it is super snappy

00:16:48,839 --> 00:16:54,240
initially

00:16:51,120 --> 00:16:56,560
and then now i feel like when you have a

00:16:54,240 --> 00:17:00,079
technology stack like this

00:16:56,560 --> 00:17:01,920
it is very very hard to make a very

00:17:00,079 --> 00:17:04,000
snappy website

00:17:01,920 --> 00:17:04,959
like the website from this italian

00:17:04,000 --> 00:17:07,839
person

00:17:04,959 --> 00:17:09,199
and with a lot of gifts in there but i

00:17:07,839 --> 00:17:12,319
want to question you here

00:17:09,199 --> 00:17:15,439
is it really that hard so

00:17:12,319 --> 00:17:19,760
phil hogsworth um from from nepify he is

00:17:15,439 --> 00:17:22,319
one of the big jam stack ambassadors

00:17:19,760 --> 00:17:23,679
he usually says that he builds fast

00:17:22,319 --> 00:17:26,319
websites and the only thing

00:17:23,679 --> 00:17:27,199
that he does is that he is not adding

00:17:26,319 --> 00:17:30,799
something

00:17:27,199 --> 00:17:32,400
that makes it slow and he says that the

00:17:30,799 --> 00:17:33,120
work was usually done before you got

00:17:32,400 --> 00:17:35,840
there there's

00:17:33,120 --> 00:17:37,039
not much to happen or to do inside of

00:17:35,840 --> 00:17:38,400
the client side

00:17:37,039 --> 00:17:40,720
and i took this approach then with

00:17:38,400 --> 00:17:44,000
another side project which was um

00:17:40,720 --> 00:17:45,520
tiny helpers.dev so i found out that i

00:17:44,000 --> 00:17:48,240
hired a lot of bookmarks of little

00:17:45,520 --> 00:17:49,760
online tools um that i never

00:17:48,240 --> 00:17:52,160
that you usually don't discover because

00:17:49,760 --> 00:17:53,440
these online tools don't rank high in

00:17:52,160 --> 00:17:55,200
google because they are

00:17:53,440 --> 00:17:56,720
just a simple tool so i built this

00:17:55,200 --> 00:17:58,480
collection um of

00:17:56,720 --> 00:18:00,559
online tools so if you're looking for

00:17:58,480 --> 00:18:03,120
tiny helpers you can check that out

00:18:00,559 --> 00:18:05,919
and i built this with 11t and look at

00:18:03,120 --> 00:18:10,320
this performance score

00:18:05,919 --> 00:18:12,480
it is 100 full step

00:18:10,320 --> 00:18:15,919
and the thing with the 11t is that it is

00:18:12,480 --> 00:18:19,280
one of these new static set generators

00:18:15,919 --> 00:18:20,799
that doesn't add all this overhead

00:18:19,280 --> 00:18:22,640
that usually comes with the current

00:18:20,799 --> 00:18:25,760
javascript ecosystem

00:18:22,640 --> 00:18:27,039
and zac leet who is maintaining 11t he

00:18:25,760 --> 00:18:29,039
also

00:18:27,039 --> 00:18:30,559
has this 11t performance leaderboard and

00:18:29,039 --> 00:18:34,080
you see here that

00:18:30,559 --> 00:18:36,400
11 11 sides usually have or have a

00:18:34,080 --> 00:18:38,160
median lighthouse performance score of a

00:18:36,400 --> 00:18:41,200
hundred

00:18:38,160 --> 00:18:42,000
and this is just because 11t is pure it

00:18:41,200 --> 00:18:47,120
doesn't come with

00:18:42,000 --> 00:18:48,799
all the things that makes websites slow

00:18:47,120 --> 00:18:50,720
so a few years ago i was giving a talk

00:18:48,799 --> 00:18:52,240
and i had this statement on stage

00:18:50,720 --> 00:18:54,400
in front of a few hundred people and i

00:18:52,240 --> 00:18:57,360
said that every website is a web app and

00:18:54,400 --> 00:19:00,160
every web app is a website

00:18:57,360 --> 00:19:01,679
well guess what it's now 2020 and i

00:19:00,160 --> 00:19:05,280
couldn't disagree

00:19:01,679 --> 00:19:06,880
more with past me because where's the

00:19:05,280 --> 00:19:10,080
user's benefit

00:19:06,880 --> 00:19:11,840
of such overhead

00:19:10,080 --> 00:19:13,840
so let's dive deeper a little bit into

00:19:11,840 --> 00:19:15,840
this topic and look at the common best

00:19:13,840 --> 00:19:19,520
practice of universal javascript

00:19:15,840 --> 00:19:21,760
apps for content websites

00:19:19,520 --> 00:19:22,960
so when i started um there was this

00:19:21,760 --> 00:19:25,840
thing out there that is called

00:19:22,960 --> 00:19:26,640
was called html5 boilerplate which was

00:19:25,840 --> 00:19:28,960
kind of this

00:19:26,640 --> 00:19:30,799
bootstrapping template that you used

00:19:28,960 --> 00:19:33,840
with a lot of best practices

00:19:30,799 --> 00:19:35,120
and it had some html and has had two

00:19:33,840 --> 00:19:37,520
script files which were the

00:19:35,120 --> 00:19:39,679
main or vendor file and a plugins file

00:19:37,520 --> 00:19:42,240
so this was all it had

00:19:39,679 --> 00:19:43,360
and now in 10 years we switched to

00:19:42,240 --> 00:19:46,480
something like this

00:19:43,360 --> 00:19:48,480
to several bundles several inlined

00:19:46,480 --> 00:19:50,480
data points everything a little bit of

00:19:48,480 --> 00:19:51,760
preloading and the main reason as i

00:19:50,480 --> 00:19:53,039
already mentioned is

00:19:51,760 --> 00:19:55,280
that the reason for that is that the

00:19:53,039 --> 00:19:56,160
same code runs on the server and on the

00:19:55,280 --> 00:19:57,840
client

00:19:56,160 --> 00:19:59,440
and now after doing this for several

00:19:57,840 --> 00:20:02,400
years i'm still

00:19:59,440 --> 00:20:03,520
super stoked about this because i think

00:20:02,400 --> 00:20:06,240
technically

00:20:03,520 --> 00:20:08,159
it is beautiful but this also means that

00:20:06,240 --> 00:20:08,799
the same code runs on the server and the

00:20:08,159 --> 00:20:10,880
client

00:20:08,799 --> 00:20:12,240
your content for blog sites for

00:20:10,880 --> 00:20:12,799
newspaper sites for all these kind of

00:20:12,240 --> 00:20:15,679
things that

00:20:12,799 --> 00:20:17,440
are not actual applications your content

00:20:15,679 --> 00:20:20,000
is in html

00:20:17,440 --> 00:20:20,720
and your content is in one form or

00:20:20,000 --> 00:20:22,799
another

00:20:20,720 --> 00:20:24,240
in javascript you're basically

00:20:22,799 --> 00:20:27,360
duplicating

00:20:24,240 --> 00:20:31,120
everything and i want to ask you if

00:20:27,360 --> 00:20:32,559
this is really the best way for the user

00:20:31,120 --> 00:20:35,039
another argument for these kind of

00:20:32,559 --> 00:20:37,120
architectures is

00:20:35,039 --> 00:20:38,640
it's super nice because it opens doors

00:20:37,120 --> 00:20:40,000
to progressive enhancement

00:20:38,640 --> 00:20:41,760
so in case you're not familiar with the

00:20:40,000 --> 00:20:42,720
term of progressive enhancement the idea

00:20:41,760 --> 00:20:45,120
is as follows

00:20:42,720 --> 00:20:46,880
you ship a baseline functionality and

00:20:45,120 --> 00:20:48,880
everybody picks always stairs as an

00:20:46,880 --> 00:20:50,799
example so i'm rolling with this one too

00:20:48,880 --> 00:20:52,400
so the idea is that you ship a baseline

00:20:50,799 --> 00:20:55,280
functionality and then you

00:20:52,400 --> 00:20:56,799
ship some javascript or additional stuff

00:20:55,280 --> 00:20:59,840
on top to it and then you have an

00:20:56,799 --> 00:21:01,280
enhanced experience and if the

00:20:59,840 --> 00:21:04,640
enhancement fails every

00:21:01,280 --> 00:21:04,640
everything still works

00:21:05,440 --> 00:21:10,000
so now i was traveling quite a little

00:21:08,000 --> 00:21:12,000
bit pre-covered

00:21:10,000 --> 00:21:14,159
and how often have you seen something

00:21:12,000 --> 00:21:16,799
like this in the wild

00:21:14,159 --> 00:21:18,240
i have seen it more often than i would

00:21:16,799 --> 00:21:20,799
have loved to

00:21:18,240 --> 00:21:22,240
and let me show you an example of a

00:21:20,799 --> 00:21:24,559
progressive

00:21:22,240 --> 00:21:26,240
progressively enhanced website so what

00:21:24,559 --> 00:21:27,679
you see here is a perf tooling this is

00:21:26,240 --> 00:21:28,720
something that i used to maintain but i

00:21:27,679 --> 00:21:30,320
don't do anymore

00:21:28,720 --> 00:21:31,840
so this is another collection of stuff

00:21:30,320 --> 00:21:34,480
because i don't like bookmarks

00:21:31,840 --> 00:21:35,360
you see that there's a search you can

00:21:34,480 --> 00:21:37,039
type something in

00:21:35,360 --> 00:21:39,200
it updates the url and then you can

00:21:37,039 --> 00:21:40,080
refresh so what is happening here this

00:21:39,200 --> 00:21:43,520
is a

00:21:40,080 --> 00:21:45,120
normal html form and what it does is

00:21:43,520 --> 00:21:46,720
that it enriches the experience with

00:21:45,120 --> 00:21:48,159
javascript so when you interact with the

00:21:46,720 --> 00:21:49,679
search form it updates the search

00:21:48,159 --> 00:21:52,320
results below

00:21:49,679 --> 00:21:53,440
it updates the url bar so when you now

00:21:52,320 --> 00:21:55,200
refresh

00:21:53,440 --> 00:21:56,640
you get the same result because this is

00:21:55,200 --> 00:21:59,440
also server rendered

00:21:56,640 --> 00:22:00,320
and in case every javascript is failing

00:21:59,440 --> 00:22:02,880
you can still

00:22:00,320 --> 00:22:04,400
submit this form and you get to the same

00:22:02,880 --> 00:22:08,080
result

00:22:04,400 --> 00:22:11,200
this works no matter what

00:22:08,080 --> 00:22:12,240
because at some point javascript

00:22:11,200 --> 00:22:14,880
requests

00:22:12,240 --> 00:22:16,960
will fail and when you're shipping

00:22:14,880 --> 00:22:18,640
something like on the scale of buzzfeed

00:22:16,960 --> 00:22:21,200
and they monitored that just a little

00:22:18,640 --> 00:22:23,039
bit and they found or they saw that 30

00:22:21,200 --> 00:22:23,440
million requests for javascript will

00:22:23,039 --> 00:22:25,679
just

00:22:23,440 --> 00:22:26,960
time out because there's always this big

00:22:25,679 --> 00:22:29,280
question mark in the middle

00:22:26,960 --> 00:22:30,240
which is the network layer your

00:22:29,280 --> 00:22:33,520
javascript

00:22:30,240 --> 00:22:34,559
will fail eventually and then there's

00:22:33,520 --> 00:22:36,480
this point

00:22:34,559 --> 00:22:38,000
where people say well nobody has

00:22:36,480 --> 00:22:41,520
javascript disabled

00:22:38,000 --> 00:22:42,400
right which is not true because every

00:22:41,520 --> 00:22:45,840
user has

00:22:42,400 --> 00:22:49,039
javascript is non-javascript users

00:22:45,840 --> 00:22:51,600
until the javascript is downloaded

00:22:49,039 --> 00:22:53,280
parsed and executed

00:22:51,600 --> 00:22:55,679
and another example that you probably

00:22:53,280 --> 00:22:57,760
use every day is github.com

00:22:55,679 --> 00:23:00,159
so when you go to github.com this still

00:22:57,760 --> 00:23:02,480
works this is progressively enhanced

00:23:00,159 --> 00:23:03,919
they have one endpoint there for posting

00:23:02,480 --> 00:23:06,400
comments which handles the

00:23:03,919 --> 00:23:07,600
old-school form submit but also an ajax

00:23:06,400 --> 00:23:09,360
submit

00:23:07,600 --> 00:23:10,640
and they have some old-school links on

00:23:09,360 --> 00:23:12,159
top

00:23:10,640 --> 00:23:14,559
and i think this is beautiful is anyone

00:23:12,159 --> 00:23:16,240
bothered by this no because it just

00:23:14,559 --> 00:23:18,640
works and they are not shipping a

00:23:16,240 --> 00:23:21,200
framework a lot of javascript for that

00:23:18,640 --> 00:23:22,559
i'm super super duper happy with

00:23:21,200 --> 00:23:25,440
github's experience

00:23:22,559 --> 00:23:25,919
because i think that a good site should

00:23:25,440 --> 00:23:28,480
just

00:23:25,919 --> 00:23:30,480
work so when we think about the idea of

00:23:28,480 --> 00:23:33,039
progressive enhancement

00:23:30,480 --> 00:23:34,799
what's the enhancement that we have out

00:23:33,039 --> 00:23:37,039
there in the wild

00:23:34,799 --> 00:23:38,159
so before i show you the the next slide

00:23:37,039 --> 00:23:40,720
i don't want to pick on

00:23:38,159 --> 00:23:42,400
any framework too much um it's just i

00:23:40,720 --> 00:23:45,360
had to pick something here

00:23:42,400 --> 00:23:46,159
so when we have a look at the react.js

00:23:45,360 --> 00:23:49,200
docs

00:23:46,159 --> 00:23:51,760
what you see here is react.js.org loaded

00:23:49,200 --> 00:23:53,919
on a fast 3g connection

00:23:51,760 --> 00:23:55,760
and you can see there that the

00:23:53,919 --> 00:23:57,440
navigation is fairly

00:23:55,760 --> 00:23:59,360
snappy when you click on something after

00:23:57,440 --> 00:24:01,440
it is loaded

00:23:59,360 --> 00:24:02,960
but let me show you the same thing with

00:24:01,440 --> 00:24:04,960
javascript disabled

00:24:02,960 --> 00:24:07,840
so you load the whole thing and now you

00:24:04,960 --> 00:24:10,400
click around and i would argue

00:24:07,840 --> 00:24:11,919
that the experience is more or less the

00:24:10,400 --> 00:24:13,760
same here

00:24:11,919 --> 00:24:15,520
the difference is in what is actually

00:24:13,760 --> 00:24:18,960
loaded so

00:24:15,520 --> 00:24:21,360
with javascript react.js.org which is a

00:24:18,960 --> 00:24:23,279
static documentation site

00:24:21,360 --> 00:24:24,720
loads uncompressed one megabyte of

00:24:23,279 --> 00:24:26,960
resources

00:24:24,720 --> 00:24:28,640
without javascript it's only 175

00:24:26,960 --> 00:24:32,640
kilobytes

00:24:28,640 --> 00:24:36,880
and i've even after four navigations

00:24:32,640 --> 00:24:40,080
the without javascript version is still

00:24:36,880 --> 00:24:41,840
much much lighter than the other one

00:24:40,080 --> 00:24:43,520
and i really don't want to nitpick on

00:24:41,840 --> 00:24:45,200
anyone here or doing something that

00:24:43,520 --> 00:24:47,440
someone is doing anything

00:24:45,200 --> 00:24:48,880
terrible here because i am guilty of

00:24:47,440 --> 00:24:51,200
that too

00:24:48,880 --> 00:24:52,080
i did that for years because i wanted to

00:24:51,200 --> 00:24:56,240
use cutting-edge

00:24:52,080 --> 00:24:59,200
technology but that does that approach

00:24:56,240 --> 00:25:00,960
really improve user experience i'm not

00:24:59,200 --> 00:25:03,600
really sure about that anymore

00:25:00,960 --> 00:25:04,640
but i can be really sure that sometimes

00:25:03,600 --> 00:25:07,120
it's harming

00:25:04,640 --> 00:25:09,120
user experience so what you see here is

00:25:07,120 --> 00:25:12,640
a screenshot of my phone

00:25:09,120 --> 00:25:14,240
and i was in the ukraine at the time and

00:25:12,640 --> 00:25:15,760
this is in german i will translate it in

00:25:14,240 --> 00:25:17,919
a second so what my mobile provider

00:25:15,760 --> 00:25:20,640
basically tells me there is

00:25:17,919 --> 00:25:21,440
stefan you get six megabytes for two

00:25:20,640 --> 00:25:25,520
euros

00:25:21,440 --> 00:25:28,559
but you have to use it in 24 hours

00:25:25,520 --> 00:25:29,520
this is a joke the average website today

00:25:28,559 --> 00:25:31,840
is two

00:25:29,520 --> 00:25:33,919
megabytes already and now think about

00:25:31,840 --> 00:25:35,840
this i'm in a foreign country

00:25:33,919 --> 00:25:37,840
i probably don't speak the language and

00:25:35,840 --> 00:25:40,960
i need some information

00:25:37,840 --> 00:25:44,159
and now this website is 2.5 meg heavy

00:25:40,960 --> 00:25:46,880
then it's definitely harming my user

00:25:44,159 --> 00:25:49,200
experience at that moment in time

00:25:46,880 --> 00:25:51,120
and when you go to http archive so this

00:25:49,200 --> 00:25:51,760
is a website that monitors the state of

00:25:51,120 --> 00:25:53,919
the web

00:25:51,760 --> 00:25:56,240
you will find out that websites are just

00:25:53,919 --> 00:25:57,840
growing and growing and growing

00:25:56,240 --> 00:26:00,320
and we reached now the point of a

00:25:57,840 --> 00:26:03,039
website that is

00:26:00,320 --> 00:26:04,960
two megabyte heavy for displaying some

00:26:03,039 --> 00:26:06,720
content

00:26:04,960 --> 00:26:08,240
which i think is surprising and

00:26:06,720 --> 00:26:09,679
depending on

00:26:08,240 --> 00:26:11,600
where you live in the world you also

00:26:09,679 --> 00:26:12,880
have to consider that people depending

00:26:11,600 --> 00:26:14,880
on where they live

00:26:12,880 --> 00:26:15,919
they pay different amount of money for

00:26:14,880 --> 00:26:18,000
data

00:26:15,919 --> 00:26:19,200
so for example i was once in canada and

00:26:18,000 --> 00:26:22,799
mobile plans are just

00:26:19,200 --> 00:26:24,240
very expensive there and they care

00:26:22,799 --> 00:26:25,919
about like websites because they're

00:26:24,240 --> 00:26:27,600
paying so much money

00:26:25,919 --> 00:26:29,840
so depending on where you are in the

00:26:27,600 --> 00:26:33,440
world web performance

00:26:29,840 --> 00:26:37,200
matters more than you might be aware of

00:26:33,440 --> 00:26:38,080
so what we do very very often in 2019

00:26:37,200 --> 00:26:41,279
and 2020

00:26:38,080 --> 00:26:45,360
is that we ship more data for the same

00:26:41,279 --> 00:26:48,400
experience and maybe just maybe

00:26:45,360 --> 00:26:51,760
ad frameworks should be for apps

00:26:48,400 --> 00:26:54,880
after all i mean facebook is building

00:26:51,760 --> 00:26:56,400
react and facebook i have no no

00:26:54,880 --> 00:26:58,000
insights about the internals but i would

00:26:56,400 --> 00:27:01,760
assume that this

00:26:58,000 --> 00:27:04,320
is an overly complex application

00:27:01,760 --> 00:27:05,039
or i'm also personally i'm a gmail

00:27:04,320 --> 00:27:07,360
fanboy

00:27:05,039 --> 00:27:08,400
i think gmail is a beautiful piece of

00:27:07,360 --> 00:27:09,840
software

00:27:08,400 --> 00:27:11,840
but let me tell you something about

00:27:09,840 --> 00:27:14,880
gmail gmail is

00:27:11,840 --> 00:27:16,480
five megabytes heavy this is quite

00:27:14,880 --> 00:27:18,720
something

00:27:16,480 --> 00:27:20,640
the cool thing about gmail though is

00:27:18,720 --> 00:27:22,880
that when i sit in the trains

00:27:20,640 --> 00:27:25,120
uh in in it's the deutsche bahn is the

00:27:22,880 --> 00:27:28,880
service called in here in germany

00:27:25,120 --> 00:27:31,200
i can also go for the low end version

00:27:28,880 --> 00:27:32,000
which works without javascript and look

00:27:31,200 --> 00:27:34,640
at this this is

00:27:32,000 --> 00:27:36,480
40 kilobytes this is what i care about

00:27:34,640 --> 00:27:37,600
when i'm on a spotty connection when i'm

00:27:36,480 --> 00:27:39,200
paying a lot of data

00:27:37,600 --> 00:27:43,120
because i just want to read and send

00:27:39,200 --> 00:27:43,120
emails this is beautiful

00:27:43,360 --> 00:27:47,279
so when you look how the distribution of

00:27:45,279 --> 00:27:49,360
libraries

00:27:47,279 --> 00:27:51,679
is today you will find out that it

00:27:49,360 --> 00:27:53,200
always feels like everything is built

00:27:51,679 --> 00:27:56,559
with the views the act

00:27:53,200 --> 00:27:58,080
the reacts the swelters the angulars

00:27:56,559 --> 00:27:59,520
but at the end the majority of the

00:27:58,080 --> 00:28:01,440
websites out there is still running on

00:27:59,520 --> 00:28:03,279
jquery

00:28:01,440 --> 00:28:05,120
and this doesn't have to be a bad thing

00:28:03,279 --> 00:28:07,520
necessarily and when you look at the

00:28:05,120 --> 00:28:10,880
framework distribution you will see that

00:28:07,520 --> 00:28:15,600
react and view are not as popular

00:28:10,880 --> 00:28:15,600
as it feels in the twitter sphere

00:28:15,760 --> 00:28:18,960
the web is really not as cutting edge as

00:28:17,919 --> 00:28:22,480
it seems

00:28:18,960 --> 00:28:24,559
and i think that now i have a new

00:28:22,480 --> 00:28:27,600
baseline for myself and i think that

00:28:24,559 --> 00:28:31,600
boring is usually beautiful

00:28:27,600 --> 00:28:34,000
and it is fast another benefit

00:28:31,600 --> 00:28:35,520
that comes with universal javascript

00:28:34,000 --> 00:28:38,159
frameworks is that

00:28:35,520 --> 00:28:39,919
we are allowed or we can do client-side

00:28:38,159 --> 00:28:41,919
routing

00:28:39,919 --> 00:28:44,159
and this comes with a burden too because

00:28:41,919 --> 00:28:46,080
when you do client-side routing you have

00:28:44,159 --> 00:28:48,880
to re-implement and you have to fix

00:28:46,080 --> 00:28:50,320
accessibility

00:28:48,880 --> 00:28:51,840
additional to that you have to first of

00:28:50,320 --> 00:28:52,320
all implement a lot of spinners right

00:28:51,840 --> 00:28:54,320
this is

00:28:52,320 --> 00:28:56,320
this is how we navigate the web today we

00:28:54,320 --> 00:28:58,000
just see a spinner there spinning there

00:28:56,320 --> 00:28:59,760
but the navigation itself is super

00:28:58,000 --> 00:29:02,880
snappy but what you have to

00:28:59,760 --> 00:29:04,640
consider is when you just update the url

00:29:02,880 --> 00:29:07,200
is that you're basically breaking the

00:29:04,640 --> 00:29:09,520
accessibility that the browser gives you

00:29:07,200 --> 00:29:11,200
for free so if you're running a

00:29:09,520 --> 00:29:12,559
client-side javascript framework to

00:29:11,200 --> 00:29:14,880
really make it work

00:29:12,559 --> 00:29:16,559
for uh for assistive technology for

00:29:14,880 --> 00:29:17,039
example you have to do a few things and

00:29:16,559 --> 00:29:19,440
the

00:29:17,039 --> 00:29:21,039
the friends at gatsby did a really nice

00:29:19,440 --> 00:29:22,720
user research about this

00:29:21,039 --> 00:29:24,559
so you have to do two things you have to

00:29:22,720 --> 00:29:26,080
first of all provide a skip link so that

00:29:24,559 --> 00:29:27,840
people can navigate what

00:29:26,080 --> 00:29:29,200
just happened because for assistive

00:29:27,840 --> 00:29:30,720
technology it's very hard when you just

00:29:29,200 --> 00:29:32,399
replace the dom

00:29:30,720 --> 00:29:34,480
and then you have to include an area

00:29:32,399 --> 00:29:36,880
live region that basically

00:29:34,480 --> 00:29:37,600
tells the person that just clicked a

00:29:36,880 --> 00:29:40,559
link

00:29:37,600 --> 00:29:42,399
hey everything changed here by the way

00:29:40,559 --> 00:29:43,760
this is a lot of work that we have to be

00:29:42,399 --> 00:29:46,320
aware of

00:29:43,760 --> 00:29:47,679
when we go client-side routing and maybe

00:29:46,320 --> 00:29:49,760
it's not needed

00:29:47,679 --> 00:29:50,880
on my blog i use client-side routing to

00:29:49,760 --> 00:29:53,600
do this transition

00:29:50,880 --> 00:29:54,080
from one page to the other i'm not sure

00:29:53,600 --> 00:29:56,240
how many

00:29:54,080 --> 00:29:58,880
people actually enjoyed that and i'm not

00:29:56,240 --> 00:30:00,799
sure about the value it brought

00:29:58,880 --> 00:30:03,360
there's one case though where i think

00:30:00,799 --> 00:30:05,200
that client-side navigation

00:30:03,360 --> 00:30:07,440
is preferred it is preferred for

00:30:05,200 --> 00:30:10,159
experiences like this

00:30:07,440 --> 00:30:12,000
beautiful ui that does something that

00:30:10,159 --> 00:30:13,679
makes you smile because it's just

00:30:12,000 --> 00:30:15,600
nice and fun to interact with the

00:30:13,679 --> 00:30:18,320
website and this is

00:30:15,600 --> 00:30:20,640
possible with web today so what you see

00:30:18,320 --> 00:30:21,760
here is a prototype by sarah drazna this

00:30:20,640 --> 00:30:24,000
is built in view

00:30:21,760 --> 00:30:25,440
i think it's beautiful i would love to

00:30:24,000 --> 00:30:28,480
see interactions

00:30:25,440 --> 00:30:30,640
like this when i browse the web but this

00:30:28,480 --> 00:30:33,360
is not what we're using client-side

00:30:30,640 --> 00:30:34,880
navigation for we usually do a little

00:30:33,360 --> 00:30:37,840
transition from a to b

00:30:34,880 --> 00:30:40,320
and replace the dom and even ryan

00:30:37,840 --> 00:30:41,120
florence who is the co-author of react

00:30:40,320 --> 00:30:43,440
router

00:30:41,120 --> 00:30:45,279
once said that there's a chance that he

00:30:43,440 --> 00:30:48,080
believes that client-side routing is

00:30:45,279 --> 00:30:50,080
usually not preferred

00:30:48,080 --> 00:30:51,520
and he's a big part of this whole

00:30:50,080 --> 00:30:52,960
ecosystem

00:30:51,520 --> 00:30:54,240
but there are also cool examples out

00:30:52,960 --> 00:30:56,480
there so for example when you go to the

00:30:54,240 --> 00:30:59,600
vue.js documentation

00:30:56,480 --> 00:31:02,000
you will find out that vue.js.org is not

00:30:59,600 --> 00:31:03,279
using client-side navigation

00:31:02,000 --> 00:31:05,279
because they found out that the

00:31:03,279 --> 00:31:08,799
navigation with setting html

00:31:05,279 --> 00:31:10,240
is as snappy and is more accessible

00:31:08,799 --> 00:31:11,840
and i think that is a super nice

00:31:10,240 --> 00:31:15,440
approach

00:31:11,840 --> 00:31:17,279
because a great site just works

00:31:15,440 --> 00:31:18,480
and to make a site or to build a site

00:31:17,279 --> 00:31:20,720
that just works

00:31:18,480 --> 00:31:21,600
i still believe maybe this will change

00:31:20,720 --> 00:31:23,440
in 10 years

00:31:21,600 --> 00:31:25,120
but today i still believe that

00:31:23,440 --> 00:31:25,919
developers have to know the foundation

00:31:25,120 --> 00:31:29,120
of the web

00:31:25,919 --> 00:31:32,399
which is html css and javascript

00:31:29,120 --> 00:31:35,360
and a great site can

00:31:32,399 --> 00:31:36,000
be built with a great site doesn't have

00:31:35,360 --> 00:31:38,240
to be

00:31:36,000 --> 00:31:40,000
built with react view or angular and

00:31:38,240 --> 00:31:40,480
these conversations about technology

00:31:40,000 --> 00:31:43,600
chase

00:31:40,480 --> 00:31:45,679
choices should when someone asks you hey

00:31:43,600 --> 00:31:46,799
i i want to build a new site what should

00:31:45,679 --> 00:31:48,880
i use

00:31:46,799 --> 00:31:50,320
our answers shouldn't necessarily be you

00:31:48,880 --> 00:31:52,399
should use framework x

00:31:50,320 --> 00:31:54,000
with server side rendering a service

00:31:52,399 --> 00:31:55,279
worker because everything needs a

00:31:54,000 --> 00:31:57,360
service worker these days

00:31:55,279 --> 00:31:58,799
and it has to run in a cloudflare or an

00:31:57,360 --> 00:32:01,200
edgeworker

00:31:58,799 --> 00:32:03,360
i think the answer should be like with

00:32:01,200 --> 00:32:06,640
so many things in development

00:32:03,360 --> 00:32:08,960
it depends what do we want to do

00:32:06,640 --> 00:32:11,600
a great site can be built with

00:32:08,960 --> 00:32:14,799
react-view and angular

00:32:11,600 --> 00:32:15,440
but the technology choices don't matter

00:32:14,799 --> 00:32:18,080
that much

00:32:15,440 --> 00:32:19,039
after all i believe because a great site

00:32:18,080 --> 00:32:21,440
is accessible

00:32:19,039 --> 00:32:22,320
and fast and secure this is what it is

00:32:21,440 --> 00:32:25,120
about

00:32:22,320 --> 00:32:25,840
and i would love to get rid of this idea

00:32:25,120 --> 00:32:29,360
of

00:32:25,840 --> 00:32:34,159
it's just html

00:32:29,360 --> 00:32:37,919
html by itself defines over 100 elements

00:32:34,159 --> 00:32:41,279
the html input element has 22

00:32:37,919 --> 00:32:44,320
types html is still

00:32:41,279 --> 00:32:46,480
evolving what you see here is the enter

00:32:44,320 --> 00:32:48,799
keyhand attribute on an input element

00:32:46,480 --> 00:32:50,640
this is cool stuff you can change how

00:32:48,799 --> 00:32:52,159
the submit button looks on a virtual

00:32:50,640 --> 00:32:55,600
keyboard

00:32:52,159 --> 00:32:58,880
chris coyer from css tricks wrote a

00:32:55,600 --> 00:33:02,559
4 000 word article comparing

00:32:58,880 --> 00:33:06,080
links and buttons

00:33:02,559 --> 00:33:09,120
and still this is the markup that

00:33:06,080 --> 00:33:12,399
we find out there sometimes this is

00:33:09,120 --> 00:33:15,679
inaccessible markup

00:33:12,399 --> 00:33:19,200
which shows clearly one thing that

00:33:15,679 --> 00:33:21,200
html is not easy

00:33:19,200 --> 00:33:22,720
and when you look at comparisons or

00:33:21,200 --> 00:33:24,960
stats for example what you see here is

00:33:22,720 --> 00:33:27,120
webaim they do a yearly

00:33:24,960 --> 00:33:28,720
state of the web kind of thing and you

00:33:27,120 --> 00:33:32,159
see there that there are

00:33:28,720 --> 00:33:36,000
a bunch of websites that have

00:33:32,159 --> 00:33:37,840
common accessibility errors

00:33:36,000 --> 00:33:39,679
you see that their problems like low

00:33:37,840 --> 00:33:43,200
contrast low contrast

00:33:39,679 --> 00:33:44,880
text 85 missing alt text on images

00:33:43,200 --> 00:33:46,799
these are kind of the things that are

00:33:44,880 --> 00:33:48,159
foundational for a good and well-running

00:33:46,799 --> 00:33:51,919
website

00:33:48,159 --> 00:33:54,640
and you will find out that websites that

00:33:51,919 --> 00:33:57,679
ship with the javascript framework

00:33:54,640 --> 00:33:59,039
usually perform a little bit worse

00:33:57,679 --> 00:34:01,120
and this is not the javascript

00:33:59,039 --> 00:34:02,559
frameworks fault

00:34:01,120 --> 00:34:04,399
but at the end when you think about the

00:34:02,559 --> 00:34:05,840
complexity that you're shipping

00:34:04,399 --> 00:34:08,000
it just makes sense because you have to

00:34:05,840 --> 00:34:10,960
deal with so much more things

00:34:08,000 --> 00:34:14,079
you have to learn so much more things of

00:34:10,960 --> 00:34:16,480
course it gets a little bit harder

00:34:14,079 --> 00:34:17,200
so this is the one million report from

00:34:16,480 --> 00:34:20,320
webaim

00:34:17,200 --> 00:34:23,679
and with the recent version they said

00:34:20,320 --> 00:34:26,000
that 98

00:34:23,679 --> 00:34:27,280
of website that they checked uh had

00:34:26,000 --> 00:34:30,320
detectable

00:34:27,280 --> 00:34:32,320
uh vecac which stands for rep web

00:34:30,320 --> 00:34:35,280
community accessibility guidelines

00:34:32,320 --> 00:34:36,079
had some errors in there overall we're

00:34:35,280 --> 00:34:39,359
doing

00:34:36,079 --> 00:34:41,599
not a great job as an industry

00:34:39,359 --> 00:34:43,760
and then there are these kind of news

00:34:41,599 --> 00:34:47,040
where a third party gets hacked

00:34:43,760 --> 00:34:50,000
and hundreds of sites

00:34:47,040 --> 00:34:51,520
uh mine cryptocurrency how can that

00:34:50,000 --> 00:34:54,079
happen

00:34:51,520 --> 00:34:55,839
well we have something that can prevent

00:34:54,079 --> 00:34:57,599
this so what you see here is a header

00:34:55,839 --> 00:34:59,839
for content security policy

00:34:57,599 --> 00:35:00,720
and with this can you you can nail down

00:34:59,839 --> 00:35:03,520
what is

00:35:00,720 --> 00:35:04,720
allowed to be loaded in your website and

00:35:03,520 --> 00:35:06,480
when you have a look at how many

00:35:04,720 --> 00:35:10,000
websites out there

00:35:06,480 --> 00:35:11,440
actually use csp it also doesn't look

00:35:10,000 --> 00:35:15,040
great

00:35:11,440 --> 00:35:17,280
and when we analyze how much stuff

00:35:15,040 --> 00:35:18,720
on javascript we ship you see there for

00:35:17,280 --> 00:35:20,640
example that 80 percent of the

00:35:18,720 --> 00:35:21,040
javascript libraries that we have there

00:35:20,640 --> 00:35:23,839
have

00:35:21,040 --> 00:35:25,280
some vulnerab vulnerability or another

00:35:23,839 --> 00:35:27,440
in there

00:35:25,280 --> 00:35:29,760
i feel like that the web overall loses

00:35:27,440 --> 00:35:31,359
query quality

00:35:29,760 --> 00:35:33,680
but hey at least developers get more

00:35:31,359 --> 00:35:35,599
productive and it all kind of started

00:35:33,680 --> 00:35:37,440
with node and npm

00:35:35,599 --> 00:35:38,960
which started to bring up this whole

00:35:37,440 --> 00:35:40,320
javascript and developed front end

00:35:38,960 --> 00:35:41,920
development ecosystem

00:35:40,320 --> 00:35:43,839
and now we i deployed my first service

00:35:41,920 --> 00:35:44,880
with heroku we now have warcell and we

00:35:43,839 --> 00:35:46,800
have netlify

00:35:44,880 --> 00:35:48,320
and now for two years three years we

00:35:46,800 --> 00:35:51,359
have serverless functions this is

00:35:48,320 --> 00:35:53,760
freaking cool this is what it takes

00:35:51,359 --> 00:35:55,440
to build an http endpoint i can deploy a

00:35:53,760 --> 00:35:57,440
function with three lines of code

00:35:55,440 --> 00:35:58,720
or with five lines of code and i just

00:35:57,440 --> 00:36:01,839
built myself an

00:35:58,720 --> 00:36:03,280
api i think this is super exciting and

00:36:01,839 --> 00:36:05,119
we have a lot of

00:36:03,280 --> 00:36:06,480
services out there going from analytics

00:36:05,119 --> 00:36:09,200
content providers

00:36:06,480 --> 00:36:10,720
firebase for other content everything is

00:36:09,200 --> 00:36:12,320
out there everything has free plans

00:36:10,720 --> 00:36:13,520
everything is ready to use you can build

00:36:12,320 --> 00:36:17,200
a product

00:36:13,520 --> 00:36:18,400
in a few days and the options here are

00:36:17,200 --> 00:36:20,640
limitless

00:36:18,400 --> 00:36:22,000
but in the same time we went from an

00:36:20,640 --> 00:36:25,119
hello world

00:36:22,000 --> 00:36:26,720
which was very light and not complex to

00:36:25,119 --> 00:36:30,800
a hello world

00:36:26,720 --> 00:36:33,200
that was way way heavier but the most

00:36:30,800 --> 00:36:34,480
uh the damaging or the sad part about

00:36:33,200 --> 00:36:36,880
this is that's just

00:36:34,480 --> 00:36:38,720
way way harder to manage all these kind

00:36:36,880 --> 00:36:40,560
of things

00:36:38,720 --> 00:36:42,640
and when you once installed or once you

00:36:40,560 --> 00:36:44,160
had an um dependency errors

00:36:42,640 --> 00:36:45,280
in your node modules you probably know

00:36:44,160 --> 00:36:47,359
what i'm talking about when you're

00:36:45,280 --> 00:36:49,200
chasing dependencies and something

00:36:47,359 --> 00:36:51,040
is broken and something is relying on

00:36:49,200 --> 00:36:54,720
something and

00:36:51,040 --> 00:36:57,280
for what are we doing that actually for

00:36:54,720 --> 00:37:00,480
so when i when i look at tiny helpers um

00:36:57,280 --> 00:37:02,880
what i did so it's built with 11 t but

00:37:00,480 --> 00:37:04,960
i provided a little mpm script so people

00:37:02,880 --> 00:37:08,560
can clone the repository and can

00:37:04,960 --> 00:37:09,520
do mpm run helper ad and then there's a

00:37:08,560 --> 00:37:11,760
little questionnaire

00:37:09,520 --> 00:37:14,560
questionnaire in the in the terminal and

00:37:11,760 --> 00:37:16,079
then they can add a helper to the site

00:37:14,560 --> 00:37:18,640
and the person who wrote me rightfully

00:37:16,079 --> 00:37:22,320
so was like chef and i had to download

00:37:18,640 --> 00:37:24,240
700 megabytes of node.js stuff to add a

00:37:22,320 --> 00:37:27,440
json file

00:37:24,240 --> 00:37:30,160
to this github repository is that the

00:37:27,440 --> 00:37:32,079
right approach

00:37:30,160 --> 00:37:33,920
so when i look forward it's always also

00:37:32,079 --> 00:37:35,119
a little bit about how do you maintain

00:37:33,920 --> 00:37:37,760
websites

00:37:35,119 --> 00:37:38,240
i bet with you that the person that

00:37:37,760 --> 00:37:40,640
still

00:37:38,240 --> 00:37:41,440
blogs on this website only uses a text

00:37:40,640 --> 00:37:45,920
editor

00:37:41,440 --> 00:37:47,520
and probably person ftps it up somehow

00:37:45,920 --> 00:37:49,359
for the site that i was building what i

00:37:47,520 --> 00:37:50,960
need is i need a text editor i need a

00:37:49,359 --> 00:37:52,079
recent note version i need an npm

00:37:50,960 --> 00:37:52,880
version i need to have framework

00:37:52,079 --> 00:37:55,440
knowledge

00:37:52,880 --> 00:37:56,400
i cannot drop something like this to

00:37:55,440 --> 00:37:58,079
another developer

00:37:56,400 --> 00:38:00,000
because he or she maybe doesn't have the

00:37:58,079 --> 00:38:02,839
knowledge or the ecosystem or

00:38:00,000 --> 00:38:04,240
everything on their machine to deal with

00:38:02,839 --> 00:38:07,280
this

00:38:04,240 --> 00:38:09,040
so josh camo um he

00:38:07,280 --> 00:38:10,720
writes good stuff so when we do the

00:38:09,040 --> 00:38:11,359
twitter shout outs you should definitely

00:38:10,720 --> 00:38:12,800
follow him

00:38:11,359 --> 00:38:14,640
he once said that i've built building

00:38:12,800 --> 00:38:17,280
for the web for 15 years

00:38:14,640 --> 00:38:18,000
and it has never been easier so easy to

00:38:17,280 --> 00:38:21,520
build complex

00:38:18,000 --> 00:38:24,480
apps and i 100

00:38:21,520 --> 00:38:26,000
agree with this but i want to question

00:38:24,480 --> 00:38:29,359
how many sites actually

00:38:26,000 --> 00:38:31,359
do need to be complex apps and where are

00:38:29,359 --> 00:38:33,440
we going with this trend

00:38:31,359 --> 00:38:35,520
so when i started it was like this it

00:38:33,440 --> 00:38:38,560
was some php it was some jquery it was a

00:38:35,520 --> 00:38:41,119
database somewhere in the server

00:38:38,560 --> 00:38:41,680
now we're kind of here and this list is

00:38:41,119 --> 00:38:44,000
far

00:38:41,680 --> 00:38:45,040
away from being complete we're dealing

00:38:44,000 --> 00:38:46,720
with the foundation but then we're

00:38:45,040 --> 00:38:47,200
dealing with framework levels with build

00:38:46,720 --> 00:38:49,440
tools

00:38:47,200 --> 00:38:51,760
cloud providers it just gets more

00:38:49,440 --> 00:38:53,520
complex

00:38:51,760 --> 00:38:55,280
and it feels like complexity is king and

00:38:53,520 --> 00:38:56,400
i want to question what are we doing

00:38:55,280 --> 00:38:58,160
there for

00:38:56,400 --> 00:39:00,240
so now when i was building the tiny

00:38:58,160 --> 00:39:01,680
helper side project i started off with

00:39:00,240 --> 00:39:03,760
preact

00:39:01,680 --> 00:39:05,839
and i had it served server rendered and

00:39:03,760 --> 00:39:07,599
it was running in a function

00:39:05,839 --> 00:39:10,079
and then i had some state problems

00:39:07,599 --> 00:39:13,200
because i was like how do you do this

00:39:10,079 --> 00:39:14,880
and at some point i

00:39:13,200 --> 00:39:16,960
i talked to jason miller who's the

00:39:14,880 --> 00:39:17,520
maintainer of preact and we discussed a

00:39:16,960 --> 00:39:20,480
little bit

00:39:17,520 --> 00:39:21,359
if preact was actually needed for this

00:39:20,480 --> 00:39:23,280
use case

00:39:21,359 --> 00:39:25,040
and the use case was really just a

00:39:23,280 --> 00:39:26,960
hamburger menu button

00:39:25,040 --> 00:39:28,079
that should do display block and the

00:39:26,960 --> 00:39:30,000
display none

00:39:28,079 --> 00:39:32,000
so we kind of agreed on the point that

00:39:30,000 --> 00:39:33,599
ideally at some point the build tooling

00:39:32,000 --> 00:39:36,000
and the chains that we have

00:39:33,599 --> 00:39:37,680
could kind of also make a decision of

00:39:36,000 --> 00:39:38,800
hey do you need the framework in this

00:39:37,680 --> 00:39:41,200
case and drop it

00:39:38,800 --> 00:39:42,320
if it's not needed because in that case

00:39:41,200 --> 00:39:45,680
even lightweight

00:39:42,320 --> 00:39:48,640
preact which is a react alternative was

00:39:45,680 --> 00:39:49,760
overkill what i wanted to do what i

00:39:48,640 --> 00:39:53,359
ended up with

00:39:49,760 --> 00:39:54,800
was 16 lines of handwritten javascript

00:39:53,359 --> 00:39:56,800
and this is all the functionality

00:39:54,800 --> 00:40:01,440
included on the site

00:39:56,800 --> 00:40:01,440
i don't need a framework for that

00:40:01,520 --> 00:40:04,640
so maybe we will have good enough

00:40:03,200 --> 00:40:07,119
abstractions one day

00:40:04,640 --> 00:40:08,640
but today i still think that it is

00:40:07,119 --> 00:40:09,680
important that we know the web

00:40:08,640 --> 00:40:12,640
fundamentals to

00:40:09,680 --> 00:40:13,520
create the best user experience and

00:40:12,640 --> 00:40:15,760
depending on

00:40:13,520 --> 00:40:17,599
where you work you also have to remember

00:40:15,760 --> 00:40:19,760
that with the technology choices that

00:40:17,599 --> 00:40:21,119
you make you're shaping tomorrow's job

00:40:19,760 --> 00:40:23,680
market

00:40:21,119 --> 00:40:24,480
for example contentful we choose we have

00:40:23,680 --> 00:40:28,160
chosen

00:40:24,480 --> 00:40:30,640
angular 1 like five years ago

00:40:28,160 --> 00:40:32,720
make your technology choices wisely

00:40:30,640 --> 00:40:35,040
because migrating from one thing to

00:40:32,720 --> 00:40:38,160
another is extremely costly and painful

00:40:35,040 --> 00:40:39,920
going forward and i really want to

00:40:38,160 --> 00:40:41,839
believe that my job as a web developer

00:40:39,920 --> 00:40:43,040
is to build beautiful experiences and

00:40:41,839 --> 00:40:45,119
websites

00:40:43,040 --> 00:40:47,119
unfortunately i don't think that this is

00:40:45,119 --> 00:40:49,359
the case because our job as web

00:40:47,119 --> 00:40:51,280
developers today is to decide

00:40:49,359 --> 00:40:52,640
what tools to use to decide what

00:40:51,280 --> 00:40:55,359
frameworks to use to do

00:40:52,640 --> 00:40:58,640
to decide what to prioritize and then to

00:40:55,359 --> 00:41:01,920
find out how to actually maintain

00:40:58,640 --> 00:41:01,920
all this complexity

00:41:02,079 --> 00:41:06,160
chris coyer also shared that he was

00:41:03,599 --> 00:41:07,839
talking to a front-end developer who was

00:41:06,160 --> 00:41:11,119
doing that for three years

00:41:07,839 --> 00:41:12,079
and the person got asked to build a

00:41:11,119 --> 00:41:15,280
website

00:41:12,079 --> 00:41:18,720
and the person didn't know how

00:41:15,280 --> 00:41:20,560
because we are so far away

00:41:18,720 --> 00:41:23,119
from the foundation that is actually

00:41:20,560 --> 00:41:24,880
included in a website

00:41:23,119 --> 00:41:26,480
because we're dealing with a foundation

00:41:24,880 --> 00:41:28,240
with frameworks with build tools with

00:41:26,480 --> 00:41:29,680
cloud providers and whatever is in there

00:41:28,240 --> 00:41:31,280
and for front-end developers it feels

00:41:29,680 --> 00:41:33,280
like that we're entering a stage

00:41:31,280 --> 00:41:35,280
where front-end developer is not enough

00:41:33,280 --> 00:41:37,440
as a job description anymore

00:41:35,280 --> 00:41:39,119
because we now deal with two camps of

00:41:37,440 --> 00:41:42,160
developers we deal with the

00:41:39,119 --> 00:41:44,800
javascript focused developers which do

00:41:42,160 --> 00:41:45,599
maybe graphql maybe they are webpack

00:41:44,800 --> 00:41:47,680
experts

00:41:45,599 --> 00:41:48,640
and then we're dealing with kind of

00:41:47,680 --> 00:41:51,440
maybe ux

00:41:48,640 --> 00:41:52,560
developers that care about performance

00:41:51,440 --> 00:41:56,079
ux

00:41:52,560 --> 00:41:56,960
accessibility i think that most likely

00:41:56,079 --> 00:41:59,119
it's time

00:41:56,960 --> 00:42:00,319
to drop the idea of a front-end

00:41:59,119 --> 00:42:02,640
developer

00:42:00,319 --> 00:42:05,920
and maybe come up with better terms that

00:42:02,640 --> 00:42:09,359
describe what we actually need

00:42:05,920 --> 00:42:09,920
and then we have to figure out who we're

00:42:09,359 --> 00:42:11,680
actually

00:42:09,920 --> 00:42:14,240
building things for and we shouldn't

00:42:11,680 --> 00:42:17,119
build things

00:42:14,240 --> 00:42:18,800
for ourselves to have fun and to feel

00:42:17,119 --> 00:42:22,480
like great engineers because our

00:42:18,800 --> 00:42:26,319
customers or users usually don't care

00:42:22,480 --> 00:42:28,800
your users and my users don't care about

00:42:26,319 --> 00:42:30,560
technical implementation details they

00:42:28,800 --> 00:42:33,119
care if a website is great

00:42:30,560 --> 00:42:33,839
or not and i believe that we as

00:42:33,119 --> 00:42:36,960
developers

00:42:33,839 --> 00:42:38,720
are paid to ship a great user experience

00:42:36,960 --> 00:42:40,240
but i think over the last few years we

00:42:38,720 --> 00:42:42,480
lost track a little bit

00:42:40,240 --> 00:42:45,839
and we value developer experience a

00:42:42,480 --> 00:42:49,119
little bit more than the user experience

00:42:45,839 --> 00:42:50,319
so to close this whole thing i'm wearing

00:42:49,119 --> 00:42:54,319
a javascript head

00:42:50,319 --> 00:42:57,280
right i love shiny tools and i love

00:42:54,319 --> 00:43:00,240
writing javascript and i love all the

00:42:57,280 --> 00:43:03,040
great stuff that we have

00:43:00,240 --> 00:43:04,640
but maybe we should take a step back and

00:43:03,040 --> 00:43:08,560
we should maybe start considering the

00:43:04,640 --> 00:43:10,560
right tools for the best user experience

00:43:08,560 --> 00:43:12,319
so i mentioned my own site and i rebuild

00:43:10,560 --> 00:43:14,800
it in this year so what happened

00:43:12,319 --> 00:43:16,400
i went with 11 t um just because it was

00:43:14,800 --> 00:43:19,200
just trending

00:43:16,400 --> 00:43:20,319
um this is how it looks like it looks

00:43:19,200 --> 00:43:23,680
more or less the same

00:43:20,319 --> 00:43:25,040
um but what happened i reduced the

00:43:23,680 --> 00:43:28,960
overall page rate by

00:43:25,040 --> 00:43:32,400
64 the build time on netlify reduced

00:43:28,960 --> 00:43:34,640
from 4 minute to 40 seconds

00:43:32,400 --> 00:43:36,720
i don't have a javascript pipeline which

00:43:34,640 --> 00:43:38,640
i think is beautiful and refreshing

00:43:36,720 --> 00:43:40,160
and so there's way less complexity in

00:43:38,640 --> 00:43:42,400
there when i need

00:43:40,160 --> 00:43:43,760
javascript functionality i ship custom

00:43:42,400 --> 00:43:45,760
elements

00:43:43,760 --> 00:43:47,119
so you see their time ago component that

00:43:45,760 --> 00:43:49,359
is maintained by github

00:43:47,119 --> 00:43:50,960
and i wrote this web vitals component if

00:43:49,359 --> 00:43:52,560
you want to show

00:43:50,960 --> 00:43:55,040
like some performance stats you can just

00:43:52,560 --> 00:43:58,359
drop that in and it just works

00:43:55,040 --> 00:44:01,440
and i joined the club of the

00:43:58,359 --> 00:44:03,760
anti-javascript javascript users

00:44:01,440 --> 00:44:04,880
because i just question when i need

00:44:03,760 --> 00:44:07,839
complexity

00:44:04,880 --> 00:44:09,760
to provide a good user experience and my

00:44:07,839 --> 00:44:11,119
site now has a pretty pretty green

00:44:09,760 --> 00:44:14,880
lighthouse score

00:44:11,119 --> 00:44:17,280
with a better user experience so

00:44:14,880 --> 00:44:19,520
is a javascript stack really really that

00:44:17,280 --> 00:44:22,480
bad

00:44:19,520 --> 00:44:23,440
no not at all and i still love all the

00:44:22,480 --> 00:44:25,200
technology

00:44:23,440 --> 00:44:26,640
but maybe we should focus more on

00:44:25,200 --> 00:44:28,640
building sites

00:44:26,640 --> 00:44:29,680
than just work and less on the

00:44:28,640 --> 00:44:32,319
technology

00:44:29,680 --> 00:44:34,240
to build these if you want to have a

00:44:32,319 --> 00:44:36,720
look at the slides there are on

00:44:34,240 --> 00:44:37,839
my links online and i always have to

00:44:36,720 --> 00:44:41,760
point out that i

00:44:37,839 --> 00:44:45,119
own this domain my links online slash

00:44:41,760 --> 00:44:46,560
did we lose direction and i'm chef and i

00:44:45,119 --> 00:44:51,839
work for conventful and thank you

00:44:46,560 --> 00:44:51,839
everybody for listening

00:44:54,079 --> 00:44:57,280
nice thank you

00:44:57,359 --> 00:45:04,880
i think you you

00:45:01,119 --> 00:45:08,400
underlined there's some very very

00:45:04,880 --> 00:45:11,119
interesting ideas and very useful

00:45:08,400 --> 00:45:14,000
you know topics for debate for the web

00:45:11,119 --> 00:45:14,000
community at least

00:45:14,800 --> 00:45:19,839
do we have any questions from the

00:45:16,839 --> 00:45:19,839
audience

00:45:20,319 --> 00:45:24,880
you can write them down you can unmute

00:45:23,599 --> 00:45:33,839
yourself and ask them

00:45:24,880 --> 00:45:33,839
whatever whatever works best

00:45:34,400 --> 00:45:41,920
meanwhile maybe i have one question um

00:45:37,839 --> 00:45:44,000
so a lot of these ideas i think are

00:45:41,920 --> 00:45:45,359
so you kind of start seeing these ideas

00:45:44,000 --> 00:45:46,000
popping up everywhere you know with the

00:45:45,359 --> 00:45:49,520
jumpstack

00:45:46,000 --> 00:45:50,400
movement with uh kind of like going back

00:45:49,520 --> 00:45:53,839
to the roots

00:45:50,400 --> 00:45:55,760
some some sort of a way of of moving

00:45:53,839 --> 00:45:56,960
uh the the whole javascript community

00:45:55,760 --> 00:45:59,839
back to you know

00:45:56,960 --> 00:46:00,480
building simple websites or websites on

00:45:59,839 --> 00:46:03,760
simple

00:46:00,480 --> 00:46:05,040
tools um what about you know

00:46:03,760 --> 00:46:07,440
you mentioned about the workforce what

00:46:05,040 --> 00:46:10,960
about the people that are learning today

00:46:07,440 --> 00:46:13,280
you know uh this is one of the

00:46:10,960 --> 00:46:14,079
i think toughest things that you know

00:46:13,280 --> 00:46:17,119
you have to

00:46:14,079 --> 00:46:18,880
to to consider that people join the

00:46:17,119 --> 00:46:21,040
community today and they have

00:46:18,880 --> 00:46:22,079
kind of these two options they either go

00:46:21,040 --> 00:46:24,240
and they

00:46:22,079 --> 00:46:26,240
they learn for example they jump to some

00:46:24,240 --> 00:46:27,599
frame or they jump to react or view

00:46:26,240 --> 00:46:30,480
which is considered one of the easiest

00:46:27,599 --> 00:46:32,800
streamers to pick up right for beginners

00:46:30,480 --> 00:46:33,760
and they have like tons of materials on

00:46:32,800 --> 00:46:35,359
that you know

00:46:33,760 --> 00:46:37,680
but if people want to stick with the

00:46:35,359 --> 00:46:40,640
basics first how do they do that

00:46:37,680 --> 00:46:42,319
because that for me is usually uh it's

00:46:40,640 --> 00:46:45,119
it's harder to

00:46:42,319 --> 00:46:45,680
to recommend to someone yeah i think in

00:46:45,119 --> 00:46:47,920
the

00:46:45,680 --> 00:46:49,599
at least what i see here in berlin and

00:46:47,920 --> 00:46:50,560
maybe even europe i think right now it

00:46:49,599 --> 00:46:52,720
is not possible

00:46:50,560 --> 00:46:53,839
right if you want to start because the

00:46:52,720 --> 00:46:55,440
industry moved

00:46:53,839 --> 00:46:57,280
for the front end developers into this

00:46:55,440 --> 00:46:58,640
direction you if you want to get a job

00:46:57,280 --> 00:47:01,680
you have to start somewhere

00:46:58,640 --> 00:47:03,359
and learning html is probably not not

00:47:01,680 --> 00:47:05,520
the thing that gets your gig

00:47:03,359 --> 00:47:06,400
right i think the the important piece is

00:47:05,520 --> 00:47:08,160
that

00:47:06,400 --> 00:47:09,680
and i feel like that with the jam sack

00:47:08,160 --> 00:47:12,640
movement

00:47:09,680 --> 00:47:13,920
and with hopefully coming a little bit

00:47:12,640 --> 00:47:18,160
of a change

00:47:13,920 --> 00:47:20,960
um i really much like this idea of

00:47:18,160 --> 00:47:21,760
of splitting the term into different or

00:47:20,960 --> 00:47:23,520
the

00:47:21,760 --> 00:47:24,800
the area front-end development into

00:47:23,520 --> 00:47:26,559
several areas

00:47:24,800 --> 00:47:28,000
and i feel like if we as an industry

00:47:26,559 --> 00:47:29,680
could change to

00:47:28,000 --> 00:47:31,280
people that care about more about the

00:47:29,680 --> 00:47:34,400
basics and shipping good stuff

00:47:31,280 --> 00:47:36,319
and actual javascript engineers um if we

00:47:34,400 --> 00:47:37,520
could make this change as an industry i

00:47:36,319 --> 00:47:39,440
think that we then

00:47:37,520 --> 00:47:40,960
could kind of also flip the problem

00:47:39,440 --> 00:47:42,480
right because right now it is also like

00:47:40,960 --> 00:47:44,559
you need for example you know to

00:47:42,480 --> 00:47:46,640
you need to know framework abtc to get a

00:47:44,559 --> 00:47:48,079
job and then you get the job and of

00:47:46,640 --> 00:47:48,800
course you're missing the foundational

00:47:48,079 --> 00:47:50,960
knowledge

00:47:48,800 --> 00:47:53,119
i think to to fix the fix the gap

00:47:50,960 --> 00:47:55,599
especially in education

00:47:53,119 --> 00:47:56,720
we have to change the industry first

00:47:55,599 --> 00:47:58,079
because

00:47:56,720 --> 00:48:00,720
there's nothing wrong with learning

00:47:58,079 --> 00:48:00,720
react first

00:48:01,040 --> 00:48:05,599
if that is needed to enter the industry

00:48:03,119 --> 00:48:08,800
so i feel like it's an industry problem

00:48:05,599 --> 00:48:10,400
more than an education problem

00:48:08,800 --> 00:48:12,559
and i don't have an answer other than we

00:48:10,400 --> 00:48:15,920
have to start somewhere and kind of

00:48:12,559 --> 00:48:15,920
going a little bit back to the roots

00:48:18,480 --> 00:48:22,720
i think there's a question in the chat

00:48:20,400 --> 00:48:22,720
there

00:48:23,839 --> 00:48:30,240
oh do you want to read it or you want me

00:48:27,839 --> 00:48:32,000
to read it

00:48:30,240 --> 00:48:34,480
these key points should make their way

00:48:32,000 --> 00:48:36,640
into human resource department

00:48:34,480 --> 00:48:38,480
don't you think oftentimes decisions on

00:48:36,640 --> 00:48:41,760
stack are we spoken

00:48:38,480 --> 00:48:45,200
for you long before the actual job

00:48:41,760 --> 00:48:47,680
yeah i think this

00:48:45,200 --> 00:48:49,520
so i only can give my experience from

00:48:47,680 --> 00:48:53,119
the companies that i've worked at

00:48:49,520 --> 00:48:54,880
um if the company is a little bit bigger

00:48:53,119 --> 00:48:58,319
technology choices

00:48:54,880 --> 00:48:59,200
are usually considered for for the whole

00:48:58,319 --> 00:49:01,520
company

00:48:59,200 --> 00:49:02,880
so if you i just talked to a friend a

00:49:01,520 --> 00:49:04,400
few days ago and

00:49:02,880 --> 00:49:06,800
they built something with a framework

00:49:04,400 --> 00:49:08,640
that um

00:49:06,800 --> 00:49:10,000
that nobody knows and they were just

00:49:08,640 --> 00:49:11,680
like

00:49:10,000 --> 00:49:13,359
what is this and of course you will have

00:49:11,680 --> 00:49:14,839
troubles hiring for that right because

00:49:13,359 --> 00:49:18,160
if you want to

00:49:14,839 --> 00:49:20,960
have experienced engineers

00:49:18,160 --> 00:49:22,240
and or beginner engineers and and let's

00:49:20,960 --> 00:49:24,640
just pick react again

00:49:22,240 --> 00:49:25,520
um experience engineers want to play

00:49:24,640 --> 00:49:28,160
with cool tech

00:49:25,520 --> 00:49:29,839
they don't want to deal with outdated

00:49:28,160 --> 00:49:33,119
stuff so you will have a shortage

00:49:29,839 --> 00:49:34,720
there and the beginner engineers

00:49:33,119 --> 00:49:36,400
will only or will probably know

00:49:34,720 --> 00:49:38,800
something that is very popular so you

00:49:36,400 --> 00:49:39,599
have to from an hr recruiting or human

00:49:38,800 --> 00:49:41,520
resource

00:49:39,599 --> 00:49:43,520
perspective you have technology choices

00:49:41,520 --> 00:49:45,040
are definitely part of that

00:49:43,520 --> 00:49:46,400
i'm not sure if i i just rambled here

00:49:45,040 --> 00:49:48,720
i'm not sure if i answered any question

00:49:46,400 --> 00:49:48,720
here but

00:49:49,839 --> 00:49:56,640
uh any other questions

00:49:53,040 --> 00:49:57,280
i have one um so is there maybe an in

00:49:56,640 --> 00:49:58,960
between

00:49:57,280 --> 00:50:01,119
these two because it feels like very

00:49:58,960 --> 00:50:03,040
much kind of two-sided either one

00:50:01,119 --> 00:50:05,119
or the other but i'm not sure if there

00:50:03,040 --> 00:50:05,599
is like an in-between solution that we

00:50:05,119 --> 00:50:08,640
could

00:50:05,599 --> 00:50:09,599
you know take some things into into

00:50:08,640 --> 00:50:11,280
account

00:50:09,599 --> 00:50:12,800
i think the in-between is where we are

00:50:11,280 --> 00:50:15,920
slowly figuring it out

00:50:12,800 --> 00:50:18,800
um so for example there are these

00:50:15,920 --> 00:50:19,760
it's over the over the last half year or

00:50:18,800 --> 00:50:21,920
something i'm playing

00:50:19,760 --> 00:50:23,680
playing around a lot with uh with

00:50:21,920 --> 00:50:25,119
next.js because i think the development

00:50:23,680 --> 00:50:26,480
experience is just beautiful so they are

00:50:25,119 --> 00:50:27,599
nailing down a lot of things it's just

00:50:26,480 --> 00:50:30,079
nice so it comes

00:50:27,599 --> 00:50:31,839
with this very beautiful chain it just

00:50:30,079 --> 00:50:32,559
works developer experience is great but

00:50:31,839 --> 00:50:34,480
just

00:50:32,559 --> 00:50:35,920
a month or two they added this

00:50:34,480 --> 00:50:38,240
javascript uh

00:50:35,920 --> 00:50:40,400
so this non-javascript mode so that

00:50:38,240 --> 00:50:41,520
developers can actually play that want

00:50:40,400 --> 00:50:43,680
to play with the

00:50:41,520 --> 00:50:45,440
latest and greatest but for a content

00:50:43,680 --> 00:50:48,240
site you can still disable this

00:50:45,440 --> 00:50:48,559
and i feel like that slowly but surely

00:50:48,240 --> 00:50:50,319
this

00:50:48,559 --> 00:50:52,480
enters the framework world so that we

00:50:50,319 --> 00:50:55,680
maybe can meet in the middle

00:50:52,480 --> 00:50:57,520
which is like beautiful tools uh easy

00:50:55,680 --> 00:51:00,079
handable great developer experience but

00:50:57,520 --> 00:51:03,280
not necessarily 500 kilobyte bundles

00:51:00,079 --> 00:51:05,359
for rendering 500 words

00:51:03,280 --> 00:51:07,440
and feel like so what i see is it feels

00:51:05,359 --> 00:51:09,599
like that we're slowly maybe

00:51:07,440 --> 00:51:11,200
shifting a little bit and i would love

00:51:09,599 --> 00:51:14,559
to see that

00:51:11,200 --> 00:51:16,800
happening thanks sans

00:51:14,559 --> 00:51:16,800
thanks

00:51:18,480 --> 00:51:21,520
you mentioned there in one of the slides

00:51:20,880 --> 00:51:24,000
that

00:51:21,520 --> 00:51:25,359
you we kind of need to sideline the

00:51:24,000 --> 00:51:27,839
concept of a front-end

00:51:25,359 --> 00:51:29,040
developer and someone someone also put

00:51:27,839 --> 00:51:32,400
it here in the chat what do you think

00:51:29,040 --> 00:51:34,880
about the full stack developer nowadays

00:51:32,400 --> 00:51:34,880
well that's a

00:51:35,599 --> 00:51:38,640
i i've met very very good full stack

00:51:37,920 --> 00:51:41,440
developers

00:51:38,640 --> 00:51:42,640
uh i'm overwhelmed overwhelmed with the

00:51:41,440 --> 00:51:45,200
front-end part already

00:51:42,640 --> 00:51:46,240
um so i i'm i'm a little bit skeptical

00:51:45,200 --> 00:51:48,400
about the term but

00:51:46,240 --> 00:51:50,480
sometimes i really do meet people and

00:51:48,400 --> 00:51:52,640
they're like oh yeah i set up my

00:51:50,480 --> 00:51:53,920
postgres database and i scale it in aws

00:51:52,640 --> 00:51:55,839
and while i do this

00:51:53,920 --> 00:51:57,680
i use hipster javascript framework and

00:51:55,839 --> 00:51:58,800
build something with abcd and i'm like

00:51:57,680 --> 00:52:01,920
holy

00:51:58,800 --> 00:52:05,040
um i i'm far away from being that

00:52:01,920 --> 00:52:07,839
that person

00:52:05,040 --> 00:52:09,200
but sometimes it's really hard to

00:52:07,839 --> 00:52:11,440
explain even to the

00:52:09,200 --> 00:52:12,640
let's say product owners product

00:52:11,440 --> 00:52:14,960
managers

00:52:12,640 --> 00:52:16,720
that okay uh he's gonna work on the

00:52:14,960 --> 00:52:19,040
front end for our application but

00:52:16,720 --> 00:52:22,640
actually i'm doing the back end as well

00:52:19,040 --> 00:52:25,200
and i'm going to touch the database so

00:52:22,640 --> 00:52:27,040
it comes easily and i use it like i'm

00:52:25,200 --> 00:52:28,400
doing full stack i'm doing the front end

00:52:27,040 --> 00:52:30,240
and the back end

00:52:28,400 --> 00:52:32,240
and i'm connecting the database i think

00:52:30,240 --> 00:52:32,960
that's why it's sometimes because i'm

00:52:32,240 --> 00:52:36,160
not

00:52:32,960 --> 00:52:38,160
the she many times uh it happened to me

00:52:36,160 --> 00:52:40,319
she presents me as a front-end developer

00:52:38,160 --> 00:52:41,920
but i'm not doing just the front end i'm

00:52:40,319 --> 00:52:43,520
doing the backhand and

00:52:41,920 --> 00:52:45,040
all the other stuff that needs to be

00:52:43,520 --> 00:52:47,119
done i think that's why

00:52:45,040 --> 00:52:48,559
we're using the term because frontend

00:52:47,119 --> 00:52:51,200
doesn't explain

00:52:48,559 --> 00:52:52,480
my job what i have to do yeah with

00:52:51,200 --> 00:52:55,920
javascript

00:52:52,480 --> 00:52:57,599
it's more compromising of the front end

00:52:55,920 --> 00:53:02,960
and the back end and all that

00:52:57,599 --> 00:53:02,960
all that line yeah yeah that makes sense

00:53:05,520 --> 00:53:11,359
okay um i think you have to run

00:53:08,880 --> 00:53:14,800
right yeah my my boss is waiting in a

00:53:11,359 --> 00:53:17,839
meeting in one minute uh

00:53:14,800 --> 00:53:19,040
i guess if you have other questions feel

00:53:17,839 --> 00:53:22,400
free to

00:53:19,040 --> 00:53:23,359
uh chat with uh stefan maybe on twitter

00:53:22,400 --> 00:53:25,359
or

00:53:23,359 --> 00:53:27,119
twitter works email works too you'll

00:53:25,359 --> 00:53:29,440
find that somewhere online too um

00:53:27,119 --> 00:53:31,359
thanks for having me yeah thank you so

00:53:29,440 --> 00:53:34,880
much it was really nice

00:53:31,359 --> 00:53:35,920
and yeah see you all next time at our

00:53:34,880 --> 00:53:37,680
next meetup which

00:53:35,920 --> 00:53:39,680
will come in two weeks but i'm not

00:53:37,680 --> 00:53:42,880
saying anything else for now

00:53:39,680 --> 00:53:46,559
cool stay safe and have a great day

00:53:42,880 --> 00:53:46,559

YouTube URL: https://www.youtube.com/watch?v=jPnQdpVwWMc


