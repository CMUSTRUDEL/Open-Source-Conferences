Title: The exciting future of React - Kristijan Ristovski | JSHeroes 2018
Publication date: 2018-05-03
Playlist: JSHeroes 2018
Description: 
	Aside from the fact that the core of React was completely rewritten, version 16 also comes with some powerful new features. We`ll see interesting and practical use-cases for error boundaries, portals, and fragments. Additionally, we`re gonna explore some experimental features like react-call-return and we`re going to see what does the future hold for React.
Captions: 
	00:00:01,840 --> 00:00:04,899
[Music]

00:00:10,309 --> 00:00:16,500
so this conference is called Jas heroes

00:00:13,889 --> 00:00:18,140
and yesterday we were transported from

00:00:16,500 --> 00:00:20,189
the airport in a car that said

00:00:18,140 --> 00:00:23,490
transporting JavaScript here or

00:00:20,189 --> 00:00:25,080
something like that and have a problem

00:00:23,490 --> 00:00:27,330
with couple of terms that we use in

00:00:25,080 --> 00:00:30,359
develop in development in general and

00:00:27,330 --> 00:00:32,340
they are like ninja developer Rockstar

00:00:30,359 --> 00:00:33,750
developer senior developer heroes and

00:00:32,340 --> 00:00:34,950
all of these names we give to each other

00:00:33,750 --> 00:00:36,510
so when I asked you in the audience

00:00:34,950 --> 00:00:38,460
raise your hand if this is your first

00:00:36,510 --> 00:00:41,309
conference that you're attending ever do

00:00:38,460 --> 00:00:42,690
we have anyone all right so if you're

00:00:41,309 --> 00:00:44,340
attending a conference for the first

00:00:42,690 --> 00:00:45,930
time you're probably intimidated by all

00:00:44,340 --> 00:00:47,789
of the speakers that are on stage and

00:00:45,930 --> 00:00:49,530
you're thinking oh my god they're ninjas

00:00:47,789 --> 00:00:51,809
and seniors and rockstars and I cannot

00:00:49,530 --> 00:00:53,550
do that on stage so I wanna demystify

00:00:51,809 --> 00:00:55,440
that a little bit so let's start with

00:00:53,550 --> 00:00:57,660
these three terms the first one is ninja

00:00:55,440 --> 00:01:00,960
developer do you ever see a ninja on a

00:00:57,660 --> 00:01:02,969
rooftop doing webpack at 4 a.m. no

00:01:00,960 --> 00:01:05,010
they're doing ninja things right so that

00:01:02,969 --> 00:01:07,049
term shouldn't exist next one we have

00:01:05,010 --> 00:01:08,909
senior developer how the hell can we

00:01:07,049 --> 00:01:10,799
define this is there a definition for

00:01:08,909 --> 00:01:12,600
this like for me the only senior

00:01:10,799 --> 00:01:15,990
developer can beat this guy we can call

00:01:12,600 --> 00:01:17,729
him a senior developer right and then we

00:01:15,990 --> 00:01:19,830
have the third one is when people get on

00:01:17,729 --> 00:01:22,740
stage and they usually say about them

00:01:19,830 --> 00:01:23,850
their Rockstar developers and I just

00:01:22,740 --> 00:01:26,369
want to make it clear that this is a

00:01:23,850 --> 00:01:28,710
rock star and this is everything but a

00:01:26,369 --> 00:01:30,689
rock star so we need to make that clear

00:01:28,710 --> 00:01:32,400
why am I telling you this because I want

00:01:30,689 --> 00:01:33,810
everyone in the audience to like take a

00:01:32,400 --> 00:01:35,700
chance and apply and speak at a

00:01:33,810 --> 00:01:37,680
conference because if you're passionate

00:01:35,700 --> 00:01:39,509
enough about a topic no matter what it

00:01:37,680 --> 00:01:42,000
is it may sound boring in your head my

00:01:39,509 --> 00:01:43,530
talk is boring it's about yeah so even

00:01:42,000 --> 00:01:45,329
if it sounds boring in your head you

00:01:43,530 --> 00:01:47,340
should apply and you should talk on

00:01:45,329 --> 00:01:49,140
stage because people who are standing

00:01:47,340 --> 00:01:51,840
here in the stage we are nothing special

00:01:49,140 --> 00:01:53,850
we're oh yeah I have one more term he

00:01:51,840 --> 00:01:56,009
rocked the stage the reality at least

00:01:53,850 --> 00:01:57,540
for me most of the time is he read his

00:01:56,009 --> 00:01:59,460
notes from made on a plane slides

00:01:57,540 --> 00:02:01,740
trembling for 30 minutes while praying

00:01:59,460 --> 00:02:03,810
you phone fine you won't find out I'm a

00:02:01,740 --> 00:02:05,009
fraud so I just want to say that at the

00:02:03,810 --> 00:02:06,689
end of the day we're all the same you're

00:02:05,009 --> 00:02:08,069
just code monkeys trying to make weird

00:02:06,689 --> 00:02:10,590
libraries work together by writing

00:02:08,069 --> 00:02:13,170
shitty hacks so that's what I wanted to

00:02:10,590 --> 00:02:17,670
say before beginning thank you

00:02:13,170 --> 00:02:20,030
Thanks that being said you soon kitty

00:02:17,670 --> 00:02:23,520
I'm a rockstar senior ninja developer

00:02:20,030 --> 00:02:25,560
and I love front-end I love open source

00:02:23,520 --> 00:02:27,150
I love making products lately the last

00:02:25,560 --> 00:02:29,160
year I've been focused on training and

00:02:27,150 --> 00:02:30,900
workshops I have this thing called react

00:02:29,160 --> 00:02:32,400
Academy and if you need a workshops for

00:02:30,900 --> 00:02:36,090
any of these technologies react react

00:02:32,400 --> 00:02:37,650
native and so on just let me know today

00:02:36,090 --> 00:02:43,560
we're going to talk about the exciting

00:02:37,650 --> 00:02:44,850
future of react I'm kind of I'm talking

00:02:43,560 --> 00:02:48,780
about react all the time so I'm kind of

00:02:44,850 --> 00:02:50,700
bored by it so let's see react 16 the

00:02:48,780 --> 00:02:52,800
current version of react is react 16 we

00:02:50,700 --> 00:02:55,769
were having laughs and fun when angular

00:02:52,800 --> 00:02:57,300
went from angular 1 to angular 2 to

00:02:55,769 --> 00:02:58,830
whatever they have now just angle or

00:02:57,300 --> 00:03:00,239
something that was the logical

00:02:58,830 --> 00:03:02,580
progression and we're like haha they

00:03:00,239 --> 00:03:04,350
skipped some versions and we went from

00:03:02,580 --> 00:03:05,670
zero point fourteen to fifteen and

00:03:04,350 --> 00:03:07,920
everyone's like oh yeah that makes sense

00:03:05,670 --> 00:03:10,019
right we just skipped that makes sense

00:03:07,920 --> 00:03:11,850
that's fun how did they announce react

00:03:10,019 --> 00:03:14,010
sixteen what was the announcement I said

00:03:11,850 --> 00:03:15,690
we have react fibre so the core react

00:03:14,010 --> 00:03:17,970
algorithm has been completely rewritten

00:03:15,690 --> 00:03:19,320
that's amazing that's mind-blowing and I

00:03:17,970 --> 00:03:21,360
have some small stuff like we have

00:03:19,320 --> 00:03:22,950
portals Aero boundaries server-side

00:03:21,360 --> 00:03:24,930
rendering custom done blah blah blah

00:03:22,950 --> 00:03:27,180
tears or just the small things how

00:03:24,930 --> 00:03:28,709
people read the announcement was like we

00:03:27,180 --> 00:03:30,750
can render multiple elements without a

00:03:28,709 --> 00:03:33,150
wrapper and we have fiber whatever just

00:03:30,750 --> 00:03:34,980
some small things so we're gonna start

00:03:33,150 --> 00:03:37,019
that way just how people perceive the

00:03:34,980 --> 00:03:38,700
new version of react rendering multiple

00:03:37,019 --> 00:03:40,799
elements without a wrapper now if you're

00:03:38,700 --> 00:03:42,780
not familiar with GSX or javascript you

00:03:40,799 --> 00:03:44,160
cannot do this in JavaScript right so I

00:03:42,780 --> 00:03:46,680
cannot have a component called list

00:03:44,160 --> 00:03:48,390
items that returns two things at once so

00:03:46,680 --> 00:03:50,489
I got to wrap them with something if you

00:03:48,390 --> 00:03:51,989
wrap them with a div we would break the

00:03:50,489 --> 00:03:54,150
logic that we want to have here we would

00:03:51,989 --> 00:03:56,100
like list items to return only li

00:03:54,150 --> 00:03:57,989
elements so we can put it in a UL

00:03:56,100 --> 00:04:01,170
element maybe so if we wrap them we're

00:03:57,989 --> 00:04:02,940
in a deal we're gonna break that the

00:04:01,170 --> 00:04:04,410
enabled us to return arrays which is

00:04:02,940 --> 00:04:06,150
kind of ugly because we have to put

00:04:04,410 --> 00:04:08,459
everything into array at commis tier

00:04:06,150 --> 00:04:10,109
it's like not what we wanted and since

00:04:08,459 --> 00:04:12,870
they enabled the returning of a race in

00:04:10,109 --> 00:04:15,660
react of course some smartass wrote this

00:04:12,870 --> 00:04:17,070
component they called it aux you're

00:04:15,660 --> 00:04:19,260
taking the children and you're returning

00:04:17,070 --> 00:04:21,330
the children so you can just write this

00:04:19,260 --> 00:04:23,760
code you can wrap our list items into an

00:04:21,330 --> 00:04:25,860
aux component and then it will render no

00:04:23,760 --> 00:04:26,830
Dhamma Dom element around them so this

00:04:25,860 --> 00:04:28,330
was

00:04:26,830 --> 00:04:30,159
a verified live footage of the react

00:04:28,330 --> 00:04:32,110
team after seeing this aux component

00:04:30,159 --> 00:04:34,090
because they had a plan of actually

00:04:32,110 --> 00:04:35,830
doing these with fragments so now in

00:04:34,090 --> 00:04:37,360
react you can import fragment from react

00:04:35,830 --> 00:04:39,310
which does the same thing you can just

00:04:37,360 --> 00:04:40,990
wrap a bunch of elements and it won't

00:04:39,310 --> 00:04:43,689
render anything in the Dom around them

00:04:40,990 --> 00:04:46,330
and let's see some no yeah there's also

00:04:43,689 --> 00:04:48,550
gsx fragments syntax for this also the

00:04:46,330 --> 00:04:50,740
reason why people switch to view so guys

00:04:48,550 --> 00:04:52,210
you can literally render an empty

00:04:50,740 --> 00:04:54,129
element now it's just an empty element

00:04:52,210 --> 00:04:55,990
in close an empty element and it's not

00:04:54,129 --> 00:04:58,509
gonna render anything in the Dom that's

00:04:55,990 --> 00:05:00,460
crazy so what are the use cases if we

00:04:58,509 --> 00:05:02,500
have a pair of pairs like an array of

00:05:00,460 --> 00:05:05,379
arrays and we want to map over them but

00:05:02,500 --> 00:05:06,789
only render allies into a ul we can do

00:05:05,379 --> 00:05:08,349
it by wrapping those allies in a

00:05:06,789 --> 00:05:10,810
fragment instead of a div it's pretty

00:05:08,349 --> 00:05:12,280
cool or if we have this list of

00:05:10,810 --> 00:05:13,750
celebrities we want to map over them

00:05:12,280 --> 00:05:16,930
just display their names and display a

00:05:13,750 --> 00:05:18,940
line like below each of the names but

00:05:16,930 --> 00:05:21,009
except from the last one we can do this

00:05:18,940 --> 00:05:22,659
and we can wrap both of them in a

00:05:21,009 --> 00:05:24,430
fragment instead of wrapping them in a

00:05:22,659 --> 00:05:27,159
div so it has some pretty cool use cases

00:05:24,430 --> 00:05:29,289
um we also have a new feature components

00:05:27,159 --> 00:05:30,669
can now read and render strings and it

00:05:29,289 --> 00:05:32,409
may sound silly until you figure out

00:05:30,669 --> 00:05:34,479
some use cases for it it's pretty cool

00:05:32,409 --> 00:05:36,009
we can just pass a string to a component

00:05:34,479 --> 00:05:41,199
and he'll do something it will return a

00:05:36,009 --> 00:05:42,969
string back next up we have portals so

00:05:41,199 --> 00:05:45,129
they provide a first-class way to render

00:05:42,969 --> 00:05:47,680
children into a dom node that's exist

00:05:45,129 --> 00:05:49,180
somewhere outside of the dome here here

00:05:47,680 --> 00:05:51,009
of the parent component this is pretty

00:05:49,180 --> 00:05:52,779
cool like we can render something that's

00:05:51,009 --> 00:05:54,669
in the same like life cycle of that

00:05:52,779 --> 00:05:57,639
component but we render it somewhere

00:05:54,669 --> 00:05:59,379
else so when I first read about portals

00:05:57,639 --> 00:06:00,990
and what they do I was like holy hell

00:05:59,379 --> 00:06:04,120
now we can do pretty cool things so

00:06:00,990 --> 00:06:06,639
let's show a demo of portals and what

00:06:04,120 --> 00:06:08,349
they can do and I have this simple app

00:06:06,639 --> 00:06:11,680
let me just see if everything is running

00:06:08,349 --> 00:06:13,539
all right you just say hello J's heroes

00:06:11,680 --> 00:06:14,949
some people call this a startup this I'm

00:06:13,539 --> 00:06:17,080
working on my new start I mean it's just

00:06:14,949 --> 00:06:19,449
five lines of code so I'm gonna show you

00:06:17,080 --> 00:06:21,909
the startup and we're gonna use portals

00:06:19,449 --> 00:06:23,650
here so what do we have here I added a

00:06:21,909 --> 00:06:25,750
class name here just so we can see how

00:06:23,650 --> 00:06:27,969
does it look like in the Dom so I'm

00:06:25,750 --> 00:06:29,740
gonna zoom this in so you can see we

00:06:27,969 --> 00:06:31,449
have the route where our app is mounted

00:06:29,740 --> 00:06:33,729
and then we have my app and we have

00:06:31,449 --> 00:06:35,889
hello GS heroes but what if I want to

00:06:33,729 --> 00:06:37,750
have something here like something but I

00:06:35,889 --> 00:06:41,400
render it somewhere outside of the route

00:06:37,750 --> 00:06:47,410
so right now if I go to index.html

00:06:41,400 --> 00:06:49,600
right here we will see that a react app

00:06:47,410 --> 00:06:52,150
is mounted into route but I have 200 if

00:06:49,600 --> 00:06:54,400
counter and model so let's see if we can

00:06:52,150 --> 00:06:57,130
render something outside of the route

00:06:54,400 --> 00:06:58,930
div with portals so how do we use

00:06:57,130 --> 00:07:01,840
portals we can just import react Dom

00:06:58,930 --> 00:07:05,590
from react Dom and here I can see react

00:07:01,840 --> 00:07:07,360
Dom create portal and as the first

00:07:05,590 --> 00:07:08,650
element we're gonna as a first argument

00:07:07,360 --> 00:07:10,270
we're gonna pass whatever we want to

00:07:08,650 --> 00:07:12,850
render and as a second one we're gonna

00:07:10,270 --> 00:07:15,720
say get element by ID and I'm gonna say

00:07:12,850 --> 00:07:18,790
counter so we're gonna render something

00:07:15,720 --> 00:07:22,870
this font is too huge so hopefully this

00:07:18,790 --> 00:07:24,310
will work for me yeah works great so we

00:07:22,870 --> 00:07:26,320
have this is the first argument is the

00:07:24,310 --> 00:07:29,800
second argument and then I guess I need

00:07:26,320 --> 00:07:31,990
to close this function and then it looks

00:07:29,800 --> 00:07:33,760
like it's here but when I when I see is

00:07:31,990 --> 00:07:36,400
actually rendered outside of fruit so I

00:07:33,760 --> 00:07:37,990
have my app and I have this title but

00:07:36,400 --> 00:07:40,419
this sum this deal with something

00:07:37,990 --> 00:07:42,070
rendered somewhere outside and we can

00:07:40,419 --> 00:07:44,410
have some pretty cool use cases for this

00:07:42,070 --> 00:07:48,100
like I can write a modal component and I

00:07:44,410 --> 00:07:50,370
can say Moodle equals it's just gonna

00:07:48,100 --> 00:07:53,919
render a div and here we're gonna say

00:07:50,370 --> 00:07:55,750
class name equals overlay and another

00:07:53,919 --> 00:07:58,390
div with a class name that's gonna be

00:07:55,750 --> 00:08:02,620
content and here we're gonna put the

00:07:58,390 --> 00:08:05,530
children I'm gonna take down from props

00:08:02,620 --> 00:08:07,120
and now right here when I render

00:08:05,530 --> 00:08:09,820
something I'm gonna delete this portal

00:08:07,120 --> 00:08:15,250
for a second and I'm gonna say modal

00:08:09,820 --> 00:08:17,350
high jazz heroes inside this works great

00:08:15,250 --> 00:08:19,419
even without portals this can work okay

00:08:17,350 --> 00:08:21,340
right I'm gonna render it right where it

00:08:19,419 --> 00:08:23,440
is if I just inspect element and I see

00:08:21,340 --> 00:08:25,479
where this is I have route my app I have

00:08:23,440 --> 00:08:27,940
the overlay and the content but this

00:08:25,479 --> 00:08:30,640
model is using position fixed and like

00:08:27,940 --> 00:08:32,440
window the width is full width and the

00:08:30,640 --> 00:08:34,690
height is full height so we can break it

00:08:32,440 --> 00:08:37,659
but actually if I wrap it inside of

00:08:34,690 --> 00:08:39,880
another div here and I say that this div

00:08:37,659 --> 00:08:44,350
will have some transform like translate

00:08:39,880 --> 00:08:45,310
maybe and now we're gonna break it you

00:08:44,350 --> 00:08:48,400
see what's gonna happen because

00:08:45,310 --> 00:08:49,839
position:fixed worked only like it was

00:08:48,400 --> 00:08:52,089
working just because none of the

00:08:49,839 --> 00:08:53,230
elements above it had any transforms so

00:08:52,089 --> 00:08:54,580
as soon as we had a transform we're

00:08:53,230 --> 00:08:56,980
going to break it so what can we do

00:08:54,580 --> 00:09:01,000
yes let's see where this is right now

00:08:56,980 --> 00:09:03,490
it's right here and I can just somehow

00:09:01,000 --> 00:09:05,080
maybe put it on oh it won't let me do it

00:09:03,490 --> 00:09:06,670
but anyway I can just take this if I

00:09:05,080 --> 00:09:08,500
render it somewhere outside in a model

00:09:06,670 --> 00:09:10,540
it's never gonna break because it's

00:09:08,500 --> 00:09:11,980
always gonna render outside so let's do

00:09:10,540 --> 00:09:14,050
that I'm gonna add some state I'm gonna

00:09:11,980 --> 00:09:17,709
see show model here and I'm gonna make

00:09:14,050 --> 00:09:20,709
it false I'm gonna add a button and on

00:09:17,709 --> 00:09:25,600
click we're gonna see there's that show

00:09:20,709 --> 00:09:30,070
model and here I'm gonna see show model

00:09:25,600 --> 00:09:40,450
and do it like this this is gonna come

00:09:30,070 --> 00:09:43,570
from the state cool work sweet oh yeah I

00:09:40,450 --> 00:09:47,529
have to actually have a function show

00:09:43,570 --> 00:09:54,730
model right and I'm gonna set the state

00:09:47,529 --> 00:09:58,660
to show model true you wanted to catch

00:09:54,730 --> 00:10:00,130
that error right okay so now what we

00:09:58,660 --> 00:10:01,390
need to do is we just need to create a

00:10:00,130 --> 00:10:02,920
portal in the model component so

00:10:01,390 --> 00:10:04,690
everytime we render it somewhere it

00:10:02,920 --> 00:10:06,730
renders outside and that's pretty cool

00:10:04,690 --> 00:10:08,740
so all I need to do is just grab this

00:10:06,730 --> 00:10:12,880
div and actually here I'm gonna see

00:10:08,740 --> 00:10:14,920
react Dom create portal and here I'm

00:10:12,880 --> 00:10:17,740
gonna put the content and as the second

00:10:14,920 --> 00:10:19,450
argument I'm gonna say get element by ID

00:10:17,740 --> 00:10:21,100
and I'm gonna see model so every time

00:10:19,450 --> 00:10:22,930
I'm going to render this model component

00:10:21,100 --> 00:10:25,750
although it's part of this app it's

00:10:22,930 --> 00:10:27,220
gonna render somewhere outside so if we

00:10:25,750 --> 00:10:30,430
wait for the Refresh I know if you do

00:10:27,220 --> 00:10:32,950
all right so now when I inspect element

00:10:30,430 --> 00:10:34,899
we see everything is enroute except the

00:10:32,950 --> 00:10:36,070
model that should be right here but it's

00:10:34,899 --> 00:10:37,990
not so we render it somewhere outside

00:10:36,070 --> 00:10:39,520
and you may think okay I already know

00:10:37,990 --> 00:10:41,050
this is boring stuff if you already knew

00:10:39,520 --> 00:10:43,630
it when we can do something even crazier

00:10:41,050 --> 00:10:45,490
with models so let me just add a counter

00:10:43,630 --> 00:10:47,440
here that's gonna start from zero when

00:10:45,490 --> 00:10:49,949
the component mounts I'm gonna set an

00:10:47,440 --> 00:10:54,220
interval and I'm gonna say every second

00:10:49,949 --> 00:10:56,170
right here we're gonna set the state to

00:10:54,220 --> 00:10:59,800
the current state plus one so we're

00:10:56,170 --> 00:11:01,690
gonna say counter equals state not

00:10:59,800 --> 00:11:03,100
counter plus one so we're going to loop

00:11:01,690 --> 00:11:05,140
over it every second we're gonna

00:11:03,100 --> 00:11:07,800
increase the counter and here I'm gonna

00:11:05,140 --> 00:11:11,490
say counter is

00:11:07,800 --> 00:11:14,620
counter that's gonna come from the state

00:11:11,490 --> 00:11:17,770
pretty cool stuff I can put it inside

00:11:14,620 --> 00:11:20,020
with a model here let's just see if if

00:11:17,770 --> 00:11:21,340
it's gonna work so I have a counter

00:11:20,020 --> 00:11:23,200
that's part of this app it's gonna keep

00:11:21,340 --> 00:11:24,610
ticking here in a click show model it's

00:11:23,200 --> 00:11:25,930
gonna keep ticking in there because it's

00:11:24,610 --> 00:11:27,880
the same state so it doesn't matter

00:11:25,930 --> 00:11:30,070
where we render this it's gonna it's the

00:11:27,880 --> 00:11:31,720
is the same life cycle method so can we

00:11:30,070 --> 00:11:33,310
render this in a separate window that

00:11:31,720 --> 00:11:35,440
would be crazy right if it continues

00:11:33,310 --> 00:11:37,540
working if you make a window component

00:11:35,440 --> 00:11:39,640
instead of a model component so let's do

00:11:37,540 --> 00:11:42,730
that here I'm gonna call this window and

00:11:39,640 --> 00:11:44,530
I'm gonna delete my model component and

00:11:42,730 --> 00:11:47,500
I'm gonna create a window component this

00:11:44,530 --> 00:11:50,020
one is gonna be a class and here when I

00:11:47,500 --> 00:11:52,270
return I'm gonna return null that's

00:11:50,020 --> 00:11:53,500
gonna work right so what do we need to

00:11:52,270 --> 00:11:55,540
create here is we're gonna create

00:11:53,500 --> 00:11:57,880
something like container element and

00:11:55,540 --> 00:12:00,610
here we're gonna render the content so

00:11:57,880 --> 00:12:03,070
I'm gonna say document dot create

00:12:00,610 --> 00:12:04,870
element and I'm gonna make it a div and

00:12:03,070 --> 00:12:07,960
now when I'm rendering here I'm gonna

00:12:04,870 --> 00:12:09,820
see react Dom dot create portal and I'm

00:12:07,960 --> 00:12:12,100
gonna put this that problems the

00:12:09,820 --> 00:12:14,260
children so whatever we put inside of it

00:12:12,100 --> 00:12:15,820
but I'm gonna render it it is in this

00:12:14,260 --> 00:12:17,080
dot container element and of course

00:12:15,820 --> 00:12:19,120
nothing is gonna happen right now

00:12:17,080 --> 00:12:20,860
because we're not mounting this element

00:12:19,120 --> 00:12:22,930
anywhere so whenever I click show model

00:12:20,860 --> 00:12:25,090
something happens but we're not mounting

00:12:22,930 --> 00:12:29,050
in anywhere so in component did mount

00:12:25,090 --> 00:12:31,150
what I can do is I can see here external

00:12:29,050 --> 00:12:33,250
window equals null and here I can say

00:12:31,150 --> 00:12:34,750
this that external window equals window

00:12:33,250 --> 00:12:36,820
dot open so we're gonna open a new

00:12:34,750 --> 00:12:40,960
window every time this component mounts

00:12:36,820 --> 00:12:47,020
and I'm gonna say height is 400 and

00:12:40,960 --> 00:12:49,180
width is 600 and I think it's gonna

00:12:47,020 --> 00:12:51,040
happen but I'm gonna open a window

00:12:49,180 --> 00:12:52,810
so every time we render this window

00:12:51,040 --> 00:12:54,790
component on mount it's going to open a

00:12:52,810 --> 00:12:56,080
window so now what we need to do is we

00:12:54,790 --> 00:12:58,390
need to see external window that

00:12:56,080 --> 00:13:00,550
document that body that append child and

00:12:58,390 --> 00:13:02,530
just append this element where we're

00:13:00,550 --> 00:13:04,540
actually portaling all over or all of

00:13:02,530 --> 00:13:07,510
the children so if I append this child

00:13:04,540 --> 00:13:11,080
is that container element let's see

00:13:07,510 --> 00:13:12,490
what's gonna happen okay so we keep the

00:13:11,080 --> 00:13:14,410
the counter I don't know if you can see

00:13:12,490 --> 00:13:16,120
I can zoom in a little bit we can

00:13:14,410 --> 00:13:18,070
actually portal something in an external

00:13:16,120 --> 00:13:20,320
window it's keeping the same life cycle

00:13:18,070 --> 00:13:21,260
which is pretty cool we can even make it

00:13:20,320 --> 00:13:24,830
like when the component

00:13:21,260 --> 00:13:26,660
and mounts component will unmount right

00:13:24,830 --> 00:13:31,670
here we can say this that external

00:13:26,660 --> 00:13:34,120
window dot closed and now here I'm going

00:13:31,670 --> 00:13:39,170
to change this function to toggle and

00:13:34,120 --> 00:13:41,210
we're gonna say this that's actually

00:13:39,170 --> 00:13:44,150
stayed at show model we're gonna switch

00:13:41,210 --> 00:13:45,710
the value and here instead of open

00:13:44,150 --> 00:13:47,930
something we're gonna say toggle model

00:13:45,710 --> 00:13:49,790
and let's see what's gonna happen I'm

00:13:47,930 --> 00:13:52,070
gonna move this to the left so when I

00:13:49,790 --> 00:13:54,230
click I'm enter I'm actually opening a

00:13:52,070 --> 00:13:55,790
new window I still treat it as a part of

00:13:54,230 --> 00:13:57,710
this component lifecycle I'm gonna click

00:13:55,790 --> 00:13:59,180
again it's gonna close it so we kind of

00:13:57,710 --> 00:14:00,620
have a component that's a window that's

00:13:59,180 --> 00:14:04,430
that's pretty crazy

00:14:00,620 --> 00:14:06,920
so that was the first demo about portals

00:14:04,430 --> 00:14:08,570
so when you think about all of the

00:14:06,920 --> 00:14:10,160
possibilities it's mind-blowing like

00:14:08,570 --> 00:14:12,230
where you can put your Dom elements and

00:14:10,160 --> 00:14:15,350
still keep that parent lifecycle it's

00:14:12,230 --> 00:14:17,210
pretty amazing alright next up we have

00:14:15,350 --> 00:14:18,770
arrow boundaries and handling JavaScript

00:14:17,210 --> 00:14:20,060
errors in our components so I'm gonna

00:14:18,770 --> 00:14:22,250
give you three ways to handle the

00:14:20,060 --> 00:14:24,080
JavaScript errors in your components the

00:14:22,250 --> 00:14:25,460
first one is really smart don't have any

00:14:24,080 --> 00:14:27,830
errors in your components this one

00:14:25,460 --> 00:14:29,300
always works the second one I mean I've

00:14:27,830 --> 00:14:30,950
been using lately is don't open the

00:14:29,300 --> 00:14:33,320
console and you won't see any errors it

00:14:30,950 --> 00:14:35,420
works right if it's not broken and then

00:14:33,320 --> 00:14:36,830
the third one is the official win react

00:14:35,420 --> 00:14:39,260
right now they introduced the lifecycle

00:14:36,830 --> 00:14:41,630
method called component did catch so

00:14:39,260 --> 00:14:43,790
whenever a class component declares that

00:14:41,630 --> 00:14:45,590
defines this method it's gonna become an

00:14:43,790 --> 00:14:47,840
error boundary it's gonna catch all of

00:14:45,590 --> 00:14:51,740
the errors of the children now not of

00:14:47,840 --> 00:14:53,390
itself just of all the children so this

00:14:51,740 --> 00:14:55,220
is how we can implement it in the state

00:14:53,390 --> 00:14:57,590
we can keep a value it has error equals

00:14:55,220 --> 00:14:58,970
false if we actually find an error we're

00:14:57,590 --> 00:15:00,620
gonna catch it in component did catch

00:14:58,970 --> 00:15:02,600
we're gonna flip the state to true and

00:15:00,620 --> 00:15:04,520
then in our render method I can check if

00:15:02,600 --> 00:15:06,530
I have an error instead of rendering the

00:15:04,520 --> 00:15:08,900
default UI just render like a fallback

00:15:06,530 --> 00:15:10,370
UI so see something went wrong and this

00:15:08,900 --> 00:15:12,620
is pretty cool because we can now handle

00:15:10,370 --> 00:15:16,940
different if a piece of our application

00:15:12,620 --> 00:15:18,470
breaks we can handle that so if we have

00:15:16,940 --> 00:15:19,850
this gallery widget for example I can

00:15:18,470 --> 00:15:21,320
just wrap it in an arrow boundary if

00:15:19,850 --> 00:15:23,840
something bad happens inside of it

00:15:21,320 --> 00:15:25,940
instead of our entire app going blank

00:15:23,840 --> 00:15:27,650
and nothing works we can just display an

00:15:25,940 --> 00:15:29,570
error saying hey sorry something went

00:15:27,650 --> 00:15:30,830
wrong and of course I know what's in

00:15:29,570 --> 00:15:32,870
your head right now you're thinking we

00:15:30,830 --> 00:15:35,310
can wrap the entire app in an arrow

00:15:32,870 --> 00:15:37,589
boundary and we magically gonna fix

00:15:35,310 --> 00:15:39,600
we can do this but instead of a blank

00:15:37,589 --> 00:15:41,670
screen we're just gonna get that h1

00:15:39,600 --> 00:15:43,350
saying something went wrong so your idea

00:15:41,670 --> 00:15:44,940
of this arrow boundary component is just

00:15:43,350 --> 00:15:49,050
to wrap different parts of your app and

00:15:44,940 --> 00:15:50,490
handling different error states and yeah

00:15:49,050 --> 00:15:52,140
we have fiber that small thing it's

00:15:50,490 --> 00:15:53,790
actually the biggest change in react oh

00:15:52,140 --> 00:15:55,709
that's not the image of fiber we need

00:15:53,790 --> 00:15:57,690
something else all right so if I was a

00:15:55,709 --> 00:15:59,940
really smart person that can explain

00:15:57,690 --> 00:16:02,130
fiber with diagrams and fancy graphics

00:15:59,940 --> 00:16:04,500
and stuff I would explain it to you but

00:16:02,130 --> 00:16:06,060
actually I'm gonna give you the simpler

00:16:04,500 --> 00:16:08,540
version when it was not fiber it was

00:16:06,060 --> 00:16:11,730
slow now it's fast all right

00:16:08,540 --> 00:16:13,320
so react fiber is responsible for all of

00:16:11,730 --> 00:16:15,450
these new features that are happening in

00:16:13,320 --> 00:16:17,790
react including your boundaries fragment

00:16:15,450 --> 00:16:19,620
a sync and so on so it's the underlying

00:16:17,790 --> 00:16:23,370
reason of why we can do all of these

00:16:19,620 --> 00:16:25,230
other things and if you saw the title of

00:16:23,370 --> 00:16:26,550
my talk was the future of react so you

00:16:25,230 --> 00:16:27,899
maybe think you know your fake news

00:16:26,550 --> 00:16:29,940
you're talking about the present of

00:16:27,899 --> 00:16:31,440
react not the future so let's talk about

00:16:29,940 --> 00:16:33,149
what happened in the last period like

00:16:31,440 --> 00:16:35,190
they added a bunch of new things they

00:16:33,149 --> 00:16:40,020
finally added a new context API that was

00:16:35,190 --> 00:16:41,190
my reaction so yeah I was pretty happy I

00:16:40,020 --> 00:16:44,070
need to change this life because you're

00:16:41,190 --> 00:16:45,329
gonna have every time that loops so 2018

00:16:44,070 --> 00:16:47,040
is gonna be remembered for two things

00:16:45,329 --> 00:16:50,520
like kids are eating tight pots and

00:16:47,040 --> 00:16:53,010
context so why am i excited for this new

00:16:50,520 --> 00:16:54,779
API so until now if you wanted to use

00:16:53,010 --> 00:16:56,670
context you went to the docs page it

00:16:54,779 --> 00:16:59,010
said it's unstable you shouldn't use it

00:16:56,670 --> 00:17:00,720
only library authors should use context

00:16:59,010 --> 00:17:02,339
all right and now they're finally

00:17:00,720 --> 00:17:03,990
changed the way it's implemented and

00:17:02,339 --> 00:17:05,730
everyone is advised to actually use it

00:17:03,990 --> 00:17:07,530
in their app so if you need to have like

00:17:05,730 --> 00:17:12,390
global state management or something you

00:17:07,530 --> 00:17:14,069
can now use context for that I'm gonna

00:17:12,390 --> 00:17:19,980
actually show all of this in a demo

00:17:14,069 --> 00:17:23,449
let me just kill this one go here all

00:17:19,980 --> 00:17:23,449
right that's my default background

00:17:26,990 --> 00:17:34,910
did you like solve my data so it's just

00:17:29,750 --> 00:17:39,760
like he's watching all the time so while

00:17:34,910 --> 00:17:39,760
this app starts oh it's here

00:17:41,559 --> 00:17:44,920
wait for it

00:17:45,400 --> 00:17:52,910
Jesus Christ you starting to happen it's

00:17:48,380 --> 00:17:56,330
broken cool stuff so yeah I forgot a

00:17:52,910 --> 00:17:57,980
letter somewhere right here okay so this

00:17:56,330 --> 00:17:59,929
is my new startup it's beautiful

00:17:57,980 --> 00:18:01,610
material design we have a header we have

00:17:59,929 --> 00:18:03,320
a footer we have some content in between

00:18:01,610 --> 00:18:06,260
and now we would like to implement

00:18:03,320 --> 00:18:08,630
something with context all right so what

00:18:06,260 --> 00:18:11,450
we can do is we have a new method on the

00:18:08,630 --> 00:18:13,580
react here we can say a theme context

00:18:11,450 --> 00:18:15,770
for example we're gonna implement a

00:18:13,580 --> 00:18:18,380
simple theme manager for app so I can

00:18:15,770 --> 00:18:20,300
see react create context and here I can

00:18:18,380 --> 00:18:22,070
pass past the default value so I can

00:18:20,300 --> 00:18:24,650
make this a string like dark and white

00:18:22,070 --> 00:18:26,420
and black or I can actually pass an

00:18:24,650 --> 00:18:28,250
entire value like an object here so I'm

00:18:26,420 --> 00:18:30,770
gonna say background color equals black

00:18:28,250 --> 00:18:33,230
and color equals white and this is gonna

00:18:30,770 --> 00:18:34,610
be my default theme now other components

00:18:33,230 --> 00:18:36,380
in my app if they import this theme

00:18:34,610 --> 00:18:38,179
context they're gonna get two new

00:18:36,380 --> 00:18:40,520
components so this gives us Steam

00:18:38,179 --> 00:18:42,500
context that provider and theme context

00:18:40,520 --> 00:18:44,420
that consumer so we cannot use this as

00:18:42,500 --> 00:18:46,309
it is it's not a component but it gives

00:18:44,420 --> 00:18:48,110
us two different components so now in my

00:18:46,309 --> 00:18:51,950
app I can just wrap everything in two

00:18:48,110 --> 00:18:54,980
team contexts that consumer I'm gonna

00:18:51,950 --> 00:18:56,690
use this render props in text and right

00:18:54,980 --> 00:19:00,110
here I would receive my theme which

00:18:56,690 --> 00:19:01,820
would be this entire object alright and

00:19:00,110 --> 00:19:04,640
now I can see the style of this app can

00:19:01,820 --> 00:19:08,179
be background color equals theme that

00:19:04,640 --> 00:19:10,190
background color and color equals theme

00:19:08,179 --> 00:19:12,350
that color if our theme is simple enough

00:19:10,190 --> 00:19:15,260
we can just use this and our app

00:19:12,350 --> 00:19:16,760
component can read from this theme you

00:19:15,260 --> 00:19:22,130
can see this background if I change this

00:19:16,760 --> 00:19:24,650
to like pink and black the middle is

00:19:22,130 --> 00:19:26,330
gonna change okay so how can other

00:19:24,650 --> 00:19:27,679
components use this context and how we

00:19:26,330 --> 00:19:29,030
can override this context where now

00:19:27,679 --> 00:19:31,040
we're showing how we can use the default

00:19:29,030 --> 00:19:33,470
context and what you would do in reality

00:19:31,040 --> 00:19:35,630
is it is in this app component we can

00:19:33,470 --> 00:19:37,550
keep some themes so I'm gonna see themes

00:19:35,630 --> 00:19:38,929
equals like we're gonna have a dark

00:19:37,550 --> 00:19:41,030
theme which is going to have background

00:19:38,929 --> 00:19:42,800
color black and color white

00:19:41,030 --> 00:19:45,380
gonna have a light team which is gonna

00:19:42,800 --> 00:19:48,290
have background color white and color

00:19:45,380 --> 00:19:50,060
black and we're gonna have some state

00:19:48,290 --> 00:19:51,950
and in this state I'm gonna have a team

00:19:50,060 --> 00:19:53,870
name which is gonna be dark by default

00:19:51,950 --> 00:19:56,660
and I'm gonna have a function called

00:19:53,870 --> 00:19:58,580
toggle theme right here what we're gonna

00:19:56,660 --> 00:20:00,350
do inside of it we're gonna say set the

00:19:58,580 --> 00:20:02,360
state we're gonna grab the old state

00:20:00,350 --> 00:20:05,720
we're gonna return some new one and

00:20:02,360 --> 00:20:08,720
we're gonna say team name equals if our

00:20:05,720 --> 00:20:10,250
current team name equals dark I'm gonna

00:20:08,720 --> 00:20:12,320
make it light otherwise we're gonna make

00:20:10,250 --> 00:20:15,950
it dark so we're just gonna flip the

00:20:12,320 --> 00:20:17,750
theme and now instead of passing a

00:20:15,950 --> 00:20:19,550
consumer here what I can do is I'm gonna

00:20:17,750 --> 00:20:21,230
remove this and I'm gonna pass a

00:20:19,550 --> 00:20:23,750
provider so the providers can now

00:20:21,230 --> 00:20:25,340
override the default value so just so

00:20:23,750 --> 00:20:26,540
it's not confusing I'm gonna remove this

00:20:25,340 --> 00:20:29,180
default value we're not gonna have

00:20:26,540 --> 00:20:31,580
anything in here and I'm gonna provide a

00:20:29,180 --> 00:20:34,280
value so I'm gonna say value equals and

00:20:31,580 --> 00:20:36,440
here I'm gonna say this that team's this

00:20:34,280 --> 00:20:37,820
dot state that team name so we're gonna

00:20:36,440 --> 00:20:38,960
pull out the current team and we're

00:20:37,820 --> 00:20:41,210
going to provide it to all of our

00:20:38,960 --> 00:20:42,620
components and now I'm gonna remove the

00:20:41,210 --> 00:20:45,050
style from here because I don't need it

00:20:42,620 --> 00:20:46,880
and in my header component instead of

00:20:45,050 --> 00:20:49,190
having some default colors I can now

00:20:46,880 --> 00:20:54,140
consume from the state of my parent so I

00:20:49,190 --> 00:20:55,760
can say theme context that consumer I'm

00:20:54,140 --> 00:20:59,090
gonna wrap the entire header component

00:20:55,760 --> 00:21:02,000
right here and I'm gonna have the team

00:20:59,090 --> 00:21:03,710
so now I have access to theme and I can

00:21:02,000 --> 00:21:06,710
see background color equals theme that

00:21:03,710 --> 00:21:10,460
background color and color equals theme

00:21:06,710 --> 00:21:12,350
color okay now what I need to do is just

00:21:10,460 --> 00:21:17,360
export this context other components can

00:21:12,350 --> 00:21:22,480
use it like support cost just import it

00:21:17,360 --> 00:21:24,710
from here and this should work hopefully

00:21:22,480 --> 00:21:26,840
okay now we need a function to actually

00:21:24,710 --> 00:21:28,430
toggle the states we just we need a

00:21:26,840 --> 00:21:29,960
button to toggle it just so we show that

00:21:28,430 --> 00:21:31,730
other components can read from it but

00:21:29,960 --> 00:21:33,440
actually let's make the footer so

00:21:31,730 --> 00:21:35,330
instead of putting a button here we want

00:21:33,440 --> 00:21:37,190
the footer to toggle our component so

00:21:35,330 --> 00:21:38,990
right here in my a parameter I'm

00:21:37,190 --> 00:21:40,850
providing a value I can say actually

00:21:38,990 --> 00:21:42,380
provide an object and in this object

00:21:40,850 --> 00:21:43,760
we're gonna have the current team and

00:21:42,380 --> 00:21:46,760
we're gonna have this function toggled

00:21:43,760 --> 00:21:49,400
team which is dick this does dot toggle

00:21:46,760 --> 00:21:50,810
team and now in in my footer I'm gonna

00:21:49,400 --> 00:21:52,880
do the same thing as in the header so

00:21:50,810 --> 00:21:54,630
I'm gonna hate I'm gonna say team

00:21:52,880 --> 00:21:58,950
contacts dot consumer

00:21:54,630 --> 00:22:01,169
right here and I'm gonna grab this div

00:21:58,950 --> 00:22:03,720
and now right here I have access to

00:22:01,169 --> 00:22:05,190
theme and toggle theme right so let's

00:22:03,720 --> 00:22:07,340
say that the footer doesn't need the

00:22:05,190 --> 00:22:10,380
theme it just needs the toggle theme

00:22:07,340 --> 00:22:13,200
here we're gonna put button toggle the

00:22:10,380 --> 00:22:16,309
theme and we're gonna see on click just

00:22:13,200 --> 00:22:21,750
call toggle theme we need to import this

00:22:16,309 --> 00:22:22,160
so import from app and hopefully this

00:22:21,750 --> 00:22:25,620
will work

00:22:22,160 --> 00:22:26,130
otherwise I'm out of time soon it won't

00:22:25,620 --> 00:22:27,510
work

00:22:26,130 --> 00:22:36,360
toggle the theme I'm doing something

00:22:27,510 --> 00:22:37,799
wrong this consumer hmm oh yeah yeah

00:22:36,360 --> 00:22:41,510
yeah you're right so here I'm now

00:22:37,799 --> 00:22:43,980
grabbing a theme from the object exactly

00:22:41,510 --> 00:22:45,750
so now when I click this in the footer

00:22:43,980 --> 00:22:47,820
something changes in my header so we

00:22:45,750 --> 00:22:50,100
just demonstrated a simple way how these

00:22:47,820 --> 00:22:51,929
two components can read from context and

00:22:50,100 --> 00:22:53,789
just imagine in a real life app if you

00:22:51,929 --> 00:22:55,770
want you can make a global store you can

00:22:53,789 --> 00:22:57,809
just call it my global store context and

00:22:55,770 --> 00:22:59,850
put everything in there or you can

00:22:57,809 --> 00:23:02,159
separate things into like theme context

00:22:59,850 --> 00:23:03,960
and authentication context and so on so

00:23:02,159 --> 00:23:05,730
if a component needs only the theme you

00:23:03,960 --> 00:23:08,280
can just consume from the theme context

00:23:05,730 --> 00:23:09,539
or the auth context or whatever it's a

00:23:08,280 --> 00:23:13,230
pretty cool way of community of

00:23:09,539 --> 00:23:15,600
communicating between components so

00:23:13,230 --> 00:23:18,000
let's go back what else is going on they

00:23:15,600 --> 00:23:19,559
deprecated a bunch of methods so soon

00:23:18,000 --> 00:23:20,730
you won't be able to use component will

00:23:19,559 --> 00:23:22,080
mount component will update and

00:23:20,730 --> 00:23:23,610
goodmorning will receive props there's

00:23:22,080 --> 00:23:26,640
no need for panic because they're not

00:23:23,610 --> 00:23:28,409
breaking your apps so in react 16.3

00:23:26,640 --> 00:23:29,549
they're working they're going to show

00:23:28,409 --> 00:23:31,740
you some warnings that these methods

00:23:29,549 --> 00:23:33,090
will actually get deprecated soon and I

00:23:31,740 --> 00:23:34,799
think in react 17 they're going to

00:23:33,090 --> 00:23:37,530
remove them but they're gonna still be

00:23:34,799 --> 00:23:39,179
there under an unsafe flag so you can

00:23:37,530 --> 00:23:41,490
still use them if you just say unsafe

00:23:39,179 --> 00:23:43,260
before each of these methods so but it's

00:23:41,490 --> 00:23:45,450
good to start migrating from now just so

00:23:43,260 --> 00:23:47,400
your apps are ready so how can you

00:23:45,450 --> 00:23:49,950
migrate I have one simple migration

00:23:47,400 --> 00:23:52,590
strategy for you if you use will

00:23:49,950 --> 00:23:54,059
anywhere just change it to dead but

00:23:52,590 --> 00:23:55,470
there is a problem with component will

00:23:54,059 --> 00:23:57,210
receive problems because that won't

00:23:55,470 --> 00:23:59,100
change to did receive problems we have

00:23:57,210 --> 00:24:00,570
something else so the real migration

00:23:59,100 --> 00:24:03,179
strategy is you should actually use a

00:24:00,570 --> 00:24:05,070
combination of component it update get

00:24:03,179 --> 00:24:06,780
snapshot before update and get derived

00:24:05,070 --> 00:24:07,500
state from props these are a mouthful

00:24:06,780 --> 00:24:10,380
they're just

00:24:07,500 --> 00:24:12,080
horrible long names so you should use a

00:24:10,380 --> 00:24:14,160
combination of these methods to actually

00:24:12,080 --> 00:24:15,660
replace your old methods that you were

00:24:14,160 --> 00:24:17,580
using so let's see the first one get

00:24:15,660 --> 00:24:18,900
derive state from props when they

00:24:17,580 --> 00:24:21,030
announced it I read somewhere and github

00:24:18,900 --> 00:24:23,220
someone said it's intentionally a long

00:24:21,030 --> 00:24:25,020
name because we don't want people to use

00:24:23,220 --> 00:24:26,550
it that often and and nowadays it turns

00:24:25,020 --> 00:24:28,440
out that no people should use this

00:24:26,550 --> 00:24:30,600
method because it replaces all of these

00:24:28,440 --> 00:24:31,740
other lifecycle methods anyway it's too

00:24:30,600 --> 00:24:33,420
long like when I put it in my

00:24:31,740 --> 00:24:35,220
presentation it said did your startup

00:24:33,420 --> 00:24:37,260
disk is almost full I wanted to tweet

00:24:35,220 --> 00:24:39,540
about it Twitter doesn't allow 500

00:24:37,260 --> 00:24:40,860
characters and if they wanted to make it

00:24:39,540 --> 00:24:42,510
so people don't use it they should have

00:24:40,860 --> 00:24:44,970
named and get props and update the state

00:24:42,510 --> 00:24:46,530
on every update of the props but let's

00:24:44,970 --> 00:24:48,870
seriously explain what it does it's a

00:24:46,530 --> 00:24:51,510
new static method it exists on the class

00:24:48,870 --> 00:24:54,000
not on the instances of the component

00:24:51,510 --> 00:24:57,900
and it's gonna update state based on the

00:24:54,000 --> 00:24:59,520
change of props so updates the state

00:24:57,900 --> 00:25:01,650
based on the props we're gonna return an

00:24:59,520 --> 00:25:03,540
object from this method and whatever we

00:25:01,650 --> 00:25:04,980
put in this object is gonna get merged

00:25:03,540 --> 00:25:06,690
with the current state so it's not going

00:25:04,980 --> 00:25:08,130
to replace the state but it's just gonna

00:25:06,690 --> 00:25:10,260
add something new to the state if we

00:25:08,130 --> 00:25:12,060
return now this is not gonna be updated

00:25:10,260 --> 00:25:13,470
okay if we return something else it's

00:25:12,060 --> 00:25:15,060
gonna go in the state so this is the

00:25:13,470 --> 00:25:17,400
simplest example I can read from the

00:25:15,060 --> 00:25:19,110
props and I can decide if this component

00:25:17,400 --> 00:25:21,120
is controlled or not by reading if

00:25:19,110 --> 00:25:23,940
there's value and unchanged in the props

00:25:21,120 --> 00:25:26,130
and this is control control is now gonna

00:25:23,940 --> 00:25:30,200
live in my state so in my state I can

00:25:26,130 --> 00:25:30,200
check this that state that is controlled

00:25:30,290 --> 00:25:35,280
and I actually had a cool example of

00:25:32,580 --> 00:25:38,010
this but probably I miss the slide so

00:25:35,280 --> 00:25:40,260
this method is really gonna be useful in

00:25:38,010 --> 00:25:41,970
combination with component did update so

00:25:40,260 --> 00:25:43,530
you may want to see how it works under

00:25:41,970 --> 00:25:45,090
the hood because there's also second

00:25:43,530 --> 00:25:46,860
argument next props and previous state

00:25:45,090 --> 00:25:48,450
so you should evaluate the combination

00:25:46,860 --> 00:25:50,280
of the next props and the previous state

00:25:48,450 --> 00:25:53,220
to decide how the next stage should be

00:25:50,280 --> 00:25:55,020
updated so take this with a grain of

00:25:53,220 --> 00:25:56,630
salt but I read on github that in a

00:25:55,020 --> 00:25:58,920
future version of react they're gonna

00:25:56,630 --> 00:26:00,960
replace the classes again with a new

00:25:58,920 --> 00:26:02,250
component API so they did this couple of

00:26:00,960 --> 00:26:04,350
times I'm happy about this change

00:26:02,250 --> 00:26:05,790
because in my workshops classes are the

00:26:04,350 --> 00:26:07,680
most confusing things people are

00:26:05,790 --> 00:26:09,900
confused by extending components and

00:26:07,680 --> 00:26:13,080
confused by this and binding methods so

00:26:09,900 --> 00:26:14,220
this good change and I think I have five

00:26:13,080 --> 00:26:15,630
more minutes for the last name but

00:26:14,220 --> 00:26:16,530
there's an interesting package that I

00:26:15,630 --> 00:26:18,450
want to talk to you about

00:26:16,530 --> 00:26:20,130
it's called react call return even if

00:26:18,450 --> 00:26:20,880
you work react with react probably you

00:26:20,130 --> 00:26:22,350
haven't heard of it

00:26:20,880 --> 00:26:24,210
because it says this in the readme

00:26:22,350 --> 00:26:26,820
there's no readme there's no way of

00:26:24,210 --> 00:26:28,770
using this package it says experimental

00:26:26,820 --> 00:26:30,810
package not as stable as react user as

00:26:28,770 --> 00:26:32,760
your own risk no really it's unstable

00:26:30,810 --> 00:26:34,260
this aesthetics but all of that and I

00:26:32,760 --> 00:26:35,970
just read it as this it's stable enough

00:26:34,260 --> 00:26:40,230
for production show a demo of it at

00:26:35,970 --> 00:26:41,640
conferences so react call return we

00:26:40,230 --> 00:26:43,650
imported like this and I really hate

00:26:41,640 --> 00:26:45,420
this because it says unstable underscore

00:26:43,650 --> 00:26:47,340
before each one of the method and I have

00:26:45,420 --> 00:26:49,430
a really smart way of making it stable

00:26:47,340 --> 00:26:51,930
so we can import all of the method as

00:26:49,430 --> 00:26:54,870
stable methods right and we can use it

00:26:51,930 --> 00:26:57,090
like this so instead of doing Q&A I have

00:26:54,870 --> 00:27:05,820
a couple of more minutes I'm gonna do

00:26:57,090 --> 00:27:09,660
this demo go back to our buddy and start

00:27:05,820 --> 00:27:11,700
this up so what do I have in my app I

00:27:09,660 --> 00:27:14,010
have this this is this pattern is called

00:27:11,700 --> 00:27:18,630
compound components oh it's gonna launch

00:27:14,010 --> 00:27:20,400
show resisting these are just buzzword

00:27:18,630 --> 00:27:22,320
that can see dots and Ryan Florence

00:27:20,400 --> 00:27:23,880
invent in their sleep so don't worry if

00:27:22,320 --> 00:27:25,650
you don't know what compound components

00:27:23,880 --> 00:27:26,880
is I even told it to Dan Abramov he was

00:27:25,650 --> 00:27:29,010
like what the is compound

00:27:26,880 --> 00:27:30,780
components so compound components is an

00:27:29,010 --> 00:27:32,880
invented term when we want this tabs

00:27:30,780 --> 00:27:35,010
component to communicate with this tab

00:27:32,880 --> 00:27:36,720
component without passing an explicit

00:27:35,010 --> 00:27:38,640
state so we want to keep all of the

00:27:36,720 --> 00:27:40,530
state in the tabs component and we want

00:27:38,640 --> 00:27:42,810
the tab to know about that state without

00:27:40,530 --> 00:27:45,780
actually telling it like hey the active

00:27:42,810 --> 00:27:49,290
value is this one and on select you

00:27:45,780 --> 00:27:50,910
should do that thing so yeah this should

00:27:49,290 --> 00:27:52,440
be broken because tabs is not defined

00:27:50,910 --> 00:27:56,280
and tab is not defined so let's just

00:27:52,440 --> 00:27:57,930
define them so I'm gonna see tab and

00:27:56,280 --> 00:28:01,800
right now I'm just gonna show the

00:27:57,930 --> 00:28:03,660
children here we're gonna see class name

00:28:01,800 --> 00:28:04,860
equals stab just so we get some default

00:28:03,660 --> 00:28:07,860
style and we're gonna put the children

00:28:04,860 --> 00:28:09,660
and right here for the tabs component

00:28:07,860 --> 00:28:12,960
I'm gonna take the children from the

00:28:09,660 --> 00:28:15,270
props and I'm gonna return a div with

00:28:12,960 --> 00:28:17,250
the class name equals tabs and we're

00:28:15,270 --> 00:28:24,450
gonna put the children inside that

00:28:17,250 --> 00:28:26,190
sounds terrible we have this stable

00:28:24,450 --> 00:28:28,110
methods create return and create call on

00:28:26,190 --> 00:28:29,970
top so this should work right now the

00:28:28,110 --> 00:28:31,770
click doesn't work why because nothing

00:28:29,970 --> 00:28:33,660
happens when click so what we should do

00:28:31,770 --> 00:28:34,919
is it this tab component should receive

00:28:33,660 --> 00:28:38,340
unselect

00:28:34,919 --> 00:28:41,909
and it should receive is active so right

00:28:38,340 --> 00:28:43,529
here when we do on click we want to

00:28:41,909 --> 00:28:46,200
execute on select but we don't want to

00:28:43,529 --> 00:28:48,179
know what does it do our tabs components

00:28:46,200 --> 00:28:49,739
you provided for us and we should also

00:28:48,179 --> 00:28:51,559
do one more thing let me just format

00:28:49,739 --> 00:28:55,679
this because it's really the big font

00:28:51,559 --> 00:28:58,440
like this and we can see right here that

00:28:55,679 --> 00:29:00,059
style equals if it's active we want to

00:28:58,440 --> 00:29:01,619
make the background color different so

00:29:00,059 --> 00:29:04,799
I'm gonna say background color if it's

00:29:01,619 --> 00:29:07,009
active make it pink otherwise make it

00:29:04,799 --> 00:29:07,009
white

00:29:08,149 --> 00:29:12,029
alright I'm gonna remove the on clicks

00:29:10,320 --> 00:29:15,330
just so we can show that right now if I

00:29:12,029 --> 00:29:17,190
do on is active right here and set it to

00:29:15,330 --> 00:29:19,919
true our Home tab will switch to pink

00:29:17,190 --> 00:29:22,710
but nothing works so far all right so we

00:29:19,919 --> 00:29:24,480
need to add an on click here and on

00:29:22,710 --> 00:29:27,149
select so what's missing right now we're

00:29:24,480 --> 00:29:29,070
missing unselect and is active so it's

00:29:27,149 --> 00:29:31,139
the job of the tabs component to somehow

00:29:29,070 --> 00:29:33,119
provide it to the children so what we do

00:29:31,139 --> 00:29:36,570
what we would do previously right here

00:29:33,119 --> 00:29:38,820
we would say react that map know that

00:29:36,570 --> 00:29:41,009
children dot map put all the children

00:29:38,820 --> 00:29:43,289
and for each child which is going to be

00:29:41,009 --> 00:29:45,450
the tab in this case we're gonna render

00:29:43,289 --> 00:29:47,639
they're gonna see react clone element

00:29:45,450 --> 00:29:49,859
tabs who were cloning the children which

00:29:47,639 --> 00:29:51,239
sounds really horrible and as the second

00:29:49,859 --> 00:29:53,009
argument we can provide them with new

00:29:51,239 --> 00:29:55,619
props so right here I can see it's

00:29:53,009 --> 00:29:57,629
active too if I set all of them to true

00:29:55,619 --> 00:29:58,980
all the children is gonna are going to

00:29:57,629 --> 00:30:02,429
receive two and they're gonna flip to

00:29:58,980 --> 00:30:03,869
pink so we also need unselect so let's

00:30:02,429 --> 00:30:05,879
do that in my state of the tabs

00:30:03,869 --> 00:30:09,210
component I'm gonna say selected value

00:30:05,879 --> 00:30:11,639
equals this dot props the default value

00:30:09,210 --> 00:30:13,889
which is gonna be whatever we provide

00:30:11,639 --> 00:30:17,720
here and then we want a way of changing

00:30:13,889 --> 00:30:20,190
that value so I'm gonna say select tab

00:30:17,720 --> 00:30:22,879
it's a function which is gonna receive a

00:30:20,190 --> 00:30:26,330
value called selected value maybe and

00:30:22,879 --> 00:30:28,769
it's gonna say this that set state

00:30:26,330 --> 00:30:30,779
selected value so this is just a way of

00:30:28,769 --> 00:30:32,249
selecting a new value and right here on

00:30:30,779 --> 00:30:33,629
select for each tab we're going to

00:30:32,249 --> 00:30:37,169
provide a new function and we're gonna

00:30:33,629 --> 00:30:39,269
say this dot select tab with tab props

00:30:37,169 --> 00:30:42,179
that value and for is active which is

00:30:39,269 --> 00:30:44,279
gonna compare tab not props that value

00:30:42,179 --> 00:30:47,399
to this that state that selected value

00:30:44,279 --> 00:30:48,540
so now finally our tab component can

00:30:47,399 --> 00:30:50,730
receive is active

00:30:48,540 --> 00:30:53,790
and on select right and let's see if

00:30:50,730 --> 00:30:55,200
this works okay it works so we're

00:30:53,790 --> 00:30:57,240
keeping all of the state in tabs we're

00:30:55,200 --> 00:30:58,590
just passing it down to tab but when you

00:30:57,240 --> 00:31:00,450
think about the implementation it's

00:30:58,590 --> 00:31:03,270
pretty confusing because this tab should

00:31:00,450 --> 00:31:06,450
actually receive only I hate this in

00:31:03,270 --> 00:31:07,440
prettier it should receive only value

00:31:06,450 --> 00:31:10,140
and children

00:31:07,440 --> 00:31:11,760
it doesn't receive unselect and is

00:31:10,140 --> 00:31:13,050
active so it's pretty confusing when you

00:31:11,760 --> 00:31:14,280
look at this implementation you're like

00:31:13,050 --> 00:31:16,260
where is this coming from

00:31:14,280 --> 00:31:18,060
so we with this react call return

00:31:16,260 --> 00:31:19,680
package in react there's a simpler way

00:31:18,060 --> 00:31:21,930
of parents communicating to children

00:31:19,680 --> 00:31:23,580
without context so what I can do is I

00:31:21,930 --> 00:31:25,920
can grab this function right here and

00:31:23,580 --> 00:31:28,470
just create a return here and now I can

00:31:25,920 --> 00:31:30,600
pass any object I want here what this

00:31:28,470 --> 00:31:32,340
means is the parent component is now

00:31:30,600 --> 00:31:34,680
responsible of actually rendering this

00:31:32,340 --> 00:31:36,810
so I'm gonna say the value equals value

00:31:34,680 --> 00:31:39,390
which is coming from the props so it's

00:31:36,810 --> 00:31:41,010
gonna be home about or magic and then

00:31:39,390 --> 00:31:43,440
I'm gonna define a function here called

00:31:41,010 --> 00:31:47,460
render tab and this function will

00:31:43,440 --> 00:31:49,850
actually receive is active and unselect

00:31:47,460 --> 00:31:53,340
so I'm gonna remove them from here and

00:31:49,850 --> 00:31:54,600
now this will return a deal with

00:31:53,340 --> 00:31:56,820
everything and now it's pretty clear

00:31:54,600 --> 00:31:59,190
because I know that this tab component

00:31:56,820 --> 00:32:01,350
should only receive value and children

00:31:59,190 --> 00:32:03,180
and it's a job of a parent component to

00:32:01,350 --> 00:32:05,250
actually provide it with is active and

00:32:03,180 --> 00:32:08,270
on select and call this render tab

00:32:05,250 --> 00:32:11,300
function so now we need to do that here

00:32:08,270 --> 00:32:14,310
so if I remember the syntax correctly I

00:32:11,300 --> 00:32:15,900
should just create a call and this will

00:32:14,310 --> 00:32:17,580
receive three arguments the first one is

00:32:15,900 --> 00:32:19,110
children the second one is a callback

00:32:17,580 --> 00:32:22,050
function when I'm gonna receive props

00:32:19,110 --> 00:32:24,150
and all the tabs and I should return

00:32:22,050 --> 00:32:26,580
something and the third one is this dot

00:32:24,150 --> 00:32:29,820
props so now here I can loop through all

00:32:26,580 --> 00:32:32,130
of my tabs so I can say tab map and for

00:32:29,820 --> 00:32:34,170
each tab I can render whatever I want in

00:32:32,130 --> 00:32:36,690
this case I would like to see tab that

00:32:34,170 --> 00:32:39,000
render tab we have that as a function so

00:32:36,690 --> 00:32:41,340
this one would be actually whatever we

00:32:39,000 --> 00:32:45,330
provide that the term here so this

00:32:41,340 --> 00:32:47,400
object we can just read it here so this

00:32:45,330 --> 00:32:49,590
one has tab dot value in tab render tab

00:32:47,400 --> 00:32:52,140
so here I just need to provide it to is

00:32:49,590 --> 00:32:54,480
active by saying this that state that

00:32:52,140 --> 00:32:56,550
selected value equals to tab dot value

00:32:54,480 --> 00:32:58,710
and we provide the value for the tab

00:32:56,550 --> 00:33:00,750
right here and the second thing would be

00:32:58,710 --> 00:33:02,480
unselect which is a new function and

00:33:00,750 --> 00:33:04,190
we're going to say this dots

00:33:02,480 --> 00:33:06,620
tab and we're going to provide a tab

00:33:04,190 --> 00:33:08,390
value so now we're actually passing this

00:33:06,620 --> 00:33:10,460
object to render tab and it's pretty

00:33:08,390 --> 00:33:15,169
clear that render tab is expecting this

00:33:10,460 --> 00:33:16,970
object with two two values in it so I'm

00:33:15,169 --> 00:33:19,340
gonna finish up if this works otherwise

00:33:16,970 --> 00:33:21,049
I'm gonna fix it until it's like night

00:33:19,340 --> 00:33:22,640
outside okay

00:33:21,049 --> 00:33:23,870
just ignore the error you see how I fix

00:33:22,640 --> 00:33:25,580
it like if I don't want to fix it on

00:33:23,870 --> 00:33:27,980
stage I just close this it's not there

00:33:25,580 --> 00:33:30,020
anymore so this works now the same as we

00:33:27,980 --> 00:33:31,790
had it before but it's just a better way

00:33:30,020 --> 00:33:32,780
of this community these components

00:33:31,790 --> 00:33:34,460
talking to each other

00:33:32,780 --> 00:33:36,020
this is not official this is not like

00:33:34,460 --> 00:33:38,179
stable API but it's pretty cool to see

00:33:36,020 --> 00:33:42,530
in which direction the react team is

00:33:38,179 --> 00:33:44,390
thinking so yeah that was actually the

00:33:42,530 --> 00:33:46,820
last demo you know you can find more

00:33:44,390 --> 00:33:49,250
about me and the following sites kids

00:33:46,820 --> 00:33:51,080
otário add kids on github at kids even

00:33:49,250 --> 00:33:53,179
medium and some stole kids on

00:33:51,080 --> 00:33:55,070
twitter he tweeted once and now i have

00:33:53,179 --> 00:33:57,020
the kids on three ridges because of him

00:33:55,070 --> 00:33:58,820
you can find me on side you can talk to

00:33:57,020 --> 00:34:00,860
me about anything except these questions

00:33:58,820 --> 00:34:02,630
what font is that what font size is that

00:34:00,860 --> 00:34:05,150
what editor is that what team do you use

00:34:02,630 --> 00:34:06,799
I'm kidding you can ask me anything move

00:34:05,150 --> 00:34:08,300
to mask I hopefully I didn't butcher

00:34:06,799 --> 00:34:08,899
this thank you very much for listening

00:34:08,300 --> 00:34:11,530
to my talk

00:34:08,899 --> 00:34:11,530
thanks

00:34:13,810 --> 00:34:16,929

YouTube URL: https://www.youtube.com/watch?v=QjGuhXwpbUc


