Title: Meta Vue Framework - Sebastien Chopin | JSHeroes 2018
Publication date: 2018-05-05
Playlist: JSHeroes 2018
Description: 
	An overview of Nuxt.js, the Meta Vue Framework that let you create blazing fast Vue.js application quickly.
Captions: 
	00:00:01,840 --> 00:00:04,899
[Music]

00:00:10,010 --> 00:00:17,520
so hello everyone thank you for all

00:00:14,190 --> 00:00:20,720
using view GS so I'm going to talk about

00:00:17,520 --> 00:00:26,970
how you can speed up your vgs

00:00:20,720 --> 00:00:29,910
development time with knox GS first i my

00:00:26,970 --> 00:00:32,399
name is sebastian Chopin I'm the koto of

00:00:29,910 --> 00:00:35,969
noxious you can find me on social

00:00:32,399 --> 00:00:39,300
network with 18 X and I'm working with

00:00:35,969 --> 00:00:41,790
my brother on or Orion and we do

00:00:39,300 --> 00:00:46,370
consulting and workshops and open source

00:00:41,790 --> 00:00:51,000
all about view GS and no GS and next GS

00:00:46,370 --> 00:00:52,440
I would like before presenting next tell

00:00:51,000 --> 00:00:55,410
you more about the next year's brother

00:00:52,440 --> 00:00:59,309
it's the core team so there is my real

00:00:55,410 --> 00:01:02,910
brother Alex on Japan and he started

00:00:59,309 --> 00:01:04,860
with me at the beginning and is the guy

00:01:02,910 --> 00:01:06,750
behind next generate and the

00:01:04,860 --> 00:01:09,360
documentation so we will see a bit more

00:01:06,750 --> 00:01:11,670
after but next generate pure power see

00:01:09,360 --> 00:01:13,920
is really great developers he's the guy

00:01:11,670 --> 00:01:17,159
behind web pack so all the web

00:01:13,920 --> 00:01:19,710
configuration we do for you is the guy

00:01:17,159 --> 00:01:22,759
with maintaining it and he's also the

00:01:19,710 --> 00:01:26,310
author of a lot of Knox GS modules and

00:01:22,759 --> 00:01:28,530
to finish Clarke do which is the guy

00:01:26,310 --> 00:01:30,540
responsible for all the testing inside

00:01:28,530 --> 00:01:36,110
Nokia's make sure that your production

00:01:30,540 --> 00:01:40,650
application will will leave forever and

00:01:36,110 --> 00:01:44,850
so about next year's its tallied as a

00:01:40,650 --> 00:01:46,649
copy of next GS if you guys do react yes

00:01:44,850 --> 00:01:49,590
I'm sure you all know about next year's

00:01:46,649 --> 00:01:52,549
and these how it studied in November

00:01:49,590 --> 00:01:57,149
2016 next year's was released in October

00:01:52,549 --> 00:01:59,939
2016 and this is how it started but one

00:01:57,149 --> 00:02:02,640
year after it became quite different

00:01:59,939 --> 00:02:04,649
with added some features because we were

00:02:02,640 --> 00:02:07,680
listening to what the community how the

00:02:04,649 --> 00:02:11,099
community was using next years so then

00:02:07,680 --> 00:02:13,379
we wanted to change it so we will see

00:02:11,099 --> 00:02:13,840
that it's not only for Universal view

00:02:13,379 --> 00:02:17,890
geez

00:02:13,840 --> 00:02:20,530
education today we are on the v1 point

00:02:17,890 --> 00:02:22,510
for release and next to is coming really

00:02:20,530 --> 00:02:25,870
soon if you want to play with this you

00:02:22,510 --> 00:02:29,379
can use next - edge and we will see also

00:02:25,870 --> 00:02:32,470
later how it looks like so right now we

00:02:29,379 --> 00:02:34,390
have 11 thousand stars on github so

00:02:32,470 --> 00:02:37,690
thanks for everyone who started on

00:02:34,390 --> 00:02:40,150
github it means a lot for us we have

00:02:37,690 --> 00:02:42,840
seven translation available Russian

00:02:40,150 --> 00:02:46,630
Japanese Chinese French that's not as

00:02:42,840 --> 00:02:50,140
English and a lot more translation

00:02:46,630 --> 00:02:52,780
thanks to the community as well and we

00:02:50,140 --> 00:03:03,670
have now a hundred thousand downloads

00:02:52,780 --> 00:03:06,310
per month on NPM so we decided to rename

00:03:03,670 --> 00:03:08,310
what next year's purpose is because it's

00:03:06,310 --> 00:03:10,989
not only for universal application now

00:03:08,310 --> 00:03:14,530
we call it a framework for UGS

00:03:10,989 --> 00:03:16,209
developers it means that if you wants to

00:03:14,530 --> 00:03:17,980
server-side rendering you want to clay

00:03:16,209 --> 00:03:20,290
create an application a single page

00:03:17,980 --> 00:03:23,109
application and you don't want to set up

00:03:20,290 --> 00:03:27,269
view route or web pack maintain web pack

00:03:23,109 --> 00:03:30,730
also you can directly use next years and

00:03:27,269 --> 00:03:33,700
but to explain first if you want to do a

00:03:30,730 --> 00:03:35,709
prediction application with the

00:03:33,700 --> 00:03:37,989
server-side rendering with view you will

00:03:35,709 --> 00:03:39,819
need no GS to execute the view on the

00:03:37,989 --> 00:03:40,870
server side because view as a virtual

00:03:39,819 --> 00:03:43,650
Dom like react

00:03:40,870 --> 00:03:47,769
you will need view so this make sense

00:03:43,650 --> 00:03:49,930
view server render so this will run the

00:03:47,769 --> 00:03:52,599
application in the node.js server and

00:03:49,930 --> 00:03:55,120
send back the HTML you will need a few

00:03:52,599 --> 00:03:57,579
retur to know which page you are if you

00:03:55,120 --> 00:03:59,650
meta to handle all the meta tags for the

00:03:57,579 --> 00:04:03,280
SEO social sharing and also for the

00:03:59,650 --> 00:04:06,489
responsive and geo X so this is required

00:04:03,280 --> 00:04:08,230
for any of us s our project because you

00:04:06,489 --> 00:04:10,120
need to send back those states so on the

00:04:08,230 --> 00:04:12,459
client side view GS can hydrate the

00:04:10,120 --> 00:04:14,799
application with nog GS we found a way

00:04:12,459 --> 00:04:17,739
to make it optional so view X if you

00:04:14,799 --> 00:04:22,050
don't know it's like redux more simple

00:04:17,739 --> 00:04:25,570
but it's it has the same pattern behind

00:04:22,050 --> 00:04:27,580
and the dev dependencies so I think you

00:04:25,570 --> 00:04:29,740
guys are familiar with Babylon where

00:04:27,580 --> 00:04:34,379
pack I don't have to present them

00:04:29,740 --> 00:04:37,419
anymore and but web pack is really

00:04:34,379 --> 00:04:41,949
useful for vgs because you can use view

00:04:37,419 --> 00:04:47,110
files directly so this is the dependency

00:04:41,949 --> 00:04:49,270
you need to have an ssl project so the

00:04:47,110 --> 00:04:53,439
core the core functionalities of next GS

00:04:49,270 --> 00:04:55,419
is the FS rotor like next so you have a

00:04:53,439 --> 00:04:57,789
pages directory and next we'll watch

00:04:55,419 --> 00:05:00,849
this we'll watch the pages directory and

00:04:57,789 --> 00:05:03,250
generate the route declaration for you

00:05:00,849 --> 00:05:06,099
it's the same for the store the store

00:05:03,250 --> 00:05:08,469
will be for view X so we will see every

00:05:06,099 --> 00:05:12,879
file you have in the store and we will

00:05:08,469 --> 00:05:15,849
generate the UX module for you so it's

00:05:12,879 --> 00:05:18,000
like PHP and you have an index dot PHP

00:05:15,849 --> 00:05:21,250
file and it will create the slash root

00:05:18,000 --> 00:05:24,460
so it's I will like this approach and a

00:05:21,250 --> 00:05:26,919
gear more so and we added more

00:05:24,460 --> 00:05:28,900
functionalities about the component for

00:05:26,919 --> 00:05:32,050
for view GS because of the server-side

00:05:28,900 --> 00:05:34,539
wondering too we added the asking data

00:05:32,050 --> 00:05:38,219
it's like data for react is like state

00:05:34,539 --> 00:05:42,190
and but I think that is a synchronous

00:05:38,219 --> 00:05:44,490
think it's pretty clear and the parties

00:05:42,190 --> 00:05:47,550
next we'll wait for a sing that to be

00:05:44,490 --> 00:05:51,190
finished before rendering the page

00:05:47,550 --> 00:05:52,719
layout you can we we have layouts

00:05:51,190 --> 00:05:55,419
directory where you can define your

00:05:52,719 --> 00:05:57,460
layouts and if you say ok for this page

00:05:55,419 --> 00:05:58,900
I want this layout because this page is

00:05:57,460 --> 00:06:01,120
for the back office and we have a

00:05:58,900 --> 00:06:05,440
completely different design you can use

00:06:01,120 --> 00:06:08,500
the layout property the middleware is

00:06:05,440 --> 00:06:10,690
like express mineral so you can have I

00:06:08,500 --> 00:06:13,180
mean the work we say ok you cannot

00:06:10,690 --> 00:06:14,889
access these routes because you need to

00:06:13,180 --> 00:06:17,020
be connected so you can create a

00:06:14,889 --> 00:06:18,909
middleware and take all these pages you

00:06:17,020 --> 00:06:21,150
need to be connected so it will redirect

00:06:18,909 --> 00:06:24,550
directly to the login page for example

00:06:21,150 --> 00:06:26,469
then you will have fetch scroll to top

00:06:24,550 --> 00:06:28,719
head transition I cannot explain all of

00:06:26,469 --> 00:06:31,900
them but this is the feature we added on

00:06:28,719 --> 00:06:36,509
top of you for the pages we have some

00:06:31,900 --> 00:06:36,509
global options like next configure GS

00:06:36,690 --> 00:06:41,500
where you can extend the web

00:06:38,709 --> 00:06:43,330
configuration so you cannot see the web

00:06:41,500 --> 00:06:45,490
configuration but you can access it if

00:06:43,330 --> 00:06:47,470
you want to extend it we have a module

00:06:45,490 --> 00:06:50,080
ecosystem so we have a module for

00:06:47,470 --> 00:06:51,640
progressive web app we have a module to

00:06:50,080 --> 00:06:53,590
change the route or if you want to

00:06:51,640 --> 00:06:55,840
create your own router and we have

00:06:53,590 --> 00:06:57,520
special components like no SSR if you

00:06:55,840 --> 00:07:00,550
want a part of your application to not

00:06:57,520 --> 00:07:02,650
be server render and also you can use it

00:07:00,550 --> 00:07:04,980
programmatically if you have a custom

00:07:02,650 --> 00:07:09,580
server like in with the express adonys

00:07:04,980 --> 00:07:13,990
micro so to finish before showing you

00:07:09,580 --> 00:07:16,419
the demo we have different mode and this

00:07:13,990 --> 00:07:18,580
is one of the best feature I think for

00:07:16,419 --> 00:07:20,770
next yes you can use to create a

00:07:18,580 --> 00:07:23,650
server-side rendered application by

00:07:20,770 --> 00:07:24,880
saying mod Universal you can say that

00:07:23,650 --> 00:07:26,500
you want to create a single page

00:07:24,880 --> 00:07:28,480
application as you don't care about

00:07:26,500 --> 00:07:31,960
server side rendering you can just say

00:07:28,480 --> 00:07:34,060
mod s.p.a and between the two we have a

00:07:31,960 --> 00:07:35,530
mod it's not really what you use the

00:07:34,060 --> 00:07:38,230
universal mod but you can say not

00:07:35,530 --> 00:07:41,590
generate and it will generate all your

00:07:38,230 --> 00:07:44,680
pages like at the build time and you can

00:07:41,590 --> 00:07:51,540
upload it to a CDN so I will show you

00:07:44,680 --> 00:07:51,540
how it works right now so

00:08:04,939 --> 00:08:13,259
okay I think I hope everyone can see it

00:08:11,000 --> 00:08:15,689
so this is what you need to do if you

00:08:13,259 --> 00:08:19,169
want to create a vgs application with

00:08:15,689 --> 00:08:22,050
next you install right now install next

00:08:19,169 --> 00:08:24,180
edge so I can show you new features but

00:08:22,050 --> 00:08:26,729
you can install next add dependencies

00:08:24,180 --> 00:08:29,400
and you can have scripts so for

00:08:26,729 --> 00:08:34,940
development you use next and and that's

00:08:29,400 --> 00:08:38,219
it so if I run and pameron dev next will

00:08:34,940 --> 00:08:40,979
create as you can see there is that was

00:08:38,219 --> 00:08:42,300
to load one for client one for server

00:08:40,979 --> 00:08:44,940
because when you do server-side

00:08:42,300 --> 00:08:47,940
rendering you need a server bundle and a

00:08:44,940 --> 00:08:49,649
client bundle but it's completely

00:08:47,940 --> 00:08:52,019
transparent for you so this is how the

00:08:49,649 --> 00:08:54,720
pages look like so if you have seen a

00:08:52,019 --> 00:08:57,000
bit of UGS this is our component look

00:08:54,720 --> 00:08:59,730
like you have a template you have a

00:08:57,000 --> 00:09:02,579
script and right now i'm setting the

00:08:59,730 --> 00:09:04,350
title of the page and these I'm trying

00:09:02,579 --> 00:09:08,190
to say hello in Romanian I'm not sure if

00:09:04,350 --> 00:09:13,110
it's good and this is how it looks like

00:09:08,190 --> 00:09:16,199
so like for reacts we have add module

00:09:13,110 --> 00:09:18,560
replacement so you don't have to refresh

00:09:16,199 --> 00:09:22,769
the page you can work with the data and

00:09:18,560 --> 00:09:25,199
then if we look at the source code we

00:09:22,769 --> 00:09:28,769
can see that it has been several render

00:09:25,199 --> 00:09:30,769
here but when you navigate navigates

00:09:28,769 --> 00:09:33,870
like neck GIS and client-side rendering

00:09:30,769 --> 00:09:38,250
but if i refresh this and if I show you

00:09:33,870 --> 00:09:40,290
the about page you can see that a sink

00:09:38,250 --> 00:09:42,829
that is called and depending if you are

00:09:40,290 --> 00:09:45,540
on a static version server or client

00:09:42,829 --> 00:09:48,540
these data will change so if i refresh

00:09:45,540 --> 00:09:50,519
the page we can see that we are the page

00:09:48,540 --> 00:09:52,470
has been loaded from the server if I

00:09:50,519 --> 00:09:55,019
navigate on the clients the page has

00:09:52,470 --> 00:09:57,089
been loaded on the client this is the

00:09:55,019 --> 00:09:59,339
difference you can if you want to

00:09:57,089 --> 00:10:00,990
different if these page has been loaded

00:09:59,339 --> 00:10:03,329
from the client or the server this is

00:10:00,990 --> 00:10:05,459
how we can do it but most of the time

00:10:03,329 --> 00:10:09,750
you don't need to to to think about this

00:10:05,459 --> 00:10:12,840
and this is our mode so here I said

00:10:09,750 --> 00:10:16,620
universal so what I'm going to do

00:10:12,840 --> 00:10:20,610
I'm going to deploy on now the universal

00:10:16,620 --> 00:10:24,470
mod I will say mod single page

00:10:20,610 --> 00:10:27,240
application so if i run npm run dev

00:10:24,470 --> 00:10:30,240
there is only one client bundle so

00:10:27,240 --> 00:10:32,430
what's happening now is we have if i

00:10:30,240 --> 00:10:37,980
refresh as you can see there is a blank

00:10:32,430 --> 00:10:39,510
page this means there is no server-side

00:10:37,980 --> 00:10:43,020
rendering anymore this is only written

00:10:39,510 --> 00:10:45,180
loading and i can navigate and it's the

00:10:43,020 --> 00:10:46,890
same application so we have like two

00:10:45,180 --> 00:10:49,140
different application one several

00:10:46,890 --> 00:10:51,510
rendered and one on client-side but we

00:10:49,140 --> 00:10:57,330
didn't change anything so what i can do

00:10:51,510 --> 00:11:03,590
is i can say n pameron build this we

00:10:57,330 --> 00:11:09,030
generate this folder okay it's here and

00:11:03,590 --> 00:11:12,950
we have an index.html and i can directly

00:11:09,030 --> 00:11:17,250
deploy it to search which is a CDN and

00:11:12,950 --> 00:11:20,250
just to explain you quickly what next GS

00:11:17,250 --> 00:11:23,420
doesn't do some magical stuff he only

00:11:20,250 --> 00:11:27,420
generate for you the router for example

00:11:23,420 --> 00:11:29,820
so depending of my pages we generated

00:11:27,420 --> 00:11:34,110
this file and we say ok this is the

00:11:29,820 --> 00:11:36,540
about page this is the slash page and we

00:11:34,110 --> 00:11:38,910
import we lazy import them so when you

00:11:36,540 --> 00:11:42,150
go to a page and it's server rendered

00:11:38,910 --> 00:11:44,370
only the JavaScript for this page will

00:11:42,150 --> 00:11:46,110
be download and executed and then when

00:11:44,370 --> 00:11:50,910
you navigate on client side will be load

00:11:46,110 --> 00:11:59,280
the GS chunk depending on the page so if

00:11:50,910 --> 00:12:01,800
I say this I'm sorry for for this cannot

00:11:59,280 --> 00:12:04,680
rip up the scale so this is part of now

00:12:01,800 --> 00:12:11,870
but I can show you that we can simply

00:12:04,680 --> 00:12:14,910
deploy an application and it works so

00:12:11,870 --> 00:12:18,450
it's pretty simple and the point of next

00:12:14,910 --> 00:12:21,360
is you can focus on developing your

00:12:18,450 --> 00:12:23,620
application instead of configuring your

00:12:21,360 --> 00:12:25,450
tools web pack

00:12:23,620 --> 00:12:28,660
and it's really good if you want

00:12:25,450 --> 00:12:31,810
bootstrap but also we have features for

00:12:28,660 --> 00:12:34,839
performances and changeup but I cannot

00:12:31,810 --> 00:12:38,170
explain all of this right now I want to

00:12:34,839 --> 00:12:43,240
show you what we worked on for GS Heroes

00:12:38,170 --> 00:12:46,420
with Alex so this is a bigger

00:12:43,240 --> 00:12:50,770
application but I will ask you guys to

00:12:46,420 --> 00:12:53,920
go to hero's if you can all do this

00:12:50,770 --> 00:12:57,160
please because I hope this can works and

00:12:53,920 --> 00:13:02,380
you can be fun heroes that next GS

00:12:57,160 --> 00:13:06,760
dot-org so if you alright this you will

00:13:02,380 --> 00:13:09,970
go to this page so then I will ask you

00:13:06,760 --> 00:13:12,040
to login it's just a login with github

00:13:09,970 --> 00:13:16,540
and then you can choose your favorite

00:13:12,040 --> 00:13:21,480
hero between DC and Marvel so we can all

00:13:16,540 --> 00:13:29,250
see in real time which fun is the best

00:13:21,480 --> 00:13:31,600
for these audience so in the meantime

00:13:29,250 --> 00:13:35,320
when you guys watch it as you can see

00:13:31,600 --> 00:13:37,750
there is like Batman coming up we have

00:13:35,320 --> 00:13:41,770
some transitions and the transition has

00:13:37,750 --> 00:13:45,520
been made with vgs as well so if i look

00:13:41,770 --> 00:13:48,640
at let's see there is Batman and Iron

00:13:45,520 --> 00:13:51,970
Man standing here so if I click here we

00:13:48,640 --> 00:13:54,310
can see the people liking Iron Man you

00:13:51,970 --> 00:13:57,100
can also change your hero if you want

00:13:54,310 --> 00:14:01,959
like let's say I will choose tall so

00:13:57,100 --> 00:14:07,570
then I have the list changing so I'm

00:14:01,959 --> 00:14:10,810
using for this view X which is like red

00:14:07,570 --> 00:14:12,520
X as I told you so we have an action and

00:14:10,810 --> 00:14:17,260
with next we have a nuke server in it

00:14:12,520 --> 00:14:20,800
action so we call our action so what we

00:14:17,260 --> 00:14:23,920
have here is a hot owed module and

00:14:20,800 --> 00:14:26,560
heroes module our out module we just

00:14:23,920 --> 00:14:29,110
look at Jason Jason web token inside the

00:14:26,560 --> 00:14:31,000
cookies so because we're working with

00:14:29,110 --> 00:14:34,089
the server-side rendering we are able to

00:14:31,000 --> 00:14:36,740
set the JSON web token in the cookies

00:14:34,089 --> 00:14:40,700
and set it as HTTP only

00:14:36,740 --> 00:14:42,980
so this is how it looks like so we are

00:14:40,700 --> 00:14:45,350
we are loading of a page from the server

00:14:42,980 --> 00:14:49,060
side we want to check our connected user

00:14:45,350 --> 00:14:52,870
so ID patch out check connected user

00:14:49,060 --> 00:14:56,750
this I have dispatch and also commit

00:14:52,870 --> 00:15:00,080
like Redux I'm loading my cookies from

00:14:56,750 --> 00:15:03,290
the server I'm reading them looking if I

00:15:00,080 --> 00:15:06,890
have a JSON web token cookie and then I

00:15:03,290 --> 00:15:09,020
will call my API to get the user with

00:15:06,890 --> 00:15:12,350
the JSON web token so we can check if

00:15:09,020 --> 00:15:17,570
the user exists I will set my JSON web

00:15:12,350 --> 00:15:22,700
token set the user but what you guys are

00:15:17,570 --> 00:15:26,840
doing and and then if I look at my store

00:15:22,700 --> 00:15:30,470
I will need to run it on local so you

00:15:26,840 --> 00:15:40,310
can all see how it works we have our API

00:15:30,470 --> 00:15:46,910
as well so this is how it looks like on

00:15:40,310 --> 00:15:54,220
localhost and here I have okay let's put

00:15:46,910 --> 00:15:59,510
it here yes I don't have it on this

00:15:54,220 --> 00:16:04,250
profile okay so this is how it look like

00:15:59,510 --> 00:16:06,440
for view X I have my state I have my

00:16:04,250 --> 00:16:09,410
general web token I have my user I know

00:16:06,440 --> 00:16:13,390
which hero has been called but if I

00:16:09,410 --> 00:16:18,380
navigate and if I click on change hero

00:16:13,390 --> 00:16:20,870
we can see that we are setting the hero

00:16:18,380 --> 00:16:23,240
funds this is an event called from the

00:16:20,870 --> 00:16:28,190
socket so as you can see there is some

00:16:23,240 --> 00:16:30,380
real time here and this is how it looks

00:16:28,190 --> 00:16:33,860
like on the client side so we connecting

00:16:30,380 --> 00:16:36,020
to the API we injecting the socket so in

00:16:33,860 --> 00:16:38,960
every component we can do this dot or

00:16:36,020 --> 00:16:41,510
our socket and when the circuit is

00:16:38,960 --> 00:16:45,100
connected with dispatching heroes and

00:16:41,510 --> 00:16:48,410
sync arrows and this will call the store

00:16:45,100 --> 00:16:50,769
heroes and sync arrows will simply

00:16:48,410 --> 00:16:53,630
listen to hero updated

00:16:50,769 --> 00:16:55,550
commit said Hiro fans because we are

00:16:53,630 --> 00:16:59,300
just changing the number of fans and

00:16:55,550 --> 00:17:02,240
we're giving the hero object and we

00:16:59,300 --> 00:17:04,760
simply changed states we we look at for

00:17:02,240 --> 00:17:08,059
the hero in the list and we change his

00:17:04,760 --> 00:17:10,850
fans and then view will take care of the

00:17:08,059 --> 00:17:16,209
rest it will update the list because

00:17:10,850 --> 00:17:21,230
inside our page index in our listing

00:17:16,209 --> 00:17:24,020
here we have our list of heroes which is

00:17:21,230 --> 00:17:25,780
taken directly from the state heroes

00:17:24,020 --> 00:17:28,429
module I want the list of heroes and

00:17:25,780 --> 00:17:31,730
that's it we have a transition group and

00:17:28,429 --> 00:17:34,850
when an hero will be updated if we

00:17:31,730 --> 00:17:37,669
directly change the list and transition

00:17:34,850 --> 00:17:40,820
group will add the animation about the

00:17:37,669 --> 00:17:42,559
animation by the way it's this if I

00:17:40,820 --> 00:17:45,140
remove it we just don't have any more

00:17:42,559 --> 00:17:50,860
animation so this is what we like about

00:17:45,140 --> 00:17:54,710
view as well and about the API you can

00:17:50,860 --> 00:18:00,110
look at the source code on github it's

00:17:54,710 --> 00:18:03,549
on at Enix / next - Iiro with the demo

00:18:00,110 --> 00:18:06,440
and for the API I wanted to explain that

00:18:03,549 --> 00:18:09,130
we just release a framework based on

00:18:06,440 --> 00:18:14,030
Express so if you guys do some not yes

00:18:09,130 --> 00:18:17,390
we have actually this framework so it's

00:18:14,030 --> 00:18:19,760
on taraji / mono and it's a framework

00:18:17,390 --> 00:18:23,390
like next yes for Express and you

00:18:19,760 --> 00:18:26,360
regenerate your roots and it will also

00:18:23,390 --> 00:18:29,510
generate your documentation so this is

00:18:26,360 --> 00:18:31,850
actually how the documentation has been

00:18:29,510 --> 00:18:33,620
generated we will be able to change the

00:18:31,850 --> 00:18:36,049
logo but the point is we want also to

00:18:33,620 --> 00:18:36,830
accelerate the development on front-end

00:18:36,049 --> 00:18:39,500
with next

00:18:36,830 --> 00:18:42,669
but we want also to accelerate the

00:18:39,500 --> 00:18:49,929
development on the backend with mono and

00:18:42,669 --> 00:18:52,520
that's that's it for the demo I will

00:18:49,929 --> 00:18:54,409
talk quickly about a project we've been

00:18:52,520 --> 00:18:57,409
working on for the last six months and

00:18:54,409 --> 00:19:00,409
it's more about open source so if you

00:18:57,409 --> 00:19:02,240
guys are some authors of some popular

00:19:00,409 --> 00:19:08,090
open source libraries

00:19:02,240 --> 00:19:11,660
I believe this could be interesting this

00:19:08,090 --> 00:19:17,120
project is completely free we use it for

00:19:11,660 --> 00:19:19,910
us as a tool to manage a project and of

00:19:17,120 --> 00:19:24,590
course we use next because we it's our

00:19:19,910 --> 00:19:26,390
project so this is how we look like

00:19:24,590 --> 00:19:31,520
everything everything is synchronized to

00:19:26,390 --> 00:19:35,030
github so let's connect with my account

00:19:31,520 --> 00:19:36,890
directly so you can see how the

00:19:35,030 --> 00:19:40,160
maintainer what's what's on the other

00:19:36,890 --> 00:19:42,290
hood so the maintainer I'm able to see

00:19:40,160 --> 00:19:47,990
all the comments on all the repository

00:19:42,290 --> 00:19:50,750
with next GS I can look at my repository

00:19:47,990 --> 00:19:52,790
I I imported so this is all the

00:19:50,750 --> 00:19:55,970
repository about Nog's GS so we have a

00:19:52,790 --> 00:19:57,470
lot of modules so as you can guess it is

00:19:55,970 --> 00:20:01,760
pretty hard to keep track all of the

00:19:57,470 --> 00:20:04,220
issues other releases on github and the

00:20:01,760 --> 00:20:06,500
point is to have a kind of aggregate or

00:20:04,220 --> 00:20:08,179
and a way to say okay the question I

00:20:06,500 --> 00:20:10,130
don't want to be synchronized to github

00:20:08,179 --> 00:20:13,760
but the bug report and feature request I

00:20:10,130 --> 00:20:17,360
want them to be synchronized so and for

00:20:13,760 --> 00:20:20,240
every repository I can say for if user

00:20:17,360 --> 00:20:23,300
wants to create a bug report it has to

00:20:20,240 --> 00:20:26,030
fill this form so we can enforce best

00:20:23,300 --> 00:20:28,100
practice into the open source avoid

00:20:26,030 --> 00:20:31,670
wasting time for the contributors and

00:20:28,100 --> 00:20:33,950
the authors and depending if it's a bug

00:20:31,670 --> 00:20:37,850
report or feature request it's

00:20:33,950 --> 00:20:39,830
completely different and what's also

00:20:37,850 --> 00:20:41,720
from it's important and what I love with

00:20:39,830 --> 00:20:42,320
Stack Overflow is when you look for an

00:20:41,720 --> 00:20:44,990
answer

00:20:42,320 --> 00:20:48,500
you have it right away right after the

00:20:44,990 --> 00:20:50,600
question and this is why we try to do as

00:20:48,500 --> 00:20:52,760
well so when there is a question and

00:20:50,600 --> 00:20:56,120
when there is an answer is just at the

00:20:52,760 --> 00:20:58,340
bottom of the question same for the bug

00:20:56,120 --> 00:20:59,780
you don't really know when you look at

00:20:58,340 --> 00:21:03,440
github when the bug report has been

00:20:59,780 --> 00:21:06,559
fixed and this is what we trying also to

00:21:03,440 --> 00:21:10,550
do to be able to say okay this bug

00:21:06,559 --> 00:21:14,570
report this is a big bug report has been

00:21:10,550 --> 00:21:15,740
fixed in this version actually and by by

00:21:14,570 --> 00:21:17,480
me but I

00:21:15,740 --> 00:21:19,370
have a lot of bug reports and feature

00:21:17,480 --> 00:21:21,920
implemented by a lot of user you can say

00:21:19,370 --> 00:21:25,910
these guys help implement it so we try

00:21:21,920 --> 00:21:30,140
to bring transparencies and also help

00:21:25,910 --> 00:21:32,240
people to say ok I have the same ideas

00:21:30,140 --> 00:21:35,690
so this is how we implemented the SPI

00:21:32,240 --> 00:21:39,320
mod people wanted the versatile view GS

00:21:35,690 --> 00:21:42,410
application and they voted it so we were

00:21:39,320 --> 00:21:44,000
able to prioritize what bug report what

00:21:42,410 --> 00:21:46,580
feature because we should increment and

00:21:44,000 --> 00:21:49,490
the question as well help the community

00:21:46,580 --> 00:21:52,670
to participate and we can see also the

00:21:49,490 --> 00:21:55,010
activity of every person so from with

00:21:52,670 --> 00:21:58,070
community I'm able to know which all the

00:21:55,010 --> 00:22:00,290
people who helped us I don't have to

00:21:58,070 --> 00:22:03,410
track every repository and waste time I

00:22:00,290 --> 00:22:06,380
can directly thanks these people so this

00:22:03,410 --> 00:22:08,780
is a project we are working on and this

00:22:06,380 --> 00:22:12,020
is free it will be open source as well

00:22:08,780 --> 00:22:15,110
and if you guys have an opposite project

00:22:12,020 --> 00:22:18,260
and want to submit it and we love to

00:22:15,110 --> 00:22:21,440
talk about it with you so trying to fix

00:22:18,260 --> 00:22:28,540
this part of the open source for project

00:22:21,440 --> 00:22:28,540
and I think we have time for questions

00:22:31,010 --> 00:22:36,070
[Music]

00:22:34,010 --> 00:22:36,070

YouTube URL: https://www.youtube.com/watch?v=9jATabR27ME


