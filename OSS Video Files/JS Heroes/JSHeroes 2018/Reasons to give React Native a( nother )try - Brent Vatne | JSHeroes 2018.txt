Title: Reasons to give React Native a( nother )try - Brent Vatne | JSHeroes 2018
Publication date: 2018-05-03
Playlist: JSHeroes 2018
Description: 
	When a highly hyped new tool is released, many users end up disappointed that it doesn’t handle their use case easily or that it isn’t as polished as they expected. Others don’t bother because the documentation isn’t good enough and there aren’t enough learning resources. If the project survives, then over time developers will chip away at these problems, but it’s often hard to convince people to shake their initial impression. React Native is no different from other tools in this regard, so I want to present a few reasons why you might want to give React Native a(nother) try now, nearly three years since its initial release.
Captions: 
	00:00:01,840 --> 00:00:04,899
[Music]

00:00:10,920 --> 00:00:17,310
thanks Alex so yeah I'm Brent Vani I

00:00:14,099 --> 00:00:20,420
work at Expo I'm from Vancouver which is

00:00:17,310 --> 00:00:23,789
about 10,000 kilometres away from here

00:00:20,420 --> 00:00:25,710
that's where my dog is and she's great

00:00:23,789 --> 00:00:27,990
her name is Lucy she's gonna catch the

00:00:25,710 --> 00:00:32,790
ball just wait for it she's pretty good

00:00:27,990 --> 00:00:34,500
at it there we go all right so today I'm

00:00:32,790 --> 00:00:36,329
just going to talk about ten reasons why

00:00:34,500 --> 00:00:38,219
you should try react native and

00:00:36,329 --> 00:00:41,520
potentially again so maybe you've tried

00:00:38,219 --> 00:00:43,079
it before but actually it's a little bit

00:00:41,520 --> 00:00:46,219
more than three years in two days now

00:00:43,079 --> 00:00:50,100
because it was really some March 26 2015

00:00:46,219 --> 00:00:53,309
and kind of I think something that comes

00:00:50,100 --> 00:00:56,550
along with any release of any highly

00:00:53,309 --> 00:00:59,100
hyped software is that there's going to

00:00:56,550 --> 00:01:02,489
be a lot of disappointment pretty

00:00:59,100 --> 00:01:04,170
quickly you know there people found very

00:01:02,489 --> 00:01:06,020
early on that it was buggy

00:01:04,170 --> 00:01:08,189
it was unpolished it was incomplete

00:01:06,020 --> 00:01:11,310
didn't integrate with a lot of tools

00:01:08,189 --> 00:01:14,790
that existed there were not a lot of

00:01:11,310 --> 00:01:16,200
learning resources etc you know all

00:01:14,790 --> 00:01:18,479
sorts of things that kind of go along

00:01:16,200 --> 00:01:20,880
with with these sorts of projects and it

00:01:18,479 --> 00:01:22,380
wasn't really specific to react native I

00:01:20,880 --> 00:01:24,150
mean it has had its own specific

00:01:22,380 --> 00:01:26,310
problems but but this kind of stuff is

00:01:24,150 --> 00:01:28,890
just inevitable I think and so I'm

00:01:26,310 --> 00:01:30,960
hoping that I can maybe if you were

00:01:28,890 --> 00:01:32,820
jaded by an initial experience or if

00:01:30,960 --> 00:01:34,560
you've heard bad things because of

00:01:32,820 --> 00:01:37,020
people who had a bad experience when it

00:01:34,560 --> 00:01:39,299
was first released or early on I can

00:01:37,020 --> 00:01:41,040
kind of give you an update to how things

00:01:39,299 --> 00:01:45,329
have progressed in the last three years

00:01:41,040 --> 00:01:47,970
and maybe you can give it a try so

00:01:45,329 --> 00:01:52,740
before I move on what is that thing in

00:01:47,970 --> 00:01:54,149
the bottom so expo is like we like to

00:01:52,740 --> 00:01:58,020
say it's like rails for react native

00:01:54,149 --> 00:02:00,090
it's not a perfect analogy but it kind

00:01:58,020 --> 00:02:02,640
of is probably the most concise way to

00:02:00,090 --> 00:02:05,159
communicate it so we kind of provide a

00:02:02,640 --> 00:02:08,190
set of api's and workflows built on top

00:02:05,159 --> 00:02:11,459
of react native and it the whole idea is

00:02:08,190 --> 00:02:13,180
to make it easier faster to build and

00:02:11,459 --> 00:02:16,030
ship application

00:02:13,180 --> 00:02:19,360
so it's kind of like great react up for

00:02:16,030 --> 00:02:23,260
react native as well in fact great react

00:02:19,360 --> 00:02:25,690
native app uses Expo to work so it is

00:02:23,260 --> 00:02:28,750
also literally create react app for

00:02:25,690 --> 00:02:29,740
react native you can eject your project

00:02:28,750 --> 00:02:31,600
get access to all the native

00:02:29,740 --> 00:02:33,520
configuration files but you don't have

00:02:31,600 --> 00:02:37,030
to deal with any of that when you first

00:02:33,520 --> 00:02:39,520
set your project these are the people

00:02:37,030 --> 00:02:42,520
that work on Expo and a couple people

00:02:39,520 --> 00:02:44,410
that are missing but yeah so we're based

00:02:42,520 --> 00:02:48,010
out of Palo Alto I work remotely

00:02:44,410 --> 00:02:49,810
Vancouver alright going back to the

00:02:48,010 --> 00:02:51,970
topic at hand 10 reasons why you should

00:02:49,810 --> 00:02:56,620
give it another try so the first one is

00:02:51,970 --> 00:02:58,810
it is super easy to try it like similar

00:02:56,620 --> 00:03:01,720
to how code sandbox you can just drop in

00:02:58,810 --> 00:03:04,000
and open a project have react loaded

00:03:01,720 --> 00:03:05,320
types and stuff change it see it in your

00:03:04,000 --> 00:03:07,480
browser without installing anything on

00:03:05,320 --> 00:03:10,600
your computer you can do the same thing

00:03:07,480 --> 00:03:12,370
with react native now at Expo we built

00:03:10,600 --> 00:03:14,709
something that's quite similar in

00:03:12,370 --> 00:03:18,910
practice to code sandbox and you can

00:03:14,709 --> 00:03:21,340
install NPM packages upload assets kind

00:03:18,910 --> 00:03:22,780
of do anything you want to to play

00:03:21,340 --> 00:03:24,910
around with react native in the browser

00:03:22,780 --> 00:03:27,519
or if you want you can install the expo

00:03:24,910 --> 00:03:29,709
client app on your phone and load the

00:03:27,519 --> 00:03:31,810
thing that you're working on in your

00:03:29,709 --> 00:03:33,790
browser directly on your phone and see

00:03:31,810 --> 00:03:35,890
it there there's also a file explorer so

00:03:33,790 --> 00:03:36,820
you can do full projects there if you

00:03:35,890 --> 00:03:40,750
like

00:03:36,820 --> 00:03:42,580
but probably most people will want to be

00:03:40,750 --> 00:03:44,650
within the comfort of their their

00:03:42,580 --> 00:03:47,670
desktop editor and so another way that

00:03:44,650 --> 00:03:49,299
you can get started easily is using this

00:03:47,670 --> 00:03:51,340
CLI tool called

00:03:49,299 --> 00:03:55,840
exp and so if you just have NPM

00:03:51,340 --> 00:03:58,390
installed just NPM ID SG exp and and you

00:03:55,840 --> 00:04:00,820
have it and so from there you can just

00:03:58,390 --> 00:04:06,180
run exp in it creative projects open it

00:04:00,820 --> 00:04:06,180
up in your expo client app on your phone

00:04:08,580 --> 00:04:11,760
second reason is there are a lot of

00:04:10,140 --> 00:04:14,010
libraries out there now so you might not

00:04:11,760 --> 00:04:16,079
even need to know like objective-c or

00:04:14,010 --> 00:04:20,239
Swift or Java Kotlin or any of those

00:04:16,079 --> 00:04:22,620
things it certainly doesn't hurt but

00:04:20,239 --> 00:04:26,270
when reactive was first released really

00:04:22,620 --> 00:04:28,350
there wasn't a lot of I guess breadth of

00:04:26,270 --> 00:04:31,260
libraries available so if you wanted to

00:04:28,350 --> 00:04:33,960
add a map to your application using like

00:04:31,260 --> 00:04:35,970
Google Maps you kind of had to do that

00:04:33,960 --> 00:04:37,710
yourself if you wanted to add a video to

00:04:35,970 --> 00:04:39,780
it the same sort of thing

00:04:37,710 --> 00:04:44,430
push notifications it really was it was

00:04:39,780 --> 00:04:47,340
pretty bare-bones now there's you know

00:04:44,430 --> 00:04:49,500
thousands of libraries we have a curated

00:04:47,340 --> 00:04:52,080
kind of directory of libraries at this

00:04:49,500 --> 00:04:53,370
website called native directory and so

00:04:52,080 --> 00:04:55,320
you can look through there and see what

00:04:53,370 --> 00:04:56,910
platforms are supported by by which

00:04:55,320 --> 00:04:59,280
libraries if there's an example

00:04:56,910 --> 00:05:01,440
available that can run in snack which

00:04:59,280 --> 00:05:02,700
was the in browser editor that I just

00:05:01,440 --> 00:05:06,890
showed then you can click through and

00:05:02,700 --> 00:05:09,780
try it out right away in the browser and

00:05:06,890 --> 00:05:12,810
there's some other great stuff like UI

00:05:09,780 --> 00:05:14,820
libraries like react native paper which

00:05:12,810 --> 00:05:16,350
luke who's here is working on along with

00:05:14,820 --> 00:05:18,630
some other people at this company called

00:05:16,350 --> 00:05:20,910
call stack as you can see it's quite

00:05:18,630 --> 00:05:22,880
nice and works on both platforms and you

00:05:20,910 --> 00:05:24,930
just drop it in your project and use it

00:05:22,880 --> 00:05:27,419
that's been something that people have

00:05:24,930 --> 00:05:30,690
kind of long been wanting and react

00:05:27,419 --> 00:05:33,810
native is to have like a solid UI

00:05:30,690 --> 00:05:36,270
library beyond what you get with the

00:05:33,810 --> 00:05:41,430
platform primitives and so I think this

00:05:36,270 --> 00:05:42,540
is a nice path there with expo you you

00:05:41,430 --> 00:05:44,880
actually don't even need to install

00:05:42,540 --> 00:05:48,450
third-party packages a lot of the time

00:05:44,880 --> 00:05:50,610
because it comes with sort of this set

00:05:48,450 --> 00:05:52,740
of API is just out of the box that you

00:05:50,610 --> 00:05:54,690
can use on any new project or you can

00:05:52,740 --> 00:05:57,960
use in snack you can see on there

00:05:54,690 --> 00:06:00,479
there's like camera all sorts of things

00:05:57,960 --> 00:06:02,190
SVG Lodi which is really great animation

00:06:00,479 --> 00:06:03,960
library from Airbnb

00:06:02,190 --> 00:06:08,210
there's gesture antler you can actually

00:06:03,960 --> 00:06:12,300
even use OpenGL with this OpenGL view

00:06:08,210 --> 00:06:14,820
there's a repository on the x-bow github

00:06:12,300 --> 00:06:16,680
called native component list and you can

00:06:14,820 --> 00:06:18,930
clone that and run it on your machine

00:06:16,680 --> 00:06:21,120
and see everything sort of in action and

00:06:18,930 --> 00:06:21,850
see code samples and play with that and

00:06:21,120 --> 00:06:24,640
it's

00:06:21,850 --> 00:06:27,160
nice easy way to do that on the other

00:06:24,640 --> 00:06:30,640
side you see a demo of using AR kit

00:06:27,160 --> 00:06:33,190
which is also available within Expo

00:06:30,640 --> 00:06:36,010
although it doesn't expose the full API

00:06:33,190 --> 00:06:39,060
currently you can do things like make

00:06:36,010 --> 00:06:41,710
ducks float and walk around them

00:06:39,060 --> 00:06:46,180
probably about as useful as all other AR

00:06:41,710 --> 00:06:47,980
kid absence honestly so you you can use

00:06:46,180 --> 00:06:50,770
opengl for all sorts of things like this

00:06:47,980 --> 00:06:54,790
and this this library currently is not

00:06:50,770 --> 00:06:58,270
available outside of expo but we're kind

00:06:54,790 --> 00:07:00,700
of working on making the all these api's

00:06:58,270 --> 00:07:03,070
available in a separate kind of package

00:07:00,700 --> 00:07:05,680
that doesn't depend on any expo services

00:07:03,070 --> 00:07:07,810
so that the sdk kind of becomes like the

00:07:05,680 --> 00:07:09,610
standard library for react native apps

00:07:07,810 --> 00:07:11,740
whether you're using expo or not using

00:07:09,610 --> 00:07:13,600
expo and so hopefully that'll also help

00:07:11,740 --> 00:07:19,420
improve the ecosystem even more and

00:07:13,600 --> 00:07:22,060
that's not too far off now third point

00:07:19,420 --> 00:07:25,080
it's really a perfect tool I think for

00:07:22,060 --> 00:07:28,690
your next like hobby or hack day project

00:07:25,080 --> 00:07:30,370
so there a couple of reasons of it for

00:07:28,690 --> 00:07:32,410
that one of them is that you probably

00:07:30,370 --> 00:07:35,800
shouldn't just jump in and use it on a

00:07:32,410 --> 00:07:37,270
client project or on a project at your

00:07:35,800 --> 00:07:41,230
business without trying to build

00:07:37,270 --> 00:07:43,630
something with it first so thankfully

00:07:41,230 --> 00:07:44,980
I'm like a you know I think when I try

00:07:43,630 --> 00:07:46,620
and learn a lot of different tools that

00:07:44,980 --> 00:07:49,060
it's hard to find like a use case for

00:07:46,620 --> 00:07:52,180
how you might use something or what you

00:07:49,060 --> 00:07:54,670
might build in order to to kind of learn

00:07:52,180 --> 00:07:56,890
more about the tool but it's pretty easy

00:07:54,670 --> 00:07:58,630
I think in fact I'm told frequently of

00:07:56,890 --> 00:08:03,370
everyone's great ideas for mobile apps

00:07:58,630 --> 00:08:05,290
so you know if if you've ever had an

00:08:03,370 --> 00:08:07,480
idea for a mobile app why not give it a

00:08:05,290 --> 00:08:09,520
try and use react native and kind of see

00:08:07,480 --> 00:08:11,230
how it goes but in addition to that

00:08:09,520 --> 00:08:12,690
there's some other perks that make it

00:08:11,230 --> 00:08:15,220
actually especially good for building

00:08:12,690 --> 00:08:17,260
mobile apps is kind of a hack to a

00:08:15,220 --> 00:08:18,250
project one of them is that I mean

00:08:17,260 --> 00:08:20,230
everyone here is familiar with

00:08:18,250 --> 00:08:23,920
JavaScript already so that's pretty easy

00:08:20,230 --> 00:08:25,600
sell but in addition to that it's you

00:08:23,920 --> 00:08:27,850
know you get this cross-platform

00:08:25,600 --> 00:08:29,440
code that works on iOS and Android and

00:08:27,850 --> 00:08:30,650
if you want to be able to share stuff

00:08:29,440 --> 00:08:33,140
with your friends

00:08:30,650 --> 00:08:35,420
or build something like a conference app

00:08:33,140 --> 00:08:38,840
you don't want to take the time to write

00:08:35,420 --> 00:08:41,090
it twice for for both platforms it's

00:08:38,840 --> 00:08:43,130
also really easy to distribute the app

00:08:41,090 --> 00:08:46,820
without uploading it to the Play Store

00:08:43,130 --> 00:08:49,310
so you can actually just open the x-bow

00:08:46,820 --> 00:08:52,580
client on Android scan a QR code and you

00:08:49,310 --> 00:08:53,660
have the app on your phone on iOS

00:08:52,580 --> 00:08:55,970
unfortunately you can't do that because

00:08:53,660 --> 00:08:59,780
of the App Store restrictions but it's

00:08:55,970 --> 00:09:01,730
pretty easy to if you use expo or or not

00:08:59,780 --> 00:09:03,800
you can use eps enter and those kinds of

00:09:01,730 --> 00:09:09,260
things like build a binary and just ship

00:09:03,800 --> 00:09:11,570
it up to the to the App Store here's an

00:09:09,260 --> 00:09:14,270
example of kind of a hobby project that

00:09:11,570 --> 00:09:16,280
I that I really liked this guy built a

00:09:14,270 --> 00:09:18,290
kind of name's John stamp

00:09:16,280 --> 00:09:20,480
he works at code Academy built this app

00:09:18,290 --> 00:09:24,560
for teaching people how to make this

00:09:20,480 --> 00:09:26,060
fancy coffee and it it seems to be

00:09:24,560 --> 00:09:27,560
pretty well liked he's got up there on

00:09:26,060 --> 00:09:29,210
the the top charts it all kind of

00:09:27,560 --> 00:09:30,650
started off with just him at work

00:09:29,210 --> 00:09:33,260
wanting to teach his co-workers how to

00:09:30,650 --> 00:09:35,630
make coffee and then went made this and

00:09:33,260 --> 00:09:38,210
I send out to be pretty fun productive

00:09:35,630 --> 00:09:42,620
project for him so definitely a good way

00:09:38,210 --> 00:09:47,860
to to give the tool or try anyways but

00:09:42,620 --> 00:09:50,570
it's also production ready right so

00:09:47,860 --> 00:09:53,750
there are a lot of big names associated

00:09:50,570 --> 00:09:56,060
with the project at this point there's

00:09:53,750 --> 00:09:59,210
the Bloomberg app there's Facebook on

00:09:56,060 --> 00:10:02,090
the marketplace tab which is implemented

00:09:59,210 --> 00:10:04,370
in react native on the right there is

00:10:02,090 --> 00:10:07,820
the skype app which is implemented in

00:10:04,370 --> 00:10:10,370
react native for iOS Android and the

00:10:07,820 --> 00:10:13,640
universal Windows platform Microsoft

00:10:10,370 --> 00:10:14,990
actually built a renderer for uwp for

00:10:13,640 --> 00:10:16,610
react native and they continue to

00:10:14,990 --> 00:10:20,180
maintain that they have another project

00:10:16,610 --> 00:10:25,970
called react XP which kind of tries to

00:10:20,180 --> 00:10:27,710
unify web uwp Android and iOS into one

00:10:25,970 --> 00:10:28,970
code base and that's what technically

00:10:27,710 --> 00:10:34,130
what they're they're using for this as

00:10:28,970 --> 00:10:35,570
well other smaller organizations use it

00:10:34,130 --> 00:10:38,330
as well I mean discord I guess is

00:10:35,570 --> 00:10:40,130
getting pretty large now but you may

00:10:38,330 --> 00:10:41,360
have heard of this company called

00:10:40,130 --> 00:10:43,370
gyroscope where they help you kind of

00:10:41,360 --> 00:10:44,430
visualize your life and and track a

00:10:43,370 --> 00:10:46,529
bunch of metrics

00:10:44,430 --> 00:10:49,110
associated with your life I have to be

00:10:46,529 --> 00:10:51,510
careful not to show some embarrassing

00:10:49,110 --> 00:10:53,190
stuff there so I've trimmed that one a

00:10:51,510 --> 00:10:56,040
little bit there's this great app called

00:10:53,190 --> 00:10:59,029
third wave that's made by a core

00:10:56,040 --> 00:11:02,070
contributor to react native Yannick and

00:10:59,029 --> 00:11:03,540
it's for finding coffee and in Montreal

00:11:02,070 --> 00:11:06,690
and they're expanding it all across

00:11:03,540 --> 00:11:08,670
Canada it's it's really neat app these

00:11:06,690 --> 00:11:12,089
are just a few of the apps that are out

00:11:08,670 --> 00:11:13,440
there they're there's quite a few feel

00:11:12,089 --> 00:11:18,060
free to come up and talk to me later I

00:11:13,440 --> 00:11:20,070
can show you some more the fifth reason

00:11:18,060 --> 00:11:22,529
is the developer tools and editor

00:11:20,070 --> 00:11:24,360
integrations are getting a lot better so

00:11:22,529 --> 00:11:26,190
it's not perfect still but and certainly

00:11:24,360 --> 00:11:28,350
not as good as the web which i think is

00:11:26,190 --> 00:11:30,860
really fantastic development environment

00:11:28,350 --> 00:11:32,880
but it's it's definitely getting there

00:11:30,860 --> 00:11:34,860
Visual Studio code has really nice

00:11:32,880 --> 00:11:39,330
integrations with react native Microsoft

00:11:34,860 --> 00:11:41,760
and the team a vs code actually built

00:11:39,330 --> 00:11:46,970
this themselves and so it works great

00:11:41,760 --> 00:11:50,820
no complaints you can use the chrome

00:11:46,970 --> 00:11:52,890
it's that user timing API to profile

00:11:50,820 --> 00:11:54,839
your app you can actually debug your

00:11:52,890 --> 00:11:56,220
code and chrome as well so pretty

00:11:54,839 --> 00:11:58,860
similar probably to what you're all

00:11:56,220 --> 00:12:01,350
familiar with at this point you can use

00:11:58,860 --> 00:12:03,480
the react dev tools to inspect your app

00:12:01,350 --> 00:12:07,410
and look at state highlight different

00:12:03,480 --> 00:12:08,880
views in your app change the props see

00:12:07,410 --> 00:12:10,920
it reflected immediately inside of the

00:12:08,880 --> 00:12:12,990
app kind of similar to what you would

00:12:10,920 --> 00:12:15,330
experience in a browser again not quite

00:12:12,990 --> 00:12:22,170
as polished at this point but it works

00:12:15,330 --> 00:12:25,110
quite well there's hot reloading out of

00:12:22,170 --> 00:12:27,900
the box so here I'm just changing some

00:12:25,110 --> 00:12:30,300
properties you can see it's reloading

00:12:27,900 --> 00:12:33,600
the screen without actually reloading

00:12:30,300 --> 00:12:38,520
the app at all and even showing warnings

00:12:33,600 --> 00:12:40,770
recovering from errors etc six reason is

00:12:38,520 --> 00:12:41,399
that there is a growing ecosystem of

00:12:40,770 --> 00:12:43,649
services

00:12:41,399 --> 00:12:46,829
so I mentioned App Center before this is

00:12:43,649 --> 00:12:49,620
also from Microsoft it works for a lot

00:12:46,829 --> 00:12:51,600
of different app development platforms

00:12:49,620 --> 00:12:53,730
you don't need to use react native to

00:12:51,600 --> 00:12:56,820
use it you don't need to

00:12:53,730 --> 00:12:58,200
I guess you pretty much use anything

00:12:56,820 --> 00:13:01,400
with it at the moment but they do have

00:12:58,200 --> 00:13:05,220
really good react native integration and

00:13:01,400 --> 00:13:09,180
other big vendors like Amazon like at

00:13:05,220 --> 00:13:10,800
AWS they're really getting invested in

00:13:09,180 --> 00:13:13,020
react native all of their new products

00:13:10,800 --> 00:13:14,670
include guides for how to integrate them

00:13:13,020 --> 00:13:16,320
into react native they have SDKs that

00:13:14,670 --> 00:13:18,810
integrate the products and through act

00:13:16,320 --> 00:13:20,970
native so there's this project called

00:13:18,810 --> 00:13:23,190
app sync which is a graph qlz service I

00:13:20,970 --> 00:13:26,280
highly recommend checking out talk from

00:13:23,190 --> 00:13:27,450
Richard at react Amsterdam last week

00:13:26,280 --> 00:13:28,650
where he talks about a lot of it it's

00:13:27,450 --> 00:13:32,640
actually generally available now so

00:13:28,650 --> 00:13:34,800
definitely check that out as well lots

00:13:32,640 --> 00:13:36,030
of services like sentry you know pretty

00:13:34,800 --> 00:13:38,700
much the full suite of things that you

00:13:36,030 --> 00:13:41,790
would need to build mobile application

00:13:38,700 --> 00:13:43,680
all these different services now offer a

00:13:41,790 --> 00:13:46,320
react native integrations and consider

00:13:43,680 --> 00:13:49,760
it sort of a first-class platform and of

00:13:46,320 --> 00:13:49,760
course Expo I have to mention that one

00:13:50,180 --> 00:13:54,420
seventh reason is the over-the-air

00:13:52,260 --> 00:13:57,330
updates for apps in the App Store and

00:13:54,420 --> 00:13:58,410
Play Store so I'm just gonna stop the

00:13:57,330 --> 00:14:00,600
question that's going to show up on

00:13:58,410 --> 00:14:02,070
slide OH later on yes you're allowed to

00:14:00,600 --> 00:14:04,350
do that on the App Store feel free to

00:14:02,070 --> 00:14:05,910
google that exact question and you will

00:14:04,350 --> 00:14:09,330
find a million answers to it because

00:14:05,910 --> 00:14:10,590
people ask it every day and on the Play

00:14:09,330 --> 00:14:11,640
Store of course you can pretty much do

00:14:10,590 --> 00:14:14,460
whatever you want Google this one really

00:14:11,640 --> 00:14:19,200
care and so what I mean by over-the-air

00:14:14,460 --> 00:14:20,580
updates is you can actually have someone

00:14:19,200 --> 00:14:24,510
who's installed the app from the App

00:14:20,580 --> 00:14:26,850
Store Play Store and you have maybe some

00:14:24,510 --> 00:14:27,810
created a bug fix and you don't want to

00:14:26,850 --> 00:14:29,580
have to go through this process of

00:14:27,810 --> 00:14:32,940
waiting for a day or two in order to

00:14:29,580 --> 00:14:35,010
push this bug fix to your users so you

00:14:32,940 --> 00:14:37,440
can actually just publish the updated

00:14:35,010 --> 00:14:40,290
JavaScript bundle and any assets

00:14:37,440 --> 00:14:42,840
associated with it there are some

00:14:40,290 --> 00:14:44,040
limitations but for the most part most

00:14:42,840 --> 00:14:46,050
of the changes that you'd need to make

00:14:44,040 --> 00:14:47,910
you can actually do using this and you

00:14:46,050 --> 00:14:50,760
can specify policies and in the

00:14:47,910 --> 00:14:52,110
application for when it should download

00:14:50,760 --> 00:14:54,960
the updates should it be over Wi-Fi

00:14:52,110 --> 00:15:00,120
should it be on the certain types of

00:14:54,960 --> 00:15:01,740
connections or that kind of thing so a

00:15:00,120 --> 00:15:03,630
couple of services I think these are the

00:15:01,740 --> 00:15:04,949
two main ones that people use there's

00:15:03,630 --> 00:15:08,910
code bush

00:15:04,949 --> 00:15:10,290
Microsoft yet again and Expo has it

00:15:08,910 --> 00:15:12,179
built in so you actually don't even need

00:15:10,290 --> 00:15:17,459
to configure anything when you use Expo

00:15:12,179 --> 00:15:19,139
just exists out of the box the web and

00:15:17,459 --> 00:15:22,980
code sharing story is getting a lot

00:15:19,139 --> 00:15:27,239
better so already I think the classic

00:15:22,980 --> 00:15:29,249
example of this is the Twitter PWA so

00:15:27,239 --> 00:15:31,859
Nicholas Gallagher who was working at

00:15:29,249 --> 00:15:34,319
Twitter built their progressive web app

00:15:31,859 --> 00:15:35,609
using react native and along the way he

00:15:34,319 --> 00:15:37,290
built this library called react native

00:15:35,609 --> 00:15:41,100
web which you can see on the other side

00:15:37,290 --> 00:15:43,169
which basically maps the react native

00:15:41,100 --> 00:15:46,949
components to their equivalents on the

00:15:43,169 --> 00:15:48,449
web and the example apps that are shown

00:15:46,949 --> 00:15:50,579
there are actually apps that are

00:15:48,449 --> 00:15:54,329
included in the react native repository

00:15:50,579 --> 00:15:59,100
and they're just copied as is and run on

00:15:54,329 --> 00:16:00,899
the web using this library but beyond

00:15:59,100 --> 00:16:02,970
Twitter there's actually quite a few

00:16:00,899 --> 00:16:05,429
other companies that you might recognize

00:16:02,970 --> 00:16:07,939
using this Flipkart which is one of the

00:16:05,429 --> 00:16:11,429
biggest e-commerce companies in india

00:16:07,939 --> 00:16:12,569
playstation uber Major League Soccer

00:16:11,429 --> 00:16:15,959
actually you probably don't recognize

00:16:12,569 --> 00:16:18,329
it's football yeah

00:16:15,959 --> 00:16:20,459
Major League Soccer though has kind of

00:16:18,329 --> 00:16:23,279
an interesting set of blog posts about

00:16:20,459 --> 00:16:24,779
how they went about integrating react

00:16:23,279 --> 00:16:27,149
native web into their application and

00:16:24,779 --> 00:16:29,399
sharing logic between platforms they

00:16:27,149 --> 00:16:30,660
have this kind of idea of you have

00:16:29,399 --> 00:16:32,819
things that are specific to the web

00:16:30,660 --> 00:16:34,669
specific for mobile and then you have in

00:16:32,819 --> 00:16:37,589
the middle these Universal components

00:16:34,669 --> 00:16:39,959
the way they kind of I guess the

00:16:37,589 --> 00:16:42,679
heuristic they use is if a component

00:16:39,959 --> 00:16:47,040
does not include other custom components

00:16:42,679 --> 00:16:48,539
then you pretty much would consider that

00:16:47,040 --> 00:16:50,850
for inclusion so if it's just something

00:16:48,539 --> 00:16:52,589
that renders down to a host component or

00:16:50,850 --> 00:16:55,319
some people call like a leaf component

00:16:52,589 --> 00:16:56,910
so like view text or for web people

00:16:55,319 --> 00:16:58,649
that'd be like given span and that kind

00:16:56,910 --> 00:17:00,779
of thing those are typically good

00:16:58,649 --> 00:17:03,689
candidates for for universal components

00:17:00,779 --> 00:17:06,929
and this is the storybook which is kind

00:17:03,689 --> 00:17:08,909
of like a style guide application the

00:17:06,929 --> 00:17:14,899
storybook for components that are shared

00:17:08,909 --> 00:17:14,899
between the MLS iOS Android and web apps

00:17:15,449 --> 00:17:18,630
you can actually try this out really

00:17:16,860 --> 00:17:21,120
easily right now as well if you install

00:17:18,630 --> 00:17:22,679
a great react native app you can run

00:17:21,120 --> 00:17:24,209
great react native app example or

00:17:22,679 --> 00:17:27,889
whatever name of the project you want

00:17:24,209 --> 00:17:30,330
and add the - - with web support flag

00:17:27,889 --> 00:17:31,559
it's still pretty experimental and

00:17:30,330 --> 00:17:33,779
create react native app and so that's

00:17:31,559 --> 00:17:35,159
why we put it behind a flag but when you

00:17:33,779 --> 00:17:39,840
do that you essentially get a project

00:17:35,159 --> 00:17:41,130
where you can write code in a way where

00:17:39,840 --> 00:17:43,409
you're just importing directly from

00:17:41,130 --> 00:17:44,730
react native have it loading into the

00:17:43,409 --> 00:17:48,059
simulator at the same time as in the

00:17:44,730 --> 00:17:50,309
browser and clearly this is a very

00:17:48,059 --> 00:17:52,649
simple example but as I've shown you can

00:17:50,309 --> 00:17:56,429
use react native web for some pretty

00:17:52,649 --> 00:17:59,100
complicated stuff as well so the ninth

00:17:56,429 --> 00:18:01,230
one is the powerful gesture in animation

00:17:59,100 --> 00:18:04,980
api's this is one of the things that

00:18:01,230 --> 00:18:08,100
actually led me sort of to give up on

00:18:04,980 --> 00:18:09,690
using Cordova a while ago was just I ran

00:18:08,100 --> 00:18:12,000
into too many restrictions and what you

00:18:09,690 --> 00:18:14,039
could do with gestures and animations

00:18:12,000 --> 00:18:16,710
I'm sure you know in many ways it's

00:18:14,039 --> 00:18:19,860
improved a lot but it's it's still not

00:18:16,710 --> 00:18:21,059
quite there and there's just some pretty

00:18:19,860 --> 00:18:23,669
neat stuff that you can't quite do yet

00:18:21,059 --> 00:18:25,230
on the web which makes it really fun for

00:18:23,669 --> 00:18:27,179
for people who've come from the web and

00:18:25,230 --> 00:18:28,919
want to experiment with building these

00:18:27,179 --> 00:18:32,279
types of things or actually just build

00:18:28,919 --> 00:18:35,549
it and use it in your application so the

00:18:32,279 --> 00:18:38,460
example that you see on what's that your

00:18:35,549 --> 00:18:40,350
left is is inside of that native

00:18:38,460 --> 00:18:41,010
component list project that I mentioned

00:18:40,350 --> 00:18:42,960
before

00:18:41,010 --> 00:18:45,750
and so you can see that these gestures

00:18:42,960 --> 00:18:48,389
are I mean there are 60 frames per

00:18:45,750 --> 00:18:51,630
second they look and feel like what they

00:18:48,389 --> 00:18:54,090
would in any other native app and in

00:18:51,630 --> 00:18:55,470
fact they are they they look and feel

00:18:54,090 --> 00:18:57,360
like that because they are using the

00:18:55,470 --> 00:19:00,120
gesture recognizers that are native to

00:18:57,360 --> 00:19:03,590
the platform so it uses the iOS gesture

00:19:00,120 --> 00:19:05,909
recognizer for pinch for rotate for pan

00:19:03,590 --> 00:19:08,370
it uses all of this and it's actually

00:19:05,909 --> 00:19:11,130
also capable of running those gestures

00:19:08,370 --> 00:19:14,220
on the UI thread you can kind of think

00:19:11,130 --> 00:19:16,169
of it as similar to how with CSS you're

00:19:14,220 --> 00:19:19,110
able to use GPU acceleration with

00:19:16,169 --> 00:19:21,300
certain CSS properties and by doing so

00:19:19,110 --> 00:19:25,050
you offload the

00:19:21,300 --> 00:19:26,640
the work for doing the animations to to

00:19:25,050 --> 00:19:29,520
somewhere else outside of the JavaScript

00:19:26,640 --> 00:19:33,480
thread in this case you're able to

00:19:29,520 --> 00:19:35,130
offload the gesture handling and the

00:19:33,480 --> 00:19:38,970
animations that occur in response to

00:19:35,130 --> 00:19:40,770
that to the UI thread so you you end up

00:19:38,970 --> 00:19:43,380
with situations where you can have 60

00:19:40,770 --> 00:19:45,000
frames per second for for your gestures

00:19:43,380 --> 00:19:47,970
and the animations in response to them

00:19:45,000 --> 00:19:50,280
even if you are blocking the JavaScript

00:19:47,970 --> 00:19:51,990
thread for for a second or half a second

00:19:50,280 --> 00:19:54,540
or however long and really doesn't

00:19:51,990 --> 00:19:58,010
matter here's an example of an

00:19:54,540 --> 00:20:01,410
experimental new project that's kind of

00:19:58,010 --> 00:20:04,560
actually taking a step back and thinking

00:20:01,410 --> 00:20:05,850
like the basically the stuff I just

00:20:04,560 --> 00:20:08,430
showed you before there were some

00:20:05,850 --> 00:20:10,530
basically one small limitation which was

00:20:08,430 --> 00:20:12,360
that when you release the gesture you

00:20:10,530 --> 00:20:14,790
still have to call back into JavaScript

00:20:12,360 --> 00:20:16,110
and say okay here's my current state

00:20:14,790 --> 00:20:18,270
what do I do now

00:20:16,110 --> 00:20:20,040
should I continue this gesture with some

00:20:18,270 --> 00:20:23,040
velocity in that direction should I

00:20:20,040 --> 00:20:24,150
abort it what should I do and so it

00:20:23,040 --> 00:20:26,040
turns out that that's something that

00:20:24,150 --> 00:20:29,100
actually takes a considerable amount of

00:20:26,040 --> 00:20:31,290
work to solve and so a guy named

00:20:29,100 --> 00:20:33,000
Christoph Madeira who used to work at

00:20:31,290 --> 00:20:35,270
Facebook on react native and networks

00:20:33,000 --> 00:20:37,530
for software mentioned in Krakow Poland

00:20:35,270 --> 00:20:39,410
he has been working on a complete

00:20:37,530 --> 00:20:43,340
implementation of the gesture handler

00:20:39,410 --> 00:20:45,630
API and animated API in order to support

00:20:43,340 --> 00:20:48,990
doing the full lifecycle of a gesture

00:20:45,630 --> 00:20:51,150
entirely on the UI thread by using

00:20:48,990 --> 00:20:53,820
decorative configuration on the

00:20:51,150 --> 00:20:56,040
JavaScript thread so as you can see in

00:20:53,820 --> 00:20:58,560
this case the JavaScript thread is

00:20:56,040 --> 00:21:00,270
almost entirely blocked I think actually

00:20:58,560 --> 00:21:01,590
the number it's reporting there one is

00:21:00,270 --> 00:21:04,320
incorrect and I think it is entirely

00:21:01,590 --> 00:21:08,280
blocked and it's still able to handle

00:21:04,320 --> 00:21:09,780
these gestures and handle release follow

00:21:08,280 --> 00:21:11,610
through with velocity and and all that

00:21:09,780 --> 00:21:14,850
kind of stuff which is really quite

00:21:11,610 --> 00:21:17,190
interesting but I think this also leads

00:21:14,850 --> 00:21:20,730
us to another really cool thing about

00:21:17,190 --> 00:21:22,260
react native is that you can kind of use

00:21:20,730 --> 00:21:25,170
react native as a playground to

00:21:22,260 --> 00:21:27,450
experiment with different ideas for how

00:21:25,170 --> 00:21:31,020
to improve limitations with with web

00:21:27,450 --> 00:21:33,540
technology so it's a lot easier to do it

00:21:31,020 --> 00:21:34,770
then to learn how to hack on Chrome for

00:21:33,540 --> 00:21:37,500
example

00:21:34,770 --> 00:21:39,450
you can open up creative react NATO

00:21:37,500 --> 00:21:40,800
project immediately or you have a lot of

00:21:39,450 --> 00:21:43,890
primitives available to you that already

00:21:40,800 --> 00:21:45,720
exists on with platform api's and you

00:21:43,890 --> 00:21:46,830
can kind of dream up your ideal API of

00:21:45,720 --> 00:21:48,510
how you want something to look in

00:21:46,830 --> 00:21:51,330
JavaScript and just have a crack at

00:21:48,510 --> 00:21:55,110
implementing it in whatever platform

00:21:51,330 --> 00:21:56,190
you're dealing with here and you know a

00:21:55,110 --> 00:21:57,690
great thing about that is you can then

00:21:56,190 --> 00:21:59,340
just go ahead and also and use it in

00:21:57,690 --> 00:22:02,250
your apps if you want you can share with

00:21:59,340 --> 00:22:04,620
other people and overall it's it's just

00:22:02,250 --> 00:22:06,870
a neat way to kind of explore I think

00:22:04,620 --> 00:22:12,090
new ideas that would be more difficult

00:22:06,870 --> 00:22:14,100
to do on the web the 10th and last

00:22:12,090 --> 00:22:16,860
reason is that there are plenty of

00:22:14,100 --> 00:22:18,270
learning resources I mentioned earlier

00:22:16,860 --> 00:22:20,280
on that there wasn't a lot available

00:22:18,270 --> 00:22:22,740
when reactive was first released the

00:22:20,280 --> 00:22:24,420
documentation was pretty sparse of

00:22:22,740 --> 00:22:26,280
course nobody had used it and written up

00:22:24,420 --> 00:22:27,750
blog posts and tutorials and then there

00:22:26,280 --> 00:22:29,700
was a period after that where people did

00:22:27,750 --> 00:22:31,590
write blog posts and tutorials but the

00:22:29,700 --> 00:22:33,690
releases came at such a rapid clip that

00:22:31,590 --> 00:22:36,360
the blog posts and tutorials were all

00:22:33,690 --> 00:22:38,820
out of date by the next month or two and

00:22:36,360 --> 00:22:40,970
so it led to a lot of difficulty early

00:22:38,820 --> 00:22:43,860
on but now it's got to the point where

00:22:40,970 --> 00:22:47,490
you know Harvard Extension school

00:22:43,860 --> 00:22:49,740
actually has a course entirely built

00:22:47,490 --> 00:22:51,780
around react native sculpt mobile app

00:22:49,740 --> 00:22:53,070
development with react native so you can

00:22:51,780 --> 00:22:55,460
actually check that out the lectures are

00:22:53,070 --> 00:23:01,650
all online along with the video and

00:22:55,460 --> 00:23:03,780
exercises and slides egghead which I'm

00:23:01,650 --> 00:23:06,540
sure a bunch of you already use has a

00:23:03,780 --> 00:23:09,420
lot of different video courses on how to

00:23:06,540 --> 00:23:11,370
use react native there are some books

00:23:09,420 --> 00:23:13,620
out there now maybe some of you have

00:23:11,370 --> 00:23:14,790
read the full stack react book I think

00:23:13,620 --> 00:23:17,370
they have one about angular as well

00:23:14,790 --> 00:23:20,370
maybe full stack angular or I think it

00:23:17,370 --> 00:23:22,020
actually nobody's called ng book and so

00:23:20,370 --> 00:23:24,780
they those same people made this full

00:23:22,020 --> 00:23:26,460
stack react native book which is it's

00:23:24,780 --> 00:23:29,400
quite good it's kind of example driven

00:23:26,460 --> 00:23:34,020
approach and then of course O'Reilly

00:23:29,400 --> 00:23:35,760
getting in the game there are some video

00:23:34,020 --> 00:23:37,380
tutorials that I did so this is from a

00:23:35,760 --> 00:23:39,210
workshop at react Europe last year we

00:23:37,380 --> 00:23:41,640
did a two day workshop recorded the

00:23:39,210 --> 00:23:43,160
entire thing put it on YouTube so you

00:23:41,640 --> 00:23:45,240
can absolutely go and watch that and

00:23:43,160 --> 00:23:47,309
learn a lot pretty much from the ground

00:23:45,240 --> 00:23:48,390
up how do how to use react native

00:23:47,309 --> 00:23:49,880
there's website called react native

00:23:48,390 --> 00:23:52,049
express calm which is really great for

00:23:49,880 --> 00:23:55,620
kind of getting you up to speed with the

00:23:52,049 --> 00:23:56,820
basics and helping you basically just

00:23:55,620 --> 00:23:58,919
get your foot in the door and then from

00:23:56,820 --> 00:24:00,150
there you can hopefully understand where

00:23:58,919 --> 00:24:01,070
you need to look next depending on what

00:24:00,150 --> 00:24:04,740
you want to build

00:24:01,070 --> 00:24:06,690
so my recommendation if you want to get

00:24:04,740 --> 00:24:09,750
started is to check out react native

00:24:06,690 --> 00:24:11,549
express calm first read it over fill in

00:24:09,750 --> 00:24:13,230
any gaps in your knowledge whether

00:24:11,549 --> 00:24:16,140
you're coming from react or angular or

00:24:13,230 --> 00:24:18,960
wherever this will help you to get

00:24:16,140 --> 00:24:20,880
started you can play around with snack

00:24:18,960 --> 00:24:24,030
in your browser without installing

00:24:20,880 --> 00:24:26,040
anything on your computer work on a side

00:24:24,030 --> 00:24:27,299
project that excites you and of course

00:24:26,040 --> 00:24:28,919
if you're actually going to use this

00:24:27,299 --> 00:24:30,750
with your business and a production app

00:24:28,919 --> 00:24:33,630
you should absolutely research the

00:24:30,750 --> 00:24:37,370
trade-offs come talk to me about it

00:24:33,630 --> 00:24:40,280
I have plenty to say about it and yeah

00:24:37,370 --> 00:24:45,040
that's that's it thank you

00:24:40,280 --> 00:24:45,040
[Applause]

00:24:46,050 --> 00:24:50,830
[Music]

00:24:48,770 --> 00:24:50,830

YouTube URL: https://www.youtube.com/watch?v=J_TXDkq8Y-4


