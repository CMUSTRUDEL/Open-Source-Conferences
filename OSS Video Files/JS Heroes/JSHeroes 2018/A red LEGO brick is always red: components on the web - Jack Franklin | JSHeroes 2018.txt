Title: A red LEGO brick is always red: components on the web - Jack Franklin | JSHeroes 2018
Publication date: 2018-05-02
Playlist: JSHeroes 2018
Description: 
	This talk will explore the changes that have occurred in the front end space in the past few years and how we’ve aligned on the concepts of components being the key building block for frontend applications.

We’ll discuss how thinking of a web application as a tree of components, rather than discrete pages, leads to a more testable, maintainable and reliable codebase. We’ll look at how we can build predictable components, encapsulating perfectly the triumvirate of HTML, CSS and JS that can be combined to build reusable components.

Using React as our component library of choice, we’ll look at patterns that lead you down the path of reusability almost by default and how to walk the fine line between reusability and death by configuration.

Then we’ll explore the final piece of the puzzle: CSS. CSS goes against everything the componentised world stands for but its global, cascading nature can be tamed. I’ll show different approaches to combining your CSS with your components in order to fully encapsulate a component into a lovely, reusable lego brick.
Captions: 
	00:00:01,840 --> 00:00:04,899
[Music]

00:00:10,800 --> 00:00:17,820
[Applause]

00:00:15,020 --> 00:00:20,039
morning everyone hello thanks very much

00:00:17,820 --> 00:00:21,510
for getting up early to come and listen

00:00:20,039 --> 00:00:23,609
to me appreciate it I know what the

00:00:21,510 --> 00:00:24,960
mornings of day 2 can be like so

00:00:23,609 --> 00:00:27,779
appreciate your managing to leave the

00:00:24,960 --> 00:00:30,599
hotel and come and listen my name's Jack

00:00:27,779 --> 00:00:32,009
as as Alex said I'd like to thank Alex

00:00:30,599 --> 00:00:33,809
and the whole team for inviting me over

00:00:32,009 --> 00:00:35,309
here it's been an amazing trip so far

00:00:33,809 --> 00:00:36,450
doing the workshop of Wednesday was

00:00:35,309 --> 00:00:38,190
great really enjoyed the talks yesterday

00:00:36,450 --> 00:00:41,160
and it's a pleasure to be up here today

00:00:38,190 --> 00:00:43,170
talking to you so I won't talk to you

00:00:41,160 --> 00:00:45,420
today about components on the web and

00:00:43,170 --> 00:00:47,610
really this talk is 50% about components

00:00:45,420 --> 00:00:50,610
of 50% me like trying to shoe in lots of

00:00:47,610 --> 00:00:52,559
references to Lego Lego really was that

00:00:50,610 --> 00:00:54,539
my favorite toy growing up hopefully it

00:00:52,559 --> 00:00:55,590
was some of yours as well and there's a

00:00:54,539 --> 00:00:57,090
lot of things about Legos actually

00:00:55,590 --> 00:00:58,590
mapped very nicely to components on the

00:00:57,090 --> 00:01:01,770
web which is what I want to talk about

00:00:58,590 --> 00:01:03,989
it today I think the term component has

00:01:01,770 --> 00:01:06,090
become very overloaded in the front-end

00:01:03,989 --> 00:01:07,619
space depending on which framework use

00:01:06,090 --> 00:01:09,570
which blog posts you read which talks

00:01:07,619 --> 00:01:10,799
you listen to the term component can

00:01:09,570 --> 00:01:11,700
mean a lot of different things to a lot

00:01:10,799 --> 00:01:13,439
of different people

00:01:11,700 --> 00:01:15,030
so just before I kind of dive in I just

00:01:13,439 --> 00:01:16,890
want to talk a bit about what what when

00:01:15,030 --> 00:01:20,250
I say component what I actually mean by

00:01:16,890 --> 00:01:22,080
that I stolen this great slide by a guy

00:01:20,250 --> 00:01:23,280
called Cristiano rastelli who talks a

00:01:22,080 --> 00:01:25,080
lot about this stuff and I really

00:01:23,280 --> 00:01:27,900
recommend giving him a follow on Twitter

00:01:25,080 --> 00:01:29,340
and reading his blog but here when I

00:01:27,900 --> 00:01:31,680
talk about a component we're talking

00:01:29,340 --> 00:01:33,630
about a kind of related bit of HTML CSS

00:01:31,680 --> 00:01:36,030
and maybe JavaScript that makes up one

00:01:33,630 --> 00:01:37,920
part of a user interface it might be a

00:01:36,030 --> 00:01:39,210
bigger part like a form but that will

00:01:37,920 --> 00:01:41,159
probably made up a smaller parts like a

00:01:39,210 --> 00:01:42,810
submit button an input field and all the

00:01:41,159 --> 00:01:44,630
rest of it so that's what I'm talking

00:01:42,810 --> 00:01:46,680
about today when I talk about components

00:01:44,630 --> 00:01:48,570
I'm also not going to talk about

00:01:46,680 --> 00:01:50,189
components in a very framework specific

00:01:48,570 --> 00:01:52,079
way and few of my examples will use

00:01:50,189 --> 00:01:53,880
react that's personally what I am most

00:01:52,079 --> 00:01:56,009
familiar with but this talk is at a

00:01:53,880 --> 00:01:58,320
level where if you use a view angular

00:01:56,009 --> 00:02:00,119
ember react to any of the frameworks or

00:01:58,320 --> 00:02:01,439
just plain web components polymer those

00:02:00,119 --> 00:02:03,680
kind of things hopefully you'll be able

00:02:01,439 --> 00:02:05,729
to take away a lot of ideas from it too

00:02:03,680 --> 00:02:07,439
so one thought to say about the rotor

00:02:05,729 --> 00:02:09,450
components kind of the learnings in the

00:02:07,439 --> 00:02:11,489
front-end space that got us here the

00:02:09,450 --> 00:02:12,720
theory of them how they work and then go

00:02:11,489 --> 00:02:13,950
into a bit more practical of my

00:02:12,720 --> 00:02:15,870
experiences building component

00:02:13,950 --> 00:02:17,780
kind of gotchas that i've been caught by

00:02:15,870 --> 00:02:20,099
and how to avoid them in the future I

00:02:17,780 --> 00:02:21,330
also want to then talk about how if

00:02:20,099 --> 00:02:22,890
you've got a bigger project you can

00:02:21,330 --> 00:02:24,660
actually introduce these components into

00:02:22,890 --> 00:02:27,690
your system to rewrite everything from

00:02:24,660 --> 00:02:29,129
scratch as I said this this talk is very

00:02:27,690 --> 00:02:31,200
about my experiences over the last

00:02:29,129 --> 00:02:34,170
couple of years kind of working in this

00:02:31,200 --> 00:02:35,640
manner as kit said yesterday like I'm I

00:02:34,170 --> 00:02:36,840
would by no means consider myself an

00:02:35,640 --> 00:02:37,980
expert in this space I've just been

00:02:36,840 --> 00:02:39,780
using it I want to tell you what I've

00:02:37,980 --> 00:02:41,220
been up to I'm sure a lot of people have

00:02:39,780 --> 00:02:43,200
been working with components in whatever

00:02:41,220 --> 00:02:45,269
framework or kind of fashion you prefer

00:02:43,200 --> 00:02:46,799
and I'd love to come in here and your

00:02:45,269 --> 00:02:48,120
kind of experiences of it so please feel

00:02:46,799 --> 00:02:52,260
free to come and grab me or tweet me

00:02:48,120 --> 00:02:54,060
I'd love to kind of hear more so when we

00:02:52,260 --> 00:02:56,579
first started pushing logic from the

00:02:54,060 --> 00:02:57,959
server onto the client we really we

00:02:56,579 --> 00:03:00,150
stuck with what we knew best and that

00:02:57,959 --> 00:03:01,440
was we left everything on the server so

00:03:00,150 --> 00:03:02,700
the models views and controllers all

00:03:01,440 --> 00:03:04,500
that stuff was on the server we put a

00:03:02,700 --> 00:03:06,060
big wall up between between them and

00:03:04,500 --> 00:03:07,560
then we use jQuery to build cat pics

00:03:06,060 --> 00:03:10,380
comm and that was roughly where we were

00:03:07,560 --> 00:03:12,239
at and then over time we started

00:03:10,380 --> 00:03:14,510
building more ambitious user interfaces

00:03:12,239 --> 00:03:16,980
more ambitious complicated web apps and

00:03:14,510 --> 00:03:18,600
before kind of react and angular and all

00:03:16,980 --> 00:03:20,069
those frameworks came along we really

00:03:18,600 --> 00:03:21,389
were just writing jQuery or there was

00:03:20,069 --> 00:03:24,180
this whole like you don't even need

00:03:21,389 --> 00:03:26,430
jQuery comm phase the vanilla J's kind

00:03:24,180 --> 00:03:27,600
of phase but really whatever way this

00:03:26,430 --> 00:03:29,280
worked we ended up with a big kind of

00:03:27,600 --> 00:03:30,540
mess of code and this kind of approach

00:03:29,280 --> 00:03:33,450
didn't really scale as we're trying to

00:03:30,540 --> 00:03:36,269
build these complex app apps we don't

00:03:33,450 --> 00:03:38,190
have this tremendous period of kind of

00:03:36,269 --> 00:03:40,200
tooling and investment and exploration

00:03:38,190 --> 00:03:42,000
where thousands and thousands libraries

00:03:40,200 --> 00:03:44,959
were released onto the web every single

00:03:42,000 --> 00:03:46,920
day this became known as J's fatigue

00:03:44,959 --> 00:03:49,859
online and it was kind of a quite

00:03:46,920 --> 00:03:50,819
popular blog post title and hashtag but

00:03:49,859 --> 00:03:52,769
really for me I think this was really

00:03:50,819 --> 00:03:54,389
exciting that we had this problem there

00:03:52,769 --> 00:03:55,920
old solutions weren't working and so we

00:03:54,389 --> 00:03:57,690
kind of threw loads of effort and loads

00:03:55,920 --> 00:03:59,459
of people at figuring out better

00:03:57,690 --> 00:04:00,870
solutions so actually as a front-end

00:03:59,459 --> 00:04:02,220
developer it was quite exciting to kind

00:04:00,870 --> 00:04:03,630
of go through this time where every

00:04:02,220 --> 00:04:04,799
every week there was a new thing and it

00:04:03,630 --> 00:04:06,599
was very interesting to see kind of what

00:04:04,799 --> 00:04:08,639
would come out on top and how ideas

00:04:06,599 --> 00:04:09,930
would fuse together what's really nice

00:04:08,639 --> 00:04:11,250
about this is you know from this phase

00:04:09,930 --> 00:04:12,750
we end up with things like angular and

00:04:11,250 --> 00:04:14,190
react and ember and all those frameworks

00:04:12,750 --> 00:04:15,630
and what's nice is that they all took

00:04:14,190 --> 00:04:17,130
different bits from each other to kind

00:04:15,630 --> 00:04:18,750
of advance forward they all saw what was

00:04:17,130 --> 00:04:20,489
working and what wasn't and and kind of

00:04:18,750 --> 00:04:21,510
moved on together I think it's really

00:04:20,489 --> 00:04:22,979
nice and we're very fortunate in the

00:04:21,510 --> 00:04:24,870
front-end space that we don't have one

00:04:22,979 --> 00:04:26,849
framework that exists that we all use we

00:04:24,870 --> 00:04:27,840
have lots and they inspire and kind of

00:04:26,849 --> 00:04:31,199
work against each other too

00:04:27,840 --> 00:04:32,699
prove themselves but this MVC kind of

00:04:31,199 --> 00:04:33,720
approach that we'd use on the server if

00:04:32,699 --> 00:04:35,190
any of you are like Ruby on Rails

00:04:33,720 --> 00:04:36,270
developers you will be very familiar

00:04:35,190 --> 00:04:38,370
with this there's model-view-controller

00:04:36,270 --> 00:04:40,830
it doesn't really fit front-end

00:04:38,370 --> 00:04:42,330
development but we tried so the first

00:04:40,830 --> 00:04:44,520
kind of front-end frameworks for MVC

00:04:42,330 --> 00:04:46,560
that didn't quite work so we went for mV

00:04:44,520 --> 00:04:49,199
VC model view view controller thing that

00:04:46,560 --> 00:04:50,760
was then there was even like M MVC I

00:04:49,199 --> 00:04:51,810
don't even know what that means and I'm

00:04:50,760 --> 00:04:54,840
pretty sure it's a one framework there

00:04:51,810 --> 00:04:56,639
was MV VCC VV mMmmm CC VV

00:04:54,840 --> 00:04:58,680
I practiced that a lot last night that

00:04:56,639 --> 00:05:02,040
particular line the rest of the talks a

00:04:58,680 --> 00:05:03,300
nightmare but that liner nailed and it

00:05:02,040 --> 00:05:06,720
turns out we already had the answer we

00:05:03,300 --> 00:05:08,580
were looking for and really the that

00:05:06,720 --> 00:05:09,960
kind of the way I like to think about

00:05:08,580 --> 00:05:11,310
this but I think about one of the the

00:05:09,960 --> 00:05:14,310
best films released in the last couple

00:05:11,310 --> 00:05:16,770
of years real contemporary classic how

00:05:14,310 --> 00:05:18,330
it didn't win Oscars I don't know but

00:05:16,770 --> 00:05:19,800
it's really a great film that's full of

00:05:18,330 --> 00:05:21,720
lots of bits that these people put

00:05:19,800 --> 00:05:23,789
together to build spaceships and bat the

00:05:21,720 --> 00:05:25,200
Batmobile and they you know attack the

00:05:23,789 --> 00:05:26,340
Joker and he rides out on balloons and

00:05:25,200 --> 00:05:28,460
it's all made of Lego and it's it's a

00:05:26,340 --> 00:05:30,870
great movie highly recommend watching it

00:05:28,460 --> 00:05:32,520
but it turns out when work on the web we

00:05:30,870 --> 00:05:34,229
already have this this big box full of

00:05:32,520 --> 00:05:37,260
Lego components that we can work with

00:05:34,229 --> 00:05:40,650
and it's called HTML it's my clicker

00:05:37,260 --> 00:05:42,150
wall go we tend to call these elements

00:05:40,650 --> 00:05:44,010
we have paragraph elements heading

00:05:42,150 --> 00:05:46,139
elements unordered lists that have list

00:05:44,010 --> 00:05:47,460
item elements inside but if you just

00:05:46,139 --> 00:05:50,789
kind of squint a little bit you could

00:05:47,460 --> 00:05:52,380
really call these components a HTML

00:05:50,789 --> 00:05:54,150
paragraph you dump into the page it

00:05:52,380 --> 00:05:56,099
comes with some semantics like defines

00:05:54,150 --> 00:05:57,870
that content as being a paragraph but

00:05:56,099 --> 00:05:59,039
also by default the browser will style

00:05:57,870 --> 00:06:00,720
it slightly differently to how it will

00:05:59,039 --> 00:06:02,370
style a heading so these really are

00:06:00,720 --> 00:06:06,419
reusable chunks that we can put into the

00:06:02,370 --> 00:06:07,650
page and then we saw the web component

00:06:06,419 --> 00:06:09,570
spec they said well what if we could

00:06:07,650 --> 00:06:11,220
have our own bricks that we can extend

00:06:09,570 --> 00:06:14,370
into this big box and make an even

00:06:11,220 --> 00:06:15,599
bigger box and then people started

00:06:14,370 --> 00:06:17,250
thinking what if we build frameworks

00:06:15,599 --> 00:06:18,570
around this idea rather than the MVC

00:06:17,250 --> 00:06:22,110
approach what if we go down the

00:06:18,570 --> 00:06:23,700
components road and so the rough kind of

00:06:22,110 --> 00:06:25,470
theory behind this is let's take a

00:06:23,700 --> 00:06:27,180
website that we've probably all used

00:06:25,470 --> 00:06:29,220
once upon a time every now and then a

00:06:27,180 --> 00:06:30,990
Twitter I should make it clear I have

00:06:29,220 --> 00:06:32,370
never worked for Twitter I am pretty

00:06:30,990 --> 00:06:34,740
sure they don't follow this exact layout

00:06:32,370 --> 00:06:36,120
in their code but I just want to make

00:06:34,740 --> 00:06:38,490
gonna pick a website that we're all

00:06:36,120 --> 00:06:39,960
familiar with the idea here is we have a

00:06:38,490 --> 00:06:41,160
bunch of components that all responsible

00:06:39,960 --> 00:06:42,690
for putting different bits of the user

00:06:41,160 --> 00:06:44,190
to face into place some of them are

00:06:42,690 --> 00:06:46,530
quite big like the feed which renders

00:06:44,190 --> 00:06:47,760
all my notifications but all that will

00:06:46,530 --> 00:06:50,520
be made up of is lots of smaller

00:06:47,760 --> 00:06:51,780
components that render one tweet and so

00:06:50,520 --> 00:06:55,110
you can kind of start thinking about a

00:06:51,780 --> 00:06:56,700
page as a big tree of components so

00:06:55,110 --> 00:06:58,920
pages are a series of these components

00:06:56,700 --> 00:07:00,570
pages will reuse common components you

00:06:58,920 --> 00:07:02,360
know the tweet component on Twitter will

00:07:00,570 --> 00:07:04,800
be used in a bunch of different places

00:07:02,360 --> 00:07:06,150
as it turns out this approach works

00:07:04,800 --> 00:07:08,700
pretty well so the approach i've been

00:07:06,150 --> 00:07:09,600
working with now for 2-3 years it seems

00:07:08,700 --> 00:07:10,950
to be the kind of direction the

00:07:09,600 --> 00:07:14,100
front-end community is headed in quite

00:07:10,950 --> 00:07:16,080
strongly and for me i first kind of came

00:07:14,100 --> 00:07:18,420
into this via react I found react when

00:07:16,080 --> 00:07:19,800
it was relatively early on and really

00:07:18,420 --> 00:07:23,100
enjoyed the liked component approach

00:07:19,800 --> 00:07:24,420
that react took I'm not saying react

00:07:23,100 --> 00:07:26,190
introduced all these ideas there were

00:07:24,420 --> 00:07:27,750
lots of these ideas floating around but

00:07:26,190 --> 00:07:29,670
I think react kind of popularized quite

00:07:27,750 --> 00:07:30,840
a few of them and what's interesting is

00:07:29,670 --> 00:07:32,640
a lot of frameworks have been inspired

00:07:30,840 --> 00:07:33,990
by react and vice versa react as

00:07:32,640 --> 00:07:36,570
certainly taking ideas from others too

00:07:33,990 --> 00:07:37,980
and so I'm gonna use red today in a few

00:07:36,570 --> 00:07:39,750
code examples because it's kind of my

00:07:37,980 --> 00:07:41,370
framework of choice at the moment but

00:07:39,750 --> 00:07:43,110
this talk isn't framework specific as I

00:07:41,370 --> 00:07:45,060
said well if you're talking angular

00:07:43,110 --> 00:07:46,560
ember view web components anything else

00:07:45,060 --> 00:07:48,300
hopefully this will still be useful for

00:07:46,560 --> 00:07:49,740
you but as the people who came on

00:07:48,300 --> 00:07:54,270
Wednesday know you should all really be

00:07:49,740 --> 00:07:55,740
using am so approaches and challenges of

00:07:54,270 --> 00:07:56,850
building good components and actually

00:07:55,740 --> 00:07:58,800
dive into light if you're building these

00:07:56,850 --> 00:08:00,300
kind of day by day at work what are the

00:07:58,800 --> 00:08:01,890
kind of mistakes or pitfalls you could

00:08:00,300 --> 00:08:03,390
fall into that will cause you harm in a

00:08:01,890 --> 00:08:05,850
few months or make code harder to work

00:08:03,390 --> 00:08:07,680
with you've got to remember that

00:08:05,850 --> 00:08:09,120
primarily components are designed to be

00:08:07,680 --> 00:08:10,530
a black box and this is really the

00:08:09,120 --> 00:08:13,470
number one thing to bear in mind when

00:08:10,530 --> 00:08:15,210
when building them if I want let's say

00:08:13,470 --> 00:08:17,720
I'm you know I'm traveling back 10 years

00:08:15,210 --> 00:08:20,640
and I want a carousel on my website and

00:08:17,720 --> 00:08:22,470
I I know that I in our previous website

00:08:20,640 --> 00:08:24,120
I built Jack's custom fancy carousel

00:08:22,470 --> 00:08:25,410
which is very exciting and I can give it

00:08:24,120 --> 00:08:27,510
like the speed and if it should play

00:08:25,410 --> 00:08:29,070
infinitely or not and now if you're a

00:08:27,510 --> 00:08:30,600
user who wants this cool carousel on

00:08:29,070 --> 00:08:32,099
your website which you probably do

00:08:30,600 --> 00:08:34,620
because it's it's pretty fancy as you

00:08:32,099 --> 00:08:35,940
can tell by the name you can just dump

00:08:34,620 --> 00:08:37,410
this into the page you don't worry about

00:08:35,940 --> 00:08:38,640
the specifics of how it works you don't

00:08:37,410 --> 00:08:40,260
worry about any of the stuff that's

00:08:38,640 --> 00:08:42,410
that's going on under the hood it's all

00:08:40,260 --> 00:08:44,820
hidden behind this fancy carousel and

00:08:42,410 --> 00:08:46,350
this black box approach is the really

00:08:44,820 --> 00:08:47,700
powerful one if you remember one part

00:08:46,350 --> 00:08:49,920
this whole talk it should be that the

00:08:47,700 --> 00:08:51,330
components are like a black box because

00:08:49,920 --> 00:08:52,960
what it enables is working really well

00:08:51,330 --> 00:08:54,940
in isolation

00:08:52,960 --> 00:08:56,649
so I work as I said for a company called

00:08:54,940 --> 00:08:58,450
threads where amends online fashion

00:08:56,649 --> 00:08:59,710
website and you can go and read you can

00:08:58,450 --> 00:09:02,649
click on shirts and you can see lots of

00:08:59,710 --> 00:09:04,750
shirts and let's say the users on this

00:09:02,649 --> 00:09:05,980
page one day and we get a bug report now

00:09:04,750 --> 00:09:07,420
you can't see it on there but when you

00:09:05,980 --> 00:09:09,010
hover over any of these items you can

00:09:07,420 --> 00:09:10,750
click like little hearts that appears to

00:09:09,010 --> 00:09:12,070
tell us that you like the item and we

00:09:10,750 --> 00:09:13,270
have a whole like machine learning setup

00:09:12,070 --> 00:09:15,100
that we'll learn from that and recommend

00:09:13,270 --> 00:09:16,600
you better clothes in the future and

00:09:15,100 --> 00:09:19,270
let's say the users found a bug the

00:09:16,600 --> 00:09:21,160
heart icon isn't working now because

00:09:19,270 --> 00:09:23,260
this is a website built up mostly of

00:09:21,160 --> 00:09:24,970
components I can forget about the whole

00:09:23,260 --> 00:09:26,800
big picture and just zoom into the bit

00:09:24,970 --> 00:09:29,020
where the bug is and for me that's this

00:09:26,800 --> 00:09:31,480
component as a whole I call this the

00:09:29,020 --> 00:09:32,860
item card but the item card is made up

00:09:31,480 --> 00:09:34,270
of even smaller components there's the

00:09:32,860 --> 00:09:36,430
image there's the details there's the

00:09:34,270 --> 00:09:37,899
preferred size information and crucially

00:09:36,430 --> 00:09:41,050
there's what we call sentiment which is

00:09:37,899 --> 00:09:42,100
if you like or dislike the item and so

00:09:41,050 --> 00:09:44,500
the users told me there's a bug in

00:09:42,100 --> 00:09:45,940
clicking the heart icon I can now forget

00:09:44,500 --> 00:09:47,440
about the whole rest of the website all

00:09:45,940 --> 00:09:49,660
the code we've got and I can zoom right

00:09:47,440 --> 00:09:52,420
into that item sentiment component which

00:09:49,660 --> 00:09:54,100
is where the problem will be this is

00:09:52,420 --> 00:09:56,170
really beneficial as a developer in

00:09:54,100 --> 00:09:57,550
terms of speed you can Dyke's oome right

00:09:56,170 --> 00:09:58,660
in on the problem area and don't worry

00:09:57,550 --> 00:10:00,310
about the rest of your website and

00:09:58,660 --> 00:10:01,810
what's going on if you built these

00:10:00,310 --> 00:10:03,580
components as a black box you can also

00:10:01,810 --> 00:10:05,170
know that you won't ever kind of break

00:10:03,580 --> 00:10:08,170
something in another part of the site by

00:10:05,170 --> 00:10:09,550
working on the sentiment component we

00:10:08,170 --> 00:10:11,920
take this one step further we literally

00:10:09,550 --> 00:10:13,750
put all the files in one folder so per

00:10:11,920 --> 00:10:16,240
component everything that ever relates

00:10:13,750 --> 00:10:17,709
that component is in the same folder so

00:10:16,240 --> 00:10:18,910
it literally you can load up one folder

00:10:17,709 --> 00:10:20,080
in your editor and ignore everything

00:10:18,910 --> 00:10:22,300
else and it makes for a really nice

00:10:20,080 --> 00:10:23,290
productive working environment I think

00:10:22,300 --> 00:10:25,060
we can spend a lot of time thinking

00:10:23,290 --> 00:10:26,650
about kind of fancy file structures and

00:10:25,060 --> 00:10:28,120
how we're gonna structure our project if

00:10:26,650 --> 00:10:29,470
you haven't tried having a folder per

00:10:28,120 --> 00:10:33,220
component and just dumping stuff in

00:10:29,470 --> 00:10:34,570
there I'd recommend giving it a go the

00:10:33,220 --> 00:10:36,160
next thing to bear in mind when building

00:10:34,570 --> 00:10:38,950
complicated components is that you try

00:10:36,160 --> 00:10:40,870
and avoid all business logic components

00:10:38,950 --> 00:10:42,520
are primarily presentational and they

00:10:40,870 --> 00:10:44,740
focus mostly on presentation and user

00:10:42,520 --> 00:10:46,959
interactions so if you've got a big

00:10:44,740 --> 00:10:49,120
chunk of code for doing some logic here

00:10:46,959 --> 00:10:50,980
for example I've got a sign up email

00:10:49,120 --> 00:10:52,660
form and I've got lots of code in the

00:10:50,980 --> 00:10:53,829
sign userupp function that that kind of

00:10:52,660 --> 00:10:56,079
makes a request to our server and does

00:10:53,829 --> 00:10:57,370
all sorts of boring stuff that stuff

00:10:56,079 --> 00:10:59,500
doesn't need to be within this component

00:10:57,370 --> 00:11:01,420
by putting it in this component you make

00:10:59,500 --> 00:11:03,579
it harder to test and you just make it

00:11:01,420 --> 00:11:04,959
harder to to work on the more code there

00:11:03,579 --> 00:11:06,250
isn't a file normally it means the

00:11:04,959 --> 00:11:06,880
harder it is to work on just cuz there's

00:11:06,250 --> 00:11:09,850
more stuff for

00:11:06,880 --> 00:11:11,710
to deal with and so by letting the

00:11:09,850 --> 00:11:13,480
component focus just on the presentation

00:11:11,710 --> 00:11:14,920
aspect and pulling all the complicated

00:11:13,480 --> 00:11:16,900
kind of logic out into standalone

00:11:14,920 --> 00:11:18,460
functions you really you clean up your

00:11:16,900 --> 00:11:20,710
components you made them easier to test

00:11:18,460 --> 00:11:22,360
and you can also now test this signing a

00:11:20,710 --> 00:11:24,310
user up logic in isolation without

00:11:22,360 --> 00:11:25,870
having to worry about the component so

00:11:24,310 --> 00:11:29,740
try and keep your components very very

00:11:25,870 --> 00:11:30,850
clean the main challenge you'll come

00:11:29,740 --> 00:11:32,140
across when when writing these

00:11:30,850 --> 00:11:36,010
components is the challenge of

00:11:32,140 --> 00:11:37,390
reusability it's a fact of life that

00:11:36,010 --> 00:11:39,130
reusable components have to be

00:11:37,390 --> 00:11:40,810
configurable in the grand ideal world

00:11:39,130 --> 00:11:42,700
that unfortunately none of us live in

00:11:40,810 --> 00:11:44,350
you could be one component and use it

00:11:42,700 --> 00:11:46,570
lots of times on your website and it

00:11:44,350 --> 00:11:48,370
will just work that does sometimes come

00:11:46,570 --> 00:11:50,290
true for some components but for others

00:11:48,370 --> 00:11:52,150
you want them to look nearly the same or

00:11:50,290 --> 00:11:53,080
behave slightly differently and so you

00:11:52,150 --> 00:11:56,140
need to be able to configure these

00:11:53,080 --> 00:11:58,450
components in some way so let's say you

00:11:56,140 --> 00:12:00,040
work a thread and you get someone says

00:11:58,450 --> 00:12:01,570
hey we need to build a component to view

00:12:00,040 --> 00:12:04,030
an item of clothing like the item card

00:12:01,570 --> 00:12:05,620
that we saw earlier so you load up your

00:12:04,030 --> 00:12:07,900
editor you write some react you do to

00:12:05,620 --> 00:12:09,760
the CSS it's all there and then you

00:12:07,900 --> 00:12:11,380
provide this thread item component so

00:12:09,760 --> 00:12:12,610
you can dump it in you can pass it in

00:12:11,380 --> 00:12:15,340
the item that it should render and

00:12:12,610 --> 00:12:17,440
that's job done this is the really nice

00:12:15,340 --> 00:12:19,150
thing about components now as a user I

00:12:17,440 --> 00:12:20,500
can use this thread item component I

00:12:19,150 --> 00:12:22,030
don't have to worry about how you built

00:12:20,500 --> 00:12:24,280
it if I'm another developer on your team

00:12:22,030 --> 00:12:26,320
I can use your work and it's great and I

00:12:24,280 --> 00:12:27,370
love it and then if someone says ah we

00:12:26,320 --> 00:12:28,990
know we don't wanna show just one we

00:12:27,370 --> 00:12:31,180
won't show a big list okay I'll just

00:12:28,990 --> 00:12:32,350
dump these in loads of times and when

00:12:31,180 --> 00:12:33,490
you've done this for a few times with a

00:12:32,350 --> 00:12:35,410
component you've built you'll see the

00:12:33,490 --> 00:12:36,970
real power of these components going

00:12:35,410 --> 00:12:38,680
from like showing one - showing a list

00:12:36,970 --> 00:12:40,030
of them is effortless because you just

00:12:38,680 --> 00:12:41,320
dump them in and you know because

00:12:40,030 --> 00:12:43,300
they're all these these kind of black

00:12:41,320 --> 00:12:45,300
box approach you know that nothing is

00:12:43,300 --> 00:12:47,650
ever going to get in the way of that and

00:12:45,300 --> 00:12:49,360
then someone says well on some pages we

00:12:47,650 --> 00:12:51,340
want to show the brand alongside the

00:12:49,360 --> 00:12:53,710
item so we add another kind of property

00:12:51,340 --> 00:12:55,510
and react these are called properties if

00:12:53,710 --> 00:12:56,770
this was HTML these would be attributes

00:12:55,510 --> 00:12:59,620
you can kind of think them it's the same

00:12:56,770 --> 00:13:00,850
thing and then someone says oh and if

00:12:59,620 --> 00:13:02,530
it's on sale we want to show the old

00:13:00,850 --> 00:13:04,540
price alongside the new price so we add

00:13:02,530 --> 00:13:05,800
yet another property this is good we're

00:13:04,540 --> 00:13:07,600
making our kinfoke component

00:13:05,800 --> 00:13:09,580
configurable so depending on what page

00:13:07,600 --> 00:13:10,870
we're on we can do different things but

00:13:09,580 --> 00:13:12,400
we're still it's still kind of a black

00:13:10,870 --> 00:13:15,010
box that we can just configure a couple

00:13:12,400 --> 00:13:16,240
of items on it and then someone says

00:13:15,010 --> 00:13:17,980
well sometimes we don't want to actually

00:13:16,240 --> 00:13:19,600
show the sentiment we don't to let users

00:13:17,980 --> 00:13:20,590
like or dislikes items in certain

00:13:19,600 --> 00:13:22,029
situations

00:13:20,590 --> 00:13:23,110
so you add another prophecy and you

00:13:22,029 --> 00:13:24,940
begin to think well this is getting a

00:13:23,110 --> 00:13:26,290
bit confusing now if you're a developer

00:13:24,940 --> 00:13:27,430
in a few months time you come back to

00:13:26,290 --> 00:13:30,040
this there's quite a lot of options to

00:13:27,430 --> 00:13:32,440
remember and then you add yet another

00:13:30,040 --> 00:13:33,790
one for some items we show the brand

00:13:32,440 --> 00:13:35,560
instead of the name for whatever reason

00:13:33,790 --> 00:13:37,060
and suddenly you've gone from this

00:13:35,560 --> 00:13:38,470
component that was really reusable you

00:13:37,060 --> 00:13:40,360
just gave it an item and it rendered the

00:13:38,470 --> 00:13:42,640
item onto the page to one that nano

00:13:40,360 --> 00:13:44,140
takes a kind of plethora of options that

00:13:42,640 --> 00:13:45,820
are very difficult to remember them all

00:13:44,140 --> 00:13:47,290
at the time you're probably thinking

00:13:45,820 --> 00:13:48,760
this is great I can remember all these

00:13:47,290 --> 00:13:50,560
it's easy but if you come back to this

00:13:48,760 --> 00:13:52,020
in six months time it'll be very easy to

00:13:50,560 --> 00:13:54,190
forget that you can do some of this and

00:13:52,020 --> 00:13:55,510
this is a trade-off you're constantly

00:13:54,190 --> 00:13:56,740
going to be making if you're building

00:13:55,510 --> 00:13:58,750
components and you're building big

00:13:56,740 --> 00:14:00,130
websites you can't sing in a play

00:13:58,750 --> 00:14:02,950
configurability off against

00:14:00,130 --> 00:14:04,630
maintainability every proper or kind of

00:14:02,950 --> 00:14:06,850
attribute that you add let's look a bit

00:14:04,630 --> 00:14:08,380
more configurable but it also means

00:14:06,850 --> 00:14:09,690
there's more code and more work for you

00:14:08,380 --> 00:14:11,589
as a developer to understand that

00:14:09,690 --> 00:14:13,750
there's all this great tweak the others

00:14:11,589 --> 00:14:15,370
say that's excuse me the great tweet the

00:14:13,750 --> 00:14:16,510
other day says any code of your own you

00:14:15,370 --> 00:14:18,070
haven't looked at all six or more months

00:14:16,510 --> 00:14:19,600
might as well have been written by

00:14:18,070 --> 00:14:20,890
someone else and I know that I certainly

00:14:19,600 --> 00:14:23,050
find that true for code i'll i mean i

00:14:20,890 --> 00:14:25,270
hate six months ago jack he writes

00:14:23,050 --> 00:14:27,339
really sloppy code present jack writes

00:14:25,270 --> 00:14:28,690
great code but past six months jack

00:14:27,339 --> 00:14:31,540
writes it's dreadful honestly it's

00:14:28,690 --> 00:14:33,490
embarrassing maybe that is just me that

00:14:31,540 --> 00:14:35,680
yeah all right let's quickly move on i

00:14:33,490 --> 00:14:38,560
hope my boss isn't watching okay so i

00:14:35,680 --> 00:14:39,700
want to briefly touch upon CSS so we

00:14:38,560 --> 00:14:42,250
talked about these components being

00:14:39,700 --> 00:14:44,230
boxes of functionality and that includes

00:14:42,250 --> 00:14:46,750
CSS every component should provide its

00:14:44,230 --> 00:14:49,210
styling you think of these as a box with

00:14:46,750 --> 00:14:50,620
HTML CSS and javascript in and none of

00:14:49,210 --> 00:14:51,940
them should conflict with each other so

00:14:50,620 --> 00:14:53,620
if i've got a big page full of loads of

00:14:51,940 --> 00:14:55,030
them they're all in their boxes none of

00:14:53,620 --> 00:14:57,790
the CSS should get in the way of any of

00:14:55,030 --> 00:15:00,100
the other CSS i'm really i could do a

00:14:57,790 --> 00:15:01,060
whole talk on on just CSS and components

00:15:00,100 --> 00:15:02,740
i'm going to kind of whiz through it

00:15:01,060 --> 00:15:03,820
briefly but come and grab me do some

00:15:02,740 --> 00:15:06,520
googling there's lots of useful

00:15:03,820 --> 00:15:09,790
resources out there so three approaches

00:15:06,520 --> 00:15:11,050
on and talk about this is a brief topic

00:15:09,790 --> 00:15:12,430
topic as i said there's lots of good

00:15:11,050 --> 00:15:13,720
talks on youtube that go into this in a

00:15:12,430 --> 00:15:16,720
lot more detail so i'd recommend giving

00:15:13,720 --> 00:15:18,339
one of those watch the first kind of

00:15:16,720 --> 00:15:20,290
approach is the the easy one you say

00:15:18,339 --> 00:15:22,180
well we're just going to use normal CSS

00:15:20,290 --> 00:15:23,980
but we're gonna be really strict about

00:15:22,180 --> 00:15:26,080
it and every component will have a class

00:15:23,980 --> 00:15:27,670
name that we use and then no other

00:15:26,080 --> 00:15:29,080
component can ever use that class name

00:15:27,670 --> 00:15:32,589
and yeah that that will help that'll be

00:15:29,080 --> 00:15:34,000
fine but then one day you know I'm in a

00:15:32,589 --> 00:15:34,420
rush as a developer we've got a deadline

00:15:34,000 --> 00:15:36,240
we need

00:15:34,420 --> 00:15:38,589
ship something in the next hour I

00:15:36,240 --> 00:15:40,360
realized that the thing I'm building has

00:15:38,589 --> 00:15:42,459
a lot of CSS that shared with Jax

00:15:40,360 --> 00:15:44,139
carousel so I think you know what I'll

00:15:42,459 --> 00:15:46,000
do I'm a sneaky developer and I'm lazy

00:15:44,139 --> 00:15:48,790
as well I really hope my boss isn't

00:15:46,000 --> 00:15:50,889
gonna watch this talk and I'm just gonna

00:15:48,790 --> 00:15:52,510
use the Jax carousel class on this other

00:15:50,889 --> 00:15:54,010
component I'm building because they look

00:15:52,510 --> 00:15:56,889
like nearly the same they're pretty much

00:15:54,010 --> 00:15:58,389
identical and you probably do this with

00:15:56,889 --> 00:15:59,949
the best of intentions you say I'll do

00:15:58,389 --> 00:16:01,540
this for now so we can ship and then

00:15:59,949 --> 00:16:03,579
next week I'll tidy it up and I'll fix

00:16:01,540 --> 00:16:05,230
all my mistakes I don't know about you

00:16:03,579 --> 00:16:06,730
but I never get the time to fix all my

00:16:05,230 --> 00:16:08,260
mistakes I should probably stop emitting

00:16:06,730 --> 00:16:09,760
all this stuff live on stage and on a

00:16:08,260 --> 00:16:11,440
talk that's gonna be on YouTube but

00:16:09,760 --> 00:16:13,510
basically past Jack writes dreadful code

00:16:11,440 --> 00:16:17,079
I never fix any my mistakes and I'm lazy

00:16:13,510 --> 00:16:18,579
those are the key takeaways you know but

00:16:17,079 --> 00:16:19,750
you'll do this you'll do this little

00:16:18,579 --> 00:16:21,550
kind of hack to get something working

00:16:19,750 --> 00:16:23,620
but you're running out of time to fix it

00:16:21,550 --> 00:16:26,070
later and so really just sticking to CSS

00:16:23,620 --> 00:16:29,199
classes isn't a good way of doing things

00:16:26,070 --> 00:16:31,690
the way we've chosen that thread is to

00:16:29,199 --> 00:16:34,329
use something called CSS modules away

00:16:31,690 --> 00:16:36,310
CSS modules work is we define our CSS as

00:16:34,329 --> 00:16:38,139
normal but then we use a build tool like

00:16:36,310 --> 00:16:39,820
a web pack or one of the many others out

00:16:38,139 --> 00:16:41,529
there and what this does is at build

00:16:39,820 --> 00:16:44,170
time it swaps out the class name like

00:16:41,529 --> 00:16:45,850
Jack's carousel for a unique class name

00:16:44,170 --> 00:16:47,920
with kind of a random hash on the end of

00:16:45,850 --> 00:16:49,540
it what that means is your class names

00:16:47,920 --> 00:16:51,010
are guaranteed to be unique so you can

00:16:49,540 --> 00:16:53,500
never accidentally reuse them from

00:16:51,010 --> 00:16:55,000
another component so if you look at

00:16:53,500 --> 00:16:57,010
build time you can see the classes on

00:16:55,000 --> 00:16:58,300
that unordered list and list item have

00:16:57,010 --> 00:17:00,100
been turned into like shipping type

00:16:58,300 --> 00:17:02,110
toggle module double bar with a random

00:17:00,100 --> 00:17:03,370
hex on the end so I can't as a developer

00:17:02,110 --> 00:17:07,059
like reuse this class somewhere else

00:17:03,370 --> 00:17:08,819
because just not going to work the final

00:17:07,059 --> 00:17:12,069
approach is to use CSS in JavaScript

00:17:08,819 --> 00:17:13,480
again this is a huge topic I wouldn't

00:17:12,069 --> 00:17:15,549
try and cover in like the minute I have

00:17:13,480 --> 00:17:16,900
here to do it now there's lots of

00:17:15,549 --> 00:17:18,189
solutions I'm most familiar with one

00:17:16,900 --> 00:17:19,780
called style component so that's one

00:17:18,189 --> 00:17:21,130
I've use for this example but I would

00:17:19,780 --> 00:17:22,270
recommend having a Google there's lots

00:17:21,130 --> 00:17:24,120
of resources to all the different

00:17:22,270 --> 00:17:26,319
approaches you can take in this space

00:17:24,120 --> 00:17:27,910
CSS in JavaScript just says well why

00:17:26,319 --> 00:17:29,260
don't we just put the CSS next to our

00:17:27,910 --> 00:17:31,330
components because really that's where

00:17:29,260 --> 00:17:33,610
it belongs so he writes CSS in whatever

00:17:31,330 --> 00:17:35,470
form and we just use these components in

00:17:33,610 --> 00:17:37,150
our page and so now you've done away

00:17:35,470 --> 00:17:38,559
with CSS so you can never have any

00:17:37,150 --> 00:17:40,169
global class names getting in the way of

00:17:38,559 --> 00:17:43,270
each other because they just don't exist

00:17:40,169 --> 00:17:44,200
some people kind of heavily disagree

00:17:43,270 --> 00:17:45,490
with this approach and think we should

00:17:44,200 --> 00:17:47,080
keep CSS in CSS

00:17:45,490 --> 00:17:48,130
some people absolutely love it and I

00:17:47,080 --> 00:17:50,860
think I said somewhere in the

00:17:48,130 --> 00:17:52,330
door so really this depends as kind of

00:17:50,860 --> 00:17:53,170
you and your team should decide what

00:17:52,330 --> 00:17:55,630
you're most comfortable with

00:17:53,170 --> 00:17:57,220
if you would like to dive into style

00:17:55,630 --> 00:17:58,570
components I did a video with Glen

00:17:57,220 --> 00:18:01,060
Madden who's one of the creators of

00:17:58,570 --> 00:18:03,130
style components it's up on the blog

00:18:01,060 --> 00:18:04,510
it's in tiny and kind of public and free

00:18:03,130 --> 00:18:05,890
and all the rest of it I'll share a link

00:18:04,510 --> 00:18:08,560
to these slides afterwards with the hash

00:18:05,890 --> 00:18:09,970
tag so you can find it as well as I said

00:18:08,560 --> 00:18:11,680
it's really up to your team to decide

00:18:09,970 --> 00:18:12,940
what your favorite approaches in this

00:18:11,680 --> 00:18:14,410
space there's loads of different

00:18:12,940 --> 00:18:15,670
solutions I wouldn't recommend picking

00:18:14,410 --> 00:18:19,290
them just from these five minutes of

00:18:15,670 --> 00:18:21,880
slides I'd really kind of dive in online

00:18:19,290 --> 00:18:24,430
another challenge is is when should you

00:18:21,880 --> 00:18:26,080
break a component down we aim for quite

00:18:24,430 --> 00:18:27,430
small components generally typically

00:18:26,080 --> 00:18:29,050
four components to be usable they should

00:18:27,430 --> 00:18:31,450
be quite small if you think back to

00:18:29,050 --> 00:18:33,190
Twitter if I made a big notifications

00:18:31,450 --> 00:18:33,940
component that just rendered all my

00:18:33,190 --> 00:18:35,470
notifications

00:18:33,940 --> 00:18:37,420
I can't reuse that anywhere else on the

00:18:35,470 --> 00:18:39,310
site but because if I make a feed

00:18:37,420 --> 00:18:42,100
component and a tweet component those

00:18:39,310 --> 00:18:43,630
can be reused across the site but it's

00:18:42,100 --> 00:18:45,190
challenging knowing when a component is

00:18:43,630 --> 00:18:48,700
getting so big that really it should be

00:18:45,190 --> 00:18:49,960
like more than one component components

00:18:48,700 --> 00:18:51,400
are cheap you should have lots of them

00:18:49,960 --> 00:18:53,050
you will end up having lots and some of

00:18:51,400 --> 00:18:54,430
them will be very small but they're not

00:18:53,050 --> 00:18:56,140
free every time you introduce another

00:18:54,430 --> 00:18:58,870
component to your system you do pay a

00:18:56,140 --> 00:19:00,640
bit of cost you pay in maintenance more

00:18:58,870 --> 00:19:02,080
components just means more code and that

00:19:00,640 --> 00:19:04,450
means more work to keep it all running

00:19:02,080 --> 00:19:05,770
smoothly you paying complexity there's

00:19:04,450 --> 00:19:07,030
another component that exists that you

00:19:05,770 --> 00:19:09,160
have to remember about and know how it

00:19:07,030 --> 00:19:10,510
relates to everything else and you're

00:19:09,160 --> 00:19:12,220
paying communication if you're putting

00:19:10,510 --> 00:19:13,420
another component into the page it's

00:19:12,220 --> 00:19:14,890
probably going to have to get some data

00:19:13,420 --> 00:19:16,330
from somewhere so you're gonna have to

00:19:14,890 --> 00:19:19,300
have one component pass some data around

00:19:16,330 --> 00:19:20,560
to another component so components

00:19:19,300 --> 00:19:22,330
should be small and you should have lots

00:19:20,560 --> 00:19:24,610
and really a big box of like various

00:19:22,330 --> 00:19:26,620
LEGO pieces is the perfect kind of way

00:19:24,610 --> 00:19:28,480
to think about this but you should be

00:19:26,620 --> 00:19:30,220
wary of just having loads and loads like

00:19:28,480 --> 00:19:31,960
a Lego box with just one by one pieces

00:19:30,220 --> 00:19:33,490
in is not most use to anyone but one

00:19:31,960 --> 00:19:34,960
with lots of one by ones and two by twos

00:19:33,490 --> 00:19:37,530
and two by fours that that's more useful

00:19:34,960 --> 00:19:39,760
as I'm building my big cool battleship

00:19:37,530 --> 00:19:42,760
so how do you know when a component is

00:19:39,760 --> 00:19:44,230
getting too big the first metric I

00:19:42,760 --> 00:19:45,970
recommend is one that I never recommend

00:19:44,230 --> 00:19:47,950
for anything else but it's how many

00:19:45,970 --> 00:19:49,870
lines of code is it this seems silly

00:19:47,950 --> 00:19:51,790
like this usually isn't a good way to

00:19:49,870 --> 00:19:53,200
judge any of your work but for

00:19:51,790 --> 00:19:54,910
components it kind of makes sense you

00:19:53,200 --> 00:19:56,890
just think well a components got 500

00:19:54,910 --> 00:19:58,750
lines of CSS and JavaScript that's just

00:19:56,890 --> 00:20:00,010
quite a lot and you know there's no kind

00:19:58,750 --> 00:20:01,490
of fancy science here around how many

00:20:00,010 --> 00:20:02,690
lines is perfect but

00:20:01,490 --> 00:20:04,400
if you've got loads and loads of lines

00:20:02,690 --> 00:20:05,630
and they're very overwhelming you should

00:20:04,400 --> 00:20:08,210
you know that's probably a sign that you

00:20:05,630 --> 00:20:09,740
could do some work here another one is

00:20:08,210 --> 00:20:11,300
how many different HTML elements does it

00:20:09,740 --> 00:20:13,520
produce do you have your component just

00:20:11,300 --> 00:20:15,650
outputting a heading or just a list of

00:20:13,520 --> 00:20:17,929
things or does it output a heading a

00:20:15,650 --> 00:20:19,130
list a div some other stuff again that's

00:20:17,929 --> 00:20:22,190
probably a sign you could split it up

00:20:19,130 --> 00:20:24,140
and this is very subjective but how hard

00:20:22,190 --> 00:20:25,400
is the file to understand the whole

00:20:24,140 --> 00:20:27,050
benefit of these components is there

00:20:25,400 --> 00:20:28,970
black box you work in isolation and

00:20:27,050 --> 00:20:30,110
therefore if you load up a component you

00:20:28,970 --> 00:20:31,610
should be able to understand it pretty

00:20:30,110 --> 00:20:33,380
easily and you shouldn't take you too

00:20:31,610 --> 00:20:34,850
much time if it does take you lots of

00:20:33,380 --> 00:20:37,010
time that's probably a sign that there's

00:20:34,850 --> 00:20:38,690
too much going on in there and another

00:20:37,010 --> 00:20:40,250
one which sounds silly but this is one

00:20:38,690 --> 00:20:43,010
that I fall for all the time is does

00:20:40,250 --> 00:20:44,420
your components name have and in it now

00:20:43,010 --> 00:20:46,280
you'd think this is incredibly obvious

00:20:44,420 --> 00:20:48,320
and yeah and again pass Jack is a

00:20:46,280 --> 00:20:49,850
complete idiot as we've learned but I

00:20:48,320 --> 00:20:51,200
wrote a component once called item name

00:20:49,850 --> 00:20:52,970
and price and that seemed absolutely

00:20:51,200 --> 00:20:54,050
fine to me and then later on my

00:20:52,970 --> 00:20:56,059
colleague said shouldn't that just be

00:20:54,050 --> 00:21:00,080
item name and item price separately it's

00:20:56,059 --> 00:21:01,700
like I am probably should we've already

00:21:00,080 --> 00:21:03,530
touched on this but another challenge we

00:21:01,700 --> 00:21:06,320
found is you have to allow components to

00:21:03,530 --> 00:21:08,000
vary slightly in their UI as well in

00:21:06,320 --> 00:21:10,340
idea what again this wouldn't happen but

00:21:08,000 --> 00:21:11,900
in reality it often does so on threads

00:21:10,340 --> 00:21:13,309
you can like and dislike items we call

00:21:11,900 --> 00:21:14,690
this sentiment and there's a few

00:21:13,309 --> 00:21:15,890
different ways you can do it you can see

00:21:14,690 --> 00:21:17,720
on the Left we've got kind of two

00:21:15,890 --> 00:21:18,860
buttons on the right you might just be

00:21:17,720 --> 00:21:21,110
able to make out there's a little heart

00:21:18,860 --> 00:21:23,390
and cross just below the picture of that

00:21:21,110 --> 00:21:24,740
rather interesting blazer and on the

00:21:23,390 --> 00:21:28,100
right we've got these bigger buttons to

00:21:24,740 --> 00:21:29,270
these components are 95% the same all

00:21:28,100 --> 00:21:31,400
the logic is are saying they make the

00:21:29,270 --> 00:21:32,980
same API calls all the rest of it but

00:21:31,400 --> 00:21:35,179
they just look subtly different and

00:21:32,980 --> 00:21:36,650
there are times where you can sit down

00:21:35,179 --> 00:21:37,850
with your design team and say well

00:21:36,650 --> 00:21:39,290
actually can we just make these look the

00:21:37,850 --> 00:21:40,670
same and it will save a lot complexity

00:21:39,290 --> 00:21:43,100
but there are other times where you will

00:21:40,670 --> 00:21:44,840
need to be able to do this so the way

00:21:43,100 --> 00:21:47,600
we've taken it is we explicitly allow

00:21:44,840 --> 00:21:49,580
what we call component variants so we

00:21:47,600 --> 00:21:51,559
list the variants that a certain

00:21:49,580 --> 00:21:52,760
component can have and you can pass that

00:21:51,559 --> 00:21:54,980
in when you render one of these

00:21:52,760 --> 00:21:56,809
components they have a default but you

00:21:54,980 --> 00:21:58,730
can pass in an override if you want to

00:21:56,809 --> 00:22:00,380
we found by explicitly listing the

00:21:58,730 --> 00:22:02,450
variants that you're allowed and then

00:22:00,380 --> 00:22:03,710
applying CSS accordingly that's a nice

00:22:02,450 --> 00:22:04,910
way to kind of deal with keeping the

00:22:03,710 --> 00:22:06,920
components the same keeping them

00:22:04,910 --> 00:22:08,690
configurable but allowing slight visual

00:22:06,920 --> 00:22:10,400
differences the key here is to allow

00:22:08,690 --> 00:22:11,840
just very slight small visual

00:22:10,400 --> 00:22:12,980
differences if you've got a component

00:22:11,840 --> 00:22:14,450
that can be rendered completely

00:22:12,980 --> 00:22:15,890
differently that's probably two

00:22:14,450 --> 00:22:17,880
different component

00:22:15,890 --> 00:22:19,050
and really a more general rule that

00:22:17,880 --> 00:22:21,120
works with components but works

00:22:19,050 --> 00:22:23,100
everywhere else as well is favor

00:22:21,120 --> 00:22:24,780
explicit code / implicit knowledge don't

00:22:23,100 --> 00:22:26,640
don't have some like hidden CSS that

00:22:24,780 --> 00:22:28,650
will change the behavior of how

00:22:26,640 --> 00:22:30,270
something looks passing an explicit like

00:22:28,650 --> 00:22:34,290
variant property or our flag or

00:22:30,270 --> 00:22:36,360
attribute and you should be beware

00:22:34,290 --> 00:22:38,130
beware excuse me you should be aware of

00:22:36,360 --> 00:22:40,680
breaking the abstraction when building

00:22:38,130 --> 00:22:42,480
these components - so we've spoken about

00:22:40,680 --> 00:22:44,130
this blackbox abstraction like your code

00:22:42,480 --> 00:22:46,650
is in a box and nothing can reach into

00:22:44,130 --> 00:22:48,320
it and mess with it but sometimes you

00:22:46,650 --> 00:22:50,250
might have to break this abstraction a

00:22:48,320 --> 00:22:53,220
good way to know if you've built a

00:22:50,250 --> 00:22:55,020
component that is blackbox C is to say

00:22:53,220 --> 00:22:56,910
okay could I pick up this component out

00:22:55,020 --> 00:22:58,560
of my project create a brand new project

00:22:56,910 --> 00:23:01,320
with nothing else in it and dump my

00:22:58,560 --> 00:23:03,180
component in and would it work if so the

00:23:01,320 --> 00:23:04,770
component is a complete black box there

00:23:03,180 --> 00:23:07,140
is nothing it needs to be able to work

00:23:04,770 --> 00:23:08,310
correctly but in real life you can't

00:23:07,140 --> 00:23:09,600
have all your components like this

00:23:08,310 --> 00:23:10,170
components need to get data from

00:23:09,600 --> 00:23:11,730
somewhere

00:23:10,170 --> 00:23:13,320
some of them will rely on other

00:23:11,730 --> 00:23:14,490
libraries that you need like if you're

00:23:13,320 --> 00:23:15,930
building a react app you might have

00:23:14,490 --> 00:23:18,630
Redux in there and some components will

00:23:15,930 --> 00:23:20,070
need some data from from there and so

00:23:18,630 --> 00:23:21,810
you can't have every component be a

00:23:20,070 --> 00:23:24,270
complete black box unfortunately it just

00:23:21,810 --> 00:23:25,830
doesn't quite work the trick is to think

00:23:24,270 --> 00:23:27,690
very carefully about how your structure

00:23:25,830 --> 00:23:29,400
your components so that it's very clear

00:23:27,690 --> 00:23:31,560
when components do take data and when

00:23:29,400 --> 00:23:33,210
they are just more like black boxes it's

00:23:31,560 --> 00:23:34,830
better to have fewer components taking

00:23:33,210 --> 00:23:38,220
in data and most of them be this kind of

00:23:34,830 --> 00:23:39,930
black box just to briefly touch on the

00:23:38,220 --> 00:23:41,820
kind of approaches to giving components

00:23:39,930 --> 00:23:43,440
data so if you've got a front-end you

00:23:41,820 --> 00:23:45,210
might have an API with data you know you

00:23:43,440 --> 00:23:47,280
need to get that into your components

00:23:45,210 --> 00:23:49,620
there's three approaches you can use

00:23:47,280 --> 00:23:51,420
api's components can make HTTP requests

00:23:49,620 --> 00:23:53,490
the components can be given data from

00:23:51,420 --> 00:23:54,630
the server and they can pass data left

00:23:53,490 --> 00:23:56,550
in the script tags these are the three

00:23:54,630 --> 00:23:57,930
approaches we've been using so in the

00:23:56,550 --> 00:23:59,940
api's your component might render a

00:23:57,930 --> 00:24:02,340
loading spinner fetch some API and then

00:23:59,940 --> 00:24:03,950
deal with fetching the data and showing

00:24:02,340 --> 00:24:06,480
an error if something went wrong

00:24:03,950 --> 00:24:07,830
sometimes we just use templated data

00:24:06,480 --> 00:24:09,750
from the server so if you view the

00:24:07,830 --> 00:24:11,160
thread comm source code you'll see stuff

00:24:09,750 --> 00:24:12,600
looks like this it looks like a bit of a

00:24:11,160 --> 00:24:13,710
mess but this is server generated like

00:24:12,600 --> 00:24:15,240
thankfully we don't have to write this

00:24:13,710 --> 00:24:17,160
by hand but you can see we've got the

00:24:15,240 --> 00:24:19,140
thread item card component it takes an

00:24:17,160 --> 00:24:22,170
item prop which is a big dump of JSON

00:24:19,140 --> 00:24:23,730
and you'll see this throughout the site

00:24:22,170 --> 00:24:25,080
we look at this product sentiment

00:24:23,730 --> 00:24:27,230
example you see we pass in all the data

00:24:25,080 --> 00:24:29,149
we need from the server

00:24:27,230 --> 00:24:31,429
the final approach we use is having data

00:24:29,149 --> 00:24:33,289
in script tags so we dump some kind of

00:24:31,429 --> 00:24:34,880
quite global data for example is the

00:24:33,289 --> 00:24:37,279
user logged in or not into a script tag

00:24:34,880 --> 00:24:39,110
on our page we write a little utility

00:24:37,279 --> 00:24:42,110
that lets us know and read data from

00:24:39,110 --> 00:24:43,549
there and then we can use that in a

00:24:42,110 --> 00:24:46,010
component so component can easily check

00:24:43,549 --> 00:24:48,200
if a user is logged in these approaches

00:24:46,010 --> 00:24:49,610
have pros and cons api's are good for

00:24:48,200 --> 00:24:51,529
more complex data that's changing all

00:24:49,610 --> 00:24:53,059
the time but the issue with that is then

00:24:51,529 --> 00:24:55,039
if you render a component in it then

00:24:53,059 --> 00:24:56,450
needs to fetch data that's slower before

00:24:55,039 --> 00:24:58,370
you get the data in front of the user

00:24:56,450 --> 00:24:59,450
and there's kind of pros and constitute

00:24:58,370 --> 00:25:03,200
- each one you should think carefully

00:24:59,450 --> 00:25:04,490
about what works best for you so my

00:25:03,200 --> 00:25:06,230
final few minutes I just want to talk

00:25:04,490 --> 00:25:07,730
about the path to components today what

00:25:06,230 --> 00:25:08,899
happens if if you're at work and you

00:25:07,730 --> 00:25:10,960
like this approach you want start

00:25:08,899 --> 00:25:13,250
introducing it to your existing app and

00:25:10,960 --> 00:25:17,210
thread is actually a really good example

00:25:13,250 --> 00:25:18,769
of this thread is five or so years old

00:25:17,210 --> 00:25:20,720
it's a server-side rendered django

00:25:18,769 --> 00:25:23,539
application django is a like Ruby on

00:25:20,720 --> 00:25:25,730
Rails ish but for for Python and it

00:25:23,539 --> 00:25:28,429
renders HTML via via service I templates

00:25:25,730 --> 00:25:30,080
much like many web sites do the

00:25:28,429 --> 00:25:31,700
JavaScript historically which is layered

00:25:30,080 --> 00:25:35,899
on top via some jQuery or plain

00:25:31,700 --> 00:25:37,370
JavaScript or whatever and although we

00:25:35,899 --> 00:25:38,600
had this kind of big architecture in

00:25:37,370 --> 00:25:40,610
place we were still able to start

00:25:38,600 --> 00:25:42,230
introducing components we now have

00:25:40,610 --> 00:25:43,429
roughly 50 or so I think it will take

00:25:42,230 --> 00:25:45,049
and that number is going up all the time

00:25:43,429 --> 00:25:47,000
so even though we're not building a

00:25:45,049 --> 00:25:48,799
complete brand new single page react app

00:25:47,000 --> 00:25:50,450
from scratch we're still able to use a

00:25:48,799 --> 00:25:52,460
lot these approaches and introduce it to

00:25:50,450 --> 00:25:54,260
an older codebase this is like the

00:25:52,460 --> 00:25:56,450
perfect image that I found for this talk

00:25:54,260 --> 00:25:57,710
online but you've got this big wall of

00:25:56,450 --> 00:26:00,440
stuff and you can just start putting in

00:25:57,710 --> 00:26:01,850
Lego bricks this is I mean I would never

00:26:00,440 --> 00:26:04,039
go inside that building because I

00:26:01,850 --> 00:26:06,769
wouldn't trust it but I like the picture

00:26:04,039 --> 00:26:08,870
a nice kind of technique for doing this

00:26:06,769 --> 00:26:10,490
we found is is to wrap your your

00:26:08,870 --> 00:26:12,980
framework components in actual web

00:26:10,490 --> 00:26:14,600
elements so this this is the only react

00:26:12,980 --> 00:26:16,610
specific link it's to a project called

00:26:14,600 --> 00:26:17,840
reactive elements but there are similar

00:26:16,610 --> 00:26:19,070
things exist for all the other

00:26:17,840 --> 00:26:21,679
frameworks and or you could write one

00:26:19,070 --> 00:26:23,450
yourself pretty easily what this lets us

00:26:21,679 --> 00:26:25,309
do is in our JavaScript we import our

00:26:23,450 --> 00:26:26,899
react and we we call this thing called

00:26:25,309 --> 00:26:29,990
register react which is provided by that

00:26:26,899 --> 00:26:31,519
reactive elements library and that

00:26:29,990 --> 00:26:33,440
creates a web component that will just

00:26:31,519 --> 00:26:34,580
mount our react component within it so

00:26:33,440 --> 00:26:36,500
then in our server we can use these

00:26:34,580 --> 00:26:38,059
templates like thread - item card and

00:26:36,500 --> 00:26:39,140
that will render the react component

00:26:38,059 --> 00:26:41,090
that we've given it

00:26:39,140 --> 00:26:42,470
this lecturers introduced react in our

00:26:41,090 --> 00:26:44,030
component system without having to

00:26:42,470 --> 00:26:45,590
rewrite a lot of functionality that we

00:26:44,030 --> 00:26:46,910
already have on the server

00:26:45,590 --> 00:26:48,230
lots of our stuff is server-side

00:26:46,910 --> 00:26:50,030
rendered and that that makes perfect

00:26:48,230 --> 00:26:51,740
sense for what we're doing but we can

00:26:50,030 --> 00:26:53,510
inject little bits of react in where we

00:26:51,740 --> 00:26:55,400
need to and then on pages where

00:26:53,510 --> 00:26:57,650
sometimes like it's hard to believe but

00:26:55,400 --> 00:26:59,720
sometimes we don't need Java Script it's

00:26:57,650 --> 00:27:03,890
weird we can still just use our server

00:26:59,720 --> 00:27:05,060
and render HTML and CSS and when you're

00:27:03,890 --> 00:27:06,500
working on a big app like this you've

00:27:05,060 --> 00:27:07,850
probably got some areas of the codebase

00:27:06,500 --> 00:27:09,320
or some parts that are quite hard for

00:27:07,850 --> 00:27:11,450
you to work with then what you might

00:27:09,320 --> 00:27:12,830
describe is legacy code is code that's

00:27:11,450 --> 00:27:15,170
hard to touch hard to work with and it's

00:27:12,830 --> 00:27:16,730
just a pain all around components that

00:27:15,170 --> 00:27:18,620
you actually do this really well and a

00:27:16,730 --> 00:27:20,990
good example is we rebuilt some of our

00:27:18,620 --> 00:27:24,380
check out recently and we moved it to to

00:27:20,990 --> 00:27:26,000
react and in I don't know if it's if

00:27:24,380 --> 00:27:27,350
it's outside the UK I'm not sure in the

00:27:26,000 --> 00:27:29,900
UK we have a service called collect Plus

00:27:27,350 --> 00:27:31,910
which basically lets you will ship your

00:27:29,900 --> 00:27:33,710
parcel of clothes not to your house but

00:27:31,910 --> 00:27:35,000
to a store near you that you can then go

00:27:33,710 --> 00:27:36,500
and pick up so if you if you're not in

00:27:35,000 --> 00:27:39,080
during the day you can still go and get

00:27:36,500 --> 00:27:41,360
your stuff from a store nearby and the

00:27:39,080 --> 00:27:43,640
collect Plus has this horrible like

00:27:41,360 --> 00:27:45,140
widget API thing that you have to hack

00:27:43,640 --> 00:27:47,420
together to get it to work on your site

00:27:45,140 --> 00:27:48,980
and it was a pain but when it came to

00:27:47,420 --> 00:27:50,240
rebuild and check out and react I didn't

00:27:48,980 --> 00:27:52,550
really want to have to dive into this

00:27:50,240 --> 00:27:53,900
collect plus API widget stuff and make

00:27:52,550 --> 00:27:56,510
sense of it I just want to kind of leave

00:27:53,900 --> 00:27:58,190
it alone but you can take advantage of

00:27:56,510 --> 00:27:59,660
the blackbox abstraction and I made a

00:27:58,190 --> 00:28:01,580
react component called react click plus

00:27:59,660 --> 00:28:04,310
and inside there I just dumped all the

00:28:01,580 --> 00:28:06,050
horrible legacy stuff and down the

00:28:04,310 --> 00:28:08,030
bottom in our templates we can still use

00:28:06,050 --> 00:28:09,620
thread - collect plus but now all this

00:28:08,030 --> 00:28:11,900
horrible legacy code is boxed away in

00:28:09,620 --> 00:28:13,670
its own little box so you can use the

00:28:11,900 --> 00:28:15,740
blackbox abstraction to hide away bad

00:28:13,670 --> 00:28:17,210
code in like a layer of good code and

00:28:15,740 --> 00:28:18,560
sure it's not ideal we'd rather the

00:28:17,210 --> 00:28:20,510
collect plus widget be much better

00:28:18,560 --> 00:28:21,710
written and we could work with it but

00:28:20,510 --> 00:28:23,180
for now and we don't have time to

00:28:21,710 --> 00:28:24,860
rebuild it or we don't need to it works

00:28:23,180 --> 00:28:26,240
perfectly fine we've just sort of hidden

00:28:24,860 --> 00:28:28,790
that bad code away for a bit sort of

00:28:26,240 --> 00:28:30,170
swept it under the rug you shouldn't do

00:28:28,790 --> 00:28:31,460
this all the time else you know your

00:28:30,170 --> 00:28:33,080
codebase can become hard to work with

00:28:31,460 --> 00:28:34,220
when you don't have time to rebuild

00:28:33,080 --> 00:28:37,040
something it's a it's a pretty good

00:28:34,220 --> 00:28:38,540
approach the black box earnest

00:28:37,040 --> 00:28:41,510
subcomponents is also really good for

00:28:38,540 --> 00:28:42,560
then you try new technology so for

00:28:41,510 --> 00:28:44,420
example we were writing loads of

00:28:42,560 --> 00:28:46,430
components in react and we hand decide

00:28:44,420 --> 00:28:48,530
on how we were going to do CSS yet and

00:28:46,430 --> 00:28:50,990
so we said well for the next component

00:28:48,530 --> 00:28:52,040
let's make it use CSS modules and we'll

00:28:50,990 --> 00:28:52,909
have another component that we build

00:28:52,040 --> 00:28:54,229
that will use style

00:28:52,909 --> 00:28:57,289
components or what are the CSS and

00:28:54,229 --> 00:28:58,929
JavaScript type solutions and so we did

00:28:57,289 --> 00:29:01,129
that and we deployed both of them and

00:28:58,929 --> 00:29:02,359
then we you know we built a couple more

00:29:01,129 --> 00:29:04,580
we talked about it and we decided that

00:29:02,359 --> 00:29:06,049
for us we preferred CSS modules over

00:29:04,580 --> 00:29:07,789
style components we liked the fact that

00:29:06,049 --> 00:29:10,070
we could still write actual CSS rather

00:29:07,789 --> 00:29:11,570
than it being JavaScript again that's

00:29:10,070 --> 00:29:12,830
our choice you might decide differently

00:29:11,570 --> 00:29:15,139
and that's absolutely fine

00:29:12,830 --> 00:29:16,159
and of course over kind of the long run

00:29:15,139 --> 00:29:17,720
all your components that you're

00:29:16,159 --> 00:29:19,820
deploying should use the same set of

00:29:17,720 --> 00:29:21,289
technologies if you work on a site it's

00:29:19,820 --> 00:29:22,460
got some in react some in angular some

00:29:21,289 --> 00:29:23,840
in views I'm an ember that's going from

00:29:22,460 --> 00:29:25,340
very hard to work with very quickly

00:29:23,840 --> 00:29:27,229
you're also going to have to ship all of

00:29:25,340 --> 00:29:29,479
those frameworks to the user which is

00:29:27,229 --> 00:29:31,220
non-ideal for performance but doing it

00:29:29,479 --> 00:29:34,669
temporarily so you can kind of compare

00:29:31,220 --> 00:29:36,109
two technologies is pretty valuable it's

00:29:34,669 --> 00:29:37,369
easy to get distracted like in the

00:29:36,109 --> 00:29:38,869
office with your colleagues talking

00:29:37,369 --> 00:29:40,279
about should we use CSS modules should

00:29:38,869 --> 00:29:42,440
we use style components should we use

00:29:40,279 --> 00:29:43,639
this should we use that bashi components

00:29:42,440 --> 00:29:47,330
that you just do it wrap it in a box

00:29:43,639 --> 00:29:49,519
ship it and see what you think so to sum

00:29:47,330 --> 00:29:51,200
up keep your components small and be

00:29:49,519 --> 00:29:53,149
wary of too much configuration

00:29:51,200 --> 00:29:54,950
beware anything that breaks this

00:29:53,149 --> 00:29:57,799
blackbox abstraction but except you will

00:29:54,950 --> 00:29:59,720
have to do it sometimes prefer explicit

00:29:57,799 --> 00:30:00,979
code over implicit knowledge of how your

00:29:59,720 --> 00:30:03,349
components interact to make all that

00:30:00,979 --> 00:30:05,749
very explicit I remember that we're all

00:30:03,349 --> 00:30:07,279
friggin us out together as we go so if

00:30:05,749 --> 00:30:08,929
you do have any thoughts I'd love to to

00:30:07,279 --> 00:30:11,029
hear them just to finish with a

00:30:08,929 --> 00:30:13,460
shameless plug wouldn't be a talk of an

00:30:11,029 --> 00:30:15,109
into a shameless plug as Alex said I am

00:30:13,460 --> 00:30:16,519
do some video series on JavaScript

00:30:15,109 --> 00:30:19,099
played on comm I have one on testing

00:30:16,519 --> 00:30:21,109
react using enzyme and just the first

00:30:19,099 --> 00:30:22,220
five videos are entirely free online you

00:30:21,109 --> 00:30:23,899
can watch them on YouTube they won't

00:30:22,220 --> 00:30:25,580
cost you a penny if you want to buy the

00:30:23,899 --> 00:30:26,659
rest it's normally $20 but if you use

00:30:25,580 --> 00:30:28,909
the co-chairs heroes

00:30:26,659 --> 00:30:29,779
you'll get 50% off have any questions

00:30:28,909 --> 00:30:31,849
about that or anything else

00:30:29,779 --> 00:30:33,289
feel free to come and grab me I'm Jack

00:30:31,849 --> 00:30:35,419
underscore Franklin on Twitter the

00:30:33,289 --> 00:30:36,840
slides are up on speaker deck and thank

00:30:35,419 --> 00:30:41,260
you very much for listening

00:30:36,840 --> 00:30:41,260
[Applause]

00:30:42,450 --> 00:30:45,569

YouTube URL: https://www.youtube.com/watch?v=SF64OwN58Fw


