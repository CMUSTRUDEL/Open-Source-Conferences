Title: JSHeroes 2017 | Vladimir Porton  - React Native: From pure Web app to a Web & Mobile hybrid
Publication date: 2017-06-23
Playlist: JSHeroes 2017
Description: 
	I'll introduce how we took a production React Web site and turned it into a hybrid repo for both Web and Mobile. A single repository to rule them all - the challenges, deployment setup, shared code and lots of lessons learned. Get ready for some real-world lessons!
Captions: 
	00:00:12,110 --> 00:00:18,570
everyone today we're going to talk about

00:00:14,750 --> 00:00:21,150
how we take an already existing reactive

00:00:18,570 --> 00:00:23,490
web app and build a react native web on

00:00:21,150 --> 00:00:26,600
top of it

00:00:23,490 --> 00:00:29,250
towards about me I'm coming from Israel

00:00:26,600 --> 00:00:29,910
I'm not that long in doing web

00:00:29,250 --> 00:00:32,550
development

00:00:29,910 --> 00:00:35,460
only for two years I've been doing react

00:00:32,550 --> 00:00:39,540
mostly and react native for the past

00:00:35,460 --> 00:00:41,640
year and this topic is very important to

00:00:39,540 --> 00:00:44,220
me because in the context of react

00:00:41,640 --> 00:00:46,710
native when thinking about mobile mobile

00:00:44,220 --> 00:00:49,800
development this seemed like different

00:00:46,710 --> 00:00:53,370
things if you think about Android or iOS

00:00:49,800 --> 00:00:57,540
or web but in the context of react

00:00:53,370 --> 00:00:59,670
native they are the same and they have

00:00:57,540 --> 00:01:03,210
the same logic the JavaScript behind of

00:00:59,670 --> 00:01:09,630
it is the same what's different is the

00:01:03,210 --> 00:01:11,369
UI and applying for today is we're going

00:01:09,630 --> 00:01:14,369
to have a non que part we're going to

00:01:11,369 --> 00:01:18,119
have a boring part and then we're going

00:01:14,369 --> 00:01:19,590
to have an interesting part so I want to

00:01:18,119 --> 00:01:21,780
get to the interesting part very fast

00:01:19,590 --> 00:01:23,580
we're going to begin with the ok part

00:01:21,780 --> 00:01:27,270
and I'm going to give you a real-life

00:01:23,580 --> 00:01:30,690
example of an app that we've built first

00:01:27,270 --> 00:01:32,929
it was just a react web app and then

00:01:30,690 --> 00:01:36,240
they decided we wanted a mobile app and

00:01:32,929 --> 00:01:39,090
we never done it we never did react

00:01:36,240 --> 00:01:41,250
native it's it's a young framework so

00:01:39,090 --> 00:01:43,920
I'll just show you the web by the way it

00:01:41,250 --> 00:01:48,229
is not an advertisement this app is for

00:01:43,920 --> 00:01:48,229
farmers are there any farmers here

00:01:49,439 --> 00:01:57,729
then it is an advertisement for you very

00:01:52,479 --> 00:02:00,549
great service this is their web app and

00:01:57,729 --> 00:02:03,549
I'm showing to you just so you see that

00:02:00,549 --> 00:02:09,399
there is some logic behind of it and I

00:02:03,549 --> 00:02:14,410
hope I have Wi-Fi looks like I do one

00:02:09,399 --> 00:02:21,870
second now it's all right I think you're

00:02:14,410 --> 00:02:21,870
connecting again let's wait

00:02:23,970 --> 00:02:32,769
yeah it's a likes working talking like I

00:02:30,580 --> 00:02:34,930
said this is for farmers the main ideas

00:02:32,769 --> 00:02:38,019
we put sensors in the soil and then the

00:02:34,930 --> 00:02:40,959
farmers can see how much the plants grow

00:02:38,019 --> 00:02:43,390
how much irrigation the plains God how

00:02:40,959 --> 00:02:47,140
much irrigation they need how much water

00:02:43,390 --> 00:02:50,500
did the plants lose they have very

00:02:47,140 --> 00:02:53,140
specific details about the plant's

00:02:50,500 --> 00:02:55,390
growth and then they decided that they

00:02:53,140 --> 00:02:59,400
wanted a mobile app and it was pain lee

00:02:55,390 --> 00:03:03,340
yeah we didn't know how to approach it

00:02:59,400 --> 00:03:08,139
but we made it and this is just a simple

00:03:03,340 --> 00:03:10,660
animation of the mobile app we have all

00:03:08,139 --> 00:03:14,170
of the functionality of the web app here

00:03:10,660 --> 00:03:16,030
and I also want you to see that the

00:03:14,170 --> 00:03:21,280
react native mobile apps are very fluent

00:03:16,030 --> 00:03:23,350
is 60fps but frames per second just they

00:03:21,280 --> 00:03:26,799
look beautiful and they behave just like

00:03:23,350 --> 00:03:33,040
every ordinary model apps we also made

00:03:26,799 --> 00:03:34,299
some custom components so yeah I'm going

00:03:33,040 --> 00:03:39,519
to explain how to set up this is the

00:03:34,299 --> 00:03:42,970
boring part is there anyone here who

00:03:39,519 --> 00:03:44,380
doesn't know what Redux is don't be shy

00:03:42,970 --> 00:03:48,160
because I'm going to explain it anyway

00:03:44,380 --> 00:03:51,160
okay thank you the main idea behind is

00:03:48,160 --> 00:03:53,769
all of your data sits in the state you

00:03:51,160 --> 00:03:55,480
pass the state to your UI and if you

00:03:53,769 --> 00:03:56,829
want to interact with your state or

00:03:55,480 --> 00:03:59,350
change your state interact with your

00:03:56,829 --> 00:04:01,600
light you dispatch action so let's say

00:03:59,350 --> 00:04:04,060
press the button you dispatch an action

00:04:01,600 --> 00:04:05,590
and the action goes to a very simple

00:04:04,060 --> 00:04:07,389
function it's called the reducer and

00:04:05,590 --> 00:04:09,070
what the reducer does it take the

00:04:07,389 --> 00:04:11,079
actions that you just dispatched it

00:04:09,070 --> 00:04:13,090
takes the old state does whatever you

00:04:11,079 --> 00:04:15,850
want it to do and it returns you a new

00:04:13,090 --> 00:04:18,609
state and when the state is updated your

00:04:15,850 --> 00:04:23,110
UI is updated and we have this circle of

00:04:18,609 --> 00:04:27,400
life for react Web Apps default

00:04:23,110 --> 00:04:29,440
structure using redux is you have the

00:04:27,400 --> 00:04:32,110
app folder the main app folder then you

00:04:29,440 --> 00:04:34,090
have the store folder where the story is

00:04:32,110 --> 00:04:36,970
responsible for dispatching actions and

00:04:34,090 --> 00:04:39,190
for for for your state you have your

00:04:36,970 --> 00:04:41,440
action folder the ones that you dispatch

00:04:39,190 --> 00:04:43,240
to change the state and you have your

00:04:41,440 --> 00:04:45,970
reducer the functions which change the

00:04:43,240 --> 00:04:49,419
state and you have your UI components

00:04:45,970 --> 00:04:50,380
and for default react native apps which

00:04:49,419 --> 00:04:52,840
use Redux

00:04:50,380 --> 00:04:55,240
the structure is a bit different so pay

00:04:52,840 --> 00:04:58,030
attention you have your main app folder

00:04:55,240 --> 00:04:59,919
you have your store responsible for

00:04:58,030 --> 00:05:02,680
dispatching actions and holding the

00:04:59,919 --> 00:05:04,090
stake you have your actions folder the

00:05:02,680 --> 00:05:07,479
one that you dispatch to change the

00:05:04,090 --> 00:05:10,150
state you have your reducers to divine

00:05:07,479 --> 00:05:13,300
the changes state and you have your UI

00:05:10,150 --> 00:05:18,669
components it's not difficult to

00:05:13,300 --> 00:05:21,520
understand that they are the same and

00:05:18,669 --> 00:05:25,060
the only thing is different is the UI

00:05:21,520 --> 00:05:26,919
and what we decided to do like I said

00:05:25,060 --> 00:05:29,770
we've never done react native before and

00:05:26,919 --> 00:05:31,720
this is what this was our approach we

00:05:29,770 --> 00:05:34,509
took our already existing react web

00:05:31,720 --> 00:05:37,210
application and we took we created the

00:05:34,509 --> 00:05:39,880
react native app and we just combined we

00:05:37,210 --> 00:05:43,350
combined them and we made a mono repo

00:05:39,880 --> 00:05:46,470
and the structure is very simple it

00:05:43,350 --> 00:05:50,170
could be the last slide but I have like

00:05:46,470 --> 00:05:53,030
20 more minutes so we'll continue

00:05:50,170 --> 00:05:55,250
this is the last this is the web UI

00:05:53,030 --> 00:05:58,130
folder all of your react components each

00:05:55,250 --> 00:06:00,530
here this is the native UI of your

00:05:58,130 --> 00:06:03,230
native component seat here and this is

00:06:00,530 --> 00:06:05,390
the core this is the logic of your app

00:06:03,230 --> 00:06:07,970
all of your Redux it doesn't matter what

00:06:05,390 --> 00:06:11,120
you use if it's mob EXO Redux all of the

00:06:07,970 --> 00:06:15,470
logic sits here in both the web and the

00:06:11,120 --> 00:06:17,210
native are connected to it and now the

00:06:15,470 --> 00:06:19,100
interesting part we're going to do live

00:06:17,210 --> 00:06:21,500
coding we're going to take an already

00:06:19,100 --> 00:06:23,210
existing web application and we're going

00:06:21,500 --> 00:06:26,570
to take an empty react native app and

00:06:23,210 --> 00:06:29,330
connect it to the same logic the web

00:06:26,570 --> 00:06:32,780
application uses we're going to show you

00:06:29,330 --> 00:06:34,520
the app this is a very simple app we

00:06:32,780 --> 00:06:37,460
have a button here and when you press it

00:06:34,520 --> 00:06:41,930
it shows us the list of yesterday talks

00:06:37,460 --> 00:06:44,150
and we can select near Kaufmann and now

00:06:41,930 --> 00:06:47,270
he's happy and selected yeah

00:06:44,150 --> 00:06:50,930
and we're going to do the same here

00:06:47,270 --> 00:06:56,060
right now it's empty and said but we're

00:06:50,930 --> 00:06:59,770
going to fill it up but first let's see

00:06:56,060 --> 00:07:00,890
how it works this is a very basic

00:06:59,770 --> 00:07:04,010
explanation

00:07:00,890 --> 00:07:06,500
oh the initial state of our app we don't

00:07:04,010 --> 00:07:09,590
have any talks and we didn't select any

00:07:06,500 --> 00:07:12,290
talk so the state is empty and then we

00:07:09,590 --> 00:07:15,260
press the button we dispatch an action

00:07:12,290 --> 00:07:17,630
that goes to the server and brings us a

00:07:15,260 --> 00:07:19,940
list of talks we put these talks in our

00:07:17,630 --> 00:07:22,520
state and when our state is updated

00:07:19,940 --> 00:07:25,280
we'll rerender our UI and then we see

00:07:22,520 --> 00:07:28,730
the list and the same goes for if I

00:07:25,280 --> 00:07:30,590
click on a talk dispatch an action take

00:07:28,730 --> 00:07:33,860
the stock that I just clicked on and put

00:07:30,590 --> 00:07:36,350
it in the state the state is updated the

00:07:33,860 --> 00:07:42,110
UI is we rendered and we get a happy

00:07:36,350 --> 00:07:45,350
selected user very Studer and what we

00:07:42,110 --> 00:07:47,440
are going to do now is take all of this

00:07:45,350 --> 00:07:51,140
and we're just going to swap it with

00:07:47,440 --> 00:07:53,930
mobile everything stays the same the

00:07:51,140 --> 00:07:56,360
logic is the same the only thing that is

00:07:53,930 --> 00:07:59,660
change is the UI so the same for the

00:07:56,360 --> 00:08:02,940
list and let's say we restaurant all

00:07:59,660 --> 00:08:09,030
we're going to get a happy selected pork

00:08:02,940 --> 00:08:14,790
you also look happy in the picture so

00:08:09,030 --> 00:08:17,190
let's do the fun part pay attention only

00:08:14,790 --> 00:08:20,730
to the selected folders this is our

00:08:17,190 --> 00:08:23,610
project we have like I said core core

00:08:20,730 --> 00:08:26,640
folder with our actions or reducers and

00:08:23,610 --> 00:08:29,310
a store and we have our native

00:08:26,640 --> 00:08:31,830
components this is the UI folder mobile

00:08:29,310 --> 00:08:37,349
and we have our web components this is

00:08:31,830 --> 00:08:40,080
the UI for web and I open them side by

00:08:37,349 --> 00:08:43,380
side the right side is the web app and

00:08:40,080 --> 00:08:45,990
the left side is the mobile app and as

00:08:43,380 --> 00:08:48,000
we've seen the left side is empty we

00:08:45,990 --> 00:08:52,070
don't have anything here so what we're

00:08:48,000 --> 00:08:55,860
going to do and it is very difficult

00:08:52,070 --> 00:08:58,860
just going to put it here they're going

00:08:55,860 --> 00:09:00,540
to put it here and remember the part

00:08:58,860 --> 00:09:03,600
when I said with sweating the UI I'm

00:09:00,540 --> 00:09:07,860
taking the remain a mobile component and

00:09:03,600 --> 00:09:10,970
I'm changing the main web component and

00:09:07,860 --> 00:09:14,130
I'm going to tell it that it's connected

00:09:10,970 --> 00:09:17,490
see if it's changed now it's connecting

00:09:14,130 --> 00:09:21,780
exactly but that's not all we need to

00:09:17,490 --> 00:09:24,690
make this look more like this so the

00:09:21,780 --> 00:09:28,710
first thing we're going to do is put the

00:09:24,690 --> 00:09:34,890
logo here but before that we're going to

00:09:28,710 --> 00:09:37,830
do some more complicated things this is

00:09:34,890 --> 00:09:40,500
all Redux if anyone doesn't know what

00:09:37,830 --> 00:09:42,480
relaxes or what I'm doing here just come

00:09:40,500 --> 00:09:44,970
to the react corner and I'll explain it

00:09:42,480 --> 00:09:47,400
to you but what I'm basically doing is

00:09:44,970 --> 00:09:49,730
just copy pasting from the web to the

00:09:47,400 --> 00:09:49,730
mobile

00:09:52,140 --> 00:10:00,160
and like I said we want to get the image

00:09:57,250 --> 00:10:02,020
so I'm just putting the image in our

00:10:00,160 --> 00:10:03,940
mobile app and I'm going to close the

00:10:02,020 --> 00:10:08,050
web part we want to use it anymore we

00:10:03,940 --> 00:10:10,870
copy pasted everything we could and

00:10:08,050 --> 00:10:14,790
instead of IMG is going to be image

00:10:10,870 --> 00:10:18,130
instead of S or C is going to be source

00:10:14,790 --> 00:10:25,510
yeah big different is great we have the

00:10:18,130 --> 00:10:28,180
logo that's at some background color and

00:10:25,510 --> 00:10:32,230
it looks more like the web app now we

00:10:28,180 --> 00:10:34,840
need to add the button and we can do it

00:10:32,230 --> 00:10:37,930
with component it's called touchable

00:10:34,840 --> 00:10:42,670
opacity and the main idea behind this

00:10:37,930 --> 00:10:46,030
component is redux reactive doesn't know

00:10:42,670 --> 00:10:47,830
that you can press on any component so

00:10:46,030 --> 00:10:50,590
you wrap it with touchable opacity and

00:10:47,830 --> 00:10:52,900
then we in turn react native says

00:10:50,590 --> 00:10:55,900
alright you are you can press here I'm

00:10:52,900 --> 00:10:58,480
going to say edge talks and here on

00:10:55,900 --> 00:11:00,940
press by the way in react native it's on

00:10:58,480 --> 00:11:02,890
press it's not on click I always forget

00:11:00,940 --> 00:11:06,190
and I don't understand why things don't

00:11:02,890 --> 00:11:09,190
work so we're saying when we pressing

00:11:06,190 --> 00:11:15,190
the button fat detox and we're going to

00:11:09,190 --> 00:11:19,150
add a little styling for the title and

00:11:15,190 --> 00:11:21,430
for the button I'm going to say we're

00:11:19,150 --> 00:11:23,140
going to make it very ugly so we could

00:11:21,430 --> 00:11:32,410
make it better

00:11:23,140 --> 00:11:37,960
border with of to border color of an

00:11:32,410 --> 00:11:42,280
ugly color red all right wait

00:11:37,960 --> 00:11:45,880
I expected you to share it and now we

00:11:42,280 --> 00:11:50,130
have an ugly button and when we press on

00:11:45,880 --> 00:11:50,130
it we expect the Fed talks to dispatch

00:11:50,160 --> 00:11:53,740
did it work we don't know because we

00:11:52,420 --> 00:11:55,930
don't have anything in our UI

00:11:53,740 --> 00:11:57,880
representing detox so the next thing

00:11:55,930 --> 00:12:02,440
we're going to do is going to say if we

00:11:57,880 --> 00:12:08,730
have talks show me a text saying telling

00:12:02,440 --> 00:12:08,730
me how much talks we have we have talks

00:12:11,010 --> 00:12:15,100
so what let's take now to happen is when

00:12:13,420 --> 00:12:16,750
I practice button it's going to be a

00:12:15,100 --> 00:12:19,630
text here saying how much talks we have

00:12:16,750 --> 00:12:25,300
and let's add some styling for it

00:12:19,630 --> 00:12:27,970
because we don't see it great let's make

00:12:25,300 --> 00:12:30,370
it more interesting let's say if we have

00:12:27,970 --> 00:12:32,800
the talks show us how many talks we have

00:12:30,370 --> 00:12:34,750
and if we don't have them show us the

00:12:32,800 --> 00:12:36,400
button because there's no logic to show

00:12:34,750 --> 00:12:40,330
the button for fetching talks when we

00:12:36,400 --> 00:12:42,610
already have that great but to make it

00:12:40,330 --> 00:12:45,700
look more like the web app we want to

00:12:42,610 --> 00:12:47,770
show a list so let's do this instead of

00:12:45,700 --> 00:12:48,670
the text we're going to use the scroll

00:12:47,770 --> 00:12:51,000
view component

00:12:48,670 --> 00:12:55,870
it also comes from react native and

00:12:51,000 --> 00:12:57,250
we're gonna we're going to map over the

00:12:55,870 --> 00:13:00,870
talks we're going to take each talk

00:12:57,250 --> 00:13:05,650
talks map and we're going to show

00:13:00,870 --> 00:13:11,530
component with the talks title talk

00:13:05,650 --> 00:13:16,380
title and let's say the color is going

00:13:11,530 --> 00:13:16,380
to be white

00:13:17,920 --> 00:13:23,980
what's gonna happen now is when I put

00:13:19,269 --> 00:13:25,660
the button instead of this 16 stalks by

00:13:23,980 --> 00:13:28,300
the way this is not true this is not 16

00:13:25,660 --> 00:13:36,209
stalks because it's also coffee and you

00:13:28,300 --> 00:13:39,820
need to lunch and we don't see it hmm

00:13:36,209 --> 00:13:41,230
yeah right thank you when I was

00:13:39,820 --> 00:13:42,670
preparing for this I did the same

00:13:41,230 --> 00:13:46,680
mistake and I was like I am NOT going to

00:13:42,670 --> 00:13:49,209
do but it says that you pay attention

00:13:46,680 --> 00:13:51,430
now we have the list of stocks it looks

00:13:49,209 --> 00:13:54,190
ugly and we're going to make it better

00:13:51,430 --> 00:13:57,699
but we still don't have the selection of

00:13:54,190 --> 00:14:00,610
the stalks so like here when we press on

00:13:57,699 --> 00:14:03,130
Paul is getting selected and happy we

00:14:00,610 --> 00:14:07,300
want this to happen here also what

00:14:03,130 --> 00:14:10,870
you're going to do is take each of the

00:14:07,300 --> 00:14:16,570
titles and again use the touchable

00:14:10,870 --> 00:14:20,250
opacity component we're going to say

00:14:16,570 --> 00:14:24,790
when you press on it on a title a

00:14:20,250 --> 00:14:27,010
dispatching action select talk that's

00:14:24,790 --> 00:14:32,890
going to put the selected talk in the

00:14:27,010 --> 00:14:34,720
state I'm going to say here if a talk is

00:14:32,890 --> 00:14:41,860
selected if the current talk is the

00:14:34,720 --> 00:14:47,260
selected one make it red color and if

00:14:41,860 --> 00:14:51,430
it's not make it white that's all it

00:14:47,260 --> 00:14:54,519
works any dot and we're done here

00:14:51,430 --> 00:14:57,730
because all of the functionality of our

00:14:54,519 --> 00:15:01,600
web application is already there the

00:14:57,730 --> 00:15:07,690
only difference is that it's ugly so I'm

00:15:01,600 --> 00:15:09,579
just going to remove all of this and use

00:15:07,690 --> 00:15:12,149
two components that I prepared

00:15:09,579 --> 00:15:12,149
beforehand

00:15:16,180 --> 00:15:24,110
and we're gonna say the button success

00:15:21,139 --> 00:15:27,970
veg talks and on press like we did

00:15:24,110 --> 00:15:32,809
before on press it can affect the tops

00:15:27,970 --> 00:15:35,059
and the same goes for the talks list

00:15:32,809 --> 00:15:37,399
we're going to give it the list of the

00:15:35,059 --> 00:15:44,540
talks the currently selected talk and we

00:15:37,399 --> 00:16:02,179
select talk action now pay attention is

00:15:44,540 --> 00:16:06,619
very beautiful and just let's check that

00:16:02,179 --> 00:16:11,480
poll checked and selected here yeah yeah

00:16:06,619 --> 00:16:14,600
and just one example why is it important

00:16:11,480 --> 00:16:16,459
to use the same logic for both apps I'm

00:16:14,600 --> 00:16:19,309
gonna this is the native app and I'm

00:16:16,459 --> 00:16:21,259
going to open also the web app and if

00:16:19,309 --> 00:16:25,129
you remember I copy pasted everything

00:16:21,259 --> 00:16:28,040
from here choose a native and if you can

00:16:25,129 --> 00:16:30,800
see you can see we were using selectors

00:16:28,040 --> 00:16:32,689
here again this is a bit complicated and

00:16:30,800 --> 00:16:35,120
if you want to explain to in the corner

00:16:32,689 --> 00:16:37,490
but the selectors are very simple

00:16:35,120 --> 00:16:39,170
functions that get the state and return

00:16:37,490 --> 00:16:43,040
you anything that you want from the

00:16:39,170 --> 00:16:45,470
state and let's say that our API is

00:16:43,040 --> 00:16:48,470
changing this is the response we get

00:16:45,470 --> 00:16:50,209
from the server and instead of days they

00:16:48,470 --> 00:16:53,620
changed it to with send instead of

00:16:50,209 --> 00:16:57,620
events they change it to talks and

00:16:53,620 --> 00:16:59,509
what's going to happen now is it's not

00:16:57,620 --> 00:17:03,079
going to work because the API has

00:16:59,509 --> 00:17:05,870
changed the at mobile doesn't work and

00:17:03,079 --> 00:17:08,360
the web where we are doesn't work how do

00:17:05,870 --> 00:17:10,429
we fix it because we're using the same

00:17:08,360 --> 00:17:13,159
logic in the both apps and we're using

00:17:10,429 --> 00:17:14,929
the selectors all we need to do is go to

00:17:13,159 --> 00:17:17,480
the selector and like we said days

00:17:14,929 --> 00:17:19,720
change to weeks and events change to

00:17:17,480 --> 00:17:19,720
talks

00:17:21,740 --> 00:17:29,460
the web app works and we fixed also the

00:17:25,890 --> 00:17:32,420
mobile app we fixed three platforms in

00:17:29,460 --> 00:17:38,730
one line of code

00:17:32,420 --> 00:17:42,870
so my last and main point is after poles

00:17:38,730 --> 00:17:45,870
happy we have different UIs for three

00:17:42,870 --> 00:17:49,820
platforms of for Windows Phone I don't

00:17:45,870 --> 00:17:53,610
know for Android for iOS and for the web

00:17:49,820 --> 00:17:57,150
they fit in one repo and they share the

00:17:53,610 --> 00:18:01,830
same logic and if you want to see the

00:17:57,150 --> 00:18:03,770
code it's in my github and if you want

00:18:01,830 --> 00:18:05,390
to talk to me I don't really use Twitter

00:18:03,770 --> 00:18:15,120
so whatever

00:18:05,390 --> 00:18:16,500
tweet me yeah I'm done here we can do

00:18:15,120 --> 00:18:19,520
the question

00:18:16,500 --> 00:18:26,329
[Applause]

00:18:19,520 --> 00:18:26,329
[Music]

00:18:26,840 --> 00:18:32,940
are there any specific disadvantages of

00:18:30,210 --> 00:18:37,230
having both native and web in the same

00:18:32,940 --> 00:18:42,510
old ways we only faint the advantages

00:18:37,230 --> 00:18:46,410
and that's why we did it I can't really

00:18:42,510 --> 00:18:49,110
think of any because it's you just said

00:18:46,410 --> 00:18:51,660
the logic your UI do whatever you want

00:18:49,110 --> 00:18:56,090
with your write your UI and if you have

00:18:51,660 --> 00:18:58,950
two three apps Android iOS and web app

00:18:56,090 --> 00:19:01,320
that show you the same thing just in

00:18:58,950 --> 00:19:02,730
different ways if the logic changes in

00:19:01,320 --> 00:19:05,820
the web it's going to change in the

00:19:02,730 --> 00:19:09,750
mobile also so I can't really think of

00:19:05,820 --> 00:19:13,370
any decent Vantage's how do you handle

00:19:09,750 --> 00:19:15,630
transitions between states animations

00:19:13,370 --> 00:19:16,800
this is different those are different

00:19:15,630 --> 00:19:19,970
things but I'm going to talk about

00:19:16,800 --> 00:19:23,670
animations because I very like this

00:19:19,970 --> 00:19:28,950
topic and you know the button I spent a

00:19:23,670 --> 00:19:32,250
lot of time on it this one the

00:19:28,950 --> 00:19:36,600
animations in react native they take a

00:19:32,250 --> 00:19:40,980
lot of boilerplate to work and I made a

00:19:36,600 --> 00:19:47,220
tool it I just use it for myself I don't

00:19:40,980 --> 00:19:50,640
really advertise it and what it

00:19:47,220 --> 00:19:52,110
basically does we are now in the button

00:19:50,640 --> 00:19:55,080
component the one that does the

00:19:52,110 --> 00:19:59,190
animation I get the reference for form a

00:19:55,080 --> 00:20:00,540
button and I can say this button this is

00:19:59,190 --> 00:20:04,080
a reference for the component like in

00:20:00,540 --> 00:20:11,700
react and it's going to say rotate 300

00:20:04,080 --> 00:20:15,080
degrees and start yeah we can change the

00:20:11,700 --> 00:20:22,410
color to anything that's border color of

00:20:15,080 --> 00:20:30,980
red and you can wait for like one second

00:20:22,410 --> 00:20:30,980
and you can border radius of 100

00:20:31,450 --> 00:20:40,580
and it worked it did so the animations

00:20:37,070 --> 00:20:43,279
in the animations in react native they

00:20:40,580 --> 00:20:46,130
take a lot of boilerplate to to do this

00:20:43,279 --> 00:20:48,799
with react native with the regular

00:20:46,130 --> 00:20:53,450
animated module you'll get from react

00:20:48,799 --> 00:20:57,200
native it could take like 4050 lines of

00:20:53,450 --> 00:20:57,980
code but I just did this so it makes my

00:20:57,200 --> 00:21:03,500
life easier

00:20:57,980 --> 00:21:08,659
so yeah how do you handle routing in

00:21:03,500 --> 00:21:10,610
both web and mobile in web this is a

00:21:08,659 --> 00:21:13,190
mobile topic so in web it's like you

00:21:10,610 --> 00:21:15,470
know react router and in mobile this is

00:21:13,190 --> 00:21:18,919
very different this is react native

00:21:15,470 --> 00:21:22,970
router yeah

00:21:18,919 --> 00:21:25,490
and they behave exactly the same

00:21:22,970 --> 00:21:28,970
you have many libraries from third

00:21:25,490 --> 00:21:31,490
parties like you have react native

00:21:28,970 --> 00:21:34,279
navigation I think from weeks there

00:21:31,490 --> 00:21:35,809
there are many possibilities for for

00:21:34,279 --> 00:21:40,639
this but they are the same just like in

00:21:35,809 --> 00:21:45,470
the web iOS API usage possible yes and

00:21:40,639 --> 00:21:48,409
not only that like in this app I needed

00:21:45,470 --> 00:21:51,350
something from from Android and I just

00:21:48,409 --> 00:21:54,700
opened the Java file and I changed it

00:21:51,350 --> 00:21:57,110
and that's it those are the same

00:21:54,700 --> 00:22:00,200
programming languages are almost the

00:21:57,110 --> 00:22:02,870
same just the syntax changes so it's not

00:22:00,200 --> 00:22:05,360
really a problem to go to to javo to

00:22:02,870 --> 00:22:09,740
Swift and to do what you want to do it

00:22:05,360 --> 00:22:12,230
just need to read a bit some days work

00:22:09,740 --> 00:22:15,620
ok why didn't you use pure CSS for the

00:22:12,230 --> 00:22:19,010
animation because I used my utility yeah

00:22:15,620 --> 00:22:23,269
I think it was great easier than CSS

00:22:19,010 --> 00:22:27,400
animation do you do stand-up this is my

00:22:23,269 --> 00:22:29,760
first time speaking to a large crowd so

00:22:27,400 --> 00:22:36,610
[Applause]

00:22:29,760 --> 00:22:39,010
thank you some depth to work with native

00:22:36,610 --> 00:22:41,200
told me it still not they're wrong is

00:22:39,010 --> 00:22:43,179
the performance of the web app

00:22:41,200 --> 00:22:44,980
comparable to the mobile apps on a bed

00:22:43,179 --> 00:22:49,299
net work on all the remote I really

00:22:44,980 --> 00:22:52,960
don't know I'm sorry the performance is

00:22:49,299 --> 00:22:55,120
great on both the web and native like I

00:22:52,960 --> 00:22:58,720
showed you the animation of the mobile

00:22:55,120 --> 00:23:02,730
app we've done it works very great you

00:22:58,720 --> 00:23:02,730
can remove the first one I don't like it

00:23:03,600 --> 00:23:12,279
how does react native compiled to PWA

00:23:06,789 --> 00:23:14,020
what speed everyday I have no idea this

00:23:12,279 --> 00:23:17,200
is a new topic I haven't really touched

00:23:14,020 --> 00:23:19,980
it do you need a different UI for

00:23:17,200 --> 00:23:24,419
Android and iOS like different folders

00:23:19,980 --> 00:23:27,490
you mostly will want to use the same

00:23:24,419 --> 00:23:28,270
components same files for both the iOS

00:23:27,490 --> 00:23:31,000
and Android

00:23:28,270 --> 00:23:33,490
but there are some quirks with Android

00:23:31,000 --> 00:23:35,860
and I really don't like Android I really

00:23:33,490 --> 00:23:39,220
don't like developing for Android with

00:23:35,860 --> 00:23:42,340
react native because it's not 100% ready

00:23:39,220 --> 00:23:44,980
like iOS is and you need to fix some

00:23:42,340 --> 00:23:47,169
stuff specifically for iOS or

00:23:44,980 --> 00:23:49,929
specifically for Android and you got

00:23:47,169 --> 00:23:52,690
this platform module from from react

00:23:49,929 --> 00:23:56,590
native and you can just see what

00:23:52,690 --> 00:24:02,010
platform your own currently and adjust

00:23:56,590 --> 00:24:06,309
your code and you also can do let's see

00:24:02,010 --> 00:24:08,710
you see here it index dot iOS and if you

00:24:06,309 --> 00:24:10,870
make it index that Android it's going to

00:24:08,710 --> 00:24:13,240
run only on Android and the dot iOS is

00:24:10,870 --> 00:24:15,159
going to run only on iOS so don't really

00:24:13,240 --> 00:24:18,399
need different folders but you can use

00:24:15,159 --> 00:24:20,470
different files have you thought of an

00:24:18,399 --> 00:24:21,909
answer the transfers directly are sorry

00:24:20,470 --> 00:24:24,159
you need to understand have you thought

00:24:21,909 --> 00:24:27,730
of an abstract layer that translates

00:24:24,159 --> 00:24:31,600
directly to dome or to mobile like using

00:24:27,730 --> 00:24:33,850
the same UI for web and native is this a

00:24:31,600 --> 00:24:36,750
question yeah the idea I think it's a

00:24:33,850 --> 00:24:39,820
topic that is around in the community is

00:24:36,750 --> 00:24:41,670
there is there already something which

00:24:39,820 --> 00:24:42,900
is done where you have like

00:24:41,670 --> 00:24:44,610
of them higher-order components if you

00:24:42,900 --> 00:24:47,250
want but is still rendering components

00:24:44,610 --> 00:24:48,750
that would behave in the which ones

00:24:47,250 --> 00:24:51,150
attitude own components if they're in

00:24:48,750 --> 00:24:53,520
the browser target or that would that

00:24:51,150 --> 00:24:56,130
would translate into directly native so

00:24:53,520 --> 00:24:57,990
instead of having two types of your wise

00:24:56,130 --> 00:25:00,570
that you'd that you have like web react

00:24:57,990 --> 00:25:04,230
law this new library react web how's it

00:25:00,570 --> 00:25:07,290
called yes yes one I'm not really fond

00:25:04,230 --> 00:25:09,480
of it because the web and mobile apps

00:25:07,290 --> 00:25:11,640
should be different their UI is

00:25:09,480 --> 00:25:13,740
different because you experience

00:25:11,640 --> 00:25:16,500
different this one has a large screen

00:25:13,740 --> 00:25:18,540
you have a mouse and the mobile apps you

00:25:16,500 --> 00:25:22,410
have your fingers and it should look

00:25:18,540 --> 00:25:25,350
different I wouldn't make same UI for

00:25:22,410 --> 00:25:27,810
both this is a question ready but you

00:25:25,350 --> 00:25:29,970
can use same higher-order components on

00:25:27,810 --> 00:25:32,850
both like we've use the provider from

00:25:29,970 --> 00:25:36,890
react redux in our native app and this

00:25:32,850 --> 00:25:41,030
is the same provider from the web react

00:25:36,890 --> 00:25:45,870
can you share styles between native I

00:25:41,030 --> 00:25:48,930
think you can I'm not really if you if

00:25:45,870 --> 00:25:53,600
you look here at our main native

00:25:48,930 --> 00:25:56,190
component this is styling we have

00:25:53,600 --> 00:25:58,830
justify content a line items flags

00:25:56,190 --> 00:26:02,130
everything that we have in the web so

00:25:58,830 --> 00:26:03,900
you can just translate it because in the

00:26:02,130 --> 00:26:07,910
web it's going to be like this I know

00:26:03,900 --> 00:26:07,910
it's very hard to change it but you know

00:26:08,300 --> 00:26:14,880
you learn to work with web and mobile on

00:26:10,740 --> 00:26:16,799
how much time and two days maybe I don't

00:26:14,880 --> 00:26:22,360
know

00:26:16,799 --> 00:26:26,679
and to be very sure of myself with react

00:26:22,360 --> 00:26:28,630
native it took about half a year we made

00:26:26,679 --> 00:26:31,990
a lot of mistakes while making and first

00:26:28,630 --> 00:26:35,440
react native up like I said it's a very

00:26:31,990 --> 00:26:37,360
young framework there's not that much of

00:26:35,440 --> 00:26:39,610
information in the web and you make

00:26:37,360 --> 00:26:41,770
mistakes and you can find an answer and

00:26:39,610 --> 00:26:43,929
then you go to to the android-specific

00:26:41,770 --> 00:26:46,630
files and you change the Java code

00:26:43,929 --> 00:26:49,179
because it don't know how to do it right

00:26:46,630 --> 00:26:51,270
but it takes some even a couple of

00:26:49,179 --> 00:26:53,830
months to get used to it

00:26:51,270 --> 00:26:56,289
what's this phone preview device called

00:26:53,830 --> 00:27:01,690
it it's a MacBook and we just have the

00:26:56,289 --> 00:27:03,090
simulator for for iOS its built-in yeah

00:27:01,690 --> 00:27:03,930
thank you

00:27:03,090 --> 00:27:04,930
[Applause]

00:27:03,930 --> 00:27:10,819
[Music]

00:27:04,930 --> 00:27:10,819

YouTube URL: https://www.youtube.com/watch?v=nbzniZ_4Y1Y


