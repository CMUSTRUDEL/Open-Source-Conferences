Title: JSHeroes 2017 | Filip Bech-Larsen - Frontend development in the (current) future
Publication date: 2017-06-23
Playlist: JSHeroes 2017
Description: 
	Call it a fronted state of the union, call it hot or not in YYYY, call it buzz-word bingo. 
We will talk about how Progressive Web Apps helps the web compete with native apps. How new browser features will transform e-commerce. Whats on the horizon for javascript and for frameworks? and where does typescript fit in? How will Houdini eventually change layout on the web? Whats up with the physical web or what about Internet of Things - and how are those related. Offline, PRPL, Observables, Serviceworker, push-notification, redux, web-APKs, and maybe even moreâ€¦ all packaged up, tree-shaken, server-rendered and served over https!
Captions: 
	00:00:10,970 --> 00:00:17,910
so thanks for having me and what a tough

00:00:14,670 --> 00:00:23,099
act to follow that's good Australia

00:00:17,910 --> 00:00:26,130
video that's gotta be tough well and my

00:00:23,099 --> 00:00:29,699
name is Philip I'm from Denmark as soon

00:00:26,130 --> 00:00:31,380
as Paul said M well yeah I won't say let

00:00:29,699 --> 00:00:33,989
me say anybody think about that I work

00:00:31,380 --> 00:00:37,949
at a company called impact where we do

00:00:33,989 --> 00:00:39,780
e-commerce for large corporations mainly

00:00:37,949 --> 00:00:42,360
Danish the Scandinavian one so you

00:00:39,780 --> 00:00:45,300
probably won't know them but maybe some

00:00:42,360 --> 00:00:47,730
of them and but enough about that

00:00:45,300 --> 00:00:49,530
and last year I was fortunate enough to

00:00:47,730 --> 00:00:51,960
be accepted into Google's developer

00:00:49,530 --> 00:00:53,730
expert program but this talk is not

00:00:51,960 --> 00:00:55,680
really supposed to be about me so I'll

00:00:53,730 --> 00:00:57,660
skip this really quick but just mention

00:00:55,680 --> 00:00:59,010
that I work with with the angular team

00:00:57,660 --> 00:01:00,390
and the polymer team and the chrome team

00:00:59,010 --> 00:01:02,309
and stuff so you have if you have

00:01:00,390 --> 00:01:04,289
feedback come please come talk to me in

00:01:02,309 --> 00:01:07,350
the break and the lots of get feedback

00:01:04,289 --> 00:01:09,330
from from from real developers and I

00:01:07,350 --> 00:01:11,399
also run a local angular user group and

00:01:09,330 --> 00:01:12,600
back in all whoo so if you're if you

00:01:11,399 --> 00:01:14,850
ever want to go to Denmark and if you

00:01:12,600 --> 00:01:17,100
would people want to talk find me on

00:01:14,850 --> 00:01:19,950
Twitter and we love to have foreigners

00:01:17,100 --> 00:01:22,890
come and talk for us as well so that's

00:01:19,950 --> 00:01:24,780
the introduction so so the title of this

00:01:22,890 --> 00:01:27,630
talk is front-end development of the

00:01:24,780 --> 00:01:29,490
future of the current future because as

00:01:27,630 --> 00:01:31,920
you know the it changes all the time so

00:01:29,490 --> 00:01:34,979
this is kind of a how I think it's going

00:01:31,920 --> 00:01:36,810
to be and with what I know today and it

00:01:34,979 --> 00:01:41,759
might change tomorrow but this is just

00:01:36,810 --> 00:01:45,179
my take on it hey did I just do click

00:01:41,759 --> 00:01:47,310
the wrong button yeah okay so this talk

00:01:45,179 --> 00:01:49,619
is about all these things

00:01:47,310 --> 00:01:50,880
I'll talk to somebody last night and I

00:01:49,619 --> 00:01:53,310
was like so my talk is about everything

00:01:50,880 --> 00:01:55,979
that has wept in its name and it's kind

00:01:53,310 --> 00:01:59,700
of new and so I'll introduce a lot of

00:01:55,979 --> 00:02:01,140
new API is and new stuff and there's

00:01:59,700 --> 00:02:03,720
going to be a lot of links in my slides

00:02:01,140 --> 00:02:05,520
so I'll make sure to slow my share my

00:02:03,720 --> 00:02:07,739
slides afterwards so you can find me on

00:02:05,520 --> 00:02:10,920
Twitter or you can I'll post it in the

00:02:07,739 --> 00:02:12,750
slack Channel or something and but

00:02:10,920 --> 00:02:16,730
obviously we start out with web versus

00:02:12,750 --> 00:02:19,349
native you know we've seen this probably

00:02:16,730 --> 00:02:20,939
everywhere you know - so the web is good

00:02:19,349 --> 00:02:22,709
because there's it's only one platform

00:02:20,939 --> 00:02:25,129
is only one language

00:02:22,709 --> 00:02:27,930
there's no App Store's no gatekeepers

00:02:25,129 --> 00:02:30,420
nobody to approve your app or something

00:02:27,930 --> 00:02:33,689
and it's really easy to deploy and we

00:02:30,420 --> 00:02:36,120
have the link so you know we can reflect

00:02:33,689 --> 00:02:38,640
any state of our application into an URL

00:02:36,120 --> 00:02:40,379
and you can share that URL via text

00:02:38,640 --> 00:02:41,969
message or something and somebody else

00:02:40,379 --> 00:02:44,030
can click the same URL and go straight

00:02:41,969 --> 00:02:46,469
into the app where you're at and like

00:02:44,030 --> 00:02:47,639
native apps are still like they're still

00:02:46,469 --> 00:02:49,920
having a really hard time with this

00:02:47,639 --> 00:02:52,500
because it's so hard to come to to

00:02:49,920 --> 00:02:53,700
compete again but then again we like on

00:02:52,500 --> 00:02:55,379
native we have we've had better

00:02:53,700 --> 00:02:58,650
performance we've had more hardware

00:02:55,379 --> 00:03:00,450
access we've been able to do offline you

00:02:58,650 --> 00:03:02,939
know reengagement all this kind of cool

00:03:00,450 --> 00:03:05,069
stuff but the web now has an answer for

00:03:02,939 --> 00:03:07,109
this finally and I guess you've probably

00:03:05,069 --> 00:03:09,000
heard about this before there's a

00:03:07,109 --> 00:03:10,829
mention of it before you know we call it

00:03:09,000 --> 00:03:11,909
progressive web apps and the idea is

00:03:10,829 --> 00:03:13,799
that we want to make apps that are

00:03:11,909 --> 00:03:16,889
reliable that are fast and they're

00:03:13,799 --> 00:03:18,299
engaging and and yeah here's the first

00:03:16,889 --> 00:03:19,950
link that all the links are going to be

00:03:18,299 --> 00:03:23,459
in the bottom of the screen so so it

00:03:19,950 --> 00:03:25,260
won't disturb so really all these things

00:03:23,459 --> 00:03:27,449
are not no longer just for native we can

00:03:25,260 --> 00:03:29,609
do all of these on the web now and and

00:03:27,449 --> 00:03:31,650
an important thing to note is that this

00:03:29,609 --> 00:03:34,049
is not it's not a new framework it's

00:03:31,650 --> 00:03:35,699
more of a philosophy it's more of a way

00:03:34,049 --> 00:03:37,409
to think about things it's it's a

00:03:35,699 --> 00:03:39,060
there's there's no framework here

00:03:37,409 --> 00:03:41,220
there's no library that you have to use

00:03:39,060 --> 00:03:43,590
or have to learn to understand it's just

00:03:41,220 --> 00:03:46,949
a couple of new browser api's and and

00:03:43,590 --> 00:03:48,750
you have superpowers and even though you

00:03:46,949 --> 00:03:50,159
just have regular powers as a developer

00:03:48,750 --> 00:03:54,449
the platform will actually give you

00:03:50,159 --> 00:03:56,150
superpowers yeah so and so yeah the

00:03:54,449 --> 00:03:59,370
first one I mentioned was performance

00:03:56,150 --> 00:04:01,859
well you know the browser and the dom

00:03:59,370 --> 00:04:03,810
has has a pretty bad reputation like

00:04:01,859 --> 00:04:06,269
everybody's been saying the DOM is slow

00:04:03,810 --> 00:04:08,430
and browsers are slow but it's it

00:04:06,269 --> 00:04:11,340
they're really not like if if if you if

00:04:08,430 --> 00:04:13,470
you know how to do it if you know what

00:04:11,340 --> 00:04:15,689
parts to animate or what part how to

00:04:13,470 --> 00:04:17,430
make your JavaScript or what parts of

00:04:15,689 --> 00:04:20,609
JavaScript not to use you can actually

00:04:17,430 --> 00:04:22,860
make really performing web apps and so

00:04:20,609 --> 00:04:25,409
last year or the year before that I

00:04:22,860 --> 00:04:27,419
think Google kind of released this idea

00:04:25,409 --> 00:04:29,400
of rail for performance where you think

00:04:27,419 --> 00:04:32,070
about response animation idle and load

00:04:29,400 --> 00:04:33,690
and so it's a really good way to think

00:04:32,070 --> 00:04:35,969
of your animation or of your of your

00:04:33,690 --> 00:04:36,590
performance so make sure that you

00:04:35,969 --> 00:04:39,590
respond

00:04:36,590 --> 00:04:42,270
interactions within a really short time

00:04:39,590 --> 00:04:43,980
make sure your animations run with 60fps

00:04:42,270 --> 00:04:45,450
and there's like if you click the link

00:04:43,980 --> 00:04:48,450
there so a lot of good articles they'll

00:04:45,450 --> 00:04:51,090
help you do this and and another thing

00:04:48,450 --> 00:04:53,670
that was launched last year was for the

00:04:51,090 --> 00:04:56,340
purple pattern I think it was it came

00:04:53,670 --> 00:04:59,220
out of the polymer community where it's

00:04:56,340 --> 00:05:00,840
like a so you should push all your

00:04:59,220 --> 00:05:04,620
critical resources down maybe you can

00:05:00,840 --> 00:05:06,540
use HTTP push or or you can just you

00:05:04,620 --> 00:05:08,430
know put it put it in put little put

00:05:06,540 --> 00:05:09,660
your styles in line or do something so

00:05:08,430 --> 00:05:11,880
you can actually get something on the

00:05:09,660 --> 00:05:14,250
screen really fast and you should render

00:05:11,880 --> 00:05:17,280
the initial route on the server and you

00:05:14,250 --> 00:05:19,200
should only do pre cache or and preload

00:05:17,280 --> 00:05:20,940
everything is it like when the first

00:05:19,200 --> 00:05:22,620
load window when the first route has

00:05:20,940 --> 00:05:25,410
loaded so you can you can get a really

00:05:22,620 --> 00:05:27,090
quick first load and you should lazy

00:05:25,410 --> 00:05:28,740
load all the rest of it so again there's

00:05:27,090 --> 00:05:32,310
a link go read more about that if you

00:05:28,740 --> 00:05:34,890
want and then there's hardware access so

00:05:32,310 --> 00:05:37,320
hardware access used to be a native only

00:05:34,890 --> 00:05:39,720
thing now all these KPIs are available

00:05:37,320 --> 00:05:41,370
in the browser and so we can do camera

00:05:39,720 --> 00:05:44,310
detection we can even do face detection

00:05:41,370 --> 00:05:46,520
and shape detection we can do QR QR code

00:05:44,310 --> 00:05:49,320
scanning you can do all that with native

00:05:46,520 --> 00:05:52,700
JavaScript and we can do you know

00:05:49,320 --> 00:05:55,560
fullscreen Web Audio WebGL web Bluetooth

00:05:52,700 --> 00:05:57,480
VR do location all of these are

00:05:55,560 --> 00:06:00,810
available today in there in modern

00:05:57,480 --> 00:06:03,870
browsers and and I think we we kind of

00:06:00,810 --> 00:06:06,030
closed that gap as well and the last

00:06:03,870 --> 00:06:07,980
thing is typically what we talk about

00:06:06,030 --> 00:06:10,320
when we talk about progressive web apps

00:06:07,980 --> 00:06:12,300
offline and reengagement

00:06:10,320 --> 00:06:15,090
and I thought I'd just spend just a

00:06:12,300 --> 00:06:17,130
little bit of time about it and so it's

00:06:15,090 --> 00:06:19,500
the idea is that there is a

00:06:17,130 --> 00:06:21,390
serviceworker the serviceworker is kind

00:06:19,500 --> 00:06:22,890
of like a regular JavaScript worker

00:06:21,390 --> 00:06:25,260
which means it runs on a different

00:06:22,890 --> 00:06:27,870
thread and it's it's not it doesn't mess

00:06:25,260 --> 00:06:31,230
with the UI thread but the difference is

00:06:27,870 --> 00:06:34,800
that it's a there's only one per host so

00:06:31,230 --> 00:06:36,420
if so like even if you have multiple

00:06:34,800 --> 00:06:38,630
windows open with the same page in it

00:06:36,420 --> 00:06:41,790
there's still just one serviceworker

00:06:38,630 --> 00:06:44,010
a-and it were and it lives beyond the

00:06:41,790 --> 00:06:45,870
session which means even after you close

00:06:44,010 --> 00:06:48,540
the browser the serviceworker will still

00:06:45,870 --> 00:06:49,950
be will still be running and you and

00:06:48,540 --> 00:06:51,870
that means

00:06:49,950 --> 00:06:53,610
from your server you can probably send a

00:06:51,870 --> 00:06:55,500
push message and the service worker will

00:06:53,610 --> 00:06:57,930
will wake up receive the push message

00:06:55,500 --> 00:06:59,700
and then you as a programmer can can say

00:06:57,930 --> 00:07:02,040
decide what should happen now should we

00:06:59,700 --> 00:07:03,690
show notification or should just get

00:07:02,040 --> 00:07:07,410
data in the background or should we do

00:07:03,690 --> 00:07:10,500
whatever and yeah it gives you a

00:07:07,410 --> 00:07:14,340
persisting programmable cache so like if

00:07:10,500 --> 00:07:16,260
you've been doing cache stuff you know

00:07:14,340 --> 00:07:18,900
caching is really hard it would they CTP

00:07:16,260 --> 00:07:21,780
so what does it mean if there's a if

00:07:18,900 --> 00:07:23,340
there's a no cache header and an expires

00:07:21,780 --> 00:07:25,620
at date

00:07:23,340 --> 00:07:30,270
does anybody know which one takes and if

00:07:25,620 --> 00:07:31,620
we really don't know and so the part of

00:07:30,270 --> 00:07:33,240
serviceworker is that it gives you a

00:07:31,620 --> 00:07:36,590
programmable cache so you can actually

00:07:33,240 --> 00:07:38,880
say so store this URL storied you can

00:07:36,590 --> 00:07:40,620
and you can interact with it so it's

00:07:38,880 --> 00:07:43,110
it's based around events and promises

00:07:40,620 --> 00:07:44,400
and I thought I'd put some some some

00:07:43,110 --> 00:07:48,900
code in as well so we can we can

00:07:44,400 --> 00:07:50,580
actually just see with it a so I won't

00:07:48,900 --> 00:07:53,010
go too much into this just showing you

00:07:50,580 --> 00:07:56,190
that it's very event based so you can

00:07:53,010 --> 00:07:58,950
just listen for a fetch event so what we

00:07:56,190 --> 00:08:01,410
do here is say so every time the website

00:07:58,950 --> 00:08:03,540
that has my service worker on it every

00:08:01,410 --> 00:08:05,970
time it does an HTTP request so every

00:08:03,540 --> 00:08:07,590
time there's a fetch event before it

00:08:05,970 --> 00:08:10,470
actually goes off to the server my

00:08:07,590 --> 00:08:12,390
serviceworker wakes up and it can choose

00:08:10,470 --> 00:08:15,120
to respond to it so in this example here

00:08:12,390 --> 00:08:16,770
I'm opening the cache and seeing if

00:08:15,120 --> 00:08:18,180
there is a rip if there's already

00:08:16,770 --> 00:08:20,190
imagine the cache will just serve that

00:08:18,180 --> 00:08:22,020
and if not will just fall back to

00:08:20,190 --> 00:08:23,960
actually fetching it on the server so

00:08:22,020 --> 00:08:26,420
this is a really you know eight line

00:08:23,960 --> 00:08:28,800
JavaScript code to actually have a

00:08:26,420 --> 00:08:31,590
offline support for your application so

00:08:28,800 --> 00:08:33,090
it's so easy to get to get started with

00:08:31,590 --> 00:08:34,770
this and obviously there's a lot of

00:08:33,090 --> 00:08:36,840
frameworks built on top of this if you

00:08:34,770 --> 00:08:37,890
want to you see there's a link down here

00:08:36,840 --> 00:08:41,790
to something called serviceworker

00:08:37,890 --> 00:08:44,220
toolbox where you can get you know

00:08:41,790 --> 00:08:46,350
express like syntax where you can say so

00:08:44,220 --> 00:08:48,000
all routes that match this pattern

00:08:46,350 --> 00:08:50,640
should be cached with this strategy

00:08:48,000 --> 00:08:52,380
where you ask the server first but if it

00:08:50,640 --> 00:08:54,390
doesn't respond we respond with from the

00:08:52,380 --> 00:08:56,490
server or from their cache or eat like

00:08:54,390 --> 00:09:00,780
you can do multiple strategies based on

00:08:56,490 --> 00:09:03,090
the routes and yeah I put some more code

00:09:00,780 --> 00:09:03,720
in here just so you can see it when you

00:09:03,090 --> 00:09:05,639
when you're actually

00:09:03,720 --> 00:09:07,889
look at my slides but you can do this is

00:09:05,639 --> 00:09:09,300
how you listen for push events or no

00:09:07,889 --> 00:09:11,160
this is how you listen for sync events

00:09:09,300 --> 00:09:13,980
where you can say do this the next time

00:09:11,160 --> 00:09:16,620
your your online so if you're if you're

00:09:13,980 --> 00:09:18,449
using this app offline you can register

00:09:16,620 --> 00:09:21,329
for a sync event and then the next time

00:09:18,449 --> 00:09:23,370
the browser is online this will actually

00:09:21,329 --> 00:09:25,009
happen even if even after you close the

00:09:23,370 --> 00:09:27,420
web site so imagine you're doing a

00:09:25,009 --> 00:09:29,819
chatting service or an email service and

00:09:27,420 --> 00:09:31,529
somebody's writing a response and then

00:09:29,819 --> 00:09:33,959
they're in the inside of the tunnel and

00:09:31,529 --> 00:09:35,910
they press send so now with this we can

00:09:33,959 --> 00:09:37,410
just register for a sync event and then

00:09:35,910 --> 00:09:39,600
when you're out of the tunnel again the

00:09:37,410 --> 00:09:41,129
web app will wake up and send it in the

00:09:39,600 --> 00:09:44,699
background you don't have to notice it

00:09:41,129 --> 00:09:46,170
so it's super cool new features hey-ya

00:09:44,699 --> 00:09:49,560
listening for push events showing

00:09:46,170 --> 00:09:51,089
notifications and listening for whenever

00:09:49,560 --> 00:09:53,639
people actually interact with the

00:09:51,089 --> 00:09:55,350
notification so if they click so I want

00:09:53,639 --> 00:09:56,730
to buy this thing straight from the

00:09:55,350 --> 00:09:58,740
notification you don't even have to open

00:09:56,730 --> 00:10:01,740
the website you can just respond to it

00:09:58,740 --> 00:10:02,939
with the with with it with an event you

00:10:01,740 --> 00:10:06,540
know send it to the server or whatever

00:10:02,939 --> 00:10:08,879
you want to do progressive web apps are

00:10:06,540 --> 00:10:10,410
installed which means you can add them

00:10:08,879 --> 00:10:12,029
to the home screen you can get a real

00:10:10,410 --> 00:10:13,800
nice icon you can get a splash screen

00:10:12,029 --> 00:10:15,809
while you but you are you're loading it

00:10:13,800 --> 00:10:17,189
you can actually load it in full screen

00:10:15,809 --> 00:10:21,180
so you don't have to all the browser

00:10:17,189 --> 00:10:23,279
Chrome takes up your space and if you're

00:10:21,180 --> 00:10:25,860
on Android we can actually do even

00:10:23,279 --> 00:10:28,050
better so if if you're on the newest

00:10:25,860 --> 00:10:31,019
version of Android with current version

00:10:28,050 --> 00:10:32,850
of Chrome I think and you install a PWA

00:10:31,019 --> 00:10:34,949
or progressive web app onto your

00:10:32,850 --> 00:10:36,959
interior device it's no longer called

00:10:34,949 --> 00:10:39,329
Add to Home screen it's called install

00:10:36,959 --> 00:10:41,579
because it's actually Leslie take your

00:10:39,329 --> 00:10:44,189
application and rabbit in an in an in an

00:10:41,579 --> 00:10:46,559
apk which is the Android paging format

00:10:44,189 --> 00:10:49,620
and and that means they'll actually show

00:10:46,559 --> 00:10:51,899
up like a regular angular Android

00:10:49,620 --> 00:10:53,759
application so it will show you how much

00:10:51,899 --> 00:10:56,279
memory it takes how much battery it's

00:10:53,759 --> 00:10:57,629
been taking what services it has been

00:10:56,279 --> 00:10:59,009
using in the background and all the

00:10:57,629 --> 00:11:01,860
stuff that you're used to from native

00:10:59,009 --> 00:11:03,990
apps you have that in them and web apps

00:11:01,860 --> 00:11:06,449
now as well so it's pretty cool and I

00:11:03,990 --> 00:11:08,610
think I think we'll see a trend where in

00:11:06,449 --> 00:11:09,899
the future probably end users won't even

00:11:08,610 --> 00:11:11,759
know the difference between what's a web

00:11:09,899 --> 00:11:12,600
app and what's the native that so well

00:11:11,759 --> 00:11:14,970
at least that's my guess

00:11:12,600 --> 00:11:16,500
so if you want to like this was

00:11:14,970 --> 00:11:17,279
mentioned a little earlier where they

00:11:16,500 --> 00:11:19,019
said if you want

00:11:17,279 --> 00:11:20,490
we really want to get really down you

00:11:19,019 --> 00:11:22,439
should just check any of your websites

00:11:20,490 --> 00:11:24,180
with a lightbox emulator and I agree

00:11:22,439 --> 00:11:26,610
it's really hard to get a perfect score

00:11:24,180 --> 00:11:28,889
and you don't necessarily have to aim

00:11:26,610 --> 00:11:31,350
for a perfect score but it is a good

00:11:28,889 --> 00:11:33,749
tool it gives you a lot of a lot of

00:11:31,350 --> 00:11:36,149
ideas on what to work on next

00:11:33,749 --> 00:11:37,709
it's a browser extension - and it's

00:11:36,149 --> 00:11:40,529
actually going to eventually be built

00:11:37,709 --> 00:11:42,569
into dev tools in Chrome so you can do

00:11:40,529 --> 00:11:43,980
it's going to be the audits panel

00:11:42,569 --> 00:11:46,319
what's the audits panel now is going to

00:11:43,980 --> 00:11:47,939
be lighthouse and it'll check to see if

00:11:46,319 --> 00:11:50,370
it works offline will check to see if it

00:11:47,939 --> 00:11:53,819
does you know all the stuff that you

00:11:50,370 --> 00:11:57,749
should load faster be is secure and all

00:11:53,819 --> 00:11:59,730
that stuff and yeah so I build the demo

00:11:57,749 --> 00:12:00,839
of it just to just because I thought it

00:11:59,730 --> 00:12:02,670
would be fun to see if I can get a

00:12:00,839 --> 00:12:05,279
hundred on there on the score so I build

00:12:02,670 --> 00:12:07,139
a snake game which is you can control it

00:12:05,279 --> 00:12:10,110
with your keyboard arrow you can control

00:12:07,139 --> 00:12:11,490
it with sliding and it's kind of fun it

00:12:10,110 --> 00:12:13,139
does nothing like if you want to build a

00:12:11,490 --> 00:12:15,959
high score please do and it's an open

00:12:13,139 --> 00:12:17,490
source project so it's always fun yeah

00:12:15,959 --> 00:12:19,769
but it's called progressive snake and

00:12:17,490 --> 00:12:21,149
it's actually pretty close to hundred it

00:12:19,769 --> 00:12:22,459
was 100 when they started I'm not sure

00:12:21,149 --> 00:12:26,430
if it anymore because you know the

00:12:22,459 --> 00:12:29,339
requirements always to change and last

00:12:26,430 --> 00:12:31,170
week somebody built a fidgets spinner I

00:12:29,339 --> 00:12:33,300
think was Sam saucony from Google and

00:12:31,170 --> 00:12:35,519
just to just like you can actually have

00:12:33,300 --> 00:12:37,680
things that perform really well and it

00:12:35,519 --> 00:12:40,410
does a little bit complex UI and it's

00:12:37,680 --> 00:12:41,790
actually kind of fun to play with so go

00:12:40,410 --> 00:12:48,089
ahead and try that as well featured spin

00:12:41,790 --> 00:12:50,279
dot X Y C so now that we said super

00:12:48,089 --> 00:12:51,230
powers with great power comes great

00:12:50,279 --> 00:12:54,420
responsibility

00:12:51,230 --> 00:12:57,870
you know so we all that these features

00:12:54,420 --> 00:13:00,120
are only available on HTTP because like

00:12:57,870 --> 00:13:01,889
when you can register stuff that lives

00:13:00,120 --> 00:13:03,870
in the background or if you can do stuff

00:13:01,889 --> 00:13:05,459
that's really really powerful you want

00:13:03,870 --> 00:13:07,410
to protect yourself against demand the

00:13:05,459 --> 00:13:11,069
middle attacks and all the on the all

00:13:07,410 --> 00:13:13,019
the worst attacks so they all you have

00:13:11,069 --> 00:13:13,910
to use HTTP it's it's pretty easy now

00:13:13,019 --> 00:13:15,929
with let's encrypt

00:13:13,910 --> 00:13:18,389
if you don't know what that is come

00:13:15,929 --> 00:13:20,189
check it out or come talk to me and it

00:13:18,389 --> 00:13:20,850
can work on localhost though so if you

00:13:20,189 --> 00:13:24,839
don't you don't need to have

00:13:20,850 --> 00:13:28,410
certificates for developing it and and

00:13:24,839 --> 00:13:31,080
talking about HTTP so eventually we want

00:13:28,410 --> 00:13:34,320
to do it so chrome shows and not secure

00:13:31,080 --> 00:13:37,170
Banna right next to the URL when when

00:13:34,320 --> 00:13:38,790
you're when you're not on HTTPS but but

00:13:37,170 --> 00:13:40,440
for now we don't want like because

00:13:38,790 --> 00:13:43,500
there's still so many sites not using

00:13:40,440 --> 00:13:45,900
HTTPS for now we in January we changed

00:13:43,500 --> 00:13:48,360
it so if there is a password field or a

00:13:45,900 --> 00:13:50,460
credit card field on a page and it's not

00:13:48,360 --> 00:13:53,660
on HTTPS will show a warning it's not

00:13:50,460 --> 00:13:56,850
still not yet read but it's going to be

00:13:53,660 --> 00:14:00,180
later and eventually it'll be for all

00:13:56,850 --> 00:14:01,620
pages when there are not an HTTPS and so

00:14:00,180 --> 00:14:04,470
but beware it's like if you're using

00:14:01,620 --> 00:14:06,960
anything that's not on HTTPS transition

00:14:04,470 --> 00:14:08,940
it should be relatively easy and it's a

00:14:06,960 --> 00:14:13,890
and it's a it's a huge win and you owe

00:14:08,940 --> 00:14:15,900
it to your users yep HTTP - I don't want

00:14:13,890 --> 00:14:18,060
to say too much about this but it gives

00:14:15,900 --> 00:14:21,990
a lot of new powers to you where you can

00:14:18,060 --> 00:14:23,970
actually do multiplex so you can do

00:14:21,990 --> 00:14:26,910
parallel requests and and all the same

00:14:23,970 --> 00:14:28,980
from just one connection yeah

00:14:26,910 --> 00:14:32,400
I'm sure in time so I'm moving really

00:14:28,980 --> 00:14:35,370
fast and so javascript ekam script is

00:14:32,400 --> 00:14:37,680
obviously the standard and there's a lot

00:14:35,370 --> 00:14:40,710
of new stuff going on like we we've all

00:14:37,680 --> 00:14:42,540
seen probably Agron script six or year

00:14:40,710 --> 00:14:44,340
six where there's a lot of new features

00:14:42,540 --> 00:14:45,840
and I I did this on purpose where the

00:14:44,340 --> 00:14:49,010
last line is cut in half because there's

00:14:45,840 --> 00:14:54,000
so many more features in musics and and

00:14:49,010 --> 00:14:56,520
like but in six took like eight years or

00:14:54,000 --> 00:14:57,900
something to actually land and we didn't

00:14:56,520 --> 00:14:59,910
want to have continued with that so

00:14:57,900 --> 00:15:02,130
going on it's going to be a new version

00:14:59,910 --> 00:15:05,700
of Eggman script standard every year so

00:15:02,130 --> 00:15:07,530
he is 2016 has only two features and

00:15:05,700 --> 00:15:09,300
they're kind of small so there's an

00:15:07,530 --> 00:15:10,860
includes operator on it on the array and

00:15:09,300 --> 00:15:13,770
you can do an exponential operator so

00:15:10,860 --> 00:15:18,390
you can do two in the power of two a

00:15:13,770 --> 00:15:20,520
little easier and 2017 well it's

00:15:18,390 --> 00:15:22,740
obviously not done yet but it looks like

00:15:20,520 --> 00:15:24,120
it'll be mostly around some of the async

00:15:22,740 --> 00:15:27,240
away stuff that we've heard about

00:15:24,120 --> 00:15:28,920
yesterday and and some some new methods

00:15:27,240 --> 00:15:31,290
and objects yes but it's still

00:15:28,920 --> 00:15:33,870
relatively small but it means we can we

00:15:31,290 --> 00:15:35,820
can move much faster and if a feature is

00:15:33,870 --> 00:15:38,130
on the way to cut becoming in the

00:15:35,820 --> 00:15:40,020
standard and it's a it's a little bit

00:15:38,130 --> 00:15:42,510
late it doesn't delay the entire

00:15:40,020 --> 00:15:44,640
standard or just it just won't make it

00:15:42,510 --> 00:15:46,980
into 2017 we'll be into south

00:15:44,640 --> 00:15:48,540
18 it's a really cool thing that it's

00:15:46,980 --> 00:15:52,080
going to enable us to work a lot faster

00:15:48,540 --> 00:15:54,600
on JavaScript yeah so I just thought I'd

00:15:52,080 --> 00:15:56,460
put in a class and that actually kind of

00:15:54,600 --> 00:15:58,500
symbols all this so this is a push

00:15:56,460 --> 00:16:00,300
subscription manager we can subscribe to

00:15:58,500 --> 00:16:02,730
push events and it'll actually you know

00:16:00,300 --> 00:16:05,040
show notification and do all the stuff

00:16:02,730 --> 00:16:07,020
and into the class and it's you know

00:16:05,040 --> 00:16:09,150
using destructuring and all the new kind

00:16:07,020 --> 00:16:12,690
of features so look at this when you

00:16:09,150 --> 00:16:14,490
look at the slides later so obviously we

00:16:12,690 --> 00:16:15,860
do e-commerce as I said so we're pretty

00:16:14,490 --> 00:16:18,960
excited about the browsers actually

00:16:15,860 --> 00:16:21,960
implementing a new feature called

00:16:18,960 --> 00:16:25,740
payment request which is the idea is we

00:16:21,960 --> 00:16:27,810
have huge thumbs and and we still try to

00:16:25,740 --> 00:16:30,300
do mobile checkout with a bunch of forms

00:16:27,810 --> 00:16:32,360
and that doesn't never work because you

00:16:30,300 --> 00:16:35,070
know we can't spell your name right they

00:16:32,360 --> 00:16:37,380
make mistakes and you don't want to do

00:16:35,070 --> 00:16:38,700
it like I see myself finding a product

00:16:37,380 --> 00:16:40,350
and on my phone because I'm researching

00:16:38,700 --> 00:16:42,600
from the couch or whatever and then I'll

00:16:40,350 --> 00:16:44,700
email myself the link so I'll go buy it

00:16:42,600 --> 00:16:46,470
on my desktop tomorrow and I go to the

00:16:44,700 --> 00:16:47,580
office or something and we want to get

00:16:46,470 --> 00:16:50,910
rid of that because we want people to

00:16:47,580 --> 00:16:52,830
obviously to shop right away and so

00:16:50,910 --> 00:16:54,930
Google's been the introducing this new

00:16:52,830 --> 00:16:57,300
API where the browser will actually pre

00:16:54,930 --> 00:16:59,340
fill a payment request form for you

00:16:57,300 --> 00:17:00,600
it'll give you it knows where you where

00:16:59,340 --> 00:17:02,550
you live it knows what credit card you

00:17:00,600 --> 00:17:04,650
usually pay pay with and by the

00:17:02,550 --> 00:17:06,690
individual pressed pay and all you have

00:17:04,650 --> 00:17:08,339
to do manually is type in the back of

00:17:06,690 --> 00:17:11,190
the credit card so we don't we won't

00:17:08,339 --> 00:17:13,620
have any fraud and you're done so this

00:17:11,190 --> 00:17:15,690
this feature is already in stable chrome

00:17:13,620 --> 00:17:20,699
so it's it's on Chrome on your Android

00:17:15,690 --> 00:17:24,329
device it's it's currently on in the

00:17:20,699 --> 00:17:26,430
canary channel for for desktop but it's

00:17:24,329 --> 00:17:28,560
already in Firefox and an edge and it's

00:17:26,430 --> 00:17:32,040
like it is already gaining momentum and

00:17:28,560 --> 00:17:36,570
at day I see so much potential in this

00:17:32,040 --> 00:17:38,280
is I built this demo I put it up so I

00:17:36,570 --> 00:17:40,230
just put some more slides in of it if

00:17:38,280 --> 00:17:42,030
the video didn't work but the code is

00:17:40,230 --> 00:17:44,130
kind of easy like it's build around

00:17:42,030 --> 00:17:45,810
promises it's built around events so it

00:17:44,130 --> 00:17:48,960
seems like that's how all the new API is

00:17:45,810 --> 00:17:51,090
are going to be built and so we can say

00:17:48,960 --> 00:17:54,150
make a new payment request line one

00:17:51,090 --> 00:17:55,950
give it some options then in line 15 we

00:17:54,150 --> 00:17:58,440
say request that show which will pull up

00:17:55,950 --> 00:18:00,090
the UI and then we can listen for a

00:17:58,440 --> 00:18:02,490
so whenever the shipping address change

00:18:00,090 --> 00:18:04,049
maybe put some new shipping options in

00:18:02,490 --> 00:18:06,149
there whenever the shipping options

00:18:04,049 --> 00:18:08,340
change maybe we calculate the price or

00:18:06,149 --> 00:18:10,860
whatever but you can do all of this and

00:18:08,340 --> 00:18:13,049
it's pretty easy to do put together a

00:18:10,860 --> 00:18:14,370
demo you can go play with it if you if

00:18:13,049 --> 00:18:15,509
you have an Android device which it

00:18:14,370 --> 00:18:18,299
works right out of the box in your

00:18:15,509 --> 00:18:21,570
stable Chrome browser and the source is

00:18:18,299 --> 00:18:23,700
available there as well and which leads

00:18:21,570 --> 00:18:26,669
me to authentication which is another

00:18:23,700 --> 00:18:28,590
thing where it's like on mobile typing

00:18:26,669 --> 00:18:29,970
in complex passwords with lowercase and

00:18:28,590 --> 00:18:32,039
uppercase and weird numbers and weird

00:18:29,970 --> 00:18:34,620
designs and all that stuff it's so hard

00:18:32,039 --> 00:18:37,049
and it shouldn't be because you know our

00:18:34,620 --> 00:18:38,519
browsers they can usually help us fill

00:18:37,049 --> 00:18:40,500
out the forms because and you might even

00:18:38,519 --> 00:18:41,940
have a password manager or something and

00:18:40,500 --> 00:18:43,230
but we as a developer we should we

00:18:41,940 --> 00:18:44,730
should have access to that like

00:18:43,230 --> 00:18:47,100
obviously we shouldn't have clear access

00:18:44,730 --> 00:18:48,960
to people's passwords if they don't want

00:18:47,100 --> 00:18:51,899
us to have it but we should be able to

00:18:48,960 --> 00:18:53,789
say try to just do a login and that's

00:18:51,899 --> 00:18:56,120
what the authenticate the new credential

00:18:53,789 --> 00:18:59,220
management API will actually give us so

00:18:56,120 --> 00:19:01,169
when people log in or sign up or

00:18:59,220 --> 00:19:03,059
something you can say you can call it a

00:19:01,169 --> 00:19:07,470
little piece of JavaScript I think it's

00:19:03,059 --> 00:19:09,570
um you can call a little piece of

00:19:07,470 --> 00:19:11,700
JavaScript here you see I make a new

00:19:09,570 --> 00:19:14,100
password credential in one two and then

00:19:11,700 --> 00:19:16,860
in line six I say store this and when I

00:19:14,100 --> 00:19:18,809
do this the browser will will say do you

00:19:16,860 --> 00:19:21,059
want to store this so bill will ask the

00:19:18,809 --> 00:19:23,549
user and if he says yes it will store it

00:19:21,059 --> 00:19:27,029
on the on the on the client and then and

00:19:23,549 --> 00:19:28,860
then the browser a you know if you use

00:19:27,029 --> 00:19:31,289
the same browser on multiple clients and

00:19:28,860 --> 00:19:33,029
the browser might think it for you like

00:19:31,289 --> 00:19:34,830
it thinks everything else for you so if

00:19:33,029 --> 00:19:36,240
you're logged into one device you're

00:19:34,830 --> 00:19:38,820
automatically locked into all your

00:19:36,240 --> 00:19:41,250
devices if you save your login for one

00:19:38,820 --> 00:19:43,320
device it's already all automatically on

00:19:41,250 --> 00:19:46,139
all your devices super cool new features

00:19:43,320 --> 00:19:47,700
and of course if you want to click if

00:19:46,139 --> 00:19:49,289
you click the logout button you should

00:19:47,700 --> 00:19:51,450
no longer be automatically signed in

00:19:49,289 --> 00:19:54,450
because you that would kind of defeat

00:19:51,450 --> 00:19:56,190
the purpose of signing out and so if you

00:19:54,450 --> 00:19:59,009
do that you can no longer automatically

00:19:56,190 --> 00:20:01,710
sign in so if you then wants to try to

00:19:59,009 --> 00:20:03,419
sign in hey we can we can actually

00:20:01,710 --> 00:20:05,610
present you with the UI that says so you

00:20:03,419 --> 00:20:06,840
last time you signed in you signed in

00:20:05,610 --> 00:20:10,320
with this user do you want to do that

00:20:06,840 --> 00:20:11,760
again and so a lot of cool stuff it also

00:20:10,320 --> 00:20:13,890
works with the

00:20:11,760 --> 00:20:16,050
federated login so if you're using your

00:20:13,890 --> 00:20:18,420
facebook login or your Twitter login or

00:20:16,050 --> 00:20:19,740
your Google login or whatever we can

00:20:18,420 --> 00:20:22,350
save all that information in the browser

00:20:19,740 --> 00:20:23,310
as well because I know for me services

00:20:22,350 --> 00:20:24,990
where I have three different accounts

00:20:23,310 --> 00:20:27,660
because I don't remember if I've signed

00:20:24,990 --> 00:20:30,060
up with Facebook or with github or with

00:20:27,660 --> 00:20:31,740
Twitter or with a regular account so now

00:20:30,060 --> 00:20:33,240
the browser can actually store this

00:20:31,740 --> 00:20:35,160
information for me and make sure that I

00:20:33,240 --> 00:20:37,710
only have one account because we you

00:20:35,160 --> 00:20:39,390
know which one to use and and I thought

00:20:37,710 --> 00:20:42,540
I'd show you a video of that as well so

00:20:39,390 --> 00:20:44,250
in the video you'll see me signing up

00:20:42,540 --> 00:20:46,830
for a profile the browser will ask me to

00:20:44,250 --> 00:20:49,170
store it I will then reload the page

00:20:46,830 --> 00:20:52,170
which makes me like in this example it

00:20:49,170 --> 00:20:53,010
loses my session so after just half a

00:20:52,170 --> 00:20:55,530
second or something it will

00:20:53,010 --> 00:20:57,300
automatically send me back in because

00:20:55,530 --> 00:20:58,860
I'm a because it's allowed to then I'll

00:20:57,300 --> 00:20:59,250
press the sign out button and reload the

00:20:58,860 --> 00:21:01,380
page

00:20:59,250 --> 00:21:02,700
losing my session and then it won't

00:21:01,380 --> 00:21:05,160
automatically sign me in because I just

00:21:02,700 --> 00:21:06,990
actively signed out then when I press

00:21:05,160 --> 00:21:09,600
the sign-in but the sign back in button

00:21:06,990 --> 00:21:13,880
it'll ask me which profiles you use so

00:21:09,600 --> 00:21:18,390
so keep along see here so I sign up

00:21:13,880 --> 00:21:19,710
register with whatever the browser asked

00:21:18,390 --> 00:21:22,500
me to up they want to save it yes I do

00:21:19,710 --> 00:21:25,140
I'll reload the page I'm signed out I'm

00:21:22,500 --> 00:21:27,810
automatically signed back in I press the

00:21:25,140 --> 00:21:30,540
sign out button I reload I'm no longer

00:21:27,810 --> 00:21:32,670
automatically signed in and when I press

00:21:30,540 --> 00:21:33,780
sign in I'm sure the UI that says do you

00:21:32,670 --> 00:21:36,120
want to just shine in with the account

00:21:33,780 --> 00:21:39,270
that we already know so this is going to

00:21:36,120 --> 00:21:43,200
be the future of authentication it's in

00:21:39,270 --> 00:21:46,560
chrome today it's on Chrome today on

00:21:43,200 --> 00:21:48,600
Android and on desktop a and it's really

00:21:46,560 --> 00:21:49,680
powerful and it's super easy and with

00:21:48,600 --> 00:21:51,900
payment request and authentication

00:21:49,680 --> 00:21:54,420
there's like there's so good candidates

00:21:51,900 --> 00:21:56,730
for progressive enhancement so like the

00:21:54,420 --> 00:21:58,500
code to do it is so small and it's so

00:21:56,730 --> 00:21:59,970
simple to use and just put an if

00:21:58,500 --> 00:22:02,010
statement around it saying so if the

00:21:59,970 --> 00:22:03,390
browser supports this offer it and if

00:22:02,010 --> 00:22:05,700
they don't you know they just get the

00:22:03,390 --> 00:22:07,650
regulation experience so you should do

00:22:05,700 --> 00:22:09,090
it you can more or less just copy my

00:22:07,650 --> 00:22:11,010
code and it will work out of the box

00:22:09,090 --> 00:22:13,080
there's a demo and some code here as

00:22:11,010 --> 00:22:15,870
well so so check out the slides

00:22:13,080 --> 00:22:20,340
afterwards then there's web components

00:22:15,870 --> 00:22:22,380
so you know react angular view all of

00:22:20,340 --> 00:22:24,610
the popular frameworks they they have

00:22:22,380 --> 00:22:26,860
some kind of idea of a component the way

00:22:24,610 --> 00:22:28,990
can encapsulate some logic and maybe

00:22:26,860 --> 00:22:31,450
some UI and you can reuse it and stuff

00:22:28,990 --> 00:22:33,160
and you know the browser's been paying

00:22:31,450 --> 00:22:35,260
attention and now there's a there is an

00:22:33,160 --> 00:22:36,429
official way to do components in the

00:22:35,260 --> 00:22:39,820
browser so you don't need a framework

00:22:36,429 --> 00:22:41,650
for it anymore and you know so you can

00:22:39,820 --> 00:22:43,809
just do show me the mini basket and

00:22:41,650 --> 00:22:46,510
we'll have all the events that we are

00:22:43,809 --> 00:22:47,890
used to from reactor angular so this is

00:22:46,510 --> 00:22:49,480
when it's put in the Dom this is when

00:22:47,890 --> 00:22:51,490
it's created this is when is when the

00:22:49,480 --> 00:22:53,650
properties of change this is when it's

00:22:51,490 --> 00:22:55,540
taken back out all the stuff you have

00:22:53,650 --> 00:22:59,110
all these events with native web

00:22:55,540 --> 00:23:00,820
components so I talked to and this there

00:22:59,110 --> 00:23:02,860
are four specs really but you know we go

00:23:00,820 --> 00:23:05,049
read them if you want hey I talked to

00:23:02,860 --> 00:23:07,240
somebody I think in the lunch break and

00:23:05,049 --> 00:23:08,679
they're like so who really uses polymer

00:23:07,240 --> 00:23:10,720
it's a polymer is a framework that's

00:23:08,679 --> 00:23:12,549
built around web components around

00:23:10,720 --> 00:23:14,470
native components it's it's a very small

00:23:12,549 --> 00:23:15,760
library because all it does is is to

00:23:14,470 --> 00:23:17,620
give you a little bit of data binding

00:23:15,760 --> 00:23:20,230
stuff and all some of the stuff that's

00:23:17,620 --> 00:23:22,240
not yet in the standard but like the

00:23:20,230 --> 00:23:23,890
goal of polymer really is to eventually

00:23:22,240 --> 00:23:25,299
fade away and not be necessary anymore

00:23:23,890 --> 00:23:29,370
because the browser will support it all

00:23:25,299 --> 00:23:31,990
of it and so who really uses polymer and

00:23:29,370 --> 00:23:34,179
does anybody serious use it and I was

00:23:31,990 --> 00:23:36,940
like yeah so if you've been to mcdonalds

00:23:34,179 --> 00:23:39,549
recently they although new science they

00:23:36,940 --> 00:23:41,169
make the polymer components if you go to

00:23:39,549 --> 00:23:42,970
the new youtube version it's built with

00:23:41,169 --> 00:23:44,110
polymer probably the biggest website in

00:23:42,970 --> 00:23:47,020
the world or the one with the most

00:23:44,110 --> 00:23:50,470
traffic and even if you go to Chrome

00:23:47,020 --> 00:23:53,169
settings so it's on two billion devices

00:23:50,470 --> 00:23:55,540
it's built with polymer so there's a lot

00:23:53,169 --> 00:24:00,299
of it's probably the the website that's

00:23:55,540 --> 00:24:03,580
in most places Chrome settings and so

00:24:00,299 --> 00:24:04,059
now that I'm just running through stress

00:24:03,580 --> 00:24:05,320
Allah

00:24:04,059 --> 00:24:06,910
I thought I should talk about something

00:24:05,320 --> 00:24:08,770
that wasn't JavaScript even though I

00:24:06,910 --> 00:24:13,270
know it says J's heroes but I guess it

00:24:08,770 --> 00:24:15,100
to kind of put web heroes so style you

00:24:13,270 --> 00:24:17,860
know a lot of stuff has happened do we

00:24:15,100 --> 00:24:20,140
should we have styles in CSS or not or

00:24:17,860 --> 00:24:22,030
in JavaScript or not or how should we

00:24:20,140 --> 00:24:25,780
handle it I won't go into that

00:24:22,030 --> 00:24:27,520
discussion and but I will talk about

00:24:25,780 --> 00:24:29,290
three things I'll talk about custom

00:24:27,520 --> 00:24:32,260
properties talk about grid and about

00:24:29,290 --> 00:24:34,990
Houdini so custom properties are like

00:24:32,260 --> 00:24:37,000
variables so if you if you if you know

00:24:34,990 --> 00:24:38,540
CSS if you've been using CSS you

00:24:37,000 --> 00:24:40,490
probably use some kind of freak

00:24:38,540 --> 00:24:42,710
there may be sass or less so something

00:24:40,490 --> 00:24:45,020
because you want to be able to have

00:24:42,710 --> 00:24:46,550
variables and do nesting and stuff like

00:24:45,020 --> 00:24:48,200
if you don't know what I'm talking about

00:24:46,550 --> 00:24:49,430
a google bat as well because that's

00:24:48,200 --> 00:24:53,000
going to help you so much

00:24:49,430 --> 00:24:55,910
but you might know it already but custom

00:24:53,000 --> 00:24:57,530
properties are like CSS variables or

00:24:55,910 --> 00:24:59,480
like SAS variables but they're at

00:24:57,530 --> 00:25:02,030
runtime which means you can you can

00:24:59,480 --> 00:25:04,160
change change the value of a variable

00:25:02,030 --> 00:25:06,110
and it's going to propagate down through

00:25:04,160 --> 00:25:07,760
the entire tree and you can do that at

00:25:06,110 --> 00:25:09,260
runtime so that's really cool and

00:25:07,760 --> 00:25:12,560
especially because it's you know the

00:25:09,260 --> 00:25:14,870
idea of CSS it that it inherits so you

00:25:12,560 --> 00:25:17,300
can say from this point down and down in

00:25:14,870 --> 00:25:20,180
this branch of my Dom this about this

00:25:17,300 --> 00:25:23,120
variable is now green that of blue and

00:25:20,180 --> 00:25:24,620
then like it's super easy to use and it

00:25:23,120 --> 00:25:26,690
gives you a lot of cool powers and it

00:25:24,620 --> 00:25:29,420
also it's also what powers a lot of how

00:25:26,690 --> 00:25:32,270
you do theming and stuff with a lot of

00:25:29,420 --> 00:25:35,480
the new frameworks so how do you how we

00:25:32,270 --> 00:25:38,900
do it with web components are polymer

00:25:35,480 --> 00:25:41,780
and and the other frameworks as well so

00:25:38,900 --> 00:25:44,690
for the longest time this was a sad

00:25:41,780 --> 00:25:47,330
story so like being able to actually

00:25:44,690 --> 00:25:48,920
outline something like this with CSS was

00:25:47,330 --> 00:25:50,690
more or less just impossible like you

00:25:48,920 --> 00:25:52,490
should wrap things and then if it was

00:25:50,690 --> 00:25:53,960
different on mobile you should wrap them

00:25:52,490 --> 00:25:56,650
differently and like it was just

00:25:53,960 --> 00:26:00,320
impossible but but you know fortunately

00:25:56,650 --> 00:26:02,180
as of a couple of months ago a we now

00:26:00,320 --> 00:26:04,970
have CSS grid and a great support in

00:26:02,180 --> 00:26:07,130
most browsers and it's it's so simple

00:26:04,970 --> 00:26:09,500
like there's there are a couple of

00:26:07,130 --> 00:26:10,910
different ways to to like a couple of

00:26:09,500 --> 00:26:12,980
different syntaxes to actually write the

00:26:10,910 --> 00:26:15,830
code but it's relatively simple so you

00:26:12,980 --> 00:26:19,130
say the container is a grid and the men

00:26:15,830 --> 00:26:21,920
the menus then spanned so one third of

00:26:19,130 --> 00:26:24,140
the width and what two rows and height

00:26:21,920 --> 00:26:26,060
and the thing goes for at the top and

00:26:24,140 --> 00:26:28,280
you know it's it's kind of simple to get

00:26:26,060 --> 00:26:30,500
started with and it's super powerful and

00:26:28,280 --> 00:26:32,060
these are just four elements in the Dom

00:26:30,500 --> 00:26:34,640
right after each other no wrapping

00:26:32,060 --> 00:26:37,250
nested needed so it's it's it's super

00:26:34,640 --> 00:26:39,350
easy and here you see I put a youtube

00:26:37,250 --> 00:26:44,390
link in on the slide as well so if you

00:26:39,350 --> 00:26:45,860
want to learn this a Rachel something I

00:26:44,390 --> 00:26:48,860
forgot her last name you did a really

00:26:45,860 --> 00:26:50,660
good tutorial and you should go follow

00:26:48,860 --> 00:26:51,950
it it's a playlist of I don't know 20

00:26:50,660 --> 00:26:54,649
short videos on

00:26:51,950 --> 00:26:57,399
the on CSS grid and there you should

00:26:54,649 --> 00:27:00,799
really learn it it's it's super awesome

00:26:57,399 --> 00:27:04,850
Houdini everybody heard of anybody heard

00:27:00,799 --> 00:27:06,830
of Houdini for CSS yeah so I'm not

00:27:04,850 --> 00:27:10,639
talking about the magician here but

00:27:06,830 --> 00:27:12,289
there but so Houdini is a I think it may

00:27:10,639 --> 00:27:13,690
be it might be named after the magician

00:27:12,289 --> 00:27:17,240
though because it is kind of black magic

00:27:13,690 --> 00:27:19,760
so CSS you know where you do stuff like

00:27:17,240 --> 00:27:22,309
this and you say so the the transform

00:27:19,760 --> 00:27:23,960
should be translated some pixels like

00:27:22,309 --> 00:27:26,360
even though that feels kind of weird but

00:27:23,960 --> 00:27:28,100
you can understand it but then when you

00:27:26,360 --> 00:27:30,799
ask for it afterwards it's suddenly a

00:27:28,100 --> 00:27:33,320
matrix with like it CSS is just weird

00:27:30,799 --> 00:27:36,169
like that and that's what Houdini kind

00:27:33,320 --> 00:27:38,570
of wants to do to take away all the

00:27:36,169 --> 00:27:40,639
making numbers into strings and taking

00:27:38,570 --> 00:27:42,919
them back to numbers to do math with

00:27:40,639 --> 00:27:45,110
them and actually understanding what

00:27:42,919 --> 00:27:48,169
happens when you do calculations and

00:27:45,110 --> 00:27:49,580
stuff so will like I won't go into this

00:27:48,169 --> 00:27:51,590
for too much for the for the sake of

00:27:49,580 --> 00:27:53,360
time but you see like you can you can

00:27:51,590 --> 00:27:57,409
make a style map and actually set the

00:27:53,360 --> 00:27:58,880
height and say here the CSS pixel value

00:27:57,409 --> 00:28:01,669
is actually a number not part of a

00:27:58,880 --> 00:28:03,320
string anymore and the same goes for you

00:28:01,669 --> 00:28:08,809
can do calculations you say where I say

00:28:03,320 --> 00:28:10,700
so we should do 50 view height and minus

00:28:08,809 --> 00:28:13,159
20 pixels so that would be how you do

00:28:10,700 --> 00:28:14,750
CSS calculations and it's it's it's a

00:28:13,159 --> 00:28:17,659
lot easier to get to it to actually work

00:28:14,750 --> 00:28:19,630
with this way and this is nowhere near

00:28:17,659 --> 00:28:22,760
landing in any browser or anytime soon

00:28:19,630 --> 00:28:25,519
but it's a but it but it's kind of cool

00:28:22,760 --> 00:28:28,070
and it's it's awesome to see where we're

00:28:25,519 --> 00:28:30,130
going and that like it's awesome stuff

00:28:28,070 --> 00:28:33,380
is on there on us on the roadmap as well

00:28:30,130 --> 00:28:35,840
and like it goes on if you want to do a

00:28:33,380 --> 00:28:37,990
really complex animation stuff you can

00:28:35,840 --> 00:28:40,610
do that as well there are AP is for

00:28:37,990 --> 00:28:42,529
listening to certainly certain events

00:28:40,610 --> 00:28:44,929
and then updating only certain parts of

00:28:42,529 --> 00:28:46,370
the UI and like you can do very complex

00:28:44,929 --> 00:28:48,230
stuff with this and you should like the

00:28:46,370 --> 00:28:49,549
more information you give the browser

00:28:48,230 --> 00:28:51,440
the more guarantee you should give it

00:28:49,549 --> 00:28:53,840
the faster will be there the more

00:28:51,440 --> 00:28:55,639
performing it could be so this code

00:28:53,840 --> 00:28:57,470
won't work anywhere either but this was

00:28:55,639 --> 00:29:02,840
this going to be how kind of how to look

00:28:57,470 --> 00:29:04,970
maybe and yeah more of that so then

00:29:02,840 --> 00:29:07,280
there's internet of things obviously

00:29:04,970 --> 00:29:09,230
a and the physical web thing so like

00:29:07,280 --> 00:29:11,960
there's already as I mentioned there's a

00:29:09,230 --> 00:29:14,419
lot of api's that are standards that are

00:29:11,960 --> 00:29:17,690
you know from the w3c how to work with

00:29:14,419 --> 00:29:19,970
gyroscopes and manometers and ambient

00:29:17,690 --> 00:29:21,470
light sensors and there's ap eyes for

00:29:19,970 --> 00:29:23,330
all of them they're in the standards and

00:29:21,470 --> 00:29:24,890
that's super awesome but I thought we

00:29:23,330 --> 00:29:27,260
should talk about something something

00:29:24,890 --> 00:29:29,120
real and I actually have actually

00:29:27,260 --> 00:29:30,980
brought something just because I wanted

00:29:29,120 --> 00:29:36,110
to show something that said that that

00:29:30,980 --> 00:29:39,200
you can do today so if this works you'll

00:29:36,110 --> 00:29:42,770
see a Bluetooth lamp so this is just

00:29:39,200 --> 00:29:44,840
like a regular LED bulb we can change

00:29:42,770 --> 00:29:51,169
colors on it it's can you see it if it's

00:29:44,840 --> 00:29:52,760
here okay um and I built a little piece

00:29:51,169 --> 00:29:53,200
of code maybe I should show you the code

00:29:52,760 --> 00:29:56,299
first

00:29:53,200 --> 00:29:57,860
so the code kind of looks like this so

00:29:56,299 --> 00:30:00,440
on the Navigator object there is now a

00:29:57,860 --> 00:30:01,909
Bluetooth a property where you can say

00:30:00,440 --> 00:30:03,140
request device and say what kind of

00:30:01,909 --> 00:30:05,659
device you're looking for so here I'm

00:30:03,140 --> 00:30:08,270
looking for a service with this ID and a

00:30:05,659 --> 00:30:09,470
name of the bulb and obviously this

00:30:08,270 --> 00:30:12,320
would change if it was a different

00:30:09,470 --> 00:30:14,510
manufacturer or whatever but like then I

00:30:12,320 --> 00:30:16,789
it's based around promises again so I

00:30:14,510 --> 00:30:18,890
get a device I get I connect to it I get

00:30:16,789 --> 00:30:21,080
a server I get a service from the server

00:30:18,890 --> 00:30:22,789
I get a blah blah blah and then by the

00:30:21,080 --> 00:30:24,110
end of it I get characteristics and

00:30:22,789 --> 00:30:26,140
characteristics is what it's all about

00:30:24,110 --> 00:30:29,240
because here you can say write value and

00:30:26,140 --> 00:30:31,669
then I'll just write red green and blue

00:30:29,240 --> 00:30:34,870
value for the for their lamp and it'll

00:30:31,669 --> 00:30:38,809
change colors so like if if we're lucky

00:30:34,870 --> 00:30:41,000
this will work so I'll try to drag this

00:30:38,809 --> 00:30:43,789
over here this is stable Chrome so

00:30:41,000 --> 00:30:46,580
there's no magic here this is all stuff

00:30:43,789 --> 00:30:48,919
that's in the browser already and it's

00:30:46,580 --> 00:30:50,450
up on github you can you can just go

00:30:48,919 --> 00:30:52,520
ahead and try it if you buy one of these

00:30:50,450 --> 00:30:54,440
they're like ten dollars or something

00:30:52,520 --> 00:30:56,450
for LED it's so much cheaper than

00:30:54,440 --> 00:30:59,750
Philips hue or whatever kind of color

00:30:56,450 --> 00:31:02,539
lame do you want to have and I click the

00:30:59,750 --> 00:31:05,870
change color no let me just reload the

00:31:02,539 --> 00:31:08,690
page I click the find bulb button here's

00:31:05,870 --> 00:31:12,320
the here's a here's my LED I click pair

00:31:08,690 --> 00:31:14,659
I get slider so this is just a beautiful

00:31:12,320 --> 00:31:16,460
UI that I've made I'll press change

00:31:14,659 --> 00:31:17,420
color and the light changes color so

00:31:16,460 --> 00:31:25,309
it's like

00:31:17,420 --> 00:31:26,600
thank you but yeah I just thought it'd

00:31:25,309 --> 00:31:29,210
be fun to actually show something that

00:31:26,600 --> 00:31:30,850
has their real meaning to it and it's

00:31:29,210 --> 00:31:34,280
not just in the future so this is stable

00:31:30,850 --> 00:31:38,030
browsers today and it should go play

00:31:34,280 --> 00:31:41,030
with that yeah and then there's the

00:31:38,030 --> 00:31:43,820
physical web if you've been sitting over

00:31:41,030 --> 00:31:45,650
in this part of the part of the section

00:31:43,820 --> 00:31:47,360
today I've had a couple people come up

00:31:45,650 --> 00:31:51,140
to me and they're like so what is this

00:31:47,360 --> 00:31:54,650
ngo thing which was the name of my user

00:31:51,140 --> 00:31:57,080
group locally and and and why do I get

00:31:54,650 --> 00:31:58,280
push notifications about it and it's not

00:31:57,080 --> 00:31:59,630
really a push notification it is a

00:31:58,280 --> 00:32:01,040
notification though I've been carrying

00:31:59,630 --> 00:32:05,510
around some of these beacons

00:32:01,040 --> 00:32:07,280
these are Eddystone beacons em and if ya

00:32:05,510 --> 00:32:09,559
like we've been able to do beacons for

00:32:07,280 --> 00:32:11,030
apps for years but now it's actually

00:32:09,559 --> 00:32:13,760
coming to the web and the Eddystone

00:32:11,030 --> 00:32:15,500
beacons they just broadcast the URL so

00:32:13,760 --> 00:32:19,340
it's so simple they don't do anything

00:32:15,500 --> 00:32:21,169
except they say so this is me these are

00:32:19,340 --> 00:32:22,429
configured so you probably won't even

00:32:21,169 --> 00:32:25,010
reach them out here because I want

00:32:22,429 --> 00:32:26,690
battery life and but like if you're

00:32:25,010 --> 00:32:28,610
close to me or you can come close to me

00:32:26,690 --> 00:32:30,980
backwards it'll show up on your phone

00:32:28,610 --> 00:32:32,419
and and it'll just show up and say so

00:32:30,980 --> 00:32:34,040
you want to see the program for today's

00:32:32,419 --> 00:32:34,220
meetup because that's what I use them

00:32:34,040 --> 00:32:37,520
for

00:32:34,220 --> 00:32:40,970
and then yeah it's so it's so cool it's

00:32:37,520 --> 00:32:43,669
cool new technology and it's in stable

00:32:40,970 --> 00:32:46,370
Android today as well it's on Chrome for

00:32:43,669 --> 00:32:48,950
iOS as well even though the integration

00:32:46,370 --> 00:32:50,480
is not as well is good there but these

00:32:48,950 --> 00:32:52,490
should be everywhere like I mean

00:32:50,480 --> 00:32:54,410
everywhere where you used to be able to

00:32:52,490 --> 00:32:57,080
use to have to download an apple and

00:32:54,410 --> 00:32:58,309
like a native app to do something even

00:32:57,080 --> 00:33:00,679
though you only had to do it once you

00:32:58,309 --> 00:33:02,390
have to download 100 megabyte app know

00:33:00,679 --> 00:33:04,460
like that's the power of the web like

00:33:02,390 --> 00:33:06,620
you can you can go to a web site it's

00:33:04,460 --> 00:33:08,929
there for you it can work offline you

00:33:06,620 --> 00:33:11,059
can receive push messages and we can

00:33:08,929 --> 00:33:14,780
even broadcast the URL to the to the web

00:33:11,059 --> 00:33:17,330
app for you so imagine a like you add a

00:33:14,780 --> 00:33:18,890
bus stop and the bus will like we took

00:33:17,330 --> 00:33:21,559
up you take up your phone it'll actually

00:33:18,890 --> 00:33:22,700
say so the get the ETA for the bus right

00:33:21,559 --> 00:33:24,080
here on your phone so you don't have to

00:33:22,700 --> 00:33:26,450
install anything it's just right at the

00:33:24,080 --> 00:33:30,550
pocket I think this is live in buses in

00:33:26,450 --> 00:33:32,680
London and at least in some bus places

00:33:30,550 --> 00:33:34,330
and you can imagine it actually doing

00:33:32,680 --> 00:33:37,180
more complex stuff so this is a parking

00:33:34,330 --> 00:33:38,890
meter the broadcaster URL you click the

00:33:37,180 --> 00:33:40,180
button you're loaded into a progressive

00:33:38,890 --> 00:33:42,820
web app where you can pay for parking

00:33:40,180 --> 00:33:44,590
so like super super cool stuff that like

00:33:42,820 --> 00:33:45,760
if I'm a tourist and I know I'm only

00:33:44,590 --> 00:33:47,590
going to park here one day

00:33:45,760 --> 00:33:49,900
why would I install an application for

00:33:47,590 --> 00:33:53,200
that like that's that's what the web is

00:33:49,900 --> 00:33:55,720
for ya then there's what we are I

00:33:53,200 --> 00:33:57,970
brought I brought a Google cardboard as

00:33:55,720 --> 00:34:00,490
well it's like if you haven't tried them

00:33:57,970 --> 00:34:02,830
you should come try mine afterwards it I

00:34:00,490 --> 00:34:04,660
mean it's a five dollar piece of

00:34:02,830 --> 00:34:07,030
cardboard but you put your phone in it

00:34:04,660 --> 00:34:10,270
and you can do virtual reality like it's

00:34:07,030 --> 00:34:11,380
super simple you should like come play

00:34:10,270 --> 00:34:13,630
with it if you haven't tried it I'll

00:34:11,380 --> 00:34:16,660
give you some some funny URLs if you go

00:34:13,630 --> 00:34:18,010
to VR that info you can see more you can

00:34:16,660 --> 00:34:20,920
see the emotion stuff if you go to the

00:34:18,010 --> 00:34:23,860
a-frame page that's a library for

00:34:20,920 --> 00:34:25,480
building a web BR stuff because it's

00:34:23,860 --> 00:34:29,200
still kind of hard they the eyes are a

00:34:25,480 --> 00:34:31,180
little bit weird but yeah go go go try

00:34:29,200 --> 00:34:33,610
it out yeah

00:34:31,180 --> 00:34:37,050
looks like this so you know Manos got

00:34:33,610 --> 00:34:37,050
big things so we have two eyes

00:34:37,060 --> 00:34:43,330
it works with hardware today they're in

00:34:40,720 --> 00:34:45,490
the browsers with with the polyfill a at

00:34:43,330 --> 00:34:47,050
Google i/o a couple of weeks ago there

00:34:45,490 --> 00:34:49,030
was a lot of talk about where we are and

00:34:47,050 --> 00:34:51,610
how it's now about to be native and you

00:34:49,030 --> 00:34:53,230
know a lot of cool stuff going on we'll

00:34:51,610 --> 00:34:56,650
have better performance more hardware

00:34:53,230 --> 00:34:59,470
access even more cool stuff yes it runs

00:34:56,650 --> 00:35:00,130
sixty two prints per second yeah come

00:34:59,470 --> 00:35:02,770
try it afterwards

00:35:00,130 --> 00:35:06,880
so the last thing now that I'm almost

00:35:02,770 --> 00:35:08,950
out of time is web assembly so we've

00:35:06,880 --> 00:35:11,500
been like we want to do we want to have

00:35:08,950 --> 00:35:15,910
the power of native we want that for our

00:35:11,500 --> 00:35:19,060
web apps and but you know the web still

00:35:15,910 --> 00:35:20,710
like it's JavaScript it it's like it

00:35:19,060 --> 00:35:22,480
comes a place where it's kind of fast

00:35:20,710 --> 00:35:24,400
but it's not it's still not as fast as

00:35:22,480 --> 00:35:26,890
this native code and that's what web

00:35:24,400 --> 00:35:28,240
assembly is about so the idea of web

00:35:26,890 --> 00:35:29,950
assembly is that you can take an

00:35:28,240 --> 00:35:31,930
application written and C or whatever

00:35:29,950 --> 00:35:34,810
all the language and you can actually

00:35:31,930 --> 00:35:39,010
compile it down to an assembly that you

00:35:34,810 --> 00:35:41,200
can run on the web so imagine this the

00:35:39,010 --> 00:35:44,050
next Photoshop the next final cut the

00:35:41,200 --> 00:35:46,480
next very serious like with a lot of

00:35:44,050 --> 00:35:49,030
bu and GPU powers the next kind of that

00:35:46,480 --> 00:35:52,120
application could be on the web like all

00:35:49,030 --> 00:35:54,190
the UI could be built with web all the

00:35:52,120 --> 00:35:55,360
all the all the interactions could be

00:35:54,190 --> 00:35:57,100
built with web the web is probably

00:35:55,360 --> 00:35:58,930
better for that it's kind of it's used

00:35:57,100 --> 00:36:00,550
to all the scaling issues and the

00:35:58,930 --> 00:36:02,530
multiple platforms and all that stuff

00:36:00,550 --> 00:36:04,660
and then every time you have to do some

00:36:02,530 --> 00:36:07,090
heavy computational work you can do it

00:36:04,660 --> 00:36:08,980
with web assembly so the idea of web

00:36:07,090 --> 00:36:12,070
assembly is that you you can you can

00:36:08,980 --> 00:36:13,480
take your C libraries you can convert

00:36:12,070 --> 00:36:14,950
them into web assembly and then you can

00:36:13,480 --> 00:36:16,090
call them directly from JavaScript and

00:36:14,950 --> 00:36:18,010
interact with them like there were

00:36:16,090 --> 00:36:22,300
classes from it from the same language

00:36:18,010 --> 00:36:23,860
so super cool new stuff and yeah so

00:36:22,300 --> 00:36:24,880
obviously it's not a language that

00:36:23,860 --> 00:36:27,130
you're going to write yourself it's a

00:36:24,880 --> 00:36:29,680
compiled to language if there's some

00:36:27,130 --> 00:36:31,450
demos here you should go try the tanks

00:36:29,680 --> 00:36:33,880
demo it's like where they ported that

00:36:31,450 --> 00:36:37,720
game into web assembly and it runs in

00:36:33,880 --> 00:36:40,330
the browser it's kind of fun hey yeah

00:36:37,720 --> 00:36:42,520
don't think of it as a new language just

00:36:40,330 --> 00:36:44,950
think of it as you gaining even more

00:36:42,520 --> 00:36:50,380
superpowers to to have really performant

00:36:44,950 --> 00:36:51,940
code so I'm about done now so su I hope

00:36:50,380 --> 00:36:53,500
I've showed you that I think the

00:36:51,940 --> 00:36:56,440
platform is pretty cool so there's a lot

00:36:53,500 --> 00:37:00,010
of new features that are coming or that

00:36:56,440 --> 00:37:05,430
are already here eh let's embrace it

00:37:00,010 --> 00:37:05,430
eh use the platform Thanks

00:37:07,440 --> 00:37:11,639
[Music]

00:37:12,490 --> 00:37:18,020
we have time for a couple of questions

00:37:14,619 --> 00:37:21,220
yes if the service worker keeps running

00:37:18,020 --> 00:37:24,560
after the session ends when will it stop

00:37:21,220 --> 00:37:26,810
a-also where does it live so where it

00:37:24,560 --> 00:37:30,980
lives it depends on the platform so like

00:37:26,810 --> 00:37:33,950
if it's on if it's on Android it

00:37:30,980 --> 00:37:38,300
actually runs in like a like a regular

00:37:33,950 --> 00:37:41,810
Android background service and like you

00:37:38,300 --> 00:37:44,530
can do with regular Android apps it's a

00:37:41,810 --> 00:37:48,020
little bit different on on Mac and

00:37:44,530 --> 00:37:49,940
Windows I believe I think they fixed it

00:37:48,020 --> 00:37:52,340
now so you can actually also close the

00:37:49,940 --> 00:37:54,530
chrome instance not just the Chrome

00:37:52,340 --> 00:37:58,750
window but I think it should be it

00:37:54,530 --> 00:38:01,160
should be everywhere available now and

00:37:58,750 --> 00:38:03,980
obviously for performance reasons it

00:38:01,160 --> 00:38:06,710
doesn't really run in the background so

00:38:03,980 --> 00:38:08,570
it's it whenever it's not used it will

00:38:06,710 --> 00:38:11,060
the browser will will tell it to go to

00:38:08,570 --> 00:38:12,560
sleep and then the browser will will be

00:38:11,060 --> 00:38:14,900
the one that's actually listening for

00:38:12,560 --> 00:38:16,700
events and when the events come in it

00:38:14,900 --> 00:38:18,170
will wake up your serviceworker so you

00:38:16,700 --> 00:38:20,000
can't store any state in your

00:38:18,170 --> 00:38:21,680
serviceworker you should store all in

00:38:20,000 --> 00:38:23,750
indexeddb or something because you can't

00:38:21,680 --> 00:38:25,490
you can't expect for memory to be the

00:38:23,750 --> 00:38:27,590
same when when the serviceworker wakes

00:38:25,490 --> 00:38:29,210
back up and another note to say about

00:38:27,590 --> 00:38:44,720
that if maybe I should go back to the

00:38:29,210 --> 00:38:48,050
slide a lot of slides so you see when

00:38:44,720 --> 00:38:50,480
when we listen for any event in the

00:38:48,050 --> 00:38:53,810
callback we get an event and every time

00:38:50,480 --> 00:38:55,430
I call event that wait until and then

00:38:53,810 --> 00:38:58,070
gives it a promise that level has been

00:38:55,430 --> 00:39:00,230
resolved when when my action is done and

00:38:58,070 --> 00:39:01,970
that's so that the the browser won't

00:39:00,230 --> 00:39:03,740
kill it while it's still doing stuff so

00:39:01,970 --> 00:39:05,390
while we're waiting for the network to

00:39:03,740 --> 00:39:07,010
respond or something the browser won't

00:39:05,390 --> 00:39:09,109
killed it so it doesn't know what to do

00:39:07,010 --> 00:39:10,790
with the response so we call it event

00:39:09,109 --> 00:39:12,350
that wait until and that gives us a

00:39:10,790 --> 00:39:15,859
guarantee that until this promise

00:39:12,350 --> 00:39:18,859
fulfills or fails and that's a service

00:39:15,859 --> 00:39:21,140
for Google's will stay awake yeah long

00:39:18,859 --> 00:39:22,609
answer to that question how are you

00:39:21,140 --> 00:39:25,970
working with both angular and polymer

00:39:22,609 --> 00:39:32,030
which one do you prefer and why so

00:39:25,970 --> 00:39:35,660
I know a I know a big corporations that

00:39:32,030 --> 00:39:40,280
use polymer for a because of like it's

00:39:35,660 --> 00:39:43,730
so small and it has a really good story

00:39:40,280 --> 00:39:46,220
about you know reusing parts of the UI

00:39:43,730 --> 00:39:48,140
or or of your visual identity or

00:39:46,220 --> 00:39:49,640
whatever you want to call it so it's

00:39:48,140 --> 00:39:51,890
really powerful for that and then you

00:39:49,640 --> 00:39:53,300
can use it with angular with react with

00:39:51,890 --> 00:39:55,250
view with whatever because it's just

00:39:53,300 --> 00:39:58,730
like it's just like a native web

00:39:55,250 --> 00:40:01,760
component and so that would be a good

00:39:58,730 --> 00:40:03,260
way to handle it you can use both you

00:40:01,760 --> 00:40:05,980
can't you can't build entire

00:40:03,260 --> 00:40:08,720
applications with polymer although I

00:40:05,980 --> 00:40:10,550
kind of like I kind of don't like it but

00:40:08,720 --> 00:40:11,440
but I like just building individual

00:40:10,550 --> 00:40:14,980
components with it

00:40:11,440 --> 00:40:18,020
so yeah but you could if you wanted to

00:40:14,980 --> 00:40:21,830
when you work with light ah that went

00:40:18,020 --> 00:40:26,410
way a what structure do you have on the

00:40:21,830 --> 00:40:30,020
projects with purple a again it's not a

00:40:26,410 --> 00:40:32,900
it's not a it's not a framework it's a

00:40:30,020 --> 00:40:35,360
methodology so like the idea is kind of

00:40:32,900 --> 00:40:37,610
that there are some best practices there

00:40:35,360 --> 00:40:40,610
are some ways to to make your page loads

00:40:37,610 --> 00:40:42,410
load faster and give a better user

00:40:40,610 --> 00:40:45,230
experience and there and that's kind of

00:40:42,410 --> 00:40:47,390
what what purple is is trying to you

00:40:45,230 --> 00:40:49,490
know to generalize in a way so we can

00:40:47,390 --> 00:40:52,490
talk about it so it's it's it's more of

00:40:49,490 --> 00:40:55,000
a tool of being able to say are you

00:40:52,490 --> 00:40:57,470
pushing your resources are you

00:40:55,000 --> 00:40:59,690
pre-loading are you lazy loading are you

00:40:57,470 --> 00:41:02,510
all that stuff so it's it's like how

00:40:59,690 --> 00:41:04,190
you'd concretely do it and if you should

00:41:02,510 --> 00:41:06,800
do all of it or just some of it depends

00:41:04,190 --> 00:41:10,990
on the situation so and on your back-end

00:41:06,800 --> 00:41:13,070
and on different internet everything a

00:41:10,990 --> 00:41:15,920
since there are still browsers that

00:41:13,070 --> 00:41:17,990
don't support HTTP to do to set up the

00:41:15,920 --> 00:41:21,830
build output to produce to builds or

00:41:17,990 --> 00:41:24,320
what did you do um actually it's kind of

00:41:21,830 --> 00:41:26,300
fun that HTTP two is it's one of the

00:41:24,320 --> 00:41:27,920
only features that I can think of where

00:41:26,300 --> 00:41:29,750
the browser's were the first to

00:41:27,920 --> 00:41:31,790
implement and all like there's nobody

00:41:29,750 --> 00:41:35,720
using it for a lot of that for a long

00:41:31,790 --> 00:41:37,790
time and so browser support for HTTP do

00:41:35,720 --> 00:41:38,990
is actually really good but obviously

00:41:37,790 --> 00:41:40,760
like if you have to

00:41:38,990 --> 00:41:44,060
all the browsers you might run into

00:41:40,760 --> 00:41:45,920
issues with it and there and yeah you

00:41:44,060 --> 00:41:50,450
could do two builds or you can just say

00:41:45,920 --> 00:41:52,490
so if you don't support it P - you can

00:41:50,450 --> 00:41:54,619
just like it should you should be able

00:41:52,490 --> 00:41:56,810
to like with pre loading or with pushing

00:41:54,619 --> 00:41:58,400
resources or with multiplexing like you

00:41:56,810 --> 00:42:00,110
should just it could be able to just

00:41:58,400 --> 00:42:03,110
fall back to regulations to be one and

00:42:00,110 --> 00:42:05,720
still work probably a lot slower if

00:42:03,110 --> 00:42:08,830
you're you know getting divisional files

00:42:05,720 --> 00:42:13,930
individual modules by individual files

00:42:08,830 --> 00:42:16,550
but yeah you could do it should work

00:42:13,930 --> 00:42:20,300
when you work with lighthouse for the

00:42:16,550 --> 00:42:22,360
custom elements did you use polyfills or

00:42:20,300 --> 00:42:25,970
what did you use for browsers board and

00:42:22,360 --> 00:42:29,510
I don't I don't think lighthouse is

00:42:25,970 --> 00:42:31,790
anything to do with it but so custom

00:42:29,510 --> 00:42:33,410
elements yeah there's like if you want

00:42:31,790 --> 00:42:36,650
to use custom elements and you want to

00:42:33,410 --> 00:42:41,000
have a old browsers supported there's a

00:42:36,650 --> 00:42:44,690
pretty a pretty decent poly so and it's

00:42:41,000 --> 00:42:49,580
actually so I think about a month ago

00:42:44,690 --> 00:42:52,670
maybe two months ago iOS some version

00:42:49,580 --> 00:42:54,590
came out where i OS is actually

00:42:52,670 --> 00:42:56,840
supporting most of the features and

00:42:54,590 --> 00:42:58,400
that's the that's the biggest issue

00:42:56,840 --> 00:43:01,910
we've had with with native web

00:42:58,400 --> 00:43:06,380
components was iOS so now the only thing

00:43:01,910 --> 00:43:08,030
that's not supported on the iOS for for

00:43:06,380 --> 00:43:10,940
web components I think is the HTML

00:43:08,030 --> 00:43:12,530
imports part and that's probably being

00:43:10,940 --> 00:43:14,330
taken out of the spec again because they

00:43:12,530 --> 00:43:16,730
can't really figure out how it's how

00:43:14,330 --> 00:43:17,990
they should do it but even like if you

00:43:16,730 --> 00:43:21,650
want to use the syntax that's in the

00:43:17,990 --> 00:43:23,690
spec today the polyfill is like nothing

00:43:21,650 --> 00:43:26,390
so yeah go with the polyfill if you if

00:43:23,690 --> 00:43:28,280
you need to the policy works really well

00:43:26,390 --> 00:43:32,030
you can there's a very lightweight

00:43:28,280 --> 00:43:34,700
polyfill that you that gives you most of

00:43:32,030 --> 00:43:37,369
what the what the API the native API is

00:43:34,700 --> 00:43:40,400
say give you so if you if you don't use

00:43:37,369 --> 00:43:42,590
all the weird edgy corners of the AP is

00:43:40,400 --> 00:43:44,869
should go for the very small polyfill

00:43:42,590 --> 00:43:47,150
but if you do there is a very complex

00:43:44,869 --> 00:43:49,310
very large kind of slow polyfill that

00:43:47,150 --> 00:43:52,090
gives you everything so that depends on

00:43:49,310 --> 00:43:52,090
your situation as well

00:43:52,369 --> 00:43:56,450
while LinkedIn and other big apps domed

00:43:54,049 --> 00:43:58,430
html5 and native for mobile apps and

00:43:56,450 --> 00:44:04,519
when we should choose to stay well I

00:43:58,430 --> 00:44:06,890
think and I think when like it was so

00:44:04,519 --> 00:44:08,900
famous when when when Facebook did their

00:44:06,890 --> 00:44:11,740
html5 thing and Mark Zuckerberg was like

00:44:08,900 --> 00:44:13,970
html5 is crap and and all that stuff

00:44:11,740 --> 00:44:16,430
it's been a couple years since then and

00:44:13,970 --> 00:44:20,119
the browser is really caught up it's

00:44:16,430 --> 00:44:21,589
it's really interesting to see that if

00:44:20,119 --> 00:44:23,960
we take Twitter Twitter's just launched

00:44:21,589 --> 00:44:26,269
the new I think it's called I think it's

00:44:23,960 --> 00:44:28,039
a mobile to twitter.com or something in

00:44:26,269 --> 00:44:29,749
which is a progressive web app that has

00:44:28,039 --> 00:44:31,309
all the stuff that we need that we

00:44:29,749 --> 00:44:33,259
talked about so it loads after the

00:44:31,309 --> 00:44:36,740
purple pattern it works with offline it

00:44:33,259 --> 00:44:39,170
does say it makes you can you can do you

00:44:36,740 --> 00:44:40,670
can send a tweets when you're not online

00:44:39,170 --> 00:44:42,200
and will send it when you're back back

00:44:40,670 --> 00:44:43,609
online it does everything that we've

00:44:42,200 --> 00:44:46,339
talked about it's so simple it's so

00:44:43,609 --> 00:44:48,319
smart and loads so fast like it compete

00:44:46,339 --> 00:44:50,930
it out competes their app on any

00:44:48,319 --> 00:44:53,720
platform and I think that's kind of the

00:44:50,930 --> 00:44:55,609
point of it like they've realized a on

00:44:53,720 --> 00:44:56,869
Android where you can you can install

00:44:55,609 --> 00:44:58,759
and you can do offline and all that

00:44:56,869 --> 00:45:01,309
stuff I think they're they're gonna

00:44:58,759 --> 00:45:03,170
they're going to skip the native app I

00:45:01,309 --> 00:45:05,539
think it's going to be the web app for

00:45:03,170 --> 00:45:07,970
for most platforms it's probably going

00:45:05,539 --> 00:45:09,529
to be awhile before they'll kill their

00:45:07,970 --> 00:45:13,299
iOS app because I our support for

00:45:09,529 --> 00:45:17,239
progressive web apps is not so good and

00:45:13,299 --> 00:45:21,319
maybe that's the the question the second

00:45:17,239 --> 00:45:25,789
question is Oh iOS is they're coming

00:45:21,319 --> 00:45:28,369
around like at the at WWDC Apple's

00:45:25,789 --> 00:45:30,559
developer conference this week or last

00:45:28,369 --> 00:45:31,989
week they announced support for some of

00:45:30,559 --> 00:45:34,549
the features that we've been warning

00:45:31,989 --> 00:45:36,499
they came with some of the features for

00:45:34,549 --> 00:45:37,999
web components but they're still they're

00:45:36,499 --> 00:45:40,849
still lacking some some of the features

00:45:37,999 --> 00:45:42,589
and I think I mean the whole idea of

00:45:40,849 --> 00:45:44,239
calling it progressive web apps is that

00:45:42,589 --> 00:45:45,559
you build a fantastic web app that's

00:45:44,239 --> 00:45:47,210
just a regular web app that will work

00:45:45,559 --> 00:45:47,960
everywhere and then if your browser

00:45:47,210 --> 00:45:50,450
supports it

00:45:47,960 --> 00:45:53,180
you get to do offline you get to do push

00:45:50,450 --> 00:45:55,609
messages and all that stuff and that's

00:45:53,180 --> 00:45:57,410
it I see so thanks for having me I think

00:45:55,609 --> 00:46:00,099
we'll have a break yeah thank you so

00:45:57,410 --> 00:46:00,099
much amazing

00:46:00,910 --> 00:46:04,139
[Applause]

00:46:01,060 --> 00:46:04,139

YouTube URL: https://www.youtube.com/watch?v=eLnrIZd9cd8


