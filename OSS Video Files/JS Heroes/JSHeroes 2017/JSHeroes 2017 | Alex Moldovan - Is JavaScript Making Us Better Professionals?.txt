Title: JSHeroes 2017 | Alex Moldovan - Is JavaScript Making Us Better Professionals?
Publication date: 2017-06-23
Playlist: JSHeroes 2017
Description: 
	We can all agree that JavaScript is a trending programming language. But is this a good thing? Is JavaScript the right language to learn or to study? Can we push the language into the academic field so that students are better prepared for the jobs of the future in IT? 
I want to make a case here, that JavaScript forces you to go one step further in understanding what you are doing, compared with other mainstream languages that have their abstractions already built into the language. We will look at a few common patterns to establish some context and we will discuss about the dangers of abstractions and the source of the JavaScript Fatigueâ„¢.
Captions: 
	00:00:10,580 --> 00:00:17,700
thank you yes good afternoon Jesse Rose

00:00:15,450 --> 00:00:22,290
I'm really excited to be here in front

00:00:17,700 --> 00:00:25,289
of so many of you both as a speaker and

00:00:22,290 --> 00:00:27,780
an organizer so I'm really happy with

00:00:25,289 --> 00:00:29,369
how this is turning out I think that you

00:00:27,780 --> 00:00:32,279
guys are amazing here and we're really

00:00:29,369 --> 00:00:34,199
doing something that we know that our

00:00:32,279 --> 00:00:36,180
efforts are not in vain for for the

00:00:34,199 --> 00:00:39,680
whole thing that we're doing now just

00:00:36,180 --> 00:00:43,170
just a short thing I want to to announce

00:00:39,680 --> 00:00:45,059
initially we had 20 speakers on our list

00:00:43,170 --> 00:00:47,969
for the two days of conference but

00:00:45,059 --> 00:00:51,480
unfortunately two of the stickers could

00:00:47,969 --> 00:00:55,140
not make it we found out this week about

00:00:51,480 --> 00:00:56,940
that so we had to adjust a bit the

00:00:55,140 --> 00:00:59,280
agenda that's why you will see some of

00:00:56,940 --> 00:01:01,710
the talks maybe for 45 minutes we wanted

00:00:59,280 --> 00:01:03,210
to have some consistency at first but

00:01:01,710 --> 00:01:06,920
then we realize we need to keep up the

00:01:03,210 --> 00:01:10,680
schedule so I'd like to thank you

00:01:06,920 --> 00:01:15,420
LaRon Gautam and obvi do for taking the

00:01:10,680 --> 00:01:17,069
extra effort to change on demand the the

00:01:15,420 --> 00:01:21,569
time that you have allocated for this

00:01:17,069 --> 00:01:24,149
now as a funny story this is a this is a

00:01:21,569 --> 00:01:27,869
talk I wanted to give like since a year

00:01:24,149 --> 00:01:29,789
ago and I kept I kept adding my ideas

00:01:27,869 --> 00:01:36,720
together and putting all of it together

00:01:29,789 --> 00:01:39,950
and when I did a first try at home it

00:01:36,720 --> 00:01:43,170
turned out like 38 minutes or 36 minutes

00:01:39,950 --> 00:01:46,349
and then I started tweeting like hey

00:01:43,170 --> 00:01:49,619
guys you have any ideas how I could make

00:01:46,349 --> 00:01:52,229
this shorter and yeah I stopped I

00:01:49,619 --> 00:01:52,530
started to remove content and then guess

00:01:52,229 --> 00:01:57,450
what

00:01:52,530 --> 00:02:03,179
I now need more content on it so yeah so

00:01:57,450 --> 00:02:05,340
then I did another another tribe just

00:02:03,179 --> 00:02:08,060
yesterday because I knew I had like more

00:02:05,340 --> 00:02:10,730
content and I was pretty happy with it

00:02:08,060 --> 00:02:13,470
but then we had the talks in the morning

00:02:10,730 --> 00:02:14,880
fortitude or the North Benedict and I

00:02:13,470 --> 00:02:18,269
just realized they covered a lot of

00:02:14,880 --> 00:02:20,900
these things so yeah this will be pretty

00:02:18,269 --> 00:02:22,830
hard for me okay

00:02:20,900 --> 00:02:24,840
I'm

00:02:22,830 --> 00:02:27,810
I want to talk about JavaScript in

00:02:24,840 --> 00:02:30,420
general not about front-end or back-end

00:02:27,810 --> 00:02:34,950
JavaScript as the language as JavaScript

00:02:30,420 --> 00:02:37,530
as the ecosystem and when I think of of

00:02:34,950 --> 00:02:40,740
the ecosystem or when you think actually

00:02:37,530 --> 00:02:42,510
of the ecosystem today you might think

00:02:40,740 --> 00:02:46,140
of something like this or you've seen

00:02:42,510 --> 00:02:47,580
other pictures with snappy logos of all

00:02:46,140 --> 00:02:49,440
the frameworks and all the tools that

00:02:47,580 --> 00:02:51,570
you are using all the libraries all the

00:02:49,440 --> 00:02:55,080
testing tools or the backend frameworks

00:02:51,570 --> 00:02:57,930
front-end fair ones and so on this is

00:02:55,080 --> 00:03:01,170
the this doesn't even cover half of them

00:02:57,930 --> 00:03:06,450
but if this is a lot about how complex

00:03:01,170 --> 00:03:10,770
the ecosystem is unfortunately what I

00:03:06,450 --> 00:03:17,090
don't like is that people see this and

00:03:10,770 --> 00:03:20,340
they they label it as fatigue and I

00:03:17,090 --> 00:03:22,020
think that the fatigue comes from as

00:03:20,340 --> 00:03:27,000
comes from different sources actually

00:03:22,020 --> 00:03:29,880
and the main thing on which I the main

00:03:27,000 --> 00:03:35,820
idea on which I want to focus your

00:03:29,880 --> 00:03:39,950
inability to abstract we are developers

00:03:35,820 --> 00:03:42,360
we are engineers so we have this natural

00:03:39,950 --> 00:03:44,760
inability to abstract it's not something

00:03:42,360 --> 00:03:47,730
that it's not it's not a bad thing that

00:03:44,760 --> 00:03:49,440
we have we always want to look under the

00:03:47,730 --> 00:03:51,480
hood of something right we want to

00:03:49,440 --> 00:03:54,780
understand how everything works how how

00:03:51,480 --> 00:03:58,140
the internals of something work and we

00:03:54,780 --> 00:04:00,570
have this problem and abstract abstract

00:03:58,140 --> 00:04:02,250
thinking is a very difficult thing maybe

00:04:00,570 --> 00:04:05,180
it's maybe the most difficult thing in

00:04:02,250 --> 00:04:07,650
programming and it revolves around all

00:04:05,180 --> 00:04:13,110
ecosystem its ecosystems it's not a

00:04:07,650 --> 00:04:16,169
JavaScript problem and we often under

00:04:13,110 --> 00:04:18,690
extract or over abstract right we either

00:04:16,169 --> 00:04:21,870
go too deep into something we lose

00:04:18,690 --> 00:04:25,050
ourselves into the details or we are

00:04:21,870 --> 00:04:27,630
over abstracting we just use something

00:04:25,050 --> 00:04:29,790
that's a very high level use case for

00:04:27,630 --> 00:04:34,830
something that we actually need a deeper

00:04:29,790 --> 00:04:36,630
deeper look into so this inability to

00:04:34,830 --> 00:04:38,340
abstract it may be it's very hard

00:04:36,630 --> 00:04:42,570
still like pinpoint see like this is it

00:04:38,340 --> 00:04:44,190
this is the problem well I found while

00:04:42,570 --> 00:04:48,510
doing the research while thinking about

00:04:44,190 --> 00:04:51,360
the talk I found two ideas that are we

00:04:48,510 --> 00:04:53,490
trying to build a talk the first problem

00:04:51,360 --> 00:04:56,370
is a more generic one it's happening in

00:04:53,490 --> 00:04:59,540
north of ecosystem it systems it's

00:04:56,370 --> 00:05:04,280
happening in software in general it's

00:04:59,540 --> 00:05:07,520
how much focus we give to something of

00:05:04,280 --> 00:05:12,270
less or more importance right

00:05:07,520 --> 00:05:13,650
it would assume that this is how the

00:05:12,270 --> 00:05:16,590
software works so this is how the

00:05:13,650 --> 00:05:19,410
software mines work we focus on the

00:05:16,590 --> 00:05:22,160
important things we give we put more

00:05:19,410 --> 00:05:25,850
energy behind the important things and

00:05:22,160 --> 00:05:30,630
not not there the less important ones

00:05:25,850 --> 00:05:36,780
unfortunately reality kicks in this is

00:05:30,630 --> 00:05:39,510
what's happening this is the Lord or

00:05:36,780 --> 00:05:42,720
lost with reality which says that we are

00:05:39,510 --> 00:05:44,520
we have this in nature to fight over

00:05:42,720 --> 00:05:47,580
unimportant things right

00:05:44,520 --> 00:05:52,020
should I use tabs or spaces should I add

00:05:47,580 --> 00:05:55,140
semicolons in JavaScript should I use

00:05:52,020 --> 00:05:58,650
angular or react I would argue that even

00:05:55,140 --> 00:06:01,230
that is not an important question to ask

00:05:58,650 --> 00:06:03,300
I think the important questions to ask

00:06:01,230 --> 00:06:06,300
when building software are things like

00:06:03,300 --> 00:06:09,480
is this performant enough is this

00:06:06,300 --> 00:06:14,340
securing it does it respect all the

00:06:09,480 --> 00:06:18,450
security standards am i building the

00:06:14,340 --> 00:06:18,990
right features for my users and things

00:06:18,450 --> 00:06:20,790
like that

00:06:18,990 --> 00:06:24,120
I think these are the things that matter

00:06:20,790 --> 00:06:27,540
these are the things on which we should

00:06:24,120 --> 00:06:30,030
put more effort than picking up

00:06:27,540 --> 00:06:32,160
frameworks or making decisions right

00:06:30,030 --> 00:06:35,400
those are one kind decisions it should

00:06:32,160 --> 00:06:41,880
be less effort less and less effort on

00:06:35,400 --> 00:06:45,390
that the second the second problem which

00:06:41,880 --> 00:06:48,030
derives from this inability to abstract

00:06:45,390 --> 00:06:50,310
is specific to JavaScript it's not

00:06:48,030 --> 00:06:53,100
necessarily a problem it's it's the core

00:06:50,310 --> 00:06:56,250
it's the the outcome actually how the

00:06:53,100 --> 00:06:58,110
ecosystem is lost and I like to compare

00:06:56,250 --> 00:06:59,880
the JavaScript ecosystem with another

00:06:58,110 --> 00:07:01,110
ecosystem which which I'm pretty

00:06:59,880 --> 00:07:04,010
familiar with which is the Ruby

00:07:01,110 --> 00:07:04,010
ecosystem

00:07:04,100 --> 00:07:11,460
like any and all say ecosystem like 2030

00:07:08,280 --> 00:07:16,320
times so sorry for this

00:07:11,460 --> 00:07:18,240
like any ecosystem it also has some

00:07:16,320 --> 00:07:20,820
popularity like you cannot really have

00:07:18,240 --> 00:07:24,870
an ecosystem cannot have people behind

00:07:20,820 --> 00:07:28,950
it without some sort of popularity some

00:07:24,870 --> 00:07:31,710
sort of idea that's that's that that

00:07:28,950 --> 00:07:34,350
looks interesting for most of us so our

00:07:31,710 --> 00:07:38,700
popularity there is a natural tendency

00:07:34,350 --> 00:07:41,510
to go into chaos because sorry just as a

00:07:38,700 --> 00:07:45,240
disclaimer this is an in an open system

00:07:41,510 --> 00:07:47,580
when whether the languages is pretty

00:07:45,240 --> 00:07:49,530
much open the specifications are open

00:07:47,580 --> 00:07:51,840
source and there is no one organization

00:07:49,530 --> 00:07:56,520
on one person controlling where the

00:07:51,840 --> 00:07:58,140
language is heading so this is the path

00:07:56,520 --> 00:07:59,360
from popularity to chaos then what

00:07:58,140 --> 00:08:03,510
happened in Ruby

00:07:59,360 --> 00:08:06,630
it reached convention this is the stage

00:08:03,510 --> 00:08:10,770
at which they reached Convention was

00:08:06,630 --> 00:08:14,220
brought in Ruby by Ruby on Rails there

00:08:10,770 --> 00:08:16,140
are new Ruby developers here I'm pretty

00:08:14,220 --> 00:08:18,750
sure that almost all of them in some

00:08:16,140 --> 00:08:20,730
sort in in some manner they do Ruby on

00:08:18,750 --> 00:08:23,160
Rails because it's its standard for the

00:08:20,730 --> 00:08:25,710
Ruby community right 95% of the of the

00:08:23,160 --> 00:08:28,260
developers working Ruby on Rails and the

00:08:25,710 --> 00:08:29,610
framework is great and it's built around

00:08:28,260 --> 00:08:32,280
this idea of convention over

00:08:29,610 --> 00:08:35,310
configuration they make the decisions

00:08:32,280 --> 00:08:38,820
for you they have a set of conventions

00:08:35,310 --> 00:08:41,640
in place that allow you to start working

00:08:38,820 --> 00:08:43,470
on the features or in other words allow

00:08:41,640 --> 00:08:47,730
you to start asking the right questions

00:08:43,470 --> 00:08:52,440
at the beginning of the project but a

00:08:47,730 --> 00:08:54,690
convention that was true or valid in ten

00:08:52,440 --> 00:08:56,820
years ago is not necessarily the same

00:08:54,690 --> 00:08:59,279
convention today and unfortunately the

00:08:56,820 --> 00:09:02,370
problem with conventions

00:08:59,279 --> 00:09:04,170
is that they cannot change you they

00:09:02,370 --> 00:09:05,999
change their a different thing that it's

00:09:04,170 --> 00:09:08,040
a different standard so you have to

00:09:05,999 --> 00:09:11,279
slowly adapt them you cannot radically

00:09:08,040 --> 00:09:12,779
change them so the struggle today in the

00:09:11,279 --> 00:09:16,110
Ruby echo system is to go from

00:09:12,779 --> 00:09:19,529
convention to configuration to find the

00:09:16,110 --> 00:09:22,920
to find maybe alternatives that can work

00:09:19,529 --> 00:09:26,339
around the new advances that we have on

00:09:22,920 --> 00:09:28,110
the web platform to focus on on mobile

00:09:26,339 --> 00:09:30,059
for example which was not a problem ten

00:09:28,110 --> 00:09:32,970
years ago so this is a struggle

00:09:30,059 --> 00:09:37,550
currently in the Ruby ecosystem our

00:09:32,970 --> 00:09:42,230
friend JavaScript has a different story

00:09:37,550 --> 00:09:46,379
popularity led to chaos same story maybe

00:09:42,230 --> 00:09:50,730
chaos was there for too many years but

00:09:46,379 --> 00:09:55,470
then what happened is that it turned to

00:09:50,730 --> 00:09:57,569
configuration there were multiple things

00:09:55,470 --> 00:10:00,149
happening at the same time in multiple

00:09:57,569 --> 00:10:02,129
places multiple companies people working

00:10:00,149 --> 00:10:03,959
on different setups different

00:10:02,129 --> 00:10:06,089
configurations different ways of

00:10:03,959 --> 00:10:07,829
building apps with JavaScript whether

00:10:06,089 --> 00:10:13,470
its front and back-end whether its

00:10:07,829 --> 00:10:16,019
mobile all the frameworks and so on but

00:10:13,470 --> 00:10:19,379
this because there was no convention

00:10:16,019 --> 00:10:23,370
because there are no standard it also

00:10:19,379 --> 00:10:27,019
led back to chaos and we have this

00:10:23,370 --> 00:10:30,120
vicious circle which I think we passed

00:10:27,019 --> 00:10:31,110
we are now heading towards convention in

00:10:30,120 --> 00:10:33,689
the JavaScript world

00:10:31,110 --> 00:10:36,480
so today the JavaScript and the Ruby

00:10:33,689 --> 00:10:40,050
ecosystems are reversed one from another

00:10:36,480 --> 00:10:43,110
as they are fine trying to find ways to

00:10:40,050 --> 00:10:46,170
have more flexibility for developers to

00:10:43,110 --> 00:10:47,879
give them more power to actually adapt

00:10:46,170 --> 00:10:49,769
their application to the needs of

00:10:47,879 --> 00:10:52,319
today's needs of the of the web all of

00:10:49,769 --> 00:10:54,809
the mobile in JavaScript we have all the

00:10:52,319 --> 00:10:58,009
flexibility and we're striving to find

00:10:54,809 --> 00:11:02,160
the conventions we are trying to find

00:10:58,009 --> 00:11:04,949
some sort of ideas concepts that will

00:11:02,160 --> 00:11:10,889
allow us to focus on the important

00:11:04,949 --> 00:11:12,960
things this here is the period that

00:11:10,889 --> 00:11:16,470
we've lived through

00:11:12,960 --> 00:11:19,810
the upper part is the JavaScript fatigue

00:11:16,470 --> 00:11:21,940
but we are past that we are moving into

00:11:19,810 --> 00:11:25,990
something else in order to see that

00:11:21,940 --> 00:11:28,090
let's plot this over the years to the

00:11:25,990 --> 00:11:31,480
Liberty to try to find the ages of

00:11:28,090 --> 00:11:39,550
JavaScript and I found four different

00:11:31,480 --> 00:11:44,580
periods number one honestly I don't know

00:11:39,550 --> 00:11:47,940
or how to name it from its inception to

00:11:44,580 --> 00:11:51,190
2007 JavaScript was mostly used as a

00:11:47,940 --> 00:11:52,930
secondary language subscripting thing

00:11:51,190 --> 00:11:55,450
used for animating some forms and

00:11:52,930 --> 00:11:58,030
buttons but that's it there was no real

00:11:55,450 --> 00:12:03,180
ecosystem around it it started to appear

00:11:58,030 --> 00:12:09,760
maybe 2006-2007 then we have the jQuery

00:12:03,180 --> 00:12:14,230
era Ajax all the libraries like

00:12:09,760 --> 00:12:18,670
underscore jQuery the dynamics of the

00:12:14,230 --> 00:12:22,720
web changing and more and more focus

00:12:18,670 --> 00:12:24,820
into JavaScript right this is is anyone

00:12:22,720 --> 00:12:31,090
camera I'm really curious anyone here

00:12:24,820 --> 00:12:33,160
who did JavaScript before 2007 okay all

00:12:31,090 --> 00:12:36,940
of you should be on the stage also some

00:12:33,160 --> 00:12:40,120
of you are already because it's a very

00:12:36,940 --> 00:12:44,650
it's a very long way and in the language

00:12:40,120 --> 00:12:46,000
came had a very nice road from all for

00:12:44,650 --> 00:12:48,540
all these years and is a rather it's

00:12:46,000 --> 00:12:53,440
radically different than it was before

00:12:48,540 --> 00:12:55,210
let me have MVC during this time we

00:12:53,440 --> 00:12:59,410
started working with backbone with

00:12:55,210 --> 00:13:01,990
angular with ember with react do you

00:12:59,410 --> 00:13:05,290
remember the time when react was the V

00:13:01,990 --> 00:13:07,690
in MVC as this is how brutal it was

00:13:05,290 --> 00:13:12,010
advertised on the round the homepage by

00:13:07,690 --> 00:13:16,030
Facebook this tells a lot about how

00:13:12,010 --> 00:13:19,120
powerful MVC was as a concept and now we

00:13:16,030 --> 00:13:21,310
have components but together with

00:13:19,120 --> 00:13:23,440
components we have different conventions

00:13:21,310 --> 00:13:25,660
that we're moving towards and we see

00:13:23,440 --> 00:13:28,420
what the convention was a standard

00:13:25,660 --> 00:13:30,460
but you can all agree that most of the

00:13:28,420 --> 00:13:32,560
MVC framework for so different ones and

00:13:30,460 --> 00:13:36,670
one from another that didn't really

00:13:32,560 --> 00:13:39,550
follow a set of conventions components

00:13:36,670 --> 00:13:43,210
on the other hand our conventions today

00:13:39,550 --> 00:13:45,460
you can't really imagine a very popular

00:13:43,210 --> 00:13:47,500
fountain remotely without components and

00:13:45,460 --> 00:13:49,450
they obey pretty much the same rules so

00:13:47,500 --> 00:13:51,820
we're heading towards the convention

00:13:49,450 --> 00:13:55,000
with components but then we have other

00:13:51,820 --> 00:14:00,190
things spawned like uni-directional data

00:13:55,000 --> 00:14:02,160
flows right the idea of flocks or which

00:14:00,190 --> 00:14:05,110
spawned into Redux

00:14:02,160 --> 00:14:07,150
observables are exist up like that which

00:14:05,110 --> 00:14:09,100
are moving towards the convention right

00:14:07,150 --> 00:14:13,060
all the libraries are obeying the same

00:14:09,100 --> 00:14:16,600
set of conventions things like how we

00:14:13,060 --> 00:14:19,270
handle CSS now CSS in JavaScript again a

00:14:16,600 --> 00:14:23,830
convention on top of which all the

00:14:19,270 --> 00:14:27,370
libraries are being built so if we

00:14:23,830 --> 00:14:30,520
separate these two eras we understand

00:14:27,370 --> 00:14:33,460
how better that MVC or the era in which

00:14:30,520 --> 00:14:37,840
we felt the fatigue we still fill it

00:14:33,460 --> 00:14:39,910
today because it's we tend to live in

00:14:37,840 --> 00:14:43,780
the past that's that's the sad reality

00:14:39,910 --> 00:14:45,580
we tend to think of okay I have I have

00:14:43,780 --> 00:14:47,440
this project which was written three

00:14:45,580 --> 00:14:50,530
years ago in angular one I have to

00:14:47,440 --> 00:14:52,510
operate it that's the wrong way of

00:14:50,530 --> 00:14:54,310
thinking okay it's something that you

00:14:52,510 --> 00:14:58,320
have to do but it's not something that

00:14:54,310 --> 00:15:04,060
you should blame react for or angular to

00:14:58,320 --> 00:15:06,640
what we have today is a better error we

00:15:04,060 --> 00:15:09,040
don't live in to the front we don't live

00:15:06,640 --> 00:15:14,710
in to the job to fatigue world if you

00:15:09,040 --> 00:15:18,340
ask me this is the Oh Paul maybe you can

00:15:14,710 --> 00:15:19,540
help me here with a claw Lou's castle in

00:15:18,340 --> 00:15:24,490
central France

00:15:19,540 --> 00:15:28,710
I have no French skills this is the

00:15:24,490 --> 00:15:32,080
place where Leonardo da Vinci retreated

00:15:28,710 --> 00:15:33,870
towards the end of his life this is what

00:15:32,080 --> 00:15:37,790
he developed a lot of interesting

00:15:33,870 --> 00:15:40,010
prototypes and inventions

00:15:37,790 --> 00:15:44,590
this is where she built things like the

00:15:40,010 --> 00:15:51,440
helicopter or the revolving bridge or

00:15:44,590 --> 00:15:54,140
the tank or even things like um there's

00:15:51,440 --> 00:15:55,880
a prototype for an airplane and for

00:15:54,140 --> 00:16:01,100
parachute right think about it a

00:15:55,880 --> 00:16:04,300
parachute to jump from what okay he was

00:16:01,100 --> 00:16:07,820
a visionary and he built this concept

00:16:04,300 --> 00:16:12,100
that he thought one day will actually

00:16:07,820 --> 00:16:15,620
exist in and let's say mainstream and

00:16:12,100 --> 00:16:17,750
think how frustrating would have been

00:16:15,620 --> 00:16:21,560
for da Vinci to work on this prototype

00:16:17,750 --> 00:16:25,970
to show them to the world and people

00:16:21,560 --> 00:16:29,300
saying dude it sounds really cool I

00:16:25,970 --> 00:16:31,700
would like to use this but I feel so

00:16:29,300 --> 00:16:35,510
fatigued by all these cool things that

00:16:31,700 --> 00:16:38,450
you're building we are fine with

00:16:35,510 --> 00:16:41,840
watching Mona Lisa really we don't need

00:16:38,450 --> 00:16:46,670
all these things now okay I know it's a

00:16:41,840 --> 00:16:49,070
very very eccentric let's say parallel

00:16:46,670 --> 00:16:51,710
but think of now think of this in terms

00:16:49,070 --> 00:16:53,720
of today's ecosystem and worried what is

00:16:51,710 --> 00:16:56,540
happening think of all the people that

00:16:53,720 --> 00:17:01,070
put great effort into the conventions

00:16:56,540 --> 00:17:02,930
that we have into the components people

00:17:01,070 --> 00:17:05,390
behind frameworks people behind

00:17:02,930 --> 00:17:07,040
libraries behind ideas people that you

00:17:05,390 --> 00:17:09,140
see them already working on different

00:17:07,040 --> 00:17:10,550
things in the ecosystem they don't just

00:17:09,140 --> 00:17:12,230
have their framework and they want you

00:17:10,550 --> 00:17:15,230
to use their framework because that's

00:17:12,230 --> 00:17:21,080
the best they try to work and actually

00:17:15,230 --> 00:17:25,310
move the ecosystem further so I think we

00:17:21,080 --> 00:17:29,390
should renounce this JavaScript fatigue

00:17:25,310 --> 00:17:34,010
term because we live in the dr.

00:17:29,390 --> 00:17:36,940
brennan's area where we have all these

00:17:34,010 --> 00:17:36,940
wonderful tools

00:17:36,970 --> 00:17:44,510
that we need to use but okay so I'm

00:17:42,290 --> 00:17:46,610
really happy that you agree with me but

00:17:44,510 --> 00:17:50,660
this is not the end of the talk because

00:17:46,610 --> 00:17:55,280
I wanted I whenever you have something

00:17:50,660 --> 00:17:57,860
to prove I think that you should once

00:17:55,280 --> 00:18:01,070
you prove it you should ask yourself now

00:17:57,860 --> 00:18:03,590
what what's like I proved to you that

00:18:01,070 --> 00:18:05,540
there's no JavaScript fatigue so what's

00:18:03,590 --> 00:18:07,340
the point of it because just proving

00:18:05,540 --> 00:18:10,820
something doesn't solve problems doesn't

00:18:07,340 --> 00:18:14,720
actually move something further think

00:18:10,820 --> 00:18:17,960
that now we should look a bit at this

00:18:14,720 --> 00:18:22,700
entire period then see how it helped us

00:18:17,960 --> 00:18:24,860
as professionals if it helped us and

00:18:22,700 --> 00:18:25,910
this is the question I've been having

00:18:24,860 --> 00:18:27,230
this is a question that's been bugging

00:18:25,910 --> 00:18:29,150
me for a year are we better

00:18:27,230 --> 00:18:31,960
professionals because we've been through

00:18:29,150 --> 00:18:34,070
all this

00:18:31,960 --> 00:18:35,780
fatigue world or all these

00:18:34,070 --> 00:18:40,640
transformations that the ecosystem

00:18:35,780 --> 00:18:44,000
suffered and I think yes but not just

00:18:40,640 --> 00:18:47,090
because okay that's one from the top of

00:18:44,000 --> 00:18:50,450
my head an answer I have a few lessons

00:18:47,090 --> 00:18:53,450
that I think we learned along along the

00:18:50,450 --> 00:18:55,390
way which I'd like to share with you and

00:18:53,450 --> 00:19:00,440
for that I'm going to need my assistance

00:18:55,390 --> 00:19:02,300
Alice and Bob alice is a front-end

00:19:00,440 --> 00:19:08,809
developer bob is a back-end developer

00:19:02,300 --> 00:19:12,559
and they work in before 2011 they work

00:19:08,809 --> 00:19:15,350
in the era of of jQuery Alice does

00:19:12,559 --> 00:19:20,380
mostly HTML CSS front-end kind of thing

00:19:15,350 --> 00:19:25,070
where bob is a ruby or a PHP developer

00:19:20,380 --> 00:19:26,900
working with the backend so the first

00:19:25,070 --> 00:19:30,170
transformation that occurred during this

00:19:26,900 --> 00:19:34,540
time or the first thing that they had to

00:19:30,170 --> 00:19:37,880
do is learn to collaborate they became

00:19:34,540 --> 00:19:40,690
JavaScript developers because we did not

00:19:37,880 --> 00:19:46,990
have the idea of a JavaScript developer

00:19:40,690 --> 00:19:50,080
before 2007 I think this is

00:19:46,990 --> 00:19:52,450
first lesson they they brought things

00:19:50,080 --> 00:19:55,390
different things on the table Alice

00:19:52,450 --> 00:19:58,750
brought from the fronton world attention

00:19:55,390 --> 00:20:02,650
to detail orientation towards the

00:19:58,750 --> 00:20:04,870
customer towards the user experience Bob

00:20:02,650 --> 00:20:09,900
brought the rigour ASSA T of a back-end

00:20:04,870 --> 00:20:12,370
language LS USB HP developer but anyway

00:20:09,900 --> 00:20:17,309
sorry I feel so bad for the PHP

00:20:12,370 --> 00:20:22,630
developers will keep mocking them okay

00:20:17,309 --> 00:20:25,030
so lesson 1 we learn from each other we

00:20:22,630 --> 00:20:27,429
came into this world of JavaScript with

00:20:25,030 --> 00:20:29,320
different skills we put our skills on

00:20:27,429 --> 00:20:32,580
the table and we took what's best out of

00:20:29,320 --> 00:20:37,450
them the JavaScript developers of today

00:20:32,580 --> 00:20:40,150
did not exist 10 years ago so it's

00:20:37,450 --> 00:20:42,340
something that that something that

00:20:40,150 --> 00:20:44,980
appeared out of the best practices or

00:20:42,340 --> 00:20:50,520
out of the good practices of different

00:20:44,980 --> 00:20:50,520
roles and responsibilities on projects

00:20:51,059 --> 00:20:56,580
moving ahead Alice and Bob start to

00:20:54,040 --> 00:20:58,780
learn further on front-end

00:20:56,580 --> 00:21:00,370
for start to learn JavaScript in the

00:20:58,780 --> 00:21:03,280
front and more and more JavaScript as

00:21:00,370 --> 00:21:04,870
the years go by and they start learning

00:21:03,280 --> 00:21:07,059
backbone which is one of the first

00:21:04,870 --> 00:21:10,270
frameworks and that's like the learning

00:21:07,059 --> 00:21:12,880
curve for backbone right they start from

00:21:10,270 --> 00:21:14,980
scratch because they have no idea how

00:21:12,880 --> 00:21:18,250
what a JavaScript framework is after

00:21:14,980 --> 00:21:21,790
what's a single page application so it

00:21:18,250 --> 00:21:24,490
takes the hottest time and then Bob one

00:21:21,790 --> 00:21:27,970
day sets out to learn angular for the

00:21:24,490 --> 00:21:29,740
curve drops close to zero because he has

00:21:27,970 --> 00:21:31,900
to relearn a lot of new things he has to

00:21:29,740 --> 00:21:33,790
understand how what the hell is two-way

00:21:31,900 --> 00:21:35,650
binding what's the directive what to

00:21:33,790 --> 00:21:41,590
serve these things that did not exist in

00:21:35,650 --> 00:21:44,309
backbone then he moved to react and he's

00:21:41,590 --> 00:21:46,870
caught up in this ever-changing

00:21:44,309 --> 00:21:49,150
framework world where he always has to

00:21:46,870 --> 00:21:51,340
go down to zero or close to zero and

00:21:49,150 --> 00:21:55,090
relearn everything again and again and

00:21:51,340 --> 00:21:59,050
again Alice here also start to learn

00:21:55,090 --> 00:22:00,760
angular and she realizes that this

00:21:59,050 --> 00:22:02,710
happened before with by

00:22:00,760 --> 00:22:05,770
bone so she doesn't want to make the

00:22:02,710 --> 00:22:10,240
same mistakes so she learn something

00:22:05,770 --> 00:22:13,690
else called JavaScript we will see in a

00:22:10,240 --> 00:22:15,880
moment what that is exactly but she

00:22:13,690 --> 00:22:20,020
learns some concepts she learns the

00:22:15,880 --> 00:22:21,970
language he learns ideas that transcend

00:22:20,020 --> 00:22:26,830
the framework world that go from one

00:22:21,970 --> 00:22:29,170
framework to another so now Alice sorry

00:22:26,830 --> 00:22:32,670
while Bob continues his ever-growing

00:22:29,170 --> 00:22:37,720
quest for what's the next hot framework

00:22:32,670 --> 00:22:39,790
Alice has much spent less time learning

00:22:37,720 --> 00:22:42,880
frameworks now and learning how to use

00:22:39,790 --> 00:22:46,360
frameworks so she can move on also to

00:22:42,880 --> 00:22:49,300
the next framework is even it B but you

00:22:46,360 --> 00:22:53,650
see what's happening here they reached

00:22:49,300 --> 00:22:57,550
at the same point in time at the same

00:22:53,650 --> 00:23:06,370
level who do you think has the advantage

00:22:57,550 --> 00:23:10,330
now okay this is what's happening even

00:23:06,370 --> 00:23:12,970
today if if you are focusing on on core

00:23:10,330 --> 00:23:15,430
skills if you think that maybe you're

00:23:12,970 --> 00:23:18,100
wasting time understanding all the

00:23:15,430 --> 00:23:20,380
aspects of the language all the idea

00:23:18,100 --> 00:23:22,660
behind components the theory behind it

00:23:20,380 --> 00:23:24,340
you might think that okay I'm wasting

00:23:22,660 --> 00:23:27,220
time right while others are learning

00:23:24,340 --> 00:23:30,250
frameworks and I see there is my friend

00:23:27,220 --> 00:23:32,110
here also who also has three months of

00:23:30,250 --> 00:23:34,150
stem experiences I do knows the same

00:23:32,110 --> 00:23:36,610
stuff as I do right because he knows

00:23:34,150 --> 00:23:41,290
also backbone and angular and react so

00:23:36,610 --> 00:23:44,860
so do i but trust me I will always pick

00:23:41,290 --> 00:23:48,910
Alice over Bob to work with because I

00:23:44,860 --> 00:23:51,520
know that Alice now has a bigger

00:23:48,910 --> 00:23:58,620
advantage moving ahead I will just at

00:23:51,520 --> 00:24:02,080
the beginning of our of our path here so

00:23:58,620 --> 00:24:04,960
what is that JavaScript thing because it

00:24:02,080 --> 00:24:09,610
was a very generic thing well you start

00:24:04,960 --> 00:24:13,870
from JavaScript this is the the the core

00:24:09,610 --> 00:24:16,490
write to the language the the syntax the

00:24:13,870 --> 00:24:21,770
everything will vote revolving the the

00:24:16,490 --> 00:24:23,720
language itself we put on top a few

00:24:21,770 --> 00:24:26,830
programming paradigms like functional

00:24:23,720 --> 00:24:29,270
programming object-oriented programming

00:24:26,830 --> 00:24:31,370
asynchronous programming as the

00:24:29,270 --> 00:24:37,040
asynchronous nature of JavaScript we

00:24:31,370 --> 00:24:41,080
understand these skills also then we go

00:24:37,040 --> 00:24:46,100
to concepts in our ecosystem things like

00:24:41,080 --> 00:24:50,140
components things like flux like virtual

00:24:46,100 --> 00:24:52,610
dog what a virtual Dom is what it does

00:24:50,140 --> 00:24:54,790
moving ahead with directions I

00:24:52,610 --> 00:24:58,310
progressive web app offline applications

00:24:54,790 --> 00:25:00,890
web pack as not necessarily the library

00:24:58,310 --> 00:25:04,040
but more like the idea of module

00:25:00,890 --> 00:25:08,030
bundling and building yourself the set

00:25:04,040 --> 00:25:11,060
up for a project then come the

00:25:08,030 --> 00:25:12,500
frameworks and the libraries that we use

00:25:11,060 --> 00:25:16,430
whether they are front-end or back-end

00:25:12,500 --> 00:25:21,560
or whether it's electron or doesn't

00:25:16,430 --> 00:25:24,050
matter what matters is that you should

00:25:21,560 --> 00:25:26,270
always start from the center and take

00:25:24,050 --> 00:25:29,660
each step while one step at a time

00:25:26,270 --> 00:25:31,700
never skip a stage because you skip a

00:25:29,660 --> 00:25:34,160
stage you end up like Bob Bob is

00:25:31,700 --> 00:25:36,020
actually just trying to penetrate the

00:25:34,160 --> 00:25:37,760
circles from the outside just grabbing

00:25:36,020 --> 00:25:40,060
react okay now I learned react and

00:25:37,760 --> 00:25:43,130
grabbing angular now I learn angular

00:25:40,060 --> 00:25:46,280
Alice started from the center and she

00:25:43,130 --> 00:25:48,020
has a much good foundation now on which

00:25:46,280 --> 00:25:52,880
to build and this is the lesson number

00:25:48,020 --> 00:25:57,650
two these things write again these

00:25:52,880 --> 00:26:00,590
things won't exist in a few years maybe

00:25:57,650 --> 00:26:02,930
not all of them but they will die

00:26:00,590 --> 00:26:06,070
frameworks come and die libraries come

00:26:02,930 --> 00:26:08,840
and die the concept behind them stay

00:26:06,070 --> 00:26:11,000
once we have this move in the JavaScript

00:26:08,840 --> 00:26:12,830
go from configuration from

00:26:11,000 --> 00:26:14,990
configurability to a conventional

00:26:12,830 --> 00:26:18,710
thinking once we think in terms of this

00:26:14,990 --> 00:26:20,920
concepts that repeat themselves these

00:26:18,710 --> 00:26:23,360
become our transferable knowledge

00:26:20,920 --> 00:26:26,340
knowledge that gets transferred from one

00:26:23,360 --> 00:26:29,700
framework to another without losing any

00:26:26,340 --> 00:26:33,810
diamond or any effort was like starting

00:26:29,700 --> 00:26:35,790
with an advantage already this is lesson

00:26:33,810 --> 00:26:41,940
number two we've built on strong

00:26:35,790 --> 00:26:43,830
foundation we teach others to learn the

00:26:41,940 --> 00:26:45,720
right way to learn start from the core

00:26:43,830 --> 00:26:48,600
starts from the concepts and to build

00:26:45,720 --> 00:26:51,780
our our knowledge on a strong foundation

00:26:48,600 --> 00:26:59,390
and everything we learn then we can put

00:26:51,780 --> 00:27:02,490
on top of that lesson number three is

00:26:59,390 --> 00:27:05,820
related to how we interact with each

00:27:02,490 --> 00:27:07,800
other because in all that errors at time

00:27:05,820 --> 00:27:12,120
of chaos and configuration and lack of

00:27:07,800 --> 00:27:16,380
convention we had to learn things by

00:27:12,120 --> 00:27:21,000
ourselves and Alice and Bob let's say

00:27:16,380 --> 00:27:23,400
they meet up at the conference and Alice

00:27:21,000 --> 00:27:25,680
debates that they need she needs or we

00:27:23,400 --> 00:27:32,220
need types in JavaScript while bob says

00:27:25,680 --> 00:27:36,360
that we don't need types and they argue

00:27:32,220 --> 00:27:40,310
they are debate over this which is

00:27:36,360 --> 00:27:43,800
totally okay and there are two outcomes

00:27:40,310 --> 00:27:47,700
they either agree or they disagree of

00:27:43,800 --> 00:27:49,620
course so one one idea is that they

00:27:47,700 --> 00:27:52,440
agree and they both start using

00:27:49,620 --> 00:27:54,870
typescript they they both discover what

00:27:52,440 --> 00:27:57,210
type script is about why they need tie

00:27:54,870 --> 00:28:00,740
script to to bring types to JavaScript

00:27:57,210 --> 00:28:04,470
so they agree or they can disagree and

00:28:00,740 --> 00:28:07,140
Alice who is still convinced that types

00:28:04,470 --> 00:28:10,860
are good she uses type scripts and Bob

00:28:07,140 --> 00:28:15,800
doesn't any outcome is fine that's the

00:28:10,860 --> 00:28:18,840
beauty of a non-conventional ecosystem

00:28:15,800 --> 00:28:21,800
nobody has to tell you you have to do it

00:28:18,840 --> 00:28:24,840
this way right nobody in the java world

00:28:21,800 --> 00:28:28,980
asks themselves like maybe we actually

00:28:24,840 --> 00:28:31,020
don't need classes in Java in Java and I

00:28:28,980 --> 00:28:33,900
don't know if there's a Java developer

00:28:31,020 --> 00:28:38,010
that actually has this question he

00:28:33,900 --> 00:28:39,950
should start learning JavaScript but so

00:28:38,010 --> 00:28:44,390
that the outcome is not important here

00:28:39,950 --> 00:28:47,750
it's these dead matters two sides first

00:28:44,390 --> 00:28:49,910
we learn first we dig dig down into the

00:28:47,750 --> 00:28:51,590
problem this is of course also a source

00:28:49,910 --> 00:28:54,920
of fatigue and exhaustion it's

00:28:51,590 --> 00:28:57,410
absolutely natural but we learn things

00:28:54,920 --> 00:29:01,880
the hard way and this makes us better as

00:28:57,410 --> 00:29:04,190
professionals and once we learn we do we

00:29:01,880 --> 00:29:05,840
don't just do because someone says this

00:29:04,190 --> 00:29:08,090
is the convention you have to work by

00:29:05,840 --> 00:29:10,010
this convention so this is what I think

00:29:08,090 --> 00:29:13,060
molded us into better professionals this

00:29:10,010 --> 00:29:17,900
is less than number three learn by doing

00:29:13,060 --> 00:29:20,390
and you notice that these lessons are

00:29:17,900 --> 00:29:22,550
also in line with what Paul was

00:29:20,390 --> 00:29:25,760
mentioning in the morning about the

00:29:22,550 --> 00:29:29,150
missions of communities and the idea of

00:29:25,760 --> 00:29:32,810
of meetups and conferences and why we do

00:29:29,150 --> 00:29:36,190
what we do because the lessons if I'm

00:29:32,810 --> 00:29:40,930
going to to recap them are we share

00:29:36,190 --> 00:29:45,860
things so we learn from each other we

00:29:40,930 --> 00:29:48,470
teach the right concepts and we learn by

00:29:45,860 --> 00:29:50,360
doing right sharing learning and

00:29:48,470 --> 00:29:53,300
teaching these are the core values of

00:29:50,360 --> 00:29:55,550
the JavaScript ecosystem and the core

00:29:53,300 --> 00:30:01,130
values of our community and those

00:29:55,550 --> 00:30:06,160
communities worldwide I think all this

00:30:01,130 --> 00:30:09,200
all leads into something like all

00:30:06,160 --> 00:30:12,950
developer maturity or ecosystem maturity

00:30:09,200 --> 00:30:16,610
this is it's down the road right

00:30:12,950 --> 00:30:19,160
we haven't entirely reached there but we

00:30:16,610 --> 00:30:21,290
have it in sight for the first time or

00:30:19,160 --> 00:30:23,810
we have it in sight ever since 2015

00:30:21,290 --> 00:30:26,810
which was that point where we switched

00:30:23,810 --> 00:30:30,470
to a conventional thinking and this

00:30:26,810 --> 00:30:32,090
maturity is visible everywhere in the in

00:30:30,470 --> 00:30:35,810
the JavaScript world today because we

00:30:32,090 --> 00:30:37,580
have complex applications we have people

00:30:35,810 --> 00:30:41,990
starting to focus on important things

00:30:37,580 --> 00:30:45,220
and in terms of maturity

00:30:41,990 --> 00:30:48,410
there's this tweet from Marcus here I

00:30:45,220 --> 00:30:49,760
told you I'm going to use the fit which

00:30:48,410 --> 00:30:51,049
I really liked and it's several lot

00:30:49,760 --> 00:30:56,239
about what

00:30:51,049 --> 00:30:58,460
what amateur on developer should think

00:30:56,239 --> 00:31:01,519
about right right

00:30:58,460 --> 00:31:03,489
fatigue was when we had all that bone

00:31:01,519 --> 00:31:06,830
manipulation spaghetti but there we

00:31:03,489 --> 00:31:10,309
could not test it we could not properly

00:31:06,830 --> 00:31:13,100
look at it as a unit right we had to

00:31:10,309 --> 00:31:16,669
just throw out some ultimate UI

00:31:13,100 --> 00:31:19,509
automation to test that properly noting

00:31:16,669 --> 00:31:23,119
maturity comes in different flavors now

00:31:19,509 --> 00:31:24,769
funny thing I thought few people knew

00:31:23,119 --> 00:31:27,230
about this but then it was mentioned in

00:31:24,769 --> 00:31:29,600
two talks Stanford announced at the

00:31:27,230 --> 00:31:31,549
beginning of the year that the Java a

00:31:29,600 --> 00:31:34,399
computer science class that they have

00:31:31,549 --> 00:31:36,590
basic computer science in which was

00:31:34,399 --> 00:31:39,409
taught in Java is going to be replaced

00:31:36,590 --> 00:31:41,570
with JavaScript because they say that

00:31:39,409 --> 00:31:44,179
it's it's a language that reached a

00:31:41,570 --> 00:31:48,289
certain maturity and from which students

00:31:44,179 --> 00:31:54,830
have a lot to learn yeah so that's what

00:31:48,289 --> 00:31:58,159
it says actually there okay I think we

00:31:54,830 --> 00:32:02,809
have a lot of things still to do but we

00:31:58,159 --> 00:32:04,549
have to be also we have to think of how

00:32:02,809 --> 00:32:08,299
fortunate we are because we have these

00:32:04,549 --> 00:32:13,070
cool and awesome material is available

00:32:08,299 --> 00:32:15,529
for us online one click away whether

00:32:13,070 --> 00:32:17,389
there are online courses online videos

00:32:15,529 --> 00:32:19,970
whether there are talks at conferences

00:32:17,389 --> 00:32:24,440
that you have online there's there's an

00:32:19,970 --> 00:32:25,820
so much knowledge open and now if you

00:32:24,440 --> 00:32:27,730
have to read be thankful for that

00:32:25,820 --> 00:32:29,690
because this is what's keeping the

00:32:27,730 --> 00:32:31,999
ecosystem in motion this is what's

00:32:29,690 --> 00:32:38,649
driving us forward we are able to share

00:32:31,999 --> 00:32:42,200
the ideas like this right and think how

00:32:38,649 --> 00:32:44,830
useful it would have been in the Middle

00:32:42,200 --> 00:32:52,249
Ages or in the actual Renaissance area

00:32:44,830 --> 00:32:54,830
era if they had something like this can

00:32:52,249 --> 00:32:58,399
you imagine a course while you another

00:32:54,830 --> 00:33:01,490
da Vinci on structural engineering can

00:32:58,399 --> 00:33:04,720
you think what a huge difference that

00:33:01,490 --> 00:33:07,059
would have made to the world today

00:33:04,720 --> 00:33:09,220
so think think deeply about this think

00:33:07,059 --> 00:33:11,700
how important it is that we have this

00:33:09,220 --> 00:33:15,700
today and we can take advantage of this

00:33:11,700 --> 00:33:18,309
we need to enjoy the right we need to

00:33:15,700 --> 00:33:22,659
stop referring to the JavaScript world

00:33:18,309 --> 00:33:24,900
as this ugly spaghetti thing fatigue I

00:33:22,659 --> 00:33:28,570
don't want to hear those words anymore

00:33:24,900 --> 00:33:29,710
we are very fortunate to have all the

00:33:28,570 --> 00:33:32,559
learning materials to have the

00:33:29,710 --> 00:33:34,360
communities around us to learn and to

00:33:32,559 --> 00:33:39,159
share and to teach others and to

00:33:34,360 --> 00:33:42,340
progress as humans so I think this will

00:33:39,159 --> 00:33:45,850
allow us to move forward at a match to

00:33:42,340 --> 00:33:49,660
move forward at a much rapid pace than

00:33:45,850 --> 00:33:52,050
it was in history thank

00:33:49,660 --> 00:33:56,109
[Applause]

00:33:52,050 --> 00:33:56,109
[Music]

00:33:59,779 --> 00:34:04,049
okay

00:34:01,249 --> 00:34:06,269
PHP jokes are fun but lots of amazing

00:34:04,049 --> 00:34:08,669
products are using it really of course

00:34:06,269 --> 00:34:10,679
yeah it doesn't make my doesn't matter

00:34:08,669 --> 00:34:13,589
if you're using angular react as long as

00:34:10,679 --> 00:34:16,139
you make great stuff I totally agree

00:34:13,589 --> 00:34:18,750
with this it's not a question yeah

00:34:16,139 --> 00:34:22,099
I really I really agree with this and as

00:34:18,750 --> 00:34:25,379
as tudi was saying there are a lot of

00:34:22,099 --> 00:34:28,200
really nice articles even this year

00:34:25,379 --> 00:34:30,270
about for example how slack is using PHP

00:34:28,200 --> 00:34:33,329
and we posted them on the on the

00:34:30,270 --> 00:34:34,889
community we it's it's just some it's

00:34:33,329 --> 00:34:37,409
not something that we should be making

00:34:34,889 --> 00:34:40,849
fun of and still if you think Facebook

00:34:37,409 --> 00:34:44,490
is using still PHP and a lot of huge

00:34:40,849 --> 00:34:47,929
websites they are still using PHP right

00:34:44,490 --> 00:34:50,819
sit still

00:34:47,929 --> 00:34:53,639
the problem about conventions in open

00:34:50,819 --> 00:34:55,169
systems is that let's say we have 12

00:34:53,639 --> 00:34:56,700
standard so someone decides to solve

00:34:55,169 --> 00:34:59,460
that and we have 30 standard yeah that's

00:34:56,700 --> 00:35:02,790
true that's the how standard probably

00:34:59,460 --> 00:35:04,859
proliferate right yes

00:35:02,790 --> 00:35:06,260
but the idea of having a conventional

00:35:04,859 --> 00:35:09,150
system is that we have one standard

00:35:06,260 --> 00:35:13,530
right we have one standard for the

00:35:09,150 --> 00:35:16,109
language which is es2015 or es2016 our

00:35:13,530 --> 00:35:19,079
es 2017 doesn't matter but it's one

00:35:16,109 --> 00:35:21,359
standard that keeps evolving right and

00:35:19,079 --> 00:35:24,780
each of the concepts that we discussed

00:35:21,359 --> 00:35:27,450
like the components though the

00:35:24,780 --> 00:35:30,089
unidirectional source there one standard

00:35:27,450 --> 00:35:32,510
that is is approached by all the

00:35:30,089 --> 00:35:32,510
frameworks

00:35:33,200 --> 00:35:39,710
when did you felt comfortable enough we

00:35:35,760 --> 00:35:39,710
just could then jump to the next step I

00:35:41,569 --> 00:35:49,609
didn't jump to the next step maybe it

00:35:46,619 --> 00:35:52,730
needs a bit of or am I not getting it it

00:35:49,609 --> 00:35:52,730
needs a

00:35:57,019 --> 00:36:03,839
okay so when you when you think okay

00:36:00,299 --> 00:36:06,029
that yes sorry so when when do you have

00:36:03,839 --> 00:36:09,479
enough knowledge in the core concepts

00:36:06,029 --> 00:36:11,599
that you can move on well I don't think

00:36:09,479 --> 00:36:16,499
that there's a silver bullet for this

00:36:11,599 --> 00:36:18,119
but a lift for this isn't it advisable

00:36:16,499 --> 00:36:20,549
have for the people that are starting

00:36:18,119 --> 00:36:23,959
with JavaScript or that are dead

00:36:20,549 --> 00:36:26,880
recently started I think you should take

00:36:23,959 --> 00:36:30,059
close to your first two years of career

00:36:26,880 --> 00:36:31,589
to make sure that you have to work hard

00:36:30,059 --> 00:36:33,329
on this convention this doesn't mean

00:36:31,589 --> 00:36:34,619
that you don't work with frameworks in

00:36:33,329 --> 00:36:36,779
that time doesn't mean that you don't

00:36:34,619 --> 00:36:39,180
learn frameworks well what it means that

00:36:36,779 --> 00:36:41,849
you should know that whenever you want

00:36:39,180 --> 00:36:44,160
to actually take that extra step and

00:36:41,849 --> 00:36:48,150
learn something new you should focus on

00:36:44,160 --> 00:36:49,380
the core skills so this is my advice so

00:36:48,150 --> 00:36:55,229
at least for the first two years of

00:36:49,380 --> 00:36:59,699
career what phone did you use for the

00:36:55,229 --> 00:37:03,449
presentation I'll I will post it on

00:36:59,699 --> 00:37:06,839
Twitter if you wanted its standard from

00:37:03,449 --> 00:37:08,369
slide comm is the jockey fatigue

00:37:06,839 --> 00:37:10,619
actually coming from the fattest front

00:37:08,369 --> 00:37:12,150
Sanders don't know their structures and

00:37:10,619 --> 00:37:18,690
algorithms well enough compared to back

00:37:12,150 --> 00:37:21,839
and deaths partially yes but I think

00:37:18,690 --> 00:37:24,359
that the world that people that work

00:37:21,839 --> 00:37:25,890
today in JavaScript are also back a

00:37:24,359 --> 00:37:32,309
let's do a show of hands how many of you

00:37:25,890 --> 00:37:34,920
started from back end here okay so yes

00:37:32,309 --> 00:37:36,449
it has the question I think yeah for

00:37:34,920 --> 00:37:38,819
frontage developers it was it was harder

00:37:36,449 --> 00:37:40,890
to grasp at first but now as we work as

00:37:38,819 --> 00:37:44,759
octave developers I think we're past

00:37:40,890 --> 00:37:46,979
that we branded the line basically how

00:37:44,759 --> 00:37:48,569
are we heading towards convention yes we

00:37:46,979 --> 00:37:49,769
shifted the panel towards the component

00:37:48,569 --> 00:37:54,239
of relativist everything is so

00:37:49,769 --> 00:37:56,279
opinionated well you could say that a

00:37:54,239 --> 00:37:59,809
convention is also opinionated because

00:37:56,279 --> 00:38:02,400
there some subject matter experts this

00:37:59,809 --> 00:38:04,529
agreed that okay this is the the right

00:38:02,400 --> 00:38:07,499
way to do it or prove that this is the

00:38:04,529 --> 00:38:09,040
right way to do it I don't think that

00:38:07,499 --> 00:38:15,630
they are opposed

00:38:09,040 --> 00:38:21,250
he won once why are we C 2011

00:38:15,630 --> 00:38:22,360
y-components 2015 well MVC as a VC on

00:38:21,250 --> 00:38:25,590
the front and right on it in the

00:38:22,360 --> 00:38:28,750
JavaScript world really kicked in around

00:38:25,590 --> 00:38:30,670
okay it was 2009 I think already there

00:38:28,750 --> 00:38:36,820
were some ideas but it really kicked in

00:38:30,670 --> 00:38:40,270
with angular 2011 and components 2015 I

00:38:36,820 --> 00:38:43,990
think 2015 was like the that inflection

00:38:40,270 --> 00:38:45,430
point in history where like that was the

00:38:43,990 --> 00:38:48,160
year that most of you remember as the

00:38:45,430 --> 00:38:49,930
fatigue year when things like there was

00:38:48,160 --> 00:38:51,820
first of all the standardization of the

00:38:49,930 --> 00:38:54,010
language which caught everybody by

00:38:51,820 --> 00:38:56,470
surprise though we have a new standard

00:38:54,010 --> 00:39:00,550
now and then it was all the frameworks

00:38:56,470 --> 00:39:03,040
that were different at that time and

00:39:00,550 --> 00:39:06,700
react came with components which were

00:39:03,040 --> 00:39:08,890
around since 2012 as an idea in what

00:39:06,700 --> 00:39:11,380
components but they just created a

00:39:08,890 --> 00:39:13,300
better way of expressing components so I

00:39:11,380 --> 00:39:16,990
think if you look closely

00:39:13,300 --> 00:39:19,450
ever since 2015 the ecosystem is moving

00:39:16,990 --> 00:39:22,690
into this convention of thinking if you

00:39:19,450 --> 00:39:24,880
look at how what how different angular

00:39:22,690 --> 00:39:27,730
one is for example compared to react and

00:39:24,880 --> 00:39:30,000
how similar angular 2 is now with react

00:39:27,730 --> 00:39:32,230
and I think if you really look at it it

00:39:30,000 --> 00:39:35,440
says a lot about moving towards

00:39:32,230 --> 00:39:38,110
conventions or the MVC for front-end a

00:39:35,440 --> 00:39:40,420
bad idea that's a very good question I

00:39:38,110 --> 00:39:46,120
wrote this article maybe some of you

00:39:40,420 --> 00:39:48,910
read it on if saying that MVC is dead

00:39:46,120 --> 00:39:52,660
for the front-end and in this article

00:39:48,910 --> 00:39:55,990
III I suggested that we approach them we

00:39:52,660 --> 00:39:58,050
see because we had no knowledge of how

00:39:55,990 --> 00:40:00,550
okay what do we do now we have these

00:39:58,050 --> 00:40:01,990
capabilities of building jobs with that

00:40:00,550 --> 00:40:05,500
but we don't know how to structure them

00:40:01,990 --> 00:40:08,800
so MVC was a very is still probably the

00:40:05,500 --> 00:40:11,560
best choice for a monolithic back-end

00:40:08,800 --> 00:40:14,680
application so we naturally adopted it

00:40:11,560 --> 00:40:16,630
in the frame front-end world so it

00:40:14,680 --> 00:40:19,060
wasn't a bad idea because I think it

00:40:16,630 --> 00:40:22,010
spawned a lot of a lot of good

00:40:19,060 --> 00:40:24,130
frameworks and it it

00:40:22,010 --> 00:40:30,619
it sparked into the evolution of

00:40:24,130 --> 00:40:33,020
JavaScript wasn't time to see the

00:40:30,619 --> 00:40:34,250
convention until 2016 until components

00:40:33,020 --> 00:40:39,440
were adopted on the clients when they

00:40:34,250 --> 00:40:43,040
stopped being yes yeah at NBC was the

00:40:39,440 --> 00:40:46,300
convention basically but again you

00:40:43,040 --> 00:40:50,540
wouldn't you couldn't really say that

00:40:46,300 --> 00:40:52,369
things were moving into towards a set of

00:40:50,540 --> 00:40:55,640
conventions or towards a certain

00:40:52,369 --> 00:40:59,270
convention because framework for doing

00:40:55,640 --> 00:41:03,080
MVC differently it was mvvm and MVC and

00:40:59,270 --> 00:41:06,530
MVP and then be something else things

00:41:03,080 --> 00:41:09,320
like if you it was harder at least

00:41:06,530 --> 00:41:12,290
that's my feeling is harder to jump from

00:41:09,320 --> 00:41:16,460
angular to ember for example or from

00:41:12,290 --> 00:41:19,250
ember to backbone compared to how it is

00:41:16,460 --> 00:41:21,800
today to to jump from angular to to

00:41:19,250 --> 00:41:23,990
react where you again you focus on on

00:41:21,800 --> 00:41:27,310
the concepts behind and you understand

00:41:23,990 --> 00:41:27,310
that they're pretty much the same thing

00:41:28,330 --> 00:41:37,010
our components the right direction yes

00:41:33,830 --> 00:41:40,430
for now I think they have the right

00:41:37,010 --> 00:41:43,280
direction I think it I think only time

00:41:40,430 --> 00:41:44,930
will tell is if we are actually moving

00:41:43,280 --> 00:41:46,940
in the wrong direction but I think that

00:41:44,930 --> 00:41:48,850
there are signals that we are actually

00:41:46,940 --> 00:41:52,460
moving in the right way

00:41:48,850 --> 00:41:55,640
components and the idea of composing

00:41:52,460 --> 00:41:59,330
what the word the action everything is

00:41:55,640 --> 00:42:02,890
for the best of things to happen if you

00:41:59,330 --> 00:42:05,600
think of functional programming right

00:42:02,890 --> 00:42:09,230
composing functions that's that's the

00:42:05,600 --> 00:42:12,290
it's a push towards composability object

00:42:09,230 --> 00:42:15,859
related programming JavaScript teaches

00:42:12,290 --> 00:42:18,619
us now that object that composability is

00:42:15,859 --> 00:42:20,000
better than inheritance right before

00:42:18,619 --> 00:42:22,490
composition over inheritance these are

00:42:20,000 --> 00:42:25,280
very old things from the from the Gang

00:42:22,490 --> 00:42:27,500
of Four book 1995 what we are living it

00:42:25,280 --> 00:42:29,000
today that we work with components and

00:42:27,500 --> 00:42:31,340
we focus on components I think it's not

00:42:29,000 --> 00:42:35,140
just web components or not just

00:42:31,340 --> 00:42:36,700
components as UI components the idea of

00:42:35,140 --> 00:42:41,920
the idea behind us that's that's the

00:42:36,700 --> 00:42:47,279
power of it should we move away from

00:42:41,920 --> 00:42:50,650
jQuery no no no we shouldn't if

00:42:47,279 --> 00:42:56,829
something works with jQuery let it work

00:42:50,650 --> 00:42:59,890
with jQuery I I was discussing few

00:42:56,829 --> 00:43:04,569
nights ago with someone that we built

00:42:59,890 --> 00:43:07,839
this application at the company two

00:43:04,569 --> 00:43:10,390
years three years ago or so and since

00:43:07,839 --> 00:43:14,279
it's more than two years now that the

00:43:10,390 --> 00:43:16,779
app is running is written in angular 1

00:43:14,279 --> 00:43:19,660
nobody touched the codebase in

00:43:16,779 --> 00:43:23,259
production there is no upgrade no deploy

00:43:19,660 --> 00:43:25,299
no nothing the people let's know how to

00:43:23,259 --> 00:43:27,309
deploy it left to the company so if we

00:43:25,299 --> 00:43:29,289
want to actually read it it's an

00:43:27,309 --> 00:43:31,989
internal tool so we don't think that we

00:43:29,289 --> 00:43:34,390
do crappy work so it's an internal tool

00:43:31,989 --> 00:43:39,789
but it's still being used by internal

00:43:34,390 --> 00:43:43,660
department by by HR even today without a

00:43:39,789 --> 00:43:49,900
flaw the angular one is it's working

00:43:43,660 --> 00:43:52,569
why upgrade do you think a and about

00:43:49,900 --> 00:43:56,200
jQuery one more thought jQuery is one of

00:43:52,569 --> 00:43:58,450
the best design libraries ever if you

00:43:56,200 --> 00:44:00,549
ever want to test your JavaScript skills

00:43:58,450 --> 00:44:02,650
take a look at the code base of jQuery

00:44:00,549 --> 00:44:05,140
it has some of the greatest design

00:44:02,650 --> 00:44:09,369
patterns in in JavaScript that you can

00:44:05,140 --> 00:44:12,160
see they're being implemented do you

00:44:09,369 --> 00:44:14,529
think do I still have time for question

00:44:12,160 --> 00:44:17,829
do you think what that will live a long

00:44:14,529 --> 00:44:21,789
time from now on since it wasn't on the

00:44:17,829 --> 00:44:25,059
outer shell of the circle as the

00:44:21,789 --> 00:44:31,059
library itself I actually wanted to put

00:44:25,059 --> 00:44:32,410
it on the on the outer circle but I did

00:44:31,059 --> 00:44:35,170
not know exactly what to put there in

00:44:32,410 --> 00:44:36,910
inside the idea behind Wepa because it's

00:44:35,170 --> 00:44:39,579
the idea that's powerful and not the

00:44:36,910 --> 00:44:45,460
idea just as using modules but the idea

00:44:39,579 --> 00:44:48,670
of doing project setups with an easy ok

00:44:45,460 --> 00:44:55,410
let's say almost easy to learn configure

00:44:48,670 --> 00:44:58,180
station and I think I think webpack will

00:44:55,410 --> 00:45:01,000
will live on I mean it at this point is

00:44:58,180 --> 00:45:04,089
becoming too important for and too

00:45:01,000 --> 00:45:08,650
widespread it's it's similar to jQuery

00:45:04,089 --> 00:45:10,690
jQuery will not die I can pretty much

00:45:08,650 --> 00:45:13,720
black that ten years from now we will

00:45:10,690 --> 00:45:18,150
have probably even still will have them

00:45:13,720 --> 00:45:18,150
that majority of websites with jQuery

00:45:18,599 --> 00:45:22,450
considering Bob's learning example do

00:45:21,099 --> 00:45:23,920
you think that someone can understand

00:45:22,450 --> 00:45:25,420
the framework built on top of just

00:45:23,920 --> 00:45:29,640
without knowledge of JavaScript

00:45:25,420 --> 00:45:32,200
inaudible not understand that use

00:45:29,640 --> 00:45:36,640
because whatever frameworks do they give

00:45:32,200 --> 00:45:38,349
you this apparent power you feel

00:45:36,640 --> 00:45:40,630
powerful when building when using a

00:45:38,349 --> 00:45:43,420
framework like learn angular in 30

00:45:40,630 --> 00:45:48,849
seconds with this easy-to-use tutorial

00:45:43,420 --> 00:45:52,210
or learn react in 24 hours or it's it's

00:45:48,849 --> 00:45:56,799
the apparent productivity as well just

00:45:52,210 --> 00:45:59,290
do this blog with react so cool now I

00:45:56,799 --> 00:46:01,750
know react no you don't that's the point

00:45:59,290 --> 00:46:03,369
you have to so that spends true you

00:46:01,750 --> 00:46:04,780
cannot understand a framework without

00:46:03,369 --> 00:46:08,859
understanding the underlying

00:46:04,780 --> 00:46:11,250
abstractions but you can use it a lot of

00:46:08,859 --> 00:46:15,780
people use it and that is a problem

00:46:11,250 --> 00:46:15,780
which we have basically trying to solve

00:46:16,200 --> 00:46:25,540
components are in JavaScript since

00:46:19,230 --> 00:46:28,839
2007-2008 yeah like I said components

00:46:25,540 --> 00:46:33,579
are in the idea of web components dates

00:46:28,839 --> 00:46:35,260
icing from 2011 or so and I also

00:46:33,579 --> 00:46:39,309
disagree tipper let's say that react

00:46:35,260 --> 00:46:42,910
broad components into the world of web

00:46:39,309 --> 00:46:45,790
development because it didn't it's just

00:46:42,910 --> 00:46:47,530
that the the way in which they

00:46:45,790 --> 00:46:51,040
implemented components made components

00:46:47,530 --> 00:46:53,410
mainstream and this is the important

00:46:51,040 --> 00:46:56,890
because if you have a group of people

00:46:53,410 --> 00:46:59,950
that know how to do components is or

00:46:56,890 --> 00:47:01,300
dead knew how to do components in 2011

00:46:59,950 --> 00:47:02,740
that's fine but you

00:47:01,300 --> 00:47:04,300
and have a global movement you don't

00:47:02,740 --> 00:47:06,520
have the ecosystem moving towards that

00:47:04,300 --> 00:47:11,470
this is a very at a very macro level not

00:47:06,520 --> 00:47:13,990
individually speaking both OPN SP can be

00:47:11,470 --> 00:47:19,120
understood without drastic background

00:47:13,990 --> 00:47:22,360
shouldn't they be the core this is a

00:47:19,120 --> 00:47:28,480
tricky one yes they can be understood

00:47:22,360 --> 00:47:33,430
but I don't think that it makes sense to

00:47:28,480 --> 00:47:36,250
learn a paradigm in things like in just

00:47:33,430 --> 00:47:38,530
as an abstracting thing because you need

00:47:36,250 --> 00:47:41,260
to understand how the language actually

00:47:38,530 --> 00:47:43,180
takes advantage of that paradigm and

00:47:41,260 --> 00:47:46,240
without learning functional programming

00:47:43,180 --> 00:47:48,880
in a language you end up with knowing

00:47:46,240 --> 00:47:50,680
math basically or without learning

00:47:48,880 --> 00:47:54,720
understanding object-oriented

00:47:50,680 --> 00:48:02,200
programming in a language it's more like

00:47:54,720 --> 00:48:04,990
UML diagrams I don't know it I think at

00:48:02,200 --> 00:48:07,180
the core dish maybe David should be in

00:48:04,990 --> 00:48:09,570
the same circle right not one without

00:48:07,180 --> 00:48:12,600
another I just wanted to emphasize that

00:48:09,570 --> 00:48:15,370
javascript is at the center because

00:48:12,600 --> 00:48:17,350
think of it four four four people

00:48:15,370 --> 00:48:19,480
starting that it will be very hard for

00:48:17,350 --> 00:48:21,460
someone says okay I wanted to be a

00:48:19,480 --> 00:48:23,470
developer okay take these books on

00:48:21,460 --> 00:48:24,850
functional programming in these books on

00:48:23,470 --> 00:48:26,470
object-oriented programming and then

00:48:24,850 --> 00:48:28,950
I'll tell you what the programming

00:48:26,470 --> 00:48:28,950
languages

00:48:29,640 --> 00:48:37,570
yes Jacque is making us better

00:48:33,100 --> 00:48:41,290
professionals the node echo system

00:48:37,570 --> 00:48:47,890
heading towards convention hmm that's a

00:48:41,290 --> 00:48:51,070
good question not really sure to answer

00:48:47,890 --> 00:48:55,540
because I haven't worked with node in

00:48:51,070 --> 00:48:58,120
the last couple of years months let's

00:48:55,540 --> 00:49:02,440
say so I'm not really up to date with

00:48:58,120 --> 00:49:06,940
that but come join me later and that you

00:49:02,440 --> 00:49:09,280
can start a discussion from this now the

00:49:06,940 --> 00:49:11,680
note letter me and Lauren will be at the

00:49:09,280 --> 00:49:14,040
node corner outside waving the node

00:49:11,680 --> 00:49:14,040
shield

00:49:14,620 --> 00:49:21,170
what will be next where is our keep

00:49:17,180 --> 00:49:23,810
going I don't think that we will see

00:49:21,170 --> 00:49:27,620
another revolution like in 2019 if

00:49:23,810 --> 00:49:31,780
that's the question I think that we will

00:49:27,620 --> 00:49:33,980
go down these set of conventions but

00:49:31,780 --> 00:49:42,730
what will be next

00:49:33,980 --> 00:49:45,670
is most likely in the let's say middle

00:49:42,730 --> 00:49:47,810
future just like okay years from now

00:49:45,670 --> 00:49:52,450
then we're going to see a lot more

00:49:47,810 --> 00:49:53,690
convention on building up towards

00:49:52,450 --> 00:49:56,660
webassembly

00:49:53,690 --> 00:50:00,650
and what's happening now with with the

00:49:56,660 --> 00:50:04,000
push towards webassembly and then in the

00:50:00,650 --> 00:50:07,340
foreseeable I mean the the far future

00:50:04,000 --> 00:50:09,410
honestly I don't think that you

00:50:07,340 --> 00:50:12,790
shouldn't put your money that just it

00:50:09,410 --> 00:50:16,940
will still be here it might be here as a

00:50:12,790 --> 00:50:21,800
platform to run things on things like

00:50:16,940 --> 00:50:25,190
elves for example or we might not code

00:50:21,800 --> 00:50:27,950
in 10 15 years from now there might be

00:50:25,190 --> 00:50:33,070
AI doing that for us I think what's

00:50:27,950 --> 00:50:35,240
important is that we keep these concepts

00:50:33,070 --> 00:50:37,880
remember this this is the knowledgeable

00:50:35,240 --> 00:50:40,730
trance or the transferable knowledge

00:50:37,880 --> 00:50:42,730
that we have we can take this from

00:50:40,730 --> 00:50:46,250
JavaScript and apply it somewhere else

00:50:42,730 --> 00:50:48,500
or at least more than 50% of the

00:50:46,250 --> 00:50:52,790
knowledge we can apply somewhere else

00:50:48,500 --> 00:50:56,090
and we can build from that also deaf

00:50:52,790 --> 00:50:58,010
JavaScript fatigue also comes from the

00:50:56,090 --> 00:50:59,660
tooling used on our project not just the

00:50:58,010 --> 00:51:03,410
overall architecture of the JavaScript

00:50:59,660 --> 00:51:05,840
code yes there is a lot of tooling

00:51:03,410 --> 00:51:08,960
fatigue actually it's one maybe one of

00:51:05,840 --> 00:51:12,770
the most it won't maybe one of the

00:51:08,960 --> 00:51:15,320
biggest drivers for fatigue today so

00:51:12,770 --> 00:51:18,560
people still feel this static today

00:51:15,320 --> 00:51:25,740
because of because of this tooling and

00:51:18,560 --> 00:51:28,320
project setups and we have

00:51:25,740 --> 00:51:31,020
a bit just a bit later we have the alarm

00:51:28,320 --> 00:51:33,570
onstage and he will show you more about

00:51:31,020 --> 00:51:36,300
next J s that's one of the framework

00:51:33,570 --> 00:51:40,740
that actually fighting that part of the

00:51:36,300 --> 00:51:45,660
of the fatigue the setup and and tooling

00:51:40,740 --> 00:51:47,580
the thing flux is here to stay maybe

00:51:45,660 --> 00:51:55,860
something new comes and it runs it

00:51:47,580 --> 00:51:59,100
reflects article 90 C again it's it's

00:51:55,860 --> 00:52:00,600
against a very it's not I don't think

00:51:59,100 --> 00:52:04,050
that there's a straight answer to start

00:52:00,600 --> 00:52:06,240
I my personal opinion is that the flux

00:52:04,050 --> 00:52:09,660
way of thinking is a much is much better

00:52:06,240 --> 00:52:13,260
for for architecting applications for

00:52:09,660 --> 00:52:15,450
building scalable applications that

00:52:13,260 --> 00:52:16,820
that's what matters here right one twine

00:52:15,450 --> 00:52:20,250
when you want to scale when you have a

00:52:16,820 --> 00:52:22,080
blog when you have a basic crud app you

00:52:20,250 --> 00:52:23,670
can do NVC you can do jQuery doesn't

00:52:22,080 --> 00:52:25,380
matter we are thinking we are talking

00:52:23,670 --> 00:52:28,170
here about what it means to scale

00:52:25,380 --> 00:52:31,920
applications what it means to to look

00:52:28,170 --> 00:52:33,330
ahead and think ok my codebase will not

00:52:31,920 --> 00:52:35,160
be the same in five years from now but

00:52:33,330 --> 00:52:37,080
it will follow the same principles to

00:52:35,160 --> 00:52:40,619
follow along the same conventions I'm

00:52:37,080 --> 00:52:44,040
going in the right path with this MVC

00:52:40,619 --> 00:52:45,330
versus components reading the article

00:52:44,040 --> 00:52:48,170
that I wrote I think I talked too much

00:52:45,330 --> 00:52:48,170
about this already

00:52:48,560 --> 00:52:51,570
thank you

00:52:50,120 --> 00:52:55,719
[Applause]

00:52:51,570 --> 00:52:55,719

YouTube URL: https://www.youtube.com/watch?v=O7pnOru0S3E


