Title: OW2con 2011 ConPaaS PART1 Guillaume Pierre
Publication date: 2012-01-09
Playlist: OW2con 2011 ConPaaS, Guillaume Pierre
Description: 
	Speaker: Guilaume Pierre, VU University Amsterdam
Abstract: ConPaaS is an open-source platform-as-a-service environment developed within the Contrail European research project. ConPaaS aims at simplifying the deployment of applications in the Cloud. It is designed as a set of elastic services dedicated to the hosting of a particular type of functionality. A service can be seen as a standalone component of a distributed application: for example, a Web server with a PHP execution module. Each ConPaaS service is self-managed and elastic: it can deploy itself on the Cloud, monitor its own performance, and increase or decrease its processing capacity by dynamically (de-)provisioning instances of itself in the Cloud. Services are designed to be composable: an application can for example use a Web hosting service, a database service to store the internal application state, a file storage service to store access logs, and a MapReduce service to periodically compute statistics from these logs. In this presentation I will give an overview of the overall Contrail project, then focus on ConPaaS: how it can help Cloud application developers, and how it is organized internally.
Captions: 
	00:00:03,560 --> 00:00:09,240
right so my plan was to have a very long

00:00:07,290 --> 00:00:10,679
and boring crustacean with slides I'm

00:00:09,240 --> 00:00:13,080
showing new figures and his car things

00:00:10,679 --> 00:00:14,750
now everyone is showing demos so I'm

00:00:13,080 --> 00:00:17,820
going to shrink the presentation and

00:00:14,750 --> 00:00:22,199
leave some room for a short demo of what

00:00:17,820 --> 00:00:24,150
we have to show so we're all talking

00:00:22,199 --> 00:00:26,220
about the clouds now let's imagine

00:00:24,150 --> 00:00:27,359
you're a cloud developer and you want to

00:00:26,220 --> 00:00:29,580
build your application you want to put

00:00:27,359 --> 00:00:33,420
it on a cloud let's say you go on Amazon

00:00:29,580 --> 00:00:35,730
Web Services well you have a number of

00:00:33,420 --> 00:00:37,860
services over there which are very well

00:00:35,730 --> 00:00:39,780
understood and very well sanitized you

00:00:37,860 --> 00:00:41,610
have ec2 if you want to provision

00:00:39,780 --> 00:00:44,280
virtual machines you have s3 you have a

00:00:41,610 --> 00:00:46,530
few more services and well you know that

00:00:44,280 --> 00:00:49,200
those api's are fairly standards you can

00:00:46,530 --> 00:00:50,579
use eucalyptus that's the same thing you

00:00:49,200 --> 00:00:54,629
have you you have a number of platforms

00:00:50,579 --> 00:00:55,739
which can implement some api's now if

00:00:54,629 --> 00:00:59,070
you build an interesting application

00:00:55,739 --> 00:01:01,739
something that really does something

00:00:59,070 --> 00:01:04,350
useful you may want to use I mean you

00:01:01,739 --> 00:01:08,369
may see that well amazon has a lot of

00:01:04,350 --> 00:01:10,830
other services they have RDS relational

00:01:08,369 --> 00:01:13,500
database oh nice I don't need to run my

00:01:10,830 --> 00:01:15,509
own or secure database just go and use

00:01:13,500 --> 00:01:16,560
our diaz you have a non-relational

00:01:15,509 --> 00:01:19,409
database you have things for

00:01:16,560 --> 00:01:21,000
provisioning for monitoring and the list

00:01:19,409 --> 00:01:23,490
goes on forever right there's a very

00:01:21,000 --> 00:01:25,590
very long list now something which is

00:01:23,490 --> 00:01:28,290
interesting is that all the services are

00:01:25,590 --> 00:01:31,140
unmatched in any other open-source

00:01:28,290 --> 00:01:32,880
platform or even commercial platform so

00:01:31,140 --> 00:01:37,110
those services are very specific to a

00:01:32,880 --> 00:01:39,770
model which means as soon as your are

00:01:37,110 --> 00:01:43,710
going to start using that through this

00:01:39,770 --> 00:01:46,729
were your latte there is no easy way to

00:01:43,710 --> 00:01:49,530
take your application and migrated sauce

00:01:46,729 --> 00:01:52,560
why would you want to do this well

00:01:49,530 --> 00:01:55,350
because that's your right because the

00:01:52,560 --> 00:01:57,899
pricing may change so suddenly amazon

00:01:55,350 --> 00:02:00,930
may be in need of more money and may

00:01:57,899 --> 00:02:03,210
increase the prices they may decide you

00:02:00,930 --> 00:02:04,950
don't like you in the license if you

00:02:03,210 --> 00:02:06,509
read the license carefully you will see

00:02:04,950 --> 00:02:11,550
that they can stop the contract at any

00:02:06,509 --> 00:02:12,720
time they may go out of business the

00:02:11,550 --> 00:02:14,790
dark cloud may go

00:02:12,720 --> 00:02:16,200
for each other technical reason there

00:02:14,790 --> 00:02:19,790
are many reasons why you want the

00:02:16,200 --> 00:02:23,640
ability to move to different platform so

00:02:19,790 --> 00:02:25,290
you may go and find another better cloud

00:02:23,640 --> 00:02:27,930
which has an equivalent to all those

00:02:25,290 --> 00:02:29,580
services now those AP is are probably

00:02:27,930 --> 00:02:31,380
not going to be exactly the same so you

00:02:29,580 --> 00:02:34,170
will have to refactor your application

00:02:31,380 --> 00:02:38,370
you'll have to re-implement both of its

00:02:34,170 --> 00:02:41,010
you have to adjust to the new clouds and

00:02:38,370 --> 00:02:45,930
all this is very doable it just costs

00:02:41,010 --> 00:02:48,840
money and time so this is exactly where

00:02:45,930 --> 00:02:50,459
I think we collectively can help this is

00:02:48,840 --> 00:02:54,930
where open source can help this is

00:02:50,459 --> 00:02:57,740
exactly what we want to do so I'm a part

00:02:54,930 --> 00:03:01,050
of a European project called country and

00:02:57,740 --> 00:03:02,880
the goal of country is to build an open

00:03:01,050 --> 00:03:06,300
source cloud platform maybe some of you

00:03:02,880 --> 00:03:10,590
have attended the Roberto station a few

00:03:06,300 --> 00:03:13,260
hours ago in the other rooms the goal is

00:03:10,590 --> 00:03:15,600
to build an open source class which is

00:03:13,260 --> 00:03:18,950
going to be built on top of open abella

00:03:15,600 --> 00:03:21,720
and we will soon also support OpenStack

00:03:18,950 --> 00:03:24,480
with support for cloud Federation's so I

00:03:21,720 --> 00:03:25,980
feel very much at home when I see all

00:03:24,480 --> 00:03:27,989
those presentations about people showing

00:03:25,980 --> 00:03:30,600
I can deploy my VMS on multiple class

00:03:27,989 --> 00:03:34,410
this is exactly what we need to do in

00:03:30,600 --> 00:03:36,720
order to solve this login problem we

00:03:34,410 --> 00:03:38,820
will have support for cell service level

00:03:36,720 --> 00:03:40,980
agreements so I want to be in control of

00:03:38,820 --> 00:03:43,140
the performance of my application of

00:03:40,980 --> 00:03:46,799
course I want to be able to specify well

00:03:43,140 --> 00:03:50,549
a vm at amazon may not be equivalent to

00:03:46,799 --> 00:03:54,000
a vm at rackspace even though they both

00:03:50,549 --> 00:03:56,160
tell me that this is one unit and i may

00:03:54,000 --> 00:03:58,769
also want to be in control of the

00:03:56,160 --> 00:04:00,720
protection of my data where is my data I

00:03:58,769 --> 00:04:03,140
want my data for legal reason my data

00:04:00,720 --> 00:04:05,670
needs to be let's say within the

00:04:03,140 --> 00:04:08,040
European Union because i work for

00:04:05,670 --> 00:04:09,660
governments and the SDI must not have a

00:04:08,040 --> 00:04:14,100
way to raise a de jure center and

00:04:09,660 --> 00:04:16,109
dignity the data last but not least that

00:04:14,100 --> 00:04:19,229
this is going to be the topic of my

00:04:16,109 --> 00:04:21,989
presentation today is a contrail builds

00:04:19,229 --> 00:04:25,669
on bass which is the platform as a

00:04:21,989 --> 00:04:28,350
service environment for country

00:04:25,669 --> 00:04:30,120
so what is con path when the goal is a

00:04:28,350 --> 00:04:34,550
very ambitious we want to be better than

00:04:30,120 --> 00:04:36,780
Amazon we want to build a fully featured

00:04:34,550 --> 00:04:41,100
platform as a service environments for

00:04:36,780 --> 00:04:43,290
country and for other class as well with

00:04:41,100 --> 00:04:45,540
a lot of functionality is available so

00:04:43,290 --> 00:04:48,510
you'll have application servers for

00:04:45,540 --> 00:04:52,800
static files for PHP for Java we may add

00:04:48,510 --> 00:04:54,720
more you have databases sequel databases

00:04:52,800 --> 00:04:56,419
that will be my sakura you'll have a

00:04:54,720 --> 00:04:59,580
North Pole database called scalar x

00:04:56,419 --> 00:05:02,520
you'll have for scientific applications

00:04:59,580 --> 00:05:05,160
you'll have things like mapreduce or

00:05:02,520 --> 00:05:07,440
bugs of tasks which are both runtime

00:05:05,160 --> 00:05:10,979
environments to crunch numbers really

00:05:07,440 --> 00:05:13,470
fast using PDF resources we want things

00:05:10,979 --> 00:05:16,260
to be integrated meaning that I don't

00:05:13,470 --> 00:05:18,120
want to just have an application servers

00:05:16,260 --> 00:05:20,280
here and a database over there but I

00:05:18,120 --> 00:05:23,100
want the platform to realize oh this is

00:05:20,280 --> 00:05:25,229
all together a ton application which is

00:05:23,100 --> 00:05:26,639
composed of multiple elements but i will

00:05:25,229 --> 00:05:30,720
still recognize this as a dry

00:05:26,639 --> 00:05:32,669
application we want the system to be

00:05:30,720 --> 00:05:35,340
very easy to use i'm going to show you

00:05:32,669 --> 00:05:36,840
the GUI in just a second but you can

00:05:35,340 --> 00:05:39,600
also script everything because

00:05:36,840 --> 00:05:41,880
everything goes through restful api is

00:05:39,600 --> 00:05:44,789
so you can script and go through kannada

00:05:41,880 --> 00:05:48,050
come on line oops by the way all those

00:05:44,789 --> 00:05:50,880
services i'm going to show you are

00:05:48,050 --> 00:05:53,400
largely customizable so you can go and

00:05:50,880 --> 00:05:57,300
tweak them anyway indian they will run

00:05:53,400 --> 00:05:58,830
in VMs that along to you you can have

00:05:57,300 --> 00:06:00,690
access to the m's you can go and change

00:05:58,830 --> 00:06:02,010
software you can manipulate those

00:06:00,690 --> 00:06:06,120
services to do exactly what you like to

00:06:02,010 --> 00:06:09,389
do we aren't going to have SLA

00:06:06,120 --> 00:06:12,180
enforcement strategies so this is you

00:06:09,389 --> 00:06:14,130
are going to be able to define well do

00:06:12,180 --> 00:06:16,800
you care exactly how fast is your

00:06:14,130 --> 00:06:19,979
database when was the last time an

00:06:16,800 --> 00:06:21,240
end-user came to using well your web

00:06:19,979 --> 00:06:23,490
application is good but the database is

00:06:21,240 --> 00:06:26,880
slowly so you don't care for this what

00:06:23,490 --> 00:06:29,610
you care is for the overall application

00:06:26,880 --> 00:06:32,370
performance what your customers are

00:06:29,610 --> 00:06:34,080
going to see I'm done your get to trust

00:06:32,370 --> 00:06:36,990
the system to do what it needs to do

00:06:34,080 --> 00:06:38,430
inside knowing that there are all those

00:06:36,990 --> 00:06:41,040
different services and there

00:06:38,430 --> 00:06:44,610
have those relationships and the system

00:06:41,040 --> 00:06:47,280
will provision more or less virtual

00:06:44,610 --> 00:06:49,140
machines according to demands such that

00:06:47,280 --> 00:06:52,740
you will meet the response time you want

00:06:49,140 --> 00:06:55,020
to have last but not least and that's

00:06:52,740 --> 00:06:57,840
very important in this community you

00:06:55,020 --> 00:06:59,900
will be cloud agnostic I am going to

00:06:57,840 --> 00:07:02,160
show you the system running on a

00:06:59,900 --> 00:07:05,460
OpenNebula and exactly the same

00:07:02,160 --> 00:07:07,290
prediction can also run on ec2 we can

00:07:05,460 --> 00:07:10,280
have Rackspace we can have more clouds

00:07:07,290 --> 00:07:10,280

YouTube URL: https://www.youtube.com/watch?v=_OcoysRWY2g


