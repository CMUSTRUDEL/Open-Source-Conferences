Title: OW2con'12 Marc Dutoo
Publication date: 2012-12-10
Playlist: OW2con'12
Description: 
	Consistent service integration in your workflows with Scarbo 2.0 - Marc Dutoo and  Yoann Rodiere, OpenWide
AbstractÂ : Scarbo is an open, complete, SOA ready, SCA powered, OW2 and Eclipse-based BPM solution. The 2.0 release adds a major component to its SOA/BPM solution: a service registry and repository enforcing consistency across design time and runtime by acting as a pivotal reference. By integrating with the EasySOA registry (, Scarbo opens up the door to BPM / SOA governance and documentation, benefits from service discovery to ease up service reuse, while making switching from test to production service endpoints a breeze. This talk will introduce the audience to its OW2-based architecture integrating components such as Bonita, FraSCAti and Nuxeo, and show how end users can benefit from Scarbo 2.0 with a demonstration.
Captions: 
	00:00:08,000 --> 00:00:13,620
so I'm going to talk about he just said

00:00:11,370 --> 00:00:16,379
it consistent service integration in

00:00:13,620 --> 00:00:18,830
walk those with unruly tooth carbo to

00:00:16,379 --> 00:00:24,750
that oh and that's a product spotlight

00:00:18,830 --> 00:00:26,189
petal to we start so why am I'm the head

00:00:24,750 --> 00:00:29,220
of the research and development

00:00:26,189 --> 00:00:32,940
department at open while I'm an SOA as

00:00:29,220 --> 00:00:36,300
well as a BPM and ECM expert and I'm the

00:00:32,940 --> 00:00:39,090
founder of waterloo's carbo as well as

00:00:36,300 --> 00:00:43,079
Eclipse Java work for tuning and easiest

00:00:39,090 --> 00:00:45,800
way registry open wide is a leading open

00:00:43,079 --> 00:00:48,660
source provider in France and we provide

00:00:45,800 --> 00:00:51,809
mainly business solutions for Port

00:00:48,660 --> 00:00:54,750
Elysium and bi as well as as integration

00:00:51,809 --> 00:01:00,600
so SOA BPM is with this what I'm gonna

00:00:54,750 --> 00:01:04,970
talk know first how did we get from skar

00:01:00,600 --> 00:01:08,850
Bo to scar boat too what's the two about

00:01:04,970 --> 00:01:12,240
second well I'm gonna introduce you to

00:01:08,850 --> 00:01:14,970
the easiest way registry third panel

00:01:12,240 --> 00:01:17,670
primer about skar Bo to architecture and

00:01:14,970 --> 00:01:22,500
finally you're waiting for this one the

00:01:17,670 --> 00:01:26,130
demo live one I hope so from Scarborough

00:01:22,500 --> 00:01:29,280
to squabble to little reminder about why

00:01:26,130 --> 00:01:32,340
skar Bo well because at open while we

00:01:29,280 --> 00:01:34,920
think that empowering users by letting

00:01:32,340 --> 00:01:38,400
them design and run their processes let

00:01:34,920 --> 00:01:41,490
me p.m. is best way to get more value

00:01:38,400 --> 00:01:43,920
out of your services and on the other

00:01:41,490 --> 00:01:47,369
side that having a service-oriented

00:01:43,920 --> 00:01:49,729
architecture SOA is the best way not to

00:01:47,369 --> 00:01:53,909
let this go out of hand so here comes

00:01:49,729 --> 00:01:57,799
skar Bo 2 on SOA consistent BPM solution

00:01:53,909 --> 00:02:01,439
let's build on top of to health wave

00:01:57,799 --> 00:02:04,320
latest on the edge not too much other

00:02:01,439 --> 00:02:08,039
which one Eclipse technology as a way

00:02:04,320 --> 00:02:12,210
consistent no that's the new term here

00:02:08,039 --> 00:02:15,950
I'm scabbard first was a sway aware

00:02:12,210 --> 00:02:18,600
ACI board but I so I can see yes because

00:02:15,950 --> 00:02:21,300
services alone do not make an

00:02:18,600 --> 00:02:23,490
architecture and conversely calling em

00:02:21,300 --> 00:02:26,730
does not ensure that you have the right

00:02:23,490 --> 00:02:31,020
to let the CEO knows about it that

00:02:26,730 --> 00:02:32,910
actually their providers know about your

00:02:31,020 --> 00:02:35,880
needs maybe you should have talked to

00:02:32,910 --> 00:02:37,560
them about it first and you don't even

00:02:35,880 --> 00:02:42,090
know whether they actually implemented

00:02:37,560 --> 00:02:44,780
only define or if they will be when your

00:02:42,090 --> 00:02:50,210
process will be scheduled to be employed

00:02:44,780 --> 00:02:53,220
so let's SOA governance and that's what

00:02:50,210 --> 00:02:55,710
actually means being a consistent for

00:02:53,220 --> 00:02:59,100
Scarborough to that's the kind of

00:02:55,710 --> 00:03:02,100
problems that addressed by this way

00:02:59,100 --> 00:03:06,150
registry so entering a little reduction

00:03:02,100 --> 00:03:08,370
to the easiest way registry let's a

00:03:06,150 --> 00:03:11,160
unified service registry for all

00:03:08,370 --> 00:03:13,320
lecturers of the SOA process that's

00:03:11,160 --> 00:03:16,170
built on top of new CEO doc management

00:03:13,320 --> 00:03:18,900
so what's a unified service registry

00:03:16,170 --> 00:03:21,900
well that's one that gathers information

00:03:18,900 --> 00:03:24,900
from design time you process model from

00:03:21,900 --> 00:03:28,710
development time so we got maybe develop

00:03:24,900 --> 00:03:33,750
information or the comments in your java

00:03:28,710 --> 00:03:37,620
implementation or java box testing CI

00:03:33,750 --> 00:03:41,970
and operational documentation that's

00:03:37,620 --> 00:03:43,860
like four operators and the actual

00:03:41,970 --> 00:03:47,280
information extracted from the

00:03:43,860 --> 00:03:49,620
monitoring loop about how your processes

00:03:47,280 --> 00:03:56,250
actually and your services are actually

00:03:49,620 --> 00:03:58,920
executed so what's the value offer of

00:03:56,250 --> 00:04:02,130
EDS way well it all starts with service

00:03:58,920 --> 00:04:04,650
audit and discovery because until you

00:04:02,130 --> 00:04:06,810
have services when till you know them

00:04:04,650 --> 00:04:09,060
where they are you can't do anything so

00:04:06,810 --> 00:04:12,660
let's discover them from design time

00:04:09,060 --> 00:04:14,070
from development alice source from

00:04:12,660 --> 00:04:16,020
monitoring that's operational time

00:04:14,070 --> 00:04:17,880
you've also got web discovery by

00:04:16,020 --> 00:04:21,540
browsing you can look for endpoints and

00:04:17,880 --> 00:04:24,450
wsdl is in the web and end users can

00:04:21,540 --> 00:04:25,900
just go to the application and services

00:04:24,450 --> 00:04:29,650
will be detected under that

00:04:25,900 --> 00:04:31,690
and tagged second cervical entation

00:04:29,650 --> 00:04:35,080
because for us the first step to

00:04:31,690 --> 00:04:38,410
exponents besides visibility is

00:04:35,080 --> 00:04:41,110
documentation so we try to extract all

00:04:38,410 --> 00:04:44,669
documentation wherever it is in your

00:04:41,110 --> 00:04:48,070
models in your source in your manuals

00:04:44,669 --> 00:04:49,810
all with collaborative editing you can

00:04:48,070 --> 00:04:53,130
enrich it you can use the segments that

00:04:49,810 --> 00:04:56,169
form Luxio for documenting it

00:04:53,130 --> 00:04:58,960
collaboratively and you've got what we

00:04:56,169 --> 00:05:01,690
call a sanity check that's like let's

00:04:58,960 --> 00:05:04,419
keep it in check with in cages with

00:05:01,690 --> 00:05:06,910
validation all the way from design to

00:05:04,419 --> 00:05:10,720
monitoring and that's the part of the

00:05:06,910 --> 00:05:13,979
CIO likes that everything gets getting

00:05:10,720 --> 00:05:16,780
check with us got testing tools like

00:05:13,979 --> 00:05:19,889
record service calls and we play them

00:05:16,780 --> 00:05:24,940
template ice replay or so soap you i am

00:05:19,889 --> 00:05:26,740
actually proxy service covering we've

00:05:24,940 --> 00:05:29,620
gotten to grated rapid application upon

00:05:26,740 --> 00:05:33,250
platform that's frascati studio on the

00:05:29,620 --> 00:05:35,560
web develop service mashups socially

00:05:33,250 --> 00:05:39,280
shadow me to friends deploy them on

00:05:35,560 --> 00:05:42,150
clouds and got that for the light uses

00:05:39,280 --> 00:05:44,860
and for the you know the actual

00:05:42,150 --> 00:05:48,280
integration users you've got the ESB

00:05:44,860 --> 00:05:51,220
platform its talent years be say week

00:05:48,280 --> 00:05:53,650
just told a few words about talent

00:05:51,220 --> 00:05:56,050
before and bulge as mine monitoring

00:05:53,650 --> 00:05:58,800
that's a lot of Audiology projects

00:05:56,050 --> 00:06:02,740
that's why we like what ability and

00:05:58,800 --> 00:06:05,919
always done by in relapse for the

00:06:02,740 --> 00:06:09,099
service engine light source engine for

00:06:05,919 --> 00:06:13,360
light uses got easy fab for this way

00:06:09,099 --> 00:06:17,320
loop feedback loop get tannen for that

00:06:13,360 --> 00:06:20,380
integration and an actual integration is

00:06:17,320 --> 00:06:23,199
be we've got Luxio that manages the

00:06:20,380 --> 00:06:26,830
water swim all in all documents we've

00:06:23,199 --> 00:06:28,930
got bull for monitoring and reasoning on

00:06:26,830 --> 00:06:31,210
it to transform technical events in

00:06:28,930 --> 00:06:34,779
business ones and we've got open wide as

00:06:31,210 --> 00:06:36,520
us trying to provide a global

00:06:34,779 --> 00:06:37,810
architecture and integration as well as

00:06:36,520 --> 00:06:42,319
the BPM

00:06:37,810 --> 00:06:46,750
features and use cases so a primer on

00:06:42,319 --> 00:06:50,509
house car boat picture is impacted by it

00:06:46,750 --> 00:06:53,960
yes way so on the left you've got the

00:06:50,509 --> 00:06:55,669
classical BPM architecture that's you

00:06:53,960 --> 00:06:58,310
got a muddler you design your processes

00:06:55,669 --> 00:07:00,740
and you'd apply and run them on a server

00:06:58,310 --> 00:07:05,150
that's other tube on a telecon solution

00:07:00,740 --> 00:07:09,380
and non the right you can see the SOA

00:07:05,150 --> 00:07:11,740
parts so on the right on the on the far

00:07:09,380 --> 00:07:13,940
right you've got your IT services and

00:07:11,740 --> 00:07:17,690
these are we still being developed by

00:07:13,940 --> 00:07:20,389
easiest way so they known by the

00:07:17,690 --> 00:07:24,440
registry here and the interesting part

00:07:20,389 --> 00:07:27,470
is that a design time your workflow

00:07:24,440 --> 00:07:30,650
model will be exported to the registry

00:07:27,470 --> 00:07:33,830
so it creates information about what

00:07:30,650 --> 00:07:36,259
services it chooses and how we chooses

00:07:33,830 --> 00:07:39,979
it so comment description definitions

00:07:36,259 --> 00:07:43,400
and at runtime we've got frascati that

00:07:39,979 --> 00:07:47,830
actually call these services and if your

00:07:43,400 --> 00:07:50,840
IT services are monitored by like em

00:07:47,830 --> 00:07:53,509
talent ESPN jassmine integrated with ETS

00:07:50,840 --> 00:07:56,690
away you can have easiest way dashboard

00:07:53,509 --> 00:07:59,330
that's complete with design time to run

00:07:56,690 --> 00:08:01,099
time and monitoring information about

00:07:59,330 --> 00:08:03,650
youth services and how they are called

00:08:01,099 --> 00:08:07,240
by your processes little information

00:08:03,650 --> 00:08:10,190
about what's under the hood of

00:08:07,240 --> 00:08:13,639
Scarborough too so we've upgraded the

00:08:10,190 --> 00:08:16,810
components latest releases of Java of a

00:08:13,639 --> 00:08:19,120
tooling that's Eclipse to news releases

00:08:16,810 --> 00:08:21,469
latest release of eligible nita

00:08:19,120 --> 00:08:24,650
congratulations to them for the market

00:08:21,469 --> 00:08:26,930
worth a total you to yesterday you got

00:08:24,650 --> 00:08:31,520
order to press carry and latest release

00:08:26,930 --> 00:08:34,219
also and we've already done the model

00:08:31,520 --> 00:08:38,120
export of work flow to the SOA registry

00:08:34,219 --> 00:08:42,800
and we still have to do so hopefully

00:08:38,120 --> 00:08:45,079
this you're letting the molar no truth

00:08:42,800 --> 00:08:48,589
known services in the registry service

00:08:45,079 --> 00:08:50,060
so now is the demo part stay with me

00:08:48,589 --> 00:08:52,490
please for

00:08:50,060 --> 00:08:54,350
designing process deploying it running

00:08:52,490 --> 00:08:58,250
it and trying to get some information

00:08:54,350 --> 00:09:01,940
about it so first is how you've got a

00:08:58,250 --> 00:09:05,630
Java workflow tooling process very

00:09:01,940 --> 00:09:11,750
simple one we start here we call

00:09:05,630 --> 00:09:14,960
webservice web service is actually a web

00:09:11,750 --> 00:09:17,690
service that will publish a nap EV

00:09:14,960 --> 00:09:22,760
project so that's the use case inspired

00:09:17,690 --> 00:09:25,010
by scarborough ones deployment in

00:09:22,760 --> 00:09:28,520
production at ncv advanced national

00:09:25,010 --> 00:09:30,860
project becomes so that's about request

00:09:28,520 --> 00:09:32,750
for funded holidays for i'm privileged

00:09:30,860 --> 00:09:36,140
people wow that's a real business use

00:09:32,750 --> 00:09:38,690
case so you've got hair service you've

00:09:36,140 --> 00:09:42,200
got here interface that's a wsdl you

00:09:38,690 --> 00:09:46,130
could have copy pasted the URL from is s

00:09:42,200 --> 00:09:48,820
largest registry and finally we display

00:09:46,130 --> 00:09:52,970
the results so first we're going to

00:09:48,820 --> 00:09:55,490
export that in the easiest way registry

00:09:52,970 --> 00:10:00,410
so we've got the right model to model

00:09:55,490 --> 00:10:02,060
transformation using under the hood CMS

00:10:00,410 --> 00:10:05,630
protocol i'm not going to do it because

00:10:02,060 --> 00:10:08,960
i don't have a registry here because

00:10:05,630 --> 00:10:12,800
i've already got a bonita on port 8080

00:10:08,960 --> 00:10:16,730
too bad let's say I did it second part

00:10:12,800 --> 00:10:19,940
is no my users know about the services

00:10:16,730 --> 00:10:24,110
and the process and I've got here that's

00:10:19,940 --> 00:10:26,930
indicators but I've got here yes second

00:10:24,110 --> 00:10:30,080
part is to actually develop the services

00:10:26,930 --> 00:10:32,830
so here you can see an avin build let's

00:10:30,080 --> 00:10:36,339
discovered a lot of things in my source

00:10:32,830 --> 00:10:39,350
like services implementation etc and

00:10:36,339 --> 00:10:42,680
that's the kind of thing that goes into

00:10:39,350 --> 00:10:45,610
the registry here and you can see here

00:10:42,680 --> 00:10:51,400
an implementation with information about

00:10:45,610 --> 00:10:55,040
operations about its sport type about

00:10:51,400 --> 00:10:57,140
the web service it is linked to and now

00:10:55,040 --> 00:11:00,170
is a technical part where you add

00:10:57,140 --> 00:11:03,170
actually technical information to your

00:11:00,170 --> 00:11:06,709
services like how it is mapped

00:11:03,170 --> 00:11:09,860
to data and types and when you've done

00:11:06,709 --> 00:11:13,339
that you can actually export it at an

00:11:09,860 --> 00:11:17,750
executable process on skar Bo using

00:11:13,339 --> 00:11:22,040
export transformation skar Bo to a local

00:11:17,750 --> 00:11:25,220
file please here it is finish wow it

00:11:22,040 --> 00:11:32,510
works now let's choose it in panera hi

00:11:25,220 --> 00:11:35,510
bonita please let me in and please let

00:11:32,510 --> 00:11:39,290
me load up so i'm going to remove the

00:11:35,510 --> 00:11:42,050
old one bye bye I'm not gonna cheat I'm

00:11:39,290 --> 00:11:44,240
going to install the latest one here

00:11:42,050 --> 00:11:47,600
means telling the latest one and when

00:11:44,240 --> 00:11:51,529
we've done that we can actually run it

00:11:47,600 --> 00:11:53,570
so just imagine i'm an end user and i'm

00:11:51,529 --> 00:11:57,829
trying to publish a project so i'm

00:11:53,570 --> 00:11:59,959
providing here the project ID could be

00:11:57,829 --> 00:12:02,180
pretty obviously and i'm gonna get a

00:11:59,959 --> 00:12:05,420
result under the hood is doing a lot of

00:12:02,180 --> 00:12:08,029
things oh it didn't work apparently i

00:12:05,420 --> 00:12:11,120
don't have the right service is that

00:12:08,029 --> 00:12:14,600
true yes it's true too bad by the way

00:12:11,120 --> 00:12:17,060
here is my mild service it's not

00:12:14,600 --> 00:12:20,120
complicated it's just publish method

00:12:17,060 --> 00:12:23,540
that takes a project ID and gives back

00:12:20,120 --> 00:12:26,740
whether it's accident so let's start

00:12:23,540 --> 00:12:30,440
again with another ID submitting

00:12:26,740 --> 00:12:32,390
crossing my fingers from oh yeah wow it

00:12:30,440 --> 00:12:35,000
does a lot of things that's Frascati

00:12:32,390 --> 00:12:37,970
that's the light service engine working

00:12:35,000 --> 00:12:41,990
on the hood as a proxy between BP m nacl

00:12:37,970 --> 00:12:44,540
oh yeah it worked incredible so here are

00:12:41,990 --> 00:12:46,970
the pictures here are little information

00:12:44,540 --> 00:12:50,170
about how the workflows map in the

00:12:46,970 --> 00:12:54,019
registry like weak spot images workflows

00:12:50,170 --> 00:12:56,120
comments descriptions and finally yeah

00:12:54,019 --> 00:12:58,250
easiest way so the registry will be a

00:12:56,120 --> 00:13:01,990
new product by open wide on the shelves

00:12:58,250 --> 00:13:05,750
in 2k13 next year and Scarborough will

00:13:01,990 --> 00:13:09,110
be released into k-12 I hope so this

00:13:05,750 --> 00:13:12,339
you're still and well thank you very

00:13:09,110 --> 00:13:15,199
much for your attention and I hope that

00:13:12,339 --> 00:13:16,550
well that's going to give you a few

00:13:15,199 --> 00:13:18,800
ideas about how to

00:13:16,550 --> 00:13:25,730
more constantly manager BPM on top of

00:13:18,800 --> 00:13:28,990
yours way thank you very much hi so

00:13:25,730 --> 00:13:28,990

YouTube URL: https://www.youtube.com/watch?v=Xqw4PyeGM9Y


