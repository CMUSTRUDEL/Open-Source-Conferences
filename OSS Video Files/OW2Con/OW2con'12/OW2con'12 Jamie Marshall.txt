Title: OW2con'12 Jamie Marshall
Publication date: 2012-12-10
Playlist: OW2con'12
Description: 
	CompatibleOne the Open Source Cloud Broker - Jamie Marshall, Prologue
AbstractÂ : Next generation cloud service management software will offer service brokering capabilities. This session will provide an overview of the architecture of an open source cloud service broker that would allow for the description, provision, deployment and management of any type or configuration of cloud services delivered by heterogeneous cloud service providers in accordance with a consumer's SLA. A broker allows the federation of resources across heterogeneous Cloud Service Providers and thus plays an important role in avoiding vendor lock-in. The session will end with a live demonstration showing how a federation of multiple OpenStack providers can be managed by CompatibleOne, an open source cloud service broker, in a multi-cloud environment.
Captions: 
	00:00:00,079 --> 00:00:04,350
I'm going to go through a little bit of

00:00:02,639 --> 00:00:05,910
presentation with a few words and then

00:00:04,350 --> 00:00:07,890
I'm going to give you a lightning

00:00:05,910 --> 00:00:09,450
demonstration and some cooking lessons I

00:00:07,890 --> 00:00:10,500
think you've all had something to eat

00:00:09,450 --> 00:00:12,570
and so we're going to tell you how to

00:00:10,500 --> 00:00:14,580
make it work anyway this is about

00:00:12,570 --> 00:00:18,660
compatible one it's an open source cloud

00:00:14,580 --> 00:00:22,320
services broken but intermediation agree

00:00:18,660 --> 00:00:24,869
a aggregation arbitrage cloud services

00:00:22,320 --> 00:00:26,310
broker which refers to the market model

00:00:24,869 --> 00:00:28,050
enrolls support the intermediation

00:00:26,310 --> 00:00:30,570
between cloud services and cloud

00:00:28,050 --> 00:00:33,239
consumers everybody knows all that it's

00:00:30,570 --> 00:00:35,899
about freedom of choice hopefully and no

00:00:33,239 --> 00:00:40,050
vendor lock-in it's about trust and

00:00:35,899 --> 00:00:41,309
about governance to quit easy read you

00:00:40,050 --> 00:00:43,410
can check that you can pick up all this

00:00:41,309 --> 00:00:45,059
on the website this is our usual

00:00:43,410 --> 00:00:47,100
presentation but singers I've only got

00:00:45,059 --> 00:00:50,129
15 minutes I don't want to spend all of

00:00:47,100 --> 00:00:51,629
it doing slide way so that's enough for

00:00:50,129 --> 00:00:53,579
the slide where and let's go and have a

00:00:51,629 --> 00:00:56,160
look and see how it works because that's

00:00:53,579 --> 00:00:57,629
what it's all about really anybody

00:00:56,160 --> 00:01:00,059
doesn't know what doesn't want to know

00:00:57,629 --> 00:01:02,309
what it's about then that's fine it's

00:01:00,059 --> 00:01:04,409
time to sleep after the meal so we've

00:01:02,309 --> 00:01:07,049
got a now a new dashboard which allows

00:01:04,409 --> 00:01:08,610
us to login to compatible one it's only

00:01:07,049 --> 00:01:11,340
for demonstration purposes and it

00:01:08,610 --> 00:01:13,320
doesn't intend to to provide you with

00:01:11,340 --> 00:01:14,820
the ultimate tool I just shows you how

00:01:13,320 --> 00:01:17,820
to do a few things with compatible one

00:01:14,820 --> 00:01:19,580
and kind of show you that it works so

00:01:17,820 --> 00:01:22,830
basically what I've been doing is

00:01:19,580 --> 00:01:24,360
opening up a manifest this one's already

00:01:22,830 --> 00:01:26,070
loaded up but I just wanted to give you

00:01:24,360 --> 00:01:29,509
a quick look into a manifest and see

00:01:26,070 --> 00:01:31,799
what it looks like this any manifest

00:01:29,509 --> 00:01:33,299
Alden second I've just got a charger an

00:01:31,799 --> 00:01:35,299
instance of a virtual machine somewhere

00:01:33,299 --> 00:01:37,380
in the world to have word but thank you

00:01:35,299 --> 00:01:39,720
so here we have a compatible one

00:01:37,380 --> 00:01:42,600
manifest it's called any it's actually

00:01:39,720 --> 00:01:45,659
capable of providing using any provision

00:01:42,600 --> 00:01:48,299
as you can see here it'll load a umuntu

00:01:45,659 --> 00:01:49,710
image so this manifest if we pass it

00:01:48,299 --> 00:01:53,909
into the system then we can actually use

00:01:49,710 --> 00:02:00,409
it quite nicely to do provisioning let's

00:01:53,909 --> 00:02:03,090
make a new Oh W to conference SLA now

00:02:00,409 --> 00:02:04,799
some things take a bit of time to cook

00:02:03,090 --> 00:02:06,750
so let's do a windows is your one right

00:02:04,799 --> 00:02:08,879
away because that's going to need a few

00:02:06,750 --> 00:02:12,590
moments to to cook up while we go and go

00:02:08,879 --> 00:02:13,819
other ones so demo wants the account the

00:02:12,590 --> 00:02:15,739
Ryder we're going to put that up as

00:02:13,819 --> 00:02:17,180
Windows Azure and honestly I'm not

00:02:15,739 --> 00:02:19,640
getting paid to do this by these guys

00:02:17,180 --> 00:02:23,900
just have them to fall that way so we

00:02:19,640 --> 00:02:26,209
generate the SLA and pass it so here

00:02:23,900 --> 00:02:29,450
we've got the SLA and we can see that

00:02:26,209 --> 00:02:33,379
the manifest here is any we can also see

00:02:29,450 --> 00:02:35,599
that the provider information in the SLA

00:02:33,379 --> 00:02:37,879
is Windows Azure there's been a bunch of

00:02:35,599 --> 00:02:39,349
passing operations on OC CIB I think

00:02:37,879 --> 00:02:41,090
everybody here knows compatible one

00:02:39,349 --> 00:02:42,410
knows FCC I now so I'm not going to go

00:02:41,090 --> 00:02:45,380
into that in a great amount of detail

00:02:42,410 --> 00:02:50,630
and then we can go back and we can pick

00:02:45,380 --> 00:02:52,370
up the oh w to con as you now this is

00:02:50,630 --> 00:02:53,959
created a provisioning plan which is a

00:02:52,370 --> 00:02:56,480
lot more complicated than the manifest

00:02:53,959 --> 00:02:59,959
as you can see but it shows the system

00:02:56,480 --> 00:03:01,549
how to build and service so here we go

00:02:59,959 --> 00:03:05,000
we're going to start provisioning a

00:03:01,549 --> 00:03:06,980
machine on Windows Azure now back in the

00:03:05,000 --> 00:03:09,260
kitchen let's have a look here and see

00:03:06,980 --> 00:03:12,049
how it's cooking behind the scenes for

00:03:09,260 --> 00:03:13,849
the moment we don't have anything coming

00:03:12,049 --> 00:03:16,430
up but ever happened a second or two so

00:03:13,849 --> 00:03:17,720
while that's starting up in the

00:03:16,430 --> 00:03:20,829
background I'm going to go and change

00:03:17,720 --> 00:03:24,620
change view and I'm going to pick up

00:03:20,829 --> 00:03:28,579
build another SLA this time we're going

00:03:24,620 --> 00:03:34,609
to make it an o w to calm and we call

00:03:28,579 --> 00:03:36,079
this one an OpenStack OpenStack the

00:03:34,609 --> 00:03:42,099
worst thing about using a microphone is

00:03:36,079 --> 00:03:45,319
they find up needing a third hand okay

00:03:42,099 --> 00:03:47,690
anyway that's there now i'm going to use

00:03:45,319 --> 00:03:50,450
though the account demo to because demo

00:03:47,690 --> 00:03:52,430
two provisions on the new 0 w to

00:03:50,450 --> 00:03:55,190
OpenStack platform which we're running

00:03:52,430 --> 00:03:58,130
and the provider here we're going to set

00:03:55,190 --> 00:04:00,169
that one to be OpenStack so basically up

00:03:58,130 --> 00:04:04,609
we are going to pass with way through

00:04:00,169 --> 00:04:08,870
this new one generate and pass created a

00:04:04,609 --> 00:04:12,560
new SLA for the manifest any for the

00:04:08,870 --> 00:04:15,049
provider OpenStack so that looks good go

00:04:12,560 --> 00:04:17,150
on to the provisioning page and we can

00:04:15,049 --> 00:04:21,560
create a service but first let me choose

00:04:17,150 --> 00:04:23,719
the right plan owo on OpenStack there we

00:04:21,560 --> 00:04:24,650
go we're going to create the service

00:04:23,719 --> 00:04:26,150
without all know this is going to happen

00:04:24,650 --> 00:04:28,460
a little bit quicker

00:04:26,150 --> 00:04:30,199
simply because the platform in question

00:04:28,460 --> 00:04:31,699
is rather a smaller I'll have a quick

00:04:30,199 --> 00:04:32,960
look at the platform itself while that's

00:04:31,699 --> 00:04:35,020
happening and if we're fast enough we

00:04:32,960 --> 00:04:40,340
might actually catch it provisioning and

00:04:35,020 --> 00:04:42,740
yes here we go hope so i'd have been too

00:04:40,340 --> 00:04:47,900
slow its books nerds happening it's

00:04:42,740 --> 00:04:49,250
coming in very concerted I it's actually

00:04:47,900 --> 00:04:53,180
done now so that one's cooked quite

00:04:49,250 --> 00:04:55,130
quickly and go back to Windows Azure is

00:04:53,180 --> 00:04:56,539
actually starting to provisionally the

00:04:55,130 --> 00:04:59,240
platform so that's working really well

00:04:56,539 --> 00:05:00,830
this is a you point to a system as i

00:04:59,240 --> 00:05:02,150
said earlier on it'll take a little bit

00:05:00,830 --> 00:05:04,039
longer because i mean it so that it's a

00:05:02,150 --> 00:05:05,360
much larger scale provisioning platform

00:05:04,039 --> 00:05:07,699
and there's a lot more work going on

00:05:05,360 --> 00:05:09,139
behind the scenes small one doe w2 is

00:05:07,699 --> 00:05:10,880
actually only provisioning for us and so

00:05:09,139 --> 00:05:13,039
consequently there's not any competition

00:05:10,880 --> 00:05:14,630
or multi-tenancy aspects involved but

00:05:13,039 --> 00:05:19,280
this gives you an idea of you know the

00:05:14,630 --> 00:05:21,139
reality of the cloud so um what I didn't

00:05:19,280 --> 00:05:25,150
I was here yesterday and we did a big

00:05:21,139 --> 00:05:28,009
presentation of how things can work and

00:05:25,150 --> 00:05:31,940
one of the things that we pulled in was

00:05:28,009 --> 00:05:38,180
an SLA for the ex wiki system if I can

00:05:31,940 --> 00:05:41,930
find it xwiki cassandra that was the one

00:05:38,180 --> 00:05:46,220
you not so quite a big one it's a three

00:05:41,930 --> 00:05:50,750
node system whereby we have well that's

00:05:46,220 --> 00:05:52,460
actually the the SLA that is provision

00:05:50,750 --> 00:05:54,949
for it as you can see it's a lot more

00:05:52,460 --> 00:05:58,550
complicated but in this case we had and

00:05:54,949 --> 00:06:00,979
a business value and a variable for a

00:05:58,550 --> 00:06:02,930
guarantee and the guarantee was such

00:06:00,979 --> 00:06:04,610
that it would start generating penalties

00:06:02,930 --> 00:06:07,120
if the user count or the number of

00:06:04,610 --> 00:06:09,919
logged in users went above one

00:06:07,120 --> 00:06:11,120
unfortunate i don't have an ssl and ssh

00:06:09,919 --> 00:06:13,039
connection here so i can't actually

00:06:11,120 --> 00:06:14,630
prove that but if anybody wants to come

00:06:13,039 --> 00:06:17,720
and play with it elsewhere then they can

00:06:14,630 --> 00:06:20,710
do so and that has actually been

00:06:17,720 --> 00:06:22,909
provisioned if i remember rightly but

00:06:20,710 --> 00:06:25,520
let's have a look and see what services

00:06:22,909 --> 00:06:27,110
we got up here so we got three so i

00:06:25,520 --> 00:06:29,060
don't think it has so we can give it a

00:06:27,110 --> 00:06:30,560
try why not might as well live

00:06:29,060 --> 00:06:32,630
dangerously for the last sort of a

00:06:30,560 --> 00:06:35,650
quarter of an hour of my life before

00:06:32,630 --> 00:06:39,270
compatible one blows me away

00:06:35,650 --> 00:06:42,180
yep come on let's go up this up and

00:06:39,270 --> 00:06:46,810
provisioning let's try launching that

00:06:42,180 --> 00:06:48,639
xwiki Cassandra create an instance it's

00:06:46,810 --> 00:06:50,710
a way and we'll have to have a look at

00:06:48,639 --> 00:06:51,970
the in advanced dashboard for this

00:06:50,710 --> 00:06:53,650
because that one's provisioned on the

00:06:51,970 --> 00:06:55,870
demo one account which is using the

00:06:53,650 --> 00:06:57,430
elements now as you can see here we're

00:06:55,870 --> 00:06:59,050
actually performing Federation across

00:06:57,430 --> 00:07:01,090
different OpenStack platforms and

00:06:59,050 --> 00:07:03,940
Windows Azure on an account to account

00:07:01,090 --> 00:07:05,169
basis so on tenancy basis and this can

00:07:03,940 --> 00:07:08,350
actually be performed using the

00:07:05,169 --> 00:07:10,539
brokerage engine with respect to quality

00:07:08,350 --> 00:07:12,490
of service with respect to security with

00:07:10,539 --> 00:07:14,380
respect to technical capabilities or

00:07:12,490 --> 00:07:16,720
even just a round-robin bin packing

00:07:14,380 --> 00:07:18,850
method where maybe a hundred different

00:07:16,720 --> 00:07:20,919
OpenStack providers would be offering

00:07:18,850 --> 00:07:24,280
their resources in them under machines

00:07:20,919 --> 00:07:27,220
or a hundred whatever providers were

00:07:24,280 --> 00:07:29,620
offering infrastructure and the Broco is

00:07:27,220 --> 00:07:31,810
actually distributing the load amongst

00:07:29,620 --> 00:07:33,460
everything now an interesting thing

00:07:31,810 --> 00:07:36,070
about the cigs wiki example here we've

00:07:33,460 --> 00:07:38,410
got him coming up now he started so in a

00:07:36,070 --> 00:07:40,660
few moments the the Cassandra all happy

00:07:38,410 --> 00:07:45,220
as you see I've just launched the

00:07:40,660 --> 00:07:47,590
provisioning one SLA and and everything

00:07:45,220 --> 00:07:50,050
just starts happening automatically well

00:07:47,590 --> 00:07:51,820
we tend to call that real automation as

00:07:50,050 --> 00:07:54,370
opposed to the usual carbon-based

00:07:51,820 --> 00:07:56,199
automation most provisioning occurs in

00:07:54,370 --> 00:07:57,789
carbon-based former whether telephone

00:07:56,199 --> 00:07:59,320
call arrives and the carbon entity

00:07:57,789 --> 00:08:01,539
wanders across and types things on the

00:07:59,320 --> 00:08:04,870
console whereas here one click on the

00:08:01,539 --> 00:08:07,060
system by a human user or by programming

00:08:04,870 --> 00:08:10,030
can actually launch the provisioning of

00:08:07,060 --> 00:08:11,470
really complex systems so here we go

00:08:10,030 --> 00:08:13,120
that's Cassandra happening unfortunately

00:08:11,470 --> 00:08:14,860
I have to click on the instances in

00:08:13,120 --> 00:08:17,260
volume so that he actually updates the

00:08:14,860 --> 00:08:18,520
display but promise you that the

00:08:17,260 --> 00:08:21,970
provisioning is actually happening in

00:08:18,520 --> 00:08:24,720
the background automatically well Cedric

00:08:21,970 --> 00:08:27,190
what's time doing you're looking good

00:08:24,720 --> 00:08:28,510
five minutes well thank you Alex sounds

00:08:27,190 --> 00:08:29,710
really good so we've got plenty of time

00:08:28,510 --> 00:08:32,860
to see this come to the end of its

00:08:29,710 --> 00:08:35,349
conclusions so what about windows is you

00:08:32,860 --> 00:08:38,409
so windows is nicely provisioned it's

00:08:35,349 --> 00:08:40,120
machine okay so here is running and

00:08:38,409 --> 00:08:42,310
that's about the best of it for the

00:08:40,120 --> 00:08:44,020
moment I could actually log into it if I

00:08:42,310 --> 00:08:46,000
wanted to through this address but soon

00:08:44,020 --> 00:08:47,620
as i as i said before i don't have ssh

00:08:46,000 --> 00:08:52,510
access i can't actually connected

00:08:47,620 --> 00:08:54,180
machine if however the application which

00:08:52,510 --> 00:08:57,339
is looking quite good here actually and

00:08:54,180 --> 00:09:00,040
if the ex wiki application gets to

00:08:57,339 --> 00:09:01,870
completion in time then we would be able

00:09:00,040 --> 00:09:04,330
to connect to the X wiki application

00:09:01,870 --> 00:09:12,550
through its public address which names

00:09:04,330 --> 00:09:15,130
53 which would be this 1 128 103 so I'm

00:09:12,550 --> 00:09:16,870
going to pick that up get ready for the

00:09:15,130 --> 00:09:18,640
eventualities that it does get through

00:09:16,870 --> 00:09:20,740
in time that's the trouble with cooking

00:09:18,640 --> 00:09:22,180
essence although you supposed to leave

00:09:20,740 --> 00:09:23,620
it in the oven from sort of seven or

00:09:22,180 --> 00:09:25,180
eight minutes it is really up to your

00:09:23,620 --> 00:09:31,260
own judgment to see whether it's got

00:09:25,180 --> 00:09:36,130
burnt or not okay HTTP colon slash slash

00:09:31,260 --> 00:09:38,230
hey the ex wiki is running on the 8080

00:09:36,130 --> 00:09:41,430
let's keep that in our back pocket while

00:09:38,230 --> 00:09:43,960
waiting for the things to come through

00:09:41,430 --> 00:09:45,640
up still the first Cassandra not so this

00:09:43,960 --> 00:09:47,350
one's slowing down a bit there as I said

00:09:45,640 --> 00:09:48,760
this is a provisioning platform it's a

00:09:47,350 --> 00:09:50,920
full-scale production platform at

00:09:48,760 --> 00:09:52,750
interval so there is work going on here

00:09:50,920 --> 00:09:54,910
as well like there is on the windows is

00:09:52,750 --> 00:09:56,650
your platform this one here is running

00:09:54,910 --> 00:09:59,170
nicely it so it's kind of representative

00:09:56,650 --> 00:10:00,880
of a private cloud a private opens that

00:09:59,170 --> 00:10:02,860
cloud this is more a public openstack

00:10:00,880 --> 00:10:04,630
cloud and obviously this is the the

00:10:02,860 --> 00:10:08,260
public microsoft windows is your

00:10:04,630 --> 00:10:09,550
platform so i guess we could have one

00:10:08,260 --> 00:10:11,529
more look at something else while this

00:10:09,550 --> 00:10:13,480
is something the background is it all of

00:10:11,529 --> 00:10:16,180
this is kind of financial okay so if we

00:10:13,480 --> 00:10:18,430
take a demo one from say okay let's

00:10:16,180 --> 00:10:19,779
create an invoice for demo one he's

00:10:18,430 --> 00:10:22,470
going to do the processing all the

00:10:19,779 --> 00:10:24,940
transactions that have been progenitor

00:10:22,470 --> 00:10:26,589
visioning that has been going on on this

00:10:24,940 --> 00:10:28,870
account for the last four or five days

00:10:26,589 --> 00:10:31,089
so there's probably going to be quite a

00:10:28,870 --> 00:10:34,540
lot in there the prices are obviously

00:10:31,089 --> 00:10:36,850
fictive and they're not to be they're

00:10:34,540 --> 00:10:38,380
not legally binding but as you can see

00:10:36,850 --> 00:10:39,700
here this is the list of transactions

00:10:38,380 --> 00:10:41,560
that were generated during the

00:10:39,700 --> 00:10:43,330
production of all these platforms for a

00:10:41,560 --> 00:10:45,180
grand total of sixty nine point three

00:10:43,330 --> 00:10:47,050
three euros well it's pretty good

00:10:45,180 --> 00:10:49,270
considering we've done quite a lot of

00:10:47,050 --> 00:10:51,730
work in the last couple of days so how

00:10:49,270 --> 00:10:54,130
is anyone's getting on second cassandra

00:10:51,730 --> 00:10:56,110
is finished the third one is up on its

00:10:54,130 --> 00:10:58,540
way so that will be there soon do we

00:10:56,110 --> 00:10:59,779
have time to finish this cedric two

00:10:58,540 --> 00:11:02,120
minutes yeah it's going to be

00:10:59,779 --> 00:11:04,519
it's looking good so we've got the this

00:11:02,120 --> 00:11:07,220
one still waiting for the affair I'd

00:11:04,519 --> 00:11:08,749
like to get actually the final proof of

00:11:07,220 --> 00:11:09,829
the perv the provisioning because it's

00:11:08,749 --> 00:11:11,930
something that we didn't manage to do

00:11:09,829 --> 00:11:14,180
last year last year we did a

00:11:11,930 --> 00:11:16,100
provisioning operation which are similar

00:11:14,180 --> 00:11:19,009
this where it was the proof of concept

00:11:16,100 --> 00:11:20,779
number one whereby we showed the

00:11:19,009 --> 00:11:21,920
possibility of automatic provisioning

00:11:20,779 --> 00:11:24,290
with compatible one but we didn't

00:11:21,920 --> 00:11:28,370
actually show that the cake finished so

00:11:24,290 --> 00:11:30,170
this time to finish the story of

00:11:28,370 --> 00:11:33,589
compatible one so to speak I'd like to

00:11:30,170 --> 00:11:38,269
see it actually access the final product

00:11:33,589 --> 00:11:40,279
so come on Cassandra they're really gets

00:11:38,269 --> 00:11:41,569
down on their knees and said something

00:11:40,279 --> 00:11:43,879
nice to it maybe it'll come through a

00:11:41,569 --> 00:11:45,709
bit quicker so if anybody can call in

00:11:43,879 --> 00:11:52,009
advance to got a little bit faster maybe

00:11:45,709 --> 00:11:53,300
that'll do the trick too ok in the

00:11:52,009 --> 00:12:00,459
meantime are there any questions about

00:11:53,300 --> 00:12:00,459
all this miss

00:12:04,230 --> 00:12:15,760
you showed a web page with the price of

00:12:11,200 --> 00:12:18,250
what you you did it would be interesting

00:12:15,760 --> 00:12:24,340
to have a surprise of what you plan to

00:12:18,250 --> 00:12:26,290
do is it realistic well comparable one

00:12:24,340 --> 00:12:35,020
is an open source collaborative project

00:12:26,290 --> 00:12:37,240
so please feel free to help so Cassandra

00:12:35,020 --> 00:12:38,650
seems to be up and running and let's

00:12:37,240 --> 00:12:40,600
give it a ways let's see if that works

00:12:38,650 --> 00:12:43,150
now I mean it's possible he's not

00:12:40,600 --> 00:12:44,530
actually up and running yet but life sir

00:12:43,150 --> 00:12:46,360
like that time your question was

00:12:44,530 --> 00:12:48,340
probably well positioned to try and get

00:12:46,360 --> 00:12:57,130
this through whoa we've got it thank you

00:12:48,340 --> 00:12:58,150
think I'll stop there but what I think

00:12:57,130 --> 00:13:01,000
it's quite obvious we've just

00:12:58,150 --> 00:13:03,010
provisioned X wiki okay so X wiki's a

00:13:01,000 --> 00:13:05,350
front-end application server running on

00:13:03,010 --> 00:13:08,800
Java lamp stack and it's connected to a

00:13:05,350 --> 00:13:10,720
double replicated Cassandra database

00:13:08,800 --> 00:13:12,640
from the background and then we can look

00:13:10,720 --> 00:13:15,660
into it if you want to this is the page

00:13:12,640 --> 00:13:26,290
to edit I mean it's fully operational so

00:13:15,660 --> 00:13:32,910
welcome to 0 w to calm and thank you

00:13:26,290 --> 00:13:32,910
very much thank you

00:13:33,470 --> 00:13:35,530

YouTube URL: https://www.youtube.com/watch?v=63pvErRQNa4


