Title: OW2con'12 Frederic Dang Tran & Pawel Rubach
Publication date: 2012-12-10
Playlist: OW2con'12
Description: 
	The Sirocco multi-cloud management framework - Frédéric Dang Tran, Orange Labs & Paweł Rubach, Orange Poland
Abstract : While private cloud solutions as well as public cloud service offers are numerous, effective management still remains a challenge where it comes to multi-cloud or hybrid cloud deployment models where applications span several clouds. This presentation gives an overview of the OW2 Sirocco multi-cloud management framework with a particular focus on two topics: API mediation and placement management. Sirocco allows consumers to provision resources on multiple cloud providers whether private or public and relies on an orchestration layer that hides the heterogeneity of the underlying providers (in terms of API, virtualization technology...) through a unified user interface and API. Sirocco has adopted the DMTF Cloud Infrastructure Management Interface (CIMI) whose 1.0 release was released on 29 August 2012. Internally, this unified API is translated to the specific API and virtual resource model of each provider. Sirocco currently supports Amazon EC2, VMware vCloud Director as well as OpenStack as back-end clouds. A key component of Sirocco focuses on provider selection and placement management, namely how to select a cloud provider that offers the best match between the client request (QoS, geographical constraints...) and the provider's capabilities. Sirocco integrates a flexible decision-making framework that relies on a rule-based engine.
Captions: 
	00:00:00,000 --> 00:00:05,069
okay good afternoon everybody this is a

00:00:02,850 --> 00:00:10,010
John presentation from myself and

00:00:05,069 --> 00:00:12,870
powered robot from a ranch opponent so

00:00:10,010 --> 00:00:14,820
you outside of my presentation I will

00:00:12,870 --> 00:00:17,220
give you the context and objectives I

00:00:14,820 --> 00:00:20,160
will focus on the give you an overview

00:00:17,220 --> 00:00:26,010
of the architecture of our platform then

00:00:20,160 --> 00:00:27,900
I will focus on the c me d MTF IAS CPI

00:00:26,010 --> 00:00:30,349
that is a unifying api that we have

00:00:27,900 --> 00:00:32,369
adopted in the context of our project

00:00:30,349 --> 00:00:36,809
then i will give the floor to my

00:00:32,369 --> 00:00:39,230
colleague that will detail how we manage

00:00:36,809 --> 00:00:44,940
placement in a multi cloud context and

00:00:39,230 --> 00:00:48,030
some concluding remarks so multiclad

00:00:44,940 --> 00:00:49,920
management is a very hot topic that

00:00:48,030 --> 00:00:54,090
seems to draw a lot of attention

00:00:49,920 --> 00:00:57,480
recently typical use cases for a multi

00:00:54,090 --> 00:01:00,000
cloud are well known be a the ability to

00:00:57,480 --> 00:01:03,570
burst from a private cloud to a public

00:01:00,000 --> 00:01:06,090
cloud it could be the ability to satisfy

00:01:03,570 --> 00:01:08,700
some application specific constraints in

00:01:06,090 --> 00:01:11,850
terms of location terms of cost interval

00:01:08,700 --> 00:01:15,799
performance and of course multi-cloud is

00:01:11,850 --> 00:01:19,939
an enabler to achieve disaster recovery

00:01:15,799 --> 00:01:24,380
higher validity business continuity on

00:01:19,939 --> 00:01:27,119
the other hand multiclad management is

00:01:24,380 --> 00:01:30,509
purposes also to achieve interoperable

00:01:27,119 --> 00:01:32,939
internal mobility in the current

00:01:30,509 --> 00:01:35,460
landscape of cloud providers each having

00:01:32,939 --> 00:01:38,520
its own proprietary api its own resource

00:01:35,460 --> 00:01:41,130
model is on the translation technology

00:01:38,520 --> 00:01:44,670
with a its own virtual machine for image

00:01:41,130 --> 00:01:48,689
format there is a clear need to hide

00:01:44,670 --> 00:01:51,200
this heterogeneity and to provide up an

00:01:48,689 --> 00:01:55,619
abstraction on top of all these

00:01:51,200 --> 00:01:58,560
providers so in a nutshell what is

00:01:55,619 --> 00:02:01,469
Sirocco Sirocco is a multi cloud

00:01:58,560 --> 00:02:04,290
management platform or maybe a yet

00:02:01,469 --> 00:02:07,500
another medical management platform so

00:02:04,290 --> 00:02:11,830
the key principle of this platform is to

00:02:07,500 --> 00:02:13,900
provide a single unified access point

00:02:11,830 --> 00:02:16,090
to access multiple cloud provider

00:02:13,900 --> 00:02:20,290
whether they be private or public and

00:02:16,090 --> 00:02:23,350
whatever is a technology this access

00:02:20,290 --> 00:02:28,360
point is a programmatic so we have

00:02:23,350 --> 00:02:30,550
chosen the dmt FC me API as he unified

00:02:28,360 --> 00:02:33,670
API to access our platform I will get

00:02:30,550 --> 00:02:36,370
back to that in the coming slides and a

00:02:33,670 --> 00:02:38,800
key feature of our platform is that we

00:02:36,370 --> 00:02:41,430
want it to be as extensible and open as

00:02:38,800 --> 00:02:45,310
possible with a clear separation between

00:02:41,430 --> 00:02:49,300
mechanisms and policies and the ability

00:02:45,310 --> 00:02:53,890
to to make it scalable and open in terms

00:02:49,300 --> 00:02:56,140
of our various to feed the requirements

00:02:53,890 --> 00:02:58,360
of specific environments within an

00:02:56,140 --> 00:03:03,209
enterprise at the age of an enterprising

00:02:58,360 --> 00:03:07,120
for hybrid or private cloud and so on so

00:03:03,209 --> 00:03:09,910
in just one slide what the circle

00:03:07,120 --> 00:03:15,070
architecture looks like if you start at

00:03:09,910 --> 00:03:18,400
the top the user facing interfaces so is

00:03:15,070 --> 00:03:22,720
the api's the authority see me appeal

00:03:18,400 --> 00:03:24,730
from the NGF one thing not mentioned is

00:03:22,720 --> 00:03:29,170
this like that we provide also support

00:03:24,730 --> 00:03:31,330
for the ovf package format from from the

00:03:29,170 --> 00:03:33,160
mpf to package application at you have

00:03:31,330 --> 00:03:38,670
you met to manage a lifecycle of

00:03:33,160 --> 00:03:38,670
application at the bottom you have the

00:03:38,700 --> 00:03:43,780
ability to plug in some connectors to

00:03:41,680 --> 00:03:47,860
provide connectivity to a specific lat

00:03:43,780 --> 00:03:52,510
provider for example OpenStack VMware

00:03:47,860 --> 00:03:56,220
vCloud director or Amazon ec2 and the

00:03:52,510 --> 00:03:59,590
heart of the sea record middleware is a

00:03:56,220 --> 00:04:01,959
an Orchestrator that deals with the

00:03:59,590 --> 00:04:05,709
various functional building blocks of

00:04:01,959 --> 00:04:06,970
our platform user management or all

00:04:05,709 --> 00:04:10,660
things related to authentication

00:04:06,970 --> 00:04:12,040
authorization multi-tenancy of course

00:04:10,660 --> 00:04:15,640
resource provisioning and our cycle

00:04:12,040 --> 00:04:17,890
management image management with ability

00:04:15,640 --> 00:04:20,289
to handle what we call multiclad images

00:04:17,890 --> 00:04:23,300
that can be projected to a specific

00:04:20,289 --> 00:04:27,669
cloud providers on on a per unit basis

00:04:23,300 --> 00:04:31,430
and aggregate monitoring and metering

00:04:27,669 --> 00:04:34,129
another building block is a provider and

00:04:31,430 --> 00:04:35,360
the placement management and would give

00:04:34,129 --> 00:04:39,110
the floor to my colleague that will

00:04:35,360 --> 00:04:41,750
teach else's cell functionality good

00:04:39,110 --> 00:04:44,629
afternoon so the question I'm asking

00:04:41,750 --> 00:04:46,879
myself is how do we choose the provider

00:04:44,629 --> 00:04:48,770
and how do we actually choose whether we

00:04:46,879 --> 00:04:51,800
have multiple data centers within one

00:04:48,770 --> 00:04:54,199
cloud provider at different locations or

00:04:51,800 --> 00:04:57,500
if we have a different cloud provider

00:04:54,199 --> 00:04:59,539
offers in generally so when does it

00:04:57,500 --> 00:05:03,190
happen well first of all e we can have

00:04:59,539 --> 00:05:05,419
these different data centers within one

00:05:03,190 --> 00:05:09,169
health provider such as amazon offers

00:05:05,419 --> 00:05:11,110
different data centers for example and

00:05:09,169 --> 00:05:14,030
they can also offer different services

00:05:11,110 --> 00:05:17,620
this is also important in some cases you

00:05:14,030 --> 00:05:21,560
may specifically want a certain location

00:05:17,620 --> 00:05:24,289
another reason could be for example load

00:05:21,560 --> 00:05:26,120
balancing in case you want to have to

00:05:24,289 --> 00:05:29,120
for example deploy your application near

00:05:26,120 --> 00:05:31,880
active users or in case you want to have

00:05:29,120 --> 00:05:35,199
a discovery disaster recovery a scenario

00:05:31,880 --> 00:05:38,389
where you want to have multiple copies

00:05:35,199 --> 00:05:42,050
deployed at different locations that are

00:05:38,389 --> 00:05:43,580
geographically distant or in case you

00:05:42,050 --> 00:05:45,919
can also we can also measure this

00:05:43,580 --> 00:05:48,919
distance in terms of network latency

00:05:45,919 --> 00:05:51,800
bandwidth etc although this is still a

00:05:48,919 --> 00:05:55,400
bit picky it's not not not going to be

00:05:51,800 --> 00:05:58,909
probably implemented very soon but we do

00:05:55,400 --> 00:06:00,590
prepare for that from on the other hand

00:05:58,909 --> 00:06:02,349
side we also have to take into account

00:06:00,590 --> 00:06:05,000
the fact that we are basically

00:06:02,349 --> 00:06:07,190
implementing this for a cloud broker and

00:06:05,000 --> 00:06:10,150
this cloud broker is supposed to make

00:06:07,190 --> 00:06:14,270
money on that so the maximize revenue by

00:06:10,150 --> 00:06:16,759
making I mean supplying the best for the

00:06:14,270 --> 00:06:19,419
customer and at the same time making

00:06:16,759 --> 00:06:22,190
money on the difference between prices

00:06:19,419 --> 00:06:26,650
so let me show you an example it's of

00:06:22,190 --> 00:06:29,229
course a very simple example of hannigan

00:06:26,650 --> 00:06:32,080
a request with four cpus six to eight

00:06:29,229 --> 00:06:34,449
gigs of memory and 40 to hunt 200 gigs

00:06:32,080 --> 00:06:36,490
of dip of a disc and now the question is

00:06:34,449 --> 00:06:40,210
which of these cloud providers in which

00:06:36,490 --> 00:06:42,310
of the office satisfy these this use

00:06:40,210 --> 00:06:44,800
case well in this case we have three

00:06:42,310 --> 00:06:47,199
offers and then the question if in fact

00:06:44,800 --> 00:06:48,910
is i mean this can be done very quickly

00:06:47,199 --> 00:06:50,620
but the fact that but then the next

00:06:48,910 --> 00:06:52,930
question is how do we actually choose

00:06:50,620 --> 00:06:56,259
the right one so if course without extra

00:06:52,930 --> 00:06:57,910
consult constraints such as price or

00:06:56,259 --> 00:07:01,030
maybe some other things like location

00:06:57,910 --> 00:07:05,050
etc we can't really do make a make a

00:07:01,030 --> 00:07:06,520
good decision but that's what we and of

00:07:05,050 --> 00:07:10,180
course in a you real use case you'll

00:07:06,520 --> 00:07:13,870
have many more constraints and or else

00:07:10,180 --> 00:07:17,470
you can simply make use of one of your

00:07:13,870 --> 00:07:25,509
strategies depending on the cloud

00:07:17,470 --> 00:07:27,479
brokers policy so to support that we

00:07:25,509 --> 00:07:30,940
want to have a flexible and extensible

00:07:27,479 --> 00:07:34,030
architecture the point is we want to be

00:07:30,940 --> 00:07:36,220
the the goals may be evolving the

00:07:34,030 --> 00:07:38,770
constraints as well the office of cloud

00:07:36,220 --> 00:07:43,810
providers everything maybe may change

00:07:38,770 --> 00:07:47,710
but the broker has to has to be updated

00:07:43,810 --> 00:07:49,599
with these both the data as well as some

00:07:47,710 --> 00:07:52,479
policies for example do we want to offer

00:07:49,599 --> 00:07:55,659
the client the least expensive offer we

00:07:52,479 --> 00:07:57,639
have or somehow the best offer we can we

00:07:55,659 --> 00:08:00,159
can give him and there are many

00:07:57,639 --> 00:08:03,430
different policies you may imagine and

00:08:00,159 --> 00:08:05,680
we want to have an architecture that

00:08:03,430 --> 00:08:08,169
will supply that will provide us with

00:08:05,680 --> 00:08:11,139
the possibility of quickly changing

00:08:08,169 --> 00:08:14,680
these policies therefore we designed

00:08:11,139 --> 00:08:17,680
this applique this this architecture

00:08:14,680 --> 00:08:19,780
it's and without going into many details

00:08:17,680 --> 00:08:22,599
we have on the left hand side we have

00:08:19,780 --> 00:08:25,810
the provider manager which is the part

00:08:22,599 --> 00:08:28,510
that's basically dealing with data

00:08:25,810 --> 00:08:31,120
regarding the offers that we can choose

00:08:28,510 --> 00:08:34,270
from and then the right hand side is the

00:08:31,120 --> 00:08:36,060
actual decision making framework with as

00:08:34,270 --> 00:08:39,419
rules engine and a

00:08:36,060 --> 00:08:44,850
over that takes makes the decision based

00:08:39,419 --> 00:08:50,910
on some constraints and policies so it's

00:08:44,850 --> 00:08:52,680
and it's still I mean the research is

00:08:50,910 --> 00:08:55,950
going on and the implementation is only

00:08:52,680 --> 00:08:58,740
there's only started recently and but we

00:08:55,950 --> 00:09:01,910
already have extended its acini model

00:08:58,740 --> 00:09:05,279
with things like matching capabilities

00:09:01,910 --> 00:09:07,170
including bundles so we can have for

00:09:05,279 --> 00:09:09,300
example packages of offers such as the

00:09:07,170 --> 00:09:12,060
ones you've seen in the on the tech in

00:09:09,300 --> 00:09:14,510
the table matching by locations

00:09:12,060 --> 00:09:18,450
including network distance and some more

00:09:14,510 --> 00:09:21,150
sophisticated matching and of course the

00:09:18,450 --> 00:09:24,630
placement requests decisions or that

00:09:21,150 --> 00:09:28,350
that's needed to do the placement the

00:09:24,630 --> 00:09:30,089
current POC is being developed it it's

00:09:28,350 --> 00:09:33,779
running but it's quite very simplified

00:09:30,089 --> 00:09:38,220
at the moment okay now just to conclude

00:09:33,779 --> 00:09:40,350
one last item so what are the next steps

00:09:38,220 --> 00:09:44,190
currently we have an alpha version of a

00:09:40,350 --> 00:09:47,790
CEREC available we planned by the meet

00:09:44,190 --> 00:09:51,839
2013 to complete compare see me the

00:09:47,790 --> 00:09:54,570
implementation of the semi emcf API one

00:09:51,839 --> 00:09:57,740
work still in progress in to integrate

00:09:54,570 --> 00:10:00,240
third-party image 4 g's and factories

00:09:57,740 --> 00:10:05,400
whether they be proprietary like you

00:10:00,240 --> 00:10:07,890
sure soft or open-source on we are also

00:10:05,400 --> 00:10:09,089
some work Santa progresses to integrate

00:10:07,890 --> 00:10:12,830
what we call an application lifecycle

00:10:09,089 --> 00:10:15,360
manager that will accept as input ovf

00:10:12,830 --> 00:10:19,800
packages to model multi-component

00:10:15,360 --> 00:10:22,170
applications and in terms of support of

00:10:19,800 --> 00:10:24,089
specific cloud providers we put the

00:10:22,170 --> 00:10:28,290
focus currently on OpenStack vCloud

00:10:24,089 --> 00:10:30,510
director and imidazole ec2 but we have

00:10:28,290 --> 00:10:32,160
yet to complete the mapping is in

00:10:30,510 --> 00:10:34,980
particular the network mapping mapping

00:10:32,160 --> 00:10:39,480
of the semi model to the underlying

00:10:34,980 --> 00:10:41,910
models of these providers and in the

00:10:39,480 --> 00:10:44,130
area of placement that power just

00:10:41,910 --> 00:10:46,740
presented we have yet to enhance

00:10:44,130 --> 00:10:49,290
matching roles and you

00:10:46,740 --> 00:10:51,839
to make the system more dynamic with the

00:10:49,290 --> 00:10:54,930
ability to change rules on the dynamic

00:10:51,839 --> 00:10:57,540
basis and a more research oriented

00:10:54,930 --> 00:10:59,160
expect you to be to be able to provide

00:10:57,540 --> 00:11:01,279
some to implement some feedback

00:10:59,160 --> 00:11:03,779
mechanisms that is the placement

00:11:01,279 --> 00:11:07,370
intelligence can learn from previous

00:11:03,779 --> 00:11:11,300
decisions to make its current decisions

00:11:07,370 --> 00:11:11,300

YouTube URL: https://www.youtube.com/watch?v=kJE1GrUpWw8


