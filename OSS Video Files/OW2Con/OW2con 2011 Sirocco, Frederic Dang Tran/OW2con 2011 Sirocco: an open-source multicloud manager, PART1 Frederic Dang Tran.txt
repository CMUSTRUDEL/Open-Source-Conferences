Title: OW2con 2011 Sirocco: an open-source multicloud manager, PART1 Frederic Dang Tran
Publication date: 2012-01-25
Playlist: OW2con 2011 Sirocco, Frederic Dang Tran
Description: 
	Speaker: Frederic Dang Tran, Orange Labs
Abstract: The Sirocco OW2 project was launched in 2011 with the goal of developing a multi-cloud IaaS (Infrastructure-as-a-Service) platform. This presentation will describe its architecture, give an overview of its current implementation and of its roadmap for 2012.  The Sirocco middleware exposes a single point of entry to access computing resources located in different IaaS cloud providers either private or public (e.g. Amazon EC2, OpenStack, VMware vCloud Director). In addition Sirocco comes with its own IaaS provider featuring multi-hypervisor support (Xen, KVM, ESX...). The Sirocco platform can be accessed either from a unified Web interface or programmatically through a REST API that hides provider-specific APIs. The Sirocco platform is based on an open framework with a clear separation between generic management logic and pluggable cloud-provider-specific connectors. It is worth noting that part of the Sirocco platform is based on work done in the context of the SelfXL French collaborative project notably with Bull and l'Ecole des Mines de Nantes.
Captions: 
	00:00:03,830 --> 00:00:09,300
I'm going to present this Oracle

00:00:06,540 --> 00:00:11,490
platform which aims to be a logical and

00:00:09,300 --> 00:00:17,460
applesauce multi-cloud manager explained

00:00:11,490 --> 00:00:20,279
what it means so my the outline of my

00:00:17,460 --> 00:00:23,789
presentation will be a summarize the key

00:00:20,279 --> 00:00:26,099
objectives of the project goes through

00:00:23,789 --> 00:00:30,779
the key features of the circle platform

00:00:26,099 --> 00:00:33,420
oh I would focus then on the API is that

00:00:30,779 --> 00:00:36,230
we aim to offer for programmatic access

00:00:33,420 --> 00:00:40,950
and what is the resource model that

00:00:36,230 --> 00:00:42,719
underpins is the cpio and a few words

00:00:40,950 --> 00:00:45,420
about the middle work picture of our

00:00:42,719 --> 00:00:47,460
platform and will end with some

00:00:45,420 --> 00:00:52,710
information by the roadmap of our

00:00:47,460 --> 00:00:54,690
projects or for 2012 so the cervical

00:00:52,710 --> 00:00:58,440
platform aims to be a milky cloud yes

00:00:54,690 --> 00:01:00,559
platform what it means exactly we aim to

00:00:58,440 --> 00:01:04,080
for a single point of entry for

00:01:00,559 --> 00:01:07,920
accessing multiple cloud providers these

00:01:04,080 --> 00:01:11,670
providers can be private can be public

00:01:07,920 --> 00:01:13,500
on also down commercial basis they can

00:01:11,670 --> 00:01:17,460
be based on open source technologies or

00:01:13,500 --> 00:01:20,759
proprietary technologies there's two way

00:01:17,460 --> 00:01:23,700
to access this platform as any cloud

00:01:20,759 --> 00:01:24,780
platform we want to have a Kiki feature

00:01:23,700 --> 00:01:27,720
key requirement is to have a

00:01:24,780 --> 00:01:31,380
programmatic access so to have kind of

00:01:27,720 --> 00:01:34,320
unified API to access these this meta

00:01:31,380 --> 00:01:38,369
cloud platform and also we aim to have a

00:01:34,320 --> 00:01:40,979
interactive access through a unified web

00:01:38,369 --> 00:01:46,200
interface that i will show in in the

00:01:40,979 --> 00:01:48,390
coming minutes from a more developer and

00:01:46,200 --> 00:01:50,810
occupational viewpoint we aim also to

00:01:48,390 --> 00:01:53,280
you have a framework there is not a

00:01:50,810 --> 00:01:57,049
one-size-fits-all solution but as a

00:01:53,280 --> 00:02:00,030
framework that can be extends expanded

00:01:57,049 --> 00:02:02,820
when it comes to a specific policy when

00:02:00,030 --> 00:02:04,290
it comes to adding typically some just

00:02:02,820 --> 00:02:09,000
some providers that provide those other

00:02:04,290 --> 00:02:11,250
platforms and last words its circle is

00:02:09,000 --> 00:02:13,920
not yet another yes but

00:02:11,250 --> 00:02:17,580
we don't aim to compete with OpenStack

00:02:13,920 --> 00:02:21,150
OpenNebula the co-director and whatever

00:02:17,580 --> 00:02:27,080
it's a kind of a intermediary platform

00:02:21,150 --> 00:02:29,760
that sits at the front end and make some

00:02:27,080 --> 00:02:33,959
intermediation in front of the cloud

00:02:29,760 --> 00:02:36,660
providers and circle is is neither a

00:02:33,959 --> 00:02:40,620
multiclad client library it is a

00:02:36,660 --> 00:02:47,070
stateful manager that handles some some

00:02:40,620 --> 00:02:50,070
some some data so now the key features

00:02:47,070 --> 00:02:52,260
of a server goes first form well what we

00:02:50,070 --> 00:02:55,530
mean by multi cloud capabilities is what

00:02:52,260 --> 00:02:57,810
put things in place as a user I can

00:02:55,530 --> 00:03:00,420
provision resources virtual machines

00:02:57,810 --> 00:03:04,590
typically on more than one cloud

00:03:00,420 --> 00:03:08,430
provider so currently in our platform as

00:03:04,590 --> 00:03:11,459
it stands today the user needs to must

00:03:08,430 --> 00:03:13,800
select manually on which product or he

00:03:11,459 --> 00:03:16,200
wants to deploy a particular resource

00:03:13,800 --> 00:03:21,120
and on which location involved in what

00:03:16,200 --> 00:03:26,810
this resource is to be deployed we offer

00:03:21,120 --> 00:03:30,120
some user and project management

00:03:26,810 --> 00:03:32,970
capabilities that is we can group users

00:03:30,120 --> 00:03:35,370
within projects a project is a group of

00:03:32,970 --> 00:03:40,170
users that can have can share visibility

00:03:35,370 --> 00:03:43,049
on a set of resources and we use a right

00:03:40,170 --> 00:03:45,030
right management scheme to to assign

00:03:43,049 --> 00:03:48,870
various world to different members of

00:03:45,030 --> 00:03:54,360
our project when it comes two reasons

00:03:48,870 --> 00:03:57,810
provisioning we can associate some cloud

00:03:54,360 --> 00:04:00,480
provider account to a project we can

00:03:57,810 --> 00:04:04,620
also support I would get go back to this

00:04:00,480 --> 00:04:08,579
later in more detail we support multi vm

00:04:04,620 --> 00:04:10,470
appliances that is not just managing

00:04:08,579 --> 00:04:14,400
individual VMs but managing applications

00:04:10,470 --> 00:04:17,190
packet packaging in appliance and we

00:04:14,400 --> 00:04:20,190
offer the ability to import an appliance

00:04:17,190 --> 00:04:23,220
package in ovf format and to deploy it

00:04:20,190 --> 00:04:24,450
on a pad provider and lastly we have

00:04:23,220 --> 00:04:27,750
some academy

00:04:24,450 --> 00:04:30,270
during features so that we user or

00:04:27,750 --> 00:04:33,000
administrator can keep keep track of our

00:04:30,270 --> 00:04:37,050
resource consumption on a per project

00:04:33,000 --> 00:04:38,880
basis on the / club product evasive so

00:04:37,050 --> 00:04:42,000
just to give you a more concrete example

00:04:38,880 --> 00:04:47,790
here on this configuration example I

00:04:42,000 --> 00:04:50,060
have a project called XYZ where who with

00:04:47,790 --> 00:04:54,120
free members on myself as a

00:04:50,060 --> 00:04:57,060
administrator and Edison the sorry lajim

00:04:54,120 --> 00:05:00,510
should be brought back to me this

00:04:57,060 --> 00:05:04,380
project XYZ is tied you to a private

00:05:00,510 --> 00:05:09,450
account an OpenStack Nova account and an

00:05:04,380 --> 00:05:12,090
amazon account and the these are cans

00:05:09,450 --> 00:05:16,770
these providers whether a nova or ec2

00:05:12,090 --> 00:05:19,260
are managed by the circle platform with

00:05:16,770 --> 00:05:21,330
the ability to direct resource

00:05:19,260 --> 00:05:23,970
provisioning a request to a specific

00:05:21,330 --> 00:05:28,350
location so here we have a private Nova

00:05:23,970 --> 00:05:30,570
implementation installation in in our

00:05:28,350 --> 00:05:33,540
premises it is a private club so it is

00:05:30,570 --> 00:05:35,490
deployed in Paris and for acct we have

00:05:33,540 --> 00:05:41,850
the standard location available for ec2

00:05:35,490 --> 00:05:51,300
in a u.s. Asia and Europe so I will try

00:05:41,850 --> 00:05:53,400
now to with the usual screen size

00:05:51,300 --> 00:05:57,150
problem to give you a more concrete

00:05:53,400 --> 00:06:05,460
example of our web interface so I

00:05:57,150 --> 00:06:13,170
managed to so now I'm as a user I login

00:06:05,460 --> 00:06:15,810
to the circumcircle platform here well

00:06:13,170 --> 00:06:18,960
this is usual control of any gas

00:06:15,810 --> 00:06:21,270
provider if you have a inventory of the

00:06:18,960 --> 00:06:24,120
vector machines we have created so here

00:06:21,270 --> 00:06:27,240
I am a user Fred I am in my personal

00:06:24,120 --> 00:06:29,520
project which is called Fred also if I

00:06:27,240 --> 00:06:34,590
move to the XYZ project i presented

00:06:29,520 --> 00:06:37,380
products li you can barely see that we

00:06:34,590 --> 00:06:39,720
have an aggregate view of victim

00:06:37,380 --> 00:06:42,360
team coming from various providers so

00:06:39,720 --> 00:06:44,550
here we have some vm provided by

00:06:42,360 --> 00:06:47,430
OpenStack novell you know if we know

00:06:44,550 --> 00:06:49,380
private cloud by another provider

00:06:47,430 --> 00:06:51,120
actually which is called vm m that is a

00:06:49,380 --> 00:06:55,260
negative provider bundled with cervical

00:06:51,120 --> 00:06:59,340
and if I manage to scroll down this

00:06:55,260 --> 00:07:01,710
Korean should be some this one for

00:06:59,340 --> 00:07:09,540
example some some vm provision allows

00:07:01,710 --> 00:07:13,380
only see two so now if I am trying to

00:07:09,540 --> 00:07:16,280
create a VM I can select a provider

00:07:13,380 --> 00:07:18,990
between all providers that have been

00:07:16,280 --> 00:07:21,240
associated with a my project so in this

00:07:18,990 --> 00:07:24,650
case are three providers available so if

00:07:21,240 --> 00:07:29,550
i choose ec2 i can select a location say

00:07:24,650 --> 00:07:32,100
singapore and if i grab next burden i

00:07:29,550 --> 00:07:34,460
select so this is very simple setting

00:07:32,100 --> 00:07:38,310
for the just was a sake of demonstration

00:07:34,460 --> 00:07:46,470
select an image i can give a what your

00:07:38,310 --> 00:07:49,970
name for this pm and and actually you

00:07:46,470 --> 00:07:55,890
don't see the vm because it is below the

00:07:49,970 --> 00:07:58,700
screen that's right too bad not sure

00:07:55,890 --> 00:07:58,700
i'll solution for that

00:08:04,380 --> 00:08:08,490
okay so you have to trust me actually be

00:08:06,630 --> 00:08:11,630
cool you don't see anything so the vm is

00:08:08,490 --> 00:08:15,080
being provisioned maybe if I go to this

00:08:11,630 --> 00:08:18,660
to directly to the Amazon ec2 console on

00:08:15,080 --> 00:08:24,840
the asia pacific singapore a location

00:08:18,660 --> 00:08:29,600
maybe you don't see currently so maybe i

00:08:24,840 --> 00:08:29,600
would go back to ok

00:08:38,910 --> 00:08:42,630
I would go back to the slides maybe go

00:08:41,310 --> 00:08:54,120
back to the plant phys ed was version

00:08:42,630 --> 00:08:56,040
later okay so what next so here it's a

00:08:54,120 --> 00:08:58,530
quick summary of the primitives

00:08:56,040 --> 00:09:01,500
available either for a demonstrator off

00:08:58,530 --> 00:09:03,080
for a user to a managed cloud provider

00:09:01,500 --> 00:09:05,280
and clap observer account as

00:09:03,080 --> 00:09:08,580
administrator of the platform I can add

00:09:05,280 --> 00:09:10,350
I can create a cloud provider and make

00:09:08,580 --> 00:09:14,160
it makes it available to any projects

00:09:10,350 --> 00:09:16,800
and put in any project I can describe

00:09:14,160 --> 00:09:18,690
capillary which is not very useful more

00:09:16,800 --> 00:09:20,730
importantly as an user within a project

00:09:18,690 --> 00:09:22,770
i can create my account say i have my

00:09:20,730 --> 00:09:24,360
personalized to i Kenned again i can add

00:09:22,770 --> 00:09:27,990
this account and connect it to my

00:09:24,360 --> 00:09:29,940
project I can associate again to project

00:09:27,990 --> 00:09:32,100
and dissociate a cam to project so

00:09:29,940 --> 00:09:38,970
namely the basic parameters available to

00:09:32,100 --> 00:09:43,920
to manage kappa very camp this will this

00:09:38,970 --> 00:09:47,370
is more less in case just fing already

00:09:43,920 --> 00:09:49,170
covered i will not just what is also

00:09:47,370 --> 00:09:52,920
available through sears require portal

00:09:49,170 --> 00:09:55,050
is ready to to assign some quota on a

00:09:52,920 --> 00:09:58,100
per project basis to limit resource

00:09:55,050 --> 00:10:02,670
consumption and possibly depending on

00:09:58,100 --> 00:10:05,640
Jesus attack lat / account we can also

00:10:02,670 --> 00:10:08,040
put particular cloud provider private

00:10:05,640 --> 00:10:09,930
cloud providers not public have an

00:10:08,040 --> 00:10:13,050
access to be physical infrastructure the

00:10:09,930 --> 00:10:16,040
plateau riders so in this slide actually

00:10:13,050 --> 00:10:19,170
here on the lower part you have the

00:10:16,040 --> 00:10:21,510
physical the viewers of the placement of

00:10:19,170 --> 00:10:24,690
each machine on physical host each of

00:10:21,510 --> 00:10:27,330
this container stands for a physical

00:10:24,690 --> 00:10:32,610
host and you can see actually have the

00:10:27,330 --> 00:10:34,290
ends are placed on the articles actually

00:10:32,610 --> 00:10:36,480
you have to to level of placement you

00:10:34,290 --> 00:10:39,390
have a placement at the cloud provider

00:10:36,480 --> 00:10:41,340
level and once you when you are within a

00:10:39,390 --> 00:10:43,770
plat provider you have a placement at

00:10:41,340 --> 00:10:45,630
within the cloud provider to decide on

00:10:43,770 --> 00:10:49,120
which physical host which cluster which

00:10:45,630 --> 00:10:52,210
physical host to place to place of him

00:10:49,120 --> 00:10:55,029
okay now I moved to the notion of

00:10:52,210 --> 00:10:59,440
appliance and where support as I said

00:10:55,029 --> 00:11:02,800
previously we and we support appliances

00:10:59,440 --> 00:11:06,070
that is a management unit which actually

00:11:02,800 --> 00:11:07,750
package a full application for example a

00:11:06,070 --> 00:11:11,140
three-tiered application with a load

00:11:07,750 --> 00:11:16,270
balancer of several application servers

00:11:11,140 --> 00:11:19,650
and and a back-end database these

00:11:16,270 --> 00:11:21,850
appliances so is can be managed

00:11:19,650 --> 00:11:27,100
automatically and the last cycle of

00:11:21,850 --> 00:11:30,010
these appliance can be a can we can be

00:11:27,100 --> 00:11:32,940
managed we can start the appliance can

00:11:30,010 --> 00:11:35,710
stop it and may be suspended and so on

00:11:32,940 --> 00:11:38,440
how to create an appliance in first

00:11:35,710 --> 00:11:42,790
place currently we offer the ability to

00:11:38,440 --> 00:11:44,800
import and ovf and to turn on ovf in to

00:11:42,790 --> 00:11:48,190
an appliance template we can be used

00:11:44,800 --> 00:11:50,140
later to create appliances we can also

00:11:48,190 --> 00:11:52,680
capture a template from an existing

00:11:50,140 --> 00:11:56,550
appliance which is a regular at runtime

00:11:52,680 --> 00:12:01,420
so the basic primitives available for

00:11:56,550 --> 00:12:04,450
managing appliance are listed here what

00:12:01,420 --> 00:12:09,820
things are self-explanatory for both of

00:12:04,450 --> 00:12:12,610
them more more details about appliances

00:12:09,820 --> 00:12:16,870
when it comes to our specific context as

00:12:12,610 --> 00:12:18,730
a multi-cloud a platform how do we map

00:12:16,870 --> 00:12:21,339
and appliance to cloud providers so

00:12:18,730 --> 00:12:24,570
currently we deploy in an appliance

00:12:21,339 --> 00:12:28,150
within a single cloud provider and the

00:12:24,570 --> 00:12:30,670
next natural step would be to the

00:12:28,150 --> 00:12:32,290
ability to split a plateau riders to

00:12:30,670 --> 00:12:36,400
split an appliance across several class

00:12:32,290 --> 00:12:38,709
providers based on some say constraints

00:12:36,400 --> 00:12:41,980
hints provided by the by the user and

00:12:38,709 --> 00:12:44,740
maybe extensions provide provided by the

00:12:41,980 --> 00:12:50,500
ovf vinod in a future of VF plus + or

00:12:44,740 --> 00:12:52,600
form at last the part about appliance is

00:12:50,500 --> 00:12:54,490
how do we manage it within a cervical

00:12:52,600 --> 00:12:56,290
platform actually there's two

00:12:54,490 --> 00:12:58,089
possibilities the first one is that a

00:12:56,290 --> 00:13:01,540
clap rider provides some native

00:12:58,089 --> 00:13:04,329
capabilities to to handle prices

00:13:01,540 --> 00:13:07,269
this is typically the case for a weekly

00:13:04,329 --> 00:13:08,949
director with its notion of the app so

00:13:07,269 --> 00:13:10,930
in this case actually we delegate most

00:13:08,949 --> 00:13:13,360
appliance management stuff to the

00:13:10,930 --> 00:13:18,300
underlying pad providers otherwise

00:13:13,360 --> 00:13:20,980
actually we handle appliances on top of

00:13:18,300 --> 00:13:23,019
appliance unaware that for various for

00:13:20,980 --> 00:13:25,290
example allows only see two or OpenStack

00:13:23,019 --> 00:13:25,290

YouTube URL: https://www.youtube.com/watch?v=d2FnEx95E8k


