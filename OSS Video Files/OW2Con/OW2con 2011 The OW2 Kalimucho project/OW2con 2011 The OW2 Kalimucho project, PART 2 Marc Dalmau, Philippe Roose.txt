Title: OW2con 2011 The OW2 Kalimucho project, PART 2 Marc Dalmau, Philippe Roose
Publication date: 2012-01-09
Playlist: OW2con 2011 The OW2 Kalimucho project
Description: 
	Speakers: Marc Dalmau, Philippe Roose, LIUPPA/UPPA
Abstract: The democratization of wireless networks combined to the miniaturization of communication devices make pervasive applications possible. The integration of sensors enables the connection to hardware and software environments. Nevertheless, such profusion of heterogeneous devices, networks interfaces and user's needs must face the limitations of mobile devices. It requires adapting continuously the structure of deployed applications in order to suit both the users' needs and the execution environment.
To provide self adaptation, we offer a distributed platform called KALIMUCHO able to make hot (re-) deployment of distributed software components. This platform enables the deployment and the modification of the application structure at run time, as well as physical deployment on mobile hosts.
The platform is services oriented while applications are component based. Thanks to Osagaia Component Model (monitorable) and Korrontea Connector containers (also monitorable), states and events are sent from the application to the platform. Supervision and context recovery can be distributed on PC and Android devices.
The platform is made of three kinds of services:
• Services for supervision of the application: they execute the commands for creating/removing/connecting/disconnecting/migrating the components and allows loading dynamically the Java classes for the Business Components (BCs) and for the exchanged objects when needed. So the application part of the code is not resident on the mobile devices: the classes are loaded when creating a component and removed as soon as this component is removed.
• Services for network communication: they allow the platforms to communicate each other and support the middleware for the connectors.
• Services for the application: they provide services for the BCs in order to give then access to the resources managed by the platform. That means classical resources (texts, images, etc.) and specific resources provided by the hardware (GPS, SMS, etc.)
Captions: 
	00:00:03,859 --> 00:00:10,740
when the contact manager controls adware

00:00:07,560 --> 00:00:12,630
controls the network and controls the

00:00:10,740 --> 00:00:15,089
components the running components

00:00:12,630 --> 00:00:17,970
receive also contacts information from

00:00:15,089 --> 00:00:20,640
other platforms and can send arms to the

00:00:17,970 --> 00:00:22,560
platform and the platform can get state

00:00:20,640 --> 00:00:26,970
from the context manager and receive

00:00:22,560 --> 00:00:31,340
alarm from the context manager we have

00:00:26,970 --> 00:00:37,430
an application model which is home made

00:00:31,340 --> 00:00:40,590
model component is business component

00:00:37,430 --> 00:00:44,280
included encapsulated into a container

00:00:40,590 --> 00:00:48,750
and the container give access to input

00:00:44,280 --> 00:00:51,469
flows output flows and control from and

00:00:48,750 --> 00:00:55,770
to the platform and we have also

00:00:51,469 --> 00:01:00,539
something very similar for connectors

00:00:55,770 --> 00:01:03,750
with input output and control unit so we

00:01:00,539 --> 00:01:06,540
can make internal connectors distributed

00:01:03,750 --> 00:01:12,110
connector and relay connector when there

00:01:06,540 --> 00:01:12,110
is one post that is used for reading

00:01:12,950 --> 00:01:22,950
what is to be done when when developing

00:01:19,470 --> 00:01:25,259
an application well only to write the

00:01:22,950 --> 00:01:27,689
pieces of the applications the business

00:01:25,259 --> 00:01:30,900
components of the application with the

00:01:27,689 --> 00:01:37,409
life cycle very classical I need destroy

00:01:30,900 --> 00:01:40,890
and run and we used some methods to read

00:01:37,409 --> 00:01:46,409
data directly or by listeners and to

00:01:40,890 --> 00:01:49,140
write data 12 Cal mutual first services

00:01:46,409 --> 00:01:52,829
to to the components to access to

00:01:49,140 --> 00:01:56,009
resources to define the user interfaces

00:01:52,829 --> 00:01:59,399
because on Android is very out to to

00:01:56,009 --> 00:02:02,189
different user interfaces and for other

00:01:59,399 --> 00:02:06,630
access also and to send commands

00:02:02,189 --> 00:02:13,970
eventually the data exchange is any

00:02:06,630 --> 00:02:18,500
class that designer want to create so

00:02:13,970 --> 00:02:21,710
you take the example of GPS management

00:02:18,500 --> 00:02:25,820
is a business that takes a GPS position

00:02:21,710 --> 00:02:30,950
it can be right as this is not very hard

00:02:25,820 --> 00:02:34,310
and in it destroy our NBC that gets the

00:02:30,950 --> 00:02:39,020
position and send it and data exchange

00:02:34,310 --> 00:02:42,110
data is very very simple to to write no

00:02:39,020 --> 00:02:46,190
no no difficulty extend sample and

00:02:42,110 --> 00:02:50,300
that's all the problem so to terminate

00:02:46,190 --> 00:02:53,420
we have some modules about the platform

00:02:50,300 --> 00:02:57,440
the platform is very light because we

00:02:53,420 --> 00:03:00,140
want to put it on each kind of device

00:02:57,440 --> 00:03:06,820
and the time the execution time of

00:03:00,140 --> 00:03:10,130
commands is well not not very long so

00:03:06,820 --> 00:03:12,140
some commands are creating a distributed

00:03:10,130 --> 00:03:13,820
connector is longer than creating an

00:03:12,140 --> 00:03:18,290
internal connector of course but not

00:03:13,820 --> 00:03:22,220
very long we have seen also see what

00:03:18,290 --> 00:03:26,989
time to migrate the component so we have

00:03:22,220 --> 00:03:29,840
summers us and it also 300 milliseconds

00:03:26,989 --> 00:03:33,970
to to migrate a component like in the

00:03:29,840 --> 00:03:46,100
example and to deploy an application is

00:03:33,970 --> 00:03:51,730
about six well so can you Cho is now

00:03:46,100 --> 00:03:55,630
very new new new project in order to and

00:03:51,730 --> 00:03:59,120
we are working on the part of decision

00:03:55,630 --> 00:04:01,970
there is a to PhD working on the part of

00:03:59,120 --> 00:04:08,769
decision we hope that it will be

00:04:01,970 --> 00:04:08,769

YouTube URL: https://www.youtube.com/watch?v=QD-ArvYOy1I


