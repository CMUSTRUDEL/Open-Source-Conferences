Title: OW2con'16 LUTECE, the City of Paris CMS and Development Platform
Publication date: 2016-09-28
Playlist: OW2con 2016
Description: 
	Lutece became an OW2 project two years ago. It recently became a mature project. This java framework is used to build applications totaling more than 2 million lines of code. It features a powerful and expressive plugin system. More than 400 plugins have been developed. This presentation will explain how we manage all these components.
Captions: 
	00:00:05,299 --> 00:00:10,889
hello everyone I'm John i'm a software

00:00:09,000 --> 00:00:13,080
developer and software architect at the

00:00:10,889 --> 00:00:16,590
city of Paris and i'll be presenting

00:00:13,080 --> 00:00:18,960
some parts of the retest project so

00:00:16,590 --> 00:00:25,050
today we're going to talk about it this

00:00:18,960 --> 00:00:27,960
CMS and development platform so first

00:00:25,050 --> 00:00:31,890
let's start with a bit of history the

00:00:27,960 --> 00:00:34,860
project started in 2002 when the city of

00:00:31,890 --> 00:00:39,120
Paris released retests version 1 as free

00:00:34,860 --> 00:00:40,710
software using a bsd like license it was

00:00:39,120 --> 00:00:45,469
the first public organization in france

00:00:40,710 --> 00:00:48,300
to open its source code like this and

00:00:45,469 --> 00:00:55,829
the words free software are really

00:00:48,300 --> 00:00:57,930
chosen because not only is it open

00:00:55,829 --> 00:01:03,570
source code but there was a real dr

00:00:57,930 --> 00:01:06,720
political drive and to adopt the free

00:01:03,570 --> 00:01:10,710
software philosophy and it was something

00:01:06,720 --> 00:01:13,650
that was really important at the time in

00:01:10,710 --> 00:01:16,590
the years after this release the blue

00:01:13,650 --> 00:01:19,470
test project continued and the city of

00:01:16,590 --> 00:01:22,650
Paris also continued its involvement

00:01:19,470 --> 00:01:26,310
with free software and open source

00:01:22,650 --> 00:01:28,439
software events so we went to PI capital

00:01:26,310 --> 00:01:32,750
d lib open world forum valley

00:01:28,439 --> 00:01:40,220
open-source submit holcomb value etc and

00:01:32,750 --> 00:01:42,720
in 2014 we came to the UH w2 cone in

00:01:40,220 --> 00:01:44,850
2015 the city of Paris joined the

00:01:42,720 --> 00:01:49,820
audible you to confession as an

00:01:44,850 --> 00:01:54,180
enterprise member and this year in 2016

00:01:49,820 --> 00:01:56,280
vertes became a w-2 matchup project and

00:01:54,180 --> 00:02:00,960
we're very happy that yesterday we got

00:01:56,280 --> 00:02:05,299
the award so please visit the loo test

00:02:00,960 --> 00:02:05,299
project on the audible you to website

00:02:06,320 --> 00:02:14,060
so what is with this and how did it

00:02:09,300 --> 00:02:19,020
become what it is today it started as a

00:02:14,060 --> 00:02:22,080
CMS and was allowing non-technical

00:02:19,020 --> 00:02:24,750
people to build websites that had

00:02:22,080 --> 00:02:27,390
dynamic document models publishing were

00:02:24,750 --> 00:02:34,770
closed search engines newsletters and

00:02:27,390 --> 00:02:36,330
forums all these tools were integrated

00:02:34,770 --> 00:02:38,489
together so that the search results

00:02:36,330 --> 00:02:42,870
would correctly search into the forum

00:02:38,489 --> 00:02:45,230
posts and the published documents the

00:02:42,870 --> 00:02:47,730
publishing workflow would allow to

00:02:45,230 --> 00:02:51,150
ensure that the content that was being

00:02:47,730 --> 00:02:54,930
published was correct with reviews

00:02:51,150 --> 00:02:58,050
validation only some people were

00:02:54,930 --> 00:03:01,170
authorized to publish things on the

00:02:58,050 --> 00:03:05,930
website so that's I guess normal

00:03:01,170 --> 00:03:10,049
features for a CMS but it also had

00:03:05,930 --> 00:03:12,810
another side to it which was a java

00:03:10,049 --> 00:03:15,600
enterprise portal which allowed IT

00:03:12,810 --> 00:03:17,489
integration and business application

00:03:15,600 --> 00:03:23,220
integration and authentication

00:03:17,489 --> 00:03:25,500
management these dualities is allowed

00:03:23,220 --> 00:03:27,090
because leutis is really and has been

00:03:25,500 --> 00:03:30,690
becoming more more and more of a

00:03:27,090 --> 00:03:36,750
development framework where core

00:03:30,690 --> 00:03:41,250
services and AP is our are brought by

00:03:36,750 --> 00:03:43,890
the by the framework they all the

00:03:41,250 --> 00:03:47,010
framework also offers a code generator

00:03:43,890 --> 00:03:48,630
when you need it code generators are not

00:03:47,010 --> 00:03:53,450
always the answers but sometimes they're

00:03:48,630 --> 00:03:55,790
a good tool to solve some problems and

00:03:53,450 --> 00:03:58,890
all of this is allowed to develop

00:03:55,790 --> 00:04:03,180
several generic plugins that can be

00:03:58,890 --> 00:04:06,720
assembled to deliver complex services so

00:04:03,180 --> 00:04:10,579
for example if you want to build a web

00:04:06,720 --> 00:04:16,139
form that allows the patient to submit

00:04:10,579 --> 00:04:18,840
ideas and then export those ideas into a

00:04:16,139 --> 00:04:21,510
format that can be searched or that

00:04:18,840 --> 00:04:24,840
we analyzed for statistics all of this

00:04:21,510 --> 00:04:28,910
can be easily done with all the plugins

00:04:24,840 --> 00:04:28,910
the generic plugins that were developed

00:04:29,570 --> 00:04:34,940
here's a short list non-exhaustive list

00:04:32,699 --> 00:04:39,810
of people who have used or are using

00:04:34,940 --> 00:04:42,810
latest and people who are who have

00:04:39,810 --> 00:04:46,830
skills in integrating with test

00:04:42,810 --> 00:04:49,530
solutions of course it's not written

00:04:46,830 --> 00:04:52,860
here but the city of Paris itself is

00:04:49,530 --> 00:04:56,220
using a good test to to build some of

00:04:52,860 --> 00:04:59,610
its most known websites so for example

00:04:56,220 --> 00:05:01,430
the if you've worked in the streets the

00:04:59,610 --> 00:05:03,650
recent days you must have seen the

00:05:01,430 --> 00:05:09,330
advertising for Bujji participative

00:05:03,650 --> 00:05:15,450
which is the biggest thing right now and

00:05:09,330 --> 00:05:19,770
it's built using leutis the next next

00:05:15,450 --> 00:05:22,169
project also will be about managing the

00:05:19,770 --> 00:05:27,510
user interaction with the city of Paris

00:05:22,169 --> 00:05:29,720
and will be built on with this I'd like

00:05:27,510 --> 00:05:31,710
to take a moment here to talk about

00:05:29,720 --> 00:05:35,130
accessibility which has been discussed

00:05:31,710 --> 00:05:38,099
this morning and accessibility has

00:05:35,130 --> 00:05:42,000
always been a big part in the test

00:05:38,099 --> 00:05:44,729
because as a public service there's even

00:05:42,000 --> 00:05:48,210
more responsibility in providing

00:05:44,729 --> 00:05:51,240
services that everyone can use so it's

00:05:48,210 --> 00:05:56,220
really important for us and it's a core

00:05:51,240 --> 00:05:59,520
part of the of the framework and we have

00:05:56,220 --> 00:06:01,860
we have designed the framework and the

00:05:59,520 --> 00:06:10,130
core parts with accessibility in mind

00:06:01,860 --> 00:06:12,300
and we try to provide services and

00:06:10,130 --> 00:06:15,419
documentation to allow people to develop

00:06:12,300 --> 00:06:17,970
their own business applications down put

00:06:15,419 --> 00:06:22,400
down the arm parts that can fit into

00:06:17,970 --> 00:06:22,400
leutis with accessibility in mind

00:06:25,860 --> 00:06:33,760
though I'm going to focus on one key

00:06:30,880 --> 00:06:36,070
feature abilities which is a which is

00:06:33,760 --> 00:06:38,380
really important is that it's based on a

00:06:36,070 --> 00:06:42,430
core plug-in architecture and really

00:06:38,380 --> 00:06:46,230
aims to be a truly modular system this

00:06:42,430 --> 00:06:50,620
comes from observation from real-world

00:06:46,230 --> 00:06:52,330
application development where you where

00:06:50,620 --> 00:06:56,200
many times you would end up with a very

00:06:52,330 --> 00:06:57,940
big and maintainable system and the

00:06:56,200 --> 00:07:01,450
observation and the observer observe a

00:06:57,940 --> 00:07:03,490
chinois modularity was only the only was

00:07:01,450 --> 00:07:08,440
really the only way to continue

00:07:03,490 --> 00:07:11,710
developing at with efficiency so in the

00:07:08,440 --> 00:07:15,610
test everything is a plugin even the

00:07:11,710 --> 00:07:17,110
content management system itself so this

00:07:15,610 --> 00:07:22,420
is really important because it means

00:07:17,110 --> 00:07:25,840
that if you if your needs are not

00:07:22,420 --> 00:07:29,590
covered by generic plugins and composing

00:07:25,840 --> 00:07:31,690
generic generic systems and you you find

00:07:29,590 --> 00:07:35,980
that you need to develop your own plugin

00:07:31,690 --> 00:07:37,930
you won't be blocked in a way that you

00:07:35,980 --> 00:07:39,880
would think oh if I how come this

00:07:37,930 --> 00:07:43,780
plug-in can do that and I cannot do it

00:07:39,880 --> 00:07:47,140
with my plugin so that's a real strength

00:07:43,780 --> 00:07:50,050
in Buddhist so plug-in docomo and plug

00:07:47,140 --> 00:07:54,580
in HTML or plugins that that allow you

00:07:50,050 --> 00:07:56,980
to publish content either typed content

00:07:54,580 --> 00:07:59,200
for the document with the workflow that

00:07:56,980 --> 00:08:02,860
I was talking about earlier about a

00:07:59,200 --> 00:08:06,810
validation and HTML is a plug-in HTML

00:08:02,860 --> 00:08:11,710
allows you to publish really handwritten

00:08:06,810 --> 00:08:17,050
HTML or with a rich text editor and type

00:08:11,710 --> 00:08:19,840
content okay all this all these features

00:08:17,050 --> 00:08:22,750
have led to the development of over 400

00:08:19,840 --> 00:08:26,919
plugins and that's a pretty big number

00:08:22,750 --> 00:08:28,930
and that has brought challenges so the

00:08:26,919 --> 00:08:32,340
challenge is how do we manage all these

00:08:28,930 --> 00:08:32,340
all these different plugins

00:08:33,159 --> 00:08:38,829
so to manage all those plugins we've

00:08:35,229 --> 00:08:44,050
relied on the Java ecosystem and it's

00:08:38,829 --> 00:08:47,560
proven reliable tools so at the Java

00:08:44,050 --> 00:08:51,100
level in the code we use Java features

00:08:47,560 --> 00:08:54,730
to to develop plugins so the fact that

00:08:51,100 --> 00:08:57,069
you can have jars and define interfaces

00:08:54,730 --> 00:08:59,740
and use a class loader and other

00:08:57,069 --> 00:09:07,589
mechanisms such as dependency injections

00:08:59,740 --> 00:09:07,589
or or other mechanism to compose classes

00:09:08,069 --> 00:09:17,910
we have a developed maven plugin so we

00:09:12,819 --> 00:09:23,050
use maven to to assemble web apps and

00:09:17,910 --> 00:09:27,579
our map maven plugin allows every

00:09:23,050 --> 00:09:30,250
project being either being a plug-in or

00:09:27,579 --> 00:09:33,970
or other types of product to deploy a

00:09:30,250 --> 00:09:36,459
really testable web app even if it's

00:09:33,970 --> 00:09:38,529
only so a plug-in would only provide for

00:09:36,459 --> 00:09:40,750
example a part of the page but you can

00:09:38,529 --> 00:09:43,980
easily bundle the plug-in in the core

00:09:40,750 --> 00:09:47,819
and deploy a full working website

00:09:43,980 --> 00:09:53,139
working only on the code for the plugin

00:09:47,819 --> 00:09:55,870
we also have written a parent palm

00:09:53,139 --> 00:10:01,680
that's used by all the other projects

00:09:55,870 --> 00:10:07,889
and defines important things such as the

00:10:01,680 --> 00:10:11,529
check style PMD rules it defines the

00:10:07,889 --> 00:10:14,829
common used library versions so that we

00:10:11,529 --> 00:10:17,649
that we know that work well together and

00:10:14,829 --> 00:10:20,199
all of this allows the project's to not

00:10:17,649 --> 00:10:24,670
have to to work on on this part of the

00:10:20,199 --> 00:10:29,920
of the picture maven is also very useful

00:10:24,670 --> 00:10:32,259
to build good documentation so there is

00:10:29,920 --> 00:10:35,230
a very technical documentation the

00:10:32,259 --> 00:10:38,160
Javadoc but there's also the maven site

00:10:35,230 --> 00:10:43,440
that can that can build beautiful

00:10:38,160 --> 00:10:46,320
websites including so documentation

00:10:43,440 --> 00:10:50,370
and reports that we use so we have

00:10:46,320 --> 00:10:52,620
configured maven2 to generate websites

00:10:50,370 --> 00:10:56,010
for all the different plugins in a

00:10:52,620 --> 00:10:58,590
coherent way and and so although the

00:10:56,010 --> 00:11:01,350
components benefit from this central

00:10:58,590 --> 00:11:04,850
configuration also a bit of

00:11:01,350 --> 00:11:09,590
documentation later on stuck with them

00:11:04,850 --> 00:11:12,860
we use other very known and proven

00:11:09,590 --> 00:11:16,670
projects to manage all these components

00:11:12,860 --> 00:11:19,110
so Jenkins for a continuous integration

00:11:16,670 --> 00:11:21,570
which will send you an email as soon as

00:11:19,110 --> 00:11:23,880
you do something bad well it will also

00:11:21,570 --> 00:11:30,360
generate the latest version of the dogs

00:11:23,880 --> 00:11:32,040
and reports the people from Spy will be

00:11:30,360 --> 00:11:33,870
I were talking about their github

00:11:32,040 --> 00:11:36,000
migration and how it helped with

00:11:33,870 --> 00:11:39,960
continuous integration and I can testify

00:11:36,000 --> 00:11:43,890
that it's true we also migrated from svn

00:11:39,960 --> 00:11:46,050
subversion to github so you are on show

00:11:43,890 --> 00:11:48,390
the links to the loo test platform

00:11:46,050 --> 00:11:50,670
github site later at the end of the

00:11:48,390 --> 00:11:53,370
presentation and so we use the github

00:11:50,670 --> 00:11:55,830
Jenkins integration to launch unit tests

00:11:53,370 --> 00:12:00,690
every time someone commits on on the

00:11:55,830 --> 00:12:05,090
project we also use a zero as a bug

00:12:00,690 --> 00:12:10,790
tracking in release documentation

00:12:05,090 --> 00:12:16,080
project so we really try to have a

00:12:10,790 --> 00:12:20,130
precise and accurate and true

00:12:16,080 --> 00:12:22,080
description of our projects endura so

00:12:20,130 --> 00:12:26,430
that when we make a release juror

00:12:22,080 --> 00:12:31,350
automatically generates the list of new

00:12:26,430 --> 00:12:36,120
features bugs that were fixed for each

00:12:31,350 --> 00:12:41,430
release and finally we use features from

00:12:36,120 --> 00:12:44,300
sonar cube to try and monitor the

00:12:41,430 --> 00:12:48,270
quality the global quality of the code

00:12:44,300 --> 00:12:51,570
obviously having a 400 projects you have

00:12:48,270 --> 00:12:54,990
to aggregate and build statistics to

00:12:51,570 --> 00:12:56,819
know where you are where you can most

00:12:54,990 --> 00:13:05,579
efficiently spend your energy to

00:12:56,819 --> 00:13:13,609
improve your your code at the Java level

00:13:05,579 --> 00:13:15,989
we try to push conventions so that

00:13:13,609 --> 00:13:18,769
developers can quickly dive into

00:13:15,989 --> 00:13:21,559
projects so we reach strive to have a

00:13:18,769 --> 00:13:24,959
business and presentation separation

00:13:21,559 --> 00:13:28,619
presentation can be using plain HTML or

00:13:24,959 --> 00:13:31,309
using a so portlets which is part of

00:13:28,619 --> 00:13:34,979
pages or a full page apps or based on

00:13:31,309 --> 00:13:38,549
web services and for the business logic

00:13:34,979 --> 00:13:41,069
we try to reset rate using the agb a

00:13:38,549 --> 00:13:45,239
simplified ETP model of service home and

00:13:41,069 --> 00:13:48,589
d our object coding style of the coding

00:13:45,239 --> 00:13:53,089
style is enforced by the global Tom

00:13:48,589 --> 00:13:55,410
configuration in maven this is how the

00:13:53,089 --> 00:13:59,339
documentation looks on the left you can

00:13:55,410 --> 00:14:03,959
see the maven website and on the right

00:13:59,339 --> 00:14:05,639
you can see the readme in the markdown

00:14:03,959 --> 00:14:10,499
read me on github that's generated from

00:14:05,639 --> 00:14:14,549
the same x talk source from the maven

00:14:10,499 --> 00:14:19,129
project with the extract to md tool that

00:14:14,549 --> 00:14:19,129
was developed inside the latest project

00:14:20,239 --> 00:14:24,479
see I think we're running short of time

00:14:22,499 --> 00:14:27,419
so I'm going to go really fast over this

00:14:24,479 --> 00:14:31,729
one we've made it really easy to deploy

00:14:27,419 --> 00:14:34,859
websites to different environments and

00:14:31,729 --> 00:14:37,439
even when you're not when you're working

00:14:34,859 --> 00:14:40,559
on a plugin code you can easily deploy a

00:14:37,439 --> 00:14:42,179
website that has all the stuff necessary

00:14:40,559 --> 00:14:46,889
to run a full website not just a plugin

00:14:42,179 --> 00:14:49,829
and that's really important all the

00:14:46,889 --> 00:14:52,379
measures measurements we do on the 400

00:14:49,829 --> 00:14:55,409
plugins are on or in these different

00:14:52,379 --> 00:14:58,350
tools reports sonarqube etc and github

00:14:55,409 --> 00:15:00,899
and we've built a small custom

00:14:58,350 --> 00:15:02,879
development it's also part of your test

00:15:00,899 --> 00:15:05,519
that aggregates all this information

00:15:02,879 --> 00:15:08,300
from the other tools it looks like this

00:15:05,519 --> 00:15:11,480
so we have graphs

00:15:08,300 --> 00:15:17,900
helping us to see where we should focus

00:15:11,480 --> 00:15:19,790
our energy to improve the code base here

00:15:17,900 --> 00:15:23,180
are a list of documentation and

00:15:19,790 --> 00:15:25,910
resources about the project you'll find

00:15:23,180 --> 00:15:27,800
us on the google youtube website and the

00:15:25,910 --> 00:15:30,980
audible you to forge there's the

00:15:27,800 --> 00:15:33,770
official french website you can also go

00:15:30,980 --> 00:15:35,570
to the demo site that's wiped every few

00:15:33,770 --> 00:15:39,440
hours so you can mess with it all you

00:15:35,570 --> 00:15:41,540
want and code and the technical

00:15:39,440 --> 00:15:42,710
documentation is also available and if

00:15:41,540 --> 00:15:44,570
you want to see you can also go to

00:15:42,710 --> 00:15:48,950
veggie patty patty pie pie pie affair

00:15:44,570 --> 00:15:53,470
which was just where the campaign just

00:15:48,950 --> 00:15:53,470

YouTube URL: https://www.youtube.com/watch?v=Nq-8XIw2sRA


