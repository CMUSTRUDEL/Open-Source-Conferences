Title: OW2con'16 Preparing Your Source Code for Distribution
Publication date: 2016-09-27
Playlist: OW2con 2016
Description: 
	When I was a young engineer, I grew listening to an old software engineer that said too often: "You don't know, what you don't know".As years passed, that strange motto started to make more sense for software development. We send zip files or gits with the code of our products to other people in a professional context, too often without really knowing what kind of third-party code and licenses are inside. In this session we go through simple techniques to clearly list the third-party libraries, code snippets and marking your own software as yours in a standardized manner. So that the next time you share code professionally, it is easy for others to understand the applicable licenses and copyrights within.
Captions: 
	00:00:06,890 --> 00:00:13,080
hi hello so as we seen a lot of people

00:00:10,710 --> 00:00:16,650
are using open source we also saw that

00:00:13,080 --> 00:00:19,080
open source is exploding but we have a

00:00:16,650 --> 00:00:20,939
problem and the problem is that we are

00:00:19,080 --> 00:00:22,439
still a bit limited in our skills as

00:00:20,939 --> 00:00:25,380
humans we have a capacity to process

00:00:22,439 --> 00:00:26,939
data so what we'll talk on these short

00:00:25,380 --> 00:00:29,160
slides is some techniques that you can

00:00:26,939 --> 00:00:31,650
use really down to the level of the

00:00:29,160 --> 00:00:34,920
source code on how to start organizing

00:00:31,650 --> 00:00:37,079
these problems so a bit about myself a

00:00:34,920 --> 00:00:39,180
lot of introduction here I also spent a

00:00:37,079 --> 00:00:41,550
good part of my time and expertise with

00:00:39,180 --> 00:00:42,780
a Linux Foundation working on

00:00:41,550 --> 00:00:45,390
standardization and with the Free

00:00:42,780 --> 00:00:46,800
Software Foundation and triple-check

00:00:45,390 --> 00:00:49,890
just develops tools to actually check

00:00:46,800 --> 00:00:52,050
the quality on these aspects we have a

00:00:49,890 --> 00:00:54,180
problem with open source some companies

00:00:52,050 --> 00:00:56,789
they try to use it or monetize it in a

00:00:54,180 --> 00:00:58,620
way that is a bit aggressive well some

00:00:56,789 --> 00:01:01,410
other companies they sometimes start

00:00:58,620 --> 00:01:04,110
creating some issues without knowing and

00:01:01,410 --> 00:01:06,810
this happens because you're asking your

00:01:04,110 --> 00:01:09,450
engineers to go for millions of lines of

00:01:06,810 --> 00:01:12,270
code and then try to sort this on their

00:01:09,450 --> 00:01:14,790
own and very honestly it's quite easy to

00:01:12,270 --> 00:01:16,259
make a mistake you have a deadline you

00:01:14,790 --> 00:01:17,880
need to go to stack overflow you get

00:01:16,259 --> 00:01:19,950
some cold out of it you just put it you

00:01:17,880 --> 00:01:21,450
don't remember about it but then the

00:01:19,950 --> 00:01:23,670
problem that you get out of this is if

00:01:21,450 --> 00:01:26,159
someone knocks in your door and say as

00:01:23,670 --> 00:01:27,509
well excuse me sir but that's my code

00:01:26,159 --> 00:01:30,360
over there can you please release the

00:01:27,509 --> 00:01:33,270
whole thing to me and as a company

00:01:30,360 --> 00:01:36,750
manager or product owner you'll say hmm

00:01:33,270 --> 00:01:38,460
this doesn't work however we also have

00:01:36,750 --> 00:01:40,590
the responsibility since we are using

00:01:38,460 --> 00:01:42,540
open source to start looking at open

00:01:40,590 --> 00:01:44,189
source from a product perspective we

00:01:42,540 --> 00:01:48,450
have to start handling it more

00:01:44,189 --> 00:01:49,920
professionally so intuitively you will

00:01:48,450 --> 00:01:51,990
see a lot of companies doing something

00:01:49,920 --> 00:01:53,909
like this they start by trying to

00:01:51,990 --> 00:01:56,219
organize all the components if they are

00:01:53,909 --> 00:01:58,200
using then they start trying to solve

00:01:56,219 --> 00:01:59,759
the license conflicts between them so

00:01:58,200 --> 00:02:01,409
can a license work with another one

00:01:59,759 --> 00:02:03,390
which is compatible with what I want to

00:02:01,409 --> 00:02:05,549
do and if you have some tool then you

00:02:03,390 --> 00:02:07,649
start looking at the snippets and in the

00:02:05,549 --> 00:02:10,170
end you start creating the documentation

00:02:07,649 --> 00:02:11,879
creating the documentation in a way that

00:02:10,170 --> 00:02:13,410
the people that are receiving your coat

00:02:11,879 --> 00:02:14,910
your product

00:02:13,410 --> 00:02:17,400
can actually understand it and then

00:02:14,910 --> 00:02:21,420
probably even the best case possible to

00:02:17,400 --> 00:02:23,190
reuse this information so most of you

00:02:21,420 --> 00:02:25,440
would probably start with an excel file

00:02:23,190 --> 00:02:28,440
like this where we try to discover which

00:02:25,440 --> 00:02:30,360
licenses we have in our code or which

00:02:28,440 --> 00:02:32,640
parts of the code are ours or which

00:02:30,360 --> 00:02:34,470
parts of the code from someone else but

00:02:32,640 --> 00:02:36,240
in the end this all boils down to the

00:02:34,470 --> 00:02:37,680
quality of the licenses that we have

00:02:36,240 --> 00:02:40,290
inside of it and how well you are

00:02:37,680 --> 00:02:42,260
describing them and this is what we try

00:02:40,290 --> 00:02:45,060
to help on this case because it's

00:02:42,260 --> 00:02:47,330
fundamentally supported by frida two

00:02:45,060 --> 00:02:49,740
things one of them is your source code

00:02:47,330 --> 00:02:51,570
the other one is the first particle that

00:02:49,740 --> 00:02:53,220
you are using but then in the end it's

00:02:51,570 --> 00:02:54,630
also about the documentation so how can

00:02:53,220 --> 00:02:57,540
people that are receiving your code

00:02:54,630 --> 00:02:59,070
understand what is inside of it so if

00:02:57,540 --> 00:03:02,190
you are looking about the source code

00:02:59,070 --> 00:03:04,890
it's relatively simple but still

00:03:02,190 --> 00:03:07,260
forgotten which is the headers marking

00:03:04,890 --> 00:03:09,150
the code is yours putting the same for

00:03:07,260 --> 00:03:11,190
example this belongs to my company and

00:03:09,150 --> 00:03:13,140
I'm making it available under this

00:03:11,190 --> 00:03:16,260
license and if the code is proprietary

00:03:13,140 --> 00:03:17,910
then just really their proprietary so

00:03:16,260 --> 00:03:19,950
when you are looking for example on the

00:03:17,910 --> 00:03:22,100
first particle it becomes much easier to

00:03:19,950 --> 00:03:24,720
know what was yours and what is theirs

00:03:22,100 --> 00:03:26,610
but when you come down to listing your

00:03:24,720 --> 00:03:28,800
components do you have a way to automate

00:03:26,610 --> 00:03:31,440
this list or is the person feel doing it

00:03:28,800 --> 00:03:33,000
by hand so these are the things that if

00:03:31,440 --> 00:03:35,070
you're not doing them already maybe you

00:03:33,000 --> 00:03:39,150
should start automating like we saw

00:03:35,070 --> 00:03:40,800
before and going back to the source code

00:03:39,150 --> 00:03:42,570
it's relatively simple so i would

00:03:40,800 --> 00:03:45,120
suggest just these two lines over there

00:03:42,570 --> 00:03:46,800
and take notice of the second line where

00:03:45,120 --> 00:03:48,120
you see license because many times

00:03:46,800 --> 00:03:51,959
you'll see just someone mentioning

00:03:48,120 --> 00:03:53,520
apache or MIT or bsd but this makes it a

00:03:51,959 --> 00:03:54,720
bit harder for the human that is

00:03:53,520 --> 00:03:56,489
receiving your code without any

00:03:54,720 --> 00:03:57,780
education or information to know that

00:03:56,489 --> 00:04:00,630
you're talking about a license and not a

00:03:57,780 --> 00:04:02,550
university so try to make this kind of

00:04:00,630 --> 00:04:06,780
information easier for machines and

00:04:02,550 --> 00:04:08,760
humans to understand then we also have

00:04:06,780 --> 00:04:10,950
another way that we recommend which is

00:04:08,760 --> 00:04:13,380
about files this is just a small text

00:04:10,950 --> 00:04:15,660
file that you can use a notepad and on

00:04:13,380 --> 00:04:17,669
this text file you describe things like

00:04:15,660 --> 00:04:19,919
the license that the component is under

00:04:17,669 --> 00:04:21,750
it described who wrote the components

00:04:19,919 --> 00:04:24,150
you describe which files belong to that

00:04:21,750 --> 00:04:26,490
component or which folder and it was

00:04:24,150 --> 00:04:27,180
first created by Android because I had

00:04:26,490 --> 00:04:28,650
to describe

00:04:27,180 --> 00:04:30,330
thousands of files and they have no way

00:04:28,650 --> 00:04:31,919
of doing it easily but it's quite

00:04:30,330 --> 00:04:33,389
straightforward to to go for it so you

00:04:31,919 --> 00:04:34,860
can do it manually but we also make a

00:04:33,389 --> 00:04:37,680
link over there for a free tool that you

00:04:34,860 --> 00:04:40,020
can just generate them the other way

00:04:37,680 --> 00:04:42,030
that we recommend it's actually a Linux

00:04:40,020 --> 00:04:45,389
Foundation initiative already has some

00:04:42,030 --> 00:04:47,699
years and what it does is for each file

00:04:45,389 --> 00:04:49,979
that you're giving in your zip file it

00:04:47,699 --> 00:04:52,229
will describe the provenance of it

00:04:49,979 --> 00:04:55,650
meaning the license the copyright and

00:04:52,229 --> 00:04:58,320
how you can use it and it's also a very

00:04:55,650 --> 00:05:01,259
easy way for any machine or any tool

00:04:58,320 --> 00:05:03,270
from competitors or humans to pick up

00:05:01,259 --> 00:05:05,070
this information and then to reuse it so

00:05:03,270 --> 00:05:06,599
if you are talking about force ology for

00:05:05,070 --> 00:05:09,930
example if you'll be able to reuse an S

00:05:06,599 --> 00:05:11,430
pdx it's not possible to do it manually

00:05:09,930 --> 00:05:13,289
in most cases because it's many files

00:05:11,430 --> 00:05:14,849
but we also make available a small tool

00:05:13,289 --> 00:05:18,870
for free that you can try it out and

00:05:14,849 --> 00:05:20,250
just create a few SPD X's and then the

00:05:18,870 --> 00:05:24,330
last part that I would like to bring to

00:05:20,250 --> 00:05:26,160
your attention is the standardization so

00:05:24,330 --> 00:05:28,740
one of the most important aspects is

00:05:26,160 --> 00:05:30,449
removing the ambiguity so on this

00:05:28,740 --> 00:05:32,159
situation putting the version number on

00:05:30,449 --> 00:05:33,930
a component is very important so was

00:05:32,159 --> 00:05:36,120
just saying that i'm using my sequel or

00:05:33,930 --> 00:05:37,740
something's not enough because sometimes

00:05:36,120 --> 00:05:40,229
the license for that component changes

00:05:37,740 --> 00:05:42,510
over the years so very important for us

00:05:40,229 --> 00:05:45,900
not to have to duplicate that effort and

00:05:42,510 --> 00:05:48,960
i would also call your attention for s

00:05:45,900 --> 00:05:50,220
pdx org slash licenses because all the

00:05:48,960 --> 00:05:52,470
license names that you've been seeing

00:05:50,220 --> 00:05:54,479
across the day they are using that

00:05:52,470 --> 00:05:56,310
standardization format so they describe

00:05:54,479 --> 00:05:58,110
exactly how to write it in a very short

00:05:56,310 --> 00:06:01,349
way so that everyone is talking the same

00:05:58,110 --> 00:06:04,050
way about them and then comes the last

00:06:01,349 --> 00:06:06,389
part which is really looking at a source

00:06:04,050 --> 00:06:09,090
code let it be closed source let it be

00:06:06,389 --> 00:06:10,830
open sores this free files for example

00:06:09,090 --> 00:06:13,259
they already tell us a lot about your

00:06:10,830 --> 00:06:16,400
project so they can tell me for example

00:06:13,259 --> 00:06:18,900
which license terms are applicable and

00:06:16,400 --> 00:06:21,120
not only do that as they can also

00:06:18,900 --> 00:06:22,770
explain me using a simple with me I know

00:06:21,120 --> 00:06:25,740
exactly where to find information about

00:06:22,770 --> 00:06:27,900
your project a small summary how I can

00:06:25,740 --> 00:06:29,849
use it how I can contribute it if I have

00:06:27,900 --> 00:06:31,979
a security disclaimer how I can proceed

00:06:29,849 --> 00:06:34,620
to that well I would also use a security

00:06:31,979 --> 00:06:35,909
md and these are information that most

00:06:34,620 --> 00:06:38,070
times when you are even as a

00:06:35,909 --> 00:06:39,120
professional developer on a close source

00:06:38,070 --> 00:06:40,560
project you're not giving this

00:06:39,120 --> 00:06:42,090
information immediately so it's not

00:06:40,560 --> 00:06:44,130
immediately intuitive for the person

00:06:42,090 --> 00:06:45,840
receiving the code and the last thing

00:06:44,130 --> 00:06:48,660
that I would recommend personally that

00:06:45,840 --> 00:06:50,970
you start doing is an offer file which

00:06:48,660 --> 00:06:53,190
is a way of saying which companies are

00:06:50,970 --> 00:06:55,650
writing the code for that given product

00:06:53,190 --> 00:06:57,960
or the people that are involved there

00:06:55,650 --> 00:06:59,910
and this is important because then it's

00:06:57,960 --> 00:07:01,380
the easiest way that we have to cross

00:06:59,910 --> 00:07:03,510
matching information on the source code

00:07:01,380 --> 00:07:05,220
files and say okay this was built by

00:07:03,510 --> 00:07:06,480
this company or this person but this one

00:07:05,220 --> 00:07:08,490
comes from another one even when the

00:07:06,480 --> 00:07:10,919
source code files from your company or

00:07:08,490 --> 00:07:12,780
someone else they are very deeply mixed

00:07:10,919 --> 00:07:15,510
with one another so this is one way of

00:07:12,780 --> 00:07:17,490
distinguishing them and if it's a lot of

00:07:15,510 --> 00:07:18,840
work to create an offer file that for

00:07:17,490 --> 00:07:21,210
project might have hundreds of people

00:07:18,840 --> 00:07:23,220
they also make it easy to generate one

00:07:21,210 --> 00:07:28,290
so if you're using github just run this

00:07:23,220 --> 00:07:32,000
type of syntax and that's it very simple

00:07:28,290 --> 00:07:32,000

YouTube URL: https://www.youtube.com/watch?v=DVl58U3YC1Q


