Title: OW2con'16 DocDokuPLM : Domain Specific PaaS and Business Oriented API
Publication date: 2016-09-27
Playlist: OW2con 2016
Description: 
	Totally replacing our SOAP web services with HTTP web services behind an API has been a real challenge for us this year. We made the choice to generate our Java and JavaScript API by using Swagger. Swagger allows us to generate a JSON file describing our REST layer services, and thus generate code from this description file. We're now able to deliver a SDK to other applications in Java and JavaScript today.

Using same codebase and same method names are really useful for developers, and modifying our REST layer doesn't mean modifying our SDKs by hand: it's generated! It's quite easy to deploy and/or use: our APIs are simply Maven and NodeJS modules. Having a interactive documentation for all SDKs is really appreciable, it allows us to discover every services and test them.

We can now resolve specific use-cases by developing new applications with this API. Currently our SDK is in use in 2 separate projects and languages (a GUI written with NodeWebkit and a JEE server application), and fits as needed.
Captions: 
	00:00:05,779 --> 00:00:13,799
hi it's a real pleasure to be here once

00:00:10,349 --> 00:00:15,480
again in all the value to con I'd like

00:00:13,799 --> 00:00:17,760
to thank you

00:00:15,480 --> 00:00:22,830
what W - and especially in Mozilla for

00:00:17,760 --> 00:00:31,050
hosting this great event today I will

00:00:22,830 --> 00:00:34,500
present what we did over this year if

00:00:31,050 --> 00:00:37,640
you were here at the last session or

00:00:34,500 --> 00:00:43,129
last year I've presented

00:00:37,640 --> 00:00:45,410
wqp PLM assault but for a web desktop

00:00:43,129 --> 00:00:50,399
web-based desktop application

00:00:45,410 --> 00:00:55,910
now we'll go this photo with business

00:00:50,399 --> 00:00:55,910
oriented API and how he is approached

00:00:56,840 --> 00:01:06,479
who are we we are small company based in

00:01:00,539 --> 00:01:10,650
truth about 15 coworkers

00:01:06,479 --> 00:01:13,380
we offer services we add industry

00:01:10,650 --> 00:01:16,560
ordinate organization to digitize their

00:01:13,380 --> 00:01:22,380
business and we are committed to the

00:01:16,560 --> 00:01:28,829
open source we develop wqln which I will

00:01:22,380 --> 00:01:29,610
present you in this presentation about

00:01:28,829 --> 00:01:32,689
me

00:01:29,610 --> 00:01:35,640
I'm the devil leader of this software

00:01:32,689 --> 00:01:43,740
I'm am also technical trainer I give

00:01:35,640 --> 00:01:47,250
trainings in France so let's start with

00:01:43,740 --> 00:01:50,450
what is the cookware and then I will

00:01:47,250 --> 00:01:52,520
present you our our approach for

00:01:50,450 --> 00:01:57,450
platform-as-a-service

00:01:52,520 --> 00:02:00,570
we see the technical aspects of this

00:01:57,450 --> 00:02:10,200
approach and finally who is uni who is

00:02:00,570 --> 00:02:13,210
using our API today the book p.m.

00:02:10,200 --> 00:02:17,050
quite complete platform to manage

00:02:13,210 --> 00:02:22,630
products and documentation and it also

00:02:17,050 --> 00:02:29,560
have some try cracker facilities for

00:02:22,630 --> 00:02:34,120
issues others the first section of this

00:02:29,560 --> 00:02:37,090
software is the project lifecycle you

00:02:34,120 --> 00:02:41,170
can manage the entire entire lifecycle

00:02:37,090 --> 00:02:44,980
of your projects into a software you can

00:02:41,170 --> 00:02:49,540
create manage different project

00:02:44,980 --> 00:02:54,220
structures with violence and finally you

00:02:49,540 --> 00:03:00,310
can see your projects in into 3d in your

00:02:54,220 --> 00:03:02,110
browser without any plugin we also have

00:03:00,310 --> 00:03:04,300
a document management system which

00:03:02,110 --> 00:03:09,010
allows you to manage all your

00:03:04,300 --> 00:03:12,910
documentation of your projects we have a

00:03:09,010 --> 00:03:18,190
version control system also for projects

00:03:12,910 --> 00:03:20,890
and documents like git or SVM you can

00:03:18,190 --> 00:03:23,110
add tags attributes create template

00:03:20,890 --> 00:03:25,989
models define links between documents

00:03:23,110 --> 00:03:30,900
and projects and so organize browse

00:03:25,989 --> 00:03:38,310
share and it's quite a complete person

00:03:30,900 --> 00:03:41,380
and today we have three clients software

00:03:38,310 --> 00:03:46,810
the first one is the web application

00:03:41,380 --> 00:03:48,880
which is a variable on the internet and

00:03:46,810 --> 00:03:52,739
we have a common lady command-line

00:03:48,880 --> 00:03:56,680
interface on and also a web-based

00:03:52,739 --> 00:03:58,750
desktop application which intend to

00:03:56,680 --> 00:04:04,120
synchronize your files when you first

00:03:58,750 --> 00:04:10,300
system with this program itself and we

00:04:04,120 --> 00:04:12,459
also have social social features like a

00:04:10,300 --> 00:04:14,640
real-time audio and video communication

00:04:12,459 --> 00:04:22,180
and

00:04:14,640 --> 00:04:28,990
so this is the blue cube here today

00:04:22,180 --> 00:04:34,840
this year sorry we we need on API

00:04:28,990 --> 00:04:39,240
why because for many reasons the first

00:04:34,840 --> 00:04:43,030
reason is that today the web is evolving

00:04:39,240 --> 00:04:47,470
very quick and if you want to compete

00:04:43,030 --> 00:04:51,099
you have to innovate faster faster and

00:04:47,470 --> 00:04:54,669
faster to reduce the time to market so

00:04:51,099 --> 00:04:59,130
why did we need a PI or more exactly why

00:04:54,669 --> 00:05:05,229
do we need an API today is to innovate

00:04:59,130 --> 00:05:10,360
faster we can now develop new graphical

00:05:05,229 --> 00:05:17,020
user interfaces but also develop new API

00:05:10,360 --> 00:05:25,150
eyes above this API why to resolve

00:05:17,020 --> 00:05:28,150
specific domain industry needs so

00:05:25,150 --> 00:05:30,900
bringing this API makes us ready to

00:05:28,150 --> 00:05:30,900
platform-as-a-service

00:05:32,820 --> 00:05:43,090
with this new API you can use it to

00:05:39,460 --> 00:05:45,550
build new API to be more business

00:05:43,090 --> 00:05:52,270
specific and to resolve a very specific

00:05:45,550 --> 00:05:59,460
use case so for each use case we can

00:05:52,270 --> 00:05:59,460
develop a new solution based on our past

00:06:03,529 --> 00:06:13,349
the industry in this industry you will

00:06:08,610 --> 00:06:15,779
find many sectors so like automobile

00:06:13,349 --> 00:06:20,509
efficient agricultural and so on and

00:06:15,779 --> 00:06:24,839
also many different domains into this

00:06:20,509 --> 00:06:27,779
specific sectors so you will find

00:06:24,839 --> 00:06:35,369
maintenance department Human Resources

00:06:27,779 --> 00:06:40,279
concepting and so all of domains and

00:06:35,369 --> 00:06:46,679
sectors does not have the same need the

00:06:40,279 --> 00:06:49,799
the same use cases to to resolve so with

00:06:46,679 --> 00:07:03,299
our appeal at API sorry we try to

00:06:49,799 --> 00:07:07,649
address every need industry may have so

00:07:03,299 --> 00:07:10,259
yes it benefits for every actor we

00:07:07,649 --> 00:07:15,749
innovate faster we don't have to rewrite

00:07:10,259 --> 00:07:18,449
what has been already written and we the

00:07:15,749 --> 00:07:28,079
developer now can focus on the use cases

00:07:18,449 --> 00:07:32,279
and resolve them today with dozen we do

00:07:28,079 --> 00:07:34,889
not ask you your code you cannot push

00:07:32,279 --> 00:07:38,669
your code to our platform but this will

00:07:34,889 --> 00:07:41,099
be a main key on our next one map today

00:07:38,669 --> 00:07:44,939
we are this year we have prepared the

00:07:41,099 --> 00:07:47,539
API and it will is deployment at scale

00:07:44,939 --> 00:07:51,569
for you you won't have to worry about

00:07:47,539 --> 00:07:53,610
the inflation infrastructure I don't

00:07:51,569 --> 00:08:00,029
have to worry worry about the processors

00:07:53,610 --> 00:08:06,209
lohan and so on it's a benefit for every

00:08:00,029 --> 00:08:10,259
actors now it's something to think when

00:08:06,209 --> 00:08:14,480
you want to build a new app shall I rent

00:08:10,259 --> 00:08:18,380
my own server will I pay for the rope

00:08:14,480 --> 00:08:22,510
to build my application or will I reuse

00:08:18,380 --> 00:08:29,240
these bricks so you will also save money

00:08:22,510 --> 00:08:33,200
and you'll get some support because the

00:08:29,240 --> 00:08:36,410
more this API is used the more the

00:08:33,200 --> 00:08:41,680
problems are well-known and also the

00:08:36,410 --> 00:08:41,680
human community can be very afraid

00:08:45,760 --> 00:08:58,780
about the technical aspects until this

00:08:53,660 --> 00:09:04,430
year we we have to we had to maintain

00:08:58,780 --> 00:09:10,490
both and two end points to communication

00:09:04,430 --> 00:09:14,480
protocols that are so can rest and it's

00:09:10,490 --> 00:09:18,080
a pain to maintain both medicine end

00:09:14,480 --> 00:09:22,240
points not the same codebase we had a

00:09:18,080 --> 00:09:27,050
lot of rage with that so now we

00:09:22,240 --> 00:09:37,550
completely focus on the rest layer and

00:09:27,050 --> 00:09:41,210
we make it our server is a java-based

00:09:37,550 --> 00:09:43,840
application and we use specific

00:09:41,210 --> 00:09:47,620
annotations which are not standard yet

00:09:43,840 --> 00:09:51,800
there they are developed by it swagger

00:09:47,620 --> 00:09:55,310
swagger is a collaborative project and

00:09:51,800 --> 00:10:00,890
the other Linux Foundation and it intend

00:09:55,310 --> 00:10:05,140
to deliver a space a specification for a

00:10:00,890 --> 00:10:08,800
REST API which are human readable and

00:10:05,140 --> 00:10:08,800
also by computers

00:10:09,670 --> 00:10:19,290
so in our conveys who you will find many

00:10:13,990 --> 00:10:21,570
annotations around our last layer as a

00:10:19,290 --> 00:10:28,740
debate api

00:10:21,570 --> 00:10:32,050
api operation and api there are others

00:10:28,740 --> 00:10:38,589
annotations well these three are the

00:10:32,050 --> 00:10:44,769
main interesting what does it bring him

00:10:38,589 --> 00:10:48,579
in a row it allow us to pass them with

00:10:44,769 --> 00:10:52,899
another Java based program and generate

00:10:48,579 --> 00:11:03,070
a JSON file or ml file which describes

00:10:52,899 --> 00:11:06,339
all services once the JSON file I have

00:11:03,070 --> 00:11:20,170
been produced we are now able to

00:11:06,339 --> 00:11:23,589
generate SDK to many languages we today

00:11:20,170 --> 00:11:27,310
we have two ways the SDK one in Java and

00:11:23,589 --> 00:11:31,870
the other in JavaScript and to generate

00:11:27,310 --> 00:11:36,600
it we use Swati of Cochin which is under

00:11:31,870 --> 00:11:43,240
the Apache License and available in beta

00:11:36,600 --> 00:11:46,899
it generates our the Java API from this

00:11:43,240 --> 00:11:50,279
description and it's packaged as a wrap

00:11:46,899 --> 00:11:54,339
so you can bring it in you can integrate

00:11:50,279 --> 00:11:58,930
integrate it in your existing

00:11:54,339 --> 00:12:06,160
application or directly use the

00:11:58,930 --> 00:12:09,269
modernized version it will be published

00:12:06,160 --> 00:12:09,269
and w-2

00:12:12,050 --> 00:12:18,619
the JavaScript SDK also use a module

00:12:16,470 --> 00:12:22,980
from swagger which is what your client

00:12:18,619 --> 00:12:26,339
it's simply not Reyes module which or

00:12:22,980 --> 00:12:32,999
which read the JSON description and

00:12:26,339 --> 00:12:35,160
generate a JavaScript SDK it can run in

00:12:32,999 --> 00:12:39,689
a browser so you can directly integrate

00:12:35,160 --> 00:12:43,499
it in an existing web app and you can

00:12:39,689 --> 00:12:52,889
also use it simply as a not Jes module

00:12:43,499 --> 00:12:56,009
in server application if you took like

00:12:52,889 --> 00:12:58,499
Java or JavaScript or don't want to use

00:12:56,009 --> 00:13:01,290
it there are the main user languages

00:12:58,499 --> 00:13:12,179
then we can support and bring our app

00:13:01,290 --> 00:13:15,119
API like swift up skaara and so on so

00:13:12,179 --> 00:13:22,829
the most important thing is who is using

00:13:15,119 --> 00:13:28,019
it today we do we use our API in our

00:13:22,829 --> 00:13:32,670
project GPM is a web-based desktop

00:13:28,019 --> 00:13:37,829
application which is mostly designed for

00:13:32,670 --> 00:13:41,639
3d files design designers but also fits

00:13:37,829 --> 00:13:44,069
for simple file management basically

00:13:41,639 --> 00:13:50,100
it's synchronized your file system with

00:13:44,069 --> 00:13:55,610
the stuff like as via an audit you see

00:13:50,100 --> 00:13:55,610
what is modified what is out of date

00:13:57,470 --> 00:14:05,279
before this year

00:14:01,910 --> 00:14:08,519
GPM was relying on the common brainy

00:14:05,279 --> 00:14:12,569
command-line interface to consume our

00:14:08,519 --> 00:14:16,589
services now it uses the JavaScript SDK

00:14:12,569 --> 00:14:19,069
it's much faster more reliable more

00:14:16,589 --> 00:14:19,069
flexible

00:14:20,960 --> 00:14:27,440
yes control of the application it's a

00:14:24,130 --> 00:14:34,330
desktop application but behind this

00:14:27,440 --> 00:14:38,350
JavaScript on viewers yes so the

00:14:34,330 --> 00:14:49,730
designer account synchronized is files

00:14:38,350 --> 00:14:52,730
directly in one click sorry ii project

00:14:49,730 --> 00:14:58,490
with using the DPLA as a JavaScript SDK

00:14:52,730 --> 00:15:02,000
now is a command line interface like it

00:14:58,490 --> 00:15:05,270
or as VN you can do GPL M check out

00:15:02,000 --> 00:15:09,970
check in push-pull from your common

00:15:05,270 --> 00:15:09,970
light so it's not forever every users

00:15:11,320 --> 00:15:20,690
and the third application who is using

00:15:16,370 --> 00:15:24,850
our API is from star it's a Java and web

00:15:20,690 --> 00:15:28,640
application and it intend to help the

00:15:24,850 --> 00:15:33,040
agriculture industry with the reporting

00:15:28,640 --> 00:15:38,420
system motivation and advice for farmers

00:15:33,040 --> 00:15:42,130
which can see directly what kind of

00:15:38,420 --> 00:15:45,890
seeds they had to put in the field

00:15:42,130 --> 00:15:51,560
giving a stupid example I don't know

00:15:45,890 --> 00:15:54,380
very well the VOC every way and you have

00:15:51,560 --> 00:15:56,410
also different views in this application

00:15:54,380 --> 00:16:00,440
because there are different domains

00:15:56,410 --> 00:16:02,900
farmers are using it using using it but

00:16:00,440 --> 00:16:08,959
also technicians and also distributors

00:16:02,900 --> 00:16:12,910
in this industry so it's real and

00:16:08,959 --> 00:16:21,050
concrete example of the domain-specific

00:16:12,910 --> 00:16:25,520
and business oriented API and why not

00:16:21,050 --> 00:16:29,779
maybe you tomorrow if you need to

00:16:25,520 --> 00:16:31,420
develop an application which needs

00:16:29,779 --> 00:16:34,110
document management system

00:16:31,420 --> 00:16:39,720
fracturing tracking facilities and

00:16:34,110 --> 00:16:46,180
social and notification features you can

00:16:39,720 --> 00:16:49,150
already use our API the next village is

00:16:46,180 --> 00:16:52,360
coming very soon so stay tuned and don't

00:16:49,150 --> 00:16:55,080
hesitate to for us on github and submit

00:16:52,360 --> 00:16:55,080

YouTube URL: https://www.youtube.com/watch?v=T9bTfH0gUnU


