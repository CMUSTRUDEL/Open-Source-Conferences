Title: OW2con'16 SeedStack - The Lean Development Stack
Publication date: 2016-09-28
Playlist: OW2con 2016
Description: 
	SeedStack is an enterprise application development environment designed for Open Source and using worldwide standards.
SeedStack is a high productivity end-to-end tool that encompasses all the application layers: business, persistence, security, Application Program Interface connection, web-friendly interfaces with ready to use open source standard components.

SeedStack boosts development efficiency and removes trouble and complexity of installation, by providing a ready-to-use modular environment of well-chosen components, Convention-over-Configuration, sensible defaults and opinionated APIs. Developers can then focus on their core activity: business code. Open-source software and agile development approach transform application development experience to deliver innovative business products.

SeedStack integrates standard components and provides its own high-value technologies. The result is a full-stack open environment suitable for rapid application development. While the highly modular Java framework may be compared to Spring, the choice of the technologies is more opinionated and less coupled; the web framework combines two User Interface mainstream technologies, Google AngularJs and Twitter Bootstrap. The main piece of the stack is the Business Framework which focuses on the importance of the investment and reusability of the business domain. SeedStack can be used in a large spectrum of platforms, from Cloud to command-line or common enterprise application servers.

SeedStack is used in numerous production environments in domains as manufacturing, retail, enterprise administration, human resources, trade, connected vehicle, research and development. It is reliable and highly scalable.
Captions: 
	00:00:04,700 --> 00:00:12,599
hello everybody my name is Maurice matei

00:00:09,139 --> 00:00:17,150
I'm project program manager of

00:00:12,599 --> 00:00:19,710
stack I'm working for the PSA group and

00:00:17,150 --> 00:00:22,380
my name is Arielle way and I'm the

00:00:19,710 --> 00:00:24,269
software architect of seed stack and I

00:00:22,380 --> 00:00:28,260
will present you with Mario's

00:00:24,269 --> 00:00:31,080
dissolution so we would like to show you

00:00:28,260 --> 00:00:34,219
some aspects about our software

00:00:31,080 --> 00:00:38,700
development stack which we built in our

00:00:34,219 --> 00:00:40,920
context and i hope you will contribute

00:00:38,700 --> 00:00:45,180
and we will use this track after our

00:00:40,920 --> 00:00:47,850
representation so what is this tag this

00:00:45,180 --> 00:00:52,789
tag it's a full development solution a

00:00:47,850 --> 00:00:56,879
full stack enable developers and

00:00:52,789 --> 00:00:59,219
managers to better frame development in

00:00:56,879 --> 00:01:02,940
their enterprise so you have a full

00:00:59,219 --> 00:01:04,860
stack solution including web development

00:01:02,940 --> 00:01:10,610
aspects including including back-end

00:01:04,860 --> 00:01:14,880
aspect but also we deal with how to

00:01:10,610 --> 00:01:17,960
realize a business application code so

00:01:14,880 --> 00:01:21,000
we introduced in these solutions some

00:01:17,960 --> 00:01:24,020
domain driven design aspects in order to

00:01:21,000 --> 00:01:29,490
better frame application development

00:01:24,020 --> 00:01:32,790
code sistex also provides a scalable

00:01:29,490 --> 00:01:35,250
architecture for the developers so it's

00:01:32,790 --> 00:01:41,369
an architecture that can be used by one

00:01:35,250 --> 00:01:44,780
developer from a big organization with a

00:01:41,369 --> 00:01:47,970
lot of developers and it's also scalable

00:01:44,780 --> 00:01:52,770
from technical point of view because you

00:01:47,970 --> 00:01:55,079
can compose your front-end you can

00:01:52,770 --> 00:02:01,320
compose your back-end you can compose

00:01:55,079 --> 00:02:06,390
your business part with API and also

00:02:01,320 --> 00:02:09,390
it's an sistex text comes with an rich

00:02:06,390 --> 00:02:10,750
extensible ecosystem of add-ons this

00:02:09,390 --> 00:02:15,010
add-ons are

00:02:10,750 --> 00:02:17,950
picked up to ask for two technical

00:02:15,010 --> 00:02:22,630
solution to technical challenges but

00:02:17,950 --> 00:02:26,380
also you can add yourself your are done

00:02:22,630 --> 00:02:31,380
for a business scope like translation

00:02:26,380 --> 00:02:38,110
like communication protocol and also for

00:02:31,380 --> 00:02:42,670
user details but let's see why we did

00:02:38,110 --> 00:02:48,910
this complete this full stack in a PSA

00:02:42,670 --> 00:02:52,780
group so we developed for years with

00:02:48,910 --> 00:02:57,970
most common framework sin in open source

00:02:52,780 --> 00:03:01,239
and we had a lot of difficulties one

00:02:57,970 --> 00:03:04,959
when using this frameworks why because

00:03:01,239 --> 00:03:08,860
they are only tool boxes for the

00:03:04,959 --> 00:03:13,350
developer they don't have orientation

00:03:08,860 --> 00:03:16,930
about business code they don't have

00:03:13,350 --> 00:03:22,180
aspects about user interface so in order

00:03:16,930 --> 00:03:27,120
to avoid this difficulties which make

00:03:22,180 --> 00:03:31,239
our systems huge and complex monolids

00:03:27,120 --> 00:03:33,160
they come without standardization for

00:03:31,239 --> 00:03:37,690
the business code so the business code

00:03:33,160 --> 00:03:40,410
was did by each developer as he wanted

00:03:37,690 --> 00:03:44,140
to do it so there's no there was not no

00:03:40,410 --> 00:03:46,920
standardization of the business code we

00:03:44,140 --> 00:03:50,530
have a very poor usability of our code

00:03:46,920 --> 00:03:54,340
for the technical libraries but also for

00:03:50,530 --> 00:03:58,750
the function libraries or business code

00:03:54,340 --> 00:04:02,440
and also each develop developer could

00:03:58,750 --> 00:04:05,220
take its own libraries its own

00:04:02,440 --> 00:04:10,110
open-source libraries for its own

00:04:05,220 --> 00:04:14,970
requirement so we had a huge pool of

00:04:10,110 --> 00:04:19,780
component in in our new organization so

00:04:14,970 --> 00:04:23,020
sit stacks come as an answer to software

00:04:19,780 --> 00:04:24,610
strategy so we want to address various

00:04:23,020 --> 00:04:27,819
business cases which

00:04:24,610 --> 00:04:30,219
we had in PSA is especially from

00:04:27,819 --> 00:04:33,430
manufacturing to trading from retail to

00:04:30,219 --> 00:04:36,879
to digital banking infrastructure and

00:04:33,430 --> 00:04:40,180
research and development and it is now a

00:04:36,879 --> 00:04:43,719
solution which helps us to better friend

00:04:40,180 --> 00:04:46,120
development to to give the good

00:04:43,719 --> 00:04:50,110
standards to developers to in order to

00:04:46,120 --> 00:04:55,719
build their java web application and

00:04:50,110 --> 00:04:59,289
also the business code so i think a

00:04:55,719 --> 00:05:02,139
dhryn you can show us kill some key

00:04:59,289 --> 00:05:03,849
components of seeds that ok so let's

00:05:02,139 --> 00:05:07,900
take a look at the key components of

00:05:03,849 --> 00:05:10,090
seed stack so the first component is a

00:05:07,900 --> 00:05:15,099
Java framework which is used for back

00:05:10,090 --> 00:05:19,300
end the part of an application it's a

00:05:15,099 --> 00:05:23,680
camel plug-in architecture each plug-in

00:05:19,300 --> 00:05:25,810
as a well-defined responsibility and is

00:05:23,680 --> 00:05:29,860
therefore integrating a specific

00:05:25,810 --> 00:05:33,539
technology or providing a service the

00:05:29,860 --> 00:05:38,020
colonel is here to orchestrate plugins

00:05:33,539 --> 00:05:43,750
detect the plugins answer their request

00:05:38,020 --> 00:05:46,270
and start up the whole application so in

00:05:43,750 --> 00:05:48,310
the Java framework you can find the core

00:05:46,270 --> 00:05:50,199
java technologies like dependency

00:05:48,310 --> 00:05:56,349
injection based on google juice for

00:05:50,199 --> 00:06:02,919
instance integration we serve let things

00:05:56,349 --> 00:06:08,020
like security with a bash feel or things

00:06:02,919 --> 00:06:12,339
like rest resources or with Jax Jax

00:06:08,020 --> 00:06:15,310
arrays so the second part is a domain

00:06:12,339 --> 00:06:18,969
driven design framework or the business

00:06:15,310 --> 00:06:21,009
from Hopkins we call it it's it's based

00:06:18,969 --> 00:06:23,469
on the domain driven design principles

00:06:21,009 --> 00:06:27,159
and provide the building blocks to help

00:06:23,469 --> 00:06:30,789
design and code your business code so

00:06:27,159 --> 00:06:34,690
it's you can find the business building

00:06:30,789 --> 00:06:35,780
blocks like base classes for value

00:06:34,690 --> 00:06:38,320
object

00:06:35,780 --> 00:06:41,690
auntie T segregate or patterns like

00:06:38,320 --> 00:06:45,260
repositories factories and so on so they

00:06:41,690 --> 00:06:48,550
are out of the box building blocks that

00:06:45,260 --> 00:06:51,260
you can use to build your own code and

00:06:48,550 --> 00:06:54,860
this framework is very opinionated about

00:06:51,260 --> 00:06:58,790
how to design your code and how you you

00:06:54,860 --> 00:07:01,100
write these patterns so it's optional in

00:06:58,790 --> 00:07:03,350
the frame lock but in the stack but you

00:07:01,100 --> 00:07:06,560
can it's strongly recommended to use it

00:07:03,350 --> 00:07:09,320
and at PSA every projector uses the

00:07:06,560 --> 00:07:13,840
business from the third component is a

00:07:09,320 --> 00:07:16,730
UI framework so it's a it's a web

00:07:13,840 --> 00:07:22,070
framework you based on angularjs and

00:07:16,730 --> 00:07:23,870
require GS it's enabled to compose your

00:07:22,070 --> 00:07:26,480
UI the same way you compose your

00:07:23,870 --> 00:07:29,150
back-end so you can add feature with

00:07:26,480 --> 00:07:31,120
just adding a URL in your in your

00:07:29,150 --> 00:07:33,500
application is based on fragment

00:07:31,120 --> 00:07:36,169
fragmented just a part of an application

00:07:33,500 --> 00:07:38,240
with modular JavaScript module CSS and

00:07:36,169 --> 00:07:40,970
so on with a manifest and you just

00:07:38,240 --> 00:07:44,890
reference this URL to edit in your

00:07:40,970 --> 00:07:47,600
application so basis based on this

00:07:44,890 --> 00:07:49,840
composability we can make end to end

00:07:47,600 --> 00:07:54,280
features and add it in an application

00:07:49,840 --> 00:07:57,020
with a single dependency or a single

00:07:54,280 --> 00:08:00,039
artifact in your maven pump for instance

00:07:57,020 --> 00:08:06,770
you can add a feature that i propose

00:08:00,039 --> 00:08:09,950
java api rest api and UI in one single

00:08:06,770 --> 00:08:13,990
dependency so we use this compatibility

00:08:09,950 --> 00:08:19,310
to build adn't so we have a lot of atoms

00:08:13,990 --> 00:08:23,570
in the in the official repository 25 or

00:08:19,310 --> 00:08:26,410
more I think they are doing stanchion of

00:08:23,570 --> 00:08:33,589
of seats actually whoever add-ons for

00:08:26,410 --> 00:08:35,839
GPA gmas web services or UI components

00:08:33,589 --> 00:08:37,659
and so on you have also atoms that are

00:08:35,839 --> 00:08:40,849
end to end features like you

00:08:37,659 --> 00:08:43,729
internationalization with you I to

00:08:40,849 --> 00:08:47,360
manage your cheese and translations and

00:08:43,729 --> 00:08:48,590
so on so you can really build any other

00:08:47,360 --> 00:08:53,930
new one

00:08:48,590 --> 00:08:56,780
and an added to the solution so let's

00:08:53,930 --> 00:08:59,240
have a look at a typical sit stack web

00:08:56,780 --> 00:09:01,280
application so sits like proposed a lot

00:08:59,240 --> 00:09:04,550
of patterns you can build web

00:09:01,280 --> 00:09:08,930
applications but also rest microservices

00:09:04,550 --> 00:09:11,510
and so on so you have a back-end part

00:09:08,930 --> 00:09:17,090
and a front end part and everything is

00:09:11,510 --> 00:09:19,160
communicating to rest apx so i think i

00:09:17,090 --> 00:09:24,740
need to speed up a bit we have also

00:09:19,160 --> 00:09:29,360
graphical time since like like you what

00:09:24,740 --> 00:09:31,490
would you see here those as a team we

00:09:29,360 --> 00:09:33,950
provide the other pan sauce but you can

00:09:31,490 --> 00:09:37,250
build you own in your company and add a

00:09:33,950 --> 00:09:41,200
specific team in PSA we have more themes

00:09:37,250 --> 00:09:45,560
for internal need so here I have a

00:09:41,200 --> 00:09:49,040
project generation animated gif but I

00:09:45,560 --> 00:09:51,800
want to show you the real thing alive so

00:09:49,040 --> 00:09:56,840
I will generate a project for you from

00:09:51,800 --> 00:10:02,860
the from the website maybe you I don't

00:09:56,840 --> 00:10:08,630
know if you can see anything but I will

00:10:02,860 --> 00:10:18,920
launch the generator and ask for web

00:10:08,630 --> 00:10:23,090
project fill in some some information my

00:10:18,920 --> 00:10:25,640
keyboard is not working very well ok so

00:10:23,090 --> 00:10:29,240
that's ok this model so you have a full

00:10:25,640 --> 00:10:32,960
log and then you have a generated

00:10:29,240 --> 00:10:41,530
project that you can run immediately and

00:10:32,960 --> 00:10:44,330
deploy if you need so the smaller

00:10:41,530 --> 00:10:47,750
application that we created it's just

00:10:44,330 --> 00:10:52,700
the same as we we saw on the diagram on

00:10:47,750 --> 00:10:55,370
the schema before here you have an

00:10:52,700 --> 00:10:58,160
application that is working you have a

00:10:55,370 --> 00:11:00,050
back-end front end with a graphical team

00:10:58,160 --> 00:11:02,180
some features

00:11:00,050 --> 00:11:04,130
technical features you can add a dunce

00:11:02,180 --> 00:11:06,620
like GPA or anything to connect your

00:11:04,130 --> 00:11:10,209
database and you can add functional

00:11:06,620 --> 00:11:20,950
features like Tom section and so on so

00:11:10,209 --> 00:11:24,290
I'm going to go back to the slides okay

00:11:20,950 --> 00:11:26,959
so stuck in essence is an integration

00:11:24,290 --> 00:11:29,060
stack because it it integrates a lot of

00:11:26,959 --> 00:11:31,130
existing software technologies open

00:11:29,060 --> 00:11:33,740
source technologies into something

00:11:31,130 --> 00:11:36,290
greater than the sum of its parts it's

00:11:33,740 --> 00:11:38,690
because it's automatic and it integrates

00:11:36,290 --> 00:11:42,529
all the technologies seamlessly in your

00:11:38,690 --> 00:11:46,070
application you just add some I done and

00:11:42,529 --> 00:11:48,399
you are ready to go to go sit stacked

00:11:46,070 --> 00:11:53,810
relies on stand answer where possible

00:11:48,399 --> 00:11:56,060
because we are on we are using GSA our

00:11:53,810 --> 00:11:59,510
RFC where possible but we can also

00:11:56,060 --> 00:12:02,440
integrate any technology it takes from

00:11:59,510 --> 00:12:05,089
one day to one week to to write an ad on

00:12:02,440 --> 00:12:07,850
basically depending on the complexity

00:12:05,089 --> 00:12:10,790
but it's very simple you just have to to

00:12:07,850 --> 00:12:16,160
make the glue to make everything

00:12:10,790 --> 00:12:22,029
everything work together so sit stacks

00:12:16,160 --> 00:12:26,450
is open source since 2015 it has a

00:12:22,029 --> 00:12:30,079
business-friendly license and opens the

00:12:26,450 --> 00:12:33,800
gate to contribute it's a hundred

00:12:30,079 --> 00:12:37,070
percent open source of the three core

00:12:33,800 --> 00:12:39,829
frameworks the official at the 25

00:12:37,070 --> 00:12:43,820
official add-ons all the tools like

00:12:39,829 --> 00:12:46,339
archetypes my own generators are open

00:12:43,820 --> 00:12:52,970
sewers and also our documentation and

00:12:46,339 --> 00:12:56,690
website so people can use our disco'd

00:12:52,970 --> 00:13:02,260
and can using on their own organization

00:12:56,690 --> 00:13:05,480
and also contribute to to our code base

00:13:02,260 --> 00:13:09,670
and especially it can be extended with

00:13:05,480 --> 00:13:13,260
proprietary advance without restriction

00:13:09,670 --> 00:13:19,970
we come to join

00:13:13,260 --> 00:13:24,150
God of all w we we bring here I think

00:13:19,970 --> 00:13:30,830
completes that with a lot of archetypes

00:13:24,150 --> 00:13:33,810
like micro services like rest api like

00:13:30,830 --> 00:13:36,240
batches like a web application these

00:13:33,810 --> 00:13:38,810
archetypes can be used by a project in

00:13:36,240 --> 00:13:46,470
order to to create their own

00:13:38,810 --> 00:13:50,070
architecture and this project has

00:13:46,470 --> 00:13:53,760
demonstrated also benefits especially in

00:13:50,070 --> 00:13:56,190
PSA context it is already used by more

00:13:53,760 --> 00:14:01,260
than 50 projects and these are big

00:13:56,190 --> 00:14:03,720
project not very small and it has also

00:14:01,260 --> 00:14:07,350
on return on investment which is very

00:14:03,720 --> 00:14:09,600
interesting especially because we have a

00:14:07,350 --> 00:14:12,300
proven software architecture which is

00:14:09,600 --> 00:14:14,760
defined and used and reused by other

00:14:12,300 --> 00:14:20,010
project and it is applied and project

00:14:14,760 --> 00:14:23,220
take it as it done as it is we address

00:14:20,010 --> 00:14:26,970
most of the technical challenges you

00:14:23,220 --> 00:14:31,830
develop more encounters when he creates

00:14:26,970 --> 00:14:35,010
a project we introduce the domain driven

00:14:31,830 --> 00:14:38,820
design in our now and design and our

00:14:35,010 --> 00:14:44,130
coding and these helps business and

00:14:38,820 --> 00:14:47,550
developers to work together we also add

00:14:44,130 --> 00:14:51,330
the capacity a strong capacity of the

00:14:47,550 --> 00:14:53,960
combo components technical or functional

00:14:51,330 --> 00:14:57,360
component to be reused across our

00:14:53,960 --> 00:15:00,830
organization and also there are some

00:14:57,360 --> 00:15:05,370
real economy gain proven in this context

00:15:00,830 --> 00:15:10,230
and I hope I can talk with you about

00:15:05,370 --> 00:15:12,510
this later and you come with us to

00:15:10,230 --> 00:15:15,220
contribute to this project thank you

00:15:12,510 --> 00:15:17,279
very much if you have sensors

00:15:15,220 --> 00:15:17,279

YouTube URL: https://www.youtube.com/watch?v=BJVjsYhxA3I


