Title: Optimized, multicloud, serverless deployment using open source framework
Publication date: 2021-06-30
Playlist: OW2con'21
Description: 
	Presentation of the complete tool and methodology for automated deployment and optimization of the serverless application. The MELODIC framework for serverless deployment will be demonstrated, together with modelling and optimization capabilities. The live demo of the business, serverless application deployment will be shown. Finally, guidelines and tips & tricks for multi-cloud serverless deployment will be shared.
Captions: 
	00:00:02,620 --> 00:00:06,480
[Music]

00:00:09,390 --> 00:00:13,840
[Music]

00:00:12,160 --> 00:00:18,240
good morning

00:00:13,840 --> 00:00:21,359
my name is and i'm really happy to be

00:00:18,240 --> 00:00:22,480
here and to be able to present our

00:00:21,359 --> 00:00:27,119
presentation

00:00:22,480 --> 00:00:29,359
regarding the multi-cloud optimization

00:00:27,119 --> 00:00:33,280
autonomous multi-cloud serverless

00:00:29,359 --> 00:00:36,160
deployment and optimized management

00:00:33,280 --> 00:00:37,280
in my presentation i will tell about the

00:00:36,160 --> 00:00:40,320
melodic project

00:00:37,280 --> 00:00:43,760
it is the one of the lw2

00:00:40,320 --> 00:00:44,800
projects so it is fully open source and

00:00:43,760 --> 00:00:47,840
available for

00:00:44,800 --> 00:00:47,840
for download

00:00:48,000 --> 00:00:51,760
what is melodic it is a single universal

00:00:50,960 --> 00:00:54,800
platform

00:00:51,760 --> 00:00:55,840
for deployment and management of the

00:00:54,800 --> 00:00:58,559
application

00:00:55,840 --> 00:00:59,280
in the cloud and multi-cloud we are

00:00:58,559 --> 00:01:02,640
supporting

00:00:59,280 --> 00:01:04,239
azure aws google cloud platform

00:01:02,640 --> 00:01:07,520
openstack based

00:01:04,239 --> 00:01:10,960
cloud providers and more

00:01:07,520 --> 00:01:12,880
and we can deploy automatically

00:01:10,960 --> 00:01:15,600
application to this multi-cloud

00:01:12,880 --> 00:01:18,000
environment in the optimized way so we

00:01:15,600 --> 00:01:19,200
can select the best cloud provider the

00:01:18,000 --> 00:01:23,680
best resources

00:01:19,200 --> 00:01:25,840
and properly scale up the application

00:01:23,680 --> 00:01:27,280
and as our application can be deployed

00:01:25,840 --> 00:01:29,759
on the virtual machines

00:01:27,280 --> 00:01:30,720
containers and also serverless

00:01:29,759 --> 00:01:35,200
components

00:01:30,720 --> 00:01:35,200
in one transparent way

00:01:36,640 --> 00:01:40,000
as i said melodic is fully open source

00:01:39,360 --> 00:01:43,439
and can be

00:01:40,000 --> 00:01:46,399
downloaded from the ow too

00:01:43,439 --> 00:01:48,399
why to use melodic probably it is the

00:01:46,399 --> 00:01:50,079
simplest and easiest way to use

00:01:48,399 --> 00:01:53,520
multi-cloud approach

00:01:50,079 --> 00:01:56,240
because you don't need to learn many

00:01:53,520 --> 00:01:59,280
cloud providers many different

00:01:56,240 --> 00:02:02,000
consoles and so on and can

00:01:59,280 --> 00:02:03,920
use only melodic to deploy to the

00:02:02,000 --> 00:02:06,399
multi-cloud

00:02:03,920 --> 00:02:08,000
it is the unified way to deploy virtual

00:02:06,399 --> 00:02:10,720
machines containers

00:02:08,000 --> 00:02:12,800
serverless and also big data framework

00:02:10,720 --> 00:02:15,680
two different cloud providers

00:02:12,800 --> 00:02:17,200
the deployment is fully automatic so no

00:02:15,680 --> 00:02:20,840
manual

00:02:17,200 --> 00:02:23,599
operations are needed and also

00:02:20,840 --> 00:02:26,480
melodic it is a very unique feature

00:02:23,599 --> 00:02:29,120
of the melodic is able to optimize the

00:02:26,480 --> 00:02:32,160
usage of the cloud resources

00:02:29,120 --> 00:02:35,200
and automatically select the best set of

00:02:32,160 --> 00:02:38,400
these resources

00:02:35,200 --> 00:02:41,920
why this is possible now the first step

00:02:38,400 --> 00:02:42,800
is that melodic has its own modeling

00:02:41,920 --> 00:02:45,360
language

00:02:42,800 --> 00:02:47,120
called camel cloud application modeling

00:02:45,360 --> 00:02:49,120
and execution language

00:02:47,120 --> 00:02:50,640
this is the sim language similar to

00:02:49,120 --> 00:02:53,760
tosca

00:02:50,640 --> 00:02:57,040
but extends tosca to to allow for

00:02:53,760 --> 00:02:59,280
modeling components connections security

00:02:57,040 --> 00:03:00,640
and also requirements for the

00:02:59,280 --> 00:03:03,200
infrastructure

00:03:00,640 --> 00:03:06,319
so all of this is modeled in the camel

00:03:03,200 --> 00:03:09,920
in the cloud agnostic way

00:03:06,319 --> 00:03:10,879
and user can set the requirements

00:03:09,920 --> 00:03:13,760
constraints

00:03:10,879 --> 00:03:15,680
and so-called utility function which

00:03:13,760 --> 00:03:20,080
decides which deployment

00:03:15,680 --> 00:03:22,560
is better and i'll use the optimization

00:03:20,080 --> 00:03:22,560
process

00:03:23,360 --> 00:03:28,400
what is this best deployment yeah it is

00:03:26,239 --> 00:03:31,120
very difficult to say what is the best

00:03:28,400 --> 00:03:33,360
deployment

00:03:31,120 --> 00:03:34,239
but before knowing what is the best

00:03:33,360 --> 00:03:36,480
deployment

00:03:34,239 --> 00:03:39,120
we need to know something about the

00:03:36,480 --> 00:03:42,000
running applications so we should

00:03:39,120 --> 00:03:44,640
uh have to collect the metrics to have

00:03:42,000 --> 00:03:47,599
the context of the running application

00:03:44,640 --> 00:03:49,760
melodic is collecting both technical and

00:03:47,599 --> 00:03:52,560
business metrics

00:03:49,760 --> 00:03:55,360
uh based on the metrics we can create

00:03:52,560 --> 00:03:57,439
the utility function which decides

00:03:55,360 --> 00:04:00,959
what is the best deployments yeah

00:03:57,439 --> 00:04:04,640
usually we are thinking about the cost

00:04:00,959 --> 00:04:06,959
savings cost minimization but the best

00:04:04,640 --> 00:04:07,920
cost savings is to not deploy

00:04:06,959 --> 00:04:10,640
application at

00:04:07,920 --> 00:04:14,319
all and the cost is zero which is not

00:04:10,640 --> 00:04:16,959
the case so usually it is the trade of

00:04:14,319 --> 00:04:17,919
between the cost performance and of

00:04:16,959 --> 00:04:21,199
availability

00:04:17,919 --> 00:04:22,400
and other factors melodic is focusing on

00:04:21,199 --> 00:04:24,479
business value

00:04:22,400 --> 00:04:26,240
of the application so we can measure

00:04:24,479 --> 00:04:29,520
custom metrics like

00:04:26,240 --> 00:04:32,080
average response time to the user and

00:04:29,520 --> 00:04:34,320
time for the finishing job so you can

00:04:32,080 --> 00:04:35,520
consider melodic like your smart

00:04:34,320 --> 00:04:38,400
automatic

00:04:35,520 --> 00:04:39,759
devops which is able to select the best

00:04:38,400 --> 00:04:43,120
deployment

00:04:39,759 --> 00:04:46,400
how it works at first

00:04:43,120 --> 00:04:49,120
devops person needs to

00:04:46,400 --> 00:04:52,320
model the application in the comments

00:04:49,120 --> 00:04:54,320
set the initial values of the parameters

00:04:52,320 --> 00:04:56,880
then melodic calculate initial

00:04:54,320 --> 00:05:00,400
deployments so initial best deployment

00:04:56,880 --> 00:05:03,520
and automatically deploy this selected

00:05:00,400 --> 00:05:06,000
deployment to the cloud providers

00:05:03,520 --> 00:05:07,039
when application is running the metrics

00:05:06,000 --> 00:05:08,840
are collected

00:05:07,039 --> 00:05:10,560
and melodic is monitoring the

00:05:08,840 --> 00:05:13,600
application

00:05:10,560 --> 00:05:15,199
when the certain thresholds of the

00:05:13,600 --> 00:05:18,240
metrics are exceeded

00:05:15,199 --> 00:05:20,400
then a new solution melodic is looking

00:05:18,240 --> 00:05:22,639
for the new better solution

00:05:20,400 --> 00:05:24,320
and after finding the new better

00:05:22,639 --> 00:05:27,759
solution the application

00:05:24,320 --> 00:05:31,039
is reconfigured the configuration is

00:05:27,759 --> 00:05:33,520
fully seamless so

00:05:31,039 --> 00:05:34,479
it's not stop the application new

00:05:33,520 --> 00:05:37,840
resources

00:05:34,479 --> 00:05:38,560
are added and then alt resources are

00:05:37,840 --> 00:05:42,800
removed

00:05:38,560 --> 00:05:47,440
and so on so application is working

00:05:42,800 --> 00:05:48,160
all the time and that is how the melodic

00:05:47,440 --> 00:05:51,919
working

00:05:48,160 --> 00:05:53,039
and now i want to say what are the

00:05:51,919 --> 00:05:56,639
purpose

00:05:53,039 --> 00:05:59,199
why we should use melodic for

00:05:56,639 --> 00:06:01,360
business application and we have one of

00:05:59,199 --> 00:06:04,240
the early adopters of the melodic

00:06:01,360 --> 00:06:06,400
ii investments company it is the polish

00:06:04,240 --> 00:06:09,759
company which aims to build

00:06:06,400 --> 00:06:13,199
or already build the investments

00:06:09,759 --> 00:06:13,199
optimization solution

00:06:13,600 --> 00:06:19,199
using the advanced ai models

00:06:16,800 --> 00:06:20,080
in the time series forecasting and

00:06:19,199 --> 00:06:23,199
optimization

00:06:20,080 --> 00:06:26,000
area and typical business goal for their

00:06:23,199 --> 00:06:27,199
investments is to train for example 50

00:06:26,000 --> 00:06:30,560
predictions models

00:06:27,199 --> 00:06:32,479
in for example one hour using as minimal

00:06:30,560 --> 00:06:37,039
number of the resources

00:06:32,479 --> 00:06:40,240
and how the investment is using melodic

00:06:37,039 --> 00:06:43,759
and the operator investments analysis in

00:06:40,240 --> 00:06:47,759
ai investments is starting the training

00:06:43,759 --> 00:06:51,039
so setting the number of the jobs to be

00:06:47,759 --> 00:06:53,599
to be trained and initially the

00:06:51,039 --> 00:06:54,639
on-premises resources are used because

00:06:53,599 --> 00:06:58,160
they are already

00:06:54,639 --> 00:07:01,360
exist so it is the cheapest way

00:06:58,160 --> 00:07:04,560
to start with using these resources but

00:07:01,360 --> 00:07:08,240
usually these resources are not enough

00:07:04,560 --> 00:07:10,400
yeah so estimated time for the finishing

00:07:08,240 --> 00:07:13,759
training on these resources is

00:07:10,400 --> 00:07:15,680
over one hour so melodic automatically

00:07:13,759 --> 00:07:17,199
based on the current values of the

00:07:15,680 --> 00:07:21,440
metrics is looking

00:07:17,199 --> 00:07:23,680
for the more resources and setting up

00:07:21,440 --> 00:07:25,280
provision the resources in the cloud and

00:07:23,680 --> 00:07:27,840
deploy application

00:07:25,280 --> 00:07:30,400
there and again check what is the

00:07:27,840 --> 00:07:32,400
estimated time

00:07:30,400 --> 00:07:33,520
if it's still too long then new

00:07:32,400 --> 00:07:37,360
resources are

00:07:33,520 --> 00:07:39,120
added till the moment that estimated

00:07:37,360 --> 00:07:42,560
processing time is

00:07:39,120 --> 00:07:45,919
one hour or below us

00:07:42,560 --> 00:07:48,160
as assumed in the

00:07:45,919 --> 00:07:49,520
in the business call and after the

00:07:48,160 --> 00:07:53,039
finishing training

00:07:49,520 --> 00:07:56,560
all of the cloud resources are removed

00:07:53,039 --> 00:08:00,479
to save the cost all results are stored

00:07:56,560 --> 00:08:03,840
yeah so it is a very simple use case but

00:08:00,479 --> 00:08:07,520
it is very very powerful

00:08:03,840 --> 00:08:09,520
and obvious benefits are as follows yeah

00:08:07,520 --> 00:08:11,919
the effective optimization of the

00:08:09,520 --> 00:08:14,800
resource consumption

00:08:11,919 --> 00:08:17,919
it is very well chosen scaling of the

00:08:14,800 --> 00:08:21,199
machine learning trainings possibility

00:08:17,919 --> 00:08:22,639
optimization of the work relative to the

00:08:21,199 --> 00:08:26,240
budget plan

00:08:22,639 --> 00:08:29,280
and additional feature is increased

00:08:26,240 --> 00:08:30,160
reability of the application so in case

00:08:29,280 --> 00:08:32,800
of the

00:08:30,160 --> 00:08:35,599
outage of the one cloud provider or

00:08:32,800 --> 00:08:35,599
on-premises

00:08:36,000 --> 00:08:41,599
infrastructure melody can automatically

00:08:39,120 --> 00:08:43,440
move the workload to the different cloud

00:08:41,599 --> 00:08:46,480
provider

00:08:43,440 --> 00:08:50,399
to not stop the the application

00:08:46,480 --> 00:08:54,240
and to achieve the highest possible

00:08:50,399 --> 00:08:58,320
availability and what are the

00:08:54,240 --> 00:09:00,160
cost savings benefits in case of the ai

00:08:58,320 --> 00:09:02,880
investments

00:09:00,160 --> 00:09:04,399
it is possible to achieve over 60

00:09:02,880 --> 00:09:06,839
percent of the cost

00:09:04,399 --> 00:09:08,320
savings thanks to that multi-cloud

00:09:06,839 --> 00:09:13,120
optimization and

00:09:08,320 --> 00:09:15,920
careful usage of the cloud resources

00:09:13,120 --> 00:09:17,760
in this table we are comparing the cost

00:09:15,920 --> 00:09:21,600
of this hybrid model

00:09:17,760 --> 00:09:24,720
with on-premises and cloud resources

00:09:21,600 --> 00:09:28,160
used on demand and we can compare

00:09:24,720 --> 00:09:30,160
that to the cloud only model which is

00:09:28,160 --> 00:09:33,279
presented as first

00:09:30,160 --> 00:09:35,760
and on premises only model

00:09:33,279 --> 00:09:36,800
yeah with the same parameters and as you

00:09:35,760 --> 00:09:40,000
can see

00:09:36,800 --> 00:09:41,279
in both cases the cost is much higher of

00:09:40,000 --> 00:09:44,560
course this is some

00:09:41,279 --> 00:09:47,600
extreme examples probably real

00:09:44,560 --> 00:09:51,680
savings are slightly lower

00:09:47,600 --> 00:09:54,080
but nevertheless it is a huge

00:09:51,680 --> 00:09:55,600
cost savings especially for the

00:09:54,080 --> 00:09:59,680
companies which are

00:09:55,600 --> 00:10:03,120
intensively use high compute

00:09:59,680 --> 00:10:03,120
intensive applications

00:10:04,399 --> 00:10:10,480
but melodic is

00:10:07,440 --> 00:10:14,240
further extended further developed

00:10:10,480 --> 00:10:17,440
within the morphemic project we want to

00:10:14,240 --> 00:10:19,360
introduce two new concept one concept is

00:10:17,440 --> 00:10:22,720
the polymorph architecture

00:10:19,360 --> 00:10:25,040
so the ability to not only select the

00:10:22,720 --> 00:10:26,720
number of the resources and optimize the

00:10:25,040 --> 00:10:29,760
number of the resources

00:10:26,720 --> 00:10:30,880
but also to change the technical form of

00:10:29,760 --> 00:10:34,320
the application

00:10:30,880 --> 00:10:36,480
to select for example what is

00:10:34,320 --> 00:10:37,839
better to use virtual machines

00:10:36,480 --> 00:10:40,240
containers or maybe

00:10:37,839 --> 00:10:42,240
serverless components or hardware

00:10:40,240 --> 00:10:45,600
accelerated components

00:10:42,240 --> 00:10:48,160
so that gives the additional

00:10:45,600 --> 00:10:49,839
dimension to the optimization and could

00:10:48,160 --> 00:10:53,040
give even better

00:10:49,839 --> 00:10:54,800
results and the second concept is the

00:10:53,040 --> 00:10:58,000
proactive adaptations

00:10:54,800 --> 00:11:01,440
ability to proactively adapt

00:10:58,000 --> 00:11:02,640
application to the expected or estimated

00:11:01,440 --> 00:11:05,120
workloads

00:11:02,640 --> 00:11:07,839
uh currently melodic is based on the

00:11:05,120 --> 00:11:10,560
actual values of the

00:11:07,839 --> 00:11:11,600
of the metrics but within the morphemic

00:11:10,560 --> 00:11:14,000
project

00:11:11,600 --> 00:11:14,640
we want to forecast the values of the

00:11:14,000 --> 00:11:18,000
metrics

00:11:14,640 --> 00:11:19,760
and make the reconfiguration before the

00:11:18,000 --> 00:11:23,040
real

00:11:19,760 --> 00:11:25,279
real usage is

00:11:23,040 --> 00:11:27,519
needed thanks to that for example for

00:11:25,279 --> 00:11:28,079
the e-commerce application we could

00:11:27,519 --> 00:11:30,880
better

00:11:28,079 --> 00:11:32,399
adapt to the expected increase in the

00:11:30,880 --> 00:11:35,360
number of the users

00:11:32,399 --> 00:11:37,600
because we can adapt our application

00:11:35,360 --> 00:11:38,480
before the number of the users will

00:11:37,600 --> 00:11:41,440
increase

00:11:38,480 --> 00:11:42,800
so the experience for them for the users

00:11:41,440 --> 00:11:46,240
will be

00:11:42,800 --> 00:11:48,240
much better morphemic project is in

00:11:46,240 --> 00:11:52,720
progress the first release

00:11:48,240 --> 00:11:55,760
is planned uh till the end of the

00:11:52,720 --> 00:11:56,639
august this year so it will be available

00:11:55,760 --> 00:12:00,240
also for

00:11:56,639 --> 00:12:03,600
download and usage of course on the

00:12:00,240 --> 00:12:06,240
rw2 uh yeah and

00:12:03,600 --> 00:12:07,600
you can download melodic here is the

00:12:06,240 --> 00:12:10,720
link to the

00:12:07,600 --> 00:12:13,040
melodic cloud website melodic is

00:12:10,720 --> 00:12:14,000
released under the mozilla public

00:12:13,040 --> 00:12:17,519
license but

00:12:14,000 --> 00:12:21,120
all of this source code is

00:12:17,519 --> 00:12:23,839
stored on the ow too

00:12:21,120 --> 00:12:27,040
and i also want to encourage encourage

00:12:23,839 --> 00:12:28,160
you to stay in touch with us to visit

00:12:27,040 --> 00:12:30,720
melodic cloud

00:12:28,160 --> 00:12:32,880
to follow us on linkedin twitter

00:12:30,720 --> 00:12:36,959
facebook and other media

00:12:32,880 --> 00:12:39,600
we are very active and very actively

00:12:36,959 --> 00:12:42,240
provide i hope interesting information

00:12:39,600 --> 00:12:43,279
regarding the both melodic and morphemic

00:12:42,240 --> 00:12:47,120
development

00:12:43,279 --> 00:12:52,320
and also the the multi-crowd related

00:12:47,120 --> 00:12:55,600
things so please follow us on them

00:12:52,320 --> 00:12:57,839
on the social media and we also want to

00:12:55,600 --> 00:13:01,040
encourage you to join to the melodic

00:12:57,839 --> 00:13:04,480
development as an open source developer

00:13:01,040 --> 00:13:07,519
we are looking for the developers and uh

00:13:04,480 --> 00:13:10,720
yeah any any person or

00:13:07,519 --> 00:13:14,079
team is uh welcome we have quite

00:13:10,720 --> 00:13:17,040
a visionary road map to further extend

00:13:14,079 --> 00:13:17,680
uh melodic platform and to make it the

00:13:17,040 --> 00:13:21,200
best

00:13:17,680 --> 00:13:23,600
multi-cloud optimization platform

00:13:21,200 --> 00:13:24,880
so that's all from my site thank you

00:13:23,600 --> 00:13:28,399
very much

00:13:24,880 --> 00:13:32,320
if you are interested please contact me

00:13:28,399 --> 00:13:34,959
in details we are very open for the

00:13:32,320 --> 00:13:44,560
any type of the cooperation thank you

00:13:34,959 --> 00:13:44,560

YouTube URL: https://www.youtube.com/watch?v=Jm8GdKBlWo4


