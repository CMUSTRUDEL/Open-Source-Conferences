Title: CLIF web UI: the new web-based console for your load tests
Publication date: 2021-06-28
Playlist: OW2con'21
Description: 
	CLIF is OW2's open source project dedicated to performance testing. It comes with load injectors, for generating traffic upon an extendible number of network protocols, and probes to observe usage of computing and networking resources. In 2019, CLIF was given the "OW2 Market Award" for its ability to address the challenges of testing the performances of Orange's home IoT service. This year, we are proud to present CLIF's new user interface, inspired by latest CLIF utilizations in devops contexts: the CLIF web console.
Captions: 
	00:00:02,520 --> 00:00:09,940
[Music]

00:00:11,920 --> 00:00:14,880
hello

00:00:12,719 --> 00:00:16,080
welcome to my talk and welcome home for

00:00:14,880 --> 00:00:19,359
this 2021

00:00:16,080 --> 00:00:21,600
ow two online annual conference

00:00:19,359 --> 00:00:23,600
my name is bruno de lancerger and i'm

00:00:21,600 --> 00:00:26,240
working for the innovation division of

00:00:23,600 --> 00:00:27,840
the orange telecommunication operator

00:00:26,240 --> 00:00:29,679
where i am currently in charge of

00:00:27,840 --> 00:00:30,800
performance management for the amazon

00:00:29,679 --> 00:00:34,239
connected home

00:00:30,800 --> 00:00:36,239
iot service today i'm going to talk

00:00:34,239 --> 00:00:37,040
about the cliff performance testing tool

00:00:36,239 --> 00:00:39,360
set

00:00:37,040 --> 00:00:44,160
introducing a new graphical user

00:00:39,360 --> 00:00:46,160
interface based on web technologies

00:00:44,160 --> 00:00:47,200
first let me tell you a little bit about

00:00:46,160 --> 00:00:50,160
cliff

00:00:47,200 --> 00:00:52,399
cliff is a w2's project dedicated to

00:00:50,160 --> 00:00:54,879
performance on load testing

00:00:52,399 --> 00:00:56,239
cliff provides load injectors to submit

00:00:54,879 --> 00:00:58,239
flows of requests

00:00:56,239 --> 00:01:01,120
to a system under test according to a

00:00:58,239 --> 00:01:04,000
variety of network protocols

00:01:01,120 --> 00:01:05,760
cliff provides also probes to monitor

00:01:04,000 --> 00:01:07,360
usage of computing and networking

00:01:05,760 --> 00:01:10,159
resources

00:01:07,360 --> 00:01:12,400
and cliff comes with an integration to

00:01:10,159 --> 00:01:14,240
the jenkins automation server

00:01:12,400 --> 00:01:16,240
for automating performance test

00:01:14,240 --> 00:01:18,240
execution and reporting

00:01:16,240 --> 00:01:20,159
as well as an integration to the eclipse

00:01:18,240 --> 00:01:22,000
rich client platform

00:01:20,159 --> 00:01:23,680
since cliff's main graphical user

00:01:22,000 --> 00:01:26,720
interface is based

00:01:23,680 --> 00:01:28,640
on eclipse and finally

00:01:26,720 --> 00:01:30,640
cliff also provides a command line

00:01:28,640 --> 00:01:32,640
interface

00:01:30,640 --> 00:01:34,640
cliff supports outstanding load

00:01:32,640 --> 00:01:36,960
injection capabilities

00:01:34,640 --> 00:01:38,079
in terms of large-scale distributed load

00:01:36,960 --> 00:01:40,720
injection

00:01:38,079 --> 00:01:42,159
as well as unlimited number of virtual

00:01:40,720 --> 00:01:45,119
users

00:01:42,159 --> 00:01:46,320
cliff is extensible in java to add

00:01:45,119 --> 00:01:49,680
support for new

00:01:46,320 --> 00:01:51,759
network protocols on probes all it takes

00:01:49,680 --> 00:01:53,520
to run a cliff performance test is one

00:01:51,759 --> 00:01:55,759
or several computing nodes

00:01:53,520 --> 00:01:56,960
be they physical or virtual machines or

00:01:55,759 --> 00:01:59,759
containers

00:01:56,960 --> 00:02:02,560
with the java virtual machine version 8

00:01:59,759 --> 00:02:02,560
or greater

00:02:05,759 --> 00:02:08,879
the cliff project was started almost 20

00:02:08,080 --> 00:02:11,680
years ago

00:02:08,879 --> 00:02:14,560
and now provides a set of proven tools

00:02:11,680 --> 00:02:16,319
dedicated to performance testing

00:02:14,560 --> 00:02:18,640
cliff has been involved in a number of

00:02:16,319 --> 00:02:20,480
success stories including today for

00:02:18,640 --> 00:02:23,680
managing performance

00:02:20,480 --> 00:02:25,599
of orange amazon connected service

00:02:23,680 --> 00:02:27,520
i would like to underline that cliff is

00:02:25,599 --> 00:02:30,239
absolutely pure open source

00:02:27,520 --> 00:02:32,160
with no paying or hidden feature piece

00:02:30,239 --> 00:02:33,440
of code build chain of management

00:02:32,160 --> 00:02:36,000
utility

00:02:33,440 --> 00:02:38,800
everything about cliff is available from

00:02:36,000 --> 00:02:41,680
aw2 services

00:02:38,800 --> 00:02:42,319
now thinking about the respectable age

00:02:41,680 --> 00:02:46,560
of cliff

00:02:42,319 --> 00:02:48,640
we may wonder about its deprecation well

00:02:46,560 --> 00:02:50,800
i would say that the cliff tool suite is

00:02:48,640 --> 00:02:53,680
still globally performing well

00:02:50,800 --> 00:02:56,319
especially as far as text execution

00:02:53,680 --> 00:02:59,280
support is concerned

00:02:56,319 --> 00:03:00,480
but when it comes to the main graphical

00:02:59,280 --> 00:03:02,560
user interface

00:03:00,480 --> 00:03:04,319
that we call the cliff console based on

00:03:02,560 --> 00:03:06,640
eclipse rcp

00:03:04,319 --> 00:03:07,840
we must admit that its maintenance

00:03:06,640 --> 00:03:10,080
requires

00:03:07,840 --> 00:03:11,120
significant work and that finding

00:03:10,080 --> 00:03:15,200
contributors

00:03:11,120 --> 00:03:17,280
with appropriate skills is not simple

00:03:15,200 --> 00:03:18,400
today the cliff console requires an old

00:03:17,280 --> 00:03:21,200
version of eclipse

00:03:18,400 --> 00:03:23,599
which works only with linux or windows

00:03:21,200 --> 00:03:23,599
7.

00:03:25,760 --> 00:03:31,040
so why what about the web user interface

00:03:29,440 --> 00:03:33,360
for cliff

00:03:31,040 --> 00:03:35,280
today if we look if we take a look

00:03:33,360 --> 00:03:36,959
around we see that popular and

00:03:35,280 --> 00:03:41,680
successful tools

00:03:36,959 --> 00:03:44,720
are mostly based on web technologies

00:03:41,680 --> 00:03:46,239
why because they provide software as a

00:03:44,720 --> 00:03:48,159
service solutions

00:03:46,239 --> 00:03:49,360
instantly available without any

00:03:48,159 --> 00:03:51,599
installation

00:03:49,360 --> 00:03:53,840
and they naturally allow for remote

00:03:51,599 --> 00:03:56,480
access and sharing

00:03:53,840 --> 00:03:58,799
from the skills point of view users are

00:03:56,480 --> 00:03:59,519
used to interact with their favorite web

00:03:58,799 --> 00:04:01,920
browser

00:03:59,519 --> 00:04:04,400
and today's developers are keen and

00:04:01,920 --> 00:04:07,360
trained on web development

00:04:04,400 --> 00:04:08,319
so a web-based project is likely to find

00:04:07,360 --> 00:04:12,480
more users

00:04:08,319 --> 00:04:14,000
and more contributors now if we consider

00:04:12,480 --> 00:04:16,560
more specifically the cliff

00:04:14,000 --> 00:04:17,519
case and our experience in devops

00:04:16,560 --> 00:04:19,359
project

00:04:17,519 --> 00:04:21,919
we see that successful tools are

00:04:19,359 --> 00:04:24,720
typically free and web-based

00:04:21,919 --> 00:04:25,520
free tools because their develop

00:04:24,720 --> 00:04:28,160
deployment

00:04:25,520 --> 00:04:29,600
is easier cheaper and suitable for

00:04:28,160 --> 00:04:32,479
automation

00:04:29,600 --> 00:04:34,479
web-based for the same reasons i've just

00:04:32,479 --> 00:04:37,040
mentioned

00:04:34,479 --> 00:04:38,720
this makes a cliff web user interface a

00:04:37,040 --> 00:04:40,800
strategic asset

00:04:38,720 --> 00:04:43,199
to renew the relevance of cliff and

00:04:40,800 --> 00:04:45,919
better address devops usage

00:04:43,199 --> 00:04:47,120
as a matter of fact cliff is typically

00:04:45,919 --> 00:04:50,720
in the crossroad

00:04:47,120 --> 00:04:53,040
between dev and ops jobs

00:04:50,720 --> 00:04:54,720
first performance and load tests provide

00:04:53,040 --> 00:04:56,080
developers with debugging and

00:04:54,720 --> 00:04:57,919
optimization feedback

00:04:56,080 --> 00:04:59,520
for their application under stress

00:04:57,919 --> 00:05:02,720
conditions

00:04:59,520 --> 00:05:06,720
while providing ups with sound hints for

00:05:02,720 --> 00:05:06,720
sizing the prediction instructor

00:05:06,880 --> 00:05:10,000
then load tests are of major interest to

00:05:09,440 --> 00:05:12,320
ops

00:05:10,000 --> 00:05:14,479
also to prepare for live upgrades of

00:05:12,320 --> 00:05:17,440
some components in production

00:05:14,479 --> 00:05:19,680
by performing rehearsals over a test

00:05:17,440 --> 00:05:22,880
platform

00:05:19,680 --> 00:05:24,960
but still in stress conditions

00:05:22,880 --> 00:05:26,160
continuous slide performance tests over

00:05:24,960 --> 00:05:28,320
production

00:05:26,160 --> 00:05:30,400
provide ups with quality of experience

00:05:28,320 --> 00:05:32,960
monitoring

00:05:30,400 --> 00:05:34,400
and of course writing any kind of test

00:05:32,960 --> 00:05:36,720
scenario with cliff

00:05:34,400 --> 00:05:37,680
requires to interact with developers and

00:05:36,720 --> 00:05:40,560
architects

00:05:37,680 --> 00:05:42,479
to identify and implement relevant call

00:05:40,560 --> 00:05:45,759
flows

00:05:42,479 --> 00:05:48,160
these scenarios test scenarios may not

00:05:45,759 --> 00:05:50,639
only be used as performance tests

00:05:48,160 --> 00:05:51,280
but also as integration tests to help

00:05:50,639 --> 00:05:54,720
devs

00:05:51,280 --> 00:05:58,319
and ops to check a platform installation

00:05:54,720 --> 00:05:58,319
so we definitely that

00:05:59,199 --> 00:06:07,840
in the devops context you have to share

00:06:02,960 --> 00:06:07,840
common tools

00:06:10,639 --> 00:06:17,840
now let's have a quick demo of a

00:06:13,919 --> 00:06:20,319
cliff web user interface one of the

00:06:17,840 --> 00:06:21,280
key features first is the project

00:06:20,319 --> 00:06:24,800
browser

00:06:21,280 --> 00:06:29,120
with a very common navigator

00:06:24,800 --> 00:06:31,600
area on the left on the of the screen

00:06:29,120 --> 00:06:32,240
so basically a cliff project is a folder

00:06:31,600 --> 00:06:34,400
gathering

00:06:32,240 --> 00:06:35,759
all files for one or several performance

00:06:34,400 --> 00:06:38,800
tests

00:06:35,759 --> 00:06:40,240
typically test plans scenarios but also

00:06:38,800 --> 00:06:43,440
data sets

00:06:40,240 --> 00:06:46,560
as well as test results

00:06:43,440 --> 00:06:47,360
and the cliff web ui supports browsing

00:06:46,560 --> 00:06:49,759
cliff project

00:06:47,360 --> 00:06:51,520
in a given cliff workspace and what is

00:06:49,759 --> 00:06:54,639
important to underline

00:06:51,520 --> 00:06:57,520
is that these workspace are

00:06:54,639 --> 00:06:58,080
full fully compatible with workspaces

00:06:57,520 --> 00:07:00,880
that

00:06:58,080 --> 00:07:02,000
are managed and created with the

00:07:00,880 --> 00:07:05,440
eclipse-based cliff

00:07:02,000 --> 00:07:09,199
console so making the translation

00:07:05,440 --> 00:07:09,199
totally uh transparent

00:07:09,280 --> 00:07:16,160
and of course uh as far as

00:07:12,639 --> 00:07:18,560
projects are concerned um

00:07:16,160 --> 00:07:21,120
important export features are available

00:07:18,560 --> 00:07:25,680
to import or export

00:07:21,120 --> 00:07:25,680
just files or full projects

00:07:28,319 --> 00:07:31,759
then another key feature is the scenario

00:07:30,880 --> 00:07:34,960
edition

00:07:31,759 --> 00:07:39,120
in cliff scenario defines the behaviors

00:07:34,960 --> 00:07:42,720
and the number of virtual users

00:07:39,120 --> 00:07:45,759
this scenario editor just like the old

00:07:42,720 --> 00:07:49,599
eclipse-based console provides xml

00:07:45,759 --> 00:07:53,120
edition with content wizards

00:07:49,599 --> 00:07:55,440
autocompletion and folding summary

00:07:53,120 --> 00:07:56,879
folding summary means that if you have a

00:07:55,440 --> 00:08:00,160
piece of

00:07:56,879 --> 00:08:04,560
behavior that is folded you can

00:08:00,160 --> 00:08:07,759
have a summary of what it contains

00:08:04,560 --> 00:08:11,759
what it's new is that also we give now

00:08:07,759 --> 00:08:16,960
the possibility of a yaml based edition

00:08:11,759 --> 00:08:16,960
for people who are allergic to to xml

00:08:19,759 --> 00:08:23,039
the third key feature is the test plan

00:08:22,319 --> 00:08:25,919
edition

00:08:23,039 --> 00:08:27,680
so what is a cliff test plan it's

00:08:25,919 --> 00:08:28,800
basically a list of load injection

00:08:27,680 --> 00:08:31,360
scenarios

00:08:28,800 --> 00:08:33,599
and of probes that you want to deploy on

00:08:31,360 --> 00:08:36,719
some nodes on your network

00:08:33,599 --> 00:08:37,200
for your test infrastructure and the

00:08:36,719 --> 00:08:39,919
cliff

00:08:37,200 --> 00:08:40,880
web user interface provides such a test

00:08:39,919 --> 00:08:43,919
plan editor

00:08:40,880 --> 00:08:47,279
as plain text like a current

00:08:43,919 --> 00:08:49,120
eclipse-based console and it provides

00:08:47,279 --> 00:08:52,800
also a yaml

00:08:49,120 --> 00:08:55,680
view and edition also

00:08:52,800 --> 00:08:57,760
which is very convenient because it's it

00:08:55,680 --> 00:09:01,519
organizes

00:08:57,760 --> 00:09:01,519
the load injectors and the probes

00:09:01,600 --> 00:09:09,839
per per node deployment node which is

00:09:06,320 --> 00:09:13,120
very convenient to read

00:09:09,839 --> 00:09:15,440
and we also provide now

00:09:13,120 --> 00:09:17,920
uh through this new interface a test

00:09:15,440 --> 00:09:21,040
plan creation wizard so you can easily

00:09:17,920 --> 00:09:23,839
generate a test plan uh from a scenario

00:09:21,040 --> 00:09:23,839
you want to deploy

00:09:26,640 --> 00:09:32,640
and finally the cliff web ui

00:09:29,760 --> 00:09:33,120
also provides a test train feature so

00:09:32,640 --> 00:09:36,160
you can

00:09:33,120 --> 00:09:38,959
deploy your tests or run a test

00:09:36,160 --> 00:09:40,000
you have access to some live monitoring

00:09:38,959 --> 00:09:43,839
in terms of

00:09:40,000 --> 00:09:47,120
displaying some metrics about

00:09:43,839 --> 00:09:48,399
the request about the workload response

00:09:47,120 --> 00:09:52,640
times

00:09:48,399 --> 00:09:55,080
throughput and also errors

00:09:52,640 --> 00:09:56,240
and when the test is complete you

00:09:55,080 --> 00:09:59,279
automatically

00:09:56,240 --> 00:10:04,399
get a global statistical

00:09:59,279 --> 00:10:04,399
report and then you can also push

00:10:04,560 --> 00:10:08,640
your test results so the measurements

00:10:06,880 --> 00:10:11,760
about response times and

00:10:08,640 --> 00:10:14,320
also measurements from probes about

00:10:11,760 --> 00:10:15,120
resources usage you can push all these

00:10:14,320 --> 00:10:19,839
data

00:10:15,120 --> 00:10:19,839
to an elasticsearch instance

00:10:25,680 --> 00:10:31,200
okay now so finally what is the status

00:10:29,440 --> 00:10:33,839
of cliff webb ui

00:10:31,200 --> 00:10:34,880
well i would say that it is globally

00:10:33,839 --> 00:10:37,200
functional

00:10:34,880 --> 00:10:39,279
although it should be considered still

00:10:37,200 --> 00:10:41,760
as work in progress

00:10:39,279 --> 00:10:44,160
however remember that cliff web ui is

00:10:41,760 --> 00:10:47,440
just an interface of a regular

00:10:44,160 --> 00:10:50,560
proven cliff time

00:10:47,440 --> 00:10:51,519
so if you encounter some troubles it's

00:10:50,560 --> 00:10:55,680
just a matter

00:10:51,519 --> 00:10:58,160
of interface of web user interface that

00:10:55,680 --> 00:10:59,760
has to be improved but there is no worry

00:10:58,160 --> 00:11:01,279
about the quality of the tests

00:10:59,760 --> 00:11:03,279
and the compatibility of the test

00:11:01,279 --> 00:11:06,000
themselves

00:11:03,279 --> 00:11:06,720
we are now using cliff web ui and will

00:11:06,000 --> 00:11:08,800
gradually

00:11:06,720 --> 00:11:10,800
harden and improve it with regard to

00:11:08,800 --> 00:11:12,839
scenario and test plan addition

00:11:10,800 --> 00:11:14,399
as well as test plan deployment and

00:11:12,839 --> 00:11:17,040
execution

00:11:14,399 --> 00:11:18,320
as far as the analysis of test results

00:11:17,040 --> 00:11:20,880
is concerned

00:11:18,320 --> 00:11:21,839
we'll focus our efforts on key banner

00:11:20,880 --> 00:11:24,800
and graphene

00:11:21,839 --> 00:11:25,279
dashboards based on test measurements

00:11:24,800 --> 00:11:28,800
that

00:11:25,279 --> 00:11:31,279
now can be gathered in elasticsearch

00:11:28,800 --> 00:11:32,320
then we will have to harden multi-user

00:11:31,279 --> 00:11:34,480
aspects

00:11:32,320 --> 00:11:36,640
and we are also thinking about providing

00:11:34,480 --> 00:11:37,519
git repository management for cliff

00:11:36,640 --> 00:11:41,680
project

00:11:37,519 --> 00:11:43,920
within a cliff web ui workspace

00:11:41,680 --> 00:11:45,600
note that we also plan to integrate a

00:11:43,920 --> 00:11:48,320
prometheus exporter

00:11:45,600 --> 00:11:49,200
in cliff runtime to allow for monitoring

00:11:48,320 --> 00:11:51,760
performance

00:11:49,200 --> 00:11:53,040
test metrics with common popular tools

00:11:51,760 --> 00:11:57,839
like promotions

00:11:53,040 --> 00:11:57,839
and graphana

00:12:02,240 --> 00:12:08,560
okay i'm done now with this presentation

00:12:05,680 --> 00:12:09,279
thank you for attention i hope you

00:12:08,560 --> 00:12:10,800
enjoyed it

00:12:09,279 --> 00:12:12,800
and i hope some of you will be

00:12:10,800 --> 00:12:13,360
interested in getting more details about

00:12:12,800 --> 00:12:17,279
cliff

00:12:13,360 --> 00:12:21,279
and its web ui so there is

00:12:17,279 --> 00:12:24,399
here the url to the main cliff

00:12:21,279 --> 00:12:26,000
website and please don't hesitate to

00:12:24,399 --> 00:12:28,399
contact me by email

00:12:26,000 --> 00:12:30,079
using the cliff mailing list or my

00:12:28,399 --> 00:12:33,279
professional address

00:12:30,079 --> 00:12:39,839
thanks again and have a nice ow 2

00:12:33,279 --> 00:12:39,839

YouTube URL: https://www.youtube.com/watch?v=Ictmg2AW3D0


