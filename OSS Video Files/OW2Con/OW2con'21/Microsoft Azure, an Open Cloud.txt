Title: Microsoft Azure, an Open Cloud
Publication date: 2021-06-30
Playlist: OW2con'21
Description: 
	Beyond the simple statement, let's try to demonstrate by following a model inspired by OSI, how a GAFAM provides an open cloud. From the simple visit of an Azure region to the hardware blueprint, a “7 evidence game” of the openness of Microsoft Azure.
Captions: 
	00:00:00,390 --> 00:00:07,080
[Music]

00:00:09,970 --> 00:00:13,829
[Music]

00:00:15,440 --> 00:00:20,880
hello and welcome for this

00:00:17,600 --> 00:00:24,480
uh new session of rw2

00:00:20,880 --> 00:00:27,680
uh 2021 this uh session

00:00:24,480 --> 00:00:31,840
is a demonstration around

00:00:27,680 --> 00:00:35,600
azure as an open clown

00:00:31,840 --> 00:00:37,600
it might be a little bit baldy for my

00:00:35,600 --> 00:00:40,640
side to do the demonstration but

00:00:37,600 --> 00:00:41,520
let's try first of all some introduction

00:00:40,640 --> 00:00:43,520
about myself

00:00:41,520 --> 00:00:46,879
my name is frankfury i'm working

00:00:43,520 --> 00:00:50,719
obviously at microsoft

00:00:46,879 --> 00:00:53,840
and i'm a team leader of azure aztec

00:00:50,719 --> 00:00:57,440
working for microsoft force

00:00:53,840 --> 00:01:00,000
and a focus on

00:00:57,440 --> 00:01:00,000
partners

00:01:00,640 --> 00:01:04,400
this demonstration will reuse or at

00:01:03,840 --> 00:01:06,880
least

00:01:04,400 --> 00:01:07,760
we will try to follow as much as

00:01:06,880 --> 00:01:11,680
possible

00:01:07,760 --> 00:01:13,680
the oz model remember that the aussie

00:01:11,680 --> 00:01:16,960
model has seven layer

00:01:13,680 --> 00:01:18,799
then let's go to have seven facts as a

00:01:16,960 --> 00:01:22,720
demonstration

00:01:18,799 --> 00:01:27,439
on azure as an open cloud

00:01:22,720 --> 00:01:30,479
let's go for the first fact first of all

00:01:27,439 --> 00:01:33,520
you can drive azure

00:01:30,479 --> 00:01:36,640
with the tool of your choice

00:01:33,520 --> 00:01:40,479
you're not binded to any

00:01:36,640 --> 00:01:43,439
proprietary tool obviously you can

00:01:40,479 --> 00:01:44,399
use a native open source toolbox

00:01:43,439 --> 00:01:47,600
provided by

00:01:44,399 --> 00:01:52,079
microsoft the cli written

00:01:47,600 --> 00:01:57,520
python is using mit license

00:01:52,079 --> 00:02:01,360
powershell is available using a pitch to

00:01:57,520 --> 00:02:04,960
bicep which is a dsl

00:02:01,360 --> 00:02:08,399
on top of ariem which can provide you

00:02:04,960 --> 00:02:12,319
the ability to deploy azure resource

00:02:08,399 --> 00:02:14,239
and bicep is also an open source license

00:02:12,319 --> 00:02:15,920
if you don't like this native urban

00:02:14,239 --> 00:02:18,160
source toolbox

00:02:15,920 --> 00:02:20,560
well you can stick with other open

00:02:18,160 --> 00:02:23,920
source tools

00:02:20,560 --> 00:02:27,040
and sibo terraform chef

00:02:23,920 --> 00:02:28,720
puppet whatever the tool open source it

00:02:27,040 --> 00:02:32,319
usually works

00:02:28,720 --> 00:02:34,720
a lot of documentation is available um

00:02:32,319 --> 00:02:36,959
a lot of people i know works with

00:02:34,720 --> 00:02:39,599
terraform or ansible

00:02:36,959 --> 00:02:40,080
we have a lot of partner using puppet to

00:02:39,599 --> 00:02:43,519
drive

00:02:40,080 --> 00:02:45,680
azure other options you have

00:02:43,519 --> 00:02:48,879
well you can pilot azure with your

00:02:45,680 --> 00:02:51,920
favorite ci cd tools

00:02:48,879 --> 00:02:52,640
well um for sure azure devops can be

00:02:51,920 --> 00:02:56,560
used

00:02:52,640 --> 00:03:00,879
or you can use either github gitlab

00:02:56,560 --> 00:03:04,080
jenkins whatever add your solution here

00:03:00,879 --> 00:03:05,599
you can find a way and there is options

00:03:04,080 --> 00:03:08,879
to drive azure with these

00:03:05,599 --> 00:03:11,680
icd tools last option

00:03:08,879 --> 00:03:12,480
well you can stick with the azure portal

00:03:11,680 --> 00:03:15,680
um

00:03:12,480 --> 00:03:19,040
it's your choice um you're

00:03:15,680 --> 00:03:23,360
not binded or are you not forced to use

00:03:19,040 --> 00:03:28,080
one tool here it's completely open

00:03:23,360 --> 00:03:30,879
second fact you want to use azure

00:03:28,080 --> 00:03:31,599
then you have to stick with up and

00:03:30,879 --> 00:03:34,720
standard

00:03:31,599 --> 00:03:39,360
protocols of formats

00:03:34,720 --> 00:03:42,640
exit any proprietary protocols

00:03:39,360 --> 00:03:45,760
you want to talk with

00:03:42,640 --> 00:03:49,440
azure active directory well

00:03:45,760 --> 00:03:52,640
you have to talk open id or saml

00:03:49,440 --> 00:03:56,560
you want to talk with even hub or

00:03:52,640 --> 00:04:00,799
iot hub then you can talk http

00:03:56,560 --> 00:04:04,400
mqtt imqp all these protocols are

00:04:00,799 --> 00:04:07,519
open standard fully

00:04:04,400 --> 00:04:12,799
documented it's working

00:04:07,519 --> 00:04:16,400
by default you want to store

00:04:12,799 --> 00:04:20,079
data uh within azure well

00:04:16,400 --> 00:04:23,600
we're reusing up and standard formats

00:04:20,079 --> 00:04:26,800
apache avro nfs parquet

00:04:23,600 --> 00:04:30,320
are among the formats that we support

00:04:26,800 --> 00:04:34,000
then here another demonstration

00:04:30,320 --> 00:04:36,720
azure only use open standards protocols

00:04:34,000 --> 00:04:36,720
and formats

00:04:37,600 --> 00:04:45,520
third azure can execute

00:04:41,759 --> 00:04:49,600
any technology you want

00:04:45,520 --> 00:04:52,960
or you need any language

00:04:49,600 --> 00:04:55,280
well i could build a long list of

00:04:52,960 --> 00:04:57,680
open source language available and

00:04:55,280 --> 00:05:01,039
supported

00:04:57,680 --> 00:05:04,560
java is among them php obviously

00:05:01,039 --> 00:05:08,560
python c-sharp any

00:05:04,560 --> 00:05:11,680
um and microsoft provides azure sdk

00:05:08,560 --> 00:05:13,520
on up open source license for a lot a

00:05:11,680 --> 00:05:17,199
lot of language and it's still

00:05:13,520 --> 00:05:18,320
evolving every day uh csharpwith.net is

00:05:17,199 --> 00:05:22,720
supported

00:05:18,320 --> 00:05:22,720
javascript java go

00:05:23,120 --> 00:05:26,240
name your language

00:05:27,039 --> 00:05:34,320
azure also support any operating system

00:05:30,880 --> 00:05:38,639
well any is might be

00:05:34,320 --> 00:05:42,960
a little bit too uh over one

00:05:38,639 --> 00:05:46,320
but it is just an example here

00:05:42,960 --> 00:05:50,160
linux distribution psd

00:05:46,320 --> 00:05:52,800
windows even mic os is

00:05:50,160 --> 00:05:53,680
about to come but it is already

00:05:52,800 --> 00:05:58,000
available

00:05:53,680 --> 00:06:02,560
on azure devops and github's actions

00:05:58,000 --> 00:06:06,880
you can run containers anywhere

00:06:02,560 --> 00:06:10,080
we even support as 400 or

00:06:06,880 --> 00:06:13,280
cray azure can

00:06:10,080 --> 00:06:16,800
execute any technology you pick the

00:06:13,280 --> 00:06:21,840
technology you need or you like

00:06:16,800 --> 00:06:21,840
and azure can execute it

00:06:21,919 --> 00:06:24,319
fourth

00:06:25,039 --> 00:06:31,440
azure provide open source

00:06:28,400 --> 00:06:35,120
managed services

00:06:31,440 --> 00:06:38,880
meaning that the um

00:06:35,120 --> 00:06:39,280
managed services microsoft provide

00:06:38,880 --> 00:06:43,280
through

00:06:39,280 --> 00:06:46,479
azure are built reusing

00:06:43,280 --> 00:06:50,639
open source components or

00:06:46,479 --> 00:06:54,160
open source provided by the editor

00:06:50,639 --> 00:06:57,360
that way is respect the editor

00:06:54,160 --> 00:07:00,479
business model and

00:06:57,360 --> 00:07:03,520
if it's coming from the community

00:07:00,479 --> 00:07:07,120
then we do not

00:07:03,520 --> 00:07:09,919
fork uh the uh community solution

00:07:07,120 --> 00:07:10,800
we work directly with the with the

00:07:09,919 --> 00:07:15,039
community

00:07:10,800 --> 00:07:18,080
upstream or directly with the editor

00:07:15,039 --> 00:07:21,199
upstream always that's it's very

00:07:18,080 --> 00:07:24,319
mandatory as a policy within microsoft

00:07:21,199 --> 00:07:24,960
to work with the community or with the

00:07:24,319 --> 00:07:28,240
editor

00:07:24,960 --> 00:07:31,360
and not forking

00:07:28,240 --> 00:07:35,919
the the solution i've listed here

00:07:31,360 --> 00:07:39,199
on this slide a few example

00:07:35,919 --> 00:07:42,240
uh i could put the name of everyone

00:07:39,199 --> 00:07:47,360
of every uh component here

00:07:42,240 --> 00:07:47,360
but let's say okay the majors are here

00:07:48,160 --> 00:07:56,160
some are um of the managed services

00:07:52,560 --> 00:07:59,360
reuse the name directly such as

00:07:56,160 --> 00:07:59,680
azure database for passgrassql then you

00:07:59,360 --> 00:08:03,120
have

00:07:59,680 --> 00:08:06,479
postgresql directly or sometime

00:08:03,120 --> 00:08:10,240
we rebranded azure peer view

00:08:06,479 --> 00:08:13,599
is apache atlas if you look at

00:08:10,240 --> 00:08:17,360
azure application gateway v2 then

00:08:13,599 --> 00:08:20,000
it's nginx if you're looking at azure

00:08:17,360 --> 00:08:22,400
web application firewall and it's based

00:08:20,000 --> 00:08:25,680
on apache mod security

00:08:22,400 --> 00:08:29,440
and the list is long

00:08:25,680 --> 00:08:30,639
so here azure provide open source

00:08:29,440 --> 00:08:33,279
managed services

00:08:30,639 --> 00:08:35,200
based on open source component

00:08:33,279 --> 00:08:37,200
respecting the business model and

00:08:35,200 --> 00:08:40,800
helping the community

00:08:37,200 --> 00:08:43,360
to have a new uh features directly

00:08:40,800 --> 00:08:43,360
upstream

00:08:44,480 --> 00:08:53,200
fifth well

00:08:49,440 --> 00:08:56,720
some part and i would say

00:08:53,200 --> 00:08:59,839
probably the more important parts

00:08:56,720 --> 00:09:03,360
of azure infrastructure

00:08:59,839 --> 00:09:06,240
is open source azure is relying

00:09:03,360 --> 00:09:07,600
on open source let's take some example

00:09:06,240 --> 00:09:11,440
here

00:09:07,600 --> 00:09:14,560
being searched we do relies on

00:09:11,440 --> 00:09:16,320
kubernetes so being searched is using

00:09:14,560 --> 00:09:20,399
heavily communities

00:09:16,320 --> 00:09:24,000
beneath the heart

00:09:20,399 --> 00:09:27,040
of the uh network network intelligence

00:09:24,000 --> 00:09:31,360
of azure um is re

00:09:27,040 --> 00:09:32,480
is using sonic sonic is a debian based

00:09:31,360 --> 00:09:36,240
project

00:09:32,480 --> 00:09:39,279
available for everyone um and it's um

00:09:36,240 --> 00:09:43,600
the solution we use and we built and

00:09:39,279 --> 00:09:46,180
today it's reusing it's reused massively

00:09:43,600 --> 00:09:48,320
uh in every switch and so on and and

00:09:46,180 --> 00:09:52,000
[Music]

00:09:48,320 --> 00:09:55,760
network provider and sonic

00:09:52,000 --> 00:09:59,760
is driving the network intelligence

00:09:55,760 --> 00:10:03,440
in um azure let's say you provide an

00:09:59,760 --> 00:10:07,279
um you not let's say you create

00:10:03,440 --> 00:10:11,760
a via neutral network within azure

00:10:07,279 --> 00:10:11,760
when you create a virtual network

00:10:11,920 --> 00:10:17,200
first you use the cli and the open

00:10:15,440 --> 00:10:19,519
source cli

00:10:17,200 --> 00:10:20,480
and this opens also discuss with the

00:10:19,519 --> 00:10:24,720
fabric

00:10:20,480 --> 00:10:24,720
of azure using api

00:10:24,959 --> 00:10:31,519
and then the request goes to sonic

00:10:28,399 --> 00:10:33,600
and sonic just provision

00:10:31,519 --> 00:10:35,920
everything that where you have your

00:10:33,600 --> 00:10:38,959
virtual network

00:10:35,920 --> 00:10:42,480
other example is well um

00:10:38,959 --> 00:10:45,440
azure sql database

00:10:42,480 --> 00:10:48,000
it's used heavily service fabric service

00:10:45,440 --> 00:10:50,720
fabric is now pencil solution

00:10:48,000 --> 00:10:50,720
to run

00:10:51,200 --> 00:10:57,600
containers as communities can do it but

00:10:55,680 --> 00:11:00,640
service fabric was

00:10:57,600 --> 00:11:04,079
a homemade solution and it has been

00:11:00,640 --> 00:11:07,440
provided as open source

00:11:04,079 --> 00:11:11,440
or another example is that

00:11:07,440 --> 00:11:15,040
microsoft built um his own distro

00:11:11,440 --> 00:11:18,160
is on linux distro named mariner

00:11:15,040 --> 00:11:21,360
and it's used as host

00:11:18,160 --> 00:11:25,920
for managed services

00:11:21,360 --> 00:11:28,640
for example let's say you want to

00:11:25,920 --> 00:11:29,760
deploy as your front door as the front

00:11:28,640 --> 00:11:33,920
door is the solution

00:11:29,760 --> 00:11:38,399
on the network part i'll then

00:11:33,920 --> 00:11:42,079
when you are provision

00:11:38,399 --> 00:11:45,360
as your front door underneath

00:11:42,079 --> 00:11:48,800
it will run on azure mariner it's the

00:11:45,360 --> 00:11:48,800
linux distros as i said

00:11:49,040 --> 00:11:56,079
so this is

00:11:53,040 --> 00:11:57,120
quite important to know that um azure

00:11:56,079 --> 00:12:00,240
infrastructure

00:11:57,120 --> 00:12:03,040
is partially or

00:12:00,240 --> 00:12:05,360
mostly open source or rely on open

00:12:03,040 --> 00:12:05,360
source

00:12:06,480 --> 00:12:14,000
next fact the

00:12:09,600 --> 00:12:17,279
hardware that is used

00:12:14,000 --> 00:12:20,240
by azure has been released

00:12:17,279 --> 00:12:20,959
and continuously released within the

00:12:20,240 --> 00:12:24,240
open

00:12:20,959 --> 00:12:27,440
compute project yes we use

00:12:24,240 --> 00:12:28,160
open source hardware there is three

00:12:27,440 --> 00:12:32,000
major

00:12:28,160 --> 00:12:36,560
projects that we are working on

00:12:32,000 --> 00:12:39,839
olympus is the specification

00:12:36,560 --> 00:12:42,800
of the hardware that we are really

00:12:39,839 --> 00:12:44,959
that we are reusing uh within uh azure

00:12:42,800 --> 00:12:48,800
data centers

00:12:44,959 --> 00:12:50,720
and it is a completely modular system

00:12:48,800 --> 00:12:54,560
you can reuse some part of it

00:12:50,720 --> 00:12:57,680
etc etcetera and it's

00:12:54,560 --> 00:13:01,200
available second uh

00:12:57,680 --> 00:13:04,480
project is siberius siberius

00:13:01,200 --> 00:13:08,399
is um a

00:13:04,480 --> 00:13:12,399
hardware compliant for security

00:13:08,399 --> 00:13:15,920
okay the id is to host

00:13:12,399 --> 00:13:19,279
directly the security

00:13:15,920 --> 00:13:22,800
within the hardware

00:13:19,279 --> 00:13:25,920
the third one is denali denali

00:13:22,800 --> 00:13:30,320
is an interface um

00:13:25,920 --> 00:13:33,760
for ssd it's really really help

00:13:30,320 --> 00:13:36,880
to uh build a jibar um

00:13:33,760 --> 00:13:36,880
based on ssd

00:13:38,000 --> 00:13:45,199
last fact is well read

00:13:41,839 --> 00:13:46,839
regions are opened public i invite you

00:13:45,199 --> 00:13:49,199
to set up a visit

00:13:46,839 --> 00:13:50,800
physically while obviously waiting for

00:13:49,199 --> 00:13:53,680
post covet policy

00:13:50,800 --> 00:13:53,680
or virtually

00:13:55,920 --> 00:14:03,279
well thank you for peace

00:14:00,000 --> 00:14:06,480
for following this uh demonstration

00:14:03,279 --> 00:14:09,600
and um i hope you like it i'm here

00:14:06,480 --> 00:14:11,839
on the chat to answer any questions

00:14:09,600 --> 00:14:12,639
thank you for listening thank you for

00:14:11,839 --> 00:14:17,839
attending

00:14:12,639 --> 00:14:17,839

YouTube URL: https://www.youtube.com/watch?v=Ns2oIONBuRU


