Title: OW2con19: AI and Deep Learning for On-Board Satellite Image Analysis - Caroline Pacheco
Publication date: 2019-06-20
Playlist: OW2con 2019
Description: 
	This presentation will present how OW2 ProActive is accelerating the development of AI Image Analysis with Deep Learning.
The objective is to on-board and launch in a Satellite analysis that automatically detect image differences between two passes of a satellite over the same spot on the earth. This further accelerate notification of the ground station that something potentially abnormal or dangerous is going-on on our planet.
Captions: 
	00:00:05,540 --> 00:00:13,400
hi everyone my name is Caroline I am a

00:00:09,540 --> 00:00:17,220
machine learning engineer at Activa and

00:00:13,400 --> 00:00:20,430
today are you present AI and deep

00:00:17,220 --> 00:00:27,289
learning for onboard satellite images

00:00:20,430 --> 00:00:31,529
and eyes in fact Activa was founded in

00:00:27,289 --> 00:00:36,290
2007 by Danes caramel in sophia

00:00:31,529 --> 00:00:43,489
antipolis today it's run by Danis

00:00:36,290 --> 00:00:47,610
Francois and Fabien actually solution

00:00:43,489 --> 00:00:52,350
consists of you for interfaces

00:00:47,610 --> 00:00:58,469
the first is aqua studio is a graphical

00:00:52,350 --> 00:01:01,770
interface for create or flows then you

00:00:58,469 --> 00:01:06,000
have a automation dashboard you can run

00:01:01,770 --> 00:01:09,290
a manager jobs and services next you

00:01:06,000 --> 00:01:13,290
have scheduling interfaces we can submit

00:01:09,290 --> 00:01:16,920
any modern they are flows there is a

00:01:13,290 --> 00:01:20,549
quotients in travel resorts and the

00:01:16,920 --> 00:01:22,799
final you have a resourcing managers it

00:01:20,549 --> 00:01:26,640
integrates in manager resources from

00:01:22,799 --> 00:01:35,070
different infrastructures like opus

00:01:26,640 --> 00:01:41,880
taiyaki or cloud stocky Amazon etc here

00:01:35,070 --> 00:01:45,540
are some advantages of our solutions for

00:01:41,880 --> 00:01:48,270
example they are flow interfacing it's

00:01:45,540 --> 00:01:52,170
very - Chiefs you can use a different

00:01:48,270 --> 00:01:56,369
languages like if you have a Python Java

00:01:52,170 --> 00:02:00,659
Script etc everything is open you can

00:01:56,369 --> 00:02:01,680
see o codes we can monitor real-time

00:02:00,659 --> 00:02:07,020
jobs

00:02:01,680 --> 00:02:11,580
angel resources it has arrow management

00:02:07,020 --> 00:02:14,239
job planner its Clow a mood cloud in ode

00:02:11,580 --> 00:02:14,239
scaling

00:02:14,480 --> 00:02:23,160
now you know a little about our solution

00:02:18,330 --> 00:02:27,530
I can talk him about ai ai system is all

00:02:23,160 --> 00:02:31,250
based on mathematical functions that

00:02:27,530 --> 00:02:34,709
exhibiting intelligence on Givi domain

00:02:31,250 --> 00:02:38,940
what is machine learning machine

00:02:34,709 --> 00:02:41,849
learning it's a super area of AI and

00:02:38,940 --> 00:02:45,630
machine learning give it a computer's

00:02:41,849 --> 00:02:49,400
they kept a capability to learning if

00:02:45,630 --> 00:02:53,610
you ought to be a specific program it

00:02:49,400 --> 00:02:55,170
some traditional technique e some

00:02:53,610 --> 00:02:57,810
tradition machine learning techniques or

00:02:55,170 --> 00:03:02,690
support vector machines linear

00:02:57,810 --> 00:03:04,890
regression k-means and the Kenyan effect

00:03:02,690 --> 00:03:09,329
traditional machine learning techniques

00:03:04,890 --> 00:03:10,099
are very powerful but not so easy to

00:03:09,329 --> 00:03:15,319
apply

00:03:10,099 --> 00:03:15,319
due to its future extraction step

00:03:17,269 --> 00:03:27,810
however in 2012 technique of machine

00:03:23,910 --> 00:03:30,959
learning based in neural network he

00:03:27,810 --> 00:03:35,120
called the deep learning becomes very

00:03:30,959 --> 00:03:37,380
popular this because deeper learning

00:03:35,120 --> 00:03:41,190
automates the feature extraction step

00:03:37,380 --> 00:03:46,019
and it's present a high accuracy for

00:03:41,190 --> 00:03:51,359
difference applications many people talk

00:03:46,019 --> 00:03:54,169
about AI GP learning big data but the

00:03:51,359 --> 00:03:57,690
big question is how to a deploy

00:03:54,169 --> 00:04:01,980
efficiency and scalable AI solution to

00:03:57,690 --> 00:04:07,590
solve real-world application in fact is

00:04:01,980 --> 00:04:09,870
not easy questions just because they are

00:04:07,590 --> 00:04:14,669
as many challenges to deploy AI

00:04:09,870 --> 00:04:19,639
solutions how like you automate AI

00:04:14,669 --> 00:04:23,490
pipelines how to run resource everywhere

00:04:19,639 --> 00:04:26,490
and how to integrate difference

00:04:23,490 --> 00:04:29,550
AIE libraries like a car

00:04:26,490 --> 00:04:34,099
things of flow by touch such a cheeky

00:04:29,550 --> 00:04:41,370
learn etc in fact we realized our

00:04:34,099 --> 00:04:45,030
solution Qing Zhu fu G's challenges this

00:04:41,370 --> 00:04:47,840
because you propose a we integrate AI in

00:04:45,030 --> 00:04:47,840
our solutions

00:04:49,550 --> 00:04:57,690
he he is look like our solution in fact

00:04:54,479 --> 00:05:02,030
we have a difference catalog for deeper

00:04:57,690 --> 00:05:02,030
learning machine learning Big Data

00:05:02,090 --> 00:05:19,880
effect everything here is customized you

00:05:06,539 --> 00:05:27,000
can create your own catalog our solution

00:05:19,880 --> 00:05:34,020
allows to automate dae-ho ai pipeline in

00:05:27,000 --> 00:05:37,530
sample portable and scalable way for

00:05:34,020 --> 00:05:41,400
example we can do data preparation model

00:05:37,530 --> 00:05:45,289
training more a mode optimization model

00:05:41,400 --> 00:05:53,099
evaluation in the end you can deploy AI

00:05:45,289 --> 00:05:57,440
pipelines in production now I show you a

00:05:53,099 --> 00:06:05,789
project a project in collaboration with

00:05:57,440 --> 00:06:08,669
a HC urea and talus effect they may go

00:06:05,789 --> 00:06:12,150
of this project project is applied

00:06:08,669 --> 00:06:15,180
deeper learning techniques for on both

00:06:12,150 --> 00:06:22,469
satellites satellites satellite images

00:06:15,180 --> 00:06:25,490
analysis one of the first use case for

00:06:22,469 --> 00:06:28,349
this project project voice chip

00:06:25,490 --> 00:06:34,529
detection on satellite satellite images

00:06:28,349 --> 00:06:38,060
and I show you how we did this pro this

00:06:34,529 --> 00:06:38,060
is case using our platform

00:06:38,740 --> 00:06:54,940
I show you forces some images images of

00:06:48,400 --> 00:06:58,030
these sheep data set we can see also

00:06:54,940 --> 00:07:07,740
they grow to images in fact it's a

00:06:58,030 --> 00:07:07,740
segmentation problem here are plataform

00:07:08,040 --> 00:07:17,950
use GP loading from kill you selected

00:07:11,290 --> 00:07:26,770
ability we have some catalog but

00:07:17,950 --> 00:07:29,110
everything is customized you started

00:07:26,770 --> 00:07:32,050
with the case firstly needed to import

00:07:29,110 --> 00:07:36,430
the data set the ship data set we have

00:07:32,050 --> 00:07:39,190
with different parents you input second

00:07:36,430 --> 00:07:45,310
segmentation put is a segmentation of

00:07:39,190 --> 00:07:47,740
data set now we we can see the second

00:07:45,310 --> 00:07:52,350
edge is a GP learning algorithm for a

00:07:47,740 --> 00:07:55,630
major classification then this training

00:07:52,350 --> 00:08:00,880
task is has some possible for build a

00:07:55,630 --> 00:08:07,960
model after that you can download the

00:08:00,880 --> 00:08:11,370
model okay he also projection Mordor in

00:08:07,960 --> 00:08:15,430
the finally looking see the results you

00:08:11,370 --> 00:08:18,790
can see also some graphical using wisdom

00:08:15,430 --> 00:08:22,810
libraries body you can use it in so

00:08:18,790 --> 00:08:25,210
board or library everything is ok you

00:08:22,810 --> 00:08:27,280
can see the code you can modify we

00:08:25,210 --> 00:08:31,900
customize it you can you to use

00:08:27,280 --> 00:08:37,150
different languages all libraries i used

00:08:31,900 --> 00:08:39,750
by touch here now i you execute my

00:08:37,150 --> 00:08:39,750
pipeline

00:08:41,800 --> 00:08:49,930
we can see the education of each task

00:08:45,460 --> 00:08:58,270
you can see the log e we can see the

00:08:49,930 --> 00:09:03,900
aqua flow is a quotient you can see also

00:08:58,270 --> 00:09:09,070
some a real timing graphical of wisdom

00:09:03,900 --> 00:09:21,400
library in the Train step for the Train

00:09:09,070 --> 00:09:23,650
step and the finally you can see they

00:09:21,400 --> 00:09:28,450
resist the result so many previous

00:09:23,650 --> 00:09:32,650
results in fact it's a the last column

00:09:28,450 --> 00:09:56,170
is the results you can see some ship the

00:09:32,650 --> 00:10:02,440
shipper detection that's all thank you

00:09:56,170 --> 00:10:05,390
very much if you want demo you can visit

00:10:02,440 --> 00:10:10,690
us in you know both thank you very much

00:10:05,390 --> 00:10:10,690

YouTube URL: https://www.youtube.com/watch?v=ertyr0-ohDs


