Title: OW2con 2011 Context Situation Aware in Mobile Cloud Computing PART 2 Dianxi SHI
Publication date: 2012-01-09
Playlist: OW2con 2011 Context Situation Aware in Mobile Cloud
Description: 
	Speaker: Dianxi SHI, NUDT
Abstract: Context Manage Framework(CMF) is a framework which run on mobile devices and cloud. The part of CMF which run on mobile device could fetch the context around mobile device, and send the context to cloud. According to the large-scale context which received from many mobile devices, the part of CMF which run on cloud could use all of the context to aggregate. The result of the context aggregation is used to provide better service for users.
CMF is divided into two parts. The part which run on mobile device is developed on Android, it can be used to collect the context around phones automatically. It could collect the information from eight sensors in Android operating system, CPU information and so on. Subscription of context and different frequency of context collecting are provided. The part which run on cloud is developed on Hadoop, it can be used to receive context from large-scale phones, and it also can be used to aggregate the context. The algorithm of context aggregation based on rule is implemented by MapReduce Model. And the result of context aggregation is provided for users by webservices. The feature of CMF are aggregating large-scale context, providing better services for users.
Captions: 
	00:00:02,959 --> 00:00:11,280
and another part is the context to

00:00:08,519 --> 00:00:13,500
receive server this server we see with

00:00:11,280 --> 00:00:19,080
the context of from the mobile device

00:00:13,500 --> 00:00:21,840
and then send this and under dispatch

00:00:19,080 --> 00:00:27,119
this information to the another part and

00:00:21,840 --> 00:00:32,030
the other party is a Greek aggregation

00:00:27,119 --> 00:00:39,350
aggregated the context the thorough and

00:00:32,030 --> 00:00:43,230
under and another party the context

00:00:39,350 --> 00:00:46,340
context the aggregation results the

00:00:43,230 --> 00:00:50,550
sender to the application server and

00:00:46,340 --> 00:00:54,570
this application server the function of

00:00:50,550 --> 00:00:58,829
the observer is a receive the result of

00:00:54,570 --> 00:01:07,250
the context the aggregation and or to

00:00:58,829 --> 00:01:12,930
the mobile device now you located the

00:01:07,250 --> 00:01:17,750
figure is a teacher about the mobile

00:01:12,930 --> 00:01:23,000
mobile phone part this part they include

00:01:17,750 --> 00:01:27,530
three reported the first is the Contessa

00:01:23,000 --> 00:01:33,090
abstract model because the mobile device

00:01:27,530 --> 00:01:37,619
is a difference such as Andrus Android

00:01:33,090 --> 00:01:41,640
platform iPhone platform and every

00:01:37,619 --> 00:01:44,490
platform the interface of sensors is

00:01:41,640 --> 00:01:48,530
they're all so different so we designed

00:01:44,490 --> 00:01:54,049
a context object models to share the

00:01:48,530 --> 00:02:00,500
heterogeneous of platform and API

00:01:54,049 --> 00:02:04,920
difference and another party the context

00:02:00,500 --> 00:02:09,330
assess and contacts the information to

00:02:04,920 --> 00:02:11,069
sync to the cloud this puddle help had

00:02:09,330 --> 00:02:12,650
two functions the first day the

00:02:11,069 --> 00:02:14,810
collector

00:02:12,650 --> 00:02:17,489
information around the film's

00:02:14,810 --> 00:02:21,329
automatically and the another function

00:02:17,489 --> 00:02:25,500
is a publishing subscription of context

00:02:21,329 --> 00:02:33,299
and the different frequency of context

00:02:25,500 --> 00:02:36,019
eclectic and in the clouds part and this

00:02:33,299 --> 00:02:39,269
party is developed based on Hadoop

00:02:36,019 --> 00:02:41,730
platform and the malfunctions of these

00:02:39,269 --> 00:02:44,670
parties to receive context of from a

00:02:41,730 --> 00:02:48,390
thousand helpful phones and that will

00:02:44,670 --> 00:02:52,650
realize larger context aggregation by

00:02:48,390 --> 00:02:56,909
MapReduce models and to provide the

00:02:52,650 --> 00:03:03,840
result of context aggregation by webs a

00:02:56,909 --> 00:03:07,349
web services based on the research

00:03:03,840 --> 00:03:11,700
worker we designed traffic a demo to

00:03:07,349 --> 00:03:16,079
show our researcher results first the

00:03:11,700 --> 00:03:19,340
waybill the experiment the bed and this

00:03:16,079 --> 00:03:24,150
is bad in cruiser apart the first day

00:03:19,340 --> 00:03:29,150
undulate for and another it the context

00:03:24,150 --> 00:03:32,459
the server the 30 is a context

00:03:29,150 --> 00:03:40,440
application servers and the last is a

00:03:32,459 --> 00:03:45,000
web service first we look at the demos

00:03:40,440 --> 00:03:52,709
in iris as we know today we want to know

00:03:45,000 --> 00:03:55,799
the traffic information we we needed to

00:03:52,709 --> 00:03:59,609
deploy a lot of cameras and special

00:03:55,799 --> 00:04:04,199
scissors this measure is a rethink how

00:03:59,609 --> 00:04:09,449
many disabled voltage such as expensive

00:04:04,199 --> 00:04:13,829
and imitated he capable 80 we have new

00:04:09,449 --> 00:04:17,220
Teddy ever almost everywhere I will hide

00:04:13,829 --> 00:04:21,750
the mobile phone especially the driver

00:04:17,220 --> 00:04:25,620
has a mobile phone it will whether we

00:04:21,750 --> 00:04:32,070
can use the mobile phone to correct the

00:04:25,620 --> 00:04:35,460
traffic information and every driver we

00:04:32,070 --> 00:04:38,970
can select the contact ed pharmacy from

00:04:35,460 --> 00:04:41,610
the driver mobile phone and the synth DC

00:04:38,970 --> 00:04:44,729
for missing to the cloud and the weaker

00:04:41,610 --> 00:04:47,130
in the cloud side we can do with this

00:04:44,729 --> 00:04:49,669
information and the aggregate aggregate

00:04:47,130 --> 00:04:56,250
information and they gave the whole

00:04:49,669 --> 00:05:02,370
we're of the traffic information this is

00:04:56,250 --> 00:05:07,889
our department result in the you in this

00:05:02,370 --> 00:05:11,430
table who show the from bank from card

00:05:07,889 --> 00:05:15,510
form carry permit such as this bit of

00:05:11,430 --> 00:05:18,570
the cars eat and the lock titude and the

00:05:15,510 --> 00:05:21,949
latitude because every windsor driver

00:05:18,570 --> 00:05:26,039
drive the car in the route we can

00:05:21,949 --> 00:05:30,000
collect DC for reasons the beauty from

00:05:26,039 --> 00:05:33,150
Asia ended the position and we can send

00:05:30,000 --> 00:05:36,990
this information to the cloud side and

00:05:33,150 --> 00:05:40,200
the courtside car and do with this

00:05:36,990 --> 00:05:45,150
information and the general reach really

00:05:40,200 --> 00:05:47,340
traffic stage for the for the user the

00:05:45,150 --> 00:05:52,070
mobile phone user can receive it is the

00:05:47,340 --> 00:05:58,380
traffic state and no traffic a current

00:05:52,070 --> 00:06:03,419
situation on the route this is a result

00:05:58,380 --> 00:06:08,220
of our of our experiment this this

00:06:03,419 --> 00:06:12,660
picture to the rule contact the right

00:06:08,220 --> 00:06:15,690
point is a car on the route we collect

00:06:12,660 --> 00:06:23,250
the information from the average mobile

00:06:15,690 --> 00:06:28,490
mobile phone after after process this

00:06:23,250 --> 00:06:31,789
information we can show the situation

00:06:28,490 --> 00:06:35,389
results on the phone you can see this

00:06:31,789 --> 00:06:35,389
the speaker should

00:06:35,449 --> 00:06:45,869
result under the Red Desert rate the

00:06:42,689 --> 00:06:50,909
right allowed means the route the

00:06:45,869 --> 00:06:56,099
traffic under the auto are mean the car

00:06:50,909 --> 00:06:59,999
may be slow and the yellow so either the

00:06:56,099 --> 00:07:02,879
route the traffic is a normally and the

00:06:59,999 --> 00:07:09,050
grin which means the traffic is very

00:07:02,879 --> 00:07:14,580
good after this work we have to a summer

00:07:09,050 --> 00:07:21,240
performance test in this table the first

00:07:14,580 --> 00:07:24,499
column is the month of context under the

00:07:21,240 --> 00:07:28,139
second is the country's the time of

00:07:24,499 --> 00:07:31,499
context aggregated aggregation uncloudy

00:07:28,139 --> 00:07:34,169
and at the last days which means is a

00:07:31,499 --> 00:07:40,289
container aggregation and single a

00:07:34,169 --> 00:07:43,770
single servers that from the table you

00:07:40,289 --> 00:07:49,020
can see when the month of a context

00:07:43,770 --> 00:07:55,999
exceed 10,000 the performance based on

00:07:49,020 --> 00:07:55,999
cloud is Patriot than a single server

00:07:56,809 --> 00:08:08,449
this means you piss on the cloud

00:08:03,449 --> 00:08:15,889
computing to deal with the huge context

00:08:08,449 --> 00:08:19,009
will will produce many other advantage

00:08:15,889 --> 00:08:19,009

YouTube URL: https://www.youtube.com/watch?v=Tpz7oQv528U


