Title: OW2con 2011 Open source compliance toolset and FOSSology PART2
Publication date: 2012-01-11
Playlist: OW2con 2011 Open source compliance toolset and FOSSology
Description: 
	Speaker: Bruno Cornec, HP and Alexandre Lefebvre, OW2
Abstract: FOSSology (http://fossology.org ) is an open source compliance toolset that provides software license and copyright discovery. Every file submitted to the FOSSology system is saved in a file repository, scanned, and results are stored in a database.  
A web user interface displays results while the database and file repository remain for future scans and data mining.
The presentation will cover the major features of the tool, the latest news of the 1.4.1 version, feedback from OW2 FOSSology usage, as well as the roadmap for the coming 2.0 version.
Captions: 
	00:00:05,870 --> 00:00:13,590
how is architecture of the software so

00:00:10,500 --> 00:00:16,250
as you have seen for the user everything

00:00:13,590 --> 00:00:18,510
is based on a on a web-based interface

00:00:16,250 --> 00:00:21,840
there are also some command line

00:00:18,510 --> 00:00:24,840
interface available to typically submit

00:00:21,840 --> 00:00:27,900
jobs in the queue of course it's a

00:00:24,840 --> 00:00:31,590
postgresql databases which are using

00:00:27,900 --> 00:00:33,899
used here to either manager queue of the

00:00:31,590 --> 00:00:36,510
system manager metadata around the

00:00:33,899 --> 00:00:38,670
software and also manage all the links

00:00:36,510 --> 00:00:41,550
to the file systems where you are

00:00:38,670 --> 00:00:44,309
storing the information so you can also

00:00:41,550 --> 00:00:48,360
address the buzzer SQL database directly

00:00:44,309 --> 00:00:51,449
if you want programmatically behind what

00:00:48,360 --> 00:00:53,340
you have is a second number of agents

00:00:51,449 --> 00:00:56,129
and one specific one which is job

00:00:53,340 --> 00:00:59,730
scheduler this one will be changing into

00:00:56,129 --> 00:01:03,660
the 0 so this job scheduler is in charge

00:00:59,730 --> 00:01:05,519
of getting all the queries launching the

00:01:03,660 --> 00:01:07,590
scans can you bring all the tags that

00:01:05,519 --> 00:01:10,380
needs to be scheduled in inside fasala G

00:01:07,590 --> 00:01:12,420
and it calls that it's at its turn all

00:01:10,380 --> 00:01:15,119
the valves agents that are relevant

00:01:12,420 --> 00:01:17,159
projects so can cause on mine detection

00:01:15,119 --> 00:01:19,259
agents can call the license analyzes

00:01:17,159 --> 00:01:21,810
agent and can call whatever agent you

00:01:19,259 --> 00:01:23,759
want to add to the project knowing that

00:01:21,810 --> 00:01:25,950
it will be much easier in the next

00:01:23,759 --> 00:01:29,400
version they are we writing a part of

00:01:25,950 --> 00:01:32,100
the of the software to make possibility

00:01:29,400 --> 00:01:35,280
to add agents more easy for contributors

00:01:32,100 --> 00:01:37,409
and it will be for if you want to deploy

00:01:35,280 --> 00:01:39,750
your own instance of pathology and

00:01:37,409 --> 00:01:42,680
following on maybe it's still the most

00:01:39,750 --> 00:01:44,490
easy way to have access to the software

00:01:42,680 --> 00:01:46,829
due to the problem with other

00:01:44,490 --> 00:01:49,829
information it is a Linux system in in

00:01:46,829 --> 00:01:52,200
an Apache web server php5 postgresql

00:01:49,829 --> 00:01:55,259
database for managing all the data we

00:01:52,200 --> 00:01:58,439
have seen a set a number of libraries to

00:01:55,259 --> 00:02:00,960
manage data and let's set a number of

00:01:58,439 --> 00:02:03,299
commands most of them being used to

00:02:00,960 --> 00:02:05,549
extract information from the software so

00:02:03,299 --> 00:02:08,130
all the front type of compression format

00:02:05,549 --> 00:02:10,530
or different type of packaging it's a

00:02:08,130 --> 00:02:12,630
right cetera you need quite a lot of

00:02:10,530 --> 00:02:17,070
this space and spew resources because

00:02:12,630 --> 00:02:20,910
it's processing a lot of data and and it

00:02:17,070 --> 00:02:24,150
requires a lot of space to store data

00:02:20,910 --> 00:02:26,730
memory to do the analyzes and really cpu

00:02:24,150 --> 00:02:31,440
to pass all the supplies which are given

00:02:26,730 --> 00:02:36,030
to the truth which other usage is a

00:02:31,440 --> 00:02:38,310
pathology could be considered so subtle

00:02:36,030 --> 00:02:40,620
number of them the one for example i'm

00:02:38,310 --> 00:02:43,890
interested it right now as a search

00:02:40,620 --> 00:02:47,010
party detection so we have a framework

00:02:43,890 --> 00:02:49,260
we are passing all type of schools we

00:02:47,010 --> 00:02:52,290
are extracting or type of software from

00:02:49,260 --> 00:02:54,600
whatever the livery so all that is in

00:02:52,290 --> 00:02:57,060
place now each time we are analyzing a

00:02:54,600 --> 00:02:58,730
piece of software now we do license

00:02:57,060 --> 00:03:02,250
analyzes but we could do something else

00:02:58,730 --> 00:03:06,780
one of our goal in our team here in

00:03:02,250 --> 00:03:09,330
runnable is to to write a sub party an

00:03:06,780 --> 00:03:11,010
agent to detect salt particles inside

00:03:09,330 --> 00:03:15,030
your software so you could have a large

00:03:11,010 --> 00:03:17,940
database of existing libraries which

00:03:15,030 --> 00:03:20,160
comes which will describe every goal

00:03:17,940 --> 00:03:23,850
that are provided by those libraries and

00:03:20,160 --> 00:03:26,760
if you find something new you can add

00:03:23,850 --> 00:03:28,890
that to a new library and you can for

00:03:26,760 --> 00:03:30,990
example say okay this one is an Oracle

00:03:28,890 --> 00:03:33,090
library in Iraq well as defined also

00:03:30,990 --> 00:03:34,980
system calls I could pull that in my

00:03:33,090 --> 00:03:37,980
database and now I'm able to recognize

00:03:34,980 --> 00:03:40,350
or record cold enzyme at software and it

00:03:37,980 --> 00:03:42,959
would be very helpful for so I'm working

00:03:40,350 --> 00:03:44,640
a lot on porting to be very helpful for

00:03:42,959 --> 00:03:46,440
customers were brought in the software

00:03:44,640 --> 00:03:48,660
from one platform to another because it

00:03:46,440 --> 00:03:50,760
will give them a very easy way to

00:03:48,660 --> 00:03:52,440
identify which of the real dependencies

00:03:50,760 --> 00:03:54,330
of the software and what they need to

00:03:52,440 --> 00:03:57,900
have on the target platform in order to

00:03:54,330 --> 00:04:00,030
212 software very efficient and a lot of

00:03:57,900 --> 00:04:02,310
other activities can be performed like

00:04:00,030 --> 00:04:03,110
that again right now its license only

00:04:02,310 --> 00:04:05,420
and

00:04:03,110 --> 00:04:08,540
it's an organs of project we welcome

00:04:05,420 --> 00:04:10,160
contributions so feel free to enter in

00:04:08,540 --> 00:04:11,630
contact with Z was the pathology

00:04:10,160 --> 00:04:14,300
maintenance in back again feel free to

00:04:11,630 --> 00:04:16,250
enter on on the waiting list and provide

00:04:14,300 --> 00:04:18,230
feedback to what you would think is

00:04:16,250 --> 00:04:20,390
interesting and where you would like to

00:04:18,230 --> 00:04:23,060
contribute if you have some resources in

00:04:20,390 --> 00:04:26,300
order to contribute so here is a the

00:04:23,060 --> 00:04:28,460
timeline of the project I won't pass too

00:04:26,300 --> 00:04:31,100
much time on it we are currently at

00:04:28,460 --> 00:04:33,200
version 14 1 which is which was a one

00:04:31,100 --> 00:04:37,010
delivered just before the links

00:04:33,200 --> 00:04:40,130
foundation site was unavailable and team

00:04:37,010 --> 00:04:43,850
is working on version 0 not for generate

00:04:40,130 --> 00:04:46,220
the problem for februari now 2012 and I

00:04:43,850 --> 00:04:50,060
will details and later on Luna mas was

00:04:46,220 --> 00:04:52,850
introducing 121 it wasn't new license

00:04:50,060 --> 00:04:55,070
scanner which was based on on to so

00:04:52,850 --> 00:04:56,570
first that's one apostle she was

00:04:55,070 --> 00:04:58,520
released with the Lacson scanner which

00:04:56,570 --> 00:05:00,830
was not the one who are using internally

00:04:58,520 --> 00:05:03,770
but we will not able to release it under

00:05:00,830 --> 00:05:05,990
the GPL at the start of the projects we

00:05:03,770 --> 00:05:09,229
launched a project under the GPL and

00:05:05,990 --> 00:05:11,960
then later on we add the llamas engine

00:05:09,229 --> 00:05:14,510
inside in order to be much more

00:05:11,960 --> 00:05:16,880
efficient and faster in the way we were

00:05:14,510 --> 00:05:19,490
scanning licenses as soon as we could so

00:05:16,880 --> 00:05:22,220
it was in version one that choose one we

00:05:19,490 --> 00:05:24,590
also create brackets at that time which

00:05:22,220 --> 00:05:29,210
is a way to group licenses together ops

00:05:24,590 --> 00:05:31,729
we can you can create your bad list of

00:05:29,210 --> 00:05:34,040
licenses do these substances and then

00:05:31,729 --> 00:05:37,100
you can put all the licenses into two

00:05:34,040 --> 00:05:39,530
buckets and it's much easier to read and

00:05:37,100 --> 00:05:41,330
especially for legal people or for de

00:05:39,530 --> 00:05:42,950
little property people that are only

00:05:41,330 --> 00:05:44,479
consumed by exhaust tip up type of

00:05:42,950 --> 00:05:47,270
results don't want to go into map

00:05:44,479 --> 00:05:48,680
details they have a very clear view on

00:05:47,270 --> 00:05:50,600
what is the load but it's not a load

00:05:48,680 --> 00:05:55,160
inside inside you on the analysis of

00:05:50,600 --> 00:05:57,680
your code we are also stirring so there

00:05:55,160 --> 00:06:00,740
is one agent which is in charge of doing

00:05:57,680 --> 00:06:02,630
metadata analyzes so typically if you

00:06:00,740 --> 00:06:04,550
look at the speck fire for example grow

00:06:02,630 --> 00:06:06,320
software you have a certain number of

00:06:04,550 --> 00:06:08,540
entries in the spec file all those

00:06:06,320 --> 00:06:10,460
entries or capture it inside the

00:06:08,540 --> 00:06:13,340
database and you can then make query

00:06:10,460 --> 00:06:15,300
wrong them in order to have information

00:06:13,340 --> 00:06:19,199
around middle interviews

00:06:15,300 --> 00:06:21,930
after the bucket is shown here so for

00:06:19,199 --> 00:06:25,110
example in that example we have created

00:06:21,930 --> 00:06:28,050
one bucket for GPL licenses which can

00:06:25,110 --> 00:06:31,050
group all the GPL type of licenses and

00:06:28,050 --> 00:06:33,599
non GPL licenses and you can say okay

00:06:31,050 --> 00:06:35,759
it's easy for me my project I know that

00:06:33,599 --> 00:06:37,740
everything which is monkey pee either

00:06:35,759 --> 00:06:39,479
does not force me to reduce the beauty

00:06:37,740 --> 00:06:41,789
source code with my my song or

00:06:39,479 --> 00:06:44,789
redistribution of software and for the

00:06:41,789 --> 00:06:46,440
GPL I need to redistribute so I can very

00:06:44,789 --> 00:06:48,690
easily point to the right pieces of

00:06:46,440 --> 00:06:53,400
software that needs to be redistributed

00:06:48,690 --> 00:06:55,139
outside so in the latest version there

00:06:53,400 --> 00:06:58,740
were some improvements around the user

00:06:55,139 --> 00:07:02,520
interface which was simplified the new

00:06:58,740 --> 00:07:04,469
comparison tools between so two trees

00:07:02,520 --> 00:07:06,990
two trees two versions of software you

00:07:04,469 --> 00:07:09,719
want to easily compare what has change

00:07:06,990 --> 00:07:12,240
between software version 10 software

00:07:09,719 --> 00:07:14,039
version 11 and you want to see from a

00:07:12,240 --> 00:07:15,900
licensed perspective what has changed

00:07:14,039 --> 00:07:19,169
did they make any change to the licenses

00:07:15,900 --> 00:07:20,880
that I should report my legal department

00:07:19,169 --> 00:07:23,240
so they could you should analyze it and

00:07:20,880 --> 00:07:27,080
make a new assessment on whether it's

00:07:23,240 --> 00:07:31,349
still compatible with our policy or not

00:07:27,080 --> 00:07:34,529
so here is an example of that difference

00:07:31,349 --> 00:07:36,990
of analyzes amazon a single package so

00:07:34,529 --> 00:07:39,690
you have a Sicario in one version cpo is

00:07:36,990 --> 00:07:41,400
it in a more recent version one coming

00:07:39,690 --> 00:07:43,889
from the federal repository and there's

00:07:41,400 --> 00:07:45,960
a one coming Wendy from a federal eight

00:07:43,889 --> 00:07:51,270
so it was a previous version of federal

00:07:45,960 --> 00:07:54,240
virtual analyst and you can see in a

00:07:51,270 --> 00:07:57,449
very year synthesized view in fact which

00:07:54,240 --> 00:07:59,370
all the new components which have been

00:07:57,449 --> 00:08:02,430
added and which are the licenses which

00:07:59,370 --> 00:08:04,199
are associated to them so patches

00:08:02,430 --> 00:08:06,419
generally don't have a lot of licenses

00:08:04,199 --> 00:08:09,509
in them which may be an issue but that's

00:08:06,419 --> 00:08:11,699
the case and you have the possibility to

00:08:09,509 --> 00:08:13,860
compare whether existing code has change

00:08:11,699 --> 00:08:16,409
or not enough license and you have the

00:08:13,860 --> 00:08:17,490
possibility to see here underline the

00:08:16,409 --> 00:08:19,949
licenses which

00:08:17,490 --> 00:08:23,099
inside terms of refugee is the degree of

00:08:19,949 --> 00:08:25,289
the upstream cpio confidence uses a

00:08:23,099 --> 00:08:27,270
number of places which have change and

00:08:25,289 --> 00:08:30,690
your ego department can then take the

00:08:27,270 --> 00:08:32,849
right actions to dig into account the

00:08:30,690 --> 00:08:34,680
component to see which is a piece of

00:08:32,849 --> 00:08:37,680
code which has really changed and why

00:08:34,680 --> 00:08:42,690
and what I've shown you to take based on

00:08:37,680 --> 00:08:46,790
that fossil as you choose you always now

00:08:42,690 --> 00:08:50,160
target it goes februari 21st season 12

00:08:46,790 --> 00:08:52,470
the goal of this version is not really

00:08:50,160 --> 00:08:54,810
to add a lot of features it's rather to

00:08:52,470 --> 00:09:00,510
restructure the way zip code is

00:08:54,810 --> 00:09:03,000
organized and one of the of the goal of

00:09:00,510 --> 00:09:06,690
this restriction is to provide an easy

00:09:03,000 --> 00:09:09,959
way for computers to add agents to and

00:09:06,690 --> 00:09:16,529
software so the software has been really

00:09:09,959 --> 00:09:19,470
put into a more modular approach it also

00:09:16,529 --> 00:09:22,890
knows to release agent separately from

00:09:19,470 --> 00:09:24,899
the mainland code of the current

00:09:22,890 --> 00:09:28,160
software so you will be able to see

00:09:24,899 --> 00:09:31,079
pathology 20 1,000,000 agent 20 21 22

00:09:28,160 --> 00:09:33,540
more rapidly evolving on the UH Nancy's

00:09:31,079 --> 00:09:34,980
on pace compared to the core of the

00:09:33,540 --> 00:09:38,279
facility software which will probably

00:09:34,980 --> 00:09:41,010
stay more stable for a longer time there

00:09:38,279 --> 00:09:43,020
are also putting some emphasis or around

00:09:41,010 --> 00:09:46,320
documentation and testing on this

00:09:43,020 --> 00:09:48,180
version especially documenting a way for

00:09:46,320 --> 00:09:49,980
people to write modules which is not

00:09:48,180 --> 00:09:51,690
completely easy right now read the

00:09:49,980 --> 00:09:53,640
documentation and not completely able

00:09:51,690 --> 00:09:56,850
after reading the documentation to write

00:09:53,640 --> 00:09:58,680
an ancient out of the box so you need

00:09:56,850 --> 00:10:02,959
more examples you did a bit more

00:09:58,680 --> 00:10:04,730
information on how to do it see visions

00:10:02,959 --> 00:10:07,820
after 20

00:10:04,730 --> 00:10:10,220
the future is to look at SBS report so I

00:10:07,820 --> 00:10:12,740
guess you are all familiar more or less

00:10:10,220 --> 00:10:17,180
maybe with the speedy X so this is a

00:10:12,740 --> 00:10:20,630
system down which has been also created

00:10:17,180 --> 00:10:23,000
by a subcommittee of the bizarre links

00:10:20,630 --> 00:10:28,100
for the working group and the goal is

00:10:23,000 --> 00:10:31,990
really to provide an XML format large

00:10:28,100 --> 00:10:36,889
set of information again metadata for

00:10:31,990 --> 00:10:40,639
software and components and and the goal

00:10:36,889 --> 00:10:44,120
is again to n facilitating analyzes by

00:10:40,639 --> 00:10:47,839
people of which all the licenses around

00:10:44,120 --> 00:10:50,180
a specific continent the format is quite

00:10:47,839 --> 00:10:53,690
well goals you will need to in order to

00:10:50,180 --> 00:10:57,769
manage correctly SPD's and pathology

00:10:53,690 --> 00:11:01,730
will probably supporter speaks in order

00:10:57,769 --> 00:11:04,550
to load the spds description format in

00:11:01,730 --> 00:11:06,380
parallel with the real real analyzes of

00:11:04,550 --> 00:11:09,380
the code being able to detect

00:11:06,380 --> 00:11:11,930
differences between once pdx reports and

00:11:09,380 --> 00:11:15,319
what you will find this residual in the

00:11:11,930 --> 00:11:17,420
software will stop iming at developing

00:11:15,319 --> 00:11:19,790
agent to do binary analyzes and

00:11:17,420 --> 00:11:28,430
dependency at eliza's that would be for

00:11:19,790 --> 00:11:30,319
a later later version so HP is providing

00:11:28,430 --> 00:11:34,480
the troll under a lot of source license

00:11:30,319 --> 00:11:38,540
you can you download it as that project

00:11:34,480 --> 00:11:40,579
we are also providing services around

00:11:38,540 --> 00:11:42,680
governance around the open source and

00:11:40,579 --> 00:11:45,010
linux so if you are interested by those

00:11:42,680 --> 00:11:49,339
topics and your company is not able to

00:11:45,010 --> 00:11:51,620
assess aloneness I don't know making a

00:11:49,339 --> 00:11:53,180
policy manual thing in place and open

00:11:51,620 --> 00:11:55,880
source with you ball it's a trap so

00:11:53,180 --> 00:11:57,560
stricter in your your open source and

00:11:55,880 --> 00:11:59,480
the nicest feel free to contact HP we

00:11:57,560 --> 00:12:03,790
can we can help you putting in place

00:11:59,480 --> 00:12:03,790

YouTube URL: https://www.youtube.com/watch?v=LzILjbiFiuk


