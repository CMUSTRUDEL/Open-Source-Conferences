Title: OW2con 2011 Developing community management metrics and tools for OW2 MinghuiZhou PART 2
Publication date: 2012-01-16
Playlist: OW2con 2011 Developing community management metrics and tool
Description: 
	Speaker: Minghui Zhou, Pekin University
Abstract: Processes that limit the size or potential of our community limit our products. Conversely, making it easier for people to cooperate, collaborate, experiment and play enhances the community's capacity.
We set out to improve contributor's productivity and product quality, and to improve the general understanding of issue-tracking practices. We develop community management metrics to measure contributors, projects, and their interaction, such as technical climate, project relative sociality,and their influences for newcomers. We introduce a visualization tool to reverse-engineer and improve issue-tracking practices. Using GNOME project data we demonstrate how our tool can be used to discover the evolution of issue tracking practices
Captions: 
	00:00:00,000 --> 00:00:06,299
is super important to pay them now

00:00:03,120 --> 00:00:10,139
either take a few minutes to talk about

00:00:06,299 --> 00:00:13,980
the cloud for practices actually not

00:00:10,139 --> 00:00:18,570
just the best practices what is it it's

00:00:13,980 --> 00:00:22,020
a universal data because tree recording

00:00:18,570 --> 00:00:26,460
software development we they are three

00:00:22,020 --> 00:00:29,609
later they have collected a lot of data

00:00:26,460 --> 00:00:32,099
from all kinds of open source

00:00:29,609 --> 00:00:35,090
communities and the project by the way

00:00:32,099 --> 00:00:39,210
not improving or down between Oh

00:00:35,090 --> 00:00:42,450
actually we didn't walk on Jonah but

00:00:39,210 --> 00:00:45,870
compared to gloom and Luke wheeler it

00:00:42,450 --> 00:00:49,170
has too few issues for example for

00:00:45,870 --> 00:00:53,250
Mozilla until oh well instructed almost

00:00:49,170 --> 00:00:57,059
the point of six minion issues Jonas

00:00:53,250 --> 00:01:00,809
only have one to two thousand issues why

00:00:57,059 --> 00:01:03,170
when I do this because we think it's

00:01:00,809 --> 00:01:06,479
very important to understand for example

00:01:03,170 --> 00:01:09,110
what's the most important predictor of

00:01:06,479 --> 00:01:12,180
success in software engineering

00:01:09,110 --> 00:01:14,580
discipline this is a very important

00:01:12,180 --> 00:01:20,340
question to answer and the idiot in

00:01:14,580 --> 00:01:24,090
error has the right answers but very in

00:01:20,340 --> 00:01:27,659
the interval time thus Connors already

00:01:24,090 --> 00:01:32,100
claimed why I will put a lot have their

00:01:27,659 --> 00:01:35,520
records because we don't allow the rest

00:01:32,100 --> 00:01:39,950
data center we could a lot compared the

00:01:35,520 --> 00:01:45,240
projects in a very bigger data center

00:01:39,950 --> 00:01:48,060
also some fundamental questions not only

00:01:45,240 --> 00:01:53,490
just a software development maybe

00:01:48,060 --> 00:01:56,610
organization maybe a society sighs

00:01:53,490 --> 00:02:00,450
something that can be answered only by

00:01:56,610 --> 00:02:04,530
considering the entire universe of a

00:02:00,450 --> 00:02:08,099
publican available source code and its

00:02:04,530 --> 00:02:09,600
history okay I think that we are trying

00:02:08,099 --> 00:02:12,810
to build this

00:02:09,600 --> 00:02:19,890
universal beta bypassed rate based on

00:02:12,810 --> 00:02:23,810
these ideas okay now that's what we have

00:02:19,890 --> 00:02:30,060
in the data repository we keep trying

00:02:23,810 --> 00:02:32,490
all kinds of data nowadays are this data

00:02:30,060 --> 00:02:36,210
including washing control issue fighting

00:02:32,490 --> 00:02:40,410
email and for example with media all

00:02:36,210 --> 00:02:44,160
kinds of information and here is just an

00:02:40,410 --> 00:02:52,650
example of washing your face from dinner

00:02:44,160 --> 00:02:57,300
and some communities under projects

00:02:52,650 --> 00:03:03,240
actually it's very difficult to get the

00:02:57,300 --> 00:03:05,430
data we try to keep extracting data for

00:03:03,240 --> 00:03:12,680
example from cologne we are always

00:03:05,430 --> 00:03:17,160
banned by the administrators the

00:03:12,680 --> 00:03:21,840
physical facilities we have maybe we

00:03:17,160 --> 00:03:25,710
could get better in the future and for

00:03:21,840 --> 00:03:30,510
the data this is very basic levels we

00:03:25,710 --> 00:03:35,040
have if we extracted data wait store

00:03:30,510 --> 00:03:40,410
everything the cold ground is level zero

00:03:35,040 --> 00:03:45,990
that's rotting whatever it is restoring

00:03:40,410 --> 00:03:50,220
and for the narrow one without a way we

00:03:45,990 --> 00:03:53,130
do some we do some normalization and we

00:03:50,220 --> 00:03:57,510
have for example level 2 to level

00:03:53,130 --> 00:04:00,930
whatever and the time that depends on

00:03:57,510 --> 00:04:08,490
what our requirements are to do our

00:04:00,930 --> 00:04:11,550
research or analysis first all those

00:04:08,490 --> 00:04:16,799
data we have with some interesting

00:04:11,550 --> 00:04:18,880
research results for example our rest

00:04:16,799 --> 00:04:24,070
early and we're interested

00:04:18,880 --> 00:04:28,900
to investigate how people are what says

00:04:24,070 --> 00:04:32,980
how developers who nahncy grow ok this

00:04:28,900 --> 00:04:37,630
is the developer vegetables these two

00:04:32,980 --> 00:04:41,320
are measure the developers productivity

00:04:37,630 --> 00:04:46,680
based on different mattress for example

00:04:41,320 --> 00:04:49,840
this as the x-axis is the month y axis

00:04:46,680 --> 00:04:55,360
represent in this chart number of

00:04:49,840 --> 00:05:00,130
modifications every developer mix in one

00:04:55,360 --> 00:05:03,670
month as we could see this this

00:05:00,130 --> 00:05:09,330
experiment was made in a very big

00:05:03,670 --> 00:05:13,710
project in Alaia Alaia that our

00:05:09,330 --> 00:05:18,190
telephone company america under advocacy

00:05:13,710 --> 00:05:22,660
almost after 18 months the developers

00:05:18,190 --> 00:05:25,870
average productivity plato's but if i

00:05:22,660 --> 00:05:29,740
measure their productivity with

00:05:25,870 --> 00:05:33,670
something else quick difficult and

00:05:29,740 --> 00:05:38,440
centrality we could see the productivity

00:05:33,670 --> 00:05:44,350
keeps increasing over three years and at

00:05:38,440 --> 00:05:47,560
least this dashboard come from the two

00:05:44,350 --> 00:05:51,360
projects of chinese civic company and

00:05:47,560 --> 00:05:54,100
the different different dimensions

00:05:51,360 --> 00:05:59,290
represent different mattress of

00:05:54,100 --> 00:06:02,560
productive under this crap is based on

00:05:59,290 --> 00:06:05,950
the evaluation of the managers either

00:06:02,560 --> 00:06:09,420
way cooler anyway and you're interested

00:06:05,950 --> 00:06:13,660
there are many more details could become

00:06:09,420 --> 00:06:18,280
this is the most productive person based

00:06:13,660 --> 00:06:22,620
on the managers comments under the

00:06:18,280 --> 00:06:22,620
smallest one other

00:06:22,740 --> 00:06:30,520
least productive tomorrow and there are

00:06:26,289 --> 00:06:33,900
some other research we have in what all

00:06:30,520 --> 00:06:38,729
for example code is the molarity search

00:06:33,900 --> 00:06:46,030
wave assume we have a soup big code

00:06:38,729 --> 00:06:51,550
repository if so ah could we find a DG

00:06:46,030 --> 00:06:54,759
Ginny allergy of every piece of code I

00:06:51,550 --> 00:06:59,199
think that's a very interesting idea I

00:06:54,759 --> 00:07:03,190
mean if we could be on a super family

00:06:59,199 --> 00:07:06,310
tree for all the open source code me

00:07:03,190 --> 00:07:09,610
that's it's just an amazing in summary

00:07:06,310 --> 00:07:13,060
and just introduced two pieces of work

00:07:09,610 --> 00:07:16,569
we we have been working on recently one

00:07:13,060 --> 00:07:19,150
is there to a visualization tool or for

00:07:16,569 --> 00:07:22,360
the issue with illusion practices it's

00:07:19,150 --> 00:07:25,979
based on issue tracking data second it's

00:07:22,360 --> 00:07:29,469
a cloud for open source software

00:07:25,979 --> 00:07:33,550
development practices based on all kinds

00:07:29,469 --> 00:07:35,969
of software development data ok thanks

00:07:33,550 --> 00:07:35,969

YouTube URL: https://www.youtube.com/watch?v=Y1Qi7JqWuec


