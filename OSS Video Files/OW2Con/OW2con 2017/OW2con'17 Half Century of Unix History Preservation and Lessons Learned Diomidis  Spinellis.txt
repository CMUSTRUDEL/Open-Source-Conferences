Title: OW2con'17 Half Century of Unix History Preservation and Lessons Learned Diomidis  Spinellis
Publication date: 2017-06-29
Playlist: OW2con 2017
Description: 
	
Captions: 
	00:00:01,960 --> 00:00:09,269
[Music]

00:00:05,180 --> 00:00:12,719
Joba disabilities thank you very much

00:00:09,269 --> 00:00:15,020
for the introduction and the invitation

00:00:12,719 --> 00:00:17,640
to be here I'm quite happy to be here

00:00:15,020 --> 00:00:20,970
what is happen central this is Wikimedia

00:00:17,640 --> 00:00:23,550
view of half a century from the 1970s

00:00:20,970 --> 00:00:26,880
until today UNIX has had a similar

00:00:23,550 --> 00:00:30,240
history behind it so it's becoming 50

00:00:26,880 --> 00:00:32,099
years in a couple of years it has seen a

00:00:30,240 --> 00:00:35,700
similar rate of change such as the one

00:00:32,099 --> 00:00:37,890
we saw so what I will present here is an

00:00:35,700 --> 00:00:40,020
overview of the UNIX history in the way

00:00:37,890 --> 00:00:42,030
I have come to realize it by building a

00:00:40,020 --> 00:00:45,149
repository which you can download from

00:00:42,030 --> 00:00:46,680
github of the complete artifacts that

00:00:45,149 --> 00:00:49,350
you have up to now complete timeline

00:00:46,680 --> 00:00:51,480
from the inception of UNIX until today

00:00:49,350 --> 00:00:53,190
so we'll describe what you will find the

00:00:51,480 --> 00:00:55,140
repository how it was created and

00:00:53,190 --> 00:00:58,320
lessons that can be drawn from it in

00:00:55,140 --> 00:01:01,020
this in what happens to how programming

00:00:58,320 --> 00:01:04,640
practices evolve and how architecture of

00:01:01,020 --> 00:01:08,100
the system has evolved over the years

00:01:04,640 --> 00:01:09,450
UNIX a started its life with Thompson

00:01:08,100 --> 00:01:11,369
and Ritchie so you see them here

00:01:09,450 --> 00:01:14,970
programming on a PDP 11 through a

00:01:11,369 --> 00:01:17,580
teletypewriter in the 1970s and then

00:01:14,970 --> 00:01:19,830
going to Berkeley you see here bill

00:01:17,580 --> 00:01:23,310
joined his computer seized research

00:01:19,830 --> 00:01:25,460
group at the Berkeley and people

00:01:23,310 --> 00:01:29,100
programming on modern open-source

00:01:25,460 --> 00:01:32,009
communities and this life started at the

00:01:29,100 --> 00:01:35,189
Bell Laboratories a famous place of

00:01:32,009 --> 00:01:37,979
where many fantastic inventions happened

00:01:35,189 --> 00:01:40,680
including eight Nobel prizes three

00:01:37,979 --> 00:01:42,770
curing Awards then inventions such as

00:01:40,680 --> 00:01:45,630
the astronomy and cosmic radiation

00:01:42,770 --> 00:01:47,369
undersea cables the transistor the

00:01:45,630 --> 00:01:50,310
charge-coupled devices that we have all

00:01:47,369 --> 00:01:53,729
in our phones and cameras the theory of

00:01:50,310 --> 00:01:56,909
communication lasers solar cell panels

00:01:53,729 --> 00:02:00,149
the c c++ and oak programming languages

00:01:56,909 --> 00:02:02,460
fiber optics CDMA and CDMA multiplexing

00:02:00,149 --> 00:02:05,579
so all those wonderful things came out

00:02:02,460 --> 00:02:07,590
of Bell Labs and of course UNIX UNIX

00:02:05,579 --> 00:02:10,250
started this life through failure what

00:02:07,590 --> 00:02:11,780
was this failure in the 1960s the

00:02:10,250 --> 00:02:13,140
Massachusetts Institute of Technology

00:02:11,780 --> 00:02:15,240
eight

00:02:13,140 --> 00:02:16,920
the Bell Labs and General Electric's

00:02:15,240 --> 00:02:19,260
banded together to create a wonderful

00:02:16,920 --> 00:02:21,930
operating system with the name of multix

00:02:19,260 --> 00:02:24,630
it was very influential but

00:02:21,930 --> 00:02:26,610
over-ambitious so it didn't was not

00:02:24,630 --> 00:02:28,830
progressing as it should have been it

00:02:26,610 --> 00:02:31,620
was muddled its complexity so at some

00:02:28,830 --> 00:02:34,410
point AT&T Bell Labs decided to move

00:02:31,620 --> 00:02:36,240
away from the project so Ken Thompson

00:02:34,410 --> 00:02:38,160
Dennis Ritchie that McCullough enjoy a

00:02:36,240 --> 00:02:39,840
sauna found themselves out of the

00:02:38,160 --> 00:02:42,060
project without a way to do operating

00:02:39,840 --> 00:02:44,760
system research and they went on to

00:02:42,060 --> 00:02:47,250
develop and unnamed at a time say

00:02:44,760 --> 00:02:49,110
operating system on a pdp-7 a very

00:02:47,250 --> 00:02:52,530
primitive computer compared to the

00:02:49,110 --> 00:02:54,900
general electric one it had some key

00:02:52,530 --> 00:02:57,239
ideas in it that they found to be quite

00:02:54,900 --> 00:03:00,390
powerful so they went often created a

00:02:57,239 --> 00:03:02,550
funding proposal for the pdp-11 computer

00:03:00,390 --> 00:03:04,380
which was more powerful and the

00:03:02,550 --> 00:03:05,880
justification for that proposal was

00:03:04,380 --> 00:03:07,560
actually to create a word processing

00:03:05,880 --> 00:03:09,180
system Bell Labs was dealing with

00:03:07,560 --> 00:03:10,980
patents so they said why not we'll build

00:03:09,180 --> 00:03:14,220
you a system to write the patents more

00:03:10,980 --> 00:03:16,230
efficiently the history of what followed

00:03:14,220 --> 00:03:20,100
was quite long and the complex as you

00:03:16,230 --> 00:03:23,970
can see from this tree the reason UNIX

00:03:20,100 --> 00:03:26,370
is important is for several key reasons

00:03:23,970 --> 00:03:27,900
first of all its exemplar design the

00:03:26,370 --> 00:03:30,930
technical contributions I will explain

00:03:27,900 --> 00:03:33,030
that its impact it development model

00:03:30,930 --> 00:03:35,370
we'll go more into that it's widespread

00:03:33,030 --> 00:03:37,440
use probably most of the devices here

00:03:35,370 --> 00:03:41,040
running some fourth sort of either UNIX

00:03:37,440 --> 00:03:42,690
or system based on its ideas and in the

00:03:41,040 --> 00:03:45,420
words of Doug McKinlay it's unusual

00:03:42,690 --> 00:03:47,610
simplicity power and elegance I found

00:03:45,420 --> 00:03:50,370
these things evident even at the first

00:03:47,610 --> 00:03:52,799
pdp-7 incarnation of that unnamed system

00:03:50,370 --> 00:03:56,280
as a recognition for these achievements

00:03:52,799 --> 00:03:57,870
the two developers the key developers

00:03:56,280 --> 00:03:59,640
behind it have received the president's

00:03:57,870 --> 00:04:02,310
medal quite an honor in the United

00:03:59,640 --> 00:04:05,190
States in terms of system technology

00:04:02,310 --> 00:04:06,920
UNIX has popularized or brought to us

00:04:05,190 --> 00:04:09,540
things like a hierarchical file system

00:04:06,920 --> 00:04:11,850
for example IBM system at the time gave

00:04:09,540 --> 00:04:14,360
you several disks virtual disk

00:04:11,850 --> 00:04:16,410
oricon store things not a hierarchy

00:04:14,360 --> 00:04:19,049
compatible input/output for files

00:04:16,410 --> 00:04:21,419
devices nowadays networking and it will

00:04:19,049 --> 00:04:23,700
process io the pipes and filters

00:04:21,419 --> 00:04:25,890
architecture virtual file systems and

00:04:23,700 --> 00:04:26,580
the shell as a user selectable process

00:04:25,890 --> 00:04:28,500
not something the

00:04:26,580 --> 00:04:30,389
given to you by the operating system but

00:04:28,500 --> 00:04:33,659
something that you can build and select

00:04:30,389 --> 00:04:36,599
a desperate innovation also a number of

00:04:33,659 --> 00:04:38,909
other technologies were part of a unit

00:04:36,599 --> 00:04:41,430
and popularized by eight such as C and

00:04:38,909 --> 00:04:44,189
C++ the parson lexical analyzer

00:04:41,430 --> 00:04:45,900
generators legs and yak software

00:04:44,189 --> 00:04:49,590
development environments document

00:04:45,900 --> 00:04:51,719
preparation tools scripting languages

00:04:49,590 --> 00:04:53,939
tcp/ip networking the stack that was

00:04:51,719 --> 00:04:57,150
developed at Berkeley is used many

00:04:53,939 --> 00:05:01,469
devices even today and configuration

00:04:57,150 --> 00:05:03,840
management systems how did I get hold of

00:05:01,469 --> 00:05:06,120
those ancient source code in a way that

00:05:03,840 --> 00:05:08,639
could be put into github keep in mind

00:05:06,120 --> 00:05:11,400
that AT&T wrote at the beginning was not

00:05:08,639 --> 00:05:14,849
able to sell its technology because of a

00:05:11,400 --> 00:05:16,919
consent degree that limited it's a field

00:05:14,849 --> 00:05:19,740
of operation to telephony and not say

00:05:16,919 --> 00:05:21,629
computer technology and it still

00:05:19,740 --> 00:05:25,680
maintained copyright over all the early

00:05:21,629 --> 00:05:27,900
editions thankfully in early in the

00:05:25,680 --> 00:05:29,669
2000s caldera who at the time were

00:05:27,900 --> 00:05:33,060
owners of Intel the intellectual

00:05:29,669 --> 00:05:35,639
property behind UNIX released this

00:05:33,060 --> 00:05:37,349
letter that you see well it said that if

00:05:35,639 --> 00:05:40,129
that we give you a permission to use

00:05:37,349 --> 00:05:42,839
this code for non commercial properties

00:05:40,129 --> 00:05:46,169
processes it's not open source but it's

00:05:42,839 --> 00:05:49,259
close enough to be able to put it in l+

00:05:46,169 --> 00:05:51,120
and uploaded to github based on the

00:05:49,259 --> 00:05:53,129
availability of that key material

00:05:51,120 --> 00:05:55,229
decided will be quite cool to create a

00:05:53,129 --> 00:05:58,889
repository recording all the history and

00:05:55,229 --> 00:06:00,659
evolution of Unix so my motivation for

00:05:58,889 --> 00:06:03,300
that was to explore programming style I

00:06:00,659 --> 00:06:05,550
will get into that later consolidate

00:06:03,300 --> 00:06:08,729
digital artifacts of historical

00:06:05,550 --> 00:06:10,469
importance collecting it all in record

00:06:08,729 --> 00:06:12,990
history that's fading away so the people

00:06:10,469 --> 00:06:15,839
behind that are getting older some of

00:06:12,990 --> 00:06:18,180
them are unfortunately no longer with us

00:06:15,839 --> 00:06:19,949
and also provided data set anyone can

00:06:18,180 --> 00:06:23,789
use for digital archaeology and

00:06:19,949 --> 00:06:26,550
repository mining so things you can take

00:06:23,789 --> 00:06:29,069
away is this repository it's 1.1

00:06:26,550 --> 00:06:33,839
gigabyte recording a complete lifeline

00:06:29,069 --> 00:06:35,849
of UNIX from 1970 until today it's a the

00:06:33,839 --> 00:06:38,039
document contains also documentation and

00:06:35,849 --> 00:06:39,920
authorship details for parts that were

00:06:38,039 --> 00:06:41,810
not recorded at the time but

00:06:39,920 --> 00:06:44,150
I was able to deduce by reading manual

00:06:41,810 --> 00:06:45,560
pages documentation and so on it's an

00:06:44,150 --> 00:06:47,300
open source project so if you want to

00:06:45,560 --> 00:06:49,160
contribute to how the repository is

00:06:47,300 --> 00:06:51,920
created you can go to the corresponding

00:06:49,160 --> 00:06:55,250
project and contribute changes and the

00:06:51,920 --> 00:06:57,560
additions some techniques on how you can

00:06:55,250 --> 00:06:59,480
use tools for importing get snapshots

00:06:57,560 --> 00:07:01,220
maybe you have old parts in the

00:06:59,480 --> 00:07:03,470
organizational source code that you want

00:07:01,220 --> 00:07:06,260
to bring in to get in there perhaps

00:07:03,470 --> 00:07:08,630
github and also lessons and ideas for

00:07:06,260 --> 00:07:10,610
empirical studies so let me give you

00:07:08,630 --> 00:07:15,680
some numbers the repository starts its

00:07:10,610 --> 00:07:19,820
life in June 1970 with just 43 files and

00:07:15,680 --> 00:07:22,850
11,000 lines and then ends at several

00:07:19,820 --> 00:07:25,940
million lines and seven million lines

00:07:22,850 --> 00:07:30,110
with a number almost half a million

00:07:25,940 --> 00:07:32,030
commits I have on the other column what

00:07:30,110 --> 00:07:34,100
could be the history of Linux in one

00:07:32,030 --> 00:07:36,380
repository there are more mergers for

00:07:34,100 --> 00:07:39,500
example and the more authors but they

00:07:36,380 --> 00:07:43,580
are quite more days of activity in the

00:07:39,500 --> 00:07:45,680
history of Unix this repository contains

00:07:43,580 --> 00:07:48,500
the research edition of UNIX or things

00:07:45,680 --> 00:07:50,270
that came out of Bell Labs pdp-7 the

00:07:48,500 --> 00:07:52,820
first edition all editions up to the

00:07:50,270 --> 00:07:56,060
seventh edition a port that was made to

00:07:52,820 --> 00:07:58,960
the fax computer 32 B the difference

00:07:56,060 --> 00:08:00,950
that came out of Berkeley 386bsd

00:07:58,960 --> 00:08:03,980
traditions that were developed by

00:08:00,950 --> 00:08:06,860
builders inland jollies then FreeBSD

00:08:03,980 --> 00:08:08,570
from 1.0 until today and for all those

00:08:06,860 --> 00:08:11,900
who have tags you have the contributors

00:08:08,570 --> 00:08:14,930
you have branches and mergers this is a

00:08:11,900 --> 00:08:17,150
tree of what you get so you see a linear

00:08:14,930 --> 00:08:19,790
sequence here on the research of dishes

00:08:17,150 --> 00:08:21,530
things that came out of Bell Labs at

00:08:19,790 --> 00:08:24,470
some point we start to get Berkeley

00:08:21,530 --> 00:08:29,930
releases you see here the first match vs

00:08:24,470 --> 00:08:32,360
d3 the Berkeley distribution 3.0 a hard

00:08:29,930 --> 00:08:35,180
part from BSD two and also from UNIX 32

00:08:32,360 --> 00:08:37,760
fee and then a series of berkeley

00:08:35,180 --> 00:08:39,710
religion releases these are all taken

00:08:37,760 --> 00:08:42,110
out of from snapshots that were not

00:08:39,710 --> 00:08:44,210
using at the beginning any source

00:08:42,110 --> 00:08:47,180
control system but at berkeley they

00:08:44,210 --> 00:08:49,940
started using an old source control

00:08:47,180 --> 00:08:52,790
system called sec s and from that point

00:08:49,940 --> 00:08:55,730
we have also direct commits in her

00:08:52,790 --> 00:08:58,580
from my CCS then our paths that are open

00:08:55,730 --> 00:09:00,740
source including create six BSD the net

00:08:58,580 --> 00:09:04,640
network releases that came out of

00:09:00,740 --> 00:09:09,020
Berkeley and then FreeBSD fluid CBS and

00:09:04,640 --> 00:09:12,170
modern get mirror so what are these

00:09:09,020 --> 00:09:13,820
research additions so the first edition

00:09:12,170 --> 00:09:16,550
that is available that PDB 7 edition

00:09:13,820 --> 00:09:18,530
survived just as a printed kernel of

00:09:16,550 --> 00:09:20,090
print out of the kernel and some

00:09:18,530 --> 00:09:23,000
utilities Lister computer it was

00:09:20,090 --> 00:09:25,700
developed on and this is what survived

00:09:23,000 --> 00:09:28,010
it's not available in digital form but

00:09:25,700 --> 00:09:29,990
someone in an attic found some printouts

00:09:28,010 --> 00:09:32,840
you see they're badly printed with

00:09:29,990 --> 00:09:35,000
scribbled notes on them probably by Ken

00:09:32,840 --> 00:09:38,930
Thompson or Dennis Ritchie and a group

00:09:35,000 --> 00:09:41,710
of volunteers led by a 1/2 min Australia

00:09:38,930 --> 00:09:44,660
worked from around the world worked and

00:09:41,710 --> 00:09:46,430
typed them all in and then you know to

00:09:44,660 --> 00:09:49,730
prove that these were indeed correct

00:09:46,430 --> 00:09:52,370
they run the result on a PDP 7 emulator

00:09:49,730 --> 00:09:57,020
and amazingly the thing ran booted and

00:09:52,370 --> 00:09:58,520
gave them a prompt the first edition

00:09:57,020 --> 00:10:01,430
that's the first formal edition of

00:09:58,520 --> 00:10:02,450
something that was named a UNIX is a PDP

00:10:01,430 --> 00:10:05,840
00:10:02,450 --> 00:10:08,930
calendar pp11 processor machine such as

00:10:05,840 --> 00:10:11,120
this one again it has not survived in

00:10:08,930 --> 00:10:13,190
digital form this is a lesson for all of

00:10:11,120 --> 00:10:16,370
us has survived in a slightly better

00:10:13,190 --> 00:10:19,580
condition as a attachment to a memo that

00:10:16,370 --> 00:10:21,560
was distributed at the Bell Labs in 1972

00:10:19,580 --> 00:10:24,710
you see here the formal formalities of

00:10:21,560 --> 00:10:26,300
a large research laboratory you have

00:10:24,710 --> 00:10:28,940
things like that here is the code that

00:10:26,300 --> 00:10:31,910
initializes the I know the information

00:10:28,940 --> 00:10:33,710
nodes for special files these are

00:10:31,910 --> 00:10:36,170
definitions for the virus devices so you

00:10:33,710 --> 00:10:41,060
see things like a punch tape and the

00:10:36,170 --> 00:10:42,800
deck tape and things like that and the

00:10:41,060 --> 00:10:43,940
also documentation that was quite

00:10:42,800 --> 00:10:45,290
important from the beginning this

00:10:43,940 --> 00:10:49,870
handwritten but you see here

00:10:45,290 --> 00:10:49,870
documentation for the fork system call

00:10:49,900 --> 00:10:54,260
the second edition has survived in the

00:10:52,280 --> 00:10:56,330
worst form in digital form but in the

00:10:54,260 --> 00:10:58,760
worst form only a few fragments on a

00:10:56,330 --> 00:11:00,800
disk without a metadata so again

00:10:58,760 --> 00:11:02,180
volunteers work together in order to

00:11:00,800 --> 00:11:04,460
piece them together as we piece together

00:11:02,180 --> 00:11:06,499
DNA sequences we don't know which bit

00:11:04,460 --> 00:11:08,509
belong to which file so it's

00:11:06,499 --> 00:11:12,199
I too get how them fit together and how

00:11:08,509 --> 00:11:14,299
they could be spliced together we also

00:11:12,199 --> 00:11:17,499
have the manual let me go here through

00:11:14,299 --> 00:11:20,119
the table of contents you see the first

00:11:17,499 --> 00:11:22,459
section of the manual has all the

00:11:20,119 --> 00:11:24,019
command user command and the commands

00:11:22,459 --> 00:11:25,549
that can be run by users and you see

00:11:24,019 --> 00:11:27,559
there are many of them that we still

00:11:25,549 --> 00:11:32,029
have planned today such as echoing date

00:11:27,559 --> 00:11:34,579
and cut and the AC compiler and so on we

00:11:32,029 --> 00:11:36,979
have the system calls and quite a number

00:11:34,579 --> 00:11:38,899
of them have survived until today we

00:11:36,979 --> 00:11:41,959
have subroutines the beginnings of a

00:11:38,899 --> 00:11:43,999
library special files file formats and

00:11:41,959 --> 00:11:46,819
also something very interesting user

00:11:43,999 --> 00:11:50,049
maintained programs this is the stuff

00:11:46,819 --> 00:11:52,639
that ended up in the slash USR directory

00:11:50,049 --> 00:11:55,129
because as I said people there were

00:11:52,639 --> 00:11:56,479
quite quite strict about documentation

00:11:55,129 --> 00:11:58,489
now to force people to write

00:11:56,479 --> 00:12:00,049
documentation for the files that dump in

00:11:58,489 --> 00:12:02,119
slash USR bin

00:12:00,049 --> 00:12:04,339
they created a small cron script a

00:12:02,119 --> 00:12:06,259
script that run periodically that went

00:12:04,339 --> 00:12:08,239
and removed all commands for which there

00:12:06,259 --> 00:12:10,489
was no documentation so you see a

00:12:08,239 --> 00:12:14,449
primitive form of a social control and

00:12:10,489 --> 00:12:16,369
various miscellaneous files then we have

00:12:14,449 --> 00:12:17,779
the third edition the fourth and the

00:12:16,369 --> 00:12:20,089
fifth and third the significant because

00:12:17,779 --> 00:12:22,519
it was mainly written in C the fourth

00:12:20,089 --> 00:12:25,159
has survived only as the kill of manual

00:12:22,519 --> 00:12:27,379
source code for the fifth we have the

00:12:25,159 --> 00:12:29,859
code but not a manual source and the

00:12:27,379 --> 00:12:33,649
sixth is complete because important was

00:12:29,859 --> 00:12:35,720
they used as a lecture notes by John

00:12:33,649 --> 00:12:38,359
Lyons in Australia to create a course

00:12:35,720 --> 00:12:39,889
based on the UNIX kernel source code

00:12:38,359 --> 00:12:42,559
this was illegal for a long period of

00:12:39,889 --> 00:12:45,319
time so it was widely photocopied as a

00:12:42,559 --> 00:12:48,109
sense that document then it went to

00:12:45,319 --> 00:12:50,949
Berkeley and a number of releases came

00:12:48,109 --> 00:12:54,409
out from there and there was a port

00:12:50,949 --> 00:12:57,049
before Berkeley to the VAX 32-bit

00:12:54,409 --> 00:12:58,819
architecture and the Berkeley snapshots

00:12:57,049 --> 00:13:01,849
are the things such as real virtual

00:12:58,819 --> 00:13:05,539
memory refined from DARPA

00:13:01,849 --> 00:13:08,029
email and signal handling tcp/ip

00:13:05,539 --> 00:13:11,839
networking very important performance

00:13:08,029 --> 00:13:13,399
improvements the name demon and at some

00:13:11,839 --> 00:13:14,839
point people at Berkeley realized that

00:13:13,399 --> 00:13:16,519
had so much code that they had written

00:13:14,839 --> 00:13:18,289
there and the government contracts which

00:13:16,519 --> 00:13:20,270
by law in the United States are in the

00:13:18,289 --> 00:13:22,280
public domain that the

00:13:20,270 --> 00:13:24,980
distribute quite a substantial part

00:13:22,280 --> 00:13:29,270
without AT&T licensing so these were the

00:13:24,980 --> 00:13:31,580
so-called net distributions to people

00:13:29,270 --> 00:13:33,860
then Bill and Linda Hollett decided to

00:13:31,580 --> 00:13:35,450
get those parts added things that were

00:13:33,860 --> 00:13:39,080
missing and they created the system that

00:13:35,450 --> 00:13:42,620
could run on the 386 computer the 386bsd

00:13:39,080 --> 00:13:44,930
as it was called they weren't so good as

00:13:42,620 --> 00:13:47,600
Linus Torvalds in creating a community

00:13:44,930 --> 00:13:50,120
so people started creating patches for

00:13:47,600 --> 00:13:51,770
those releases because they will at some

00:13:50,120 --> 00:13:54,110
point dragging their feet in creating

00:13:51,770 --> 00:13:57,110
the new releases and this at some point

00:13:54,110 --> 00:14:01,550
became FreeBSD and other BSD systems

00:13:57,110 --> 00:14:02,990
such as NetBSD and OpenBSD so you can

00:14:01,550 --> 00:14:06,080
see here a timeline of what's in the

00:14:02,990 --> 00:14:08,240
repository all these things are created

00:14:06,080 --> 00:14:11,000
from snapshots we don't have specific

00:14:08,240 --> 00:14:13,910
commits at Berkeley I have interspersed

00:14:11,000 --> 00:14:16,370
the CCS commit with the snapshots and

00:14:13,910 --> 00:14:20,120
from here on we have actual commits from

00:14:16,370 --> 00:14:22,370
the version control system used this is

00:14:20,120 --> 00:14:24,110
the increase in the source code the size

00:14:22,370 --> 00:14:26,720
of the kernel so you see it has

00:14:24,110 --> 00:14:31,310
increased 1,000 fold from the 1970s

00:14:26,720 --> 00:14:35,480
until today from less than 10,000 lines

00:14:31,310 --> 00:14:37,550
to a few million lines today could we

00:14:35,480 --> 00:14:39,410
find the repository are the dates of

00:14:37,550 --> 00:14:42,530
what has been released by authors and

00:14:39,410 --> 00:14:43,940
also the parents of each commit let me

00:14:42,530 --> 00:14:45,860
show you some committee note to give you

00:14:43,940 --> 00:14:47,840
an idea these were commits that were

00:14:45,860 --> 00:14:50,030
written in a teletypewriter things that

00:14:47,840 --> 00:14:51,860
were used to send telegrams because they

00:14:50,030 --> 00:14:53,930
were digital we were also used to help

00:14:51,860 --> 00:14:56,210
hook up computers as terminals so you

00:14:53,930 --> 00:14:58,520
typed here and you saw the result here

00:14:56,210 --> 00:15:01,670
it only supported uppercase characters

00:14:58,520 --> 00:15:04,490
so lower case was uppercase and real a

00:15:01,670 --> 00:15:06,410
pre case was preceded by a backslash so

00:15:04,490 --> 00:15:08,090
you can see here can Thompson doing some

00:15:06,410 --> 00:15:10,040
work on the sleep routine in the kernel

00:15:08,090 --> 00:15:12,260
we know it can Thompson because it's in

00:15:10,040 --> 00:15:15,020
the Ken directory then is Richard doing

00:15:12,260 --> 00:15:17,240
work on the Cale device driver again

00:15:15,020 --> 00:15:20,540
it's the Ammar so we know it's Dennis

00:15:17,240 --> 00:15:22,640
Ritchie and a brand can be working on

00:15:20,540 --> 00:15:23,840
rod for again we know that this is the

00:15:22,640 --> 00:15:26,300
author of read fault that's why I

00:15:23,840 --> 00:15:30,350
treated this to him and Steven born of

00:15:26,300 --> 00:15:32,120
course working on the Bourne shell later

00:15:30,350 --> 00:15:34,130
commits that happened to Berkley use the

00:15:32,120 --> 00:15:37,639
more advanced terminal the famouser

00:15:34,130 --> 00:15:40,790
with e100 and you can see here will joy

00:15:37,639 --> 00:15:44,089
the founder of sun microsystems working

00:15:40,790 --> 00:15:45,319
on some networking stuff and also eric

00:15:44,089 --> 00:15:48,110
schmidt the executive chairman of

00:15:45,319 --> 00:15:50,839
alphabet a Google's company working on

00:15:48,110 --> 00:15:54,019
the net CP command as students of course

00:15:50,839 --> 00:15:59,000
at that time also varying from famous or

00:15:54,019 --> 00:16:01,130
infamous committees this by you see here

00:15:59,000 --> 00:16:04,730
eric allman working on send mail is

00:16:01,130 --> 00:16:07,759
adding the debug command which was used

00:16:04,730 --> 00:16:11,329
a few years later by the first internet

00:16:07,759 --> 00:16:12,889
world so it was it would took advantage

00:16:11,329 --> 00:16:16,670
of this command not to spread throughout

00:16:12,889 --> 00:16:18,290
the internet here you see that the deep

00:16:16,670 --> 00:16:20,329
blame works correctly so it can

00:16:18,290 --> 00:16:21,740
attribute parts of the code in div in

00:16:20,329 --> 00:16:24,380
the same files with different also

00:16:21,740 --> 00:16:29,029
spanning more than ten years in time in

00:16:24,380 --> 00:16:31,250
1989 to 79 1975 people often ask me what

00:16:29,029 --> 00:16:34,190
is the oldest part of the code that has

00:16:31,250 --> 00:16:36,079
survived until today a run get blame

00:16:34,190 --> 00:16:37,910
takes long time more than three days on

00:16:36,079 --> 00:16:40,430
all sides of all the system following

00:16:37,910 --> 00:16:44,149
back patterns and so on and this is the

00:16:40,430 --> 00:16:46,279
part i found in the modern freebsd time

00:16:44,149 --> 00:16:48,550
zone dot c file there are still parts

00:16:46,279 --> 00:16:51,500
that were written by dennis ritchie in

00:16:48,550 --> 00:16:53,149
1979 so I think that's quite impressive

00:16:51,500 --> 00:16:56,360
that if you do get playing on that file

00:16:53,149 --> 00:16:59,509
you can see that you see here how cold

00:16:56,360 --> 00:17:03,050
evolves and is added between various

00:16:59,509 --> 00:17:06,409
releases to create that that took things

00:17:03,050 --> 00:17:08,600
like snapshots from the web from CDs

00:17:06,409 --> 00:17:11,270
version control systems I created a

00:17:08,600 --> 00:17:13,549
build script and I also added author

00:17:11,270 --> 00:17:16,159
into all the author names and even their

00:17:13,549 --> 00:17:18,380
emails so if you look at the github you

00:17:16,159 --> 00:17:21,079
can see sometimes the names of the of

00:17:18,380 --> 00:17:23,780
the authors posted correctly created in

00:17:21,079 --> 00:17:27,199
memoriam account from there for the

00:17:23,780 --> 00:17:28,880
latest Richie and Jeff asana Ken

00:17:27,199 --> 00:17:30,500
Thompson actually still active in has a

00:17:28,880 --> 00:17:33,350
github account and he was kind enough to

00:17:30,500 --> 00:17:34,760
match his then email address to his

00:17:33,350 --> 00:17:38,960
current account so you can see these

00:17:34,760 --> 00:17:41,169
commits here the import creates a

00:17:38,960 --> 00:17:44,809
so-called get fast import file that

00:17:41,169 --> 00:17:46,490
imports all the files based on this I

00:17:44,809 --> 00:17:48,110
thought what I can do for research I

00:17:46,490 --> 00:17:50,210
have some ideas here

00:17:48,110 --> 00:17:53,179
that can be done so study evolution or

00:17:50,210 --> 00:17:56,020
the organizational culture or her

00:17:53,179 --> 00:18:00,650
program individual programmers work and

00:17:56,020 --> 00:18:02,630
so on when it I wanted to study and at

00:18:00,650 --> 00:18:05,510
the beginning was based on this code

00:18:02,630 --> 00:18:07,040
which is the source code of EDC when I

00:18:05,510 --> 00:18:09,020
first saw it I thought what's going on

00:18:07,040 --> 00:18:12,170
here this was programmed by my heroes

00:18:09,020 --> 00:18:14,210
and as you see there are tens of global

00:18:12,170 --> 00:18:17,540
variables no comments or just one

00:18:14,210 --> 00:18:19,700
comment editor and the hood something

00:18:17,540 --> 00:18:21,230
must be wrong here but then I reasoned

00:18:19,700 --> 00:18:23,150
that people were programming this device

00:18:21,230 --> 00:18:25,760
rather than on a GUI editor maybe it

00:18:23,150 --> 00:18:28,730
made sense to program with using short

00:18:25,760 --> 00:18:31,880
identifies so said that to look out on

00:18:28,730 --> 00:18:34,220
how modularity new language features the

00:18:31,880 --> 00:18:36,500
compilers code formatting practices in

00:18:34,220 --> 00:18:40,400
software complexity and code readability

00:18:36,500 --> 00:18:42,260
evolved through the years so looking at

00:18:40,400 --> 00:18:44,090
programming practices the evolution of

00:18:42,260 --> 00:18:47,240
programming practices by looking

00:18:44,090 --> 00:18:48,830
throughout their years I found that the

00:18:47,240 --> 00:18:51,530
file lengths has increased because

00:18:48,830 --> 00:18:53,929
perhaps you have faster terminals the

00:18:51,530 --> 00:18:57,559
functionality has also increased the

00:18:53,929 --> 00:18:59,090
line length has increased the identifier

00:18:57,559 --> 00:19:06,260
length has increased so we write better

00:18:59,090 --> 00:19:07,970
identifiers nowadays and also the mean

00:19:06,260 --> 00:19:10,309
function length has increased so if we

00:19:07,970 --> 00:19:12,559
look at the modularity we see that we

00:19:10,309 --> 00:19:15,290
nowadays use more static declarations

00:19:12,559 --> 00:19:17,120
the static declarations went up the

00:19:15,290 --> 00:19:19,970
number of include directives also went

00:19:17,120 --> 00:19:21,679
up to import library modules and if we

00:19:19,970 --> 00:19:24,080
look at programming languages we see

00:19:21,679 --> 00:19:27,830
that we nowadays use constant or

00:19:24,080 --> 00:19:29,390
enumeration declarations in inline went

00:19:27,830 --> 00:19:31,660
up and down because it was sort of

00:19:29,390 --> 00:19:34,280
supported by compilers and people used

00:19:31,660 --> 00:19:38,870
other keywords in order instead of

00:19:34,280 --> 00:19:42,140
inline and what was also used

00:19:38,870 --> 00:19:45,950
increasingly and volatile started being

00:19:42,140 --> 00:19:47,510
used when it became available regarding

00:19:45,950 --> 00:19:49,520
compiler technology something is very

00:19:47,510 --> 00:19:51,559
interesting at the beginning people use

00:19:49,520 --> 00:19:53,419
the register keyword node to say which

00:19:51,559 --> 00:19:55,880
variables winded up in registers

00:19:53,419 --> 00:19:58,309
nowadays as you see we no longer use

00:19:55,880 --> 00:20:00,559
that that's fallen it has been disused

00:19:58,309 --> 00:20:01,880
because we trust a compiler to do a much

00:20:00,559 --> 00:20:05,660
better job than

00:20:01,880 --> 00:20:08,390
human intuition regarding formatting

00:20:05,660 --> 00:20:09,650
practices I don't know if you and can

00:20:08,390 --> 00:20:17,570
guess what language this is

00:20:09,650 --> 00:20:19,370
any ideas it's the C programming

00:20:17,570 --> 00:20:20,900
language with some macros written by

00:20:19,370 --> 00:20:23,090
Stephen burns the source code of the

00:20:20,900 --> 00:20:24,650
bourne shell to make it look like Algol

00:20:23,090 --> 00:20:26,090
because Stephen Byrne was one of the

00:20:24,650 --> 00:20:27,530
people involved in the algal language

00:20:26,090 --> 00:20:30,380
and he liked this style of programming

00:20:27,530 --> 00:20:32,059
you still see that in the shell without

00:20:30,380 --> 00:20:33,770
this don't program in this way we don't

00:20:32,059 --> 00:20:35,840
invent our own macros to change C into

00:20:33,770 --> 00:20:39,110
something else I had the idea that we

00:20:35,840 --> 00:20:42,049
converge to a standard and indeed I have

00:20:39,110 --> 00:20:47,080
found that we have less inconsistency in

00:20:42,049 --> 00:20:49,100
how the way we program we have we're

00:20:47,080 --> 00:20:52,700
converging to the using of indentation

00:20:49,100 --> 00:20:54,559
spaces and so on regarding complexity I

00:20:52,700 --> 00:20:56,539
found the picture mixed so it goes up

00:20:54,559 --> 00:20:58,730
and down in terms of main lines per

00:20:56,539 --> 00:21:01,250
function in terms of statement nesting

00:20:58,730 --> 00:21:03,590
in terms of proposal conditionals and so

00:21:01,250 --> 00:21:05,809
on so people became cocky I think and

00:21:03,590 --> 00:21:09,770
some point fed said this is crazy we

00:21:05,809 --> 00:21:12,409
must limit ourselves and become more

00:21:09,770 --> 00:21:14,480
constrained it's something also similar

00:21:12,409 --> 00:21:17,179
to go to which was considered helpful in

00:21:14,480 --> 00:21:19,429
the 19 late 1960s and you see that

00:21:17,179 --> 00:21:21,500
became used less and less at some point

00:21:19,429 --> 00:21:23,419
people said okay it's not that but maybe

00:21:21,500 --> 00:21:26,929
you can use it in a few constrained

00:21:23,419 --> 00:21:29,179
words finally regarding readability we

00:21:26,929 --> 00:21:32,600
see that we the number of annotation

00:21:29,179 --> 00:21:34,460
spaces converges to 6 so something

00:21:32,600 --> 00:21:37,070
between eight and four statements per

00:21:34,460 --> 00:21:39,500
line decrease the comment character

00:21:37,070 --> 00:21:42,230
density increased but then fell again

00:21:39,500 --> 00:21:43,610
and so on if you look at professionalism

00:21:42,230 --> 00:21:46,460
I looked at various words that people

00:21:43,610 --> 00:21:50,450
use in source code perhaps in times of

00:21:46,460 --> 00:21:53,630
agony or frustration I hope we're not

00:21:50,450 --> 00:21:57,049
the video taping this and I found that

00:21:53,630 --> 00:21:59,030
it became baby was used increasingly and

00:21:57,049 --> 00:22:01,309
some Tom point started decreasing again

00:21:59,030 --> 00:22:03,830
perhaps people more professional people

00:22:01,309 --> 00:22:07,640
rather than students are contributing to

00:22:03,830 --> 00:22:11,000
the code now let me look at the other

00:22:07,640 --> 00:22:13,549
part how architecture evolves what I was

00:22:11,000 --> 00:22:15,090
surprised to see was that even the pdp-7

00:22:13,549 --> 00:22:18,570
architecture sister

00:22:15,090 --> 00:22:20,330
the season had a very the markings of an

00:22:18,570 --> 00:22:22,740
architecture so it had a layering

00:22:20,330 --> 00:22:24,720
between a different day differentiation

00:22:22,740 --> 00:22:26,520
between the canon in the user space that

00:22:24,720 --> 00:22:29,280
partitioning it had a system call

00:22:26,520 --> 00:22:30,930
interface that code and data scoping he

00:22:29,280 --> 00:22:34,080
didn't had past written in an

00:22:30,930 --> 00:22:35,640
interpreter by the first edition we had

00:22:34,080 --> 00:22:38,640
the reference architecture so parts of

00:22:35,640 --> 00:22:41,640
the system code were used again 34

00:22:38,640 --> 00:22:43,680
system calls code review were there 18

00:22:41,640 --> 00:22:46,470
were common with the PDP 7 version and

00:22:43,680 --> 00:22:49,770
amazingly another set of 18 are still

00:22:46,470 --> 00:22:51,510
used today 50 years later there was a

00:22:49,770 --> 00:22:53,190
binary code api from different languages

00:22:51,510 --> 00:22:56,730
Fortran and C you could use the same

00:22:53,190 --> 00:22:59,310
system calls IO was abstracted devices

00:22:56,730 --> 00:23:01,260
could be used as files the second

00:22:59,310 --> 00:23:03,390
edition who had user contributed code

00:23:01,260 --> 00:23:05,160
the shell was there as a user program

00:23:03,390 --> 00:23:07,650
and they were documented file programs

00:23:05,160 --> 00:23:10,620
but some programs there read and others

00:23:07,650 --> 00:23:12,870
wrote the third edition who had the type

00:23:10,620 --> 00:23:15,900
of selection that's used a widely used

00:23:12,870 --> 00:23:18,210
today and all tools that received input

00:23:15,900 --> 00:23:20,850
and up were rewritten to become filters

00:23:18,210 --> 00:23:23,460
they were not like that from the

00:23:20,850 --> 00:23:26,400
beginning they were rewritten the fourth

00:23:23,460 --> 00:23:29,250
edition who had a system a rewritten in

00:23:26,400 --> 00:23:31,230
see structural programming an idea that

00:23:29,250 --> 00:23:35,390
language independent lecture definitions

00:23:31,230 --> 00:23:38,430
and so on if we look at the commands I

00:23:35,390 --> 00:23:39,960
went to and measured encountered the

00:23:38,430 --> 00:23:42,390
number of commands you can find another

00:23:39,960 --> 00:23:43,830
repository on github that has the number

00:23:42,390 --> 00:23:45,840
of commands that are available on each

00:23:43,830 --> 00:23:48,630
version of Unix so here you see the

00:23:45,840 --> 00:23:51,150
system calls in c1 each system call was

00:23:48,630 --> 00:23:53,490
introduced and one stopped being used

00:23:51,150 --> 00:23:55,950
for all versions that are available in

00:23:53,490 --> 00:23:59,190
the repository and we see an increase in

00:23:55,950 --> 00:24:01,440
the number of user commands in the

00:23:59,190 --> 00:24:02,940
number of system calls in the number of

00:24:01,440 --> 00:24:05,580
syllabary function at some point people

00:24:02,940 --> 00:24:07,410
were shy but then they started putting

00:24:05,580 --> 00:24:10,440
everything under the Sun as a library

00:24:07,410 --> 00:24:13,550
function and in the number of devices

00:24:10,440 --> 00:24:16,560
something we can expect file formats

00:24:13,550 --> 00:24:20,610
system commands and also documented

00:24:16,560 --> 00:24:24,090
kernel interfaces look here this is the

00:24:20,610 --> 00:24:26,520
architecture of the system of the first

00:24:24,090 --> 00:24:28,800
research Edition you see that we have

00:24:26,520 --> 00:24:29,030
user space with the user programs and

00:24:28,800 --> 00:24:31,730
the

00:24:29,030 --> 00:24:33,350
installation programs the library in

00:24:31,730 --> 00:24:36,410
assembly language in the bill language

00:24:33,350 --> 00:24:39,020
no CA there at the time the kernel-space

00:24:36,410 --> 00:24:41,120
system call interface they all subsystem

00:24:39,020 --> 00:24:44,360
process control system and some utility

00:24:41,120 --> 00:24:46,370
functions now squint your eyes and look

00:24:44,360 --> 00:24:51,440
again at the architecture of modern

00:24:46,370 --> 00:24:54,370
freebsd 11.0 okay this is the one this

00:24:51,440 --> 00:24:57,500
is fifty years later you see that the

00:24:54,370 --> 00:24:59,780
major part of the architecture are still

00:24:57,500 --> 00:25:02,270
here and the system is roughly following

00:24:59,780 --> 00:25:04,550
the same rough architecture although

00:25:02,270 --> 00:25:08,000
major innovations have happened at that

00:25:04,550 --> 00:25:10,100
time so we see that architecture as it

00:25:08,000 --> 00:25:13,970
happened at the beginning was put into

00:25:10,100 --> 00:25:16,760
stone and is with us still today so as

00:25:13,970 --> 00:25:18,950
an action items what they do I want you

00:25:16,760 --> 00:25:21,980
to live here today you can use this

00:25:18,950 --> 00:25:24,380
repository for learning so you can see

00:25:21,980 --> 00:25:26,750
all the dishes and learn about them and

00:25:24,380 --> 00:25:30,080
also if you do research to research with

00:25:26,750 --> 00:25:31,880
it I invite you to improve it so you can

00:25:30,080 --> 00:25:33,920
add more authorship information about

00:25:31,880 --> 00:25:37,820
50% of the files are attributed to

00:25:33,920 --> 00:25:40,670
authors many are not you can merge other

00:25:37,820 --> 00:25:43,850
concurrency CCS and CPS commits so that

00:25:40,670 --> 00:25:46,100
happened there was a line of two bsd

00:25:43,850 --> 00:25:48,440
releases that are not yet there you can

00:25:46,100 --> 00:25:50,120
add them you can add new research

00:25:48,440 --> 00:25:52,370
additions that a few months ago were

00:25:50,120 --> 00:25:54,890
released into the public so eight to ten

00:25:52,370 --> 00:25:56,360
and plan nine if you have powerful

00:25:54,890 --> 00:25:59,090
friends you can lobby with them to

00:25:56,360 --> 00:26:01,130
release a later editions of the unix

00:25:59,090 --> 00:26:03,050
source code such as resistant type which

00:26:01,130 --> 00:26:05,120
is very influential and will allow us to

00:26:03,050 --> 00:26:08,120
build another timeline down to open

00:26:05,120 --> 00:26:10,130
solaris and also if you work with gate

00:26:08,120 --> 00:26:12,080
you can work to improved its performance

00:26:10,130 --> 00:26:14,300
and accuracy so that doesn't take three

00:26:12,080 --> 00:26:18,020
days to tell you which are the oldest

00:26:14,300 --> 00:26:20,540
lines in the system with that i thank

00:26:18,020 --> 00:26:25,460
you for your attention

00:26:20,540 --> 00:26:25,460

YouTube URL: https://www.youtube.com/watch?v=N2GqnsHpQ-k


