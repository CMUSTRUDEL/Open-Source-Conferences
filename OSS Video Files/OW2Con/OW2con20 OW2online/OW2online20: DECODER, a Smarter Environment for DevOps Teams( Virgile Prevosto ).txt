Title: OW2online20: DECODER, a Smarter Environment for DevOps Teams( Virgile Prevosto )
Publication date: 2020-06-22
Playlist: OW2con20 OW2online
Description: 
	The DECODER project simplifies software library and component reuse, while ensuring that they will behave as expected by the developer. The DECODER central database (PKM) stores code-related artifacts and establish bindings between them, notably by generating formal specification from informal requirements or semi-formal models from source code.
Captions: 
	00:00:01,300 --> 00:00:04,399
[Music]

00:00:09,860 --> 00:00:14,480
hello and thanks for attending this

00:00:12,150 --> 00:00:17,940
presentation at all the value to online

00:00:14,480 --> 00:00:21,020
my name is very versatile I now

00:00:17,940 --> 00:00:23,519
researchers realistically near Paris and

00:00:21,020 --> 00:00:27,449
I'm acting it's a technical leader of

00:00:23,519 --> 00:00:32,700
the H 2020 decoder project that I will

00:00:27,449 --> 00:00:34,980
talk about decoder stands for developer

00:00:32,700 --> 00:00:38,010
companion for documented and annotated

00:00:34,980 --> 00:00:41,460
code reference and you can of course

00:00:38,010 --> 00:00:47,520
find more information on its website it

00:00:41,460 --> 00:00:50,370
started in the beginning of 2019 from a

00:00:47,520 --> 00:00:53,129
duration of three years meaning that we

00:00:50,370 --> 00:00:56,760
are currently in the middle of the

00:00:53,129 --> 00:00:59,160
project the main aim of the project

00:00:56,760 --> 00:01:02,609
consists in providing a unified platform

00:00:59,160 --> 00:01:04,850
which will let user manage all kinds of

00:01:02,609 --> 00:01:08,299
information and a software project

00:01:04,850 --> 00:01:12,659
including of growth source code itself

00:01:08,299 --> 00:01:14,610
inline comments documentation models

00:01:12,659 --> 00:01:18,540
test scenarios and results for most

00:01:14,610 --> 00:01:22,500
recreations and or static analysis

00:01:18,540 --> 00:01:25,860
results in decoder has identified three

00:01:22,500 --> 00:01:28,020
main worlds for her intended users

00:01:25,860 --> 00:01:31,110
namely developers review wheels and

00:01:28,020 --> 00:01:32,460
maintenance but as a platform at the

00:01:31,110 --> 00:01:34,770
ambition to be useful for any

00:01:32,460 --> 00:01:37,920
stakeholder during the world lifecycle

00:01:34,770 --> 00:01:42,259
of a sort of projects from design to

00:01:37,920 --> 00:01:46,829
deployment to maintenance and upgrade

00:01:42,259 --> 00:01:49,439
decoder is coordinated by technical in

00:01:46,829 --> 00:01:51,810
Australia with support from stylists for

00:01:49,439 --> 00:01:54,659
technical leadership very roughly

00:01:51,810 --> 00:01:56,180
speaking it will mix software modeling

00:01:54,659 --> 00:02:00,659
and analysis tools

00:01:56,180 --> 00:02:04,590
notably from realist and UPV the

00:02:00,659 --> 00:02:06,689
university of valencia in spain with

00:02:04,590 --> 00:02:09,869
natural language processing tools again

00:02:06,689 --> 00:02:11,340
from realist and three technology again

00:02:09,869 --> 00:02:13,840
in Spain

00:02:11,340 --> 00:02:15,280
making the best use of the platform will

00:02:13,840 --> 00:02:18,100
of course require defining some

00:02:15,280 --> 00:02:23,140
methodology collective efforts led by

00:02:18,100 --> 00:02:26,170
upp while cap Germany in Spain provides

00:02:23,140 --> 00:02:30,670
expertise in UX design to develop a user

00:02:26,170 --> 00:02:32,500
interface for the platform finally the

00:02:30,670 --> 00:02:37,140
world product will be assessed against

00:02:32,500 --> 00:02:41,410
values reduced cases in C C++ and Java

00:02:37,140 --> 00:02:46,240
provided by caption image 3 technology

00:02:41,410 --> 00:02:47,980
Cisco in Germany and w2 in France is

00:02:46,240 --> 00:02:54,570
also coordinating the communication

00:02:47,980 --> 00:02:54,570
efforts of decoder and asking us today

00:02:55,320 --> 00:03:01,000
at the core of the project lies

00:02:57,840 --> 00:03:06,489
elaboration of the persistent knowledge

00:03:01,000 --> 00:03:09,100
monitor PKM database meant to ask all

00:03:06,489 --> 00:03:09,930
the relevant documents for a given sort

00:03:09,100 --> 00:03:12,790
of project

00:03:09,930 --> 00:03:17,680
as mentioned before during the world

00:03:12,790 --> 00:03:19,690
lifecycle of side project the PJM itself

00:03:17,680 --> 00:03:22,239
will of course come with tools for

00:03:19,690 --> 00:03:26,040
filling the database and retrieving

00:03:22,239 --> 00:03:28,560
information from it within the project

00:03:26,040 --> 00:03:32,860
this will not only be the case for

00:03:28,560 --> 00:03:34,750
natural language processing tools able

00:03:32,860 --> 00:03:37,660
to extract information from existing

00:03:34,750 --> 00:03:41,830
documentation or from the code itself

00:03:37,660 --> 00:03:44,680
and to provide valuable insight on what

00:03:41,830 --> 00:03:46,989
the code is supported including

00:03:44,680 --> 00:03:49,739
potentially in the form of formal

00:03:46,989 --> 00:03:52,480
specifications

00:03:49,739 --> 00:03:57,540
similarly static and dynamic analysis

00:03:52,480 --> 00:04:00,280
tools such as from a c OpenGL or tester

00:03:57,540 --> 00:04:02,340
should be able to take into account

00:04:00,280 --> 00:04:06,459
those additional sources of information

00:04:02,340 --> 00:04:11,739
in order to refine their analysis and to

00:04:06,459 --> 00:04:14,079
give back as a result to the PK finally

00:04:11,739 --> 00:04:16,350
all such information should also be made

00:04:14,079 --> 00:04:20,979
directly available to end-users

00:04:16,350 --> 00:04:23,870
school self a right IDE or our dedicated

00:04:20,979 --> 00:04:27,889
interface developed within the project

00:04:23,870 --> 00:04:37,000
also the generation of new documents PDF

00:04:27,889 --> 00:04:42,320
of all other formats UML models or other

00:04:37,000 --> 00:04:44,720
kind of documents of course in order to

00:04:42,320 --> 00:04:48,110
make all these tools communicate

00:04:44,720 --> 00:04:52,240
smoothly with the PKM some common

00:04:48,110 --> 00:04:55,820
schemas have to be designed in fact

00:04:52,240 --> 00:04:58,699
since the PM is such a central piece of

00:04:55,820 --> 00:05:00,680
the project its design and the

00:04:58,699 --> 00:05:02,960
development of its first prototype was

00:05:00,680 --> 00:05:07,039
one of the major objectives of the first

00:05:02,960 --> 00:05:09,410
Alf of decoder for that we gather

00:05:07,039 --> 00:05:11,240
requirements from all partners in order

00:05:09,410 --> 00:05:14,720
to ensure that the database will cover

00:05:11,240 --> 00:05:20,660
as much as possible the needs of all its

00:05:14,720 --> 00:05:25,370
intended users as we needed it to store

00:05:20,660 --> 00:05:28,490
very heterogeneous documents document

00:05:25,370 --> 00:05:32,080
oriented no Astro database was an

00:05:28,490 --> 00:05:37,669
obvious choice and we finally settled on

00:05:32,080 --> 00:05:43,849
MongoDB or at least its latest a GPL

00:05:37,669 --> 00:05:45,349
version 3.4 for the time being Jason

00:05:43,849 --> 00:05:48,250
will be the primary format for

00:05:45,349 --> 00:05:54,229
exchanging documents with the PGM and

00:05:48,250 --> 00:05:56,060
first schema has been proposed with

00:05:54,229 --> 00:06:00,020
which we will try to adhere to existing

00:05:56,060 --> 00:06:04,099
standard proposals in there as well they

00:06:00,020 --> 00:06:08,090
exist such as static analysis results

00:06:04,099 --> 00:06:08,840
Seraph for storing population

00:06:08,090 --> 00:06:14,599
information

00:06:08,840 --> 00:06:19,240
jcd be from Simic of interactions with

00:06:14,599 --> 00:06:21,919
ide is a long word Java protocol speed

00:06:19,240 --> 00:06:24,500
at the lowest level interactions with

00:06:21,919 --> 00:06:29,419
the pga makanda kids who are MongoDB is

00:06:24,500 --> 00:06:34,790
on JavaScript driver on top of which we

00:06:29,419 --> 00:06:37,400
have designed a lower level API which is

00:06:34,790 --> 00:06:39,230
currently ready to let the tools

00:06:37,400 --> 00:06:43,820
involved in the project feed the PGM

00:06:39,230 --> 00:06:47,660
with their own data and to make basic

00:06:43,820 --> 00:06:51,020
queries to the teacher currently on the

00:06:47,660 --> 00:06:55,540
designers reason I Olive LAPI which is

00:06:51,020 --> 00:07:01,760
more suitable for in end-users

00:06:55,540 --> 00:07:04,940
interactions and again on the design we

00:07:01,760 --> 00:07:13,280
find a web-based interface to manage the

00:07:04,940 --> 00:07:16,040
PDF another very important aspect of the

00:07:13,280 --> 00:07:18,440
project is the usage of natural language

00:07:16,040 --> 00:07:23,150
processing techniques to automatically

00:07:18,440 --> 00:07:25,190
identify correspondences between the

00:07:23,150 --> 00:07:28,670
documentation and the corresponding

00:07:25,190 --> 00:07:30,650
source code knowledge reflection could

00:07:28,670 --> 00:07:33,500
be done in both directions easier to

00:07:30,650 --> 00:07:37,640
derive more formal requirements from an

00:07:33,500 --> 00:07:42,320
English French Spanish German document

00:07:37,640 --> 00:07:47,600
Oh to add writing the documentation by

00:07:42,320 --> 00:07:54,050
extracting directly some part of it

00:07:47,600 --> 00:07:55,460
from the code in this array as the first

00:07:54,050 --> 00:07:58,010
part of the project has been dedicated

00:07:55,460 --> 00:08:02,080
to gather data sets in order to train

00:07:58,010 --> 00:08:05,720
the models and to the training itself

00:08:02,080 --> 00:08:08,140
from that existing data sets external to

00:08:05,720 --> 00:08:14,420
the project has been identified and used

00:08:08,140 --> 00:08:16,970
as well as usual use cases of the

00:08:14,420 --> 00:08:21,080
projects that I believe the ones in Java

00:08:16,970 --> 00:08:24,110
and C++ initial experiments have

00:08:21,080 --> 00:08:27,230
encouraging in the direction from code

00:08:24,110 --> 00:08:29,210
to natural language focus was made on

00:08:27,230 --> 00:08:33,500
grouping tokens according to the

00:08:29,210 --> 00:08:37,370
electrical values with a first

00:08:33,500 --> 00:08:40,340
application towards detecting potential

00:08:37,370 --> 00:08:46,910
misuse of identifiers instance if a

00:08:40,340 --> 00:08:48,740
developer used an X where natural to

00:08:46,910 --> 00:08:53,579
find a while

00:08:48,740 --> 00:08:58,259
either in the code or in a comment any

00:08:53,579 --> 00:09:01,500
other code in the reverse direction from

00:08:58,259 --> 00:09:03,689
that your language to code the idea is

00:09:01,500 --> 00:09:07,019
to use neural machine translation

00:09:03,689 --> 00:09:11,000
techniques in which the code will simply

00:09:07,019 --> 00:09:13,500
be seen as another foreign language

00:09:11,000 --> 00:09:15,810
models are currently trying to compute a

00:09:13,500 --> 00:09:18,410
similarity level between the source and

00:09:15,810 --> 00:09:22,680
the corresponding informal description

00:09:18,410 --> 00:09:28,980
of what the code is supposed to do again

00:09:22,680 --> 00:09:31,500
with interesting results last but not

00:09:28,980 --> 00:09:33,569
least some work has been dedicated to

00:09:31,500 --> 00:09:38,579
define the so called abstract semi

00:09:33,569 --> 00:09:41,250
formal models of a sfm for short whence

00:09:38,579 --> 00:09:44,970
the idea is to provide a kind of

00:09:41,250 --> 00:09:48,269
graphical language which would other

00:09:44,970 --> 00:09:50,189
describing the effects of a function and

00:09:48,269 --> 00:09:54,509
the data structures involved for

00:09:50,189 --> 00:09:59,370
instance when we have lists of trees or

00:09:54,509 --> 00:10:01,230
graphs such format could act as an

00:09:59,370 --> 00:10:04,639
intermediary between the source code and

00:10:01,230 --> 00:10:06,809
formal specifications and one end and

00:10:04,639 --> 00:10:12,540
natural language descriptions and the

00:10:06,809 --> 00:10:15,420
other end and his name of semi-formal it

00:10:12,540 --> 00:10:17,459
would also juice that constitute a

00:10:15,420 --> 00:10:21,300
convenient target for natural language

00:10:17,459 --> 00:10:25,800
processing tools as an intermediary

00:10:21,300 --> 00:10:28,620
towards generating formal specifications

00:10:25,800 --> 00:10:32,790
which might be difficult to attain

00:10:28,620 --> 00:10:36,750
directly furthermore it is also planned

00:10:32,790 --> 00:10:40,050
to add the graphical debugger that would

00:10:36,750 --> 00:10:41,579
let users play with a certain objects in

00:10:40,050 --> 00:10:45,540
order to better understand the behavior

00:10:41,579 --> 00:10:50,420
of the underlying program and the data

00:10:45,540 --> 00:10:50,420
structures that are approaching the SFM

00:10:51,389 --> 00:10:58,269
currently a first version is available

00:10:53,949 --> 00:11:03,519
with a common core which is understood

00:10:58,269 --> 00:11:06,220
by each tools in the platform and in

00:11:03,519 --> 00:11:09,059
some places some tool specific

00:11:06,220 --> 00:11:09,059
extensions

00:11:09,509 --> 00:11:20,109
all in all sfm provides some kind of an

00:11:14,259 --> 00:11:22,389
abstraction layer on top of James lower

00:11:20,109 --> 00:11:26,859
level presentations of the code in

00:11:22,389 --> 00:11:31,839
particular and to some extent can be

00:11:26,859 --> 00:11:35,019
seen as a part of a low-level API in

00:11:31,839 --> 00:11:38,529
addition prototypes for creating sfm

00:11:35,019 --> 00:11:44,589
models from the code are currently

00:11:38,529 --> 00:11:46,660
available to summarize the work done so

00:11:44,589 --> 00:11:49,679
far we are approaching the point where

00:11:46,660 --> 00:11:53,769
the PGM server will be available for

00:11:49,679 --> 00:11:56,470
extensive beta testing first internally

00:11:53,769 --> 00:12:00,509
notably to refine the functionality that

00:11:56,470 --> 00:12:04,720
our front both by the low-level API and

00:12:00,509 --> 00:12:10,029
the a level API which is currently under

00:12:04,720 --> 00:12:15,369
design and to comply to complete the

00:12:10,029 --> 00:12:16,799
bindings with the client under

00:12:15,369 --> 00:12:19,989
development

00:12:16,799 --> 00:12:23,739
similarly we also have to finalize the

00:12:19,989 --> 00:12:28,660
integration of the NLP tools within the

00:12:23,739 --> 00:12:32,100
apk after that it will be time to open

00:12:28,660 --> 00:12:37,299
up beta testing to external possibly

00:12:32,100 --> 00:12:40,869
some kind of adventurous users including

00:12:37,299 --> 00:12:45,189
interfacing with other tools or simply

00:12:40,869 --> 00:12:50,619
let us play with interface the graphical

00:12:45,189 --> 00:12:52,660
interface available for that it might be

00:12:50,619 --> 00:12:54,839
interesting to use the reach out

00:12:52,660 --> 00:12:58,919
platform that has just been presented

00:12:54,839 --> 00:13:00,770
but currently this is still under

00:12:58,919 --> 00:13:08,480
discussion

00:13:00,770 --> 00:13:11,240
within within Dakota and this concludes

00:13:08,480 --> 00:13:16,010
what I wanted to tell you about Dakota

00:13:11,240 --> 00:13:19,270
so thank you for listening and feel free

00:13:16,010 --> 00:13:22,270
of course to contact us if you want more

00:13:19,270 --> 00:13:22,270

YouTube URL: https://www.youtube.com/watch?v=gLAOWIRqKA4


