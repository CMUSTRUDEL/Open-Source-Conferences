Title: OW2con'15 Keynote Philippe Ozil: Software extensibility of an Open Source project
Publication date: 2015-11-25
Playlist: OW2con 2015
Description: 
	As a Business Process Management Software (BPMS) vendor, we at Bonitasoft face the challenge of addressing diversified projects from various industry sectors.We believe that the key to our success in doing so is to remain a generic solution. Yet, too much genericity may weigh on end-users and this can lead to rejection.
Because Open Source is part of our roots, we value the capability to customize and extend our solution. However, despite proposing an open source code, the problem we faced a couple years ago was that there were too few people willing or able to contribute to our core.To counter that, we have continuously developed extension points in our software to simplify the act of contributing and we have provided a platform for sharing contributions.
Adopting this strategy has proven to be rewarding and we have been able to leverage the creativity of our community. It has allowed us to avoid the pitfall of releasing a software that is generic but not flexible enough and instead, deliver tool that allows building business applications that can adapt to changes in real time.
Follow this presentation and learn about the challenges we faced and how we addressed them.
Captions: 
	00:00:05,779 --> 00:00:10,380
so I'm here today about to talk about

00:00:08,099 --> 00:00:12,750
software extensibility of our project

00:00:10,380 --> 00:00:15,030
and what I'm going to say is from our

00:00:12,750 --> 00:00:16,920
experience from winter soft but you can

00:00:15,030 --> 00:00:19,830
apply to any kind of software in open

00:00:16,920 --> 00:00:22,710
source so I'm going to start with a

00:00:19,830 --> 00:00:23,910
short presentation of bricks off explain

00:00:22,710 --> 00:00:27,119
a bit who we are i'm not going to go

00:00:23,910 --> 00:00:29,070
very detail then i'm going to talk about

00:00:27,119 --> 00:00:31,320
the challenges we faced with an open

00:00:29,070 --> 00:00:34,440
source project which is quite mature now

00:00:31,320 --> 00:00:35,880
but all and i'm going to describe a bit

00:00:34,440 --> 00:00:38,820
the strategies we put in place to

00:00:35,880 --> 00:00:40,829
address the challenges we faced how we

00:00:38,820 --> 00:00:42,510
dealt with our challenges techniques

00:00:40,829 --> 00:00:45,870
weed we put in place to deal with

00:00:42,510 --> 00:00:48,870
contributions and extensibility so first

00:00:45,870 --> 00:00:51,239
let's start with who we are well I'm

00:00:48,870 --> 00:00:52,829
going to put it very simply there's four

00:00:51,239 --> 00:00:55,890
key dates in our story we are going to

00:00:52,829 --> 00:00:57,559
soft and just like everybody here we

00:00:55,890 --> 00:00:59,609
were coming from the open source world

00:00:57,559 --> 00:01:03,390
we started with an open source project

00:00:59,609 --> 00:01:06,330
and shaded by inria in LC and this was

00:01:03,390 --> 00:01:08,100
in 2001 and something from that it's

00:01:06,330 --> 00:01:10,400
project which evolved quite rapidly and

00:01:08,100 --> 00:01:12,720
it gained additional support with

00:01:10,400 --> 00:01:14,640
sponsors from the industry such as bow

00:01:12,720 --> 00:01:20,159
and it became also a product on the

00:01:14,640 --> 00:01:22,340
library to on 2003 and later the product

00:01:20,159 --> 00:01:25,170
was getting so much mountain that it

00:01:22,340 --> 00:01:27,390
transformed into a company and hear what

00:01:25,170 --> 00:01:29,100
was the birth of Wendy soft winter stuff

00:01:27,390 --> 00:01:32,400
in fact name of a company the original

00:01:29,100 --> 00:01:36,329
project was Bonita Nova Bonita something

00:01:32,400 --> 00:01:38,130
and now it is funny too soft so in 2009

00:01:36,329 --> 00:01:40,259
we were falling in Grenoble so we start

00:01:38,130 --> 00:01:43,079
hire people to devote full-time on the

00:01:40,259 --> 00:01:45,119
software and presently were still here

00:01:43,079 --> 00:01:47,640
with a couple of million millions of

00:01:45,119 --> 00:01:50,009
lines of codes and let me spend a bit

00:01:47,640 --> 00:01:53,250
what we do without signs records so what

00:01:50,009 --> 00:01:55,860
we do is a bpms business processing

00:01:53,250 --> 00:01:57,240
management solution or software the rest

00:01:55,860 --> 00:01:59,909
can have different meanings but

00:01:57,240 --> 00:02:04,200
basically software and it's got bunny

00:01:59,909 --> 00:02:05,820
10pm it's it's something that it has all

00:02:04,200 --> 00:02:06,990
the features of a traditional bpms so

00:02:05,820 --> 00:02:09,599
it's a process model which would

00:02:06,990 --> 00:02:12,390
describe business processes you can

00:02:09,599 --> 00:02:13,590
execute them with an engine I also form

00:02:12,390 --> 00:02:15,060
an application builder pro

00:02:13,590 --> 00:02:18,690
I did user interfaces for your business

00:02:15,060 --> 00:02:20,400
processes there's also data and document

00:02:18,690 --> 00:02:22,140
management systems to to deal with your

00:02:20,400 --> 00:02:24,569
business data and move along in your

00:02:22,140 --> 00:02:26,459
processes you got also love features you

00:02:24,569 --> 00:02:28,080
connect with your information system and

00:02:26,459 --> 00:02:30,299
also organization management dispatch

00:02:28,080 --> 00:02:32,069
task two different actors and also

00:02:30,299 --> 00:02:34,680
reporting functions so it's a fairly

00:02:32,069 --> 00:02:36,450
complete and complex software not

00:02:34,680 --> 00:02:40,530
everybody use all the features but it's

00:02:36,450 --> 00:02:43,260
quite mature now while I am I present

00:02:40,530 --> 00:02:45,450
you point out well because this software

00:02:43,260 --> 00:02:47,190
is all about extensibility the fact is

00:02:45,450 --> 00:02:49,470
we provide a generic solution of

00:02:47,190 --> 00:02:51,540
flexible solution and our customers use

00:02:49,470 --> 00:02:54,090
it the way we they want business process

00:02:51,540 --> 00:02:57,209
applies to all kinds of registries video

00:02:54,090 --> 00:02:59,910
to automotive being finances being

00:02:57,209 --> 00:03:01,349
egovernment you can you zoom in a whole

00:02:59,910 --> 00:03:04,680
range of different situation with

00:03:01,349 --> 00:03:06,750
different goals so to achieve that we

00:03:04,680 --> 00:03:08,099
have to guarantee the maximum level of

00:03:06,750 --> 00:03:10,110
flexibility we have to make sure people

00:03:08,099 --> 00:03:14,519
can extend our solution and go beyond

00:03:10,110 --> 00:03:16,470
the generic features we provide so to do

00:03:14,519 --> 00:03:18,030
that we have to rely on open source

00:03:16,470 --> 00:03:20,430
because we follow persons we could not

00:03:18,030 --> 00:03:22,859
do it this is where we come from and we

00:03:20,430 --> 00:03:25,410
need your continued support so when you

00:03:22,859 --> 00:03:29,010
make sure our end users are able to

00:03:25,410 --> 00:03:32,700
customize the solution for any needs so

00:03:29,010 --> 00:03:34,380
how did we address OpenSocial will be

00:03:32,700 --> 00:03:37,650
handled the contributions from our

00:03:34,380 --> 00:03:40,530
community well we are possible to start

00:03:37,650 --> 00:03:41,970
to decide as you saw from the history we

00:03:40,530 --> 00:03:44,549
started from the new poll shows project

00:03:41,970 --> 00:03:46,919
and the thing is as the product group

00:03:44,549 --> 00:03:48,450
one if we had the company we first faced

00:03:46,919 --> 00:03:50,480
some issues we were not satisfied with

00:03:48,450 --> 00:03:54,000
everything coming from our contributions

00:03:50,480 --> 00:03:57,419
and worse some little issues we had it

00:03:54,000 --> 00:03:59,010
was not terrible but we want to improve

00:03:57,419 --> 00:04:01,109
our relationship before communities so

00:03:59,010 --> 00:04:02,609
we had to handle a few things the first

00:04:01,109 --> 00:04:04,889
issue we had was the number of

00:04:02,609 --> 00:04:07,889
contributors was fairly too low compared

00:04:04,889 --> 00:04:09,840
to the number of actual users so people

00:04:07,889 --> 00:04:12,419
were mostly taking and not contributing

00:04:09,840 --> 00:04:16,109
back enough so we had to do to address

00:04:12,419 --> 00:04:17,970
fab next another issue we had is that we

00:04:16,109 --> 00:04:19,829
had too few contributions that made it

00:04:17,970 --> 00:04:21,419
to the end of a product or in the

00:04:19,829 --> 00:04:23,099
project actually I should say project

00:04:21,419 --> 00:04:25,000
Morgan product here

00:04:23,099 --> 00:04:27,310
because of different reasons I'm going

00:04:25,000 --> 00:04:29,259
to detail a bit later but given the

00:04:27,310 --> 00:04:30,490
people the few people contributing the

00:04:29,259 --> 00:04:33,610
number of contribution was even lesser

00:04:30,490 --> 00:04:36,069
in the end integrated product so that's

00:04:33,610 --> 00:04:38,259
what the main issue and also sometimes

00:04:36,069 --> 00:04:40,900
some people did create some custom code

00:04:38,259 --> 00:04:42,550
around our product or project but never

00:04:40,900 --> 00:04:44,650
contributed back that's the game of open

00:04:42,550 --> 00:04:47,800
source you don't always contribute back

00:04:44,650 --> 00:04:49,419
that's the problem so how did we address

00:04:47,800 --> 00:04:51,879
that why did we had all those issues

00:04:49,419 --> 00:04:53,770
well the reason why we had so few

00:04:51,879 --> 00:04:55,840
contribution integrating products was

00:04:53,770 --> 00:04:57,099
because we were quite big product so

00:04:55,840 --> 00:05:00,130
there's a quite a few technical

00:04:57,099 --> 00:05:01,780
constraints around this product the

00:05:00,130 --> 00:05:04,479
first one is the scale of the project

00:05:01,780 --> 00:05:07,030
and complexity I've detailed all the

00:05:04,479 --> 00:05:09,490
features that were composing the final

00:05:07,030 --> 00:05:11,889
product and it's a fairly large project

00:05:09,490 --> 00:05:14,800
smelling the lines of codes and it's

00:05:11,889 --> 00:05:16,630
quite technical when the project works

00:05:14,800 --> 00:05:18,490
on a multi-platform environment so you

00:05:16,630 --> 00:05:20,440
have to test on multiple OS you have to

00:05:18,490 --> 00:05:22,750
test multiple databases you have to test

00:05:20,440 --> 00:05:24,190
on different application servers and we

00:05:22,750 --> 00:05:26,289
guarantee all that of course we'll do a

00:05:24,190 --> 00:05:29,710
work and there are always a combination

00:05:26,289 --> 00:05:31,780
of matrix of environments then you have

00:05:29,710 --> 00:05:32,889
to deal with legacy support it's not

00:05:31,780 --> 00:05:33,759
because you're really seeing a new

00:05:32,889 --> 00:05:37,030
version that you're going to drop

00:05:33,759 --> 00:05:38,590
support for your existing users problem

00:05:37,030 --> 00:05:40,060
is you're deploying this product for

00:05:38,590 --> 00:05:41,969
business applications business

00:05:40,060 --> 00:05:43,930
application has a have a pretty long

00:05:41,969 --> 00:05:45,400
lifecycle they don't change every day so

00:05:43,930 --> 00:05:47,590
that's something you put in place you

00:05:45,400 --> 00:05:49,000
kind of forget while it works and you're

00:05:47,590 --> 00:05:51,069
maybe I'm going to update in 10 years so

00:05:49,000 --> 00:05:53,949
you don't want to change too often so we

00:05:51,069 --> 00:05:56,529
have to integrate this legacy when we

00:05:53,949 --> 00:05:59,080
develop more projects then there's the

00:05:56,529 --> 00:06:00,909
generousity aspect as I said we are not

00:05:59,080 --> 00:06:02,800
providing specific solution for donor

00:06:00,909 --> 00:06:04,659
liver for finances we want to make sure

00:06:02,800 --> 00:06:06,159
we provide something that works for any

00:06:04,659 --> 00:06:09,219
kind of environment so we don't want to

00:06:06,159 --> 00:06:10,990
force some choices to impose some

00:06:09,219 --> 00:06:12,699
choices to the end-user we want to make

00:06:10,990 --> 00:06:13,870
sure we can adapt to different situation

00:06:12,699 --> 00:06:16,509
so we have to keep that in mind

00:06:13,870 --> 00:06:18,969
generosity next row business well

00:06:16,509 --> 00:06:20,949
business engine has to be robust because

00:06:18,969 --> 00:06:23,229
we need to be able to handle errors we

00:06:20,949 --> 00:06:28,330
need to be able to to deal with critical

00:06:23,229 --> 00:06:29,800
situations this can mean the failure can

00:06:28,330 --> 00:06:32,229
have catastrophic them sequences in

00:06:29,800 --> 00:06:33,909
critical processes for example if you

00:06:32,229 --> 00:06:35,350
were to open a bank account which is

00:06:33,909 --> 00:06:37,330
going to be a process for example

00:06:35,350 --> 00:06:39,880
this process fails you can imagine the

00:06:37,330 --> 00:06:41,890
consequences so we have to be robust to

00:06:39,880 --> 00:06:45,130
make sure your fault tolerant and you

00:06:41,890 --> 00:06:46,840
can never lose data actually and the

00:06:45,130 --> 00:06:48,550
last two features well that's maybe the

00:06:46,840 --> 00:06:51,010
hardest part to deal with contribution

00:06:48,550 --> 00:06:52,720
make sure the contributions do not

00:06:51,010 --> 00:06:55,330
affect the performance and scalability

00:06:52,720 --> 00:06:56,650
of your engine here I'm talking mainly

00:06:55,330 --> 00:06:58,630
about the engine there are multiple

00:06:56,650 --> 00:07:00,190
components in bonita but this is really

00:06:58,630 --> 00:07:02,920
the most critical one where we had the

00:07:00,190 --> 00:07:04,330
most contributions and so this engine

00:07:02,920 --> 00:07:05,980
needs to be performed because you need

00:07:04,330 --> 00:07:08,740
to run thousands of operation in

00:07:05,980 --> 00:07:10,330
parallel needs to be robust and you need

00:07:08,740 --> 00:07:12,220
to be able to scale the muscle to deploy

00:07:10,330 --> 00:07:15,220
on a cluster or in different

00:07:12,220 --> 00:07:17,470
environments so accepting contribution

00:07:15,220 --> 00:07:19,660
with all of those technical constraint

00:07:17,470 --> 00:07:22,470
is not an easy thing it's not something

00:07:19,660 --> 00:07:24,790
that anybody can do it requires a bit of

00:07:22,470 --> 00:07:26,260
hindsight on the complexity of the

00:07:24,790 --> 00:07:27,880
software it regards a bit of experience

00:07:26,260 --> 00:07:29,080
in terms of software engineering it's

00:07:27,880 --> 00:07:32,040
not something you can contribute when

00:07:29,080 --> 00:07:36,280
you're just a junior high school student

00:07:32,040 --> 00:07:38,260
so how did we handle the complexity of

00:07:36,280 --> 00:07:41,380
us contribution how did we put in place

00:07:38,260 --> 00:07:45,250
a strategy to accept more and to make

00:07:41,380 --> 00:07:46,660
sure product kept being extensible well

00:07:45,250 --> 00:07:48,550
I'm going to give you a couple of tips

00:07:46,660 --> 00:07:52,630
it can probably work on so for some

00:07:48,550 --> 00:07:54,700
other companies the reason why we had so

00:07:52,630 --> 00:07:57,910
many issues or maybe because we're a bit

00:07:54,700 --> 00:08:00,280
older so we adapt front time and this is

00:07:57,910 --> 00:08:04,570
probably true for major product here

00:08:00,280 --> 00:08:06,970
that's the first reason we at first were

00:08:04,570 --> 00:08:09,670
working with mono life architectures a

00:08:06,970 --> 00:08:12,010
big block of code which was more than

00:08:09,670 --> 00:08:15,130
ten years old we evolved multiple

00:08:12,010 --> 00:08:18,370
version of bonita to well i would say

00:08:15,130 --> 00:08:21,130
two years ago so it was already like had

00:08:18,370 --> 00:08:23,530
10 years of history behind us which was

00:08:21,130 --> 00:08:25,660
written in the monolithic architecture

00:08:23,530 --> 00:08:26,950
meaning that if you change a bit of the

00:08:25,660 --> 00:08:28,330
software right it might be some

00:08:26,950 --> 00:08:30,550
consequences on the other end of the

00:08:28,330 --> 00:08:32,050
software so if you wanted to change one

00:08:30,550 --> 00:08:33,610
particular aspect the software uni make

00:08:32,050 --> 00:08:36,039
sure you you know the consequences on

00:08:33,610 --> 00:08:37,990
the other end so the first thing we did

00:08:36,039 --> 00:08:39,130
was to rewrite the software it's a good

00:08:37,990 --> 00:08:40,570
for us of course we internal

00:08:39,130 --> 00:08:43,060
contributors but also for committees

00:08:40,570 --> 00:08:44,710
because commanders will be able to know

00:08:43,060 --> 00:08:46,450
that if they touch only one particular

00:08:44,710 --> 00:08:47,640
service on the new micro service

00:08:46,450 --> 00:08:50,190
architecture it will

00:08:47,640 --> 00:08:52,350
not impact the entire architecture so

00:08:50,190 --> 00:08:54,720
when the project evolves at some point

00:08:52,350 --> 00:08:56,850
is I think it's critical to to emphasize

00:08:54,720 --> 00:08:59,220
and you think a bit about the

00:08:56,850 --> 00:09:00,480
architecture of the product that's not

00:08:59,220 --> 00:09:01,680
something you need to do from the start

00:09:00,480 --> 00:09:03,180
because you don't necessarily have all

00:09:01,680 --> 00:09:04,920
these colors right when the moloch is

00:09:03,180 --> 00:09:06,540
small enough you don't have all these

00:09:04,920 --> 00:09:08,460
constraints but when you grow a

00:09:06,540 --> 00:09:10,980
vermilion I of code to millions I have

00:09:08,460 --> 00:09:13,260
to code you have to think about this so

00:09:10,980 --> 00:09:16,110
that was a big big effort two years ago

00:09:13,260 --> 00:09:18,840
we did to rewrite was million divider

00:09:16,110 --> 00:09:21,180
code to reap reorganize them into maker

00:09:18,840 --> 00:09:22,940
microservices now we can have

00:09:21,180 --> 00:09:25,380
contributors working on a specific

00:09:22,940 --> 00:09:27,930
microservice without having to disturb

00:09:25,380 --> 00:09:29,700
the whole architecture so that's rich

00:09:27,930 --> 00:09:32,190
contribute to the coral product but

00:09:29,700 --> 00:09:34,830
that's not just the only solution we all

00:09:32,190 --> 00:09:37,440
d also devised other solutions and these

00:09:34,830 --> 00:09:38,870
actually extension points or the best

00:09:37,440 --> 00:09:42,000
solution i think we've put in place

00:09:38,870 --> 00:09:43,800
because nobody not everybody has the

00:09:42,000 --> 00:09:46,290
skill to rewrite completely a whole

00:09:43,800 --> 00:09:48,150
module we decide to put some extension

00:09:46,290 --> 00:09:51,060
points and we decided to put them at

00:09:48,150 --> 00:09:52,800
many places and keep them very light not

00:09:51,060 --> 00:09:54,420
have entire modules of the software you

00:09:52,800 --> 00:09:57,560
have to rebuild in so I software to

00:09:54,420 --> 00:10:02,190
deploy them so reserved for different

00:09:57,560 --> 00:10:05,040
criterias that fake compose successful

00:10:02,190 --> 00:10:07,710
extension point first you need to add

00:10:05,040 --> 00:10:09,210
some value to the software so it had you

00:10:07,710 --> 00:10:11,070
have to put it at some someplace where

00:10:09,210 --> 00:10:12,750
it's going to be very used has to be

00:10:11,070 --> 00:10:14,790
also very simple to implement and test

00:10:12,750 --> 00:10:16,860
so something you can give up quickly

00:10:14,790 --> 00:10:18,570
just to test it and then you can also

00:10:16,860 --> 00:10:21,900
provide some examples which are simple

00:10:18,570 --> 00:10:23,940
enough to play with and to test when

00:10:21,900 --> 00:10:25,800
it's also need to be easy to deploy so

00:10:23,940 --> 00:10:28,350
you need to make sure an end user with

00:10:25,800 --> 00:10:30,870
no technical background can deployed on

00:10:28,350 --> 00:10:32,700
the product so doesn't have to write you

00:10:30,870 --> 00:10:34,470
don't have to write code or to recompile

00:10:32,700 --> 00:10:37,620
everything to deploy it that's a follow

00:10:34,470 --> 00:10:40,080
critical success and lastly you want to

00:10:37,620 --> 00:10:42,360
make sure this this extension boys don't

00:10:40,080 --> 00:10:44,540
mess with the core functionality so we

00:10:42,360 --> 00:10:48,330
can integrate nicely in the whole batch

00:10:44,540 --> 00:10:49,770
so for the since the beginning of bonita

00:10:48,330 --> 00:10:51,540
while we actually been multiplying

00:10:49,770 --> 00:10:53,760
extension points and i think that's one

00:10:51,540 --> 00:10:55,200
of the key success factors of pointy wpm

00:10:53,760 --> 00:10:57,990
we've been having them at different

00:10:55,200 --> 00:11:01,350
places and we now have 14 of them 14

00:10:57,990 --> 00:11:02,490
different extension types later Devon

00:11:01,350 --> 00:11:03,930
where you can change things such as

00:11:02,490 --> 00:11:06,900
connect us to interact with external

00:11:03,930 --> 00:11:08,940
systems you can have also create on

00:11:06,900 --> 00:11:11,430
extension points on user interface

00:11:08,940 --> 00:11:14,070
custom widgets which provide different

00:11:11,430 --> 00:11:15,660
types of the user interface we have also

00:11:14,070 --> 00:11:20,130
rest api extension if you wanna get it

00:11:15,660 --> 00:11:23,460
extends the product AP is so that's the

00:11:20,130 --> 00:11:26,460
idea to have smaller in small extension

00:11:23,460 --> 00:11:28,530
types which are maybe less robust if you

00:11:26,460 --> 00:11:31,170
pick them up from the community but that

00:11:28,530 --> 00:11:32,910
will not impact the entire software so

00:11:31,170 --> 00:11:35,220
these extension points are actually

00:11:32,910 --> 00:11:36,660
control of a stronger error mechanism so

00:11:35,220 --> 00:11:38,550
you make sure you test and then you make

00:11:36,660 --> 00:11:41,340
sure way if they fail they will not

00:11:38,550 --> 00:11:45,120
crash me into our system that's the

00:11:41,340 --> 00:11:47,220
purpose and lastly another thing will be

00:11:45,120 --> 00:11:49,830
put in place also that's helped us also

00:11:47,220 --> 00:11:52,440
work with extension points whilst we put

00:11:49,830 --> 00:11:54,600
in place a community project section or

00:11:52,440 --> 00:11:57,090
community website I think that's very

00:11:54,600 --> 00:11:58,650
important because maybe we have a

00:11:57,090 --> 00:12:00,510
community with a few developers but if

00:11:58,650 --> 00:12:03,540
these people are maybe a bit lazy or way

00:12:00,510 --> 00:12:06,600
they don't see the Pinterest or

00:12:03,540 --> 00:12:08,700
contribution can generate so if we don't

00:12:06,600 --> 00:12:10,020
provide a place for them to deploy our

00:12:08,700 --> 00:12:11,430
project it's not going to be very

00:12:10,020 --> 00:12:13,830
visible you're not going to look for

00:12:11,430 --> 00:12:15,750
entire internet to search for a specific

00:12:13,830 --> 00:12:17,970
contributions so what we did is we

00:12:15,750 --> 00:12:19,950
created a central repository and our

00:12:17,970 --> 00:12:23,790
community website called projects

00:12:19,950 --> 00:12:26,430
basically and we deployed a repository

00:12:23,790 --> 00:12:29,520
of all these contributions so this is

00:12:26,430 --> 00:12:31,230
the research for specific contribution

00:12:29,520 --> 00:12:33,990
you can have 10x you can have a keyword

00:12:31,230 --> 00:12:35,670
search and also simplifies contribution

00:12:33,990 --> 00:12:38,430
and maintenance by enforcing certain

00:12:35,670 --> 00:12:39,870
tags meaning that if you deploy an

00:12:38,430 --> 00:12:41,820
extension point maybe it's compatible

00:12:39,870 --> 00:12:45,210
with a specific version of a specific

00:12:41,820 --> 00:12:47,670
software so by forcing a bit to provide

00:12:45,210 --> 00:12:48,870
this information to the contributors you

00:12:47,670 --> 00:12:52,500
can keep track of whether the

00:12:48,870 --> 00:12:54,780
contributions are dead or not and lastly

00:12:52,500 --> 00:12:56,340
for the developers themself of the

00:12:54,780 --> 00:12:59,370
contributors themself we proudly provide

00:12:56,340 --> 00:13:00,840
also some tools to have them put in

00:12:59,370 --> 00:13:02,790
place the project structure so we

00:13:00,840 --> 00:13:04,050
provided them a product page there's to

00:13:02,790 --> 00:13:06,780
be able to run discovery with the

00:13:04,050 --> 00:13:09,660
project provide screenshots and we also

00:13:06,780 --> 00:13:11,490
put in place two key things the original

00:13:09,660 --> 00:13:13,110
measurements to deal with versions

00:13:11,490 --> 00:13:14,000
because it this way you can have a clear

00:13:13,110 --> 00:13:16,070
vision of the different

00:13:14,000 --> 00:13:17,840
questions and of course an issue tracker

00:13:16,070 --> 00:13:21,170
to make sure they were able to answer

00:13:17,840 --> 00:13:24,560
two different issues so providing them

00:13:21,170 --> 00:13:26,300
all this tooling but will avoid them to

00:13:24,560 --> 00:13:31,460
create an entire website or to use

00:13:26,300 --> 00:13:33,260
another project sites outside of of our

00:13:31,460 --> 00:13:35,900
reach so that we make sure we can't rule

00:13:33,260 --> 00:13:37,370
the people and they look in right right

00:13:35,900 --> 00:13:39,620
information the right place and not

00:13:37,370 --> 00:13:41,510
schedule around internet so this is

00:13:39,620 --> 00:13:46,190
couple of course a form which people

00:13:41,510 --> 00:13:48,110
interact with so brings value right I've

00:13:46,190 --> 00:13:51,530
been speaking very quickly so it's time

00:13:48,110 --> 00:13:52,910
time to include so during this

00:13:51,530 --> 00:13:54,440
presentation I think I gave you an

00:13:52,910 --> 00:13:56,180
overview about what we do and the

00:13:54,440 --> 00:13:59,120
challenge we faced with open source

00:13:56,180 --> 00:14:01,100
contributions and of course we have to

00:13:59,120 --> 00:14:02,420
keep in IV supplies for large and mature

00:14:01,100 --> 00:14:06,890
open source project it's not going to

00:14:02,420 --> 00:14:08,090
apply to something very new and I think

00:14:06,890 --> 00:14:09,800
I present to you some lanes on how to

00:14:08,090 --> 00:14:12,500
address that if you have a project which

00:14:09,800 --> 00:14:13,820
tends to grow bigger and bigger you have

00:14:12,500 --> 00:14:15,860
to make sure you accept quality

00:14:13,820 --> 00:14:18,190
contributions and Peter some pointers on

00:14:15,860 --> 00:14:21,310
how to address that particular issue

00:14:18,190 --> 00:14:21,310

YouTube URL: https://www.youtube.com/watch?v=dFc_w5QQXFo


