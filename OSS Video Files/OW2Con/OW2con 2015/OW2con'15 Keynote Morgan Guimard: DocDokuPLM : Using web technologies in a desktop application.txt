Title: OW2con'15 Keynote Morgan Guimard: DocDokuPLM : Using web technologies in a desktop application
Publication date: 2015-11-25
Playlist: OW2con 2015
Description: 
	The DocdokuPLM is an open-source platform allowing its users to manage their product's lifecycle, from design to maintenance. The main application is built upon RequireJS and BackboneJS librairies for the front-end, and JEE for back-end. The GUI is quite complete, and may won't fit for all users involved in the process. This is especially the case for CAD designers who just need to commit their changes without having such a rich graphic interface. To answer this need, we developped a desktop application, interfacing our server with the CAD designer's file system : the DPLM.
First, we developped a command line interface, which is very lightweight and really great for advanced users. However providing a GUI which could interface with the CLI and allow the user to manage multiple files upload at once was more than needed.
Providing a consistent user experience across different platforms has been one of our challenges in the context of our application. The choice of a web framework was then a natural choice. But how could we get it run within a desktop application ? Node-Webkit brought us the ability to interact directly with the user's file system and embed the app in a webview, letting us the choice to use any web framework we wanted to use.
Captions: 
	00:00:06,049 --> 00:00:16,550
the blue crew is based in truth and we

00:00:11,219 --> 00:00:19,980
are going to open in Paris we are 15

00:00:16,550 --> 00:00:22,680
collaborators and we are committed to

00:00:19,980 --> 00:00:28,740
the open source we make the depuy PLM

00:00:22,680 --> 00:00:36,570
server the card is still on get up so

00:00:28,740 --> 00:00:40,320
you can follow all the work a good

00:00:36,570 --> 00:00:44,820
leader world about me I am the dub dub

00:00:40,320 --> 00:00:49,620
p.m. dev leader and a technical trainer

00:00:44,820 --> 00:00:53,129
in our company I'm about 10 years of

00:00:49,620 --> 00:01:02,489
experience in web technologies mainly

00:00:53,129 --> 00:01:05,000
working with JavaScript and Java in the

00:01:02,489 --> 00:01:07,500
first part of this presentation will

00:01:05,000 --> 00:01:12,710
introduce the project lifecycle

00:01:07,500 --> 00:01:16,909
management everything around around it

00:01:12,710 --> 00:01:21,740
then we'll we'll talk about cad files

00:01:16,909 --> 00:01:26,100
what our cad files who use cad files and

00:01:21,740 --> 00:01:35,610
finally we're present our cross-platform

00:01:26,100 --> 00:01:40,350
solution based on html5 let's start with

00:01:35,610 --> 00:01:43,170
the introduction PRM stands for project

00:01:40,350 --> 00:01:46,560
lifecycle management it's all about

00:01:43,170 --> 00:01:49,649
managing the entire entire life cycle of

00:01:46,560 --> 00:01:54,540
a project from the conception to its

00:01:49,649 --> 00:01:57,899
disposal it involves and integrates many

00:01:54,540 --> 00:02:02,390
different people may need indifference

00:01:57,899 --> 00:02:06,180
that data some processes workflows

00:02:02,390 --> 00:02:09,799
business systems and everything provide

00:02:06,180 --> 00:02:09,799
a product information backbone

00:02:13,140 --> 00:02:20,650
we we are working in a PLM with what we

00:02:18,910 --> 00:02:24,640
called a prick project breakdown

00:02:20,650 --> 00:02:29,410
structure it's a rope representation of

00:02:24,640 --> 00:02:32,709
the other product which is a yucky core

00:02:29,410 --> 00:02:36,910
listing of assemblies and components the

00:02:32,709 --> 00:02:41,140
like a tree and the quantities on each

00:02:36,910 --> 00:02:52,299
node on which is necessary to produce

00:02:41,140 --> 00:02:59,140
the final product each node of PBS is

00:02:52,299 --> 00:03:04,420
called a part in our business each part

00:02:59,140 --> 00:03:08,019
stores every information of of a

00:03:04,420 --> 00:03:12,670
component basically its name its part

00:03:08,019 --> 00:03:17,100
number some custom attributes geometry

00:03:12,670 --> 00:03:22,620
files but also could be linked to

00:03:17,100 --> 00:03:29,620
documents spreadsheets issues others

00:03:22,620 --> 00:03:36,549
requests so it's the entry point of this

00:03:29,620 --> 00:03:40,980
structure each part is identified by its

00:03:36,549 --> 00:03:46,540
part number and you may find it at

00:03:40,980 --> 00:03:51,370
multiple TBS livers so for our example

00:03:46,540 --> 00:03:53,730
this is the kind of part numbers we are

00:03:51,370 --> 00:03:53,730
dealing with

00:03:57,250 --> 00:04:03,690
the parts can be an assembly or a leaf

00:04:04,050 --> 00:04:11,050
assam bleep stores and retains the

00:04:07,840 --> 00:04:16,299
structure information as the leaves

00:04:11,050 --> 00:04:21,850
stores the geometry an hour both

00:04:16,299 --> 00:04:27,550
considered as part here is a simple

00:04:21,850 --> 00:04:34,990
example of a PBS and the project is the

00:04:27,550 --> 00:04:39,220
office so i have a part which is named

00:04:34,990 --> 00:04:45,300
office at the top of the structure which

00:04:39,220 --> 00:04:50,800
is a revision revision a iteration 1 and

00:04:45,300 --> 00:04:54,750
under this part i will find other parts

00:04:50,800 --> 00:05:04,720
which are leaves which are the final

00:04:54,750 --> 00:05:08,560
part of the tree some of them are marked

00:05:04,720 --> 00:05:16,930
with a pencil and some with an eye this

00:05:08,560 --> 00:05:21,430
is a working copy or a release copy so

00:05:16,930 --> 00:05:25,990
you see there is there are many business

00:05:21,430 --> 00:05:29,760
involved not only computers or

00:05:25,990 --> 00:05:34,140
electronics manufacturers but also chair

00:05:29,760 --> 00:05:34,140
coffee cup and lights

00:05:38,699 --> 00:05:47,169
everything related the parts are tracked

00:05:44,490 --> 00:05:52,810
through a check-in check-out mechanism

00:05:47,169 --> 00:05:56,550
like svn commit or get commit and we are

00:05:52,810 --> 00:05:59,800
talking about iterations and religions

00:05:56,550 --> 00:06:08,949
the religions which are marked with

00:05:59,800 --> 00:06:12,340
letters ABC are our concern for major

00:06:08,949 --> 00:06:15,190
major changes whereas the rate

00:06:12,340 --> 00:06:21,729
iterations one two three are the

00:06:15,190 --> 00:06:24,460
iteration it's minor changes and the

00:06:21,729 --> 00:06:33,430
revision and the iteration makes the

00:06:24,460 --> 00:06:36,970
version now let's have a look on what

00:06:33,430 --> 00:06:45,789
our cad files who use them and how we

00:06:36,970 --> 00:06:50,460
under them our main target are cut

00:06:45,789 --> 00:06:55,960
designers they are editing the files

00:06:50,460 --> 00:06:59,229
designing 3d geometry files sometimes a

00:06:55,960 --> 00:07:03,699
lot of rice sometime that sometime small

00:06:59,229 --> 00:07:09,360
fire or sometime larger files then

00:07:03,699 --> 00:07:13,690
either to show to show this files to

00:07:09,360 --> 00:07:17,430
other collaborators which are involved

00:07:13,690 --> 00:07:20,949
in the manufacturing process for

00:07:17,430 --> 00:07:25,570
conception review for example so they

00:07:20,949 --> 00:07:28,630
need to synchronize it on server then

00:07:25,570 --> 00:07:31,210
the geometry file will be able for a

00:07:28,630 --> 00:07:35,590
display on a tablet or under this

00:07:31,210 --> 00:07:40,650
desktop on the display carrabba

00:07:35,590 --> 00:07:40,650
collaborative work is today a main topic

00:07:41,070 --> 00:07:48,820
everybody is involved in the interval

00:07:45,539 --> 00:07:54,240
manufacturing process

00:07:48,820 --> 00:07:57,460
and this is necessary today to

00:07:54,240 --> 00:08:05,560
synchronize on a server not on a local

00:07:57,460 --> 00:08:10,570
system in the local file system there

00:08:05,560 --> 00:08:14,920
are many formats in the industry some of

00:08:10,570 --> 00:08:20,220
them are standards from are not in the

00:08:14,920 --> 00:08:27,310
standard formats will find step EFC obg

00:08:20,220 --> 00:08:30,610
JSON also colada mm some other are not

00:08:27,310 --> 00:08:36,599
standard which are proprietary formats

00:08:30,610 --> 00:08:44,169
so we'll find solidworks generated part

00:08:36,599 --> 00:08:47,710
Katya and so on we we try to convert all

00:08:44,169 --> 00:08:51,070
of them we are not able to do it with

00:08:47,710 --> 00:08:54,400
Thunder Bay all the time so we need

00:08:51,070 --> 00:09:04,270
sometimes proprietary modules which are

00:08:54,400 --> 00:09:06,520
not committed in our main tree the

00:09:04,270 --> 00:09:10,210
contents of the CAD files can be

00:09:06,520 --> 00:09:14,190
different depending on the format some

00:09:10,210 --> 00:09:19,360
formats can contains geometry only on

00:09:14,190 --> 00:09:22,090
text format of binary format other

00:09:19,360 --> 00:09:31,240
formats can only contain strip structure

00:09:22,090 --> 00:09:38,620
and some can contain both the wpp RM

00:09:31,240 --> 00:09:42,760
server can endure many formats and try

00:09:38,620 --> 00:09:47,380
to convert them in a WebGL able capable

00:09:42,760 --> 00:09:49,960
format we try also to extract the

00:09:47,380 --> 00:09:53,500
structure from CAD files on which icon

00:09:49,960 --> 00:09:58,200
which contains some and we try to create

00:09:53,500 --> 00:09:58,200
the PBS in our system

00:09:58,450 --> 00:10:05,730
it may require operatory development yet

00:10:03,010 --> 00:10:16,120
to pass some non-standard formats like

00:10:05,730 --> 00:10:18,700
Katya or thur it works in the cad

00:10:16,120 --> 00:10:23,230
designer word there are so many asian

00:10:18,700 --> 00:10:27,370
tour's many platforms Windows Mac OS X

00:10:23,230 --> 00:10:31,240
Linux and some editors like autocad

00:10:27,370 --> 00:10:36,250
solidworks Katya beam editor freecad

00:10:31,240 --> 00:10:41,140
also or blender all different for

00:10:36,250 --> 00:10:46,210
different needs developing a plug-in is

00:10:41,140 --> 00:10:50,980
not realistic it would require much

00:10:46,210 --> 00:11:01,210
resources for a small company like us

00:10:50,980 --> 00:11:04,300
it's not possible it would also involved

00:11:01,210 --> 00:11:07,890
two to maintain every software product

00:11:04,300 --> 00:11:14,350
if we are developing a plug-in for Katya

00:11:07,890 --> 00:11:17,730
2.2 dot one will will must make it 4-2

00:11:14,350 --> 00:11:22,770
the two if if needed if the IP a change

00:11:17,730 --> 00:11:22,770
so this is not possible in our case

00:11:26,790 --> 00:11:32,560
there are also too many languages

00:11:30,400 --> 00:11:35,230
involved which will require to have a

00:11:32,560 --> 00:11:41,250
team which which have expertise

00:11:35,230 --> 00:11:45,280
expertise on all these languages we

00:11:41,250 --> 00:11:48,900
could also integrate in the operatic

00:11:45,280 --> 00:11:51,160
operate operating system of the designer

00:11:48,900 --> 00:11:54,550
that would be a great solution like

00:11:51,160 --> 00:11:59,470
total total desde el but this would

00:11:54,550 --> 00:12:02,260
require more than a single code base the

00:11:59,470 --> 00:12:04,510
easiest way for us to maintain a single

00:12:02,260 --> 00:12:09,510
code base is to develop a cross-platform

00:12:04,510 --> 00:12:09,510
application with two day technologies

00:12:14,400 --> 00:12:25,030
so first what we did is developed a

00:12:20,350 --> 00:12:29,620
command-line interface which is quite

00:12:25,030 --> 00:12:35,410
simple and fits for most advanced users

00:12:29,620 --> 00:12:40,900
and note this is scriptable it's very

00:12:35,410 --> 00:12:46,770
light it's java based so you still need

00:12:40,900 --> 00:12:50,080
a virtual machine it's easy to use and

00:12:46,770 --> 00:12:53,290
you can check in check out some files

00:12:50,080 --> 00:12:56,890
with a simple command-line in a single

00:12:53,290 --> 00:13:01,510
comment so like git checkout get prone

00:12:56,890 --> 00:13:08,740
and so on you just need to type DPM

00:13:01,510 --> 00:13:11,260
check in some part number existing but

00:13:08,740 --> 00:13:14,050
this lacks the graphical user interface

00:13:11,260 --> 00:13:17,620
to facilitate the work of the designers

00:13:14,050 --> 00:13:20,350
to easily make burke operations if you

00:13:17,620 --> 00:13:23,500
want to synchronize a whole folder you

00:13:20,350 --> 00:13:29,620
need to write your own script with the

00:13:23,500 --> 00:13:38,170
with our API this is possible but this

00:13:29,620 --> 00:13:44,260
doesn't fit for every user so we had to

00:13:38,170 --> 00:13:47,050
choose a technology for that which could

00:13:44,260 --> 00:13:50,410
be native web based but what do we need

00:13:47,050 --> 00:13:53,650
exactly we needed to read and write the

00:13:50,410 --> 00:13:56,830
users file system to be able to interact

00:13:53,650 --> 00:14:00,970
with our rest web services which produce

00:13:56,830 --> 00:14:04,000
Jason interact also with our command

00:14:00,970 --> 00:14:08,500
line interface which has already all the

00:14:04,000 --> 00:14:11,400
implementation also as a responsive

00:14:08,500 --> 00:14:19,990
design for each display each platform

00:14:11,400 --> 00:14:22,870
something that we can exactly design how

00:14:19,990 --> 00:14:23,410
we want and have no surprises depending

00:14:22,870 --> 00:14:27,459
the

00:14:23,410 --> 00:14:37,899
platform and also other 3d preview of

00:14:27,459 --> 00:14:42,939
the designers work so we choose not

00:14:37,899 --> 00:14:46,329
WebKit which covers all these needs not

00:14:42,939 --> 00:14:50,110
work it's basically just a nutshell

00:14:46,329 --> 00:14:53,829
which is wrapping kno jes and a webkit

00:14:50,110 --> 00:14:57,149
browser when you launch not work it from

00:14:53,829 --> 00:15:01,569
your command line this window appears

00:14:57,149 --> 00:15:05,470
you have already the operating system

00:15:01,569 --> 00:15:12,240
native window and you are in the WebKit

00:15:05,470 --> 00:15:15,509
environment and a node.js environment so

00:15:12,240 --> 00:15:19,060
at doc Dooku we love html5 we love

00:15:15,509 --> 00:15:25,300
JavaScript we lost under at the ice so

00:15:19,060 --> 00:15:32,290
we decided to use it it offers the all

00:15:25,300 --> 00:15:37,019
we need we have web kit for the display

00:15:32,290 --> 00:15:46,180
and we have the not GS low-level API to

00:15:37,019 --> 00:15:48,939
read write the file system and so on we

00:15:46,180 --> 00:15:53,410
can now discover your CAD files on the

00:15:48,939 --> 00:15:56,380
user desktop we can read them read them

00:15:53,410 --> 00:16:02,589
with their content display them in a in

00:15:56,380 --> 00:16:05,259
a 3d preview if the format is Tunde we

00:16:02,589 --> 00:16:08,139
have also on API to interact with our

00:16:05,259 --> 00:16:13,959
command line interface we can do it with

00:16:08,139 --> 00:16:16,449
node.js modules we have Watchers on the

00:16:13,959 --> 00:16:20,279
file system to detect any change on a

00:16:16,449 --> 00:16:24,670
file a file has been saved or deleted

00:16:20,279 --> 00:16:27,639
and we are in JavaScript so it's very

00:16:24,670 --> 00:16:31,410
easy to deal with jism which is the

00:16:27,639 --> 00:16:31,410
native object language

00:16:33,829 --> 00:16:45,660
on the other side WebKit allow us to

00:16:39,540 --> 00:16:51,660
create the design that we want to keep a

00:16:45,660 --> 00:16:55,470
single code base for each platform which

00:16:51,660 --> 00:16:59,629
is the most important point hello HTTP

00:16:55,470 --> 00:17:02,999
connections and easy jeezum passing and

00:16:59,629 --> 00:17:12,839
also to load a 3d file with the WebGL

00:17:02,999 --> 00:17:15,899
context of the browser there is not only

00:17:12,839 --> 00:17:20,399
benefit there's like there are some

00:17:15,899 --> 00:17:24,480
disadvantage to but we like to have one

00:17:20,399 --> 00:17:30,149
code base to can reuse code from our

00:17:24,480 --> 00:17:34,049
server because we are we also have a web

00:17:30,149 --> 00:17:36,529
web single page application which are

00:17:34,049 --> 00:17:38,899
which was already implemented before

00:17:36,529 --> 00:17:42,480
implemented implementing this

00:17:38,899 --> 00:17:46,520
application so we could reuse some of

00:17:42,480 --> 00:17:51,149
the classes we have a standard API

00:17:46,520 --> 00:17:56,610
javascript HTML 5 we can keep our fast

00:17:51,149 --> 00:18:00,779
development process and use the latest

00:17:56,610 --> 00:18:09,029
web technologies that are published on

00:18:00,779 --> 00:18:11,460
get up for example the last benefit of

00:18:09,029 --> 00:18:17,220
this technology is that it's very easy

00:18:11,460 --> 00:18:22,399
to package we just need to copy our j

00:18:17,220 --> 00:18:22,399
javascript and HTML file in the natural

00:18:23,270 --> 00:18:28,950
but on the other side we don't like so

00:18:26,039 --> 00:18:34,880
much the app size because we need to

00:18:28,950 --> 00:18:38,610
embed WebKit and not GS this is a

00:18:34,880 --> 00:18:42,240
disadvantage but it's an advantage we

00:18:38,610 --> 00:18:44,010
could see it as an advantage we are sure

00:18:42,240 --> 00:18:48,470
of what versions

00:18:44,010 --> 00:18:48,470
of what get and the GS we ended it

00:18:50,810 --> 00:18:59,330
certainly requires more RAM and CPU we

00:18:55,050 --> 00:19:07,080
need to instantiate a webkit browser and

00:18:59,330 --> 00:19:09,150
it's but we have said that of Java 20

00:19:07,080 --> 00:19:12,740
years ago java-- will not make it it's

00:19:09,150 --> 00:19:15,780
TV we need a virtual machine but mesh

00:19:12,740 --> 00:19:24,470
computers as getting faster and faster

00:19:15,780 --> 00:19:24,470
so it's not today a big disadvantage

00:19:24,650 --> 00:19:33,620
it's quite out to mimic the OS look and

00:19:29,520 --> 00:19:40,140
serum on which we are running the

00:19:33,620 --> 00:19:46,310
application some see some CSS libraries

00:19:40,140 --> 00:19:52,260
exists but we did not want to use them

00:19:46,310 --> 00:19:58,440
because a bad rule a bad mimic is it's

00:19:52,260 --> 00:20:02,820
not very good last point is that we rely

00:19:58,440 --> 00:20:09,620
on mud WebKit so we can inherit from the

00:20:02,820 --> 00:20:14,550
abrupt but will any time we and we

00:20:09,620 --> 00:20:26,310
encounter a blog we create an issue on

00:20:14,550 --> 00:20:32,060
the repo and try to help obviously so

00:20:26,310 --> 00:20:36,540
this is a screenshot of the application

00:20:32,060 --> 00:20:39,740
our solution is basil on not WebKit it's

00:20:36,540 --> 00:20:46,590
using angular as the main framework and

00:20:39,740 --> 00:20:49,350
it's you is used no J's API so the look

00:20:46,590 --> 00:20:52,080
and feel is not like your entire

00:20:49,350 --> 00:20:54,840
environment it's totally different we

00:20:52,080 --> 00:20:57,260
choose to have a material design

00:20:54,840 --> 00:20:57,260
approach

00:21:03,500 --> 00:21:10,980
this schema is very simplified it shows

00:21:07,889 --> 00:21:15,539
you how we integrate all these

00:21:10,980 --> 00:21:18,690
technologies so we are in the cad

00:21:15,539 --> 00:21:25,559
designer environment on his desktop we

00:21:18,690 --> 00:21:30,929
had calladita which produces fires on

00:21:25,559 --> 00:21:35,850
each file system our application stands

00:21:30,929 --> 00:21:40,139
in a node WebKit nutshell which embed

00:21:35,850 --> 00:21:42,630
not GS and WebKit we also embed our

00:21:40,139 --> 00:21:45,779
command line interface in the

00:21:42,630 --> 00:21:50,210
application to communicate with the file

00:21:45,779 --> 00:21:59,600
system and also with our server which

00:21:50,210 --> 00:22:04,409
which have web services exposed the

00:21:59,600 --> 00:22:08,970
command line interface on is called by

00:22:04,409 --> 00:22:13,710
the not GS API with Java module or bash

00:22:08,970 --> 00:22:17,669
module depending on the platform we have

00:22:13,710 --> 00:22:22,289
in the code so on if on our six or if

00:22:17,669 --> 00:22:27,809
one windows then do this or do that but

00:22:22,289 --> 00:22:39,029
we keep a single code base this is very

00:22:27,809 --> 00:22:42,389
for specific models so here's the

00:22:39,029 --> 00:22:46,320
application you have access to a remote

00:22:42,389 --> 00:22:51,149
and local navigation of your documents

00:22:46,320 --> 00:22:54,360
and parts in the side menu you have your

00:22:51,149 --> 00:23:00,360
local Ford earth and also the remote for

00:22:54,360 --> 00:23:04,049
the remote work spaces of the server Yun

00:23:00,360 --> 00:23:11,340
browsing the workspaces which is called

00:23:04,049 --> 00:23:13,889
my wks which shows me some parts you can

00:23:11,340 --> 00:23:19,799
see the part number on the version and

00:23:13,889 --> 00:23:24,570
the relay related Cadfael you you know

00:23:19,799 --> 00:23:27,419
when you checked out this part and you

00:23:24,570 --> 00:23:34,320
know if you are editing it or just

00:23:27,419 --> 00:23:41,059
seeing it we benefit from the angular a

00:23:34,320 --> 00:23:46,320
payee on filters list displays facility

00:23:41,059 --> 00:23:56,750
to interact and to bring a great user

00:23:46,320 --> 00:24:00,240
experience it's not just limited to part

00:23:56,750 --> 00:24:03,860
sometimes you want to open the

00:24:00,240 --> 00:24:14,309
documentation of a part which is

00:24:03,860 --> 00:24:19,080
available in the documents tab we also

00:24:14,309 --> 00:24:24,210
have a file change detection with no GS

00:24:19,080 --> 00:24:28,309
we we can know if the part has been

00:24:24,210 --> 00:24:31,580
modified on the user's file system and

00:24:28,309 --> 00:24:34,409
if it's not synchronized with the server

00:24:31,580 --> 00:24:36,629
so we have a green check that means it's

00:24:34,409 --> 00:24:43,289
synchronized and orange cloud which

00:24:36,629 --> 00:24:47,639
means it's modified then if it's

00:24:43,289 --> 00:24:52,080
modified the the buttons are not the

00:24:47,639 --> 00:24:56,039
same that if it's synchronized here I

00:24:52,080 --> 00:24:58,370
can check in or just put my work under

00:24:56,039 --> 00:24:58,370
southern

00:25:05,110 --> 00:25:13,790
we also implemented on a right-click

00:25:08,240 --> 00:25:17,270
yosef downloader if you check out a part

00:25:13,790 --> 00:25:21,560
which is unnecessary you can choose to

00:25:17,270 --> 00:25:26,780
or to also check out of all its children

00:25:21,560 --> 00:25:32,900
and in the meantime download or CAD

00:25:26,780 --> 00:25:36,550
files then you can imagine to download a

00:25:32,900 --> 00:25:41,480
full airplane structure in a specific

00:25:36,550 --> 00:25:44,030
configuration to change the

00:25:41,480 --> 00:25:48,380
configuration you can select what is

00:25:44,030 --> 00:25:58,180
called a baseline latest is like svn

00:25:48,380 --> 00:26:15,320
head you can also select where to save

00:25:58,180 --> 00:26:17,390
all this fight the the cad designer with

00:26:15,320 --> 00:26:20,750
the command line interface could not

00:26:17,390 --> 00:26:23,600
synchronize magnifiers on in a single

00:26:20,750 --> 00:26:26,840
operation here with the graphical user

00:26:23,600 --> 00:26:29,780
interface we can have one button for all

00:26:26,840 --> 00:26:35,720
of them and synchronize all further in

00:26:29,780 --> 00:26:40,280
one click every part which is modifying

00:26:35,720 --> 00:26:44,020
with the era orange cloud icon we will

00:26:40,280 --> 00:26:44,020
be synchronized with the sorrow

00:26:50,470 --> 00:26:57,650
another feature is to have a live

00:26:53,510 --> 00:27:01,429
preview of the part before putting it on

00:26:57,650 --> 00:27:05,809
the server which use the same 3d engine

00:27:01,429 --> 00:27:09,650
than our web application desktop

00:27:05,809 --> 00:27:14,900
application so the part will like will

00:27:09,650 --> 00:27:28,309
look like exactly like we see it in in

00:27:14,900 --> 00:27:30,620
the application we would like to improve

00:27:28,309 --> 00:27:36,429
this application it's not perfect on

00:27:30,620 --> 00:27:38,809
many points and there are some new

00:27:36,429 --> 00:27:43,549
JavaScript API so that could bring

00:27:38,809 --> 00:27:46,580
desktop notifications which can tell the

00:27:43,549 --> 00:27:50,990
user that the synchronization is over or

00:27:46,580 --> 00:27:55,360
other actions we need to have also a

00:27:50,990 --> 00:27:58,640
better error handling typically for

00:27:55,360 --> 00:28:03,409
access control limits this is quite

00:27:58,640 --> 00:28:06,520
difficult to endure typically when you

00:28:03,409 --> 00:28:13,010
try to check out a horseshoe structure

00:28:06,520 --> 00:28:15,710
recursively we bring some other

00:28:13,010 --> 00:28:20,690
shortcuts to directly open the part in

00:28:15,710 --> 00:28:24,860
the users favorite editor and also when

00:28:20,690 --> 00:28:28,370
synchronizing many file at once some

00:28:24,860 --> 00:28:31,690
files could be linked in a structure so

00:28:28,370 --> 00:28:36,590
we need to have a smart check in order

00:28:31,690 --> 00:28:40,429
to push them on server side to prevent

00:28:36,590 --> 00:28:49,029
some several mechanism which would not

00:28:40,429 --> 00:28:52,029
be whichever and some other features

00:28:49,029 --> 00:28:52,029

YouTube URL: https://www.youtube.com/watch?v=s5ojFBJOaGo


