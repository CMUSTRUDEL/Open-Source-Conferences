Title: Introduction to ROS and Gazebo Workshop
Publication date: 2021-04-21
Playlist: FOSSASIA Summit 2021
Description: 
	ROS is a collection of tools, libraries, and conventions that aim to simplify the task of creating complex and robust robot behaviour across a wide variety of robotic platforms. Gazebo is a robotics simulator that allows to accurately and efficiently simulate populations of robots in complex indoor and outdoor environments. In this workshop, In this workshop we will guide you through a step by step practical session on how to develop robotics software with ROS and how Gazebo can help you test your robotics software so it is ready for the real world once you move it to a real robot.
Captions: 
	00:00:00,320 --> 00:00:03,520
it's used by some data scientists in

00:00:02,560 --> 00:00:06,480
production

00:00:03,520 --> 00:00:08,639
uh at least for prototyping and and

00:00:06,480 --> 00:00:11,759
getting some idea of what they

00:00:08,639 --> 00:00:14,160
want to do so if you go to this

00:00:11,759 --> 00:00:15,200
uh i think michael uh wrote it there

00:00:14,160 --> 00:00:17,199
yeah michael

00:00:15,200 --> 00:00:20,320
uh put the address there so if you guys

00:00:17,199 --> 00:00:22,800
go to collab research.google.com

00:00:20,320 --> 00:00:24,800
then you can create a new notebook by

00:00:22,800 --> 00:00:28,080
clicking on on new notebook and

00:00:24,800 --> 00:00:30,960
you will just see an empty one

00:00:28,080 --> 00:00:33,680
so oh this is because i'm not signing in

00:00:30,960 --> 00:00:35,840
yeah so you need the

00:00:33,680 --> 00:00:36,880
you need the account of google to create

00:00:35,840 --> 00:00:38,480
it so

00:00:36,880 --> 00:00:41,200
you will see something like this once

00:00:38,480 --> 00:00:44,160
you once you have created it

00:00:41,200 --> 00:00:45,440
um you guys uh i want you guys to give

00:00:44,160 --> 00:00:45,840
me some feedback every now and then

00:00:45,440 --> 00:00:48,079
because

00:00:45,840 --> 00:00:49,440
i want i want to see people is following

00:00:48,079 --> 00:00:53,360
so is is people

00:00:49,440 --> 00:00:53,360
able to to get the call up running

00:00:54,640 --> 00:01:00,000
can you guys uh write down a yes or no

00:00:57,600 --> 00:01:02,480
if they be running into problems

00:01:00,000 --> 00:01:03,440
all right yeah thank you guys that's

00:01:02,480 --> 00:01:08,080
good

00:01:03,440 --> 00:01:12,400
perfect um next things

00:01:08,080 --> 00:01:14,640
uh all right so usually this is

00:01:12,400 --> 00:01:15,439
uh used for it it's mostly used for

00:01:14,640 --> 00:01:17,360
python

00:01:15,439 --> 00:01:18,880
because it's got a python on the

00:01:17,360 --> 00:01:21,600
background but we're gonna

00:01:18,880 --> 00:01:22,080
do a bit of a hack i like to use this

00:01:21,600 --> 00:01:25,439
tool

00:01:22,080 --> 00:01:28,799
on workshops because it's very easy

00:01:25,439 --> 00:01:30,960
and i

00:01:28,799 --> 00:01:33,360
i want uh so what we don't what we're

00:01:30,960 --> 00:01:35,759
gonna do it's um

00:01:33,360 --> 00:01:37,040
it's gonna be a bit of a a hack because

00:01:35,759 --> 00:01:38,640
we're gonna install stuff

00:01:37,040 --> 00:01:40,560
on the this is this runs in the

00:01:38,640 --> 00:01:43,840
background on ubuntu machine

00:01:40,560 --> 00:01:46,799
so we're gonna we're gonna install uh

00:01:43,840 --> 00:01:47,680
uh a ros system and then we're gonna try

00:01:46,799 --> 00:01:50,560
to create

00:01:47,680 --> 00:01:52,720
uh some stuff with the ros so everything

00:01:50,560 --> 00:01:55,280
is not gonna be 100 smooth

00:01:52,720 --> 00:01:56,479
uh some things uh sometimes the the

00:01:55,280 --> 00:01:58,079
collapse system will

00:01:56,479 --> 00:01:59,920
bring it down and then we have to bring

00:01:58,079 --> 00:02:03,360
them up again but uh

00:01:59,920 --> 00:02:05,920
hopefully we can manage uh

00:02:03,360 --> 00:02:06,960
i've been trying it uh for quite a while

00:02:05,920 --> 00:02:10,080
and it seems to

00:02:06,960 --> 00:02:12,160
to to work okay and

00:02:10,080 --> 00:02:14,400
and i think it's a much better way than

00:02:12,160 --> 00:02:17,360
and having to install the entire system

00:02:14,400 --> 00:02:19,760
because to be honest um ros is not a

00:02:17,360 --> 00:02:23,280
very simple system it's a bit heavy

00:02:19,760 --> 00:02:25,120
so um it might be very overwhelming to

00:02:23,280 --> 00:02:25,840
to cope with the entire install and all

00:02:25,120 --> 00:02:28,080
that

00:02:25,840 --> 00:02:29,040
and and systems different systems

00:02:28,080 --> 00:02:30,800
different people

00:02:29,040 --> 00:02:32,640
have different problems and and that can

00:02:30,800 --> 00:02:33,599
delay a lot of the work so so that's why

00:02:32,640 --> 00:02:36,319
i decided to go

00:02:33,599 --> 00:02:38,400
with a bit of the haki version of

00:02:36,319 --> 00:02:40,959
running everything on cola

00:02:38,400 --> 00:02:41,519
so let's let's go and see how it is so

00:02:40,959 --> 00:02:44,319
cola

00:02:41,519 --> 00:02:45,040
for those of you that don't know it has

00:02:44,319 --> 00:02:48,480
two

00:02:45,040 --> 00:02:49,680
um two main features so basically you

00:02:48,480 --> 00:02:53,040
can write code

00:02:49,680 --> 00:02:55,360
on on the cells this is a cell

00:02:53,040 --> 00:02:56,319
like write down what you see here it's a

00:02:55,360 --> 00:02:59,519
cell

00:02:56,319 --> 00:03:01,920
so i can just write code here um like i

00:02:59,519 --> 00:03:01,920
can say

00:03:02,239 --> 00:03:09,040
print and i can say hello

00:03:05,760 --> 00:03:11,440
right so this

00:03:09,040 --> 00:03:12,319
and then i can press the you can press

00:03:11,440 --> 00:03:15,120
the

00:03:12,319 --> 00:03:17,200
play here it takes a while because it

00:03:15,120 --> 00:03:19,440
was initializing and all that

00:03:17,200 --> 00:03:20,640
and and i said print hello and it's

00:03:19,440 --> 00:03:24,560
printing hello

00:03:20,640 --> 00:03:27,440
uh and this is python code right so

00:03:24,560 --> 00:03:29,599
what we're writing here it's uh in in

00:03:27,440 --> 00:03:32,640
these cells it's python code

00:03:29,599 --> 00:03:33,840
but um today we're not gonna write

00:03:32,640 --> 00:03:36,560
python code we're gonna write

00:03:33,840 --> 00:03:37,599
c plus plus code uh don't worry if you

00:03:36,560 --> 00:03:38,879
don't know about it you're not gonna

00:03:37,599 --> 00:03:42,319
have to write it

00:03:38,879 --> 00:03:44,080
um you're not gonna have to uh i'll

00:03:42,319 --> 00:03:46,319
explain every single line that we

00:03:44,080 --> 00:03:48,319
that we go through so should be should

00:03:46,319 --> 00:03:50,159
be quite easy for everyone

00:03:48,319 --> 00:03:52,159
so as i said every single one of these

00:03:50,159 --> 00:03:54,560
cells will be a piece of code

00:03:52,159 --> 00:03:55,680
but you can also add text so if you

00:03:54,560 --> 00:03:58,080
click on text

00:03:55,680 --> 00:04:00,080
you can you'll see that there's the the

00:03:58,080 --> 00:04:00,720
cell that appears is different and you

00:04:00,080 --> 00:04:04,239
can say

00:04:00,720 --> 00:04:07,360
uh this is

00:04:04,239 --> 00:04:09,519
some title right

00:04:07,360 --> 00:04:10,799
and then this is something that you can

00:04:09,519 --> 00:04:13,200
even give it like some

00:04:10,799 --> 00:04:13,920
title format or whatever and then once

00:04:13,200 --> 00:04:16,560
you

00:04:13,920 --> 00:04:16,959
execute this uh you can you can press

00:04:16,560 --> 00:04:18,959
shift

00:04:16,959 --> 00:04:20,799
enter and then you will get some title

00:04:18,959 --> 00:04:24,000
so this is very nice for you to

00:04:20,799 --> 00:04:24,740
uh give some sections to you do whatever

00:04:24,000 --> 00:04:26,840
we're doing here

00:04:24,740 --> 00:04:30,720
[Music]

00:04:26,840 --> 00:04:32,960
um so

00:04:30,720 --> 00:04:34,000
just keep in mind that there's a title

00:04:32,960 --> 00:04:36,080
bar

00:04:34,000 --> 00:04:37,440
there's there's text and code and you

00:04:36,080 --> 00:04:39,919
can use the text to

00:04:37,440 --> 00:04:42,000
intersect between the code so to make it

00:04:39,919 --> 00:04:43,919
look nicer or to give sections

00:04:42,000 --> 00:04:46,160
to whatever we're doing i'll try to do

00:04:43,919 --> 00:04:48,800
that myself sometimes i forget

00:04:46,160 --> 00:04:49,520
uh i'll try to add some some text so you

00:04:48,800 --> 00:04:51,759
guys can

00:04:49,520 --> 00:04:53,360
can can follow up so for example this

00:04:51,759 --> 00:04:54,400
one i'm gonna call it um

00:04:53,360 --> 00:04:55,919
[Music]

00:04:54,400 --> 00:04:58,160
we're gonna we're gonna we're gonna

00:04:55,919 --> 00:05:01,440
start with like an installation of

00:04:58,160 --> 00:05:02,560
of the basic ros install ross

00:05:01,440 --> 00:05:04,960
so this is the first thing that i'm

00:05:02,560 --> 00:05:06,720
gonna do and i'm gonna remove this one

00:05:04,960 --> 00:05:09,360
i'm gonna start with uh

00:05:06,720 --> 00:05:10,800
i'm gonna remove the example of printing

00:05:09,360 --> 00:05:14,479
and we're going to start by

00:05:10,800 --> 00:05:17,759
installing the ros um

00:05:14,479 --> 00:05:18,720
another thing that i want to explain

00:05:17,759 --> 00:05:21,440
before we

00:05:18,720 --> 00:05:21,440
we go ahead

00:05:22,080 --> 00:05:30,639
is that in this workshop we're gonna use

00:05:26,320 --> 00:05:32,400
uh ros one but i don't encourage anyone

00:05:30,639 --> 00:05:34,160
to use ros one because ross one

00:05:32,400 --> 00:05:36,800
is at the end of his life so the last

00:05:34,160 --> 00:05:38,400
version of ross came out already

00:05:36,800 --> 00:05:40,960
and it's going to end up i think it's

00:05:38,400 --> 00:05:43,440
around 2025

00:05:40,960 --> 00:05:45,520
but ros 2 is already at a stage that is

00:05:43,440 --> 00:05:47,840
ready for everyone to be used

00:05:45,520 --> 00:05:49,840
uh the problem is and and that's the

00:05:47,840 --> 00:05:53,600
reason why we're not using ros 2

00:05:49,840 --> 00:05:55,039
today here is that the version of ubuntu

00:05:53,600 --> 00:05:58,240
that runs in

00:05:55,039 --> 00:06:00,080
behind cola it's a specific version

00:05:58,240 --> 00:06:02,080
uh that contains a specific version of

00:06:00,080 --> 00:06:05,600
python so

00:06:02,080 --> 00:06:08,800
uh installing rost2 was a headache

00:06:05,600 --> 00:06:09,759
and and it took for a long time i i was

00:06:08,800 --> 00:06:12,319
trying to compile

00:06:09,759 --> 00:06:14,160
and and i was not even successful so

00:06:12,319 --> 00:06:15,840
there was a point that i gave up on that

00:06:14,160 --> 00:06:17,360
and i think the concepts that we're

00:06:15,840 --> 00:06:20,000
gonna explain today

00:06:17,360 --> 00:06:20,639
are quite understandable with the ros

00:06:20,000 --> 00:06:23,039
version

00:06:20,639 --> 00:06:24,080
that comes along with the ubuntu

00:06:23,039 --> 00:06:27,199
installation

00:06:24,080 --> 00:06:30,000
of of collab so i think it's it's

00:06:27,199 --> 00:06:30,720
it's enough for us to to grab the

00:06:30,000 --> 00:06:32,880
concepts

00:06:30,720 --> 00:06:34,240
that we're going to try to explain today

00:06:32,880 --> 00:06:36,479
but um

00:06:34,240 --> 00:06:37,919
if you want to get into ros and after

00:06:36,479 --> 00:06:41,280
this you want to do your

00:06:37,919 --> 00:06:41,680
own um your own tests or you want to do

00:06:41,280 --> 00:06:44,960
your

00:06:41,680 --> 00:06:48,639
your own deployments at home uh

00:06:44,960 --> 00:06:50,880
please i encourage you to do roast do

00:06:48,639 --> 00:06:53,199
preferably on the latest version so you

00:06:50,880 --> 00:06:56,240
can you can already start working on

00:06:53,199 --> 00:06:57,280
on the latest stuff but yeah as i said

00:06:56,240 --> 00:06:58,319
today

00:06:57,280 --> 00:06:59,919
things are going to be a little bit

00:06:58,319 --> 00:07:01,759
different i'll try to explain the

00:06:59,919 --> 00:07:02,800
differences between what we're doing and

00:07:01,759 --> 00:07:06,160
ros2

00:07:02,800 --> 00:07:06,800
so whoever uh whoever starts with draws2

00:07:06,160 --> 00:07:10,000
later

00:07:06,800 --> 00:07:13,520
can can go on and and

00:07:10,000 --> 00:07:17,199
and learn all that uh from

00:07:13,520 --> 00:07:17,919
uh from today um so the first thing that

00:07:17,199 --> 00:07:20,639
we're gonna do

00:07:17,919 --> 00:07:22,639
is that because this is an ubuntu

00:07:20,639 --> 00:07:25,840
machine we're gonna do

00:07:22,639 --> 00:07:30,800
um we have to also one thing that uh

00:07:25,840 --> 00:07:33,919
these cells are ready to to run um

00:07:30,800 --> 00:07:35,599
certain commands and python code so

00:07:33,919 --> 00:07:37,199
it only supports certain commands on

00:07:35,599 --> 00:07:39,280
python code so when we run and

00:07:37,199 --> 00:07:41,039
want to run a linus command we have to

00:07:39,280 --> 00:07:43,120
put an exclamation mark

00:07:41,039 --> 00:07:44,960
so i'm gonna put an exclamation mark and

00:07:43,120 --> 00:07:48,720
i'm gonna do apt

00:07:44,960 --> 00:07:50,400
get update which is basically to update

00:07:48,720 --> 00:07:53,039
the repositories for those of you that

00:07:50,400 --> 00:07:55,199
know uh debian you already know this one

00:07:53,039 --> 00:07:57,520
i'm basically just updating the repos on

00:07:55,199 --> 00:08:00,720
the system right now

00:07:57,520 --> 00:08:02,560
right so everybody should be uh able to

00:08:00,720 --> 00:08:04,479
do this and get all the

00:08:02,560 --> 00:08:05,759
the packages installed uh not the

00:08:04,479 --> 00:08:07,759
packages updated

00:08:05,759 --> 00:08:12,960
so now we have all the list of packages

00:08:07,759 --> 00:08:14,960
uh updated from the repost

00:08:12,960 --> 00:08:16,319
and you know it already comes with a

00:08:14,960 --> 00:08:18,240
version of ros that we're going to

00:08:16,319 --> 00:08:21,680
install

00:08:18,240 --> 00:08:25,120
so we're going to do exclamation mark ft

00:08:21,680 --> 00:08:28,479
get install ros bass

00:08:25,120 --> 00:08:32,320
that so this is um raw space

00:08:28,479 --> 00:08:34,880
is uh ross always comes with different

00:08:32,320 --> 00:08:35,519
meta packages that will install a

00:08:34,880 --> 00:08:37,680
certain

00:08:35,519 --> 00:08:38,719
group of packages that will get you

00:08:37,680 --> 00:08:41,760
started with ros

00:08:38,719 --> 00:08:44,000
so this basically will install the ros

00:08:41,760 --> 00:08:45,040
based uh part that we need for

00:08:44,000 --> 00:08:47,680
development

00:08:45,040 --> 00:08:50,240
so we're gonna go ahead and and execute

00:08:47,680 --> 00:08:50,240
this cell

00:08:52,720 --> 00:08:57,360
and this is gonna take a while and

00:08:55,760 --> 00:09:01,680
you'll see like there's a lot of

00:08:57,360 --> 00:09:01,680
text coming out and all this so

00:09:03,600 --> 00:09:07,279
because this is gonna take a while um

00:09:06,080 --> 00:09:09,040
i'm gonna go ahead

00:09:07,279 --> 00:09:12,560
and and do a little bit of a

00:09:09,040 --> 00:09:12,560
presentation on

00:09:12,720 --> 00:09:18,399
on the on on on on what we do

00:09:16,399 --> 00:09:19,440
and all that and a bit of a bit of the

00:09:18,399 --> 00:09:20,160
introduction of what we're gonna do

00:09:19,440 --> 00:09:23,360
today

00:09:20,160 --> 00:09:26,000
uh while the whole thing is installing

00:09:23,360 --> 00:09:26,720
um anyone having problems uh just

00:09:26,000 --> 00:09:30,800
writing me

00:09:26,720 --> 00:09:30,800
on the on the chat so i can have a

00:09:32,080 --> 00:09:37,760
all right um

00:09:36,399 --> 00:09:39,760
let me know if you guys are running into

00:09:37,760 --> 00:09:41,440
problems so i can solve them i can send

00:09:39,760 --> 00:09:42,720
you some tips

00:09:41,440 --> 00:09:45,519
all right so i'll run into the

00:09:42,720 --> 00:09:48,720
presentation and

00:09:45,519 --> 00:09:50,720
this is a little bit um

00:09:48,720 --> 00:09:52,160
all right this is a little bit for those

00:09:50,720 --> 00:09:55,519
of you that were not here

00:09:52,160 --> 00:09:58,720
um yesterday on my talk

00:09:55,519 --> 00:09:59,760
and and also to refresh a bit of the

00:09:58,720 --> 00:10:03,120
concepts that we

00:09:59,760 --> 00:10:06,320
see today right uh so yes

00:10:03,120 --> 00:10:07,920
uh i my name is marco and i work at uh

00:10:06,320 --> 00:10:10,959
open robotics

00:10:07,920 --> 00:10:13,440
and we have two main softwares

00:10:10,959 --> 00:10:15,040
uh one that is called ross uh and that

00:10:13,440 --> 00:10:16,000
is the one that we're gonna mainly use

00:10:15,040 --> 00:10:18,079
today

00:10:16,000 --> 00:10:19,120
and i'll do a little bit of a show on

00:10:18,079 --> 00:10:22,079
gazebo

00:10:19,120 --> 00:10:22,640
so people can uh get an idea of what it

00:10:22,079 --> 00:10:24,320
is

00:10:22,640 --> 00:10:25,839
so ross is basically to write the

00:10:24,320 --> 00:10:29,839
software for the robots

00:10:25,839 --> 00:10:32,640
and gazebo it's for uh simulating robots

00:10:29,839 --> 00:10:33,279
so basically the idea is that um you use

00:10:32,640 --> 00:10:35,360
ros

00:10:33,279 --> 00:10:37,120
to write the software you test it in

00:10:35,360 --> 00:10:38,160
gazebo and then you move the same the

00:10:37,120 --> 00:10:40,480
same software

00:10:38,160 --> 00:10:41,680
into into a robot and it should work the

00:10:40,480 --> 00:10:44,720
same way

00:10:41,680 --> 00:10:44,959
so a little bit about who we are uh we

00:10:44,720 --> 00:10:48,079
are

00:10:44,959 --> 00:10:49,839
open robotics and we like to create open

00:10:48,079 --> 00:10:51,839
software and hardware platforms for

00:10:49,839 --> 00:10:53,760
robotics and we like to use those

00:10:51,839 --> 00:10:56,880
platforms to solve important problems

00:10:53,760 --> 00:11:00,320
and help others do the same

00:10:56,880 --> 00:11:03,200
um there's three uh

00:11:00,320 --> 00:11:03,680
main projects that we are working on um

00:11:03,200 --> 00:11:06,480
ross

00:11:03,680 --> 00:11:07,360
which is the uh the one that we're

00:11:06,480 --> 00:11:10,399
seeing today

00:11:07,360 --> 00:11:14,320
uh androstu which is the current and

00:11:10,399 --> 00:11:14,320
and latest version of ross

00:11:15,279 --> 00:11:19,279
then we also have the simulation part

00:11:17,360 --> 00:11:21,040
where we have gazebo

00:11:19,279 --> 00:11:22,560
and then we also have a rewrite which is

00:11:21,040 --> 00:11:25,360
ignition which is a

00:11:22,560 --> 00:11:25,839
a bit of a decoupled version of gazebo

00:11:25,360 --> 00:11:27,120
with

00:11:25,839 --> 00:11:29,680
different libraries that you can use

00:11:27,120 --> 00:11:32,160
separately or together

00:11:29,680 --> 00:11:33,440
however you want and then we have rmf

00:11:32,160 --> 00:11:34,399
which is the robotics middleware

00:11:33,440 --> 00:11:36,800
framework

00:11:34,399 --> 00:11:38,720
which is what we're working in uh here

00:11:36,800 --> 00:11:42,000
in singapore

00:11:38,720 --> 00:11:44,959
and it's basically a middleware

00:11:42,000 --> 00:11:45,600
for to integrate multi multi-fleet

00:11:44,959 --> 00:11:48,800
robots

00:11:45,600 --> 00:11:52,560
um multiflix uh

00:11:48,800 --> 00:11:55,519
robots with infrastructure lifts

00:11:52,560 --> 00:11:56,000
managing traffic and everything that you

00:11:55,519 --> 00:11:58,880
need to

00:11:56,000 --> 00:12:00,959
run tasks in in this in big different

00:11:58,880 --> 00:12:04,480
infrastructures

00:12:00,959 --> 00:12:08,000
um yeah so that's what we're doing here

00:12:04,480 --> 00:12:10,959
um so now uh

00:12:08,000 --> 00:12:12,560
explaining a bit about ross so ross

00:12:10,959 --> 00:12:13,120
despite its name is not an operating

00:12:12,560 --> 00:12:16,560
system

00:12:13,120 --> 00:12:19,760
it's mostly a set of tools and libraries

00:12:16,560 --> 00:12:23,519
that makes easier the task

00:12:19,760 --> 00:12:26,720
of developing robots so there's uh

00:12:23,519 --> 00:12:29,839
four pillars of of ross

00:12:26,720 --> 00:12:32,480
um one of them is the plum beam

00:12:29,839 --> 00:12:33,120
so the plumbing it's a message passing

00:12:32,480 --> 00:12:36,079
system

00:12:33,120 --> 00:12:36,639
that allows you to connect different uh

00:12:36,079 --> 00:12:39,360
parts

00:12:36,639 --> 00:12:41,440
of the system and let them pass

00:12:39,360 --> 00:12:44,480
information to each other

00:12:41,440 --> 00:12:46,959
um in robotics the

00:12:44,480 --> 00:12:48,079
the way we develop things in robotics is

00:12:46,959 --> 00:12:50,560
very

00:12:48,079 --> 00:12:52,560
uh distributed i would say so you would

00:12:50,560 --> 00:12:53,360
have different processes doing different

00:12:52,560 --> 00:12:56,399
tasks

00:12:53,360 --> 00:12:58,880
and then you would have a message

00:12:56,399 --> 00:13:00,000
passage in passing between them so let's

00:12:58,880 --> 00:13:02,880
say you would have a

00:13:00,000 --> 00:13:03,440
camera that grabs an image and then you

00:13:02,880 --> 00:13:05,600
would use

00:13:03,440 --> 00:13:06,800
you would send that image to an

00:13:05,600 --> 00:13:08,959
algorithm that will do

00:13:06,800 --> 00:13:10,399
some facial recognition and then you

00:13:08,959 --> 00:13:12,079
would do uh

00:13:10,399 --> 00:13:13,440
you will do the face selection and you

00:13:12,079 --> 00:13:14,959
will send that information

00:13:13,440 --> 00:13:16,560
to some other part of the robot that

00:13:14,959 --> 00:13:17,360
does something different so this

00:13:16,560 --> 00:13:19,920
plumbing

00:13:17,360 --> 00:13:20,800
is um i would say is one of the main

00:13:19,920 --> 00:13:23,360
things that ross

00:13:20,800 --> 00:13:24,399
uh provides and it's one of the things

00:13:23,360 --> 00:13:27,120
that we're going to

00:13:24,399 --> 00:13:29,519
uh play around with today marco can i

00:13:27,120 --> 00:13:30,160
pause you for just a moment to ask you

00:13:29,519 --> 00:13:32,480
to

00:13:30,160 --> 00:13:33,600
stop your screen share and restart your

00:13:32,480 --> 00:13:35,680
screen share

00:13:33,600 --> 00:13:37,440
we're just trying to debug something on

00:13:35,680 --> 00:13:40,560
our youtube live stream

00:13:37,440 --> 00:13:44,830
yeah sure um i will do it

00:13:40,560 --> 00:13:46,639
right away thank you so much

00:13:44,830 --> 00:13:49,839
[Music]

00:13:46,639 --> 00:13:49,839
and rerun screenshot

00:14:00,839 --> 00:14:03,839
um

00:14:05,920 --> 00:14:09,600
all right let me check can i activate my

00:14:08,639 --> 00:14:11,839
gum

00:14:09,600 --> 00:14:11,839
all right

00:14:13,120 --> 00:14:17,360
okay thank you we'll we'll keep looking

00:14:14,880 --> 00:14:23,279
from our side thanks

00:14:17,360 --> 00:14:23,279
all right so um i shall continue right

00:14:24,639 --> 00:14:31,360
all right okay

00:14:27,760 --> 00:14:32,720
seems okay all right so we were talking

00:14:31,360 --> 00:14:34,480
about plumbing which is one of the

00:14:32,720 --> 00:14:36,800
things that we're going to test today

00:14:34,480 --> 00:14:36,800
and then

00:14:37,760 --> 00:14:42,160
ross also provide tools which is

00:14:40,320 --> 00:14:45,199
basically a bunch of tools that

00:14:42,160 --> 00:14:48,959
allows you to interact with uh

00:14:45,199 --> 00:14:51,680
whatever you developed uh inspect it

00:14:48,959 --> 00:14:52,720
uh lock it replay it uh do different

00:14:51,680 --> 00:14:54,240
things to it

00:14:52,720 --> 00:14:57,600
we also gonna play it a little bit with

00:14:54,240 --> 00:14:59,680
it there's a few tools that have a gui

00:14:57,600 --> 00:15:01,360
sadly because we're using this google

00:14:59,680 --> 00:15:05,440
collab thing

00:15:01,360 --> 00:15:08,560
we won't be able today to um

00:15:05,440 --> 00:15:10,399
to to use the gui tools

00:15:08,560 --> 00:15:12,000
but uh we'll be using some of the

00:15:10,399 --> 00:15:15,440
command line versions

00:15:12,000 --> 00:15:17,120
and and and we'll see how those work

00:15:15,440 --> 00:15:19,360
and then we have capabilities which are

00:15:17,120 --> 00:15:21,279
mainly um

00:15:19,360 --> 00:15:22,480
very cool algorithms that very smart

00:15:21,279 --> 00:15:25,040
people developed and

00:15:22,480 --> 00:15:25,760
are ready for you to be used like for

00:15:25,040 --> 00:15:28,000
example

00:15:25,760 --> 00:15:30,160
if you're doing navigation you can run

00:15:28,000 --> 00:15:32,959
uh localization algorithm

00:15:30,160 --> 00:15:34,480
uh obstacle avoidance or or whatever

00:15:32,959 --> 00:15:36,480
it's already there right

00:15:34,480 --> 00:15:37,920
and then there's an entire ecosystem

00:15:36,480 --> 00:15:39,600
because this is open source

00:15:37,920 --> 00:15:41,360
then you have an entire ecosystem of

00:15:39,600 --> 00:15:44,560
users uh

00:15:41,360 --> 00:15:44,880
developers and code that you can build

00:15:44,560 --> 00:15:47,519
up

00:15:44,880 --> 00:15:50,000
when you're when you're working on on

00:15:47,519 --> 00:15:50,000
ros right

00:15:51,360 --> 00:15:55,360
all right so a little bit of the

00:15:54,560 --> 00:15:58,399
architecture

00:15:55,360 --> 00:16:00,399
and and i think this is important

00:15:58,399 --> 00:16:02,079
there's the there's uh differences in

00:16:00,399 --> 00:16:04,320
ross and ros2

00:16:02,079 --> 00:16:05,120
because mainly because rose 2 is a

00:16:04,320 --> 00:16:08,320
rewrite

00:16:05,120 --> 00:16:09,040
of ross uh keeping in mind everything

00:16:08,320 --> 00:16:11,839
that we learned

00:16:09,040 --> 00:16:12,560
with ross right so when ross was born it

00:16:11,839 --> 00:16:14,959
was born

00:16:12,560 --> 00:16:16,560
uh i would say in a very research uh

00:16:14,959 --> 00:16:19,680
oriented environment

00:16:16,560 --> 00:16:22,720
uh certain things were not a priority

00:16:19,680 --> 00:16:23,360
and and then we as our straws became so

00:16:22,720 --> 00:16:25,600
popular

00:16:23,360 --> 00:16:26,560
and and ross became uh more and more

00:16:25,600 --> 00:16:29,600
adopted

00:16:26,560 --> 00:16:33,279
then uh some of the uh drawbacks uh

00:16:29,600 --> 00:16:36,240
came uh came to light and we uh

00:16:33,279 --> 00:16:37,519
and and and people realized that uh they

00:16:36,240 --> 00:16:38,959
they should have been done in different

00:16:37,519 --> 00:16:39,600
ways or they could have been done in

00:16:38,959 --> 00:16:42,800
better ways

00:16:39,600 --> 00:16:46,399
uh um taking into account um other

00:16:42,800 --> 00:16:48,959
aspects um so one of the key things

00:16:46,399 --> 00:16:50,639
uh that you would see when you use ros

00:16:48,959 --> 00:16:53,440
versus using ros 2

00:16:50,639 --> 00:16:54,079
is that there's a master node so

00:16:53,440 --> 00:16:55,839
basically

00:16:54,079 --> 00:16:57,600
this master takes care of these

00:16:55,839 --> 00:17:00,000
communications so you

00:16:57,600 --> 00:17:01,040
always need it running and and you will

00:17:00,000 --> 00:17:02,639
see today that

00:17:01,040 --> 00:17:04,160
it's a bit of a pain to keep it running

00:17:02,639 --> 00:17:05,760
because call up

00:17:04,160 --> 00:17:07,520
will shut it down every now and then

00:17:05,760 --> 00:17:08,400
because you need to keep keep it running

00:17:07,520 --> 00:17:11,039
in the background

00:17:08,400 --> 00:17:12,559
for you to for your code to work so

00:17:11,039 --> 00:17:13,120
every now and then you might have to go

00:17:12,559 --> 00:17:16,559
back

00:17:13,120 --> 00:17:18,959
and rerun the the the master

00:17:16,559 --> 00:17:21,120
so so your nodes can can talk to each

00:17:18,959 --> 00:17:23,439
other

00:17:21,120 --> 00:17:24,880
and then underneath there's this uh set

00:17:23,439 --> 00:17:28,319
of libraries

00:17:24,880 --> 00:17:30,400
uh raw cvp or rospi that allows you to

00:17:28,319 --> 00:17:32,000
write notes in different languages

00:17:30,400 --> 00:17:33,840
and they can talk to each other even if

00:17:32,000 --> 00:17:35,280
they're in different languages

00:17:33,840 --> 00:17:37,039
and then we have the communication layer

00:17:35,280 --> 00:17:40,559
and then we have the linux system

00:17:37,039 --> 00:17:43,039
that is for ros uh but the in ros2

00:17:40,559 --> 00:17:44,559
everything is a bit different uh we

00:17:43,039 --> 00:17:47,840
don't have the master

00:17:44,559 --> 00:17:50,960
uh we have uh rc lcpp python

00:17:47,840 --> 00:17:52,320
java and some other languages uh

00:17:50,960 --> 00:17:54,240
for you to write code in different

00:17:52,320 --> 00:17:57,360
languages

00:17:54,240 --> 00:17:57,760
and then you have the rcl and then you

00:17:57,360 --> 00:18:00,559
have an

00:17:57,760 --> 00:18:01,760
abstraction layer for the communications

00:18:00,559 --> 00:18:04,160
middleware

00:18:01,760 --> 00:18:05,120
and this is this uses uh something

00:18:04,160 --> 00:18:07,360
called dds

00:18:05,120 --> 00:18:08,160
which is a standard so because it's a

00:18:07,360 --> 00:18:10,080
standard

00:18:08,160 --> 00:18:12,840
there's many vendors that provide an

00:18:10,080 --> 00:18:15,440
implementation of this standard

00:18:12,840 --> 00:18:17,760
and in ros 2

00:18:15,440 --> 00:18:18,480
we allow people to use uh whatever

00:18:17,760 --> 00:18:21,600
vendor

00:18:18,480 --> 00:18:22,640
implementation of tds they want so you

00:18:21,600 --> 00:18:25,280
can easily change

00:18:22,640 --> 00:18:26,880
their implementation of dds by just

00:18:25,280 --> 00:18:28,080
installing whatever implementation you

00:18:26,880 --> 00:18:30,559
want and

00:18:28,080 --> 00:18:32,240
just changing an environment variable on

00:18:30,559 --> 00:18:35,440
your system

00:18:32,240 --> 00:18:38,080
and we also increase the the support

00:18:35,440 --> 00:18:38,480
into linux mic and windows so that is

00:18:38,080 --> 00:18:41,360
also

00:18:38,480 --> 00:18:43,840
um an important change that we did in

00:18:41,360 --> 00:18:43,840
russ2

00:18:44,400 --> 00:18:49,679
uh marco quick question um

00:18:47,840 --> 00:18:51,039
before you had shared your screen

00:18:49,679 --> 00:18:53,600
without your video

00:18:51,039 --> 00:18:55,280
appearing in the corner and i think uh

00:18:53,600 --> 00:18:56,000
when you added your video in the second

00:18:55,280 --> 00:18:58,720
time

00:18:56,000 --> 00:18:59,919
uh the bandwidth is maybe too much i

00:18:58,720 --> 00:19:01,760
don't know if you're able to go back to

00:18:59,919 --> 00:19:02,640
the configuration you had the first time

00:19:01,760 --> 00:19:06,720
around

00:19:02,640 --> 00:19:06,720
uh we're getting category slides

00:19:07,200 --> 00:19:13,840
i can remove the the camera

00:19:10,400 --> 00:19:14,559
yeah let's try that hopefully that helps

00:19:13,840 --> 00:19:16,320
uh

00:19:14,559 --> 00:19:17,600
patrick and others in the chat let us

00:19:16,320 --> 00:19:21,760
know if you

00:19:17,600 --> 00:19:26,480
uh okay thank you thanks for your help

00:19:21,760 --> 00:19:30,240
um yeah so regarding uh versions of ross

00:19:26,480 --> 00:19:30,240
all right nice

00:19:30,640 --> 00:19:34,320
um yeah so regarding versions of frost

00:19:33,039 --> 00:19:37,520
we have uh

00:19:34,320 --> 00:19:39,200
melodic and we have noedik which is as i

00:19:37,520 --> 00:19:42,320
said the last version of

00:19:39,200 --> 00:19:46,480
ros1 so it will have an end of life

00:19:42,320 --> 00:19:50,559
on 2025 and then

00:19:46,480 --> 00:19:50,559
um let me move my

00:19:51,200 --> 00:19:55,919
and then regarding ros 2 there's much

00:19:53,760 --> 00:20:00,000
more options we have dashing

00:19:55,919 --> 00:20:03,440
uh that is currently uh until may

00:20:00,000 --> 00:20:04,159
and then we also have foxy uh which is

00:20:03,440 --> 00:20:07,360
uh we

00:20:04,159 --> 00:20:09,520
it's an lts so it'll be running for

00:20:07,360 --> 00:20:10,480
three years and then we have galactic

00:20:09,520 --> 00:20:13,600
which is coming

00:20:10,480 --> 00:20:17,520
uh next may uh when once dashing

00:20:13,600 --> 00:20:19,280
um fades off then galactic comes over

00:20:17,520 --> 00:20:20,559
and then we have more releases coming

00:20:19,280 --> 00:20:21,280
and then we also have the rolling

00:20:20,559 --> 00:20:24,400
release

00:20:21,280 --> 00:20:28,159
which tries to keep the latest code

00:20:24,400 --> 00:20:30,799
um compiled for you guys

00:20:28,159 --> 00:20:31,919
so now uh we're gonna have a look at

00:20:30,799 --> 00:20:34,000
what we're gonna do today

00:20:31,919 --> 00:20:35,440
so this is the the first example that

00:20:34,000 --> 00:20:37,600
we're gonna run

00:20:35,440 --> 00:20:39,600
it's a very simple example and it's the

00:20:37,600 --> 00:20:43,600
first tutorial that everyone runs

00:20:39,600 --> 00:20:47,280
in um in ross

00:20:43,600 --> 00:20:50,559
and basically there's this um

00:20:47,280 --> 00:20:53,120
there's this this concept of uh nodes

00:20:50,559 --> 00:20:53,600
which are entities that run a certain

00:20:53,120 --> 00:20:55,679
code

00:20:53,600 --> 00:20:56,720
and if you go back to the example that i

00:20:55,679 --> 00:20:59,600
told you guys

00:20:56,720 --> 00:21:00,400
of the camera um you could have a camera

00:20:59,600 --> 00:21:02,320
with a node

00:21:00,400 --> 00:21:04,000
that picks up the images and send the

00:21:02,320 --> 00:21:07,200
images to

00:21:04,000 --> 00:21:09,840
uh some algorithm that does uh some

00:21:07,200 --> 00:21:11,360
processing with that image uh like face

00:21:09,840 --> 00:21:14,240
recognition for example right

00:21:11,360 --> 00:21:15,039
so you could think of like this uh

00:21:14,240 --> 00:21:19,440
publisher

00:21:15,039 --> 00:21:22,960
up on the right um let me use this

00:21:19,440 --> 00:21:24,400
um a pointer so you can think about this

00:21:22,960 --> 00:21:27,919
publisher up on the right

00:21:24,400 --> 00:21:30,559
as the the camera note that is sending

00:21:27,919 --> 00:21:31,200
a message that is the image and it

00:21:30,559 --> 00:21:33,600
becomes

00:21:31,200 --> 00:21:35,440
uh it comes down here to the subscriber

00:21:33,600 --> 00:21:39,200
and this is the guy that is reading the

00:21:35,440 --> 00:21:40,159
images and he's using the the images to

00:21:39,200 --> 00:21:42,480
check for

00:21:40,159 --> 00:21:46,480
people in a scene right or like they say

00:21:42,480 --> 00:21:46,480
this robot is trying to find people

00:21:48,159 --> 00:21:51,360
yeah it's something similar with uh to

00:21:49,919 --> 00:21:54,000
empty qdt

00:21:51,360 --> 00:21:55,600
uh it's it's it's it's it's a message

00:21:54,000 --> 00:21:57,440
passage system so basically it's

00:21:55,600 --> 00:22:00,720
something similar to that

00:21:57,440 --> 00:22:03,120
and then we have a topic which is what

00:22:00,720 --> 00:22:05,600
allows you to

00:22:03,120 --> 00:22:07,280
name this this flow of data is basically

00:22:05,600 --> 00:22:09,840
the name of this flow of data

00:22:07,280 --> 00:22:10,880
so you can say this publisher is

00:22:09,840 --> 00:22:12,480
subscribing desktop

00:22:10,880 --> 00:22:14,480
it's establishing this topic this

00:22:12,480 --> 00:22:17,280
subscriber is subscribing to this topic

00:22:14,480 --> 00:22:18,559
so they basically know what is the data

00:22:17,280 --> 00:22:22,240
that they

00:22:18,559 --> 00:22:26,880
they're gonna get um

00:22:22,240 --> 00:22:26,880
yeah so today we're gonna focus on this

00:22:28,240 --> 00:22:32,000
version of publish subscriber and we're

00:22:30,799 --> 00:22:34,400
going to try to make

00:22:32,000 --> 00:22:36,640
one publisher and one subscriber in our

00:22:34,400 --> 00:22:38,159
column

00:22:36,640 --> 00:22:40,240
i'm going to talk a little bit about the

00:22:38,159 --> 00:22:42,880
other versions um

00:22:40,240 --> 00:22:43,919
uh oh there's this there's more and

00:22:42,880 --> 00:22:45,360
probably subscribe

00:22:43,919 --> 00:22:47,039
uh so let me finish with this uh

00:22:45,360 --> 00:22:50,080
probably subscribe uh can

00:22:47,039 --> 00:22:50,720
also be uh uh many too many so you can

00:22:50,080 --> 00:22:53,120
have

00:22:50,720 --> 00:22:55,200
many publishers who like publishing on

00:22:53,120 --> 00:22:57,520
one topic you can have like two cameras

00:22:55,200 --> 00:22:58,559
publishing images on the same topic and

00:22:57,520 --> 00:23:01,679
then you can have

00:22:58,559 --> 00:23:04,159
one algorithm getting uh images for uh

00:23:01,679 --> 00:23:04,960
face recognition and the other one can

00:23:04,159 --> 00:23:07,280
can be just

00:23:04,960 --> 00:23:09,039
uh checking for i don't know cars in the

00:23:07,280 --> 00:23:12,559
scene or something else right

00:23:09,039 --> 00:23:15,440
so it can be many to many thing

00:23:12,559 --> 00:23:16,400
publishers and subscribers can can work

00:23:15,440 --> 00:23:19,760
on the same topic

00:23:16,400 --> 00:23:23,280
um without restrictions

00:23:19,760 --> 00:23:25,360
but then there's another uh way of

00:23:23,280 --> 00:23:26,880
communicating with ross and it's was

00:23:25,360 --> 00:23:29,840
through services

00:23:26,880 --> 00:23:32,000
so once we do services uh we have a

00:23:29,840 --> 00:23:32,640
service a service server and a service

00:23:32,000 --> 00:23:35,679
client

00:23:32,640 --> 00:23:38,960
and you can think about this as a

00:23:35,679 --> 00:23:40,720
remote call to a function so basically

00:23:38,960 --> 00:23:43,600
when you call a function

00:23:40,720 --> 00:23:45,520
uh you basically send a request and then

00:23:43,600 --> 00:23:48,080
you get a response

00:23:45,520 --> 00:23:48,559
right and the message basically contains

00:23:48,080 --> 00:23:50,159
some

00:23:48,559 --> 00:23:52,159
some information that goes into the

00:23:50,159 --> 00:23:53,360
request and then some information that

00:23:52,159 --> 00:23:55,279
goes into a response

00:23:53,360 --> 00:23:57,520
let's say like i wanna i wanna add two

00:23:55,279 --> 00:23:58,320
numbers then you can send two numbers

00:23:57,520 --> 00:24:00,799
this way

00:23:58,320 --> 00:24:02,159
and then the the server node will

00:24:00,799 --> 00:24:05,600
actually respond

00:24:02,159 --> 00:24:06,799
um with uh one number in in the other

00:24:05,600 --> 00:24:09,440
direction right

00:24:06,799 --> 00:24:11,360
that is services but i don't think we're

00:24:09,440 --> 00:24:14,240
gonna have time to get into this today

00:24:11,360 --> 00:24:16,320
so basically uh uh this is just for you

00:24:14,240 --> 00:24:19,760
to know that it exists

00:24:16,320 --> 00:24:22,960
uh for services there can only be

00:24:19,760 --> 00:24:24,720
uh one uh server but there can be

00:24:22,960 --> 00:24:26,960
multiple clients asking right

00:24:24,720 --> 00:24:28,480
so i can have this server doing the some

00:24:26,960 --> 00:24:31,279
summing up two numbers

00:24:28,480 --> 00:24:32,960
but then i can only i can have as many

00:24:31,279 --> 00:24:36,960
clients as i want asking

00:24:32,960 --> 00:24:39,120
for this server to do the the math

00:24:36,960 --> 00:24:42,960
that is the services version and the

00:24:39,120 --> 00:24:42,960
actions is a bit of a more cons

00:24:43,840 --> 00:24:47,919
complicated concept which basically

00:24:46,320 --> 00:24:50,960
consists of

00:24:47,919 --> 00:24:54,559
asking for a long-term

00:24:50,960 --> 00:24:56,960
goal long-term action you can think of

00:24:54,559 --> 00:24:57,760
and basically the client will send a

00:24:56,960 --> 00:25:00,320
request

00:24:57,760 --> 00:25:01,440
to the server that will send a response

00:25:00,320 --> 00:25:04,720
on that request

00:25:01,440 --> 00:25:05,760
and while the note uh is doing this long

00:25:04,720 --> 00:25:08,799
term action

00:25:05,760 --> 00:25:12,000
it will keep publishing uh

00:25:08,799 --> 00:25:13,760
uh feedback uh that peop that other

00:25:12,000 --> 00:25:16,720
nodes can subscribe

00:25:13,760 --> 00:25:18,159
to figure out how the the task the

00:25:16,720 --> 00:25:20,720
action is going

00:25:18,159 --> 00:25:22,240
and then once the action is done uh

00:25:20,720 --> 00:25:25,919
there's a result

00:25:22,240 --> 00:25:27,840
that will come back at the end um

00:25:25,919 --> 00:25:29,120
as i said we won't get into this but

00:25:27,840 --> 00:25:32,400
it's just for you to know

00:25:29,120 --> 00:25:33,120
that it's it's there so yeah uh let's

00:25:32,400 --> 00:25:36,400
have uh

00:25:33,120 --> 00:25:38,320
some fun and try to uh run some rose

00:25:36,400 --> 00:25:41,440
code

00:25:38,320 --> 00:25:44,720
all right so everyone should have

00:25:41,440 --> 00:25:47,890
everything installed already it

00:25:44,720 --> 00:25:50,080
should be installed

00:25:47,890 --> 00:25:57,440
[Music]

00:25:50,080 --> 00:26:01,120
all right um

00:25:57,440 --> 00:26:04,480
so first thing that you do on draws one

00:26:01,120 --> 00:26:06,400
is to run the roscore

00:26:04,480 --> 00:26:07,679
and it's this process that has to run

00:26:06,400 --> 00:26:09,440
always in the background

00:26:07,679 --> 00:26:11,760
and we need it so a process can

00:26:09,440 --> 00:26:13,600
communicate once you do it in browse to

00:26:11,760 --> 00:26:16,400
you you'll realize that this roscore

00:26:13,600 --> 00:26:18,880
becomes a pain which is the master node

00:26:16,400 --> 00:26:21,520
and and sometimes if it's not up where

00:26:18,880 --> 00:26:23,600
we won't be able to do stuff right

00:26:21,520 --> 00:26:24,880
so the first thing that we're going to

00:26:23,600 --> 00:26:28,159
do is that we're going to use

00:26:24,880 --> 00:26:31,360
uh an ipython um

00:26:28,159 --> 00:26:32,960
an ipython function so we can

00:26:31,360 --> 00:26:34,799
we can run the raw score in the

00:26:32,960 --> 00:26:38,960
background so we do

00:26:34,799 --> 00:26:44,159
get underscore ipython

00:26:38,960 --> 00:26:44,159
uh open close brackets dot system raw

00:26:44,240 --> 00:26:49,120
system underscore raw and now we're

00:26:47,279 --> 00:26:52,559
gonna do

00:26:49,120 --> 00:26:54,080
ros core and aspen sign right so it runs

00:26:52,559 --> 00:26:57,120
in the background

00:26:54,080 --> 00:26:57,120
and now we run this one

00:26:57,520 --> 00:27:00,880
and you shouldn't see anything because

00:26:59,120 --> 00:27:01,760
this this process will go into the

00:27:00,880 --> 00:27:05,679
background

00:27:01,760 --> 00:27:07,279
but now um let me add some text i forgot

00:27:05,679 --> 00:27:10,559
to add some text

00:27:07,279 --> 00:27:10,559
uh running

00:27:10,640 --> 00:27:15,440
running raw score and i'm gonna move it

00:27:13,840 --> 00:27:17,919
up

00:27:15,440 --> 00:27:18,840
before this one there you go let me add

00:27:17,919 --> 00:27:22,159
some

00:27:18,840 --> 00:27:26,240
title yeah this is a title

00:27:22,159 --> 00:27:26,240
running rosco and we run the rosco

00:27:29,120 --> 00:27:36,000
all right so let me go down

00:27:33,279 --> 00:27:37,360
and add some code after running the raw

00:27:36,000 --> 00:27:38,240
score so now we have the raw score

00:27:37,360 --> 00:27:40,159
running

00:27:38,240 --> 00:27:42,159
and there's a few things that we can do

00:27:40,159 --> 00:27:42,960
so we can list the number of nodes that

00:27:42,159 --> 00:27:45,840
is running

00:27:42,960 --> 00:27:46,159
so we can do uh because we're going to

00:27:45,840 --> 00:27:48,480
run

00:27:46,159 --> 00:27:50,000
a normal command line again we're going

00:27:48,480 --> 00:27:53,679
to use the exclamation mark

00:27:50,000 --> 00:27:55,840
so we do exclamation mark ross node

00:27:53,679 --> 00:27:58,320
and let's let's just run ros node and

00:27:55,840 --> 00:28:02,000
see what happens

00:27:58,320 --> 00:28:03,600
so as we run rosno you'll see that it's

00:28:02,000 --> 00:28:05,200
a command line tool for printing

00:28:03,600 --> 00:28:07,279
information about ros nodes

00:28:05,200 --> 00:28:08,399
right and then we have a bunch of things

00:28:07,279 --> 00:28:12,240
that we can do

00:28:08,399 --> 00:28:15,200
and a bunch of options that we can

00:28:12,240 --> 00:28:16,159
select from and i'm going to create

00:28:15,200 --> 00:28:18,880
another cell

00:28:16,159 --> 00:28:20,399
and i'm going to do exclamation mark ros

00:28:18,880 --> 00:28:23,760
node

00:28:20,399 --> 00:28:25,679
list and there we go

00:28:23,760 --> 00:28:26,960
we have something called rose out which

00:28:25,679 --> 00:28:30,399
is in charge of the

00:28:26,960 --> 00:28:33,360
output and it's created by the roscore

00:28:30,399 --> 00:28:33,760
so that tells us that we have something

00:28:33,360 --> 00:28:36,000
uh

00:28:33,760 --> 00:28:36,799
the roscore is running and we can start

00:28:36,000 --> 00:28:41,039
doing

00:28:36,799 --> 00:28:41,760
our own stuff right so rosnode is for us

00:28:41,039 --> 00:28:43,679
to interact

00:28:41,760 --> 00:28:45,279
is one of these tools that ross provides

00:28:43,679 --> 00:28:48,559
us to interact with

00:28:45,279 --> 00:28:50,159
with nodes and then we also have ros

00:28:48,559 --> 00:28:53,840
topic

00:28:50,159 --> 00:28:57,200
topic which is

00:28:53,840 --> 00:28:58,480
as we run ross topic exclamation mark

00:28:57,200 --> 00:29:01,279
also at the beginning

00:28:58,480 --> 00:29:02,799
always uh as with android's topic we can

00:29:01,279 --> 00:29:04,240
see that we can do different things with

00:29:02,799 --> 00:29:07,360
the topics right

00:29:04,240 --> 00:29:07,840
so topics are being published and and we

00:29:07,360 --> 00:29:10,240
have

00:29:07,840 --> 00:29:10,880
uh we can we can check the bandwidth of

00:29:10,240 --> 00:29:13,200
the

00:29:10,880 --> 00:29:14,399
of what's going on in that topic we can

00:29:13,200 --> 00:29:16,640
check the delay

00:29:14,399 --> 00:29:17,440
we can check we can echo the topic which

00:29:16,640 --> 00:29:19,360
is very useful

00:29:17,440 --> 00:29:22,320
because we'll print whatever is being

00:29:19,360 --> 00:29:22,320
published on that uh

00:29:22,720 --> 00:29:27,120
topic uh there's fine to find topics

00:29:25,520 --> 00:29:30,000
there there's the

00:29:27,120 --> 00:29:32,080
earth to get uh the publishing rate

00:29:30,000 --> 00:29:33,840
there's info to get certain info

00:29:32,080 --> 00:29:35,760
of who is subscribing who is publishing

00:29:33,840 --> 00:29:38,799
on that topic there's lists

00:29:35,760 --> 00:29:41,279
to list all the topics uh pop

00:29:38,799 --> 00:29:42,240
you can actually publish directly from

00:29:41,279 --> 00:29:44,159
the command line

00:29:42,240 --> 00:29:45,760
so you can use uh ross topic pub to

00:29:44,159 --> 00:29:48,320
publish directly from the

00:29:45,760 --> 00:29:49,520
from the command line uh and you if you

00:29:48,320 --> 00:29:52,480
can if you wanna test

00:29:49,520 --> 00:29:53,279
different different stuff uh and then

00:29:52,480 --> 00:29:55,440
there's type

00:29:53,279 --> 00:29:57,200
to figure out what type of data is going

00:29:55,440 --> 00:29:58,720
through that topic what type of message

00:29:57,200 --> 00:30:02,559
right

00:29:58,720 --> 00:30:06,000
so now we have the tool for the topic

00:30:02,559 --> 00:30:06,880
and we have the tool for the uh for the

00:30:06,000 --> 00:30:09,919
node

00:30:06,880 --> 00:30:12,960
um now we're gonna create

00:30:09,919 --> 00:30:15,279
uh our own ros package

00:30:12,960 --> 00:30:16,480
and in this ros package we're gonna try

00:30:15,279 --> 00:30:19,760
to create

00:30:16,480 --> 00:30:20,960
a publisher and a subscriber and then

00:30:19,760 --> 00:30:22,320
we're gonna try to run

00:30:20,960 --> 00:30:24,080
the publisher and we're going to try to

00:30:22,320 --> 00:30:26,240
run the subscriber and

00:30:24,080 --> 00:30:28,720
we're going to try to see if they

00:30:26,240 --> 00:30:30,000
exchange messages

00:30:28,720 --> 00:30:32,240
and bear in mind that we're going to

00:30:30,000 --> 00:30:34,880
have to rerun uh this

00:30:32,240 --> 00:30:37,360
uh roscore every now and then because

00:30:34,880 --> 00:30:42,720
sometimes

00:30:37,360 --> 00:30:45,679
sometimes the runtime will kick it out

00:30:42,720 --> 00:30:47,279
i don't know exactly why but i think

00:30:45,679 --> 00:30:48,640
it's not very happy with processes

00:30:47,279 --> 00:30:50,880
running in the background

00:30:48,640 --> 00:30:52,799
and when you interact with them and and

00:30:50,880 --> 00:30:55,600
and stop your process then they

00:30:52,799 --> 00:30:57,279
the raw core also stops so just keep in

00:30:55,600 --> 00:31:00,559
mind that if things doesn't work

00:30:57,279 --> 00:31:03,200
then you should go and re-run that one

00:31:00,559 --> 00:31:04,480
um another thing about cola that is

00:31:03,200 --> 00:31:07,679
important is that

00:31:04,480 --> 00:31:10,240
we have a files here so if you click on

00:31:07,679 --> 00:31:12,320
this folder on the left side

00:31:10,240 --> 00:31:14,320
you will see certain files and you can

00:31:12,320 --> 00:31:17,200
see the entire operating system if you

00:31:14,320 --> 00:31:20,159
uh the entire uh file system if you

00:31:17,200 --> 00:31:22,240
click on up one level

00:31:20,159 --> 00:31:24,640
and this is the entire file system that

00:31:22,240 --> 00:31:26,960
we have here

00:31:24,640 --> 00:31:28,960
so we're gonna be working a bit with

00:31:26,960 --> 00:31:30,080
files so this is important that you know

00:31:28,960 --> 00:31:34,399
where the files are

00:31:30,080 --> 00:31:37,360
and all that um

00:31:34,399 --> 00:31:38,080
all right so let's go ahead and try to

00:31:37,360 --> 00:31:41,679
create

00:31:38,080 --> 00:31:45,600
our first package and

00:31:41,679 --> 00:31:50,480
we're gonna do um we're gonna create

00:31:45,600 --> 00:31:52,640
uh working space so usually in

00:31:50,480 --> 00:31:53,679
when you when you install ros on on the

00:31:52,640 --> 00:31:55,840
normal way

00:31:53,679 --> 00:31:58,000
uh it will install it would be installed

00:31:55,840 --> 00:32:00,240
in in opt so if you follow the

00:31:58,000 --> 00:32:02,559
instructions for installing ros it will

00:32:00,240 --> 00:32:05,200
be installed in opt

00:32:02,559 --> 00:32:07,039
uh whereas because we installed the

00:32:05,200 --> 00:32:08,880
version that comes with the

00:32:07,039 --> 00:32:11,039
with the operating system which is a

00:32:08,880 --> 00:32:14,399
very old one and all that but we did it

00:32:11,039 --> 00:32:16,080
just so it's easier for everybody uh

00:32:14,399 --> 00:32:19,120
it's it's installed in the in the

00:32:16,080 --> 00:32:22,480
regular uh

00:32:19,120 --> 00:32:24,960
directories uh of the system but usually

00:32:22,480 --> 00:32:25,600
you have it in opt and the reason that

00:32:24,960 --> 00:32:28,799
the ros

00:32:25,600 --> 00:32:31,200
guys do this is because it's easier

00:32:28,799 --> 00:32:32,880
uh for everybody to install it allows

00:32:31,200 --> 00:32:35,919
you to install several

00:32:32,880 --> 00:32:37,279
different versions of ros so usually we

00:32:35,919 --> 00:32:39,679
found out that people

00:32:37,279 --> 00:32:41,840
uh likes to have different versions of

00:32:39,679 --> 00:32:42,720
raws there's many use cases where they

00:32:41,840 --> 00:32:45,760
have different

00:32:42,720 --> 00:32:48,640
versions of ros in the same system and

00:32:45,760 --> 00:32:50,000
and you have them on on on opt and

00:32:48,640 --> 00:32:52,159
basically you source them

00:32:50,000 --> 00:32:53,840
whenever you need them and we'll see

00:32:52,159 --> 00:32:55,919
this source because we'll have to source

00:32:53,840 --> 00:33:00,080
our own workspace

00:32:55,919 --> 00:33:01,679
so basically you source the the the

00:33:00,080 --> 00:33:03,440
the ros version that you're using and

00:33:01,679 --> 00:33:05,440
you also you also have to short

00:33:03,440 --> 00:33:06,720
whatever workspace that you're using and

00:33:05,440 --> 00:33:08,480
this sourcing means that

00:33:06,720 --> 00:33:10,799
it will basically load all the

00:33:08,480 --> 00:33:12,960
environment variables that are needed

00:33:10,799 --> 00:33:15,760
so you can use all the tools and you can

00:33:12,960 --> 00:33:18,399
you can run all your packages right

00:33:15,760 --> 00:33:20,000
so let's go ahead and create uh our own

00:33:18,399 --> 00:33:24,320
workspace

00:33:20,000 --> 00:33:27,360
so let's go and do uh exclamation mark

00:33:24,320 --> 00:33:30,880
uh make their mkdir

00:33:27,360 --> 00:33:34,159
uh dash p and we're gonna do uh

00:33:30,880 --> 00:33:34,720
on our home so we're gonna use the home

00:33:34,159 --> 00:33:37,840
symbol

00:33:34,720 --> 00:33:38,799
basically this will this will uh go into

00:33:37,840 --> 00:33:42,720
root

00:33:38,799 --> 00:33:45,840
because uh the the the user has the

00:33:42,720 --> 00:33:49,200
the home on root the user of colab

00:33:45,840 --> 00:33:52,960
so we'll do catkin catkin

00:33:49,200 --> 00:33:54,559
workspace uh src so we're going to

00:33:52,960 --> 00:33:56,000
create these two

00:33:54,559 --> 00:33:57,279
directories we're going to create codkin

00:33:56,000 --> 00:33:58,960
workspace and we're going to create

00:33:57,279 --> 00:34:01,679
something called src which is

00:33:58,960 --> 00:34:03,039
where our source code is going to run

00:34:01,679 --> 00:34:06,399
it's going to go right

00:34:03,039 --> 00:34:09,919
so we've done this

00:34:06,399 --> 00:34:13,119
and somewhere here if we

00:34:09,919 --> 00:34:15,119
press this button refresh we should see

00:34:13,119 --> 00:34:17,599
the catkin workspace here and we should

00:34:15,119 --> 00:34:20,399
see a source

00:34:17,599 --> 00:34:22,399
directory here so why did i call it

00:34:20,399 --> 00:34:25,919
kakin is because the

00:34:22,399 --> 00:34:28,720
um the tool that we use

00:34:25,919 --> 00:34:30,320
to compile the software is called

00:34:28,720 --> 00:34:32,159
catking

00:34:30,320 --> 00:34:34,079
that's another thing that changed

00:34:32,159 --> 00:34:36,639
between ros1 and ros2

00:34:34,079 --> 00:34:38,079
and and the version uh the new tool that

00:34:36,639 --> 00:34:41,119
we use in ros2 is called

00:34:38,079 --> 00:34:42,800
colcon and it's much more advanced

00:34:41,119 --> 00:34:44,399
much more complete and that's why

00:34:42,800 --> 00:34:46,839
there's a read write of it so it's

00:34:44,399 --> 00:34:48,720
easier for

00:34:46,839 --> 00:34:51,919
um uh

00:34:48,720 --> 00:34:53,200
for the developers uh now that we

00:34:51,919 --> 00:34:57,440
created this we're gonna

00:34:53,200 --> 00:34:57,440
cd into it um

00:34:57,839 --> 00:35:01,280
this this command doesn't need the

00:34:59,920 --> 00:35:02,800
exclamation mark so

00:35:01,280 --> 00:35:05,520
keep in mind that you don't need to use

00:35:02,800 --> 00:35:08,960
the exclamation mark for that

00:35:05,520 --> 00:35:12,000
so we're gonna go into

00:35:08,960 --> 00:35:12,000
let's run the cell

00:35:13,520 --> 00:35:19,359
and we go into the um

00:35:17,440 --> 00:35:21,839
so now if we run another cell just to

00:35:19,359 --> 00:35:24,640
make sure we can do

00:35:21,839 --> 00:35:24,640
pwd

00:35:25,040 --> 00:35:28,079
let's see if this one is supported yeah

00:35:26,720 --> 00:35:32,640
so we're already there

00:35:28,079 --> 00:35:34,640
inside this uh source um

00:35:32,640 --> 00:35:36,160
which is where we're gonna create our

00:35:34,640 --> 00:35:39,520
package right

00:35:36,160 --> 00:35:40,880
so now i'm gonna run a catkin create

00:35:39,520 --> 00:35:44,240
package

00:35:40,880 --> 00:35:47,760
so this is also different in rows 1 and

00:35:44,240 --> 00:35:47,760
rows 2 so we're using a

00:35:48,000 --> 00:35:55,359
ros 1 uh command which is catkin

00:35:52,079 --> 00:35:58,960
create create

00:35:55,359 --> 00:36:00,640
underscore pkg this basically will

00:35:58,960 --> 00:36:04,400
create a package

00:36:00,640 --> 00:36:06,240
and in ros2 is a different way you do

00:36:04,400 --> 00:36:07,839
rush to package but the concept is the

00:36:06,240 --> 00:36:10,640
same is just changing the

00:36:07,839 --> 00:36:11,599
the way the way you do it basically and

00:36:10,640 --> 00:36:13,280
then we're going to

00:36:11,599 --> 00:36:14,640
call we're going to give it a name this

00:36:13,280 --> 00:36:17,839
package so let's call it

00:36:14,640 --> 00:36:17,839
uh first asia

00:36:18,079 --> 00:36:21,520
package right we're going to call it

00:36:20,240 --> 00:36:23,680
first asia package

00:36:21,520 --> 00:36:24,800
and we are we're going to add a bunch of

00:36:23,680 --> 00:36:28,400
uh a little bit

00:36:24,800 --> 00:36:29,040
of um dependencies so we're gonna use

00:36:28,400 --> 00:36:31,760
something called

00:36:29,040 --> 00:36:32,720
std messages which are the standard

00:36:31,760 --> 00:36:35,839
messages

00:36:32,720 --> 00:36:38,079
uh that we can use to uh pass between

00:36:35,839 --> 00:36:40,079
nodes uh we're gonna use standard

00:36:38,079 --> 00:36:43,680
messages and then we're gonna do uh

00:36:40,079 --> 00:36:47,040
let's do ros cpp

00:36:43,680 --> 00:36:49,760
which is the ros library for uh

00:36:47,040 --> 00:36:51,520
c plus plus uh basically for c plus plus

00:36:49,760 --> 00:36:55,119
code right

00:36:51,520 --> 00:36:57,920
so we're running this and

00:36:55,119 --> 00:36:59,920
nice we created a file first asia

00:36:57,920 --> 00:37:03,119
package brackets xml

00:36:59,920 --> 00:37:06,839
created for search of this cmake list

00:37:03,119 --> 00:37:08,000
uh and then we also created an include

00:37:06,839 --> 00:37:10,480
directory

00:37:08,000 --> 00:37:12,079
and we also created a source directory

00:37:10,480 --> 00:37:15,680
right so it basically creates

00:37:12,079 --> 00:37:17,599
the basic files uh that you need

00:37:15,680 --> 00:37:19,520
and if you open the false asia package

00:37:17,599 --> 00:37:21,839
you can see

00:37:19,520 --> 00:37:22,880
that the source is created the include

00:37:21,839 --> 00:37:27,359
is created

00:37:22,880 --> 00:37:31,680
cmx list and and package.xml right

00:37:27,359 --> 00:37:35,200
and and right now if you go into

00:37:31,680 --> 00:37:38,800
um let's go

00:37:35,200 --> 00:37:44,400
back to city

00:37:38,800 --> 00:37:44,400
our catkin workspace

00:37:44,480 --> 00:37:47,920
so we can go back to our catkin

00:37:46,000 --> 00:37:50,960
workspace and we can

00:37:47,920 --> 00:37:54,000
um we can just compile

00:37:50,960 --> 00:37:57,200
so we can try to compile our package

00:37:54,000 --> 00:37:57,200
catkin make

00:37:59,040 --> 00:38:02,240
yeah there you go

00:38:03,200 --> 00:38:08,320
there you go that's running all the

00:38:04,960 --> 00:38:10,160
cmake and

00:38:08,320 --> 00:38:12,000
running command blah blah blah and it

00:38:10,160 --> 00:38:15,520
finished

00:38:12,000 --> 00:38:15,520
so it's been built already

00:38:16,839 --> 00:38:21,200
so we created a package it's an empty

00:38:19,920 --> 00:38:25,280
package for now

00:38:21,200 --> 00:38:26,800
um we we went into the

00:38:25,280 --> 00:38:28,400
walk-in space you always have to go to

00:38:26,800 --> 00:38:31,440
the root of the

00:38:28,400 --> 00:38:33,440
catkin workspace to to run the bill and

00:38:31,440 --> 00:38:35,760
then we build it with catkin make

00:38:33,440 --> 00:38:38,800
which is the catkin command to make your

00:38:35,760 --> 00:38:42,000
uh to compile your workspace

00:38:38,800 --> 00:38:44,800
and now we should have uh

00:38:42,000 --> 00:38:46,560
something compiled which is empty but we

00:38:44,800 --> 00:38:49,599
we already so if we go

00:38:46,560 --> 00:38:52,640
if we refresh here we would have

00:38:49,599 --> 00:38:55,760
we would have now a build

00:38:52,640 --> 00:38:58,880
and a devil directories which contain

00:38:55,760 --> 00:39:01,760
the the objects

00:38:58,880 --> 00:39:05,520
that had been created from the from the

00:39:01,760 --> 00:39:05,520
compilation compilation process right

00:39:07,440 --> 00:39:13,520
all right so

00:39:10,480 --> 00:39:16,320
we now know how to create a package and

00:39:13,520 --> 00:39:18,160
let me explain a bit of of the stuff

00:39:16,320 --> 00:39:21,599
that we have here

00:39:18,160 --> 00:39:23,839
uh so the cma slits um uses

00:39:21,599 --> 00:39:25,599
uh cmake for those of you that don't

00:39:23,839 --> 00:39:29,359
know it's a tool that

00:39:25,599 --> 00:39:33,200
is widely used for compiling

00:39:29,359 --> 00:39:36,960
easy compilation of of c plus plus

00:39:33,200 --> 00:39:39,119
packages and it allows you to

00:39:36,960 --> 00:39:43,359
cross compile two different two

00:39:39,119 --> 00:39:48,079
different operating systems and

00:39:43,359 --> 00:39:50,800
as you see this is a very big um

00:39:48,079 --> 00:39:52,560
cmake file but everything is commented

00:39:50,800 --> 00:39:53,280
this comment there's uh comments

00:39:52,560 --> 00:39:56,480
everywhere

00:39:53,280 --> 00:39:57,839
but it's basically so you can remove the

00:39:56,480 --> 00:40:00,079
comments whenever you need it

00:39:57,839 --> 00:40:01,920
and it's a placeholder for you to to

00:40:00,079 --> 00:40:03,680
build on whenever you're adding stuff to

00:40:01,920 --> 00:40:06,319
your package

00:40:03,680 --> 00:40:07,359
uh you can see that we have a fine

00:40:06,319 --> 00:40:09,520
package here

00:40:07,359 --> 00:40:11,040
required components because we said that

00:40:09,520 --> 00:40:14,400
these are dependencies so

00:40:11,040 --> 00:40:16,079
as we added the dependencies to the

00:40:14,400 --> 00:40:18,319
to the command when we created the

00:40:16,079 --> 00:40:21,760
package this had been added here

00:40:18,319 --> 00:40:24,000
also as a dependency then if we create

00:40:21,760 --> 00:40:25,280
messages then we'll add them here if we

00:40:24,000 --> 00:40:27,440
have services

00:40:25,280 --> 00:40:29,359
uh we'll have that we'll add them here

00:40:27,440 --> 00:40:31,040
and if we have action childs we will add

00:40:29,359 --> 00:40:32,800
them here right

00:40:31,040 --> 00:40:34,880
and then we will add at the bottom

00:40:32,800 --> 00:40:38,640
whatever uh libraries

00:40:34,880 --> 00:40:41,839
or or if we're creating uh

00:40:38,640 --> 00:40:46,400
binary files at any point right

00:40:41,839 --> 00:40:46,400
and and we'll do that uh in a moment

00:40:46,640 --> 00:40:50,640
all right so we have the cmake we have

00:40:48,960 --> 00:40:54,640
the package xml

00:40:50,640 --> 00:40:56,880
um i found out that the for some reason

00:40:54,640 --> 00:40:56,880
um

00:40:59,200 --> 00:41:02,880
collab doesn't let me

00:41:04,079 --> 00:41:08,319
edit the package xml so i have a trick

00:41:07,280 --> 00:41:10,079
for you guys

00:41:08,319 --> 00:41:11,359
and the trick i know this is very hacky

00:41:10,079 --> 00:41:14,079
but uh i know

00:41:11,359 --> 00:41:15,040
uh already running ros on a call up it's

00:41:14,079 --> 00:41:16,640
it's hacky

00:41:15,040 --> 00:41:19,359
so there's many shortcuts that we have

00:41:16,640 --> 00:41:22,400
to take and and we have to rename

00:41:19,359 --> 00:41:26,160
the package so call up can

00:41:22,400 --> 00:41:28,560
allow us to to edit it

00:41:26,160 --> 00:41:30,560
so if you rename it yeah so if you

00:41:28,560 --> 00:41:32,319
rename it to a txt then you will

00:41:30,560 --> 00:41:36,079
you will be able to open it here which

00:41:32,319 --> 00:41:36,079
is an easier way to um

00:41:36,240 --> 00:41:41,119
to modify it um just keep in mind that

00:41:39,599 --> 00:41:44,560
you have to like

00:41:41,119 --> 00:41:44,560
rename it back again later

00:41:47,119 --> 00:41:53,119
so basically the uh package uh

00:41:50,400 --> 00:41:54,960
xml contains the uh basically

00:41:53,119 --> 00:41:56,640
information about the package

00:41:54,960 --> 00:41:58,640
and here's where you state the name of

00:41:56,640 --> 00:41:59,760
the package this here is where you state

00:41:58,640 --> 00:42:02,480
the version

00:41:59,760 --> 00:42:04,640
uh some description about it uh this is

00:42:02,480 --> 00:42:08,000
a package that we built the first asia

00:42:04,640 --> 00:42:11,760
and all that and there's dependencies

00:42:08,000 --> 00:42:13,280
that you uh should write it down here

00:42:11,760 --> 00:42:15,599
and basically these dependencies will

00:42:13,280 --> 00:42:19,520
tell what is the building tool

00:42:15,599 --> 00:42:23,280
that is used uh what dependencies are

00:42:19,520 --> 00:42:26,240
um this this package depends on

00:42:23,280 --> 00:42:26,800
and and on execution time or on build

00:42:26,240 --> 00:42:30,560
time

00:42:26,800 --> 00:42:31,760
right so uh it's very important that

00:42:30,560 --> 00:42:35,119
this is correct

00:42:31,760 --> 00:42:38,880
because then um there's tools

00:42:35,119 --> 00:42:39,200
uh from ross like rossdap that will use

00:42:38,880 --> 00:42:41,839
this

00:42:39,200 --> 00:42:43,520
heavily and rostep is a tool to

00:42:41,839 --> 00:42:44,640
automatically install all your

00:42:43,520 --> 00:42:46,079
dependencies

00:42:44,640 --> 00:42:48,000
so it's very important that this

00:42:46,079 --> 00:42:50,960
information is accurate because

00:42:48,000 --> 00:42:51,599
otherwise it will become very hard to

00:42:50,960 --> 00:42:55,040
maintain

00:42:51,599 --> 00:42:58,960
your code and and it will become almost

00:42:55,040 --> 00:43:00,640
impossible to to to keep track of what

00:42:58,960 --> 00:43:03,680
you're doing

00:43:00,640 --> 00:43:06,000
so let me go back and rename it

00:43:03,680 --> 00:43:08,000
i don't know if i can keep it there huh

00:43:06,000 --> 00:43:12,720
let me see

00:43:08,000 --> 00:43:15,040
um let me go back and rename it

00:43:12,720 --> 00:43:16,000
i think it would create a txt file

00:43:15,040 --> 00:43:20,079
though

00:43:16,000 --> 00:43:22,319
i think that happened before anyway so

00:43:20,079 --> 00:43:24,000
up to now uh let's recap we have our

00:43:22,319 --> 00:43:25,440
package fastasia package we have our

00:43:24,000 --> 00:43:28,560
package.xml

00:43:25,440 --> 00:43:29,920
with a cmake we have the source uh which

00:43:28,560 --> 00:43:32,480
is where we will put

00:43:29,920 --> 00:43:33,760
our cpp files and then we'll have our

00:43:32,480 --> 00:43:35,359
include

00:43:33,760 --> 00:43:37,920
which is where we'll put our header

00:43:35,359 --> 00:43:41,440
files if any right

00:43:37,920 --> 00:43:44,960
now um we're gonna go

00:43:41,440 --> 00:43:46,560
into uh the

00:43:44,960 --> 00:43:48,800
this folder we're gonna go into this

00:43:46,560 --> 00:43:51,839
folder and we're gonna download

00:43:48,800 --> 00:43:53,280
um we're gonna download the

00:43:51,839 --> 00:43:55,760
publisher and then we're going to

00:43:53,280 --> 00:43:57,280
download the subscriber

00:43:55,760 --> 00:43:58,800
and then we're going to put them here

00:43:57,280 --> 00:44:03,359
and we're going to compile them and

00:43:58,800 --> 00:44:08,079
and see what happens and let me go

00:44:03,359 --> 00:44:10,880
let's check where we are so let's do uh

00:44:08,079 --> 00:44:10,880
vwd

00:44:12,640 --> 00:44:16,000
all right so we're wrote katkin so we're

00:44:15,280 --> 00:44:20,640
gonna just

00:44:16,000 --> 00:44:24,640
uh move us into src

00:44:20,640 --> 00:44:29,200
uh false asia package

00:44:24,640 --> 00:44:31,440
src so let's go there

00:44:29,200 --> 00:44:31,440
all right

00:44:32,400 --> 00:44:36,480
and now that we're here we're gonna

00:44:34,640 --> 00:44:38,640
download i'm gonna just space this

00:44:36,480 --> 00:44:40,800
because this is a big command

00:44:38,640 --> 00:44:42,000
uh we're gonna download an example from

00:44:40,800 --> 00:44:46,160
the uh

00:44:42,000 --> 00:44:47,920
ros tutorials page and let me just copy

00:44:46,160 --> 00:44:51,839
it

00:44:47,920 --> 00:44:51,839
the whole url

00:44:53,520 --> 00:44:58,800
i'll put the entire command so you guys

00:44:55,040 --> 00:44:58,800
can just copy paste

00:45:02,839 --> 00:45:05,760
um

00:45:04,240 --> 00:45:08,240
all right so this is the first one and

00:45:05,760 --> 00:45:11,440
this is the docker

00:45:08,240 --> 00:45:14,800
so you guys just copy that um

00:45:11,440 --> 00:45:17,040
so it's doing exclamation mark wget

00:45:14,800 --> 00:45:18,000
which is basically this uh command line

00:45:17,040 --> 00:45:21,119
tool

00:45:18,000 --> 00:45:23,760
that downloads files

00:45:21,119 --> 00:45:25,599
from the web and we're going to download

00:45:23,760 --> 00:45:29,920
this cpp file

00:45:25,599 --> 00:45:30,640
and we just run it and we got the token

00:45:29,920 --> 00:45:33,440
now

00:45:30,640 --> 00:45:35,520
and now if you check the src remember

00:45:33,440 --> 00:45:38,400
that you have to press refresh

00:45:35,520 --> 00:45:40,160
because call up won't refresh by itself

00:45:38,400 --> 00:45:44,640
now we have the docker here

00:45:40,160 --> 00:45:47,440
right and if you

00:45:44,640 --> 00:45:49,440
double click you should be able to see

00:45:47,440 --> 00:45:51,520
the docker on the side the code of the

00:45:49,440 --> 00:45:52,960
docker

00:45:51,520 --> 00:45:54,800
and there's a lot of comments there's a

00:45:52,960 --> 00:45:56,160
lot of comments here uh oh this is not

00:45:54,800 --> 00:45:58,160
the token

00:45:56,160 --> 00:46:00,880
oh yeah yeah so we got a copyright from

00:45:58,160 --> 00:46:04,319
morgan and the guys from wheelbarrows

00:46:00,880 --> 00:46:07,839
uh which is when these were written

00:46:04,319 --> 00:46:11,440
and there's a lot of stuff

00:46:07,839 --> 00:46:14,960
um we got the headers so we got uh

00:46:11,440 --> 00:46:16,319
the ros header which is basically

00:46:14,960 --> 00:46:18,160
the the main one that you have to

00:46:16,319 --> 00:46:20,880
include and then we got

00:46:18,160 --> 00:46:23,200
a string which is the message that we're

00:46:20,880 --> 00:46:25,839
going to use

00:46:23,200 --> 00:46:27,760
this is the standard message that's why

00:46:25,839 --> 00:46:29,839
we were depending on standard messages

00:46:27,760 --> 00:46:32,400
if you remember

00:46:29,839 --> 00:46:33,839
and we're using as a stream to this is

00:46:32,400 --> 00:46:36,960
the way that c plus plus

00:46:33,839 --> 00:46:39,440
uh uses for for managing streams

00:46:36,960 --> 00:46:40,800
and then we create a main which is the

00:46:39,440 --> 00:46:42,560
main

00:46:40,800 --> 00:46:45,440
function in c plus plus for those of you

00:46:42,560 --> 00:46:48,640
that are known uh c plus plus

00:46:45,440 --> 00:46:51,280
we do a ros edit uh very simple

00:46:48,640 --> 00:46:52,640
with the name of the node uh so the name

00:46:51,280 --> 00:46:55,839
of the node is gonna be toca

00:46:52,640 --> 00:46:57,119
so this node is gonna be called docker

00:46:55,839 --> 00:47:00,240
and

00:46:57,119 --> 00:47:04,960
we create a node handle and then

00:47:00,240 --> 00:47:06,079
using the node handle here we create and

00:47:04,960 --> 00:47:08,079
we say that we're going to create a

00:47:06,079 --> 00:47:12,880
publisher wait let me just

00:47:08,079 --> 00:47:15,599
i think this is too small maybe

00:47:12,880 --> 00:47:17,839
let me make it a bit bigger yeah so we

00:47:15,599 --> 00:47:17,839
got

00:47:21,760 --> 00:47:30,240
we got the nose the note handle here

00:47:25,440 --> 00:47:33,920
and from the node handle we create the

00:47:30,240 --> 00:47:36,240
the chata and this is the frequency

00:47:33,920 --> 00:47:39,760
which is 1000

00:47:36,240 --> 00:47:43,200
and we're gonna make it uh we create

00:47:39,760 --> 00:47:45,599
this this advertise function will return

00:47:43,200 --> 00:47:47,760
a publisher for us and we save it here

00:47:45,599 --> 00:47:51,440
chat pub

00:47:47,760 --> 00:47:54,880
and we create an object uh we create a

00:47:51,440 --> 00:47:58,720
loop rate um this loop rate is

00:47:54,880 --> 00:48:01,920
gonna basically uh

00:47:58,720 --> 00:48:04,400
allow us to to have a loop and

00:48:01,920 --> 00:48:07,839
and and pause it every now and then

00:48:04,400 --> 00:48:07,839
every now and then

00:48:09,119 --> 00:48:15,760
and um we have a counter here

00:48:12,640 --> 00:48:17,599
and then we say well ros okay this is

00:48:15,760 --> 00:48:22,079
pretty standard

00:48:17,599 --> 00:48:25,680
and then we create a message um

00:48:22,079 --> 00:48:28,960
we create a string a stream uh so we

00:48:25,680 --> 00:48:32,160
we pass this uh hello world to the

00:48:28,960 --> 00:48:35,440
to the stream and then we just uh

00:48:32,160 --> 00:48:37,599
uh create get the string from the string

00:48:35,440 --> 00:48:39,359
and then put it into the message data

00:48:37,599 --> 00:48:40,240
field so there's a data field in the

00:48:39,359 --> 00:48:42,880
message

00:48:40,240 --> 00:48:45,680
that contains the string and then we use

00:48:42,880 --> 00:48:48,640
the function ros info to print it out

00:48:45,680 --> 00:48:50,800
and then we do the chatter pop which is

00:48:48,640 --> 00:48:53,839
the publisher that we created up here

00:48:50,800 --> 00:48:55,920
we created a charter pub if you remember

00:48:53,839 --> 00:48:58,160
and we call the function publish with

00:48:55,920 --> 00:48:59,119
the message and the message is published

00:48:58,160 --> 00:49:01,599
right here

00:48:59,119 --> 00:49:03,280
and then we do ros pin once which

00:49:01,599 --> 00:49:07,440
basically tells the executor

00:49:03,280 --> 00:49:10,480
to execute um to give time to execute

00:49:07,440 --> 00:49:11,200
whatever is on the on the executor then

00:49:10,480 --> 00:49:14,480
we have a

00:49:11,200 --> 00:49:17,839
loop rate slip we sleep for a while

00:49:14,480 --> 00:49:21,680
so it doesn't go crazy and then we

00:49:17,839 --> 00:49:23,839
uh add uh account for

00:49:21,680 --> 00:49:25,839
for our message right so we have a count

00:49:23,839 --> 00:49:27,920
that keeps the number here

00:49:25,839 --> 00:49:30,000
and and it keeps increasing so we can

00:49:27,920 --> 00:49:30,720
see hello world one hello world to hello

00:49:30,000 --> 00:49:35,839
world three

00:49:30,720 --> 00:49:35,839
right um there's many um

00:49:38,000 --> 00:49:44,319
comments here so

00:49:41,520 --> 00:49:45,119
feel free to play around with it read

00:49:44,319 --> 00:49:47,200
him

00:49:45,119 --> 00:49:48,559
and and you can also go to the to the

00:49:47,200 --> 00:49:51,119
website if you have some

00:49:48,559 --> 00:49:52,720
some doubts well they explain in more

00:49:51,119 --> 00:49:54,720
detail everything that is done on the

00:49:52,720 --> 00:49:58,800
docker

00:49:54,720 --> 00:50:03,440
um so now we created we got a troka

00:49:58,800 --> 00:50:03,440
let's let's let's uh download the the

00:50:03,599 --> 00:50:07,440
the listener so the toggle is the is the

00:50:05,520 --> 00:50:09,040
guy that is publishing

00:50:07,440 --> 00:50:10,800
and the listener is the guy that is

00:50:09,040 --> 00:50:16,480
subscribing

00:50:10,800 --> 00:50:16,480
let me copy this and let me put it

00:50:23,280 --> 00:50:30,960
right there you go

00:50:26,319 --> 00:50:30,960
there you go so this is the

00:50:36,640 --> 00:50:40,000
this is the listener and this is the

00:50:39,359 --> 00:50:44,160
subscriber

00:50:40,000 --> 00:50:47,760
that we're gonna use so if you run this

00:50:44,160 --> 00:50:51,839
you should be able to get the file on

00:50:47,760 --> 00:50:53,839
your oh i think where was it

00:50:51,839 --> 00:50:54,960
we did we got it all right yeah so we

00:50:53,839 --> 00:50:59,520
got it here right

00:50:54,960 --> 00:51:03,119
should be in soc yeah listener on docker

00:50:59,520 --> 00:51:05,200
right uh i see some guys are having

00:51:03,119 --> 00:51:06,160
still having problems uh remember that

00:51:05,200 --> 00:51:08,480
if you don't see

00:51:06,160 --> 00:51:11,520
uh let me show this again remember that

00:51:08,480 --> 00:51:11,520
if you don't see the

00:51:11,920 --> 00:51:15,119
if you don't see my screen or whatever

00:51:14,079 --> 00:51:18,240
you can also

00:51:15,119 --> 00:51:19,440
just uh access this link and

00:51:18,240 --> 00:51:21,040
and you should be able to access

00:51:19,440 --> 00:51:22,160
everything that i'm writing and you

00:51:21,040 --> 00:51:26,240
should be able to copy

00:51:22,160 --> 00:51:30,559
into your into your own collab version

00:51:26,240 --> 00:51:32,319
all right so going back to the

00:51:30,559 --> 00:51:34,839
subscriber right so we got the listener

00:51:32,319 --> 00:51:37,440
here so let's have a look and open the

00:51:34,839 --> 00:51:41,119
listener

00:51:37,440 --> 00:51:44,559
all right so we have the listener um

00:51:41,119 --> 00:51:48,240
again uh including draws and

00:51:44,559 --> 00:51:49,359
and string and then we have a callback

00:51:48,240 --> 00:51:54,000
here

00:51:49,359 --> 00:51:57,839
which basically uh gets a message

00:51:54,000 --> 00:52:00,240
uh type string that it's the

00:51:57,839 --> 00:52:01,599
message that we were publishing with the

00:52:00,240 --> 00:52:03,520
other guy

00:52:01,599 --> 00:52:05,200
and we're just printing it using ros

00:52:03,520 --> 00:52:07,680
info right so this uh

00:52:05,200 --> 00:52:08,480
this microphone ross allows us to print

00:52:07,680 --> 00:52:10,559
strings

00:52:08,480 --> 00:52:12,400
so we're gonna print i heard and

00:52:10,559 --> 00:52:14,000
whatever it's on the message right so

00:52:12,400 --> 00:52:16,240
this is a c string

00:52:14,000 --> 00:52:18,800
and we're gonna print that in here in

00:52:16,240 --> 00:52:21,839
this placeholder

00:52:18,800 --> 00:52:24,960
uh then we have the main

00:52:21,839 --> 00:52:26,800
main function uh as i said we also do

00:52:24,960 --> 00:52:28,400
uh ros edit with the name of the node

00:52:26,800 --> 00:52:30,480
which is a listener

00:52:28,400 --> 00:52:32,079
then we create a ros node handle and

00:52:30,480 --> 00:52:35,359
with the node handle we create

00:52:32,079 --> 00:52:38,319
a subscriber similar process by just

00:52:35,359 --> 00:52:38,880
doing uh the subscriber version and we

00:52:38,319 --> 00:52:43,520
call it

00:52:38,880 --> 00:52:46,800
uh we do a chata we subscribe to chata

00:52:43,520 --> 00:52:47,760
and then we we tell we tell the

00:52:46,800 --> 00:52:50,559
subscription

00:52:47,760 --> 00:52:52,240
to every time there's a topic in chatta

00:52:50,559 --> 00:52:54,880
there's a message in chatta

00:52:52,240 --> 00:52:56,160
call this charter call back right so

00:52:54,880 --> 00:52:59,200
every time there's a

00:52:56,160 --> 00:53:01,359
there's a message in in in the topic

00:52:59,200 --> 00:53:02,319
it will be called this function here

00:53:01,359 --> 00:53:04,240
right

00:53:02,319 --> 00:53:05,760
and because this is a type of message it

00:53:04,240 --> 00:53:06,160
will be called with the type of message

00:53:05,760 --> 00:53:10,480
that

00:53:06,160 --> 00:53:10,480
uh it's it's being passed in that

00:53:10,720 --> 00:53:16,640
in that topic right so we got the

00:53:14,260 --> 00:53:19,200
[Music]

00:53:16,640 --> 00:53:20,880
subscription here then we do a raw spin

00:53:19,200 --> 00:53:23,359
which is standard also

00:53:20,880 --> 00:53:24,640
and then we return zero and that's it

00:53:23,359 --> 00:53:27,920
pretty simple

00:53:24,640 --> 00:53:29,359
all right so we got our publisher we got

00:53:27,920 --> 00:53:31,680
our subscriber

00:53:29,359 --> 00:53:32,720
and now what we need to do is that we

00:53:31,680 --> 00:53:36,640
need to add

00:53:32,720 --> 00:53:36,640
the specific um

00:53:37,119 --> 00:53:43,040
uh lines in the cmake list so

00:53:40,559 --> 00:53:43,760
the compilation uh it's aware that we

00:53:43,040 --> 00:53:46,480
have now a

00:53:43,760 --> 00:53:48,640
cpp and a listener cbp and we want to

00:53:46,480 --> 00:53:52,000
compile them

00:53:48,640 --> 00:53:55,280
and these lines are pretty simple

00:53:52,000 --> 00:53:56,800
and i should be able to get them for you

00:53:55,280 --> 00:53:59,520
guys so we don't have to

00:53:56,800 --> 00:53:59,920
write too much because that takes time

00:53:59,520 --> 00:54:02,720
and

00:53:59,920 --> 00:54:02,720
i'm lazy

00:54:03,040 --> 00:54:14,000
let me just get it from here

00:54:10,240 --> 00:54:18,400
all right so yeah i'll paste them

00:54:14,000 --> 00:54:18,400
on the chat so everyone can

00:54:20,079 --> 00:54:26,240
get them

00:54:24,079 --> 00:54:27,599
all right so there you go you guys have

00:54:26,240 --> 00:54:31,359
them in the chat

00:54:27,599 --> 00:54:33,200
um and now we're gonna paste them

00:54:31,359 --> 00:54:36,160
at the end let's just place them at the

00:54:33,200 --> 00:54:39,839
end they should work right

00:54:36,160 --> 00:54:43,200
so basically we're telling um

00:54:39,839 --> 00:54:46,319
we're telling cmake to add an ex an

00:54:43,200 --> 00:54:47,200
executable that it's called docker and

00:54:46,319 --> 00:54:50,400
has the source

00:54:47,200 --> 00:54:53,040
that is this cpp and

00:54:50,400 --> 00:54:53,440
it links to the normal catkin libraries

00:54:53,040 --> 00:54:56,240
and

00:54:53,440 --> 00:54:57,359
has the dependencies the normal

00:54:56,240 --> 00:55:00,480
dependencies

00:54:57,359 --> 00:55:02,160
docker and the generate messages cpp

00:55:00,480 --> 00:55:03,839
and the same for the listener is the

00:55:02,160 --> 00:55:07,040
pretty simple

00:55:03,839 --> 00:55:10,559
way to add executables uh

00:55:07,040 --> 00:55:11,839
into the cmake list right so when we

00:55:10,559 --> 00:55:14,079
added this

00:55:11,839 --> 00:55:14,880
uh when when you modify that you should

00:55:14,079 --> 00:55:17,280
see an

00:55:14,880 --> 00:55:18,319
asterisk here so if i if i do something

00:55:17,280 --> 00:55:20,720
you see the semester

00:55:18,319 --> 00:55:22,000
here and after a while it auto saves

00:55:20,720 --> 00:55:25,040
itself

00:55:22,000 --> 00:55:26,160
if you um click away i think it should

00:55:25,040 --> 00:55:28,799
save itself and

00:55:26,160 --> 00:55:30,960
it's removed so then you're safe uh and

00:55:28,799 --> 00:55:32,559
you know that the file is already saved

00:55:30,960 --> 00:55:35,359
and you can continue with your with your

00:55:32,559 --> 00:55:38,160
work on

00:55:35,359 --> 00:55:39,599
on whatever you continue doing all right

00:55:38,160 --> 00:55:42,720
so

00:55:39,599 --> 00:55:46,160
um almost there

00:55:42,720 --> 00:55:49,119
we got the docker we got the listener

00:55:46,160 --> 00:55:51,440
we got the publisher the subscriber so

00:55:49,119 --> 00:55:55,680
now we're going to go back to the

00:55:51,440 --> 00:55:59,599
uh we got we want to go back to catkin

00:55:55,680 --> 00:56:03,680
workspace so we can compile our

00:55:59,599 --> 00:56:05,839
our two notes so we're gonna go

00:56:03,680 --> 00:56:07,359
without the without the exclamation mark

00:56:05,839 --> 00:56:08,079
because this one works already without

00:56:07,359 --> 00:56:11,119
it

00:56:08,079 --> 00:56:11,119
so we're gonna go to

00:56:11,280 --> 00:56:19,599
uh catkin workspace

00:56:17,839 --> 00:56:21,200
so now we're back at root caching

00:56:19,599 --> 00:56:24,319
workspace

00:56:21,200 --> 00:56:31,839
and now we're gonna do our cad game make

00:56:24,319 --> 00:56:34,799
exclamation mark got game make

00:56:31,839 --> 00:56:35,090
and you will see all the output from the

00:56:34,799 --> 00:56:38,199
um

00:56:35,090 --> 00:56:38,199
[Music]

00:56:40,400 --> 00:56:47,839
all right and our docker is built

00:56:44,480 --> 00:56:47,839
and our listener is built

00:56:48,319 --> 00:56:55,280
so now we're gonna

00:56:52,160 --> 00:56:59,440
try to run our docker

00:56:55,280 --> 00:57:02,160
so let's try just to uh so to run

00:56:59,440 --> 00:57:05,359
an executable in ros you will do you

00:57:02,160 --> 00:57:07,920
will use something called ros run

00:57:05,359 --> 00:57:09,760
so let's run ros run and this will show

00:57:07,920 --> 00:57:11,359
you what how to use rush run

00:57:09,760 --> 00:57:13,119
and it's basically telling you that you

00:57:11,359 --> 00:57:15,760
have to

00:57:13,119 --> 00:57:16,559
tell there's there's a few options that

00:57:15,760 --> 00:57:18,240
you can use

00:57:16,559 --> 00:57:20,720
but you basically have to use the

00:57:18,240 --> 00:57:22,240
package name and the executable

00:57:20,720 --> 00:57:26,079
so let's go ahead and use the package

00:57:22,240 --> 00:57:31,119
name which is false asia

00:57:26,079 --> 00:57:35,280
package and we're going to run the

00:57:31,119 --> 00:57:37,520
docker right so let's run the docker

00:57:35,280 --> 00:57:39,119
and let's see what happens and it's

00:57:37,520 --> 00:57:40,079
saying that the force ratio package is

00:57:39,119 --> 00:57:42,640
not found

00:57:40,079 --> 00:57:44,480
why is that happening it's because the

00:57:42,640 --> 00:57:47,920
environment uh

00:57:44,480 --> 00:57:50,640
is not ready to find our package yet and

00:57:47,920 --> 00:57:52,640
why is that it's because you have to run

00:57:50,640 --> 00:57:55,119
um

00:57:52,640 --> 00:57:56,720
let me run uh you have to run uh you

00:57:55,119 --> 00:58:01,280
have to source

00:57:56,720 --> 00:58:01,280
the uh install um

00:58:01,680 --> 00:58:07,359
the setup dot bash that you have

00:58:04,799 --> 00:58:10,160
on your devil directory and as i said

00:58:07,359 --> 00:58:11,520
this is very common and this is a

00:58:10,160 --> 00:58:13,760
a thing that you will have to do

00:58:11,520 --> 00:58:16,000
whenever you install the

00:58:13,760 --> 00:58:16,960
uh ros from from the official

00:58:16,000 --> 00:58:18,799
repositories

00:58:16,960 --> 00:58:20,160
because we want to keep it separate and

00:58:18,799 --> 00:58:21,680
and and we want you to source the

00:58:20,160 --> 00:58:24,799
different versions that you want to use

00:58:21,680 --> 00:58:26,720
in whatever way you want to do them and

00:58:24,799 --> 00:58:27,920
because we're having a workspace that is

00:58:26,720 --> 00:58:30,960
specific for us

00:58:27,920 --> 00:58:34,559
then we have to source the

00:58:30,960 --> 00:58:37,599
uh the setup.bash um

00:58:34,559 --> 00:58:40,000
because there's uh call up doesn't keep

00:58:37,599 --> 00:58:42,240
the environment variables between cells

00:58:40,000 --> 00:58:43,760
we'll have to do it in the same cell and

00:58:42,240 --> 00:58:45,920
we're gonna do it in the same line

00:58:43,760 --> 00:58:48,079
so i'm gonna just write between the

00:58:45,920 --> 00:58:52,720
exclamation mark and the ros run

00:58:48,079 --> 00:58:55,839
and i'm gonna just say source devel

00:58:52,720 --> 00:58:56,240
um for the slash here and i'm going to

00:58:55,839 --> 00:59:00,079
say

00:58:56,240 --> 00:59:02,319
set up dot bash and i'm going to do

00:59:00,079 --> 00:59:04,000
as busan right so basically what we're

00:59:02,319 --> 00:59:07,920
doing here is that are saying

00:59:04,000 --> 00:59:11,119
please source this uh setup.batch file

00:59:07,920 --> 00:59:14,079
and ross run me this docker

00:59:11,119 --> 00:59:14,640
um ros run from the package for cc

00:59:14,079 --> 00:59:18,559
package

00:59:14,640 --> 00:59:19,920
ros run the docker node and now i'm

00:59:18,559 --> 00:59:24,400
going to execute this

00:59:19,920 --> 00:59:26,640
cell and you can see that now

00:59:24,400 --> 00:59:29,200
uh we're publishing this hello world

00:59:26,640 --> 00:59:31,680
zero hello world

00:59:29,200 --> 00:59:34,079
right keeps going on forever because we

00:59:31,680 --> 00:59:35,680
have if you remember we had a wild rose

00:59:34,079 --> 00:59:38,480
okay on old tucker

00:59:35,680 --> 00:59:39,119
so if you come to the docker um there's

00:59:38,480 --> 00:59:42,880
some

00:59:39,119 --> 00:59:45,520
uh wild rose okay and ross seems to be

00:59:42,880 --> 00:59:47,839
okay so it keeps going right

00:59:45,520 --> 00:59:47,839
um

00:59:48,559 --> 00:59:54,559
so if i click here i know collab uh

00:59:51,599 --> 00:59:55,520
becomes a bit annoying and it takes some

00:59:54,559 --> 01:00:00,559
time

00:59:55,520 --> 01:00:04,559
so you guys can see that uh

01:00:00,559 --> 01:00:04,559
it is it's hard to stop the

01:00:06,160 --> 01:00:15,520
the binary uh let me just clear this

01:00:11,440 --> 01:00:18,160
uh how to do this

01:00:15,520 --> 01:00:19,599
because it becomes annoying uh yeah

01:00:18,160 --> 01:00:22,319
there's a point where

01:00:19,599 --> 01:00:24,079
uh collapse will kill it when you click

01:00:22,319 --> 01:00:26,319
too much

01:00:24,079 --> 01:00:27,200
uh but at the same time it will also

01:00:26,319 --> 01:00:30,960
clearly

01:00:27,200 --> 01:00:34,799
uh probably kill the

01:00:30,960 --> 01:00:35,359
uh roscor as i said that we have here

01:00:34,799 --> 01:00:37,920
right

01:00:35,359 --> 01:00:39,119
so roscor is here uh we'll have to read

01:00:37,920 --> 01:00:43,359
and draw score

01:00:39,119 --> 01:00:46,559
um we can just check if we do um

01:00:43,359 --> 01:00:46,559
rows note list

01:00:46,960 --> 01:00:50,160
you will see that it's unable to

01:00:48,640 --> 01:00:51,760
communicate with the master

01:00:50,160 --> 01:00:54,880
so there's no master running so we have

01:00:51,760 --> 01:00:56,960
to go back all the way up

01:00:54,880 --> 01:00:58,799
to the line where we were running the

01:00:56,960 --> 01:01:02,160
ros core

01:00:58,799 --> 01:01:04,160
here uh get a python system

01:01:02,160 --> 01:01:06,480
roscore and then we run the roscore

01:01:04,160 --> 01:01:06,480
again

01:01:08,839 --> 01:01:11,839
right

01:01:13,359 --> 01:01:18,400
um now if we run ross note list

01:01:16,799 --> 01:01:20,000
we'll see that also is already there

01:01:18,400 --> 01:01:21,760
right so

01:01:20,000 --> 01:01:23,280
we want to run this but we want to run

01:01:21,760 --> 01:01:24,319
it in the background so we're gonna do

01:01:23,280 --> 01:01:29,520
the same thing that we did

01:01:24,319 --> 01:01:29,520
with the roscore uh we're gonna do get

01:01:29,760 --> 01:01:32,640
ipython

01:01:33,119 --> 01:01:38,160
and then we're gonna do system raw

01:01:36,559 --> 01:01:40,160
and then we're going to put this into

01:01:38,160 --> 01:01:42,880
the brackets and between

01:01:40,160 --> 01:01:43,680
single quotes and remember to add the

01:01:42,880 --> 01:01:45,680
aspen

01:01:43,680 --> 01:01:48,160
at the end so this runs in the

01:01:45,680 --> 01:01:48,160
background

01:01:48,400 --> 01:01:53,839
right so we run this

01:01:55,200 --> 01:02:02,319
oh uh without this climate mark sorry

01:01:58,720 --> 01:02:03,440
no exclamation mark all right

01:02:02,319 --> 01:02:06,319
so now that it's running in the

01:02:03,440 --> 01:02:08,480
background and

01:02:06,319 --> 01:02:10,400
we can do rose note list and we'll see

01:02:08,480 --> 01:02:11,760
now that we have a docker

01:02:10,400 --> 01:02:14,960
right so our docker is running in the

01:02:11,760 --> 01:02:17,200
background uh

01:02:14,960 --> 01:02:21,839
what else we can do we can do ros topic

01:02:17,200 --> 01:02:21,839
list rust update list

01:02:22,240 --> 01:02:26,000
there you go we got a chatter now what

01:02:24,480 --> 01:02:29,359
is this chatter doing now

01:02:26,000 --> 01:02:34,160
we can check let's go check so we can do

01:02:29,359 --> 01:02:36,000
rush topic echo

01:02:34,160 --> 01:02:37,680
oh let's do let's we can do some other

01:02:36,000 --> 01:02:38,400
stuff right rush topic let's see what

01:02:37,680 --> 01:02:41,599
ros topic

01:02:38,400 --> 01:02:46,160
allows us to do so i can do type

01:02:41,599 --> 01:02:48,799
let me do type rostopic type of chat

01:02:46,160 --> 01:02:49,920
you guys remember what chatter was doing

01:02:48,799 --> 01:02:53,280
uh what type of

01:02:49,920 --> 01:02:55,200
of message was chatter let's see

01:02:53,280 --> 01:02:58,160
oh it's uh it's from the standard

01:02:55,200 --> 01:02:59,839
messages uh is the message string

01:02:58,160 --> 01:03:01,680
so that's the one that we defined if you

01:02:59,839 --> 01:03:02,319
remember right let remember standard

01:03:01,680 --> 01:03:05,839
messages

01:03:02,319 --> 01:03:08,960
a string that's the type of uh

01:03:05,839 --> 01:03:10,559
rush topic uh rush topic

01:03:08,960 --> 01:03:13,359
what else can we do let's see all the

01:03:10,559 --> 01:03:17,839
options um

01:03:13,359 --> 01:03:17,839
we can check

01:03:19,920 --> 01:03:23,119
let's see if we can check this

01:03:25,680 --> 01:03:30,480
so we can get the rate and it's been

01:03:28,839 --> 01:03:33,440
published

01:03:30,480 --> 01:03:34,799
right so these are the tools that ross

01:03:33,440 --> 01:03:38,079
is providing us

01:03:34,799 --> 01:03:41,599
to interact with our system

01:03:38,079 --> 01:03:43,359
and to introspect what is going on

01:03:41,599 --> 01:03:45,839
we can also there's there's also another

01:03:43,359 --> 01:03:47,760
tool um that it's not i don't think it's

01:03:45,839 --> 01:03:49,839
installed with the base one

01:03:47,760 --> 01:03:50,799
uh but it's called rosbach let me see if

01:03:49,839 --> 01:03:52,559
it's installed i don't think it's

01:03:50,799 --> 01:03:55,839
installed

01:03:52,559 --> 01:03:57,440
oh yeah it is yeah so rosbach is another

01:03:55,839 --> 01:04:00,720
tool that you can use

01:03:57,440 --> 01:04:02,640
in ross to basically record uh

01:04:00,720 --> 01:04:04,319
information from these topics and then

01:04:02,640 --> 01:04:05,920
you can replay later

01:04:04,319 --> 01:04:08,559
and this is a very useful tool because

01:04:05,920 --> 01:04:12,160
you can you can basically use it

01:04:08,559 --> 01:04:13,680
uh at any point uh

01:04:12,160 --> 01:04:15,680
and you could you could you could use it

01:04:13,680 --> 01:04:16,240
with a let's say with a real robot right

01:04:15,680 --> 01:04:17,599
you have

01:04:16,240 --> 01:04:19,440
let's say you have five hours with the

01:04:17,599 --> 01:04:23,200
robot and then you have to go home

01:04:19,440 --> 01:04:26,640
and and you want to continue um

01:04:23,200 --> 01:04:28,960
and you want to continue later

01:04:26,640 --> 01:04:29,760
so basically you you would do a rosbach

01:04:28,960 --> 01:04:31,200
you will save

01:04:29,760 --> 01:04:32,960
all the information that you want and

01:04:31,200 --> 01:04:34,400
then you can replay it later and then

01:04:32,960 --> 01:04:37,920
you will have all the topics

01:04:34,400 --> 01:04:39,200
uh ready for you to rerun uh different

01:04:37,920 --> 01:04:42,480
algorithms

01:04:39,200 --> 01:04:43,760
with the same exact uh information

01:04:42,480 --> 01:04:46,160
coming out of the robot

01:04:43,760 --> 01:04:48,079
so that is this very good to get some

01:04:46,160 --> 01:04:50,410
deterministic input

01:04:48,079 --> 01:04:51,440
that you can play around with um

01:04:50,410 --> 01:04:54,559
[Music]

01:04:51,440 --> 01:04:56,400
and also to replay information um

01:04:54,559 --> 01:04:58,160
when you don't actually have the source

01:04:56,400 --> 01:05:00,799
of that information right

01:04:58,160 --> 01:05:02,400
um so if you borrow a camera from a guy

01:05:00,799 --> 01:05:03,200
one day and then you want to play around

01:05:02,400 --> 01:05:04,960
with the data

01:05:03,200 --> 01:05:06,400
for the next week then you can use a

01:05:04,960 --> 01:05:08,880
rosbach and

01:05:06,400 --> 01:05:09,839
and it makes things much easier right or

01:05:08,880 --> 01:05:12,720
setting up a robot

01:05:09,839 --> 01:05:13,200
uh whoever did it uh ever it's always a

01:05:12,720 --> 01:05:14,720
pain

01:05:13,200 --> 01:05:16,880
you have to turn on a lot of things a

01:05:14,720 --> 01:05:17,440
lot of things can fail so you can set it

01:05:16,880 --> 01:05:19,599
up once

01:05:17,440 --> 01:05:20,799
uh get a rose back and then play around

01:05:19,599 --> 01:05:22,640
with the rose back

01:05:20,799 --> 01:05:25,760
for the next week you don't have to go

01:05:22,640 --> 01:05:29,440
back and do the whole setup again

01:05:25,760 --> 01:05:32,880
a very useful tool um all right

01:05:29,440 --> 01:05:37,839
so we should have the ross note

01:05:32,880 --> 01:05:37,839
in the background right now list again

01:05:38,880 --> 01:05:42,559
oh the master is gone again i told you

01:05:41,359 --> 01:05:45,920
guys the master goes

01:05:42,559 --> 01:05:47,119
off every now and then when we so we go

01:05:45,920 --> 01:05:50,240
back

01:05:47,119 --> 01:05:50,880
re-run the master remember this is very

01:05:50,240 --> 01:05:53,119
important

01:05:50,880 --> 01:05:55,440
every now and then the collapse will

01:05:53,119 --> 01:05:58,720
kill our master

01:05:55,440 --> 01:06:00,640
and now we can do ross note list and we

01:05:58,720 --> 01:06:01,119
only have robs out because the master

01:06:00,640 --> 01:06:04,960
died

01:06:01,119 --> 01:06:07,280
so also our docker died so we already

01:06:04,960 --> 01:06:10,720
run the token

01:06:07,280 --> 01:06:10,720
i know this is a lot of reruns

01:06:11,039 --> 01:06:17,039
but that's how um

01:06:14,480 --> 01:06:19,119
call up works it's killing our

01:06:17,039 --> 01:06:23,359
background processes so we got

01:06:19,119 --> 01:06:27,599
the docker now and we got the list

01:06:23,359 --> 01:06:33,280
uh let's run the subscriber

01:06:27,599 --> 01:06:36,799
let's go run the subscriber um

01:06:33,280 --> 01:06:39,119
so we're gonna do the ros run

01:06:36,799 --> 01:06:40,400
and then find my mouse here all right

01:06:39,119 --> 01:06:43,200
there

01:06:40,400 --> 01:06:43,200
so we're gonna do

01:06:44,880 --> 01:06:47,839
cross run

01:06:47,920 --> 01:06:53,680
false asia package right so from the

01:06:50,640 --> 01:06:53,680
photo package

01:06:53,839 --> 01:06:59,119
we're gonna run the listener right

01:06:57,599 --> 01:07:01,680
and again one thing that i'm missing

01:06:59,119 --> 01:07:03,839
here is to source the setup bush

01:07:01,680 --> 01:07:05,599
as i said this is this is only specific

01:07:03,839 --> 01:07:06,720
to call up you only need to do it once

01:07:05,599 --> 01:07:09,280
per terminal

01:07:06,720 --> 01:07:10,799
on your computer uh but because column

01:07:09,280 --> 01:07:13,280
doesn't keep the environment variables

01:07:10,799 --> 01:07:17,200
between cells then you have to do it

01:07:13,280 --> 01:07:18,960
in in every cell um

01:07:17,200 --> 01:07:20,319
maybe there's a way to keep the

01:07:18,960 --> 01:07:22,720
environment variables but

01:07:20,319 --> 01:07:24,480
um i'm just not aware of it i didn't

01:07:22,720 --> 01:07:29,359
found it

01:07:24,480 --> 01:07:31,440
they will set up dot bush

01:07:29,359 --> 01:07:32,799
all right so we're sourcing the bash and

01:07:31,440 --> 01:07:35,039
that's personas nissan

01:07:32,799 --> 01:07:36,400
ross run false asia package listener

01:07:35,039 --> 01:07:40,839
right

01:07:36,400 --> 01:07:43,359
so this listener should basically

01:07:40,839 --> 01:07:45,039
um should

01:07:43,359 --> 01:07:46,640
what was the name uh yeah should

01:07:45,039 --> 01:07:50,000
subscribe to chata

01:07:46,640 --> 01:07:53,520
and should be uh publishing uh

01:07:50,000 --> 01:07:56,400
printing whatever the chatter is is

01:07:53,520 --> 01:07:58,079
is uh publishing so if we go to the

01:07:56,400 --> 01:08:01,200
listener here

01:07:58,079 --> 01:08:05,039
the ros info that we had right

01:08:01,200 --> 01:08:07,680
so i would call this this callback here

01:08:05,039 --> 01:08:08,079
and it will say i heard and whatever is

01:08:07,680 --> 01:08:09,920
heard

01:08:08,079 --> 01:08:11,839
it will be placed in this placeholder

01:08:09,920 --> 01:08:16,640
here right

01:08:11,839 --> 01:08:16,640
let's see if it's true let's run it

01:08:17,359 --> 01:08:20,880
and there you go it's and i heard hello

01:08:20,319 --> 01:08:23,199
world

01:08:20,880 --> 01:08:24,719
and a very big number because this

01:08:23,199 --> 01:08:26,799
talker has been talking for quite a

01:08:24,719 --> 01:08:33,120
while now

01:08:26,799 --> 01:08:33,120
and yep a bunch of hello world messages

01:08:33,199 --> 01:08:36,239
so congratulations everybody you wrote

01:08:35,279 --> 01:08:40,400
your first

01:08:36,239 --> 01:08:42,480
publish subscribe uh demo with ross

01:08:40,400 --> 01:08:43,920
now you're able to create your own

01:08:42,480 --> 01:08:47,040
robots uh

01:08:43,920 --> 01:08:50,560
please go ahead and

01:08:47,040 --> 01:08:54,000
go get more tutorials

01:08:50,560 --> 01:08:57,920
let me just uh talk a bit about like uh

01:08:54,000 --> 01:08:57,920
other um

01:08:58,159 --> 01:09:01,279
other common line tools

01:09:01,359 --> 01:09:07,839
they need to stop this one

01:09:15,679 --> 01:09:23,440
all right now we stopped it and let me

01:09:19,359 --> 01:09:23,440
clear the output because it's very long

01:09:26,719 --> 01:09:29,920
all right so we're almost done with the

01:09:28,960 --> 01:09:33,359
ros part

01:09:29,920 --> 01:09:37,679
um just a couple of things

01:09:33,359 --> 01:09:40,000
there's a raw service list rust service

01:09:37,679 --> 01:09:41,120
will allow you to play around with

01:09:40,000 --> 01:09:44,239
services

01:09:41,120 --> 01:09:45,679
so as i said public subscribe is not the

01:09:44,239 --> 01:09:48,319
only way to communicate

01:09:45,679 --> 01:09:48,719
nodes in ros you also have services

01:09:48,319 --> 01:09:51,920
there's

01:09:48,719 --> 01:09:53,679
uh different the arguments the

01:09:51,920 --> 01:09:55,600
you can call services from the command

01:09:53,679 --> 01:09:57,280
line you can list them you can check the

01:09:55,600 --> 01:09:58,000
type in a similar way that we did with

01:09:57,280 --> 01:09:59,679
the topics

01:09:58,000 --> 01:10:02,960
but with the services and then you can

01:09:59,679 --> 01:10:05,600
call get the result and all that

01:10:02,960 --> 01:10:06,960
there's also uh definitions of you you

01:10:05,600 --> 01:10:08,560
have to define messages

01:10:06,960 --> 01:10:10,320
so in this case we use the standard

01:10:08,560 --> 01:10:11,199
messages but you can define your own

01:10:10,320 --> 01:10:13,840
messages

01:10:11,199 --> 01:10:14,719
uh with different fields so a way to

01:10:13,840 --> 01:10:18,400
check that

01:10:14,719 --> 01:10:21,840
is to use the ros msg

01:10:18,400 --> 01:10:25,520
tool and with that tool it allows you to

01:10:21,840 --> 01:10:27,840
list the messages check the

01:10:25,520 --> 01:10:29,360
md5 sum check information about the

01:10:27,840 --> 01:10:32,800
messages

01:10:29,360 --> 01:10:36,320
and you can also do the same for

01:10:32,800 --> 01:10:37,600
srv srv which is the message for

01:10:36,320 --> 01:10:39,760
services

01:10:37,600 --> 01:10:41,120
so basically this this ones are a bit

01:10:39,760 --> 01:10:43,760
different they have

01:10:41,120 --> 01:10:45,440
as we said there's a there's a type of

01:10:43,760 --> 01:10:46,960
information going to the server and

01:10:45,440 --> 01:10:48,400
there's a type of information coming

01:10:46,960 --> 01:10:50,640
back to the client

01:10:48,400 --> 01:10:53,440
and and you can inspect this in the

01:10:50,640 --> 01:10:55,520
system using this command

01:10:53,440 --> 01:10:57,520
um there's a bunch of other commands but

01:10:55,520 --> 01:11:00,800
i think we don't have much time

01:10:57,520 --> 01:11:03,840
so for now i'm gonna stop

01:11:00,800 --> 01:11:07,920
the the ros part here

01:11:03,840 --> 01:11:11,199
um so call up uh it's done

01:11:07,920 --> 01:11:12,960
um remember that you guys can access

01:11:11,199 --> 01:11:14,800
my call up if you guys want to copy

01:11:12,960 --> 01:11:17,120
anything um

01:11:14,800 --> 01:11:18,880
apologies for not adding the the text i

01:11:17,120 --> 01:11:19,760
i told you guys i would forget i always

01:11:18,880 --> 01:11:21,360
forget

01:11:19,760 --> 01:11:23,360
but feel free to add it on your version

01:11:21,360 --> 01:11:26,719
make it pretty and all that

01:11:23,360 --> 01:11:29,760
um just a quick uh review of

01:11:26,719 --> 01:11:32,239
uh gazebo uh

01:11:29,760 --> 01:11:33,199
because this uh requires you to install

01:11:32,239 --> 01:11:36,239
gazebo

01:11:33,199 --> 01:11:37,520
uh this is not a hands-on workshop so

01:11:36,239 --> 01:11:40,320
i'll just showcase

01:11:37,520 --> 01:11:40,560
uh whatever it's there uh very quickly

01:11:40,320 --> 01:11:43,679
and

01:11:40,560 --> 01:11:45,840
and you guys can have a look uh

01:11:43,679 --> 01:11:46,960
so the the basic idea is that once we

01:11:45,840 --> 01:11:50,800
done our ros

01:11:46,960 --> 01:11:54,000
uh once we wrote a ros code

01:11:50,800 --> 01:11:57,280
we have uh something called gazebo

01:11:54,000 --> 01:11:59,600
that allows us to have simulated robots

01:11:57,280 --> 01:12:02,320
and then we can you can use our topics

01:11:59,600 --> 01:12:04,880
to talk to these simulated robots right

01:12:02,320 --> 01:12:05,440
and the main idea of gazebo is to make

01:12:04,880 --> 01:12:08,719
it

01:12:05,440 --> 01:12:11,520
as close as a real robot as it can be

01:12:08,719 --> 01:12:12,000
so you as as you have your your notes of

01:12:11,520 --> 01:12:15,280
ros

01:12:12,000 --> 01:12:16,159
running talking to the simulated robot

01:12:15,280 --> 01:12:18,000
in gazebo

01:12:16,159 --> 01:12:19,600
and you you get your real robot then you

01:12:18,000 --> 01:12:21,679
can just switch your code

01:12:19,600 --> 01:12:23,040
and instead of uh publishing and

01:12:21,679 --> 01:12:24,320
subscribing to gazebo

01:12:23,040 --> 01:12:26,960
you can probably send subscribe to the

01:12:24,320 --> 01:12:30,000
real robot and it should just work

01:12:26,960 --> 01:12:31,760
um so gazebo tries to provide physics

01:12:30,000 --> 01:12:33,920
sensors a gui

01:12:31,760 --> 01:12:36,080
it provides the interfaces so you can

01:12:33,920 --> 01:12:38,640
connect with ros which is what we

01:12:36,080 --> 01:12:39,360
recommend and it's what we do but you

01:12:38,640 --> 01:12:42,400
can also

01:12:39,360 --> 01:12:44,320
um you can also connect with everything

01:12:42,400 --> 01:12:46,400
uh anything else that you want you can

01:12:44,320 --> 01:12:49,360
you can create your own interfaces

01:12:46,400 --> 01:12:51,360
and connect to gazebo there's a cpp

01:12:49,360 --> 01:12:56,000
library that allows you to connect

01:12:51,360 --> 01:12:57,760
directly from uh

01:12:56,000 --> 01:12:59,920
i'm trying to simulate navigation system

01:12:57,760 --> 01:13:01,840
with the gps and if it is possible to

01:12:59,920 --> 01:13:05,520
simulate

01:13:01,840 --> 01:13:09,040
a gps on gazebo so gazebo

01:13:05,520 --> 01:13:10,800
uh allows you to um

01:13:09,040 --> 01:13:12,080
i'm not sure i haven't used gazebo that

01:13:10,800 --> 01:13:13,840
much to say

01:13:12,080 --> 01:13:16,159
if there's a gps i'm pretty sure that

01:13:13,840 --> 01:13:16,880
you can simulate uh i'm 100 sure that

01:13:16,159 --> 01:13:18,719
you can do it

01:13:16,880 --> 01:13:20,960
because placebo has something called

01:13:18,719 --> 01:13:22,000
plugins so you can write down your own

01:13:20,960 --> 01:13:26,000
plugins

01:13:22,000 --> 01:13:27,040
and and if this knows uh is this that

01:13:26,000 --> 01:13:29,199
device that you're

01:13:27,040 --> 01:13:30,159
you find missing in gazebo you can just

01:13:29,199 --> 01:13:32,400
write your own

01:13:30,159 --> 01:13:33,679
and then load the plugin and that would

01:13:32,400 --> 01:13:36,800
do it for you

01:13:33,679 --> 01:13:38,800
so it's very it's modular uh not as

01:13:36,800 --> 01:13:40,640
modular as the newly write as

01:13:38,800 --> 01:13:41,840
ignition but you can you can run your

01:13:40,640 --> 01:13:44,960
own plugins

01:13:41,840 --> 01:13:46,480
and create or your own devices on on on

01:13:44,960 --> 01:13:49,679
gazebo

01:13:46,480 --> 01:13:51,120
um yeah uh

01:13:49,679 --> 01:13:53,760
there's a couple of versions that are

01:13:51,120 --> 01:13:54,560
running these days gazebo 11 and gazebo

01:13:53,760 --> 01:13:58,000
nine

01:13:54,560 --> 01:13:59,360
are the main ones uh that are currently

01:13:58,000 --> 01:14:01,520
alive and as i said

01:13:59,360 --> 01:14:03,840
the main point is to have the simulated

01:14:01,520 --> 01:14:05,199
world as close as the real world so we

01:14:03,840 --> 01:14:08,800
can use the same code

01:14:05,199 --> 01:14:12,400
and in our case as i said we use ros but

01:14:08,800 --> 01:14:12,400
you can use whatever code you want

01:14:13,199 --> 01:14:16,560
there's tcpip sockets so it doesn't have

01:14:15,520 --> 01:14:19,840
to be ros

01:14:16,560 --> 01:14:22,239
it can be different ways of connecting

01:14:19,840 --> 01:14:23,600
but we provide the gazebo ros packages

01:14:22,239 --> 01:14:28,800
so you can

01:14:23,600 --> 01:14:31,360
connect your topics directly into gazebo

01:14:28,800 --> 01:14:32,000
all right so let me just run uh gazebo a

01:14:31,360 --> 01:14:35,360
bit

01:14:32,000 --> 01:14:39,120
uh yeah so gazebo uses

01:14:35,360 --> 01:14:39,120
world files all right

01:14:40,840 --> 01:14:49,440
so placebo uses wall files so

01:14:44,560 --> 01:14:52,719
here i'm um let me just close this

01:14:49,440 --> 01:14:55,840
uh let me just uh

01:14:52,719 --> 01:14:56,960
i'm gonna share a different screen now

01:14:55,840 --> 01:15:10,719
because i'm gonna

01:14:56,960 --> 01:15:13,040
try to um

01:15:10,719 --> 01:15:13,040
hmm

01:15:17,760 --> 01:15:21,440
i'm trying to figure out which is the

01:15:22,840 --> 01:15:25,840
screen

01:15:36,840 --> 01:15:39,840
um

01:15:43,040 --> 01:15:47,920
let's see if this is screen no this

01:15:45,440 --> 01:15:52,719
doesn't seem to be the screen

01:15:47,920 --> 01:15:56,880
okay um

01:15:52,719 --> 01:16:00,080
okay let me just run the gazebo

01:15:56,880 --> 01:16:00,080
so we don't run into

01:16:03,280 --> 01:16:06,480
all right then i'll share just the

01:16:04,880 --> 01:16:08,800
gazebo

01:16:06,480 --> 01:16:08,800
screen

01:16:17,600 --> 01:16:21,840
it's not asking now

01:16:28,239 --> 01:16:32,560
marco you may want to try to stop

01:16:30,800 --> 01:16:35,600
sharing your camera first and then

01:16:32,560 --> 01:16:37,600
share your screen

01:16:35,600 --> 01:16:39,840
i think i found it it should be working

01:16:37,600 --> 01:16:43,120
now let me just try

01:16:39,840 --> 01:16:43,120
yeah that should be fine

01:16:46,560 --> 01:16:50,159
all right so you guys should be seeing

01:16:48,239 --> 01:16:53,440
gazebo now

01:16:50,159 --> 01:16:54,080
um yeah so this is the simulator

01:16:53,440 --> 01:16:57,199
environment

01:16:54,080 --> 01:16:59,520
i'm just running one of the models that

01:16:57,199 --> 01:17:01,280
was available there and it's basically

01:16:59,520 --> 01:17:05,040
just moving around

01:17:01,280 --> 01:17:07,840
so the purpose of this uh was to

01:17:05,040 --> 01:17:09,840
um yeah hopefully you guys can see it in

01:17:07,840 --> 01:17:12,800
a bit

01:17:09,840 --> 01:17:12,800
i think it takes a while

01:17:14,400 --> 01:17:21,360
all right yep um yeah so

01:17:19,360 --> 01:17:23,679
uh gazebo provides a lot of tools

01:17:21,360 --> 01:17:25,760
there's a heat in

01:17:23,679 --> 01:17:28,080
it's very hard to open there's there's a

01:17:25,760 --> 01:17:31,040
bunch of stuff that you can

01:17:28,080 --> 01:17:32,400
um you can do around with it there's a

01:17:31,040 --> 01:17:34,239
world

01:17:32,400 --> 01:17:36,880
uh where you have the model so i have an

01:17:34,239 --> 01:17:40,320
actor here this is my actor

01:17:36,880 --> 01:17:42,719
um you have uh gazebo worlds that are

01:17:40,320 --> 01:17:44,000
saved in word files and you have

01:17:42,719 --> 01:17:47,040
different tools

01:17:44,000 --> 01:17:49,280
you can move your your guys

01:17:47,040 --> 01:17:51,360
uh from one place uh you can move your

01:17:49,280 --> 01:17:56,000
models

01:17:51,360 --> 01:17:56,000
uh you can play around with them uh

01:17:56,239 --> 01:18:00,159
there's different ways of moving your

01:17:57,600 --> 01:18:03,440
models here there's you can add basic

01:18:00,159 --> 01:18:06,880
uh basic stuff

01:18:03,440 --> 01:18:08,880
uh this is at the bottom you can see the

01:18:06,880 --> 01:18:11,360
simulation

01:18:08,880 --> 01:18:13,120
the simulation parameters so basically

01:18:11,360 --> 01:18:13,840
you can stop the simulation you can play

01:18:13,120 --> 01:18:15,679
it

01:18:13,840 --> 01:18:17,120
uh you can you can jump steps on the

01:18:15,679 --> 01:18:18,480
simulation

01:18:17,120 --> 01:18:20,640
and then you also have a real time

01:18:18,480 --> 01:18:23,360
factor that indicates uh

01:18:20,640 --> 01:18:24,640
what is uh compare simulation time

01:18:23,360 --> 01:18:26,560
compared to the real time

01:18:24,640 --> 01:18:30,000
what is the difference so right now

01:18:26,560 --> 01:18:31,199
we're at 0.95 so it's a bit below real

01:18:30,000 --> 01:18:34,320
time

01:18:31,199 --> 01:18:36,239
and we have a start time uh

01:18:34,320 --> 01:18:38,159
simulation time and a real time which

01:18:36,239 --> 01:18:40,239
won't be different right

01:18:38,159 --> 01:18:42,000
because we're we're not running at the

01:18:40,239 --> 01:18:43,440
real time factor one so if we're running

01:18:42,000 --> 01:18:44,960
a real time factor one

01:18:43,440 --> 01:18:47,440
simulation time and real time will be

01:18:44,960 --> 01:18:48,560
the same uh then you have the steps and

01:18:47,440 --> 01:18:52,159
iterations that are

01:18:48,560 --> 01:18:53,280
going on and uh fps uh the frames per

01:18:52,159 --> 01:18:55,840
second

01:18:53,280 --> 01:18:57,360
and you can reset time here um there's

01:18:55,840 --> 01:19:00,400
many options here

01:18:57,360 --> 01:19:03,280
basically to move your models this is to

01:19:00,400 --> 01:19:04,400
to align your models uh play around with

01:19:03,280 --> 01:19:08,960
the lights

01:19:04,400 --> 01:19:11,600
you can set up lights you can do um

01:19:08,960 --> 01:19:13,520
all all the all the tools basic tools

01:19:11,600 --> 01:19:15,920
that you want to move your models

01:19:13,520 --> 01:19:18,239
and there's uh on the world you can you

01:19:15,920 --> 01:19:23,840
can play around with uh

01:19:18,239 --> 01:19:23,840
with a gui you can play around with the

01:19:29,120 --> 01:19:31,840
you can play around with the spherical

01:19:30,400 --> 01:19:32,960
coordinates we can play around with

01:19:31,840 --> 01:19:34,480
physics

01:19:32,960 --> 01:19:36,159
this is one of the most important ones

01:19:34,480 --> 01:19:37,440
you can select the physics engine that

01:19:36,159 --> 01:19:40,719
it's running

01:19:37,440 --> 01:19:41,440
so it's running ode which is the default

01:19:40,719 --> 01:19:43,280
one

01:19:41,440 --> 01:19:44,640
but you can you can change this and

01:19:43,280 --> 01:19:47,840
compilation time

01:19:44,640 --> 01:19:47,840
this is a bit easier with

01:19:48,400 --> 01:19:51,920
this is a bit easier with ignition uh

01:19:51,199 --> 01:19:54,080
because

01:19:51,920 --> 01:19:54,960
it doesn't have to be compiled and all

01:19:54,080 --> 01:19:56,960
that so

01:19:54,960 --> 01:19:58,880
this becomes much easier you can you can

01:19:56,960 --> 01:20:02,560
change the real time

01:19:58,880 --> 01:20:03,920
uh maximum real time so if you wanted to

01:20:02,560 --> 01:20:07,920
run

01:20:03,920 --> 01:20:10,560
this is 10 times 10 seconds real time

01:20:07,920 --> 01:20:11,520
you can select the steps of which the

01:20:10,560 --> 01:20:13,840
physics are

01:20:11,520 --> 01:20:13,840
running

01:20:15,040 --> 01:20:22,400
and there's a gravity

01:20:18,800 --> 01:20:24,480
that is a 9.8 as everyone knows

01:20:22,400 --> 01:20:25,760
uh but you can change it and you can

01:20:24,480 --> 01:20:28,000
make it a different

01:20:25,760 --> 01:20:29,120
gravity there's magnetic field on the

01:20:28,000 --> 01:20:30,560
physics

01:20:29,120 --> 01:20:33,199
uh you get your solvers there's a

01:20:30,560 --> 01:20:36,480
constraints you

01:20:33,199 --> 01:20:38,320
you get pressure you get different

01:20:36,480 --> 01:20:41,520
different values that you can adjust

01:20:38,320 --> 01:20:43,440
on your simulation uh to make it uh

01:20:41,520 --> 01:20:44,960
more accurate to whatever model you want

01:20:43,440 --> 01:20:47,920
to to

01:20:44,960 --> 01:20:48,239
change and then you can insert different

01:20:47,920 --> 01:20:50,480
uh

01:20:48,239 --> 01:20:51,360
models so there's there's a bunch of

01:20:50,480 --> 01:20:54,080
models that you can

01:20:51,360 --> 01:20:55,520
you can select from so i have my models

01:20:54,080 --> 01:20:56,960
here and these are the models that we've

01:20:55,520 --> 01:21:00,800
been using for

01:20:56,960 --> 01:21:03,199
um for our projects rmf

01:21:00,800 --> 01:21:04,159
uh and you can you can basically just

01:21:03,199 --> 01:21:07,120
drag and drop them

01:21:04,159 --> 01:21:08,480
and play around with them uh you can

01:21:07,120 --> 01:21:12,960
download models from

01:21:08,480 --> 01:21:15,280
gazeboshim and

01:21:12,960 --> 01:21:17,199
marco if people uh have kind of

01:21:15,280 --> 01:21:19,920
questions on getting this up and running

01:21:17,199 --> 01:21:21,120
um would you be available in like the uh

01:21:19,920 --> 01:21:23,360
the chat room

01:21:21,120 --> 01:21:24,960
uh later today perhaps or is there

01:21:23,360 --> 01:21:26,480
another good way to reach you with

01:21:24,960 --> 01:21:29,520
any follow-up questions people have

01:21:26,480 --> 01:21:32,560
about gazebo or are we

01:21:29,520 --> 01:21:34,080
yeah so i'll i'll wrap it up here um if

01:21:32,560 --> 01:21:37,199
you guys have more questions

01:21:34,080 --> 01:21:41,360
um uh we have the

01:21:37,199 --> 01:21:41,360
office hours of um

01:21:41,440 --> 01:21:45,199
of the open robotics so you can check it

01:21:43,760 --> 01:21:48,719
out on the eve

01:21:45,199 --> 01:21:50,719
exhibitor page i can paste it here

01:21:48,719 --> 01:21:51,840
and then of course i i'll hang out a bit

01:21:50,719 --> 01:21:55,679
on the

01:21:51,840 --> 01:21:59,920
um this discussion uh room for a while

01:21:55,679 --> 01:22:02,719
if anyone wants to ask five questions

01:21:59,920 --> 01:22:04,719
fantastic i really really appreciate all

01:22:02,719 --> 01:22:06,800
of your insights here today

01:22:04,719 --> 01:22:09,360
um and what a great what a great

01:22:06,800 --> 01:22:11,760
workshop what a way to start day two

01:22:09,360 --> 01:22:13,520
i am i am charged up and and ready to go

01:22:11,760 --> 01:22:16,480
we've got a great day lined up

01:22:13,520 --> 01:22:17,360
um as marcus said um we've got a lot of

01:22:16,480 --> 01:22:19,440
exhibitors

01:22:17,360 --> 01:22:21,440
the next hour in fact we have an

01:22:19,440 --> 01:22:22,480
exhibition showcase over in the main

01:22:21,440 --> 01:22:24,880
hall room

01:22:22,480 --> 01:22:26,400
uh you can hang out with marco a little

01:22:24,880 --> 01:22:27,679
more for follow up in the in the

01:22:26,400 --> 01:22:30,320
discussion room

01:22:27,679 --> 01:22:32,080
and tons of great content uh for many

01:22:30,320 --> 01:22:35,360
many more hours today

01:22:32,080 --> 01:22:36,800
on uh open source firmware open hardware

01:22:35,360 --> 01:22:38,960
we're gonna hear more from our

01:22:36,800 --> 01:22:41,360
colleagues in africa and

01:22:38,960 --> 01:22:42,800
some lightning talks lots of great stuff

01:22:41,360 --> 01:22:45,440
here later today so

01:22:42,800 --> 01:22:47,040
stay tuned check the schedule and um

01:22:45,440 --> 01:22:48,080
thank you for joining us here the last

01:22:47,040 --> 01:22:50,639
90 minutes

01:22:48,080 --> 01:22:53,440
uh you've got another 60 seconds or so

01:22:50,639 --> 01:22:56,800
before the before the exhibition uh

01:22:53,440 --> 01:22:58,320
uh showcase kicks off over in the main

01:22:56,800 --> 01:23:00,639
room and thank you all for

01:22:58,320 --> 01:23:02,960
for joining us feel free to hang out as

01:23:00,639 --> 01:23:05,120
mario said you can you can hang out here

01:23:02,960 --> 01:23:06,239
uh this room is gonna stay empty for a

01:23:05,120 --> 01:23:08,560
while so

01:23:06,239 --> 01:23:10,320
feel free to follow up here and but

01:23:08,560 --> 01:23:12,320
we'll sign it off officially

01:23:10,320 --> 01:23:14,320
for the workshop thank you again marco

01:23:12,320 --> 01:23:16,000
we really appreciate it and always enjoy

01:23:14,320 --> 01:23:18,239
learning from you

01:23:16,000 --> 01:23:21,840
thank you thank you guys take care

01:23:18,239 --> 01:23:21,840
everyone have a great day

01:24:14,880 --> 01:24:16,960

YouTube URL: https://www.youtube.com/watch?v=IivImnFzrKM


