Title: What is React Server Side Rendering ? Do I really need it? (Neha)
Publication date: 2021-03-08
Playlist: FOSSASIA Summit 2021
Description: 
	About the speaker: Neha is an enthusiast, open source front end developer and explorer who loves to work on interesting problems. With over 7 years of experience in making Web application for the users, she worked for different companies across the globe, helped to build clean, responsive front-ends for Web applications focused on accessibility, progressive enhancement and performance. She also mentors on fundamentals of front-end development and writes technical articles.
Captions: 
	00:00:00,880 --> 00:00:04,400
hello everyone the topic for this

00:00:02,480 --> 00:00:06,720
session is what is react server side

00:00:04,400 --> 00:00:08,880
rendering and do i really need it

00:00:06,720 --> 00:00:10,800
the topics we are going to cover in this

00:00:08,880 --> 00:00:11,360
talk are different ways to render a web

00:00:10,800 --> 00:00:13,120
page

00:00:11,360 --> 00:00:15,679
what exactly is happening during each

00:00:13,120 --> 00:00:17,359
training and a comparison between them

00:00:15,679 --> 00:00:19,760
as most of you know there are two ways

00:00:17,359 --> 00:00:20,800
to render fp that is client side and

00:00:19,760 --> 00:00:23,119
server side

00:00:20,800 --> 00:00:24,640
let's start with trying side rendering

00:00:23,119 --> 00:00:26,640
so this is how the whole process of

00:00:24,640 --> 00:00:28,480
client-side rendering will look like

00:00:26,640 --> 00:00:30,240
when the server sends response to the

00:00:28,480 --> 00:00:32,480
browser in form of html

00:00:30,240 --> 00:00:34,640
which will just have the skeleton of the

00:00:32,480 --> 00:00:36,640
web page or bare minimum code

00:00:34,640 --> 00:00:38,480
browser downloads the cheese to have the

00:00:36,640 --> 00:00:40,800
page in an intractable state

00:00:38,480 --> 00:00:42,480
browser executes react any other

00:00:40,800 --> 00:00:43,120
templating library that you might be

00:00:42,480 --> 00:00:44,879
using

00:00:43,120 --> 00:00:47,760
when all this is happening you will be

00:00:44,879 --> 00:00:49,840
seeing a loading icon on your browser to

00:00:47,760 --> 00:00:52,399
maintain the calm of the user

00:00:49,840 --> 00:00:53,440
once the browser completes execution the

00:00:52,399 --> 00:00:56,239
page will be both

00:00:53,440 --> 00:00:58,239
viewable and interactable now so let's

00:00:56,239 --> 00:00:59,760
see server side rendering is little bit

00:00:58,239 --> 00:01:01,920
different than csr

00:00:59,760 --> 00:01:04,479
server side rendering server sends ready

00:01:01,920 --> 00:01:06,880
to be rendered html

00:01:04,479 --> 00:01:08,080
response to the browser the browser

00:01:06,880 --> 00:01:10,560
renders the page

00:01:08,080 --> 00:01:12,159
and now it will be variable and then

00:01:10,560 --> 00:01:14,640
browser downloads the js

00:01:12,159 --> 00:01:15,600
browser executes it when all this is

00:01:14,640 --> 00:01:17,680
happening

00:01:15,600 --> 00:01:18,799
you will be seeing a viewable screen on

00:01:17,680 --> 00:01:20,799
your browser

00:01:18,799 --> 00:01:22,080
once the execution is completed the page

00:01:20,799 --> 00:01:24,960
will become now

00:01:22,080 --> 00:01:26,960
intractable so this is to highlight the

00:01:24,960 --> 00:01:28,080
difference between these two in csr

00:01:26,960 --> 00:01:30,799
though the page will be

00:01:28,080 --> 00:01:32,240
up a little bit later but once it's up

00:01:30,799 --> 00:01:35,520
it will be both viewable

00:01:32,240 --> 00:01:37,520
and intractable whereas in ssr

00:01:35,520 --> 00:01:39,119
the page will be up sooner but you need

00:01:37,520 --> 00:01:40,720
to wait a little bit

00:01:39,119 --> 00:01:43,840
longer to have the page in an

00:01:40,720 --> 00:01:46,880
interactive state

00:01:43,840 --> 00:01:48,640
so as you have seen the server side

00:01:46,880 --> 00:01:51,840
rendering renders the initial load

00:01:48,640 --> 00:01:53,840
faster it is because in csr it requires

00:01:51,840 --> 00:01:54,479
more javascript to be downloaded and

00:01:53,840 --> 00:01:56,560
passed

00:01:54,479 --> 00:01:58,399
and also needs to make a second http

00:01:56,560 --> 00:02:00,880
request to load the content

00:01:58,399 --> 00:02:01,759
whereas in ssr your service response to

00:02:00,880 --> 00:02:03,920
the browser

00:02:01,759 --> 00:02:05,759
is the html of a page that is ready to

00:02:03,920 --> 00:02:06,960
be rendered hence the rendering is

00:02:05,759 --> 00:02:08,640
faster

00:02:06,960 --> 00:02:10,720
so you might be thinking which is better

00:02:08,640 --> 00:02:11,920
for me then it's not all black and white

00:02:10,720 --> 00:02:14,319
depends on different

00:02:11,920 --> 00:02:15,840
conditions and scenarios and priorities

00:02:14,319 --> 00:02:18,160
that you might be having

00:02:15,840 --> 00:02:19,920
while building your web application

00:02:18,160 --> 00:02:20,480
let's have a quick comparison between

00:02:19,920 --> 00:02:23,599
these two

00:02:20,480 --> 00:02:27,520
to understand that so advantages of ssr

00:02:23,599 --> 00:02:29,760
over csr are initial page load is faster

00:02:27,520 --> 00:02:31,680
as you have just discussed blank page

00:02:29,760 --> 00:02:34,560
flicker that happens with csr

00:02:31,680 --> 00:02:36,720
isn't a concern for ssr now it's great

00:02:34,560 --> 00:02:38,160
for search engine optimization since the

00:02:36,720 --> 00:02:41,760
content is up

00:02:38,160 --> 00:02:44,080
before we get it the search engine can

00:02:41,760 --> 00:02:46,400
crawl it and index it efficiently which

00:02:44,080 --> 00:02:47,200
is not so possible with csr at least not

00:02:46,400 --> 00:02:48,959
simply

00:02:47,200 --> 00:02:51,280
it's great for static sites so if you

00:02:48,959 --> 00:02:53,680
think of heavily text page sites

00:02:51,280 --> 00:02:57,280
like new york times it's ssr is a

00:02:53,680 --> 00:03:00,800
preferable approach in those scenarios

00:02:57,280 --> 00:03:03,760
the disadvantages of ssr over csr are

00:03:00,800 --> 00:03:05,599
require frequently observer requests and

00:03:03,760 --> 00:03:06,159
hence can create bottleneck for the

00:03:05,599 --> 00:03:08,319
sites

00:03:06,159 --> 00:03:10,080
which are highly interactive throughput

00:03:08,319 --> 00:03:12,879
of your server is also less

00:03:10,080 --> 00:03:13,120
compared to csr the method that we use

00:03:12,879 --> 00:03:15,120
in

00:03:13,120 --> 00:03:16,720
react app to enable server side

00:03:15,120 --> 00:03:18,720
rendering that is react dom

00:03:16,720 --> 00:03:20,800
server dot render to string the

00:03:18,720 --> 00:03:22,879
synchronous cpu pound call

00:03:20,800 --> 00:03:25,040
which will hold the event loop and hence

00:03:22,879 --> 00:03:28,000
the server will not be able to process

00:03:25,040 --> 00:03:29,599
any other request till it completes so

00:03:28,000 --> 00:03:30,560
it's a big consideration for the

00:03:29,599 --> 00:03:32,959
application

00:03:30,560 --> 00:03:34,799
which are going to be highly interactive

00:03:32,959 --> 00:03:36,720
and overall slow page rendering

00:03:34,799 --> 00:03:38,319
since the content so though the content

00:03:36,720 --> 00:03:40,879
is rendered and

00:03:38,319 --> 00:03:43,120
consumer can see it sooner but you won't

00:03:40,879 --> 00:03:46,239
be able to interact it

00:03:43,120 --> 00:03:49,200
until the browser completes execution

00:03:46,239 --> 00:03:50,480
all these reasons lead to non-rich site

00:03:49,200 --> 00:03:52,799
interactions

00:03:50,480 --> 00:03:54,879
so when to use ssr you might want to use

00:03:52,799 --> 00:03:56,159
ssr if you need it for search engine

00:03:54,879 --> 00:03:58,959
optimization

00:03:56,159 --> 00:04:00,000
already have a working react app need

00:03:58,959 --> 00:04:01,680
the best possible

00:04:00,000 --> 00:04:03,040
performance and are willing to pay for

00:04:01,680 --> 00:04:04,319
the extra resources

00:04:03,040 --> 00:04:06,159
and also if you're planning to have a

00:04:04,319 --> 00:04:07,920
heavily text-based sites

00:04:06,159 --> 00:04:09,760
you might not want to use ssr if your

00:04:07,920 --> 00:04:11,599
react app isn't finished yet

00:04:09,760 --> 00:04:13,360
get it up and running then worry about

00:04:11,599 --> 00:04:15,920
the optimization step

00:04:13,360 --> 00:04:17,199
server resources are scales perhaps due

00:04:15,920 --> 00:04:21,000
to low budget or

00:04:17,199 --> 00:04:24,000
inability to scale yeah that's all thank

00:04:21,000 --> 00:04:24,000

YouTube URL: https://www.youtube.com/watch?v=cZAJImy1b6w


