Title: An I2P-based, fully distributed Bank and Exchange by Konrad Baechler
Publication date: 2021-03-17
Playlist: FOSSASIA Summit 2021
Description: 
	FOSSASIA Summit 2021
Captions: 
	00:00:07,839 --> 00:00:11,200
hello and welcome

00:00:09,200 --> 00:00:13,519
my name is conrad i'm one of the

00:00:11,200 --> 00:00:15,759
co-founding members of the non-profit

00:00:13,519 --> 00:00:17,039
association the url exchange i am

00:00:15,759 --> 00:00:20,560
responsible

00:00:17,039 --> 00:00:21,240
for the technology thank you very much

00:00:20,560 --> 00:00:24,080
to the

00:00:21,240 --> 00:00:27,039
forceager21 team to give us a chance

00:00:24,080 --> 00:00:28,720
here to talk this is very kind of you

00:00:27,039 --> 00:00:30,880
and in this talk we're going to take a

00:00:28,720 --> 00:00:33,600
closer technical look

00:00:30,880 --> 00:00:35,760
at diva device the software package

00:00:33,600 --> 00:00:36,480
which is licensed on the ajpl version

00:00:35,760 --> 00:00:38,559
three

00:00:36,480 --> 00:00:42,719
and this is what we're producing at the

00:00:38,559 --> 00:00:42,719
non-profit association debuted exchange

00:00:43,280 --> 00:00:47,360
we already had a chance this year to

00:00:45,120 --> 00:00:49,280
talk at foster but there it was rather

00:00:47,360 --> 00:00:51,440
an introductionary talk

00:00:49,280 --> 00:00:53,360
so if you'd like to get an introduction

00:00:51,440 --> 00:00:56,079
please take a look at this video

00:00:53,360 --> 00:00:57,840
in this talk according to the feedback

00:00:56,079 --> 00:00:58,800
of the community we got we'd like to

00:00:57,840 --> 00:01:01,120
take rather

00:00:58,800 --> 00:01:03,359
a technical path so we're taking a

00:01:01,120 --> 00:01:06,799
closer look at how to install the evo

00:01:03,359 --> 00:01:08,159
how to set up its containers and to make

00:01:06,799 --> 00:01:11,360
it run on your

00:01:08,159 --> 00:01:15,520
on your local device this is all about

00:01:11,360 --> 00:01:18,320
how to become your local i2p based

00:01:15,520 --> 00:01:20,080
fully distributed bank because this is

00:01:18,320 --> 00:01:23,119
what diva is all about

00:01:20,080 --> 00:01:26,320
it's distributed banking technology

00:01:23,119 --> 00:01:29,439
for everyone i suggest that we take a

00:01:26,320 --> 00:01:32,400
look at the agenda now and then

00:01:29,439 --> 00:01:32,400
let's get started

00:01:35,119 --> 00:01:39,439
at the association developer exchange we

00:01:37,439 --> 00:01:41,360
saw that users miss intelligent and

00:01:39,439 --> 00:01:44,200
secure solution to trade

00:01:41,360 --> 00:01:45,520
and store their digital values like

00:01:44,200 --> 00:01:47,200
cryptocurrencies

00:01:45,520 --> 00:01:48,399
they want to enjoy full privacy

00:01:47,200 --> 00:01:50,960
protection they want to enjoy

00:01:48,399 --> 00:01:53,920
independence and self-determination

00:01:50,960 --> 00:01:55,520
so we created the free and open source

00:01:53,920 --> 00:01:58,960
software package called

00:01:55,520 --> 00:02:01,040
diva and as i said it's open it's free

00:01:58,960 --> 00:02:03,759
and it's fully distributed and it

00:02:01,040 --> 00:02:05,600
distributed and it protects the privacy

00:02:03,759 --> 00:02:06,640
of the end users so it's banking

00:02:05,600 --> 00:02:09,039
technology

00:02:06,640 --> 00:02:09,840
for everyone and that's what we're

00:02:09,039 --> 00:02:12,239
developing

00:02:09,840 --> 00:02:13,400
at the non-profit organization and or

00:02:12,239 --> 00:02:16,640
association

00:02:13,400 --> 00:02:18,800
diva.exchange the diva the association

00:02:16,640 --> 00:02:20,720
devoted exchange by the way is open to

00:02:18,800 --> 00:02:22,800
everyone so if you want to participate

00:02:20,720 --> 00:02:26,000
you can do that please just join

00:02:22,800 --> 00:02:28,400
over our website

00:02:26,000 --> 00:02:30,080
we're working on technology solutions

00:02:28,400 --> 00:02:32,560
that's what i said the technology is

00:02:30,080 --> 00:02:34,080
peer-to-peer and we also cooperate with

00:02:32,560 --> 00:02:35,760
universities currently

00:02:34,080 --> 00:02:38,080
in switzerland so we want to be

00:02:35,760 --> 00:02:40,319
scientific agnostic and we're

00:02:38,080 --> 00:02:42,480
100 percentage free and open source

00:02:40,319 --> 00:02:46,160
software

00:02:42,480 --> 00:02:47,840
the users of diva so of the software

00:02:46,160 --> 00:02:48,640
they usually want the following they

00:02:47,840 --> 00:02:50,560
want to

00:02:48,640 --> 00:02:52,800
allocate their digital values in an

00:02:50,560 --> 00:02:54,959
entirely self-determined manner

00:02:52,800 --> 00:02:57,040
they want to have exclusive control over

00:02:54,959 --> 00:02:59,040
their data and values and they want to

00:02:57,040 --> 00:03:01,519
earn the true values as fees

00:02:59,040 --> 00:03:03,280
by participating in the network or being

00:03:01,519 --> 00:03:05,360
part of the infrastructure

00:03:03,280 --> 00:03:06,720
what create we're striving to create

00:03:05,360 --> 00:03:07,840
user and environment friendly

00:03:06,720 --> 00:03:11,519
applications

00:03:07,840 --> 00:03:12,319
at diva on exchange now the application

00:03:11,519 --> 00:03:15,519
stack

00:03:12,319 --> 00:03:17,440
which consists of i2p the blockchain

00:03:15,519 --> 00:03:19,440
layer which is the distributed storage

00:03:17,440 --> 00:03:21,599
the backend at the front end is our next

00:03:19,440 --> 00:03:24,720
topic let me show you here a few slides

00:03:21,599 --> 00:03:27,760
so that we get into it

00:03:24,720 --> 00:03:30,480
the application stack of diva

00:03:27,760 --> 00:03:33,280
consists of several layers the network

00:03:30,480 --> 00:03:34,080
layer is based on i2p and i2p is privacy

00:03:33,280 --> 00:03:36,319
by design

00:03:34,080 --> 00:03:37,440
that's a peer-to-peer network and the

00:03:36,319 --> 00:03:40,080
messages

00:03:37,440 --> 00:03:41,519
travel over multiple nodes taking

00:03:40,080 --> 00:03:45,840
different routes

00:03:41,519 --> 00:03:47,680
inbound to to a recipient and outbound

00:03:45,840 --> 00:03:49,920
back to the sender

00:03:47,680 --> 00:03:51,040
it's end-to-end encrypted and the garlic

00:03:49,920 --> 00:03:53,120
messaging

00:03:51,040 --> 00:03:56,080
protects both identity of the sender and

00:03:53,120 --> 00:03:59,200
recipient and also the message content

00:03:56,080 --> 00:04:01,599
faulty remote network nodes cannot put

00:03:59,200 --> 00:04:03,519
privacy or anonymity of another node

00:04:01,599 --> 00:04:04,959
at risk there is no dependency to

00:04:03,519 --> 00:04:07,680
central infrastructure

00:04:04,959 --> 00:04:08,640
and i2p which is coming in two different

00:04:07,680 --> 00:04:10,799
flavors

00:04:08,640 --> 00:04:12,239
java or c-plus plus is long-standing and

00:04:10,799 --> 00:04:15,439
a very proven

00:04:12,239 --> 00:04:15,760
open-source project at diva.exchange we

00:04:15,439 --> 00:04:17,600
do

00:04:15,760 --> 00:04:19,759
support the research currently together

00:04:17,600 --> 00:04:22,800
with the university of lucerne

00:04:19,759 --> 00:04:29,280
researching i2p its stability

00:04:22,800 --> 00:04:33,440
scalability etc the next layer

00:04:29,280 --> 00:04:35,840
is the storage layer it has to be fully

00:04:33,440 --> 00:04:39,120
distributed so it's a blockchain

00:04:35,840 --> 00:04:41,040
we're using hyperledger iroha currently

00:04:39,120 --> 00:04:44,400
which is a very lightweight

00:04:41,040 --> 00:04:48,080
performance oriented distributed storage

00:04:44,400 --> 00:04:49,680
the consensus is simple and leads to

00:04:48,080 --> 00:04:51,600
energy efficiency which is very

00:04:49,680 --> 00:04:53,919
important to us but we're very

00:04:51,600 --> 00:04:56,000
open for uh for a plugable blockchain

00:04:53,919 --> 00:04:58,560
storage engine and also pluggable

00:04:56,000 --> 00:05:00,320
condensers protocol implementation

00:04:58,560 --> 00:05:00,639
currently there is also research running

00:05:00,320 --> 00:05:03,919
on

00:05:00,639 --> 00:05:05,600
on the on the storage layer by two

00:05:03,919 --> 00:05:07,360
students and we're working that together

00:05:05,600 --> 00:05:11,440
with the zurich university of applied

00:05:07,360 --> 00:05:13,360
science in switzerland

00:05:11,440 --> 00:05:15,280
then there is the application itself so

00:05:13,360 --> 00:05:17,360
the diva application which consists of a

00:05:15,280 --> 00:05:19,120
back and the front end the repository is

00:05:17,360 --> 00:05:21,120
found at codeberg.org

00:05:19,120 --> 00:05:22,960
slash developer exchange slash diva it's

00:05:21,120 --> 00:05:25,199
a node.js application

00:05:22,960 --> 00:05:26,960
we do have minimal dependencies and

00:05:25,199 --> 00:05:28,800
we're very lightweight

00:05:26,960 --> 00:05:31,520
yes we're striving for elegant and

00:05:28,800 --> 00:05:34,080
modern code that's what we're doing and

00:05:31,520 --> 00:05:35,360
now in these weeks and days we're

00:05:34,080 --> 00:05:37,199
working on the trading engine

00:05:35,360 --> 00:05:38,240
implementation for multiple digital

00:05:37,199 --> 00:05:40,800
values and

00:05:38,240 --> 00:05:42,080
cryptocurrencies if you'd like to jump

00:05:40,800 --> 00:05:43,759
in and help out

00:05:42,080 --> 00:05:45,520
with the community and with

00:05:43,759 --> 00:05:48,240
diva.exchange and with diva

00:05:45,520 --> 00:05:48,960
you're very much welcome we're an entry

00:05:48,240 --> 00:05:51,199
level

00:05:48,960 --> 00:05:52,720
friendly project so just get in touch

00:05:51,199 --> 00:05:55,280
with me

00:05:52,720 --> 00:05:56,639
as you can see on the agenda now it's

00:05:55,280 --> 00:05:58,479
time to

00:05:56,639 --> 00:06:00,639
get started with the installation we're

00:05:58,479 --> 00:06:03,759
going to install diva

00:06:00,639 --> 00:06:06,319
on your local environment

00:06:03,759 --> 00:06:08,560
we're doing this on on linux we're using

00:06:06,319 --> 00:06:11,199
docker containers so if you're familiar

00:06:08,560 --> 00:06:12,800
with docker that pro because of the

00:06:11,199 --> 00:06:15,440
current the current status of

00:06:12,800 --> 00:06:16,560
diva of the diva application enables us

00:06:15,440 --> 00:06:18,240
or allows us to

00:06:16,560 --> 00:06:20,000
install it within docker containers so

00:06:18,240 --> 00:06:22,400
we're going to pull up the whole

00:06:20,000 --> 00:06:23,680
environment environment which consists

00:06:22,400 --> 00:06:26,160
of several layers

00:06:23,680 --> 00:06:28,160
like i to p the blockchain layer the

00:06:26,160 --> 00:06:31,280
back end and the front end

00:06:28,160 --> 00:06:33,600
within several several independent

00:06:31,280 --> 00:06:35,199
containers this is what we're calling

00:06:33,600 --> 00:06:38,160
diva dockerized

00:06:35,199 --> 00:06:39,120
within our repositories now let's get

00:06:38,160 --> 00:06:42,400
started

00:06:39,120 --> 00:06:44,560
and i'll guide you through through step

00:06:42,400 --> 00:06:45,919
by step and at the end we're going to

00:06:44,560 --> 00:06:49,199
have a running

00:06:45,919 --> 00:06:52,960
local installation of your own bank

00:06:49,199 --> 00:06:52,960
on your own device

00:06:55,199 --> 00:06:59,440
and now it's time to install diva

00:06:57,440 --> 00:07:00,319
locally there are two possibilities to

00:06:59,440 --> 00:07:03,199
do that

00:07:00,319 --> 00:07:05,520
a as a local seven node network without

00:07:03,199 --> 00:07:07,440
i2p by the way it could also be 11 nodes

00:07:05,520 --> 00:07:09,680
or three nodes but these seven nodes are

00:07:07,440 --> 00:07:12,080
just the example we're going to use here

00:07:09,680 --> 00:07:13,759
and b by joining the existing diva

00:07:12,080 --> 00:07:16,639
network using i2p

00:07:13,759 --> 00:07:19,199
that's the other possibility we're going

00:07:16,639 --> 00:07:21,120
to use here a linux console so you're

00:07:19,199 --> 00:07:22,400
going to also need some docker skills

00:07:21,120 --> 00:07:26,240
and some node.js

00:07:22,400 --> 00:07:27,840
skills at the end a node js application

00:07:26,240 --> 00:07:29,199
will run locally and give you the

00:07:27,840 --> 00:07:33,360
functionality of

00:07:29,199 --> 00:07:34,720
of the evo now first of all we need

00:07:33,360 --> 00:07:37,759
access to the code

00:07:34,720 --> 00:07:39,199
which is here located in the code

00:07:37,759 --> 00:07:42,319
repository

00:07:39,199 --> 00:07:44,879
so it's on codebook.work slash developer

00:07:42,319 --> 00:07:45,520
exchange slash diva here we are on the

00:07:44,879 --> 00:07:48,319
develop

00:07:45,520 --> 00:07:49,919
branch now if you scroll down you are

00:07:48,319 --> 00:07:53,360
going to see the readme

00:07:49,919 --> 00:07:56,080
and within the readme there you also

00:07:53,360 --> 00:07:58,160
find the instructions on how to get

00:07:56,080 --> 00:07:59,199
started so how to do your local

00:07:58,160 --> 00:08:02,400
installation

00:07:59,199 --> 00:08:05,680
first of all we will do the

00:08:02,400 --> 00:08:08,240
seven note local installation and um

00:08:05,680 --> 00:08:10,639
as described here in the in the readme

00:08:08,240 --> 00:08:14,479
you need here you need to have docker

00:08:10,639 --> 00:08:16,560
and docker compose available on your

00:08:14,479 --> 00:08:17,680
system so that's all described here and

00:08:16,560 --> 00:08:20,400
then

00:08:17,680 --> 00:08:22,720
it's really quite simple you just after

00:08:20,400 --> 00:08:24,960
you have access to the code

00:08:22,720 --> 00:08:26,000
which is usually a clone you just

00:08:24,960 --> 00:08:30,080
execute the

00:08:26,000 --> 00:08:33,279
installation script within

00:08:30,080 --> 00:08:36,240
your shell and you can do this as a

00:08:33,279 --> 00:08:39,680
regular user but the script itself then

00:08:36,240 --> 00:08:41,360
will need super user access so it's

00:08:39,680 --> 00:08:43,279
going to ask you for your super user

00:08:41,360 --> 00:08:46,480
password because docker

00:08:43,279 --> 00:08:50,560
requires a privileged

00:08:46,480 --> 00:08:51,600
access all right we're here now in the

00:08:50,560 --> 00:08:54,240
linux terminal

00:08:51,600 --> 00:08:56,480
in the bash and we have cloned the

00:08:54,240 --> 00:08:58,720
source code from codeberg.org

00:08:56,480 --> 00:09:01,120
slash diva.exchange slash diva let's

00:08:58,720 --> 00:09:02,959
take a look at the folder structure here

00:09:01,120 --> 00:09:05,519
yes this is the code from the code

00:09:02,959 --> 00:09:07,920
repository and as it said in the readme

00:09:05,519 --> 00:09:09,839
we're going to start the install script

00:09:07,920 --> 00:09:11,120
if necessary it's going to ask you for

00:09:09,839 --> 00:09:14,240
the privileged

00:09:11,120 --> 00:09:15,920
user password so the root user because

00:09:14,240 --> 00:09:17,360
docker needs access to it what's

00:09:15,920 --> 00:09:20,720
happening right now

00:09:17,360 --> 00:09:23,760
is it's pulling all the necessary images

00:09:20,720 --> 00:09:25,440
from the from the docker hub

00:09:23,760 --> 00:09:27,680
cleaning up your environment to have a

00:09:25,440 --> 00:09:30,880
proper start and then it starts

00:09:27,680 --> 00:09:34,240
the database containers and irohu

00:09:30,880 --> 00:09:35,920
containers and the explorer and the api

00:09:34,240 --> 00:09:38,560
and as soon as this is done it's

00:09:35,920 --> 00:09:39,839
installing the node.js application and

00:09:38,560 --> 00:09:42,720
the local

00:09:39,839 --> 00:09:43,120
sqlite database and as soon as this is

00:09:42,720 --> 00:09:46,880
done

00:09:43,120 --> 00:09:48,800
like right now it's waiting for the api

00:09:46,880 --> 00:09:49,600
so that's one of the docker containers

00:09:48,800 --> 00:09:53,040
to become

00:09:49,600 --> 00:09:56,000
ready and as soon as the api is there

00:09:53,040 --> 00:09:57,200
it's executing the installer itself and

00:09:56,000 --> 00:10:00,399
ta-da

00:09:57,200 --> 00:10:04,000
the whole dvr application

00:10:00,399 --> 00:10:07,600
including seven nodes is now available

00:10:04,000 --> 00:10:10,720
let's take a closer look here quickly

00:10:07,600 --> 00:10:11,839
using docker whether all containers are

00:10:10,720 --> 00:10:15,760
running

00:10:11,839 --> 00:10:19,120
and yes we're seeing that here seven

00:10:15,760 --> 00:10:20,399
nodes are properly running since about

00:10:19,120 --> 00:10:23,760
40 seconds

00:10:20,399 --> 00:10:24,640
the api is there and the explorer is

00:10:23,760 --> 00:10:28,480
there

00:10:24,640 --> 00:10:32,399
so that's a great start so now back to

00:10:28,480 --> 00:10:34,720
the code code repository for a moment

00:10:32,399 --> 00:10:36,480
so if we're back here on the code book

00:10:34,720 --> 00:10:37,680
repository we see that here and within

00:10:36,480 --> 00:10:40,320
the readme it's also

00:10:37,680 --> 00:10:41,920
shown that these containers are should

00:10:40,320 --> 00:10:42,560
be running and that's what we just

00:10:41,920 --> 00:10:44,560
checked

00:10:42,560 --> 00:10:46,320
in the terminal just before because we

00:10:44,560 --> 00:10:50,399
executed install

00:10:46,320 --> 00:10:53,279
and this install has has created local

00:10:50,399 --> 00:10:54,800
local iroha blockchain node so these

00:10:53,279 --> 00:10:56,720
seven nodes which are now our

00:10:54,800 --> 00:10:59,040
distributed local storages

00:10:56,720 --> 00:11:00,399
it's only local so we're not connected

00:10:59,040 --> 00:11:04,079
to i2 i2p

00:11:00,399 --> 00:11:05,680
testnet of diva yet and i suggest that

00:11:04,079 --> 00:11:06,480
in the beginning it's always kind of

00:11:05,680 --> 00:11:08,480
before we

00:11:06,480 --> 00:11:09,519
before we start the divo application

00:11:08,480 --> 00:11:12,079
it's useful

00:11:09,519 --> 00:11:14,320
to take a look whether the blockchain is

00:11:12,079 --> 00:11:15,440
properly running and if you wait a few

00:11:14,320 --> 00:11:17,440
minutes then

00:11:15,440 --> 00:11:18,880
and i already started it here and on

00:11:17,440 --> 00:11:21,519
this tab

00:11:18,880 --> 00:11:22,399
that the blocks are created because the

00:11:21,519 --> 00:11:25,760
api is

00:11:22,399 --> 00:11:26,480
writing is writing blocks from time to

00:11:25,760 --> 00:11:29,360
time

00:11:26,480 --> 00:11:31,200
every every minute more or less if

00:11:29,360 --> 00:11:32,959
you're clicking on one of those blocks

00:11:31,200 --> 00:11:35,600
you see the detailed

00:11:32,959 --> 00:11:36,560
data the json data which is forming this

00:11:35,600 --> 00:11:39,120
block

00:11:36,560 --> 00:11:39,680
all right back to code berg and as you

00:11:39,120 --> 00:11:42,880
see

00:11:39,680 --> 00:11:44,959
here in the readme um we should execute

00:11:42,880 --> 00:11:45,760
bin start and that's exactly what we're

00:11:44,959 --> 00:11:49,040
going to do

00:11:45,760 --> 00:11:52,240
this bin start is now starting the

00:11:49,040 --> 00:11:54,720
diva application so back

00:11:52,240 --> 00:11:56,880
to the terminal back to the bash let's

00:11:54,720 --> 00:11:59,200
execute bin start

00:11:56,880 --> 00:12:00,720
and what's happening now is all right

00:11:59,200 --> 00:12:02,959
it's pulling those

00:12:00,720 --> 00:12:04,399
docker images again which is need which

00:12:02,959 --> 00:12:05,920
are needed for

00:12:04,399 --> 00:12:07,920
the database layer and for the

00:12:05,920 --> 00:12:11,920
blockchain and

00:12:07,920 --> 00:12:15,040
now it's starting the node js

00:12:11,920 --> 00:12:18,399
application and it tries to

00:12:15,040 --> 00:12:22,160
fetch from the running api

00:12:18,399 --> 00:12:25,760
the the token to get access to

00:12:22,160 --> 00:12:28,240
the local to the local web application

00:12:25,760 --> 00:12:29,440
and then as you can see an http server

00:12:28,240 --> 00:12:33,040
is listening

00:12:29,440 --> 00:12:36,240
a websocket service listening and an api

00:12:33,040 --> 00:12:36,560
is um has and the connection to the api

00:12:36,240 --> 00:12:40,399
has

00:12:36,560 --> 00:12:41,519
has established back to codeburg to the

00:12:40,399 --> 00:12:44,240
readme

00:12:41,519 --> 00:12:45,680
because the readme says that we should

00:12:44,240 --> 00:12:48,079
have now

00:12:45,680 --> 00:12:49,279
this here available so open this in a

00:12:48,079 --> 00:12:54,160
new tab

00:12:49,279 --> 00:12:57,279
and let's see whether devo is here

00:12:54,160 --> 00:12:58,720
so yes device here and let me switch

00:12:57,279 --> 00:13:02,079
here the language to

00:12:58,720 --> 00:13:03,279
english um this is a pure demo

00:13:02,079 --> 00:13:06,160
application but it's

00:13:03,279 --> 00:13:06,639
it's fully functional so we can like add

00:13:06,160 --> 00:13:10,000
here

00:13:06,639 --> 00:13:13,600
some order book data let's buy

00:13:10,000 --> 00:13:16,000
10 at 100. now this is just

00:13:13,600 --> 00:13:18,240
as i said a local order book and what's

00:13:16,000 --> 00:13:19,440
happening now you're placing an order on

00:13:18,240 --> 00:13:22,720
the market

00:13:19,440 --> 00:13:25,120
this in this example here it's a buy

00:13:22,720 --> 00:13:26,880
order and you also can place your own

00:13:25,120 --> 00:13:30,560
sell orders let's sell

00:13:26,880 --> 00:13:30,560
24 200

00:13:30,639 --> 00:13:37,279
and um

00:13:35,519 --> 00:13:39,600
as you can see by the way that's what

00:13:37,279 --> 00:13:41,680
just saw we have here a bug in the user

00:13:39,600 --> 00:13:44,240
interface it's all alpha

00:13:41,680 --> 00:13:46,160
but the data is written to the

00:13:44,240 --> 00:13:47,360
blockchain so what we're going to see

00:13:46,160 --> 00:13:50,959
here are now

00:13:47,360 --> 00:13:55,440
the order book data of btc xml

00:13:50,959 --> 00:13:58,240
xmr on on the blockchain

00:13:55,440 --> 00:13:58,800
so this is all properly working and fact

00:13:58,240 --> 00:14:02,160
is

00:13:58,800 --> 00:14:05,519
we do have we do have

00:14:02,160 --> 00:14:10,000
a running diva application and yes

00:14:05,519 --> 00:14:11,120
we need um lots of support and time also

00:14:10,000 --> 00:14:14,079
to

00:14:11,120 --> 00:14:15,920
to finalize this this this exchange and

00:14:14,079 --> 00:14:16,639
this banking application and you're very

00:14:15,920 --> 00:14:19,040
welcome

00:14:16,639 --> 00:14:20,240
to join us did i already say that yes i

00:14:19,040 --> 00:14:22,959
did properly

00:14:20,240 --> 00:14:24,800
all right okay let's wrap it up let's go

00:14:22,959 --> 00:14:28,079
back to cookberg

00:14:24,800 --> 00:14:29,199
we have run into docker containers which

00:14:28,079 --> 00:14:32,240
form

00:14:29,199 --> 00:14:36,000
the blockchain layer which do contain

00:14:32,240 --> 00:14:39,839
iroho then we do have started

00:14:36,000 --> 00:14:43,600
using bin started node.js application

00:14:39,839 --> 00:14:46,720
and the result is on localhost

00:14:43,600 --> 00:14:50,320
a viva application which is based

00:14:46,720 --> 00:14:54,079
on the local blockchain

00:14:50,320 --> 00:14:56,839
network okay

00:14:54,079 --> 00:14:58,000
that was the installation now you have a

00:14:56,839 --> 00:15:02,480
running

00:14:58,000 --> 00:15:02,480
own bank on your local device

00:15:02,800 --> 00:15:09,600
as you can see back on the agenda

00:15:06,160 --> 00:15:11,920
we'd like to talk shortly about

00:15:09,600 --> 00:15:13,600
the community so how to get involved as

00:15:11,920 --> 00:15:16,000
a developer as a designer

00:15:13,600 --> 00:15:16,959
or help us communicate in several

00:15:16,000 --> 00:15:21,120
languages

00:15:16,959 --> 00:15:24,560
or help us to to document and to test

00:15:21,120 --> 00:15:27,440
as you know we closely cooperate

00:15:24,560 --> 00:15:28,880
with universities and schools currently

00:15:27,440 --> 00:15:31,040
in switzerland

00:15:28,880 --> 00:15:33,680
and we're an open association to

00:15:31,040 --> 00:15:37,360
everyone so if you'd like to

00:15:33,680 --> 00:15:40,000
do some research based on diva

00:15:37,360 --> 00:15:41,120
wherever you are located as a university

00:15:40,000 --> 00:15:44,000
or school

00:15:41,120 --> 00:15:44,959
just contact us get in contact with with

00:15:44,000 --> 00:15:49,279
carolyn

00:15:44,959 --> 00:15:52,480
of the auto exchange and set up a

00:15:49,279 --> 00:15:55,920
scientific partnership we're very much

00:15:52,480 --> 00:15:57,279
interested in having a very scientific

00:15:55,920 --> 00:16:00,639
and agnostic

00:15:57,279 --> 00:16:03,920
look at the project

00:16:00,639 --> 00:16:05,279
diva as your name as you know everything

00:16:03,920 --> 00:16:08,639
what we're doing

00:16:05,279 --> 00:16:12,560
is hepl3 version

00:16:08,639 --> 00:16:14,880
hgpl version 3 licensed or compatible

00:16:12,560 --> 00:16:17,440
so all the work is public all the work

00:16:14,880 --> 00:16:20,480
is is open source

00:16:17,440 --> 00:16:22,399
and so is the research work

00:16:20,480 --> 00:16:24,600
additionally we do have code

00:16:22,399 --> 00:16:26,000
repositories which are mainly on

00:16:24,600 --> 00:16:28,320
codework.org

00:16:26,000 --> 00:16:29,360
slash devoter exchange and then married

00:16:28,320 --> 00:16:32,240
to gitlab and

00:16:29,360 --> 00:16:35,279
to github and by the way if you like to

00:16:32,240 --> 00:16:37,680
get involved as a

00:16:35,279 --> 00:16:38,720
as a community manager we're always

00:16:37,680 --> 00:16:41,360
looking um

00:16:38,720 --> 00:16:42,959
some way to manage our issues and to

00:16:41,360 --> 00:16:46,560
look at our issues

00:16:42,959 --> 00:16:48,399
um on the code repository platform so

00:16:46,560 --> 00:16:51,360
just get in touch with me

00:16:48,399 --> 00:16:52,160
please use our telegram chat or send me

00:16:51,360 --> 00:16:55,199
an email

00:16:52,160 --> 00:16:58,240
use the website diva.exchange to find

00:16:55,199 --> 00:17:00,880
our contact details we believe at the

00:16:58,240 --> 00:17:03,680
association devoted exchange we're very

00:17:00,880 --> 00:17:04,000
entry level friendly and we're very open

00:17:03,680 --> 00:17:06,799
and

00:17:04,000 --> 00:17:07,600
diverse community so you as a developer

00:17:06,799 --> 00:17:10,559
as a designer

00:17:07,600 --> 00:17:11,120
as a front-end designer you're very very

00:17:10,559 --> 00:17:14,640
welcome

00:17:11,120 --> 00:17:17,439
to just join in join us in the chat

00:17:14,640 --> 00:17:18,000
get in touch with us talk about your

00:17:17,439 --> 00:17:20,000
vision of

00:17:18,000 --> 00:17:22,079
diva and what you like to do with it and

00:17:20,000 --> 00:17:26,000
i'm sure we're going to have a very

00:17:22,079 --> 00:17:29,200
constructive and interesting talk

00:17:26,000 --> 00:17:32,720
now thank you very much for listening

00:17:29,200 --> 00:17:34,320
to this presentation and i'm very

00:17:32,720 --> 00:17:37,200
curious about all your

00:17:34,320 --> 00:17:38,080
questions and your open feedback

00:17:37,200 --> 00:17:40,640
everything

00:17:38,080 --> 00:17:41,360
you tell us we can learn from and we can

00:17:40,640 --> 00:17:43,440
improve

00:17:41,360 --> 00:17:44,480
at devoted exchange we can make the

00:17:43,440 --> 00:17:47,120
software better

00:17:44,480 --> 00:17:49,520
we can make our communication better so

00:17:47,120 --> 00:17:52,000
you're very very much invited

00:17:49,520 --> 00:17:52,720
to ask all your questions you have in

00:17:52,000 --> 00:17:55,840
mind

00:17:52,720 --> 00:17:58,720
and therefore we now continue with q

00:17:55,840 --> 00:17:59,360
a thank you for your time thank you for

00:17:58,720 --> 00:18:01,760
your

00:17:59,360 --> 00:18:04,720
support of open source software

00:18:01,760 --> 00:18:08,160
especially hgpl version 3 project

00:18:04,720 --> 00:18:10,480
and do not hesitate to donate

00:18:08,160 --> 00:18:11,440
to diva.exchange all right see you in

00:18:10,480 --> 00:18:15,840
the q a

00:18:11,440 --> 00:18:15,840
thank you

00:18:17,679 --> 00:18:19,760

YouTube URL: https://www.youtube.com/watch?v=ZKfJY_78QlM


