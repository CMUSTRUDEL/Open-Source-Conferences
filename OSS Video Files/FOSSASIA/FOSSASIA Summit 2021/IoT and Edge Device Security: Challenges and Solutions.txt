Title: IoT and Edge Device Security: Challenges and Solutions
Publication date: 2021-03-17
Playlist: FOSSASIA Summit 2021
Description: 
	FOSSASIA Summit 2021
Captions: 
	00:00:01,920 --> 00:00:07,040
welcome everyone to this panel

00:00:03,840 --> 00:00:08,800
on edge device security uh i'm your host

00:00:07,040 --> 00:00:09,760
frederick debian from the eclipse

00:00:08,800 --> 00:00:12,000
foundation

00:00:09,760 --> 00:00:13,519
i'm program manager there for iot and

00:00:12,000 --> 00:00:16,080
edge computing

00:00:13,519 --> 00:00:17,920
our goal today is to have you know a

00:00:16,080 --> 00:00:20,160
wide-ranging conversation

00:00:17,920 --> 00:00:21,439
about both the challenges the potential

00:00:20,160 --> 00:00:24,400
solutions

00:00:21,439 --> 00:00:24,720
to edge device security and with me i've

00:00:24,400 --> 00:00:27,439
got

00:00:24,720 --> 00:00:29,359
four fantastic guests in driving this

00:00:27,439 --> 00:00:32,719
conversation forward

00:00:29,359 --> 00:00:35,120
so let's introduce them first is

00:00:32,719 --> 00:00:35,120
dion

00:00:35,760 --> 00:00:42,160
hello hey my name is dan i'm an

00:00:38,960 --> 00:00:42,559
engineer i work as an engineer for red

00:00:42,160 --> 00:00:45,840
hat

00:00:42,559 --> 00:00:48,800
i've been in the iot space for the like

00:00:45,840 --> 00:00:49,360
last i think five years or so and been

00:00:48,800 --> 00:00:51,280
drawn

00:00:49,360 --> 00:00:52,399
into the edge computing in the last

00:00:51,280 --> 00:00:55,520
couple of

00:00:52,399 --> 00:00:58,800
of years excellent next

00:00:55,520 --> 00:01:00,079
is angelo okay thank you frederick so

00:00:58,800 --> 00:01:03,359
angela corsaro

00:01:00,079 --> 00:01:06,000
cto at adlink uh within eclipse

00:01:03,359 --> 00:01:07,600
i lead quite a few as a project in the

00:01:06,000 --> 00:01:10,720
context of eclipse

00:01:07,600 --> 00:01:13,040
edge native and eclipse iot in between

00:01:10,720 --> 00:01:14,000
and between those and i've been involved

00:01:13,040 --> 00:01:15,759
with edge and from

00:01:14,000 --> 00:01:17,680
fog computing since uh the very

00:01:15,759 --> 00:01:18,479
beginning in fact i was involved in some

00:01:17,680 --> 00:01:21,759
of the

00:01:18,479 --> 00:01:24,320
super early project in this context so

00:01:21,759 --> 00:01:25,200
it's a pleasure to be with you today

00:01:24,320 --> 00:01:28,720
thank you angelo

00:01:25,200 --> 00:01:31,759
nicola uh thank you frederick i'm nicola

00:01:28,720 --> 00:01:35,520
um the gloria from kinetics uh

00:01:31,759 --> 00:01:38,400
my company uh is members of the

00:01:35,520 --> 00:01:39,119
foundation and i'm i'm a member of the

00:01:38,400 --> 00:01:42,479
edge

00:01:39,119 --> 00:01:42,799
working group our company is actually in

00:01:42,479 --> 00:01:44,960
the

00:01:42,799 --> 00:01:46,560
os operating system embedded device

00:01:44,960 --> 00:01:50,000
operating system space

00:01:46,560 --> 00:01:52,079
and um we are also

00:01:50,000 --> 00:01:54,079
contributors to a couple of projects

00:01:52,079 --> 00:01:58,719
inside the eclipse foundation

00:01:54,079 --> 00:02:01,840
thank you and last but not least is ted

00:01:58,719 --> 00:02:03,920
uh yeah hi my name is ted ross i'm an

00:02:01,840 --> 00:02:06,079
engineer out of the boston area i'm

00:02:03,920 --> 00:02:08,560
actually freelancing now

00:02:06,079 --> 00:02:09,119
working on some open source technologies

00:02:08,560 --> 00:02:11,120
around

00:02:09,119 --> 00:02:12,400
the scupper project on apache cubic

00:02:11,120 --> 00:02:15,440
dispatch router project

00:02:12,400 --> 00:02:18,480
and my interest is not so much iot

00:02:15,440 --> 00:02:19,280
but more uh cloud networking and edge

00:02:18,480 --> 00:02:20,959
computing

00:02:19,280 --> 00:02:22,640
and the networking involved in the edge

00:02:20,959 --> 00:02:25,760
computing

00:02:22,640 --> 00:02:29,280
thank you very much all right so uh

00:02:25,760 --> 00:02:30,400
first segment uh let's start talking by

00:02:29,280 --> 00:02:32,480
in a general

00:02:30,400 --> 00:02:35,040
you know in a general setting about the

00:02:32,480 --> 00:02:38,400
challenges of edge security

00:02:35,040 --> 00:02:40,480
so dion uh what are

00:02:38,400 --> 00:02:41,440
you know the edge device security

00:02:40,480 --> 00:02:43,760
challenges and

00:02:41,440 --> 00:02:47,360
in in what way are they different from

00:02:43,760 --> 00:02:47,360
those of traditional i.t

00:02:47,680 --> 00:02:51,760
well one of the big differences that we

00:02:49,599 --> 00:02:53,519
have uh when we talk about touch

00:02:51,760 --> 00:02:55,040
computing and differences between the

00:02:53,519 --> 00:02:57,280
cloud computing is is that

00:02:55,040 --> 00:02:59,519
you know our hardware is is much more

00:02:57,280 --> 00:03:02,319
geographically dispersed now right

00:02:59,519 --> 00:03:03,360
being being the clusters that are

00:03:02,319 --> 00:03:05,680
deployed

00:03:03,360 --> 00:03:06,640
outside of the data centers or just the

00:03:05,680 --> 00:03:10,080
single nodes

00:03:06,640 --> 00:03:11,760
or of compute we have devices that are

00:03:10,080 --> 00:03:15,760
not physically protected

00:03:11,760 --> 00:03:18,800
so that stems a lot of a lot of

00:03:15,760 --> 00:03:21,440
questions about security ranging from

00:03:18,800 --> 00:03:22,400
from all the layers of security there so

00:03:21,440 --> 00:03:25,840
starting with

00:03:22,400 --> 00:03:28,319
can you trust that hardware is is

00:03:25,840 --> 00:03:29,280
is proper right trusting the hardware

00:03:28,319 --> 00:03:32,799
layer

00:03:29,280 --> 00:03:36,159
trusting the the uh you know os and

00:03:32,799 --> 00:03:38,319
thermal firmer levels of those devices

00:03:36,159 --> 00:03:40,239
and and you know thinking about if

00:03:38,319 --> 00:03:41,760
someone someone you know tampered with

00:03:40,239 --> 00:03:43,760
with the

00:03:41,760 --> 00:03:44,959
with with the software on the hardware

00:03:43,760 --> 00:03:47,040
and

00:03:44,959 --> 00:03:48,159
so you know going from the hardware to

00:03:47,040 --> 00:03:50,640
the firmware and

00:03:48,159 --> 00:03:52,319
operating systems all the way to the to

00:03:50,640 --> 00:03:52,959
the micro services and applications

00:03:52,319 --> 00:03:56,239
running

00:03:52,959 --> 00:03:56,799
running on on that hardware so you you

00:03:56,239 --> 00:03:59,680
can see

00:03:56,799 --> 00:04:01,519
on the applications level level are we

00:03:59,680 --> 00:04:04,400
you know running the container images

00:04:01,519 --> 00:04:05,519
that are supposed to be around there uh

00:04:04,400 --> 00:04:09,760
how how are we

00:04:05,519 --> 00:04:13,280
you know uh uh sharing the secrets

00:04:09,760 --> 00:04:15,599
to those uh uh unprotected locations

00:04:13,280 --> 00:04:17,199
and then you know do we have a mechanism

00:04:15,599 --> 00:04:20,479
for those

00:04:17,199 --> 00:04:21,280
uh micro services to be restricted in in

00:04:20,479 --> 00:04:24,479
their own

00:04:21,280 --> 00:04:25,040
in their own uh so to say sandboxes and

00:04:24,479 --> 00:04:28,240
not

00:04:25,040 --> 00:04:30,240
interfere with each other

00:04:28,240 --> 00:04:32,400
and that makes sense and and at the same

00:04:30,240 --> 00:04:32,720
time i mean okay there are many many of

00:04:32,400 --> 00:04:34,560
the

00:04:32,720 --> 00:04:36,800
the challenges that we just discussed

00:04:34,560 --> 00:04:39,520
that are specific to the device

00:04:36,800 --> 00:04:41,840
but all of those devices ultimately will

00:04:39,520 --> 00:04:42,800
will speak to the cloud at some point

00:04:41,840 --> 00:04:45,440
right

00:04:42,800 --> 00:04:46,080
those are not self-contained systems so

00:04:45,440 --> 00:04:48,479
uh

00:04:46,080 --> 00:04:49,199
what role could we say that the cloud

00:04:48,479 --> 00:04:52,240
plays in

00:04:49,199 --> 00:04:55,040
edge device security yeah

00:04:52,240 --> 00:04:56,160
so in my point of view so one thing that

00:04:55,040 --> 00:04:58,400
i didn't mention

00:04:56,160 --> 00:05:00,639
at first is is that you know there are

00:04:58,400 --> 00:05:01,600
also devices connecting to the edge

00:05:00,639 --> 00:05:05,280
infrastructure right

00:05:01,600 --> 00:05:08,560
that we are not even not uh considered

00:05:05,280 --> 00:05:09,600
part of the edge and and what we need to

00:05:08,560 --> 00:05:13,479
provide is

00:05:09,600 --> 00:05:16,320
is like a a single

00:05:13,479 --> 00:05:17,360
continuously experienced for all that

00:05:16,320 --> 00:05:20,800
and that's where

00:05:17,360 --> 00:05:23,840
where the cloud play a massive roles

00:05:20,800 --> 00:05:24,800
so so we need to help if you want to

00:05:23,840 --> 00:05:26,800
trust

00:05:24,800 --> 00:05:28,639
devices that are connected we need to

00:05:26,800 --> 00:05:31,039
have a proper

00:05:28,639 --> 00:05:31,840
the device management and device

00:05:31,039 --> 00:05:34,720
provisioning

00:05:31,840 --> 00:05:36,240
of those devices if you want to if you

00:05:34,720 --> 00:05:38,960
want to handle properly

00:05:36,240 --> 00:05:40,160
operating system and firmware we need to

00:05:38,960 --> 00:05:42,960
have a proper

00:05:40,160 --> 00:05:44,720
rollouts of the framework to to a large

00:05:42,960 --> 00:05:48,479
number of external

00:05:44,720 --> 00:05:52,080
uh nodes and of course we need to have a

00:05:48,479 --> 00:05:54,479
a trusted way to to to distribute

00:05:52,080 --> 00:05:55,680
our applications microservices uh

00:05:54,479 --> 00:05:58,319
container images

00:05:55,680 --> 00:05:59,280
and secrets to those locations so that

00:05:58,319 --> 00:06:01,759
that's

00:05:59,280 --> 00:06:02,560
all the job of the cloud to provide that

00:06:01,759 --> 00:06:05,759
infrastructure

00:06:02,560 --> 00:06:07,840
to to basically manage all that in a

00:06:05,759 --> 00:06:09,600
scalable way

00:06:07,840 --> 00:06:11,600
and obviously at the eclipse foundation

00:06:09,600 --> 00:06:13,120
we love open source we work in open

00:06:11,600 --> 00:06:16,080
source all the time

00:06:13,120 --> 00:06:17,039
um so are there specific open source

00:06:16,080 --> 00:06:19,120
projects that

00:06:17,039 --> 00:06:20,800
address the challenges that you just

00:06:19,120 --> 00:06:21,280
told us about are there things that

00:06:20,800 --> 00:06:23,280
people

00:06:21,280 --> 00:06:24,560
can can download straight away and start

00:06:23,280 --> 00:06:28,160
building a secure

00:06:24,560 --> 00:06:31,600
edge uh infrastructure with it yeah

00:06:28,160 --> 00:06:33,919
so there is but

00:06:31,600 --> 00:06:35,360
my experience for the last last x years

00:06:33,919 --> 00:06:37,120
doing iot and edge

00:06:35,360 --> 00:06:39,520
so there's hard to find a single

00:06:37,120 --> 00:06:42,160
solution to all the problems right

00:06:39,520 --> 00:06:43,680
so so you have all these bits and pieces

00:06:42,160 --> 00:06:46,240
dispersed to different projects

00:06:43,680 --> 00:06:47,120
trying to to solve solve different

00:06:46,240 --> 00:06:50,319
things

00:06:47,120 --> 00:06:52,880
so for example eclipse holo contains uh

00:06:50,319 --> 00:06:54,720
our concept of device registry right and

00:06:52,880 --> 00:06:57,440
managing of credentials

00:06:54,720 --> 00:06:59,440
and and for secure connectivity of

00:06:57,440 --> 00:07:00,560
devices to the cloud or to the edge

00:06:59,440 --> 00:07:02,800
infrastructure

00:07:00,560 --> 00:07:04,400
eclipse hobbit is another project that

00:07:02,800 --> 00:07:07,680
that deals with with the

00:07:04,400 --> 00:07:10,560
software rollouts updates of firmware

00:07:07,680 --> 00:07:12,080
and and basically any any kind of

00:07:10,560 --> 00:07:15,120
software

00:07:12,080 --> 00:07:17,120
uh but we also have here things outside

00:07:15,120 --> 00:07:17,680
of the eclipse community as well for

00:07:17,120 --> 00:07:20,160
example

00:07:17,680 --> 00:07:22,560
the the harbor project is something that

00:07:20,160 --> 00:07:24,639
that tries to provide a way

00:07:22,560 --> 00:07:25,680
to be able to to have a like a

00:07:24,639 --> 00:07:28,080
distributed

00:07:25,680 --> 00:07:29,520
container registry which which can have

00:07:28,080 --> 00:07:32,160
a a really

00:07:29,520 --> 00:07:33,199
great place uh into the you know edge

00:07:32,160 --> 00:07:35,680
computing with

00:07:33,199 --> 00:07:37,039
with docker-based and contain container

00:07:35,680 --> 00:07:40,319
based

00:07:37,039 --> 00:07:42,400
technologies okay that makes sense

00:07:40,319 --> 00:07:44,160
and and obviously our edge computing

00:07:42,400 --> 00:07:46,240
projects in the edge native working

00:07:44,160 --> 00:07:49,280
group have a

00:07:46,240 --> 00:07:50,240
a deep concern about obviously security

00:07:49,280 --> 00:07:53,360
so so maybe

00:07:50,240 --> 00:07:54,639
uh angelo uh since you're you know

00:07:53,360 --> 00:07:56,720
involved in one of those

00:07:54,639 --> 00:07:59,840
uh what's your what's your perspective

00:07:56,720 --> 00:07:59,840
on this

00:08:00,000 --> 00:08:04,560
well uh so i think one of the

00:08:03,039 --> 00:08:07,039
of the assets that we have to integrate

00:08:04,560 --> 00:08:10,000
when we talk about security

00:08:07,039 --> 00:08:12,000
in age application is that in the end

00:08:10,000 --> 00:08:14,400
yes the cloud will have a role but

00:08:12,000 --> 00:08:16,400
if you really want to scale uh we need

00:08:14,400 --> 00:08:18,000
to make sure that um

00:08:16,400 --> 00:08:19,759
you know in a way we have a change of

00:08:18,000 --> 00:08:22,720
paradigm and i think it too into

00:08:19,759 --> 00:08:23,840
into respect so if we focus for a moment

00:08:22,720 --> 00:08:25,120
on data

00:08:23,840 --> 00:08:27,120
um if you think about how we have

00:08:25,120 --> 00:08:30,000
secured data so far usually

00:08:27,120 --> 00:08:30,720
what you do you build security around it

00:08:30,000 --> 00:08:32,880
right so

00:08:30,720 --> 00:08:35,200
you make sure that you can't access data

00:08:32,880 --> 00:08:37,360
that you don't have the rights to access

00:08:35,200 --> 00:08:38,479
that's easy on a cloud environment easy

00:08:37,360 --> 00:08:40,240
between both

00:08:38,479 --> 00:08:42,000
but if you think about taking that

00:08:40,240 --> 00:08:44,320
approach and and moving it to the edge

00:08:42,000 --> 00:08:46,880
in which all of a sudden you have data

00:08:44,320 --> 00:08:48,880
that is decentralized well it's much

00:08:46,880 --> 00:08:51,200
easier to tamper with devices so

00:08:48,880 --> 00:08:52,080
that's not going to work so all of a

00:08:51,200 --> 00:08:54,000
sudden

00:08:52,080 --> 00:08:55,279
i think and at least that's the

00:08:54,000 --> 00:08:58,160
direction we are taking

00:08:55,279 --> 00:08:58,560
um also in some of the our open source

00:08:58,160 --> 00:09:01,600
um

00:08:58,560 --> 00:09:03,279
uh project at eclipse is that uh we have

00:09:01,600 --> 00:09:04,480
to change the paradigm and all of a

00:09:03,279 --> 00:09:08,480
sudden

00:09:04,480 --> 00:09:09,279
actually um agree that um devices are

00:09:08,480 --> 00:09:11,120
out there

00:09:09,279 --> 00:09:13,200
uh people might get all the of the

00:09:11,120 --> 00:09:15,839
device damper the device and

00:09:13,200 --> 00:09:17,200
access the data so the key point is that

00:09:15,839 --> 00:09:18,399
with that data they shouldn't be able to

00:09:17,200 --> 00:09:19,839
do anything

00:09:18,399 --> 00:09:21,040
okay so we are trying to change

00:09:19,839 --> 00:09:21,680
completely the paradigm for what

00:09:21,040 --> 00:09:24,480
concerns

00:09:21,680 --> 00:09:25,760
security at least at the data level and

00:09:24,480 --> 00:09:27,760
making sure that

00:09:25,760 --> 00:09:29,440
now instead of assuming and making it

00:09:27,760 --> 00:09:31,200
hard for you to access

00:09:29,440 --> 00:09:33,360
it's making it hard for you to do

00:09:31,200 --> 00:09:35,120
anything unless you have the right

00:09:33,360 --> 00:09:36,800
identity credential and so on and so

00:09:35,120 --> 00:09:40,080
forth

00:09:36,800 --> 00:09:42,399
so that poses quite a few challenges uh

00:09:40,080 --> 00:09:43,760
but again i mean up to when there will

00:09:42,399 --> 00:09:45,200
be interesting challenges there will be

00:09:43,760 --> 00:09:46,959
interesting problem to solve which is

00:09:45,200 --> 00:09:48,640
which is good

00:09:46,959 --> 00:09:50,000
that poses challenges not just from the

00:09:48,640 --> 00:09:52,800
security perspective but

00:09:50,000 --> 00:09:53,200
also from the encryption which all of a

00:09:52,800 --> 00:09:56,240
sudden

00:09:53,200 --> 00:09:58,959
requires some support from hardware

00:09:56,240 --> 00:09:59,760
and poses also challenges with respect

00:09:58,959 --> 00:10:03,200
to

00:09:59,760 --> 00:10:05,680
um secret um being able to maintain

00:10:03,200 --> 00:10:06,959
secret in a secure manner which as we

00:10:05,680 --> 00:10:10,800
know you know is supported

00:10:06,959 --> 00:10:11,839
by tpm um and uh processor architecture

00:10:10,800 --> 00:10:14,399
like arm

00:10:11,839 --> 00:10:16,399
and and trust zones provide also you

00:10:14,399 --> 00:10:16,959
know some some additional way to deal

00:10:16,399 --> 00:10:18,480
with it

00:10:16,959 --> 00:10:20,640
especially if you look in combination

00:10:18,480 --> 00:10:22,160
with some interesting unique kernels

00:10:20,640 --> 00:10:25,440
that are also coming out

00:10:22,160 --> 00:10:28,640
in the in the open source um yeah

00:10:25,440 --> 00:10:29,200
so absolutely and at the same time yeah

00:10:28,640 --> 00:10:31,680
this

00:10:29,200 --> 00:10:33,839
operating system aspect is is important

00:10:31,680 --> 00:10:36,640
and nicola you mentioned you are working

00:10:33,839 --> 00:10:37,920
on on embedded os's for for for edge

00:10:36,640 --> 00:10:40,320
devices so

00:10:37,920 --> 00:10:42,160
uh taking on from from angelo there

00:10:40,320 --> 00:10:47,279
what's what's your perspective on

00:10:42,160 --> 00:10:49,920
on the edge security challenges

00:10:47,279 --> 00:10:51,680
looking at from an embedded operating

00:10:49,920 --> 00:10:54,640
system standpoint that is

00:10:51,680 --> 00:10:55,680
you know where my focus is uh basically

00:10:54,640 --> 00:10:57,440
we have two

00:10:55,680 --> 00:10:58,720
really great technologies that that

00:10:57,440 --> 00:11:01,839
kicked in

00:10:58,720 --> 00:11:04,399
in the past 15 20 years

00:11:01,839 --> 00:11:05,680
one of of course is virtualization and

00:11:04,399 --> 00:11:09,440
another one is

00:11:05,680 --> 00:11:11,760
is you know like related to containers

00:11:09,440 --> 00:11:14,079
uh both of them from a security

00:11:11,760 --> 00:11:16,000
standpoint they provide what today

00:11:14,079 --> 00:11:17,360
is one of the most important aspects in

00:11:16,000 --> 00:11:20,240
my opinion

00:11:17,360 --> 00:11:21,040
in an embedded device like an edge node

00:11:20,240 --> 00:11:23,839
um

00:11:21,040 --> 00:11:25,600
in the uh in the edge architecture that

00:11:23,839 --> 00:11:27,120
is the isolation the context of

00:11:25,600 --> 00:11:30,399
isolation how we do

00:11:27,120 --> 00:11:33,600
isolate the

00:11:30,399 --> 00:11:36,240
some different aspects that are running

00:11:33,600 --> 00:11:38,560
in on an edge on an edge node

00:11:36,240 --> 00:11:40,000
virtual machines and containers are

00:11:38,560 --> 00:11:42,720
really different

00:11:40,000 --> 00:11:45,120
virtual machine is an abstraction that

00:11:42,720 --> 00:11:48,959
of a complete computing platform

00:11:45,120 --> 00:11:53,040
hardware and software so io processor

00:11:48,959 --> 00:11:56,560
memory a container is purely software

00:11:53,040 --> 00:11:59,519
and i use the same kernel of the host

00:11:56,560 --> 00:12:01,600
uh actually a container is a child

00:11:59,519 --> 00:12:02,079
process of the demo that launched it so

00:12:01,600 --> 00:12:03,279
there are

00:12:02,079 --> 00:12:05,200
there are completely different

00:12:03,279 --> 00:12:08,639
technologies but at the same time

00:12:05,200 --> 00:12:10,560
they guarantee what the uh you know what

00:12:08,639 --> 00:12:14,000
isolation needs to be

00:12:10,560 --> 00:12:15,760
uh on on on a device level um

00:12:14,000 --> 00:12:18,320
the the interesting thing about

00:12:15,760 --> 00:12:20,480
isolation is critical processes

00:12:18,320 --> 00:12:21,440
so let's say that we have a an edge

00:12:20,480 --> 00:12:24,079
device

00:12:21,440 --> 00:12:25,440
a h node and we have a camera that is

00:12:24,079 --> 00:12:29,040
attached to the edge node

00:12:25,440 --> 00:12:32,480
uh this is a simple case but uh again

00:12:29,040 --> 00:12:34,160
we can see that uh this kind of use case

00:12:32,480 --> 00:12:37,360
in two different different ways uh

00:12:34,160 --> 00:12:38,160
for instance uh from a container

00:12:37,360 --> 00:12:41,600
perspective

00:12:38,160 --> 00:12:43,839
we need um we have of course the core os

00:12:41,600 --> 00:12:45,440
that uh and then we have a containerized

00:12:43,839 --> 00:12:47,279
uh containerized os

00:12:45,440 --> 00:12:48,639
and the containerized os let's say that

00:12:47,279 --> 00:12:51,839
is running a software

00:12:48,639 --> 00:12:54,639
for for grabbing the camera uh

00:12:51,839 --> 00:12:56,160
and then do something with it and then

00:12:54,639 --> 00:12:57,360
transfer those information somewhere

00:12:56,160 --> 00:13:01,839
else

00:12:57,360 --> 00:13:03,920
the thing is we need how we do

00:13:01,839 --> 00:13:05,760
enable the container to access some

00:13:03,920 --> 00:13:07,040
devices let's say the device the camera

00:13:05,760 --> 00:13:10,399
device

00:13:07,040 --> 00:13:12,720
and then process and then do do the job

00:13:10,399 --> 00:13:13,920
well we can do that in a pretty fairly

00:13:12,720 --> 00:13:16,320
secure way

00:13:13,920 --> 00:13:18,079
uh without a privileged mode without

00:13:16,320 --> 00:13:19,360
having without having any container

00:13:18,079 --> 00:13:21,279
running in privileged now

00:13:19,360 --> 00:13:23,519
just because we know exactly which

00:13:21,279 --> 00:13:23,920
device we need to export from the core

00:13:23,519 --> 00:13:26,959
os

00:13:23,920 --> 00:13:29,279
to the container on the same time

00:13:26,959 --> 00:13:30,000
if this is not really guaranteed let's

00:13:29,279 --> 00:13:33,120
say that we have

00:13:30,000 --> 00:13:34,959
other devices that are managed by udev

00:13:33,120 --> 00:13:36,560
and so we don't have a pre we don't have

00:13:34,959 --> 00:13:39,600
a predicted way to

00:13:36,560 --> 00:13:42,079
tell which device is needs to is

00:13:39,600 --> 00:13:45,680
generated by the coreos it needs to be

00:13:42,079 --> 00:13:48,320
uh connected to the uh to the container

00:13:45,680 --> 00:13:49,760
we may have some problem over there and

00:13:48,320 --> 00:13:52,000
you know there are like several

00:13:49,760 --> 00:13:52,800
recipes to solve that problem but they

00:13:52,000 --> 00:13:56,000
may violate

00:13:52,800 --> 00:13:58,880
the the isolation principle and

00:13:56,000 --> 00:14:00,480
also having privileged containers is not

00:13:58,880 --> 00:14:01,680
really a good practice so it's about

00:14:00,480 --> 00:14:03,839
good practices

00:14:01,680 --> 00:14:06,000
virtual machine on the other side they

00:14:03,839 --> 00:14:09,360
provide like an extremely

00:14:06,000 --> 00:14:11,600
solid way to isolate a critical critical

00:14:09,360 --> 00:14:14,720
application let's say that we have a

00:14:11,600 --> 00:14:18,000
edge device that is um has some

00:14:14,720 --> 00:14:19,920
particular like important

00:14:18,000 --> 00:14:21,760
characteristics let's say that part of

00:14:19,920 --> 00:14:24,000
the system are in real time

00:14:21,760 --> 00:14:25,519
part of the system don't have any time

00:14:24,000 --> 00:14:27,839
constraints like regular operating

00:14:25,519 --> 00:14:30,160
system or part of the system needs to be

00:14:27,839 --> 00:14:31,680
a bare metal how can we solve this

00:14:30,160 --> 00:14:34,000
problem containers

00:14:31,680 --> 00:14:34,880
containers are great in edge because

00:14:34,000 --> 00:14:37,120
they provide

00:14:34,880 --> 00:14:38,560
a great deployment model if you have

00:14:37,120 --> 00:14:40,959
microservices and some

00:14:38,560 --> 00:14:42,399
software that is purely software that

00:14:40,959 --> 00:14:45,920
needs to be deployed

00:14:42,399 --> 00:14:46,800
uniquely uh atomically inside a device

00:14:45,920 --> 00:14:49,920
and without like

00:14:46,800 --> 00:14:52,079
worrying about um dependencies but at

00:14:49,920 --> 00:14:56,320
the same time

00:14:52,079 --> 00:14:59,600
how we do how we do the same how can we

00:14:56,320 --> 00:15:02,399
enable the same um the same um

00:14:59,600 --> 00:15:04,000
easy way of managing deployments when we

00:15:02,399 --> 00:15:06,000
have a lot of hardware that is critical

00:15:04,000 --> 00:15:07,519
hardware attached to the edge now

00:15:06,000 --> 00:15:09,360
so in this case probably uh

00:15:07,519 --> 00:15:11,120
virtualization

00:15:09,360 --> 00:15:12,720
when i say virtualization because even

00:15:11,120 --> 00:15:14,959
docker is virtualization it's called

00:15:12,720 --> 00:15:18,320
lightweight virtualization but

00:15:14,959 --> 00:15:21,839
a more there is a something that is more

00:15:18,320 --> 00:15:23,839
like uh what i call um

00:15:21,839 --> 00:15:25,680
is a more appropriate for these for for

00:15:23,839 --> 00:15:28,000
this use case um that is

00:15:25,680 --> 00:15:30,240
the the regular virtualization or

00:15:28,000 --> 00:15:33,360
asymmetric multiprocessing

00:15:30,240 --> 00:15:34,720
which guarantee the isolation of

00:15:33,360 --> 00:15:37,360
critical application

00:15:34,720 --> 00:15:37,839
and at the same time they allow the edge

00:15:37,360 --> 00:15:40,639
node

00:15:37,839 --> 00:15:42,959
to do and to perform really critical

00:15:40,639 --> 00:15:44,800
aspects related to critical io

00:15:42,959 --> 00:15:47,279
and other critical devices attached to

00:15:44,800 --> 00:15:51,040
it that makes sense and we will revisit

00:15:47,279 --> 00:15:53,279
uh obviously the topic of uh

00:15:51,040 --> 00:15:55,120
you know the devices virtualization

00:15:53,279 --> 00:15:59,040
container a bit a bit later and

00:15:55,120 --> 00:16:01,199
and one thing i i really uh

00:15:59,040 --> 00:16:03,040
uh understand is important from from

00:16:01,199 --> 00:16:06,160
what you said nikola is the fact

00:16:03,040 --> 00:16:07,920
is isolation is is is one critical thing

00:16:06,160 --> 00:16:09,440
to think about you know isolation of

00:16:07,920 --> 00:16:11,440
processors resources

00:16:09,440 --> 00:16:12,720
even hardware resources and at the same

00:16:11,440 --> 00:16:14,800
time edge knows

00:16:12,720 --> 00:16:16,800
edge infrastructure are connected

00:16:14,800 --> 00:16:19,199
devices and networking

00:16:16,800 --> 00:16:21,120
is especially important in in everything

00:16:19,199 --> 00:16:24,639
that we do at the edge whatever

00:16:21,120 --> 00:16:27,759
whatever we're talking about 5g 7 or 1

00:16:24,639 --> 00:16:30,000
etc and so my question to you ted

00:16:27,759 --> 00:16:31,839
uh since networking is really your your

00:16:30,000 --> 00:16:34,480
bread and butter so

00:16:31,839 --> 00:16:37,839
what what role does the network play in

00:16:34,480 --> 00:16:37,839
in edge device security

00:16:38,079 --> 00:16:42,079
yeah that's actually kind of a funny

00:16:39,600 --> 00:16:43,680
question because the the

00:16:42,079 --> 00:16:45,920
one of the main roles that uh the

00:16:43,680 --> 00:16:48,639
network plays in security

00:16:45,920 --> 00:16:48,959
is to be the source of the problem right

00:16:48,639 --> 00:16:51,839
it's

00:16:48,959 --> 00:16:53,199
uh it's it's the thing that makes it you

00:16:51,839 --> 00:16:54,800
know obviously the network is extremely

00:16:53,199 --> 00:16:56,959
critical and important for

00:16:54,800 --> 00:16:58,320
what you want to do but it's also the

00:16:56,959 --> 00:17:00,320
channel through which

00:16:58,320 --> 00:17:01,519
abuse through which intrusion through

00:17:00,320 --> 00:17:04,559
which you know

00:17:01,519 --> 00:17:05,919
illegal access can occur so um

00:17:04,559 --> 00:17:07,520
so it's kind of an interesting thing so

00:17:05,919 --> 00:17:09,439
the network is a double-edged sword it's

00:17:07,520 --> 00:17:11,280
providing a lot of the problems

00:17:09,439 --> 00:17:12,720
uh with regard to security so it's very

00:17:11,280 --> 00:17:15,439
important

00:17:12,720 --> 00:17:16,079
that the network be set up in such a way

00:17:15,439 --> 00:17:20,079
that

00:17:16,079 --> 00:17:21,280
you are making it as difficult as

00:17:20,079 --> 00:17:23,199
possible to

00:17:21,280 --> 00:17:25,760
to exploit it in ways that you didn't

00:17:23,199 --> 00:17:25,760
anticipate

00:17:27,199 --> 00:17:32,080
all right and and now uh

00:17:30,240 --> 00:17:33,440
that that's certainly a good a good

00:17:32,080 --> 00:17:36,000
starting point

00:17:33,440 --> 00:17:36,799
uh at the same time i was wondering you

00:17:36,000 --> 00:17:38,880
know i'm not

00:17:36,799 --> 00:17:39,840
a networking expert but i hear a lot

00:17:38,880 --> 00:17:42,080
about

00:17:39,840 --> 00:17:44,240
programmable networks software-defined

00:17:42,080 --> 00:17:48,320
networks and that kind of stuff

00:17:44,240 --> 00:17:50,240
um you know are they really useful at

00:17:48,320 --> 00:17:52,160
the edge all of those uh securities or

00:17:50,240 --> 00:17:52,880
do they do they introduce more vendor

00:17:52,160 --> 00:17:56,160
abilities and

00:17:52,880 --> 00:17:57,360
if they are useful why okay that's yeah

00:17:56,160 --> 00:17:59,440
that's also an interesting question

00:17:57,360 --> 00:18:01,200
because there's a lot of talk about uh

00:17:59,440 --> 00:18:01,679
software defined networking there's

00:18:01,200 --> 00:18:05,039
actually

00:18:01,679 --> 00:18:09,440
a lot of open source activity around sdn

00:18:05,039 --> 00:18:12,799
it in my opinion uh sdn is is

00:18:09,440 --> 00:18:15,919
um highly com complicated um

00:18:12,799 --> 00:18:16,960
and it addresses issues at a layer of

00:18:15,919 --> 00:18:20,320
abstraction that

00:18:16,960 --> 00:18:22,799
may not be um as helpful as we want um

00:18:20,320 --> 00:18:24,559
typically sdn is is really giving you

00:18:22,799 --> 00:18:28,640
software apis

00:18:24,559 --> 00:18:31,360
that access things like mac addresses

00:18:28,640 --> 00:18:33,200
ip addresses host addresses ports

00:18:31,360 --> 00:18:37,200
routing rules etc

00:18:33,200 --> 00:18:40,559
so um i what i actually think we need

00:18:37,200 --> 00:18:42,000
is and this has been stated before like

00:18:40,559 --> 00:18:45,679
different paradigm but i think we need

00:18:42,000 --> 00:18:48,640
better abstractions uh for networking

00:18:45,679 --> 00:18:49,840
in in the edge in edge computing and in

00:18:48,640 --> 00:18:51,919
hybrid and in

00:18:49,840 --> 00:18:54,240
basically uh cloud native computing in

00:18:51,919 --> 00:18:54,240
general

00:18:54,720 --> 00:19:01,280
okay and and that in in one way really

00:18:58,240 --> 00:19:03,600
uh not necessarily vindicates but but

00:19:01,280 --> 00:19:06,240
matches my my expectation in the sense

00:19:03,600 --> 00:19:08,559
that as a as a non-networking expert i

00:19:06,240 --> 00:19:09,360
i had a feeling from the outside that uh

00:19:08,559 --> 00:19:11,600
you know

00:19:09,360 --> 00:19:12,799
and that kind of stuff can can be useful

00:19:11,600 --> 00:19:14,799
but yes is

00:19:12,799 --> 00:19:15,919
is something that still need measuring

00:19:14,799 --> 00:19:19,440
and still need

00:19:15,919 --> 00:19:21,280
uh to progress uh to be

00:19:19,440 --> 00:19:24,000
uh useful and at the same time i know

00:19:21,280 --> 00:19:26,559
that a few of our members are

00:19:24,000 --> 00:19:27,520
leveraging or involved in in such

00:19:26,559 --> 00:19:30,559
projects like

00:19:27,520 --> 00:19:32,640
openness and or open source manual and

00:19:30,559 --> 00:19:37,200
onap and that kind of stuff

00:19:32,640 --> 00:19:40,080
now uh if we take a step back

00:19:37,200 --> 00:19:41,440
uh obviously as i mentioned open source

00:19:40,080 --> 00:19:44,559
is really important to us

00:19:41,440 --> 00:19:47,120
so how how can open source help improve

00:19:44,559 --> 00:19:49,120
edge network security yourself ted

00:19:47,120 --> 00:19:52,160
you know you've been involved in such

00:19:49,120 --> 00:19:53,760
projects and especially scopper uh is a

00:19:52,160 --> 00:19:56,880
good example of that so

00:19:53,760 --> 00:19:58,240
how can open source really help there

00:19:56,880 --> 00:19:59,520
yeah let me talk a little bit about that

00:19:58,240 --> 00:20:00,720
because because you know i mentioned

00:19:59,520 --> 00:20:02,960
before that we really

00:20:00,720 --> 00:20:04,240
we're looking for better abstractions

00:20:02,960 --> 00:20:06,000
and and one let me

00:20:04,240 --> 00:20:07,520
uh talk a little bit about the weakness

00:20:06,000 --> 00:20:09,039
of some of the extractions extractions

00:20:07,520 --> 00:20:10,480
that we use now so anybody who's done

00:20:09,039 --> 00:20:12,799
any networking

00:20:10,480 --> 00:20:14,720
at all really knows that when you're

00:20:12,799 --> 00:20:16,559
talking about addressing things

00:20:14,720 --> 00:20:18,799
you you deal with a host address and a

00:20:16,559 --> 00:20:20,320
port so you know the host address can be

00:20:18,799 --> 00:20:22,799
an ip address but most

00:20:20,320 --> 00:20:24,080
more commonly it's a name that maps to

00:20:22,799 --> 00:20:25,600
an ipa address

00:20:24,080 --> 00:20:26,960
which gets you to the host and then the

00:20:25,600 --> 00:20:28,880
port tells you which process on that

00:20:26,960 --> 00:20:30,880
host you want to talk to

00:20:28,880 --> 00:20:32,880
and of course in the in the cloud native

00:20:30,880 --> 00:20:34,000
world

00:20:32,880 --> 00:20:35,520
we're talking about things like

00:20:34,000 --> 00:20:36,799
serverless or we're talking about you

00:20:35,520 --> 00:20:38,960
know edges where we may have

00:20:36,799 --> 00:20:39,919
many edges or many devices that we want

00:20:38,960 --> 00:20:42,720
to address

00:20:39,919 --> 00:20:44,080
as a class the host really isn't that

00:20:42,720 --> 00:20:46,640
interesting in fact we don't

00:20:44,080 --> 00:20:48,000
want to be bothered with that notion um

00:20:46,640 --> 00:20:50,080
the other thing i should mention is that

00:20:48,000 --> 00:20:51,679
the you know the internet as we know it

00:20:50,080 --> 00:20:54,880
now

00:20:51,679 --> 00:20:58,080
grew up with client server computing

00:20:54,880 --> 00:20:58,559
so client server architecture is what

00:20:58,080 --> 00:21:00,799
the

00:20:58,559 --> 00:21:02,640
internet is designed for so it's really

00:21:00,799 --> 00:21:05,280
built around you know

00:21:02,640 --> 00:21:06,720
literally hundreds of millions of

00:21:05,280 --> 00:21:08,320
private networks

00:21:06,720 --> 00:21:10,480
that then connect up into a single

00:21:08,320 --> 00:21:12,799
public network so this vertical

00:21:10,480 --> 00:21:14,240
orientation of the network is is you

00:21:12,799 --> 00:21:16,080
know very well proven

00:21:14,240 --> 00:21:17,520
and it works very well and it's very

00:21:16,080 --> 00:21:19,760
highly performant

00:21:17,520 --> 00:21:21,440
but it doesn't lend itself very well to

00:21:19,760 --> 00:21:23,760
edge computing where we really

00:21:21,440 --> 00:21:25,280
might want to have some horizontal

00:21:23,760 --> 00:21:26,960
connectivity we might want different

00:21:25,280 --> 00:21:27,440
edges to be able to easily address each

00:21:26,960 --> 00:21:29,840
other

00:21:27,440 --> 00:21:30,720
and that's not done very well at the ip

00:21:29,840 --> 00:21:33,360
host level

00:21:30,720 --> 00:21:33,840
so um so there is quite a bit in fact i

00:21:33,360 --> 00:21:35,600
think

00:21:33,840 --> 00:21:36,960
almost all the really interesting work

00:21:35,600 --> 00:21:38,320
that's going on in this space

00:21:36,960 --> 00:21:40,080
is happening in the open source

00:21:38,320 --> 00:21:41,120
communities so there there is the

00:21:40,080 --> 00:21:44,000
scupper

00:21:41,120 --> 00:21:45,039
dot io project that i'm working on um

00:21:44,000 --> 00:21:48,480
it's actually also

00:21:45,039 --> 00:21:50,480
based on the apache cupid dispatch

00:21:48,480 --> 00:21:51,120
router so apache cupid is a collection

00:21:50,480 --> 00:21:53,520
of prop

00:21:51,120 --> 00:21:55,120
of projects one of which is called cupid

00:21:53,520 --> 00:21:58,320
dispatch router

00:21:55,120 --> 00:22:01,520
which is a high level networking router

00:21:58,320 --> 00:22:03,039
that works with the amtp protocol

00:22:01,520 --> 00:22:05,600
and a whole different set of addressing

00:22:03,039 --> 00:22:07,440
so instead of addressing hosts

00:22:05,600 --> 00:22:08,640
in a large network you're addressing

00:22:07,440 --> 00:22:11,280
processes

00:22:08,640 --> 00:22:13,919
and so instead of providing host access

00:22:11,280 --> 00:22:15,760
to a hacker for example you you you deny

00:22:13,919 --> 00:22:17,360
that access but you can provide access

00:22:15,760 --> 00:22:18,799
to specific processes

00:22:17,360 --> 00:22:20,799
and it allows you to do things like

00:22:18,799 --> 00:22:23,120
multicast load balancing in the

00:22:20,799 --> 00:22:24,720
wide area but that's these are not

00:22:23,120 --> 00:22:26,080
necessarily security related but it does

00:22:24,720 --> 00:22:28,480
have security

00:22:26,080 --> 00:22:30,159
aspects to it i'll also mention that the

00:22:28,480 --> 00:22:33,520
eclipse io fog

00:22:30,159 --> 00:22:35,360
project is um also using the same basic

00:22:33,520 --> 00:22:36,720
technology to good effect as well and

00:22:35,360 --> 00:22:37,919
there and you know their focus is a

00:22:36,720 --> 00:22:40,400
little bit more on

00:22:37,919 --> 00:22:41,280
small devices in the edge and

00:22:40,400 --> 00:22:42,640
connectivity

00:22:41,280 --> 00:22:45,840
involving those small devices on the

00:22:42,640 --> 00:22:49,440
edge that makes sense

00:22:45,840 --> 00:22:51,120
uh so it's it's certainly really

00:22:49,440 --> 00:22:55,440
interesting what what to you

00:22:51,120 --> 00:22:58,559
you you mentioned ted uh and

00:22:55,440 --> 00:23:01,840
one question i would have for you is

00:22:58,559 --> 00:23:03,440
we discussed in our ag native working

00:23:01,840 --> 00:23:05,760
group community meetings the

00:23:03,440 --> 00:23:06,799
you know various scenarios for device

00:23:05,760 --> 00:23:08,720
quarantine

00:23:06,799 --> 00:23:10,400
in the sense that a compromise device

00:23:08,720 --> 00:23:11,039
could self-guarantee nor maybe the

00:23:10,400 --> 00:23:14,400
network

00:23:11,039 --> 00:23:18,240
could could quarantine the device uh so

00:23:14,400 --> 00:23:19,760
in in your opinion uh where

00:23:18,240 --> 00:23:21,440
you know it's self-guaranteeing more

00:23:19,760 --> 00:23:22,640
useful than network guarantee or

00:23:21,440 --> 00:23:26,080
deodorant or both

00:23:22,640 --> 00:23:30,159
are useful strategies in your opinion

00:23:26,080 --> 00:23:31,520
um yeah i'm actually i'm not sure

00:23:30,159 --> 00:23:33,840
exactly how to answer that question i

00:23:31,520 --> 00:23:35,600
think probably both um

00:23:33,840 --> 00:23:37,200
that you that you would need if i if a

00:23:35,600 --> 00:23:38,880
device knows that it's compromised it

00:23:37,200 --> 00:23:39,840
will also take itself out if you know

00:23:38,880 --> 00:23:42,799
that the device is

00:23:39,840 --> 00:23:44,000
compromised you'd like to take it out um

00:23:42,799 --> 00:23:48,000
so

00:23:44,000 --> 00:23:51,679
yeah i think um i think both are

00:23:48,000 --> 00:23:53,120
are are uh important and uh i think that

00:23:51,679 --> 00:23:55,279
somebody else might be a more of an

00:23:53,120 --> 00:23:57,679
expert to answer that question than i

00:23:55,279 --> 00:23:59,679
that makes sense and going going with

00:23:57,679 --> 00:24:03,200
the same question to to you the han

00:23:59,679 --> 00:24:05,120
since i mean uh you mentioned several

00:24:03,200 --> 00:24:06,240
device management technologies that we

00:24:05,120 --> 00:24:08,000
have at eclipse and

00:24:06,240 --> 00:24:09,840
and especially that's a concern for

00:24:08,000 --> 00:24:12,320
eclipse all know that you are working on

00:24:09,840 --> 00:24:14,960
so uh what what's your take on device

00:24:12,320 --> 00:24:18,400
guaranteeing there

00:24:14,960 --> 00:24:21,120
well from the perspective of uh

00:24:18,400 --> 00:24:22,640
eclipse honor the device is is outside

00:24:21,120 --> 00:24:25,600
of the cloud so we

00:24:22,640 --> 00:24:27,200
we are thinking about you know just just

00:24:25,600 --> 00:24:27,600
the connectivity from the cloud but but

00:24:27,200 --> 00:24:29,760
if you

00:24:27,600 --> 00:24:30,960
if you take a look at the you know globe

00:24:29,760 --> 00:24:33,840
globally

00:24:30,960 --> 00:24:35,279
from the ed perspective guaranteeing

00:24:33,840 --> 00:24:37,840
microservices

00:24:35,279 --> 00:24:38,320
definitely that does does does make make

00:24:37,840 --> 00:24:42,159
sense

00:24:38,320 --> 00:24:45,279
so you know limit them in the amount of

00:24:42,159 --> 00:24:47,600
you know a cpu they can use or resources

00:24:45,279 --> 00:24:49,440
that you use

00:24:47,600 --> 00:24:50,880
then on the networking layer what you

00:24:49,440 --> 00:24:53,440
mentioned is also

00:24:50,880 --> 00:24:54,080
you know making sure that they can't do

00:24:53,440 --> 00:24:57,279
any

00:24:54,080 --> 00:24:58,000
any arbitrary any arbitrary outbound

00:24:57,279 --> 00:25:00,720
connections

00:24:58,000 --> 00:25:02,000
and dialings to different places that

00:25:00,720 --> 00:25:04,320
that's all

00:25:02,000 --> 00:25:05,120
i think very important aspects of of

00:25:04,320 --> 00:25:08,240
running

00:25:05,120 --> 00:25:10,640
microservices at the edge excellent

00:25:08,240 --> 00:25:11,360
thank you and now in the interest of

00:25:10,640 --> 00:25:13,760
time

00:25:11,360 --> 00:25:15,360
going forward with another topic and

00:25:13,760 --> 00:25:17,039
this is something we started already

00:25:15,360 --> 00:25:20,000
discussing with nikola

00:25:17,039 --> 00:25:20,880
uh embedded devices virtualization

00:25:20,000 --> 00:25:23,279
containers

00:25:20,880 --> 00:25:24,880
and we already established this you know

00:25:23,279 --> 00:25:26,080
the different security roles that

00:25:24,880 --> 00:25:29,120
virtual machines and

00:25:26,080 --> 00:25:32,000
and containers can can play now

00:25:29,120 --> 00:25:34,159
uh when we think about embedded and

00:25:32,000 --> 00:25:36,880
mobile devices nikola they are

00:25:34,159 --> 00:25:38,640
increasingly seen as as edge devices and

00:25:36,880 --> 00:25:39,760
i know that some of our members at some

00:25:38,640 --> 00:25:41,919
point were

00:25:39,760 --> 00:25:44,159
playing with the idea hey i have someone

00:25:41,919 --> 00:25:44,640
in the factory you know with its tablet

00:25:44,159 --> 00:25:46,720
and

00:25:44,640 --> 00:25:48,240
maybe we can delegate some some edge

00:25:46,720 --> 00:25:50,320
workloads to the tablet that the

00:25:48,240 --> 00:25:51,360
employee is having that kind of stuff

00:25:50,320 --> 00:25:53,520
but anyway

00:25:51,360 --> 00:25:55,760
if we take a more global perspective

00:25:53,520 --> 00:25:58,640
about embedded and mobile devices as

00:25:55,760 --> 00:26:00,720
edge devices what what are the security

00:25:58,640 --> 00:26:01,760
challenges that you've seen in your work

00:26:00,720 --> 00:26:05,200
uh that uh

00:26:01,760 --> 00:26:05,200
you think are specific to them

00:26:05,679 --> 00:26:11,440
from uh from an engineering perspective

00:26:09,039 --> 00:26:12,240
i don't think there is um any difference

00:26:11,440 --> 00:26:14,640
between

00:26:12,240 --> 00:26:16,080
a mobile mobile device and an embedded

00:26:14,640 --> 00:26:19,440
device my phone

00:26:16,080 --> 00:26:22,720
is on arm 64 and pretty much it shares

00:26:19,440 --> 00:26:24,799
uh many of the uh i o

00:26:22,720 --> 00:26:27,039
of my embedded board i'm working on

00:26:24,799 --> 00:26:27,039
doing

00:26:27,600 --> 00:26:33,120
an embedded custom operating system so

00:26:30,799 --> 00:26:34,400
let's talk about like they almost are

00:26:33,120 --> 00:26:36,000
the same hardware but

00:26:34,400 --> 00:26:37,600
there is something that makes a

00:26:36,000 --> 00:26:39,679
difference between

00:26:37,600 --> 00:26:40,960
the two of them is what you want to

00:26:39,679 --> 00:26:43,360
attach to them

00:26:40,960 --> 00:26:44,080
so in the case of a mobile phone so

00:26:43,360 --> 00:26:46,640
let's say that

00:26:44,080 --> 00:26:49,360
uh in the in the future in the industry

00:26:46,640 --> 00:26:52,159
5.0 we have workers walking around

00:26:49,360 --> 00:26:53,120
a factory with their phone with their

00:26:52,159 --> 00:26:56,480
tablet

00:26:53,120 --> 00:26:58,640
that is an edge node uh in that context

00:26:56,480 --> 00:27:00,480
because i don't see those devices to to

00:26:58,640 --> 00:27:03,600
be connected to a special machine

00:27:00,480 --> 00:27:06,320
or or some some special hardware i guess

00:27:03,600 --> 00:27:07,279
that the container technology is what

00:27:06,320 --> 00:27:09,440
provides this

00:27:07,279 --> 00:27:10,480
extremely important way to deploy

00:27:09,440 --> 00:27:13,760
software in

00:27:10,480 --> 00:27:15,760
in in in in one shot i remember

00:27:13,760 --> 00:27:17,200
linux dolor say something really

00:27:15,760 --> 00:27:19,200
interesting about

00:27:17,200 --> 00:27:21,600
you know package managing and he said

00:27:19,200 --> 00:27:22,399
like if all the software was statically

00:27:21,600 --> 00:27:24,159
compiled

00:27:22,399 --> 00:27:25,840
we don't have problems of dependencies

00:27:24,159 --> 00:27:27,600
anymore and so we don't have to go

00:27:25,840 --> 00:27:29,279
through a lot of resolution issues like

00:27:27,600 --> 00:27:30,640
when we wanted to transfer software to

00:27:29,279 --> 00:27:33,120
different devices

00:27:30,640 --> 00:27:34,399
and so containers brought that concept

00:27:33,120 --> 00:27:36,320
on of course and and

00:27:34,399 --> 00:27:39,360
you know on a different on a different

00:27:36,320 --> 00:27:42,480
context but still they bring that value

00:27:39,360 --> 00:27:46,799
on hey let's uh deploy something that

00:27:42,480 --> 00:27:49,200
is consistent and i can uh

00:27:46,799 --> 00:27:51,360
distribute those resources across

00:27:49,200 --> 00:27:54,559
multiple devices and this is great

00:27:51,360 --> 00:27:57,039
but again the in my opinion in a real

00:27:54,559 --> 00:27:57,679
use case scenario inside a factory we

00:27:57,039 --> 00:27:59,200
have some

00:27:57,679 --> 00:28:00,720
some of those embedded devices that

00:27:59,200 --> 00:28:03,760
needs to command

00:28:00,720 --> 00:28:06,720
instruct other machines um

00:28:03,760 --> 00:28:07,120
in the in the pipeline and this this is

00:28:06,720 --> 00:28:10,320
where

00:28:07,120 --> 00:28:12,799
actually the technologies may be

00:28:10,320 --> 00:28:13,760
not any more suitable for doing the same

00:28:12,799 --> 00:28:16,640
thing

00:28:13,760 --> 00:28:17,039
so from a security perspective again for

00:28:16,640 --> 00:28:20,080
me

00:28:17,039 --> 00:28:21,919
is how can i prevent a critical process

00:28:20,080 --> 00:28:24,640
that's control uh

00:28:21,919 --> 00:28:26,240
a special machine that critical process

00:28:24,640 --> 00:28:28,960
needs to be protect

00:28:26,240 --> 00:28:31,520
needs to be again isolated from the

00:28:28,960 --> 00:28:34,080
outside well what if a micro services

00:28:31,520 --> 00:28:35,679
is doing something bad to the cpu is

00:28:34,080 --> 00:28:37,919
there is a dos attack

00:28:35,679 --> 00:28:39,760
so there is like a denial of service

00:28:37,919 --> 00:28:43,360
there is some sort of overflow

00:28:39,760 --> 00:28:46,640
how can i uh actually make

00:28:43,360 --> 00:28:49,360
the machine that is operating safe

00:28:46,640 --> 00:28:50,880
in that context and try to isolate and

00:28:49,360 --> 00:28:53,520
shut down whatever is going

00:28:50,880 --> 00:28:54,399
wrong in a particular partition of the

00:28:53,520 --> 00:28:56,720
system

00:28:54,399 --> 00:28:58,320
and again here embedded system are

00:28:56,720 --> 00:29:00,000
really complex uh

00:28:58,320 --> 00:29:02,720
really complex beasts because we have

00:29:00,000 --> 00:29:04,799
multiple core every core can host

00:29:02,720 --> 00:29:05,840
an operating system it's called like

00:29:04,799 --> 00:29:09,440
again

00:29:05,840 --> 00:29:11,919
asymmetric multi-processing so if i've

00:29:09,440 --> 00:29:13,279
different cores that address you know

00:29:11,919 --> 00:29:15,360
different os's

00:29:13,279 --> 00:29:16,320
i may have like a supervised or

00:29:15,360 --> 00:29:19,520
unsupervised

00:29:16,320 --> 00:29:22,000
architecture but at the same time

00:29:19,520 --> 00:29:23,120
in those two different scenarios i have

00:29:22,000 --> 00:29:24,559
a completely

00:29:23,120 --> 00:29:26,480
i have a complete control of which

00:29:24,559 --> 00:29:27,440
resources are allocated from another

00:29:26,480 --> 00:29:32,000
perspective to

00:29:27,440 --> 00:29:36,159
the specific tasks well at that point

00:29:32,000 --> 00:29:38,000
i can play with virtual machines

00:29:36,159 --> 00:29:40,000
and i can deploy containers in virtual

00:29:38,000 --> 00:29:40,480
machines but at the same time i'm

00:29:40,000 --> 00:29:44,000
current

00:29:40,480 --> 00:29:45,600
i'm guaranteeing that no processes are

00:29:44,000 --> 00:29:47,840
interfering with other processes

00:29:45,600 --> 00:29:49,279
so in the case of a tablet in the case

00:29:47,840 --> 00:29:52,000
of a phone

00:29:49,279 --> 00:29:52,559
i guess we can pretty much be okay on a

00:29:52,000 --> 00:29:54,159
very

00:29:52,559 --> 00:29:56,240
effective deployment model with

00:29:54,159 --> 00:29:59,679
containers and so i can

00:29:56,240 --> 00:30:00,880
really um have a backplane and this

00:29:59,679 --> 00:30:02,320
backplane decides

00:30:00,880 --> 00:30:04,799
what needs to be distributed on the

00:30:02,320 --> 00:30:07,760
edges and that's cool

00:30:04,799 --> 00:30:08,159
but at the same time we need to keep an

00:30:07,760 --> 00:30:10,159
eye

00:30:08,159 --> 00:30:12,880
on which resources physically are

00:30:10,159 --> 00:30:14,640
addressed when something is computing

00:30:12,880 --> 00:30:16,480
on the machine when something is going

00:30:14,640 --> 00:30:18,399
on on the edge devices

00:30:16,480 --> 00:30:19,520
and this is where we can play with both

00:30:18,399 --> 00:30:22,320
of them we can create

00:30:19,520 --> 00:30:23,679
hybrid systems we can really do a lot of

00:30:22,320 --> 00:30:26,399
interesting things really

00:30:23,679 --> 00:30:27,679
ex work with fantasy and and of course

00:30:26,399 --> 00:30:30,080
with uh you know

00:30:27,679 --> 00:30:31,520
adherence to the reality of course we

00:30:30,080 --> 00:30:34,960
cannot really invent uh

00:30:31,520 --> 00:30:37,039
weird stuff but again in that context

00:30:34,960 --> 00:30:38,880
the open source is providing a lot of

00:30:37,039 --> 00:30:40,559
inputs again it's more about best

00:30:38,880 --> 00:30:43,200
practices in my opinion

00:30:40,559 --> 00:30:44,559
but again we have open source

00:30:43,200 --> 00:30:47,120
technologies for

00:30:44,559 --> 00:30:47,600
for uh embedded computers and you know

00:30:47,120 --> 00:30:50,960
that

00:30:47,600 --> 00:30:53,520
arm right now is now

00:30:50,960 --> 00:30:55,200
really important inside the uh the

00:30:53,520 --> 00:30:58,880
visualization context

00:30:55,200 --> 00:31:01,279
uh zen that is probably the most uh

00:30:58,880 --> 00:31:02,000
important like today visualization

00:31:01,279 --> 00:31:05,200
technology

00:31:02,000 --> 00:31:07,600
on arm computers uh sorry arm processors

00:31:05,200 --> 00:31:08,640
architectures um it's an open source

00:31:07,600 --> 00:31:11,679
technology

00:31:08,640 --> 00:31:12,240
um and it is you know uh it works really

00:31:11,679 --> 00:31:15,360
well

00:31:12,240 --> 00:31:18,320
not everywhere not in every platform

00:31:15,360 --> 00:31:19,679
uh but of course it's a good baseline uh

00:31:18,320 --> 00:31:22,000
a docker is like

00:31:19,679 --> 00:31:23,279
of course the containerized uh

00:31:22,000 --> 00:31:24,880
technology that

00:31:23,279 --> 00:31:26,799
you know is working everywhere in the

00:31:24,880 --> 00:31:28,080
world and there are other also

00:31:26,799 --> 00:31:30,080
technologies i like

00:31:28,080 --> 00:31:32,320
you know i like exploring different

00:31:30,080 --> 00:31:34,880
other technologies about virtualization

00:31:32,320 --> 00:31:36,559
i like monolithic virtualization this is

00:31:34,880 --> 00:31:39,679
what you know i like the most

00:31:36,559 --> 00:31:41,519
uh but it's very tightly hardware uh

00:31:39,679 --> 00:31:44,240
xvisor is a beautiful uh

00:31:41,519 --> 00:31:46,240
project out there uh for for doing

00:31:44,240 --> 00:31:49,279
monolithic

00:31:46,240 --> 00:31:53,039
custom hypervisors uh

00:31:49,279 --> 00:31:56,640
on on on embedded devices so again

00:31:53,039 --> 00:32:00,080
how you orchestrate this is driven by

00:31:56,640 --> 00:32:02,000
probably a good sense and and

00:32:00,080 --> 00:32:03,679
best practices but out there there are

00:32:02,000 --> 00:32:04,720
so many different things that you can

00:32:03,679 --> 00:32:06,640
play with

00:32:04,720 --> 00:32:08,159
to just invent your own architecture

00:32:06,640 --> 00:32:10,559
that make

00:32:08,159 --> 00:32:11,919
you know safe tablets computer and

00:32:10,559 --> 00:32:14,320
regular like mobile

00:32:11,919 --> 00:32:16,080
devices and also critical devices where

00:32:14,320 --> 00:32:20,080
something is really important

00:32:16,080 --> 00:32:23,760
needs to be preserved and take care of

00:32:20,080 --> 00:32:24,000
and then we talked a lot about devices

00:32:23,760 --> 00:32:25,919
and

00:32:24,000 --> 00:32:29,039
and going back a bit on the networking

00:32:25,919 --> 00:32:31,919
team i tended to ask all of you

00:32:29,039 --> 00:32:32,559
let's say you have to deploy well an

00:32:31,919 --> 00:32:34,399
edge

00:32:32,559 --> 00:32:35,679
a solution that in involves that

00:32:34,399 --> 00:32:38,240
computing so

00:32:35,679 --> 00:32:40,159
is it better to run that on the same

00:32:38,240 --> 00:32:42,000
network as every everything else let's

00:32:40,159 --> 00:32:44,320
say you are in a factory you have edge

00:32:42,000 --> 00:32:46,080
nodes you have robots so you connect all

00:32:44,320 --> 00:32:47,760
of that on the single network

00:32:46,080 --> 00:32:49,200
you know that is connected to the i.t

00:32:47,760 --> 00:32:51,440
network of the organization

00:32:49,200 --> 00:32:53,200
or in a separate one or some hybrid

00:32:51,440 --> 00:32:55,360
model what what would be your

00:32:53,200 --> 00:32:58,399
your topology of choice there to ensure

00:32:55,360 --> 00:32:58,399
that things are secure

00:33:01,120 --> 00:33:05,120
well i mean first first question is what

00:33:03,679 --> 00:33:06,799
is your topology and technology of

00:33:05,120 --> 00:33:09,840
choice to make sure that things work

00:33:06,799 --> 00:33:11,360
right and if you're on a factory our

00:33:09,840 --> 00:33:14,880
experience is that you can

00:33:11,360 --> 00:33:17,039
essentially forget wi-fi um

00:33:14,880 --> 00:33:18,720
so for anything that moves around or

00:33:17,039 --> 00:33:19,760
needs connectivity and for which you

00:33:18,720 --> 00:33:22,640
don't have already

00:33:19,760 --> 00:33:24,320
you know a dedicated network uh the

00:33:22,640 --> 00:33:26,159
direction we we have been taking the

00:33:24,320 --> 00:33:30,559
past few years is obviously

00:33:26,159 --> 00:33:33,360
uh industrial 4g and going forward

00:33:30,559 --> 00:33:33,919
uh we just see one technology for for

00:33:33,360 --> 00:33:36,399
all

00:33:33,919 --> 00:33:37,200
wireless one nominal dominant technology

00:33:36,399 --> 00:33:39,360
for wireless

00:33:37,200 --> 00:33:40,320
communication inside the factory which

00:33:39,360 --> 00:33:43,279
is 5g

00:33:40,320 --> 00:33:44,000
as you know 5g was designed first and

00:33:43,279 --> 00:33:46,000
foremost

00:33:44,000 --> 00:33:48,399
for facilitating certain enterprise use

00:33:46,000 --> 00:33:49,039
cases and that's where it will allow us

00:33:48,399 --> 00:33:52,080
to innovate

00:33:49,039 --> 00:33:54,399
the most 5g will allow

00:33:52,080 --> 00:33:56,320
also potentially properly configured and

00:33:54,399 --> 00:33:59,600
used by the ill software

00:33:56,320 --> 00:34:01,679
to do some millisecond real time which

00:33:59,600 --> 00:34:03,440
which is interesting for for quite a few

00:34:01,679 --> 00:34:07,039
industrial applications

00:34:03,440 --> 00:34:07,360
um and will facilitate perhaps you know

00:34:07,039 --> 00:34:09,760
the

00:34:07,360 --> 00:34:10,560
the connection between the portion of

00:34:09,760 --> 00:34:12,560
the

00:34:10,560 --> 00:34:14,240
if you're on a factory floor the machine

00:34:12,560 --> 00:34:17,440
that necessarily will have to run

00:34:14,240 --> 00:34:18,000
either on you know tsn when they get

00:34:17,440 --> 00:34:20,879
there

00:34:18,000 --> 00:34:23,200
or as of today continue to run on uh you

00:34:20,879 --> 00:34:26,320
know field bus or similar technologies

00:34:23,200 --> 00:34:27,520
and then the world of i.t that uh you

00:34:26,320 --> 00:34:30,240
know will remain

00:34:27,520 --> 00:34:31,440
on uh more or less ethernet based uh

00:34:30,240 --> 00:34:33,599
solution

00:34:31,440 --> 00:34:35,040
so as you know the the conversions that

00:34:33,599 --> 00:34:38,159
has had been envisioned

00:34:35,040 --> 00:34:39,119
was really with dsn the complexity that

00:34:38,159 --> 00:34:41,440
tsm

00:34:39,119 --> 00:34:42,560
poses is that you have to pass you know

00:34:41,440 --> 00:34:45,200
you have to upgrade

00:34:42,560 --> 00:34:46,079
some some of the hardware um and you

00:34:45,200 --> 00:34:48,639
have a wire

00:34:46,079 --> 00:34:49,919
so what we are seeing actually on on the

00:34:48,639 --> 00:34:51,839
on the market

00:34:49,919 --> 00:34:53,839
is that in several instances there is a

00:34:51,839 --> 00:34:56,639
preference toward converging toward

00:34:53,839 --> 00:34:57,200
you know 5g uh and retaining some of the

00:34:56,639 --> 00:34:59,200
field bus

00:34:57,200 --> 00:35:00,400
as they are and then integrate the rest

00:34:59,200 --> 00:35:02,640
out of that

00:35:00,400 --> 00:35:03,760
yeah so the concept of a sort of gateway

00:35:02,640 --> 00:35:06,000
that you know

00:35:03,760 --> 00:35:08,640
plays a role of a bridge between the

00:35:06,000 --> 00:35:10,880
whole staff the mud bus the back net

00:35:08,640 --> 00:35:12,560
on the floor versus the rest yes then

00:35:10,880 --> 00:35:14,160
what i think is the most promising in

00:35:12,560 --> 00:35:18,720
terms of security

00:35:14,160 --> 00:35:21,280
and um uh let's say electromagnetic

00:35:18,720 --> 00:35:22,160
interference or tolerance to electro

00:35:21,280 --> 00:35:25,280
magnetic

00:35:22,160 --> 00:35:28,400
interference is li-fi

00:35:25,280 --> 00:35:30,000
so li-fi maybe some of you know is maybe

00:35:28,400 --> 00:35:31,839
using holy wood

00:35:30,000 --> 00:35:33,599
it has been so far too expensive to be

00:35:31,839 --> 00:35:36,079
used in industrial

00:35:33,599 --> 00:35:37,200
but what is interesting is that you have

00:35:36,079 --> 00:35:39,520
no interference

00:35:37,200 --> 00:35:41,119
with you know a robot arm that moves and

00:35:39,520 --> 00:35:43,200
in terms of security

00:35:41,119 --> 00:35:44,160
as far as every wall or if i close

00:35:43,200 --> 00:35:45,839
window

00:35:44,160 --> 00:35:47,359
nothing gets out of it because it's

00:35:45,839 --> 00:35:50,560
based on light

00:35:47,359 --> 00:35:51,280
so we are not there yet but for me

00:35:50,560 --> 00:35:54,000
that's a

00:35:51,280 --> 00:35:58,960
super interesting um you know future

00:35:54,000 --> 00:36:00,640
future direction to follow closely

00:35:58,960 --> 00:36:02,880
certainly something to keep an eye on

00:36:00,640 --> 00:36:04,720
and and continuing with you angelo so

00:36:02,880 --> 00:36:06,000
we talked a lot about networking we

00:36:04,720 --> 00:36:09,119
talked a lot about

00:36:06,000 --> 00:36:14,160
uh devices so what i would try to

00:36:09,119 --> 00:36:14,160
to get a bit deeper about with you

00:36:14,240 --> 00:36:19,599
hardware vs software centralized versus

00:36:16,720 --> 00:36:19,599
decentralized

00:36:19,760 --> 00:36:23,839
you know when we consider edge device

00:36:22,400 --> 00:36:25,680
security

00:36:23,839 --> 00:36:27,280
we talked about some hardware aspects

00:36:25,680 --> 00:36:29,760
some software aspects but

00:36:27,280 --> 00:36:30,720
is it really uh more of a hardware or a

00:36:29,760 --> 00:36:33,440
software issue

00:36:30,720 --> 00:36:36,079
in your opinion well from my perspective

00:36:33,440 --> 00:36:37,680
it's actually both right because um

00:36:36,079 --> 00:36:40,560
in fact there is hardware software and

00:36:37,680 --> 00:36:42,560
network that's that's really the three

00:36:40,560 --> 00:36:44,640
because the hardware has to provide us

00:36:42,560 --> 00:36:47,280
with some basic capability

00:36:44,640 --> 00:36:49,119
right uh in some cases in terms of

00:36:47,280 --> 00:36:50,800
proper either acceleration or

00:36:49,119 --> 00:36:51,760
computational capability for for doing

00:36:50,800 --> 00:36:53,920
encryption

00:36:51,760 --> 00:36:55,119
the ability of storing secrets securely

00:36:53,920 --> 00:36:58,960
and in such a way that

00:36:55,119 --> 00:37:00,800
it's tamper-proof um but then

00:36:58,960 --> 00:37:02,880
once the hardware provides that and we

00:37:00,800 --> 00:37:05,920
have solution for that today

00:37:02,880 --> 00:37:07,760
the software has to leverage it okay and

00:37:05,920 --> 00:37:08,480
that's where sometimes we have issue

00:37:07,760 --> 00:37:10,160
today

00:37:08,480 --> 00:37:12,240
the pro the communication protocol we

00:37:10,160 --> 00:37:13,119
use you know as it was mentioned by that

00:37:12,240 --> 00:37:14,640
before

00:37:13,119 --> 00:37:16,800
there are lots of things that um you

00:37:14,640 --> 00:37:18,160
know are not quite right for the use

00:37:16,800 --> 00:37:19,520
case we're going to address

00:37:18,160 --> 00:37:21,440
so he mentioned a few interesting

00:37:19,520 --> 00:37:22,079
problem that you know the underlying

00:37:21,440 --> 00:37:23,520
problem

00:37:22,079 --> 00:37:26,160
as you mentioned is that we need to move

00:37:23,520 --> 00:37:27,839
from authenticity to name data

00:37:26,160 --> 00:37:29,359
and as you know we have also some some

00:37:27,839 --> 00:37:31,920
very innovative project in

00:37:29,359 --> 00:37:33,280
in eclipse iot and edge like zeno which

00:37:31,920 --> 00:37:35,920
is an a data

00:37:33,280 --> 00:37:37,200
networking protocol and if you start

00:37:35,920 --> 00:37:38,880
reasoning about that

00:37:37,200 --> 00:37:40,800
networks becomes important because the

00:37:38,880 --> 00:37:42,079
way you in which you designed your

00:37:40,800 --> 00:37:46,320
protocol

00:37:42,079 --> 00:37:48,800
makes some attack harder right um

00:37:46,320 --> 00:37:50,320
makes load balancing easier makes

00:37:48,800 --> 00:37:52,160
security easier

00:37:50,320 --> 00:37:54,400
and uh makes the combination of

00:37:52,160 --> 00:37:57,040
decentralization and security easier

00:37:54,400 --> 00:37:58,160
so i see really hardware as providing

00:37:57,040 --> 00:38:00,079
you know some of the

00:37:58,160 --> 00:38:02,000
basic prerequisites that we need in

00:38:00,079 --> 00:38:04,079
order to be able to build security

00:38:02,000 --> 00:38:05,760
but then we need to use those to

00:38:04,079 --> 00:38:08,079
properly implement security

00:38:05,760 --> 00:38:10,320
within the software that runs on it like

00:38:08,079 --> 00:38:12,720
the device level and in the network

00:38:10,320 --> 00:38:13,920
and one of the important i would say

00:38:12,720 --> 00:38:16,480
element

00:38:13,920 --> 00:38:17,119
that is not i mean it's a facilitator

00:38:16,480 --> 00:38:19,599
but which

00:38:17,119 --> 00:38:21,200
we shouldn't shouldn't underestimate he

00:38:19,599 --> 00:38:22,400
also is also the programming language

00:38:21,200 --> 00:38:24,320
that we use

00:38:22,400 --> 00:38:26,960
as you know we've always been kind of

00:38:24,320 --> 00:38:29,599
orthodox with that right and

00:38:26,960 --> 00:38:30,240
but we see for instance the rays of rust

00:38:29,599 --> 00:38:31,920
as

00:38:30,240 --> 00:38:34,160
you know a good example a programming

00:38:31,920 --> 00:38:36,800
language that provides you with a

00:38:34,160 --> 00:38:39,760
good set of let's say invariants that

00:38:36,800 --> 00:38:41,440
make it easier to build secure software

00:38:39,760 --> 00:38:43,280
that was one of the reason why also

00:38:41,440 --> 00:38:46,400
mozilla introduced it

00:38:43,280 --> 00:38:49,119
and um and and i think that um you know

00:38:46,400 --> 00:38:50,240
we have to we have in a way in our

00:38:49,119 --> 00:38:51,520
development process

00:38:50,240 --> 00:38:53,920
to start being a little bit more

00:38:51,520 --> 00:38:55,680
cautious of all the decisions we take

00:38:53,920 --> 00:38:57,839
down to the programming language that we

00:38:55,680 --> 00:39:00,320
use potentially

00:38:57,839 --> 00:39:01,440
and certainly that has a big impact and

00:39:00,320 --> 00:39:03,280
at the same time one

00:39:01,440 --> 00:39:05,599
one important thread that we've seen in

00:39:03,280 --> 00:39:07,920
the last few years is the emergence of

00:39:05,599 --> 00:39:10,000
open source hardware you know as a

00:39:07,920 --> 00:39:12,240
driver for innovation so i

00:39:10,000 --> 00:39:14,079
at the eclipse foundation we work with

00:39:12,240 --> 00:39:17,040
the open hardware group that essentially

00:39:14,079 --> 00:39:18,320
takes the open source risk 5 instruction

00:39:17,040 --> 00:39:20,720
set and makes

00:39:18,320 --> 00:39:22,320
open source processor designs and they

00:39:20,720 --> 00:39:25,760
are built in the open

00:39:22,320 --> 00:39:27,680
by virus partners and all of that so uh

00:39:25,760 --> 00:39:29,520
at a delaying engine though you do you

00:39:27,680 --> 00:39:32,640
do hardware so how

00:39:29,520 --> 00:39:33,839
how do how does uh open source hardware

00:39:32,640 --> 00:39:36,079
factor in your

00:39:33,839 --> 00:39:38,720
uh in your vision for edge device

00:39:36,079 --> 00:39:38,720
security

00:39:38,960 --> 00:39:44,640
yeah so for i think open source hardware

00:39:42,240 --> 00:39:46,000
has helped a lot in terms of

00:39:44,640 --> 00:39:48,240
accelerating

00:39:46,000 --> 00:39:49,839
innovation i mean let me give an example

00:39:48,240 --> 00:39:51,680
right i have an example of open source

00:39:49,839 --> 00:39:53,280
hardware here

00:39:51,680 --> 00:39:54,720
no i'm not sure if all of you are

00:39:53,280 --> 00:39:58,079
familiar with this card

00:39:54,720 --> 00:40:00,160
yeah absolutely i've got one right so

00:39:58,079 --> 00:40:01,839
that's a super cool example of co-design

00:40:00,160 --> 00:40:02,880
right because they've designed this uh

00:40:01,839 --> 00:40:06,079
this board

00:40:02,880 --> 00:40:06,480
in a hackathon it uses arm processor and

00:40:06,079 --> 00:40:08,560
uh

00:40:06,480 --> 00:40:10,079
it's designed for zephyr right which is

00:40:08,560 --> 00:40:13,119
one of those we use

00:40:10,079 --> 00:40:15,040
so um i mean for me

00:40:13,119 --> 00:40:17,520
open source hardware it's interesting

00:40:15,040 --> 00:40:19,440
because it allows us to do some level of

00:40:17,520 --> 00:40:22,640
code design with software

00:40:19,440 --> 00:40:24,400
and to get uh in a way um

00:40:22,640 --> 00:40:25,680
you know platform that all of a sudden

00:40:24,400 --> 00:40:28,079
are very accessible

00:40:25,680 --> 00:40:30,079
and allow people to experiment and then

00:40:28,079 --> 00:40:32,480
we can leverage further experience to

00:40:30,079 --> 00:40:33,119
eventually you know produce the hardware

00:40:32,480 --> 00:40:36,720
that maybe

00:40:33,119 --> 00:40:38,800
is not open source or not means a salary

00:40:36,720 --> 00:40:40,079
and uh can address the more extreme use

00:40:38,800 --> 00:40:42,400
cases where you need

00:40:40,079 --> 00:40:44,160
you know either extended temperature or

00:40:42,400 --> 00:40:46,000
some specific certification

00:40:44,160 --> 00:40:47,599
uh which are required either for

00:40:46,000 --> 00:40:49,839
security or for safety

00:40:47,599 --> 00:40:50,960
on some environment imagine you know

00:40:49,839 --> 00:40:53,440
edge server that

00:40:50,960 --> 00:40:54,480
that control high speed lines in trains

00:40:53,440 --> 00:40:57,280
right

00:40:54,480 --> 00:40:58,800
um but but i think overall as it was

00:40:57,280 --> 00:41:00,400
done for software

00:40:58,800 --> 00:41:02,400
open source hardware has helped

00:41:00,400 --> 00:41:04,160
innovation uh

00:41:02,400 --> 00:41:06,240
but as a conference of the fact that

00:41:04,160 --> 00:41:08,960
more people get a chance to

00:41:06,240 --> 00:41:10,560
to review it test it it helps with with

00:41:08,960 --> 00:41:13,520
security for sure

00:41:10,560 --> 00:41:14,640
um but i think first and foremost where

00:41:13,520 --> 00:41:18,240
it has helped

00:41:14,640 --> 00:41:19,839
is in accelerating innovation and the

00:41:18,240 --> 00:41:21,359
the level at which people can can

00:41:19,839 --> 00:41:23,760
experiment with

00:41:21,359 --> 00:41:26,880
uh you know integrated platforms like

00:41:23,760 --> 00:41:30,079
for instance what i just showed you

00:41:26,880 --> 00:41:32,160
yes i think that

00:41:30,079 --> 00:41:33,359
an interesting and interesting uh thing

00:41:32,160 --> 00:41:36,720
that angelo

00:41:33,359 --> 00:41:39,440
said is about driving innovation

00:41:36,720 --> 00:41:40,480
today you know when we look at cheap

00:41:39,440 --> 00:41:42,079
manufacturer

00:41:40,480 --> 00:41:44,079
there is a lot of proprietary things

00:41:42,079 --> 00:41:46,480
that are going on in there and since

00:41:44,079 --> 00:41:48,160
many of the things that may be possible

00:41:46,480 --> 00:41:52,000
are not are not possible

00:41:48,160 --> 00:41:54,079
because the chip manufacturer is not

00:41:52,000 --> 00:41:56,400
ready yet for something so when you have

00:41:54,079 --> 00:41:58,880
to adopt let's say a microprocessor

00:41:56,400 --> 00:42:02,319
on on a product you gotta also

00:41:58,880 --> 00:42:04,640
understand what the manufacturer is

00:42:02,319 --> 00:42:06,480
is giving you uh with you know to

00:42:04,640 --> 00:42:08,800
support that processor so

00:42:06,480 --> 00:42:10,960
let's say that you uh for instance you

00:42:08,800 --> 00:42:14,560
choose like a provider

00:42:10,960 --> 00:42:16,960
and you have a basic bsp that basic bsp

00:42:14,560 --> 00:42:18,880
that where there is a lot of code and a

00:42:16,960 --> 00:42:21,440
lot of things that the manufacturer

00:42:18,880 --> 00:42:22,319
did develop because he has the ip on the

00:42:21,440 --> 00:42:26,480
processor that

00:42:22,319 --> 00:42:29,200
he does manufacture he binds you

00:42:26,480 --> 00:42:29,599
from the beginning to something that may

00:42:29,200 --> 00:42:32,880
be

00:42:29,599 --> 00:42:34,960
or maybe okay but maybe not so

00:42:32,880 --> 00:42:36,000
i think that risk five and the open

00:42:34,960 --> 00:42:39,200
other community

00:42:36,000 --> 00:42:41,680
is just breaking that barrier finally

00:42:39,200 --> 00:42:44,000
finally we may have like a system that

00:42:41,680 --> 00:42:47,040
is fully transparent

00:42:44,000 --> 00:42:48,480
sees the inception so from a security

00:42:47,040 --> 00:42:51,040
perspective let's say that uh

00:42:48,480 --> 00:42:52,880
let's talk about um that our trust zone

00:42:51,040 --> 00:42:55,760
so today trust zone is a

00:42:52,880 --> 00:42:56,720
really nice way to save secrets uh

00:42:55,760 --> 00:43:00,400
inside

00:42:56,720 --> 00:43:03,440
an embedded system but again

00:43:00,400 --> 00:43:05,920
the implementation the really raw

00:43:03,440 --> 00:43:07,520
and low level implementation of the

00:43:05,920 --> 00:43:10,240
armed trust zone

00:43:07,520 --> 00:43:11,359
in a real product when i buy a sub

00:43:10,240 --> 00:43:14,480
module

00:43:11,359 --> 00:43:15,599
is driven by the chip manufacturer

00:43:14,480 --> 00:43:18,960
if i don't have a reference

00:43:15,599 --> 00:43:20,160
implementation of of truck zone in that

00:43:18,960 --> 00:43:23,440
particular context

00:43:20,160 --> 00:43:26,960
i cannot use trust cell so again

00:43:23,440 --> 00:43:27,440
open hardware as i really you know enjoy

00:43:26,960 --> 00:43:29,119
so much

00:43:27,440 --> 00:43:31,200
following what's going on in that in

00:43:29,119 --> 00:43:33,839
that in that space because

00:43:31,200 --> 00:43:34,480
finally there is more democracy like in

00:43:33,839 --> 00:43:37,599
software

00:43:34,480 --> 00:43:39,440
has been like for 30 years uh now

00:43:37,599 --> 00:43:41,200
uh you know it's time for that same

00:43:39,440 --> 00:43:42,480
democracy to be on a hardware

00:43:41,200 --> 00:43:44,480
level providing like a great

00:43:42,480 --> 00:43:45,119
transparency and a great innovation and

00:43:44,480 --> 00:43:47,280
i agree with

00:43:45,119 --> 00:43:48,640
angelo this is absolutely groundbreaking

00:43:47,280 --> 00:43:51,040
for that

00:43:48,640 --> 00:43:52,160
and we see this open hardware and open

00:43:51,040 --> 00:43:54,640
source model even

00:43:52,160 --> 00:43:56,319
even in the networking space i think

00:43:54,640 --> 00:43:57,680
although that's not a space i follow a

00:43:56,319 --> 00:44:00,319
lot but

00:43:57,680 --> 00:44:02,240
i know there are open source designs for

00:44:00,319 --> 00:44:04,720
network switches and specialized

00:44:02,240 --> 00:44:05,680
open source open oss that you can run on

00:44:04,720 --> 00:44:07,680
that so

00:44:05,680 --> 00:44:09,200
the potential for improvement obviously

00:44:07,680 --> 00:44:11,440
and openness is uh

00:44:09,200 --> 00:44:12,560
still increasing as we as we go forward

00:44:11,440 --> 00:44:14,640
as an industry

00:44:12,560 --> 00:44:16,079
unfortunately that's all the time that

00:44:14,640 --> 00:44:18,800
we have but

00:44:16,079 --> 00:44:21,200
uh really uh it's been i think an

00:44:18,800 --> 00:44:22,960
enlightening conversation and

00:44:21,200 --> 00:44:24,880
certainly one that i hope that we will

00:44:22,960 --> 00:44:26,640
be able to continue in future panels and

00:44:24,880 --> 00:44:30,319
further discussions uh

00:44:26,640 --> 00:44:33,520
uh you know over time so uh

00:44:30,319 --> 00:44:35,280
angelo dihan nicola ted

00:44:33,520 --> 00:44:37,040
thank you so much for being with us

00:44:35,280 --> 00:44:39,839
today and discussing this

00:44:37,040 --> 00:44:40,880
and you all in the audience if you liked

00:44:39,839 --> 00:44:43,200
what you heard and

00:44:40,880 --> 00:44:43,920
like to exchange with our panelists

00:44:43,200 --> 00:44:46,800
today well

00:44:43,920 --> 00:44:48,880
please join us in our community meetings

00:44:46,800 --> 00:44:52,000
for the edge native working group

00:44:48,880 --> 00:44:54,319
we are an open community welcoming to

00:44:52,000 --> 00:44:55,200
well everyone really willing to exchange

00:44:54,319 --> 00:44:56,960
ideas and

00:44:55,200 --> 00:44:59,200
and discuss the state of the industry

00:44:56,960 --> 00:45:03,119
and drive innovation in open source

00:44:59,200 --> 00:45:04,000
so please join us and we'll be happy to

00:45:03,119 --> 00:45:06,000
well continue

00:45:04,000 --> 00:45:07,920
to discuss everything that we discussed

00:45:06,000 --> 00:45:10,800
today and even more with you

00:45:07,920 --> 00:45:12,960
so thank you for being with us today my

00:45:10,800 --> 00:45:15,359
name is frederic davier programmer

00:45:12,960 --> 00:45:16,400
manager for iot and ed computing at the

00:45:15,359 --> 00:45:19,040
eclipse foundation

00:45:16,400 --> 00:45:20,319
and this was our panel on edge device

00:45:19,040 --> 00:45:22,960
security so

00:45:20,319 --> 00:45:33,280
everyone thank you again and i hope to

00:45:22,960 --> 00:45:35,359
talk to you soon

00:45:33,280 --> 00:45:35,359

YouTube URL: https://www.youtube.com/watch?v=OdAbNPjFxpo


