Title: Automated OS Testing Using Containers - Lakshmipathi.G
Publication date: 2020-03-22
Playlist: FOSSASIA Summit 2020 - Cloud
Description: 
	FOSSASIA Summit 2020 - Cloud Track
Captions: 
	00:00:01,850 --> 00:00:10,679
hi I am actually begin I work as a

00:00:06,180 --> 00:00:14,670
consultant with kalapa welcome to this

00:00:10,679 --> 00:00:20,130
talk about automated voice system using

00:00:14,670 --> 00:00:23,130
containers so first of all what is so

00:00:20,130 --> 00:00:27,599
extra steam voice testing involves

00:00:23,130 --> 00:00:30,599
different components say we may want to

00:00:27,599 --> 00:00:33,030
test myself solution procedure which

00:00:30,599 --> 00:00:37,670
improves at work is like setting up

00:00:33,030 --> 00:00:41,190
occasional times on disk partition

00:00:37,670 --> 00:00:41,670
creating accounts network setup it's a

00:00:41,190 --> 00:00:44,250
tough

00:00:41,670 --> 00:00:47,670
so once the installation procedure is

00:00:44,250 --> 00:00:51,180
completed we want to be free the boot

00:00:47,670 --> 00:00:52,760
process whether everything was properly

00:00:51,180 --> 00:00:55,770
installed or not

00:00:52,760 --> 00:00:59,309
under the we may want to extend this

00:00:55,770 --> 00:01:02,340
test to logging in to specific test

00:00:59,309 --> 00:01:04,220
environment optionally we may want to

00:01:02,340 --> 00:01:08,010
test a desktop application

00:01:04,220 --> 00:01:11,040
so all these from different parts of why

00:01:08,010 --> 00:01:14,220
it's listing but also the custom

00:01:11,040 --> 00:01:18,270
framework should should have the should

00:01:14,220 --> 00:01:25,470
protect the logs and record them so that

00:01:18,270 --> 00:01:28,470
we can examine the emulator so here is

00:01:25,470 --> 00:01:32,430
an objective for automatic ways to stick

00:01:28,470 --> 00:01:34,470
to it the testing tool should be easy to

00:01:32,430 --> 00:01:36,689
set up and turn in any environment

00:01:34,470 --> 00:01:38,960
let it be your personal system or a

00:01:36,689 --> 00:01:42,030
cloud environment

00:01:38,960 --> 00:01:46,920
what are you gonna see a CDN why not

00:01:42,030 --> 00:01:51,420
like Jenkins so it should be able to run

00:01:46,920 --> 00:01:55,520
it without any issues next since you are

00:01:51,420 --> 00:01:58,290
using more personal laptops or desktop

00:01:55,520 --> 00:02:02,159
developers can testicles changes locally

00:01:58,290 --> 00:02:05,280
without depending on QA team and also

00:02:02,159 --> 00:02:07,530
the the QA tool should be

00:02:05,280 --> 00:02:10,979
[Music]

00:02:07,530 --> 00:02:13,110
should make should make it possible for

00:02:10,979 --> 00:02:16,860
new developers to car to go through the

00:02:13,110 --> 00:02:19,860
test cases so they must be easily add

00:02:16,860 --> 00:02:22,740
more test cases rather than spending

00:02:19,860 --> 00:02:23,960
time on learning new languages or

00:02:22,740 --> 00:02:27,030
something like that

00:02:23,960 --> 00:02:30,930
finally the testing tuition record the

00:02:27,030 --> 00:02:33,630
Lots when screenshots us distresses so

00:02:30,930 --> 00:02:36,830
that we can examine them in case of

00:02:33,630 --> 00:02:36,830
regression or failure

00:02:38,390 --> 00:02:46,680
so there are few pills which can be used

00:02:41,490 --> 00:02:52,770
for this automatic arrest system but it

00:02:46,680 --> 00:02:57,600
has shortcomings also so here you can

00:02:52,770 --> 00:03:01,770
see list of terms on this open queue is

00:02:57,600 --> 00:03:05,490
probably the only two which has which

00:03:01,770 --> 00:03:08,030
fits the requirement but it has few

00:03:05,490 --> 00:03:12,780
disadvantages like a high learning curve

00:03:08,030 --> 00:03:14,610
under dedicated hardware setup so those

00:03:12,780 --> 00:03:16,980
kind of if we are not familiar with

00:03:14,610 --> 00:03:18,840
curve probably you have to learn it to

00:03:16,980 --> 00:03:20,390
write a test cases so those kind of

00:03:18,840 --> 00:03:23,519
things comes with it so we need a

00:03:20,390 --> 00:03:27,209
testing tool which is much more easier

00:03:23,519 --> 00:03:30,530
to for newcomers or big nerves to learn

00:03:27,209 --> 00:03:35,010
within few hours and I'll just start

00:03:30,530 --> 00:03:39,150
doing the adding in test cases just

00:03:35,010 --> 00:03:43,739
return a table so with that objective in

00:03:39,150 --> 00:03:47,100
mind so here's the proposed tool so as

00:03:43,739 --> 00:03:50,660
you can see on the small it relates on

00:03:47,100 --> 00:03:54,360
darker desktop so as you know doctor

00:03:50,660 --> 00:03:56,549
he's pretty much usable anywhere you can

00:03:54,360 --> 00:04:01,650
use it on your laptop or as part of see

00:03:56,549 --> 00:04:04,459
a CD or on any cloud platform we can GCP

00:04:01,650 --> 00:04:08,790
anywhere you want you can just launch it

00:04:04,459 --> 00:04:11,580
so the idea is to use docker desktop

00:04:08,790 --> 00:04:15,180
make use of dr. christow and then we

00:04:11,580 --> 00:04:17,049
have a Cayman Cayman running running

00:04:15,180 --> 00:04:20,680
inside the doctor does

00:04:17,049 --> 00:04:22,780
and if you are familiar with periodic

00:04:20,680 --> 00:04:27,009
week module you should know it's a

00:04:22,780 --> 00:04:32,860
pretty simple dead simple wait on module

00:04:27,009 --> 00:04:35,949
which helps to perform automations so

00:04:32,860 --> 00:04:39,279
the idea is to run the pewag we might

00:04:35,949 --> 00:04:42,370
better be module masochist controller

00:04:39,279 --> 00:04:45,069
inside the docker desktop so we will be

00:04:42,370 --> 00:04:47,680
launching a camiÃ³n instance from the

00:04:45,069 --> 00:04:49,569
given I guess way mates and set up a

00:04:47,680 --> 00:04:53,919
remote through them then finally we will

00:04:49,569 --> 00:04:59,229
be said it's giving input files which

00:04:53,919 --> 00:05:02,219
can ask the periodic remodel to perform

00:04:59,229 --> 00:05:05,650
specific actions say like sending

00:05:02,219 --> 00:05:10,240
keystrokes or mosy ones those kind of

00:05:05,650 --> 00:05:13,180
activities finally all these activities

00:05:10,240 --> 00:05:15,699
of record of uses using ffmpeg so that

00:05:13,180 --> 00:05:20,979
we can go back in time and check that

00:05:15,699 --> 00:05:26,400
the failure happened so let's get

00:05:20,979 --> 00:05:31,479
started with how how the test tool was

00:05:26,400 --> 00:05:34,569
so if you look at at the top its call it

00:05:31,479 --> 00:05:38,800
has something called tasks so it can say

00:05:34,569 --> 00:05:43,300
for example if you want to tester Ubuntu

00:05:38,800 --> 00:05:45,849
or Debian is for image so installation

00:05:43,300 --> 00:05:50,050
process we can say say Debian installer

00:05:45,849 --> 00:05:53,349
as a task and then each task has nothing

00:05:50,050 --> 00:05:55,719
but a collection of files they are

00:05:53,349 --> 00:05:59,439
called action phase so these action

00:05:55,719 --> 00:06:02,889
files in turn will it will tell you what

00:05:59,439 --> 00:06:05,649
to do what we should look for it may be

00:06:02,889 --> 00:06:08,399
like finding an image or sending a key

00:06:05,649 --> 00:06:11,680
combination or running specific script

00:06:08,399 --> 00:06:16,180
or Mouse events and those kind of things

00:06:11,680 --> 00:06:20,020
so this is how the Tool Works he does

00:06:16,180 --> 00:06:20,880
only wanted to compromise early tasks

00:06:20,020 --> 00:06:25,240
and

00:06:20,880 --> 00:06:26,770
so we will see what is task actually

00:06:25,240 --> 00:06:29,979
Taos files

00:06:26,770 --> 00:06:33,520
person are in with our the fights

00:06:29,979 --> 00:06:37,419
between end with dot task these contains

00:06:33,520 --> 00:06:42,720
wonderful yam on file names these files

00:06:37,419 --> 00:06:42,720
will be executed in sequence under each

00:06:42,750 --> 00:06:51,310
action so as you can see here that is a

00:06:48,240 --> 00:06:54,400
directory called task and it has a

00:06:51,310 --> 00:06:56,020
hollow world or task fight and in this

00:06:54,400 --> 00:06:58,720
file you can see there is a one yeah Mel

00:06:56,020 --> 00:07:01,419
file that is couple of her files one is

00:06:58,720 --> 00:07:03,970
open terminal dot I am on and a hello

00:07:01,419 --> 00:07:06,150
world Ahmad so these two are two actions

00:07:03,970 --> 00:07:09,310
so this task

00:07:06,150 --> 00:07:12,190
Halliwell task has two actions files so

00:07:09,310 --> 00:07:17,020
we will next look into what is action

00:07:12,190 --> 00:07:21,099
files will actually contain so as you

00:07:17,020 --> 00:07:23,849
can see the actions file sent with dot

00:07:21,099 --> 00:07:27,789
yahwah and it contains a key value path

00:07:23,849 --> 00:07:31,030
in this following formats say for

00:07:27,789 --> 00:07:35,919
example it will be key can be key cannon

00:07:31,030 --> 00:07:41,020
with dot PNG or dot k dot type or as

00:07:35,919 --> 00:07:44,409
such so each file a key extension kind

00:07:41,020 --> 00:07:48,639
of a denotes its meaning say this dot

00:07:44,409 --> 00:07:50,380
PNG then you are looking for a image the

00:07:48,639 --> 00:07:54,340
action is based on image if it is dot

00:07:50,380 --> 00:07:57,550
key its keyboard action I put is dot

00:07:54,340 --> 00:08:01,840
then you are doing executing some shell

00:07:57,550 --> 00:08:05,770
script so as you can see the value is

00:08:01,840 --> 00:08:07,750
deleted daily time is like after

00:08:05,770 --> 00:08:09,669
performing some action wait for this

00:08:07,750 --> 00:08:14,770
this much of time before proceeding

00:08:09,669 --> 00:08:18,669
further so as you can see on this couple

00:08:14,770 --> 00:08:20,830
of screen screenshots below on the left

00:08:18,669 --> 00:08:23,919
hand side you can see open terminal dot

00:08:20,830 --> 00:08:26,400
e ml and then few PNG files are

00:08:23,919 --> 00:08:31,740
available and if you

00:08:26,400 --> 00:08:39,480
check the open terminal EML you can see

00:08:31,740 --> 00:08:41,400
it has nothing but here let's talk I key

00:08:39,480 --> 00:08:44,520
value pairs say for example in this

00:08:41,400 --> 00:08:48,420
Start menu at P&G : - that denotes is

00:08:44,520 --> 00:08:52,640
like wait for search for start man of

00:08:48,420 --> 00:08:58,740
PNG that image and wait for 2 seconds

00:08:52,640 --> 00:09:00,720
have to clicking on it so this is how it

00:08:58,740 --> 00:09:03,090
will search for images so we will be

00:09:00,720 --> 00:09:06,210
popular images will be populating images

00:09:03,090 --> 00:09:07,920
in a specific directory now as we shown

00:09:06,210 --> 00:09:10,710
on the left hand side and then we will

00:09:07,920 --> 00:09:13,500
be adding here yeah modified to improve

00:09:10,710 --> 00:09:18,030
those images and also mentioning the

00:09:13,500 --> 00:09:25,380
delay time wherever applicable so next

00:09:18,030 --> 00:09:27,810
we will look into some simple actions to

00:09:25,380 --> 00:09:30,390
get to get more clarity

00:09:27,810 --> 00:09:33,720
say for example in startup minute or PNG

00:09:30,390 --> 00:09:36,570
as we discussed before it will find and

00:09:33,720 --> 00:09:40,470
click on the image startup minute or PNG

00:09:36,570 --> 00:09:43,320
and wait for two seconds and the two

00:09:40,470 --> 00:09:46,110
seconds is the delay time part it can be

00:09:43,320 --> 00:09:51,600
negative also if it is negative we will

00:09:46,110 --> 00:09:56,580
just suit exist on our current desktop

00:09:51,600 --> 00:09:59,850
or not then if you see the third example

00:09:56,580 --> 00:10:07,050
that is three images of that image 1

00:09:59,850 --> 00:10:11,520
million G : 5 mg to PNG : 5 so actually

00:10:07,050 --> 00:10:15,710
that means is sometimes for whatever

00:10:11,520 --> 00:10:18,840
reason we made we may not be able to

00:10:15,710 --> 00:10:22,800
provide a specific image so we have a

00:10:18,840 --> 00:10:24,810
list of images even if what process we

00:10:22,800 --> 00:10:28,290
may want to proceed with it so in those

00:10:24,810 --> 00:10:31,200
cases we can use this syntax so if you

00:10:28,290 --> 00:10:34,819
try to find a single image from this one

00:10:31,200 --> 00:10:36,859
from this list if if it was us

00:10:34,819 --> 00:10:38,329
if it are able to find the first image

00:10:36,859 --> 00:10:42,319
it will say check whether the second is

00:10:38,329 --> 00:10:44,629
available or not this way at least one

00:10:42,319 --> 00:10:49,579
image is formed then the action is

00:10:44,629 --> 00:10:53,289
marked as first then you can see here

00:10:49,579 --> 00:10:56,329
comes the keyboard actions there is a

00:10:53,289 --> 00:10:59,029
entry dot key : 60 that means just

00:10:56,329 --> 00:11:02,209
enters it presses the enter key and

00:10:59,029 --> 00:11:04,959
waits for 60 seconds and then the next

00:11:02,209 --> 00:11:08,809
one is all the enter key and then

00:11:04,959 --> 00:11:12,109
control shift T dot key all those things

00:11:08,809 --> 00:11:14,869
you should be familiar from here by now

00:11:12,109 --> 00:11:17,029
I just setting up different combinations

00:11:14,869 --> 00:11:20,929
you can send it to key combination or a

00:11:17,029 --> 00:11:24,589
three key combination with it then there

00:11:20,929 --> 00:11:26,600
is a action called dot type say in this

00:11:24,589 --> 00:11:28,309
case it's a Debian door type : fate so

00:11:26,600 --> 00:11:32,629
that means whatever the current most

00:11:28,309 --> 00:11:37,429
pushing is there it will take Debian as

00:11:32,629 --> 00:11:40,309
a text so that's another action and you

00:11:37,429 --> 00:11:42,949
have a script we can even put so it

00:11:40,309 --> 00:11:46,279
shell scripts so this will be executed

00:11:42,949 --> 00:11:49,429
inside the kamo using Python fabric

00:11:46,279 --> 00:11:51,499
module so you need to set up the your

00:11:49,429 --> 00:11:55,699
username and password properly for that

00:11:51,499 --> 00:11:57,909
camera image Hunton more sections so you

00:11:55,699 --> 00:12:02,329
can say it like dot mouse means

00:11:57,909 --> 00:12:04,720
obviously it will flick rightly pass

00:12:02,329 --> 00:12:07,220
directly even and right doublethink

00:12:04,720 --> 00:12:13,699
obviously you should know what it must

00:12:07,220 --> 00:12:16,419
be so these are simple actions that can

00:12:13,699 --> 00:12:19,819
be used with inside the document file

00:12:16,419 --> 00:12:24,139
the next we will be looking into a small

00:12:19,819 --> 00:12:28,639
horrible test program say here you can

00:12:24,139 --> 00:12:33,139
see by the way you can clone the repo

00:12:28,639 --> 00:12:38,089
from boy you are under you can even test

00:12:33,139 --> 00:12:41,209
it by watching this so just to clone the

00:12:38,089 --> 00:12:42,120
repo and you will have a script and test

00:12:41,209 --> 00:12:45,360
dot SH and

00:12:42,120 --> 00:12:48,990
just past the horrible tour task so it

00:12:45,360 --> 00:12:52,529
will produce output similar to what we

00:12:48,990 --> 00:12:55,259
have shown in this screenshot so as you

00:12:52,529 --> 00:12:58,680
can see if you properly closely you can

00:12:55,259 --> 00:13:02,339
see it has taught me no it will search

00:12:58,680 --> 00:13:05,490
for for you images obviously we can make

00:13:02,339 --> 00:13:07,529
it from the image names its start my

00:13:05,490 --> 00:13:11,490
notes system tools terminal open

00:13:07,529 --> 00:13:14,220
terminal MIDI already so by now that it

00:13:11,490 --> 00:13:17,129
enters the terminal is ready so then we

00:13:14,220 --> 00:13:19,379
have a hollow or txt it will just read

00:13:17,129 --> 00:13:21,870
the content of the txt and type it into

00:13:19,379 --> 00:13:23,999
the terminal so this is another way of

00:13:21,870 --> 00:13:29,249
executing commands within the terminal

00:13:23,999 --> 00:13:33,300
inside a desktop environment so that's

00:13:29,249 --> 00:13:37,529
the thing is sometimes when you want to

00:13:33,300 --> 00:13:40,889
do new test case say as you can see it's

00:13:37,529 --> 00:13:42,389
not really you you don't have option of

00:13:40,889 --> 00:13:45,180
viewing what's really going on if

00:13:42,389 --> 00:13:49,769
something fails in between we may not

00:13:45,180 --> 00:13:54,740
know where it is if it may show you've

00:13:49,769 --> 00:13:57,079
got it filled on the log but viewing it

00:13:54,740 --> 00:14:01,319
while it fails this makes a difference

00:13:57,079 --> 00:14:03,120
so in such cases say we want to be with

00:14:01,319 --> 00:14:06,990
the test progress what we can do is just

00:14:03,120 --> 00:14:09,990
you can pause the expose expose port

00:14:06,990 --> 00:14:12,420
equal to one that incremental variable

00:14:09,990 --> 00:14:15,139
and then run the same program again now

00:14:12,420 --> 00:14:19,980
just go ahead and work on your browser

00:14:15,139 --> 00:14:22,860
with your local IP and just pausing the

00:14:19,980 --> 00:14:26,399
first the port weight is going to be 32

00:14:22,860 --> 00:14:28,620
summer 68 you can once you do that then

00:14:26,399 --> 00:14:30,540
you can just view the progress of what's

00:14:28,620 --> 00:14:34,110
really happening you can I would suggest

00:14:30,540 --> 00:14:37,319
you to open up terminal and keep the

00:14:34,110 --> 00:14:39,389
processor and then do it parallel you

00:14:37,319 --> 00:14:41,790
should be able to view what's exactly

00:14:39,389 --> 00:14:49,790
going on on the table as well as on the

00:14:41,790 --> 00:14:53,879
processor so next next I will show you

00:14:49,790 --> 00:14:55,260
Debian is Co image testing so actually

00:14:53,879 --> 00:14:59,460
the ISO image testing

00:14:55,260 --> 00:15:01,530
you can it's already available the

00:14:59,460 --> 00:15:05,550
images and strips everything is

00:15:01,530 --> 00:15:10,740
available inside Debian Buster branch

00:15:05,550 --> 00:15:12,510
you can just clone it and then expose at

00:15:10,740 --> 00:15:14,660
the port if you like to see what's

00:15:12,510 --> 00:15:18,240
exactly going on you can run the test

00:15:14,660 --> 00:15:21,240
start the launch the test and you will

00:15:18,240 --> 00:15:26,000
be see the Debian installer getting

00:15:21,240 --> 00:15:30,120
downloaded from the latest version and

00:15:26,000 --> 00:15:32,760
the install will be proceeding with the

00:15:30,120 --> 00:15:36,020
installation process if you are

00:15:32,760 --> 00:15:39,560
interested you can look into the kamo

00:15:36,020 --> 00:15:44,490
launch script which is available inside

00:15:39,560 --> 00:15:45,540
images debian 10 launch is 4.8 on the

00:15:44,490 --> 00:15:51,450
remote previous script is available

00:15:45,540 --> 00:15:56,460
under setup watch well this is how you

00:15:51,450 --> 00:16:03,450
can test the existing setup if you like

00:15:56,460 --> 00:16:06,150
to get started with this so next we will

00:16:03,450 --> 00:16:11,160
be looking into how to add a new test

00:16:06,150 --> 00:16:13,530
new test so as I mentioned earlier we

00:16:11,160 --> 00:16:16,890
are loading the start of the session it

00:16:13,530 --> 00:16:19,470
should be much more simpler to add a new

00:16:16,890 --> 00:16:22,770
test cases so here it needs only three

00:16:19,470 --> 00:16:25,590
steps first step is just put the

00:16:22,770 --> 00:16:29,490
required you may just fixed five scripts

00:16:25,590 --> 00:16:31,920
under the test case name this name say

00:16:29,490 --> 00:16:33,990
for example in this case images slash

00:16:31,920 --> 00:16:36,330
test name you can place your images

00:16:33,990 --> 00:16:38,730
scripts or test files whatever you want

00:16:36,330 --> 00:16:43,710
you have then just create a yam will

00:16:38,730 --> 00:16:46,800
fight inside that test name directly and

00:16:43,710 --> 00:16:48,420
then mention which images you want to

00:16:46,800 --> 00:16:50,280
use while which is good do you want to

00:16:48,420 --> 00:16:52,140
use commas time you want to wait in

00:16:50,280 --> 00:16:55,140
between them so those you can see

00:16:52,140 --> 00:16:57,480
actually you can use follower

00:16:55,140 --> 00:16:59,670
as your starting point to play around

00:16:57,480 --> 00:17:05,640
with this and finally you can just add

00:16:59,670 --> 00:17:07,679
the Yama file name into task test name

00:17:05,640 --> 00:17:12,209
dot task 5 which is 3 which resides

00:17:07,679 --> 00:17:22,949
under task directly so once you set it

00:17:12,209 --> 00:17:25,530
up you can start running the test so the

00:17:22,949 --> 00:17:28,110
next is I will show you what the output

00:17:25,530 --> 00:17:30,990
results will be so the output resistance

00:17:28,110 --> 00:17:35,700
will be in the form of screenshots under

00:17:30,990 --> 00:17:37,980
video so because with screenshots on we

00:17:35,700 --> 00:17:41,250
cannot really figure out what's going on

00:17:37,980 --> 00:17:46,980
so there we will have a 1 video for each

00:17:41,250 --> 00:17:49,830
action as well as the final video so the

00:17:46,980 --> 00:17:53,280
videos will be stored in a this is

00:17:49,830 --> 00:17:55,799
directory with a unique ID and you you

00:17:53,280 --> 00:17:57,990
will have a simple HTML file if you can

00:17:55,799 --> 00:18:01,610
just open it it would be show the output

00:17:57,990 --> 00:18:04,620
in the HTML format as you can see here

00:18:01,610 --> 00:18:07,500
so you can see its first screenshot it

00:18:04,620 --> 00:18:09,290
is opening the terminal and second

00:18:07,500 --> 00:18:10,830
probably it might have done the results

00:18:09,290 --> 00:18:12,780
steps by then

00:18:10,830 --> 00:18:15,120
so by the time we have taken the

00:18:12,780 --> 00:18:18,360
screenshot but if you look into the

00:18:15,120 --> 00:18:20,840
final video or follow voll dot mp4 file

00:18:18,360 --> 00:18:24,440
you should know what's exactly happening

00:18:20,840 --> 00:18:28,790
so now we next we will quickly look into

00:18:24,440 --> 00:18:32,880
in debian results actually this is from

00:18:28,790 --> 00:18:36,090
link I'm sure in the next slide as you

00:18:32,880 --> 00:18:37,980
can as you can see it is on the first

00:18:36,090 --> 00:18:39,330
tour you can see there being launched we

00:18:37,980 --> 00:18:41,850
where you can see they be in live in

00:18:39,330 --> 00:18:44,010
major installed and also you it provides

00:18:41,850 --> 00:18:45,799
you the welcome screen all those things

00:18:44,010 --> 00:18:50,299
are there on the second row you can see

00:18:45,799 --> 00:18:54,200
it sets up the location and partitioning

00:18:50,299 --> 00:18:57,299
then we have the user account details

00:18:54,200 --> 00:19:01,200
and then we proceed with base system

00:18:57,299 --> 00:19:05,130
installation so everything is done in a

00:19:01,200 --> 00:19:08,010
cloud environment or my personal

00:19:05,130 --> 00:19:11,700
but actually this thing is romina gitlab

00:19:08,010 --> 00:19:15,180
CA everyone so this will give you you

00:19:11,700 --> 00:19:18,780
know easier way of setting up ways you

00:19:15,180 --> 00:19:21,630
may adjust testing for ways images so

00:19:18,780 --> 00:19:26,430
finally I will share few links where you

00:19:21,630 --> 00:19:33,020
can check the check out the source code

00:19:26,430 --> 00:19:36,660
as well as other results you can see

00:19:33,020 --> 00:19:38,340
that is one open to ISO image resources

00:19:36,660 --> 00:19:42,240
available and then you have a pastor is

00:19:38,340 --> 00:19:44,070
for which uses the manual partition and

00:19:42,240 --> 00:19:49,200
you have a busted ISO with default

00:19:44,070 --> 00:19:50,880
partition so those kinds of things you

00:19:49,200 --> 00:19:54,450
can go ahead and look it's much more

00:19:50,880 --> 00:19:59,730
easier to add new test cases as as you

00:19:54,450 --> 00:20:02,370
have seen seen before so all we need to

00:19:59,730 --> 00:20:05,640
do is just put the images into a

00:20:02,370 --> 00:20:07,890
directory and then create a key value

00:20:05,640 --> 00:20:10,470
pair about that image how the action

00:20:07,890 --> 00:20:14,450
should will be going to represent and

00:20:10,470 --> 00:20:17,940
then finally add a task 5 so that's all

00:20:14,450 --> 00:20:23,190
I have actually if you have any

00:20:17,940 --> 00:20:27,360
questions feel free to write to me or

00:20:23,190 --> 00:20:29,370
ping me on de clap I should be able to

00:20:27,360 --> 00:20:32,510
answer thank you very much

00:20:29,370 --> 00:20:32,510

YouTube URL: https://www.youtube.com/watch?v=pTxi-APR3J4


