Title: How cloud-native applications are helping orgs stay ahead of cybersecurity threats - Jerome Walter
Publication date: 2020-03-19
Playlist: FOSSASIA Summit 2020 - Cloud
Description: 
	FOSSASIA Summit 2020 - Cloud
Speaker: Field Chief Information Security Officer | VMware
Captions: 
	00:00:00,560 --> 00:00:07,799
hello everyone I hope that everyone is

00:00:03,629 --> 00:00:10,910
doing fine and safe I'm very sorry I'm

00:00:07,799 --> 00:00:13,710
not able to join today every wanted to

00:00:10,910 --> 00:00:15,240
really appreciate and enjoy the open

00:00:13,710 --> 00:00:15,809
source community and particularly for

00:00:15,240 --> 00:00:17,880
seizure

00:00:15,809 --> 00:00:21,210
unfortunately the circumstances don't

00:00:17,880 --> 00:00:25,140
allow but we're looking in a way where

00:00:21,210 --> 00:00:29,400
in 2020 in technology allows us to to be

00:00:25,140 --> 00:00:31,740
anywhere remotely and recalled so I just

00:00:29,400 --> 00:00:35,070
want to join opportunity to share with

00:00:31,740 --> 00:00:37,530
you on how cognitive and containers

00:00:35,070 --> 00:00:40,260
really help security moving forward but

00:00:37,530 --> 00:00:42,660
before we delve into the topic I just

00:00:40,260 --> 00:00:46,289
want to introduce myself my name is Joel

00:00:42,660 --> 00:00:48,870
Marburg I am lucky enough as it were

00:00:46,289 --> 00:00:51,960
again in a generation where we can be

00:00:48,870 --> 00:00:54,449
proud to be digital native and I'm born

00:00:51,960 --> 00:00:59,100
with the computer more or less a degree

00:00:54,449 --> 00:01:03,080
in that in business and engineering but

00:00:59,100 --> 00:01:05,280
really in the last 15 to 20 years I've

00:01:03,080 --> 00:01:09,650
I've played with a number of wrong

00:01:05,280 --> 00:01:12,450
developers system engineers Linux

00:01:09,650 --> 00:01:14,340
security for the last 15 years and so a

00:01:12,450 --> 00:01:18,720
lot of my description today would be

00:01:14,340 --> 00:01:21,119
really learned it and showing focusing

00:01:18,720 --> 00:01:28,650
on how we can leverage those tools that

00:01:21,119 --> 00:01:32,130
developers IT system engineers and use

00:01:28,650 --> 00:01:36,979
every day how can we use them to improve

00:01:32,130 --> 00:01:40,470
security and today philsie so a pivotal

00:01:36,979 --> 00:01:43,979
which has been acquired by VMware Souls

00:01:40,470 --> 00:01:47,159
and then will change quickly and so as a

00:01:43,979 --> 00:01:48,990
few so I had companies companies first

00:01:47,159 --> 00:01:51,390
resistance formation of committee by

00:01:48,990 --> 00:01:54,720
have same love rate and embrace those

00:01:51,390 --> 00:01:57,390
technologies to you to improve their

00:01:54,720 --> 00:01:59,100
security so I want to share this with

00:01:57,390 --> 00:02:01,920
you because I do believe that there is a

00:01:59,100 --> 00:02:04,740
lot of opportunities here to fix the

00:02:01,920 --> 00:02:06,380
kind of challenges that were having in

00:02:04,740 --> 00:02:12,599
the security

00:02:06,380 --> 00:02:14,930
that's kicked today VMware might not be

00:02:12,599 --> 00:02:19,110
dug and full most when it comes to

00:02:14,930 --> 00:02:23,550
open-source right no if you asked where

00:02:19,110 --> 00:02:27,209
companies are or open-source VMware is

00:02:23,550 --> 00:02:28,950
non focus fear so it's not really as is

00:02:27,209 --> 00:02:30,959
that known that they are absolutely

00:02:28,950 --> 00:02:35,630
being contributed to open source open

00:02:30,959 --> 00:02:39,420
source is a massive part of the VMware

00:02:35,630 --> 00:02:43,250
not Portuguese that if you follow the

00:02:39,420 --> 00:02:46,950
news our CEOs and has announcer to

00:02:43,250 --> 00:02:50,700
strategy but the company is kubernetes

00:02:46,950 --> 00:02:54,569
and VMware second biggest contributor in

00:02:50,700 --> 00:02:56,760
terms of go to kubernetes today so it's

00:02:54,569 --> 00:02:59,220
really a big commitment in open source

00:02:56,760 --> 00:03:03,870
as part of the acquisition of pivotal

00:02:59,220 --> 00:03:06,360
pivotal West or Scioscia the curator of

00:03:03,870 --> 00:03:09,450
spring which was to go personal you

00:03:06,360 --> 00:03:13,019
would know and foundry so these are the

00:03:09,450 --> 00:03:16,590
three very big projects at VMware is

00:03:13,019 --> 00:03:23,150
committing in to maintaining fostering

00:03:16,590 --> 00:03:26,040
making absolutely absolutely developers

00:03:23,150 --> 00:03:28,799
there is also a number of other projects

00:03:26,040 --> 00:03:31,290
VMware has been releasing in open source

00:03:28,799 --> 00:03:34,890
of in contributing to I want enter the

00:03:31,290 --> 00:03:37,709
details but really film where you should

00:03:34,890 --> 00:03:40,560
be singing game whereas net contributor

00:03:37,709 --> 00:03:43,829
and networking of open source which is

00:03:40,560 --> 00:03:46,799
why we're here so today we will be

00:03:43,829 --> 00:03:50,690
talking about cloud native so we can

00:03:46,799 --> 00:03:53,190
talk about security without actually

00:03:50,690 --> 00:03:55,109
looking at what cloud native here and

00:03:53,190 --> 00:03:58,200
fortunately still today people have a

00:03:55,109 --> 00:04:00,269
lot of variations you know in the in the

00:03:58,200 --> 00:04:02,340
diffusion of carbon I believe so

00:04:00,269 --> 00:04:04,799
we delve into this definition furnace

00:04:02,340 --> 00:04:07,590
before looking at the sacred year for

00:04:04,799 --> 00:04:09,959
the security of containers and how but

00:04:07,590 --> 00:04:15,449
maybe security really helps security

00:04:09,959 --> 00:04:17,820
moving forward so let's start and when

00:04:15,449 --> 00:04:20,250
you ask people what cloud is over

00:04:17,820 --> 00:04:23,340
native application is you typically

00:04:20,250 --> 00:04:26,910
would receive a lot of different answers

00:04:23,340 --> 00:04:30,300
but lucky for us some organizations have

00:04:26,910 --> 00:04:34,170
done a great job in defining it so if

00:04:30,300 --> 00:04:37,190
you look at the MIS T definition of

00:04:34,170 --> 00:04:40,500
cloud is really about being able to

00:04:37,190 --> 00:04:45,360
deliver on demand and resources the

00:04:40,500 --> 00:04:48,180
network computing storage on demand

00:04:45,360 --> 00:04:50,190
being able to creates and destroys an on

00:04:48,180 --> 00:04:53,040
demand practically with minimal

00:04:50,190 --> 00:04:54,570
management overheads and that's really

00:04:53,040 --> 00:04:57,750
the massive change we've seen in the

00:04:54,570 --> 00:05:01,920
last in the last ten years in the

00:04:57,750 --> 00:05:05,130
adoption of those technologies on being

00:05:01,920 --> 00:05:07,920
able to go click provide resources and

00:05:05,130 --> 00:05:09,780
that will change also the way we deploy

00:05:07,920 --> 00:05:12,630
your application with simple application

00:05:09,780 --> 00:05:16,290
that's what cognitive applications about

00:05:12,630 --> 00:05:18,510
is the beverage is the ability to to

00:05:16,290 --> 00:05:21,000
provision and destroy resources on

00:05:18,510 --> 00:05:22,850
demand and easily to develop

00:05:21,000 --> 00:05:24,480
applications that are scalable

00:05:22,850 --> 00:05:27,480
applications apart

00:05:24,480 --> 00:05:31,410
and that teacher is environment and to

00:05:27,480 --> 00:05:34,260
co-develop aspect so this is why the

00:05:31,410 --> 00:05:37,230
core of committees is about receivable

00:05:34,260 --> 00:05:40,170
applications probably automation macro

00:05:37,230 --> 00:05:42,180
services because this is the core of how

00:05:40,170 --> 00:05:44,430
do you leverage the ability of those

00:05:42,180 --> 00:05:46,860
cloud technology to develop application

00:05:44,430 --> 00:05:51,240
better really if you scratch the surface

00:05:46,860 --> 00:05:55,140
that means that the public as a ground

00:05:51,240 --> 00:05:58,440
gives you any resources anywhere in a

00:05:55,140 --> 00:06:00,240
matter of minutes and make eve allows

00:05:58,440 --> 00:06:02,700
you to push an application anywhere at

00:06:00,240 --> 00:06:05,370
any time but all of it is really

00:06:02,700 --> 00:06:08,040
Software Defined the core of what cloud

00:06:05,370 --> 00:06:09,360
is a software-defined efforts

00:06:08,040 --> 00:06:11,190
software-defined

00:06:09,360 --> 00:06:13,560
applications fabric separate from

00:06:11,190 --> 00:06:15,540
network software-defined infrastructure

00:06:13,560 --> 00:06:18,090
another that's the releasing of

00:06:15,540 --> 00:06:22,320
everything being so very fine you really

00:06:18,090 --> 00:06:26,390
are challenged and bring enables you to

00:06:22,320 --> 00:06:29,390
do scalability then workers really on

00:06:26,390 --> 00:06:29,390
demand

00:06:29,490 --> 00:06:35,840
the core of cloud native is really

00:06:32,850 --> 00:06:38,460
container strikes if you look at

00:06:35,840 --> 00:06:40,560
cognitive applications they need to be

00:06:38,460 --> 00:06:41,940
distributed need to be consistent to be

00:06:40,560 --> 00:06:44,310
deploying easily and that's what

00:06:41,940 --> 00:06:47,190
containers give us give us a way to

00:06:44,310 --> 00:06:50,880
deploy lightweight workloads portable

00:06:47,190 --> 00:06:52,889
anywhere consistent across workloads but

00:06:50,880 --> 00:06:55,319
really what is secure or not this is

00:06:52,889 --> 00:06:58,970
what we want to explode if you look at

00:06:55,319 --> 00:07:01,530
containers usually people ask and have

00:06:58,970 --> 00:07:03,630
discussion around security of containers

00:07:01,530 --> 00:07:06,539
these two types of security you need to

00:07:03,630 --> 00:07:08,520
repack on one hand to security officer

00:07:06,539 --> 00:07:11,759
container are you building a container

00:07:08,520 --> 00:07:13,800
so these secures a producer or the

00:07:11,759 --> 00:07:16,560
previous yacht extra faces weight coffee

00:07:13,800 --> 00:07:18,509
good but once you go to native

00:07:16,560 --> 00:07:21,000
application actually we get a lot of

00:07:18,509 --> 00:07:23,220
opportunities to reasonably we'll do

00:07:21,000 --> 00:07:25,020
security thanks to medical services in

00:07:23,220 --> 00:07:31,550
containers and that's pretty what I want

00:07:25,020 --> 00:07:35,849
to export what we want so let's look

00:07:31,550 --> 00:07:40,370
container security in a traditional

00:07:35,849 --> 00:07:42,780
environment you know with provision

00:07:40,370 --> 00:07:46,639
operating systems and then we build

00:07:42,780 --> 00:07:52,740
anything manually on tolerate departing

00:07:46,639 --> 00:07:55,349
and layers maker ship ever sees first my

00:07:52,740 --> 00:07:57,210
eyes because your application demand

00:07:55,349 --> 00:08:00,570
different settings of different

00:07:57,210 --> 00:08:03,830
configuration this is really overhead

00:08:00,570 --> 00:08:06,240
were dealing with today in terms of

00:08:03,830 --> 00:08:08,960
container is a service of platform as a

00:08:06,240 --> 00:08:12,240
service you really need to sing as

00:08:08,960 --> 00:08:13,680
provisioning automating automating

00:08:12,240 --> 00:08:15,449
provisioning for your operating system

00:08:13,680 --> 00:08:18,000
your networking and your container

00:08:15,449 --> 00:08:20,909
runtime which is consistent across all

00:08:18,000 --> 00:08:22,110
the nodes you have regardless of the

00:08:20,909 --> 00:08:24,000
application running on NT operating

00:08:22,110 --> 00:08:25,830
system your networking in your dining

00:08:24,000 --> 00:08:29,310
rooms and ship is the same and that

00:08:25,830 --> 00:08:32,159
really gives you one in first benefit is

00:08:29,310 --> 00:08:35,490
instead of dealing with instances and

00:08:32,159 --> 00:08:37,860
this nothing configuration you by

00:08:35,490 --> 00:08:42,839
adopting containers we ensure that this

00:08:37,860 --> 00:08:43,500
90 80 percent below the by relying is

00:08:42,839 --> 00:08:46,680
cautious

00:08:43,500 --> 00:08:49,080
even though today it's a lot of the of

00:08:46,680 --> 00:08:51,510
the security work today we we do today

00:08:49,080 --> 00:08:54,090
trying to figure out with our servers

00:08:51,510 --> 00:08:56,580
away copy under the mid would put

00:08:54,090 --> 00:08:59,520
containers so the container runtime is

00:08:56,580 --> 00:09:02,040
critical in security aspect and that's

00:08:59,520 --> 00:09:03,600
really what you are going to do but also

00:09:02,040 --> 00:09:06,450
the application the content of the

00:09:03,600 --> 00:09:10,110
application as well is very important so

00:09:06,450 --> 00:09:11,760
this dive into those patterns are those

00:09:10,110 --> 00:09:15,150
key points that we need to look at in

00:09:11,760 --> 00:09:19,320
container security first

00:09:15,150 --> 00:09:21,660
you're perching system in the past we

00:09:19,320 --> 00:09:23,490
were deploying big operating system

00:09:21,660 --> 00:09:24,810
because we wanted them to be able to run

00:09:23,490 --> 00:09:26,700
medicine

00:09:24,810 --> 00:09:28,350
we didn't really know what applications

00:09:26,700 --> 00:09:30,750
would be deployed on top of this we need

00:09:28,350 --> 00:09:33,810
to have so many different cases that

00:09:30,750 --> 00:09:36,210
they offer twisting is maximized and is

00:09:33,810 --> 00:09:38,580
pretty bulky once you move to containers

00:09:36,210 --> 00:09:40,500
you want and we really want to focus in

00:09:38,580 --> 00:09:44,340
terms of minimizing the size of your

00:09:40,500 --> 00:09:47,490
containers why because from a security

00:09:44,340 --> 00:09:49,140
perspective we see more and more what we

00:09:47,490 --> 00:09:51,360
call lay of the land attacks using

00:09:49,140 --> 00:09:54,870
what's already on the machine to be able

00:09:51,360 --> 00:09:57,390
to leverage the attack so by reducing

00:09:54,870 --> 00:09:59,550
the size of your containers from

00:09:57,390 --> 00:10:00,930
developer perspective you make it faster

00:09:59,550 --> 00:10:03,750
to deploy from a security perspective

00:10:00,930 --> 00:10:06,930
you reduce the pool that an adversary

00:10:03,750 --> 00:10:09,060
will be able to use of course you deploy

00:10:06,930 --> 00:10:11,010
applications and redeploy every letter

00:10:09,060 --> 00:10:16,530
magically so you want that to be handled

00:10:11,010 --> 00:10:18,330
as well for the technical folks here you

00:10:16,530 --> 00:10:20,820
definitely want to look at Linux

00:10:18,330 --> 00:10:24,600
security modules that are important for

00:10:20,820 --> 00:10:28,130
security they really haven't you make in

00:10:24,600 --> 00:10:31,790
Maximizer security and reduce the

00:10:28,130 --> 00:10:34,320
ability to evade container

00:10:31,790 --> 00:10:36,450
namespace separation is a very important

00:10:34,320 --> 00:10:40,650
but you still need to focus on making

00:10:36,450 --> 00:10:42,780
sure that you have an even more Patrese

00:10:40,650 --> 00:10:45,750
rapport of the benefit we have in

00:10:42,780 --> 00:10:48,600
cognitive is the principle of unit

00:10:45,750 --> 00:10:50,760
ability everything's automated and

00:10:48,600 --> 00:10:53,940
you're not changing in manually you

00:10:50,760 --> 00:10:56,850
reduce your risk of having independent

00:10:53,940 --> 00:10:58,470
configuration and changes you remove the

00:10:56,850 --> 00:11:00,839
fact that people connect on the server

00:10:58,470 --> 00:11:01,740
and do changes there everything's with

00:11:00,839 --> 00:11:04,050
the major difference in this

00:11:01,740 --> 00:11:05,940
consciousness everything all your

00:11:04,050 --> 00:11:08,430
operating system should be the same and

00:11:05,940 --> 00:11:11,670
I'd really reduce a lot of the security

00:11:08,430 --> 00:11:13,110
overheads we have today because if you

00:11:11,670 --> 00:11:15,600
remove security administrators

00:11:13,110 --> 00:11:17,850
connecting to the systems you reduce

00:11:15,600 --> 00:11:20,399
previous access challenges insider

00:11:17,850 --> 00:11:21,990
threats and free an aspect that is

00:11:20,399 --> 00:11:25,110
important as well when you're doing

00:11:21,990 --> 00:11:27,329
security the incident investigations if

00:11:25,110 --> 00:11:30,000
everything is immutable the person is

00:11:27,329 --> 00:11:34,589
the same a fascinating investigation

00:11:30,000 --> 00:11:39,139
and the findings a nice day so it's

00:11:34,589 --> 00:11:43,889
really the core aspects of cognitive

00:11:39,139 --> 00:11:55,050
immutable if you do changes manually

00:11:43,889 --> 00:11:57,209
this is the bat pattern great sorry I

00:11:55,050 --> 00:12:03,800
don't know how to pick any more the

00:11:57,209 --> 00:12:06,149
second aspect of it is networking and

00:12:03,800 --> 00:12:09,079
very often will be seen in terms of the

00:12:06,149 --> 00:12:11,339
adapting containers is because from a

00:12:09,079 --> 00:12:12,959
networking is really hard and you're

00:12:11,339 --> 00:12:16,889
gonna have a lot of workloads innovating

00:12:12,959 --> 00:12:19,529
it's very common to just open a flat

00:12:16,889 --> 00:12:22,370
network where all your servers and all

00:12:19,529 --> 00:12:26,880
your notes honest open flat network

00:12:22,370 --> 00:12:28,740
while it's easy and good for efficiency

00:12:26,880 --> 00:12:31,079
and getting things done from security

00:12:28,740 --> 00:12:32,550
perspective that's really not the best

00:12:31,079 --> 00:12:34,019
approach because that means you're

00:12:32,550 --> 00:12:35,370
really increasing your lapse rate you

00:12:34,019 --> 00:12:37,769
see any of your container is just

00:12:35,370 --> 00:12:40,290
compromised your risk of movement is

00:12:37,769 --> 00:12:44,100
that it increase if you seem to flip out

00:12:40,290 --> 00:12:46,139
really what we we enable a

00:12:44,100 --> 00:12:48,750
software-defined network attribute based

00:12:46,139 --> 00:12:51,389
filtering so really if you do and want

00:12:48,750 --> 00:12:53,579
to embrace large containers platform is

00:12:51,389 --> 00:12:56,880
very important to understand that you

00:12:53,579 --> 00:12:59,040
want micro segmentation you want to

00:12:56,880 --> 00:13:01,810
really segment appropriately but you

00:12:59,040 --> 00:13:05,589
don't want to deal with IPS because

00:13:01,810 --> 00:13:07,389
so really networking remove flat network

00:13:05,589 --> 00:13:10,930
signals the software-defined network as

00:13:07,389 --> 00:13:16,600
in which you do finer grained filtering

00:13:10,930 --> 00:13:18,699
that is adapted to your business the

00:13:16,600 --> 00:13:20,499
next level up is really the container

00:13:18,699 --> 00:13:23,740
runtime and again here we see a lot of

00:13:20,499 --> 00:13:26,589
mistakes of 13 entry so really be

00:13:23,740 --> 00:13:30,189
cautious about it unfortunately still

00:13:26,589 --> 00:13:32,290
today we see reports of kubernetes

00:13:30,189 --> 00:13:34,089
platform that are exposed over the

00:13:32,290 --> 00:13:37,360
Internet where's the API so explosive us

00:13:34,089 --> 00:13:39,069
Internet were even worse the note on

00:13:37,360 --> 00:13:39,910
skating that means anyone can do

00:13:39,069 --> 00:13:42,220
everything

00:13:39,910 --> 00:13:46,990
once everything is open a

00:13:42,220 --> 00:13:49,720
software-defined once everything is is

00:13:46,990 --> 00:13:52,209
driven by API you really want to make

00:13:49,720 --> 00:13:54,939
sure your API endpoints are secure this

00:13:52,209 --> 00:13:57,610
is really the core and the center point

00:13:54,939 --> 00:13:59,350
of all your of audio data center if this

00:13:57,610 --> 00:14:02,170
is not secures and lost in a secure

00:13:59,350 --> 00:14:05,069
environment and the most of the mistake

00:14:02,170 --> 00:14:08,430
we see is to run privileged containers

00:14:05,069 --> 00:14:10,779
one of the core benefits of links

00:14:08,430 --> 00:14:14,740
containers is to create namespace

00:14:10,779 --> 00:14:16,779
operations make sure that everything in

00:14:14,740 --> 00:14:20,439
runs in the container is actually the

00:14:16,779 --> 00:14:22,990
woman not privileged outside or doesn't

00:14:20,439 --> 00:14:24,670
have access to notify the host and

00:14:22,990 --> 00:14:27,519
that's really one of those things that

00:14:24,670 --> 00:14:29,529
is important in deploying or seeking

00:14:27,519 --> 00:14:31,600
your container strategy is to make sure

00:14:29,529 --> 00:14:34,089
it's a triplet under this containers so

00:14:31,600 --> 00:14:34,600
that even if you're good within a

00:14:34,089 --> 00:14:37,870
container

00:14:34,600 --> 00:14:41,559
you're no one or your normal user for

00:14:37,870 --> 00:14:44,579
the rest of it the rest of the hosts so

00:14:41,559 --> 00:14:47,740
really again lemme see amount of time a

00:14:44,579 --> 00:14:49,839
malicious user or an attacker would be

00:14:47,740 --> 00:14:52,300
able to do it something happens here so

00:14:49,839 --> 00:14:55,959
really these are the two core very very

00:14:52,300 --> 00:14:59,730
important red flags that should be

00:14:55,959 --> 00:15:02,199
mindful is making sure the regime is

00:14:59,730 --> 00:15:06,189
protected are protected and you're

00:15:02,199 --> 00:15:07,870
privileged friends content but we still

00:15:06,189 --> 00:15:10,149
have something at those inside the

00:15:07,870 --> 00:15:11,709
container and that's really the image

00:15:10,149 --> 00:15:13,350
and that we're really we see the

00:15:11,709 --> 00:15:14,550
difference is the difference between

00:15:13,350 --> 00:15:16,649
containers

00:15:14,550 --> 00:15:22,019
container platform and application

00:15:16,649 --> 00:15:26,360
platform is where your image come from

00:15:22,019 --> 00:15:30,570
once you deploy container platform like

00:15:26,360 --> 00:15:32,880
kubernetes you really still build the

00:15:30,570 --> 00:15:35,190
content of your image and that's really

00:15:32,880 --> 00:15:37,140
where it's really important to to

00:15:35,190 --> 00:15:40,760
protect sees your pipeline your

00:15:37,140 --> 00:15:44,820
registries we're also image stored again

00:15:40,760 --> 00:15:48,060
the center point and the crown jewel of

00:15:44,820 --> 00:15:51,300
your platform if someone has accessories

00:15:48,060 --> 00:15:53,279
about you to break into your pipeline

00:15:51,300 --> 00:15:55,110
and modify things and you're losing the

00:15:53,279 --> 00:15:58,950
emitter for the benefits of the

00:15:55,110 --> 00:16:01,500
immutability of you can change again

00:15:58,950 --> 00:16:03,149
saying you may input all the security

00:16:01,500 --> 00:16:05,190
tools in your pipeline to the audience

00:16:03,149 --> 00:16:07,970
and if someone can compromise the

00:16:05,190 --> 00:16:10,440
registries and everything on platform

00:16:07,970 --> 00:16:13,470
compromised so these are two very

00:16:10,440 --> 00:16:15,990
important red flag protect your pipeline

00:16:13,470 --> 00:16:17,670
protect your registry and because you're

00:16:15,990 --> 00:16:19,920
bending your developers will be building

00:16:17,670 --> 00:16:22,320
the content of image put into that you

00:16:19,920 --> 00:16:26,790
management of course - is extremely

00:16:22,320 --> 00:16:29,339
important you don't want to be number

00:16:26,790 --> 00:16:31,529
one code and fortunately public

00:16:29,339 --> 00:16:35,700
registries of image or known for having

00:16:31,529 --> 00:16:37,800
a lot of very important aspects of them

00:16:35,700 --> 00:16:41,810
the vision applications that form

00:16:37,800 --> 00:16:44,579
typically you would benefit from pre-bim

00:16:41,810 --> 00:16:49,680
demonstrates forestry resources by

00:16:44,579 --> 00:16:52,740
trusted sources in VMware will be

00:16:49,680 --> 00:16:56,250
application services application catalog

00:16:52,740 --> 00:16:58,649
and do use them

00:16:56,250 --> 00:17:00,329
that means someone else does a job for

00:16:58,649 --> 00:17:03,480
you of looking for Villa beaches

00:17:00,329 --> 00:17:05,309
providing you the latest image so do you

00:17:03,480 --> 00:17:07,679
use these benefits but that also means

00:17:05,309 --> 00:17:11,280
that helps you keep everything updated

00:17:07,679 --> 00:17:14,550
right just regularly to make sure that

00:17:11,280 --> 00:17:18,600
you have you have the latest patch

00:17:14,550 --> 00:17:23,160
because to today and our software is one

00:17:18,600 --> 00:17:24,809
of the first source of compromise so in

00:17:23,160 --> 00:17:26,079
recap that means when you build a

00:17:24,809 --> 00:17:27,579
platform in communities

00:17:26,079 --> 00:17:29,260
platform for building platform you won't

00:17:27,579 --> 00:17:32,980
have our donation point you had was your

00:17:29,260 --> 00:17:34,590
first Network and micro segmented you

00:17:32,980 --> 00:17:37,179
need to make sure that all this I

00:17:34,590 --> 00:17:39,250
purchased on the Lok Satta and this is

00:17:37,179 --> 00:17:41,890
one of the big benefit of going through

00:17:39,250 --> 00:17:43,840
platform is you build it once you do

00:17:41,890 --> 00:17:46,029
some hard work point so folio compliance

00:17:43,840 --> 00:17:48,250
and all your all your security controls

00:17:46,029 --> 00:17:51,279
and every application that ship onto it

00:17:48,250 --> 00:17:54,429
with benefit from it and so what are the

00:17:51,279 --> 00:17:57,039
benefit you go through go you provision

00:17:54,429 --> 00:18:00,429
fast secured by design environment and

00:17:57,039 --> 00:18:03,399
one of the key principle of native is to

00:18:00,429 --> 00:18:06,399
make sure that you have parity between

00:18:03,399 --> 00:18:08,590
development and environment so do

00:18:06,399 --> 00:18:10,570
provision development environments that

00:18:08,590 --> 00:18:12,610
are the same as prediction so that you

00:18:10,570 --> 00:18:15,399
don't have these challenges of

00:18:12,610 --> 00:18:17,559
application that run and works in dev

00:18:15,399 --> 00:18:19,510
and do network information because we

00:18:17,559 --> 00:18:22,419
introduced secret this is extremely

00:18:19,510 --> 00:18:24,820
important in making sure that you

00:18:22,419 --> 00:18:27,279
increase the flow from developers to the

00:18:24,820 --> 00:18:30,090
environment give them environments that

00:18:27,279 --> 00:18:32,889
they know will work as well in friction

00:18:30,090 --> 00:18:35,710
then how do you reduce back cycle that

00:18:32,889 --> 00:18:38,080
helps you increase the constancy across

00:18:35,710 --> 00:18:41,950
the nodes to increase the visibility of

00:18:38,080 --> 00:18:44,409
your infrastructure human ability reduce

00:18:41,950 --> 00:18:46,269
the insider threats and so the

00:18:44,409 --> 00:18:49,000
declarative network also helps you

00:18:46,269 --> 00:18:52,559
enforce business logic as a network

00:18:49,000 --> 00:18:55,210
security policy instead of hard-coding

00:18:52,559 --> 00:18:57,700
firewalls ever really had didn't really

00:18:55,210 --> 00:19:02,320
have any relationship with business

00:18:57,700 --> 00:19:05,230
logic anymore so very good thing if we

00:19:02,320 --> 00:19:07,750
look at the security aspects we we like

00:19:05,230 --> 00:19:10,059
to look at differently kill chain it

00:19:07,750 --> 00:19:12,549
can't do anything about the attack but

00:19:10,059 --> 00:19:14,350
once your container is compromised the

00:19:12,549 --> 00:19:16,769
first thing you need to do is to reduce

00:19:14,350 --> 00:19:19,090
persistence dance with the urban

00:19:16,769 --> 00:19:21,700
operating system and privilege

00:19:19,090 --> 00:19:23,740
containers you need to reduce privilege

00:19:21,700 --> 00:19:25,480
escalations that's done by removing

00:19:23,740 --> 00:19:26,889
credentials and all those secrets from

00:19:25,480 --> 00:19:30,210
your code that's very important

00:19:26,889 --> 00:19:32,919
protection regularly it's done by

00:19:30,210 --> 00:19:33,660
reducing lateral movement and most

00:19:32,919 --> 00:19:35,880
content of

00:19:33,660 --> 00:19:39,900
from today we provide you service nation

00:19:35,880 --> 00:19:42,060
will provide you container to container

00:19:39,900 --> 00:19:44,640
networking in this diagram

00:19:42,060 --> 00:19:46,640
that's what envoi does making sure that

00:19:44,640 --> 00:19:49,230
all communications of filtered

00:19:46,640 --> 00:19:51,510
translated and that you declare a free

00:19:49,230 --> 00:19:53,820
communication that is allowed across my

00:19:51,510 --> 00:19:57,720
services so once you do that you really

00:19:53,820 --> 00:20:00,030
get a lot of benefits for there's three

00:19:57,720 --> 00:20:01,680
very important things that you benefit

00:20:00,030 --> 00:20:03,120
as well you have any teacher patch

00:20:01,680 --> 00:20:05,100
without downtime

00:20:03,120 --> 00:20:08,820
once your application is distributed we

00:20:05,100 --> 00:20:10,620
go a bit more into it later if you need

00:20:08,820 --> 00:20:11,490
to destroy rebuild because everything is

00:20:10,620 --> 00:20:13,620
based on code

00:20:11,490 --> 00:20:16,380
so from an incidence response

00:20:13,620 --> 00:20:18,240
perspective that's the benefit but also

00:20:16,380 --> 00:20:21,240
from making sure we don't have malware

00:20:18,240 --> 00:20:22,560
that's another benefit and removing

00:20:21,240 --> 00:20:26,490
their secrets from your code and

00:20:22,560 --> 00:20:29,760
rotating regularly also actually reduce

00:20:26,490 --> 00:20:34,080
the the sources of data breach

00:20:29,760 --> 00:20:36,990
I believe stolen secret is in the top

00:20:34,080 --> 00:20:39,810
three of the sources of breach today and

00:20:36,990 --> 00:20:43,020
so being able to do that is extremely

00:20:39,810 --> 00:20:46,410
important so we've talked about

00:20:43,020 --> 00:20:49,620
containers let's take a little step back

00:20:46,410 --> 00:20:53,400
and think about how native applications

00:20:49,620 --> 00:20:57,390
and cognitive practices hide secret so

00:20:53,400 --> 00:21:00,060
anyone who's familiar with with kinetic

00:20:57,390 --> 00:21:02,960
we know that we typically look at those

00:21:00,060 --> 00:21:04,950
applications around 12 factors

00:21:02,960 --> 00:21:07,710
principles if you're not finding your

00:21:04,950 --> 00:21:09,540
design just written it's very important

00:21:07,710 --> 00:21:12,420
if you want to summarize them very

00:21:09,540 --> 00:21:14,600
quickly that means really about focusing

00:21:12,420 --> 00:21:18,900
on application without possible

00:21:14,600 --> 00:21:20,730
stateless micro services driven sort of

00:21:18,900 --> 00:21:24,720
antenna base to be able to be portable

00:21:20,730 --> 00:21:26,700
and API driven there's a bit more to it

00:21:24,720 --> 00:21:29,220
but that's pretty easy color the gist of

00:21:26,700 --> 00:21:31,980
it and so if you look at those square

00:21:29,220 --> 00:21:34,230
factors and you try to extract what's

00:21:31,980 --> 00:21:36,480
the value for security I usually look at

00:21:34,230 --> 00:21:39,120
a framework that I call the idea of

00:21:36,480 --> 00:21:44,040
approach and it's really about the

00:21:39,120 --> 00:21:45,260
immutable no change once you push the

00:21:44,040 --> 00:21:48,500
prediction don't

00:21:45,260 --> 00:21:50,120
just rebuild distribute it every

00:21:48,500 --> 00:21:52,820
application should have several notes

00:21:50,120 --> 00:21:57,040
that you can have for Parenthood that

00:21:52,820 --> 00:22:01,760
also allows you to do action a funeral

00:21:57,040 --> 00:22:05,480
we used to in the past has those servers

00:22:01,760 --> 00:22:07,910
or those application that we want you

00:22:05,480 --> 00:22:10,040
have been burning for so long or so that

00:22:07,910 --> 00:22:11,600
errantly I've been running for so long

00:22:10,040 --> 00:22:13,490
because they're so technical that we

00:22:11,600 --> 00:22:16,400
complex is that we can turn them off

00:22:13,490 --> 00:22:19,730
without having long negotiation with a

00:22:16,400 --> 00:22:22,580
business right once you deploy and you

00:22:19,730 --> 00:22:24,710
design application form interview

00:22:22,580 --> 00:22:26,720
content if ever you want them to be able

00:22:24,710 --> 00:22:28,940
to describe at every point of time at

00:22:26,720 --> 00:22:31,010
least a note one of the instances

00:22:28,940 --> 00:22:32,750
without them back to your business

00:22:31,010 --> 00:22:35,570
that's what allows you to deploy

00:22:32,750 --> 00:22:38,560
application seamlessly to your business

00:22:35,570 --> 00:22:42,950
but also allows you to patch and to

00:22:38,560 --> 00:22:44,510
describe brittle and the other aspects

00:22:42,950 --> 00:22:47,600
and very important aspect is to make

00:22:44,510 --> 00:22:49,760
sure that a person is authenticated in

00:22:47,600 --> 00:22:51,890
most organizations today most of our

00:22:49,760 --> 00:22:54,110
application we expect to have users that

00:22:51,890 --> 00:22:56,300
we know I connect includes applications

00:22:54,110 --> 00:22:58,310
and so when does the network whether

00:22:56,300 --> 00:23:00,290
it's a network infrastructure your

00:22:58,310 --> 00:23:03,320
application everything should be getting

00:23:00,290 --> 00:23:07,670
most of the application and if you think

00:23:03,320 --> 00:23:12,650
about engine benefits we have is done a

00:23:07,670 --> 00:23:14,660
lot of progress in in definite in

00:23:12,650 --> 00:23:16,790
authentication system for with adaptive

00:23:14,660 --> 00:23:19,160
security so we have a pretty good idea

00:23:16,790 --> 00:23:21,320
today in application that our user is

00:23:19,160 --> 00:23:24,470
pretty our users step-up authentication

00:23:21,320 --> 00:23:26,870
factors really have making sure that

00:23:24,470 --> 00:23:29,720
this is the right tutor so if you make

00:23:26,870 --> 00:23:31,430
sure that your applications

00:23:29,720 --> 00:23:34,640
authenticated even if you have to know

00:23:31,430 --> 00:23:36,530
it is you reduce criticality of it by

00:23:34,640 --> 00:23:39,740
just making sure that we know who is

00:23:36,530 --> 00:23:43,310
involved of course there's always some

00:23:39,740 --> 00:23:44,660
man this is a really simplified

00:23:43,310 --> 00:23:46,610
fine but I'm really you're trying to get

00:23:44,660 --> 00:23:49,010
it only going 20 massively improve your

00:23:46,610 --> 00:23:50,600
security because cross-site scripting

00:23:49,010 --> 00:23:53,990
nineties of cross-site request forgery

00:23:50,600 --> 00:23:56,460
if you know who they are it's messed

00:23:53,990 --> 00:23:59,930
less likely that you have your

00:23:56,460 --> 00:24:02,310
not behind if it's your custom idea so

00:23:59,930 --> 00:24:03,990
really look at those four principal

00:24:02,310 --> 00:24:07,050
because it really changed the way we do

00:24:03,990 --> 00:24:08,730
security team into mobility really

00:24:07,050 --> 00:24:11,700
increase in consistency and allows you

00:24:08,730 --> 00:24:15,140
to have to do digital the distribution

00:24:11,700 --> 00:24:17,850
allows you photons and the other package

00:24:15,140 --> 00:24:20,310
evermore workloads allows you to ensure

00:24:17,850 --> 00:24:22,800
that the code in program exactly what's

00:24:20,310 --> 00:24:25,500
in your repository and I'd really have

00:24:22,800 --> 00:24:29,490
to get a little itchy that also allow a

00:24:25,500 --> 00:24:31,140
absolute in confidence set if tomorrow

00:24:29,490 --> 00:24:33,090
something happened you can read it at

00:24:31,140 --> 00:24:35,990
any time the authentication really

00:24:33,090 --> 00:24:40,770
improve Tracy Beatty but also improve

00:24:35,990 --> 00:24:44,730
reduce your your risk by enforcing zero

00:24:40,770 --> 00:24:48,270
trust and it really max down this was

00:24:44,730 --> 00:24:50,700
principal to two key aspects of data

00:24:48,270 --> 00:24:52,710
breach today so in credentials back

00:24:50,700 --> 00:24:56,010
doors and unpacked analogies if you're

00:24:52,710 --> 00:24:57,450
the bounty if you are immutable and you

00:24:56,010 --> 00:24:59,610
know that no one can deploy a new thing

00:24:57,450 --> 00:25:02,820
and it can destroy it make sure you push

00:24:59,610 --> 00:25:05,580
clean code and clean application at any

00:25:02,820 --> 00:25:07,230
point of family factors of the if you're

00:25:05,580 --> 00:25:09,570
able to rotate your credentials your

00:25:07,230 --> 00:25:12,710
most stolen credentials of them about

00:25:09,570 --> 00:25:15,750
really we see these benefits everywhere

00:25:12,710 --> 00:25:19,560
so we look at the new cyber hygiene

00:25:15,750 --> 00:25:22,620
today around two three hours and it's

00:25:19,560 --> 00:25:24,450
simple way of remembering by improving

00:25:22,620 --> 00:25:27,060
the ability to repair to find your

00:25:24,450 --> 00:25:29,070
vanity some fixed and faster by having

00:25:27,060 --> 00:25:31,890
distributed system immutable systems

00:25:29,070 --> 00:25:37,080
that can be but I happy zero downtime

00:25:31,890 --> 00:25:39,600
you really put security by having good

00:25:37,080 --> 00:25:41,700
driven applications of distributive you

00:25:39,600 --> 00:25:46,200
can repave which means we're building

00:25:41,700 --> 00:25:48,000
regularly to make sure that what runs

00:25:46,200 --> 00:25:49,410
encouragement is what you want and not

00:25:48,000 --> 00:25:51,780
something has been compromised

00:25:49,410 --> 00:25:55,860
if you rotate your credentials again all

00:25:51,780 --> 00:25:57,750
those bridges that we see that we see

00:25:55,860 --> 00:26:00,420
where people found credential big

00:25:57,750 --> 00:26:03,090
reserves of in your API is the enjoying

00:26:00,420 --> 00:26:05,790
traffic trip even if they leak out is to

00:26:03,090 --> 00:26:08,310
retain regularly to reduce risk of this

00:26:05,790 --> 00:26:09,600
configuration as well so you cannot be

00:26:08,310 --> 00:26:11,040
combined

00:26:09,600 --> 00:26:13,980
to combine these we really see the

00:26:11,040 --> 00:26:16,440
benefits these are important principle

00:26:13,980 --> 00:26:19,770
but we only believe in them because we

00:26:16,440 --> 00:26:22,650
see them working and so even though

00:26:19,770 --> 00:26:24,180
cognitive is not designed party before

00:26:22,650 --> 00:26:26,970
security it's designed for developer

00:26:24,180 --> 00:26:28,890
productivity for developing better apps

00:26:26,970 --> 00:26:31,650
and releasing faster and we see

00:26:28,890 --> 00:26:34,260
improvement in those factors the same

00:26:31,650 --> 00:26:38,370
fabric that enables developers to deploy

00:26:34,260 --> 00:26:41,400
application faster enables those

00:26:38,370 --> 00:26:44,100
platform to scale to reduce the overhead

00:26:41,400 --> 00:26:47,160
in W infrastructure actually allows our

00:26:44,100 --> 00:26:48,930
customers to batch actually allow us to

00:26:47,160 --> 00:26:51,390
make sure that once they build a

00:26:48,930 --> 00:26:53,250
platform that these compliance every

00:26:51,390 --> 00:26:55,410
application they push into it is

00:26:53,250 --> 00:26:57,360
deployed constantly and it's compiled

00:26:55,410 --> 00:26:59,340
that really reduce you overhead and

00:26:57,360 --> 00:27:01,200
allows you security security

00:26:59,340 --> 00:27:03,720
professionals actually focus on what

00:27:01,200 --> 00:27:05,670
matters on findings of innovations on

00:27:03,720 --> 00:27:07,380
improving their work with application

00:27:05,670 --> 00:27:11,220
security confined to the monkey sent you

00:27:07,380 --> 00:27:15,330
to act in terms of advanced monitoring

00:27:11,220 --> 00:27:17,400
cases and response to waste what we also

00:27:15,330 --> 00:27:19,590
see is large organization were

00:27:17,400 --> 00:27:22,380
destroying and rebuilding regularly

00:27:19,590 --> 00:27:24,150
their infrastructure for business

00:27:22,380 --> 00:27:33,810
continuity on one hand but also to make

00:27:24,150 --> 00:27:36,390
sure that the windows time that the yeah

00:27:33,810 --> 00:27:38,490
has to find another of energy and move

00:27:36,390 --> 00:27:41,370
out to the platform move to the

00:27:38,490 --> 00:27:44,910
objective is produced some of our

00:27:41,370 --> 00:27:46,470
customers are doing this weekly without

00:27:44,910 --> 00:27:48,600
downtime to the business and moving to

00:27:46,470 --> 00:27:50,760
work being able to do that daily as well

00:27:48,600 --> 00:27:53,370
publicly because this is so much

00:27:50,760 --> 00:27:55,350
benefits into it once the first thing is

00:27:53,370 --> 00:27:57,240
code and once you've practiced it it's

00:27:55,350 --> 00:27:59,820
very important I mean the benefits

00:27:57,240 --> 00:28:01,530
absolutely massive in creating the

00:27:59,820 --> 00:28:03,600
compact that form where everyone is

00:28:01,530 --> 00:28:08,130
confident that even if something happens

00:28:03,600 --> 00:28:11,330
we can recover and really at the bottom

00:28:08,130 --> 00:28:14,300
of security even if we look at all those

00:28:11,330 --> 00:28:17,720
advanced threats

00:28:14,300 --> 00:28:21,380
of attack from nation states the core is

00:28:17,720 --> 00:28:23,570
mostly most of the case missing patches

00:28:21,380 --> 00:28:25,970
so you really did you back faster and

00:28:23,570 --> 00:28:30,740
easy tremendous with the improvement of

00:28:25,970 --> 00:28:33,110
our 9x between the existing environment

00:28:30,740 --> 00:28:34,520
where it with security struggles to get

00:28:33,110 --> 00:28:36,350
back to where you need to negotiate

00:28:34,520 --> 00:28:37,670
action windows with a business to

00:28:36,350 --> 00:28:39,860
predominate petition what you have

00:28:37,670 --> 00:28:42,530
critical patches that's pretty critical

00:28:39,860 --> 00:28:45,410
because this year we see we have the

00:28:42,530 --> 00:28:45,950
keys that are exploited immediately by

00:28:45,410 --> 00:28:48,470
attackers

00:28:45,950 --> 00:28:50,270
within days even within Thursday so if

00:28:48,470 --> 00:28:52,550
you have teeth disclosed so you are

00:28:50,270 --> 00:28:54,350
baking by very fast when it matters is

00:28:52,550 --> 00:28:58,480
extremely important in improving the

00:28:54,350 --> 00:29:00,590
sector and what we really see is

00:28:58,480 --> 00:29:03,530
improvement in those security outcomes

00:29:00,590 --> 00:29:06,710
LBGT patch our ability to recover to

00:29:03,530 --> 00:29:10,160
rebuild regularly your your desk

00:29:06,710 --> 00:29:12,080
coverage these developer practice that

00:29:10,160 --> 00:29:15,260
actually produced as well as a number of

00:29:12,080 --> 00:29:18,950
third copy produce the ability to reduce

00:29:15,260 --> 00:29:20,540
and reticular learning all your secrets

00:29:18,950 --> 00:29:22,670
in your platform really reduce your risk

00:29:20,540 --> 00:29:27,050
that if one days is one of those secrets

00:29:22,670 --> 00:29:31,340
of speaking you have it could be useful

00:29:27,050 --> 00:29:34,700
app so this is it if I want to review

00:29:31,340 --> 00:29:37,910
summarize on zips I have three calls for

00:29:34,700 --> 00:29:39,530
you think about this idea principle

00:29:37,910 --> 00:29:42,790
whenever you develop another an

00:29:39,530 --> 00:29:45,680
application really is my platform

00:29:42,790 --> 00:29:47,300
immutable do not have people connect

00:29:45,680 --> 00:29:48,920
into prediction is distributed can i

00:29:47,300 --> 00:29:51,860
patch it pretty loudly do it destroy it

00:29:48,920 --> 00:29:54,170
regularly a very important principle for

00:29:51,860 --> 00:29:56,990
your application and particularly for

00:29:54,170 --> 00:29:59,720
your parameter if all your payment have

00:29:56,990 --> 00:30:02,810
ever seen facing users of Internet are

00:29:59,720 --> 00:30:04,280
destroy and rebuild regularly you've

00:30:02,810 --> 00:30:07,310
massively improve the security

00:30:04,280 --> 00:30:09,050
organization even improve the security

00:30:07,310 --> 00:30:12,710
of the patent system legacy that

00:30:09,050 --> 00:30:14,720
consistency hat receive your controls

00:30:12,710 --> 00:30:17,690
once you have a ephemeral workloads a

00:30:14,720 --> 00:30:20,270
lot of things in security changes

00:30:17,690 --> 00:30:23,450
Incident Response is changing massively

00:30:20,270 --> 00:30:24,780
so when you do your audits and your map

00:30:23,450 --> 00:30:26,910
and malware prevention

00:30:24,780 --> 00:30:29,190
is very different as well so resync all

00:30:26,910 --> 00:30:31,290
your controls are making sure that you

00:30:29,190 --> 00:30:34,890
liberate the fact that you can destroy a

00:30:31,290 --> 00:30:37,080
green light and also very importantly

00:30:34,890 --> 00:30:38,700
optimize your question your pastor

00:30:37,080 --> 00:30:41,160
prediction well it's amazing I'm trying

00:30:38,700 --> 00:30:44,280
to make sure that not only of developers

00:30:41,160 --> 00:30:47,760
can push code very fast and it's

00:30:44,280 --> 00:30:51,660
extremely important but security can

00:30:47,760 --> 00:30:54,860
also change fast and what we see is by

00:30:51,660 --> 00:30:58,340
adopting native architecture we see both

00:30:54,860 --> 00:31:00,990
wing developers being able to develop he

00:30:58,340 --> 00:31:04,710
faster security being able to react

00:31:00,990 --> 00:31:07,350
faster and this is what friction less

00:31:04,710 --> 00:31:09,480
security is about removing the other

00:31:07,350 --> 00:31:11,700
heads so that everyone can focus on what

00:31:09,480 --> 00:31:17,070
matters and finding those admins cases

00:31:11,700 --> 00:31:21,210
and working working together so that's

00:31:17,070 --> 00:31:23,520
it again I wish I was with you and we

00:31:21,210 --> 00:31:26,850
could have a more interactive discussion

00:31:23,520 --> 00:31:29,880
together but reach out to me please I'd

00:31:26,850 --> 00:31:32,430
be happy to to deep dive assist with you

00:31:29,880 --> 00:31:34,470
to explore I hope we can help you how

00:31:32,430 --> 00:31:37,530
cognitive can help you improving your

00:31:34,470 --> 00:31:39,570
security and how everything Software

00:31:37,530 --> 00:31:43,670
Defined connect to improving security

00:31:39,570 --> 00:31:47,580
and changing the way you look at it and

00:31:43,670 --> 00:31:49,020
do it please it was a pleasure sharing

00:31:47,580 --> 00:31:50,190
with you and I hope that you'll reach

00:31:49,020 --> 00:31:52,710
out to me and we can have this

00:31:50,190 --> 00:31:57,710
interactive discussion that we don't

00:31:52,710 --> 00:31:57,710

YouTube URL: https://www.youtube.com/watch?v=XhaVisTZG4c


