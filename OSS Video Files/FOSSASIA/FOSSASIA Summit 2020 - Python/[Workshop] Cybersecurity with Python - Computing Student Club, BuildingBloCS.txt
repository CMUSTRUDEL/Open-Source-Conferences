Title: [Workshop] Cybersecurity with Python - Computing Student Club, BuildingBloCS
Publication date: 2020-04-13
Playlist: FOSSASIA Summit 2020 - Python
Description: 
	FOSSASIA Summit 2020 - Python

Speaker: Computing Student Club, BuildingBloCS

BuildingBloCS is a coalition of high school Computing students
Captions: 
	00:00:00,000 --> 00:00:05,279
so hi guys welcome to the course on

00:00:02,159 --> 00:00:07,799
Python cybersecurity I'm Hani and with

00:00:05,279 --> 00:00:13,620
me is Boyan and we are from Dublin high

00:00:07,799 --> 00:00:15,740
school yes so yeah so moving onto the

00:00:13,620 --> 00:00:18,420
next slide

00:00:15,740 --> 00:00:20,789
yeah so this will be the link that you

00:00:18,420 --> 00:00:30,439
guys can use to have access to all codes

00:00:20,789 --> 00:00:32,969
that we'll be using in the course so

00:00:30,439 --> 00:00:36,239
what are the possible cyber attacks

00:00:32,969 --> 00:00:39,290
right so one of which will be my way and

00:00:36,239 --> 00:00:42,329
then my way is a shorthand for malicious

00:00:39,290 --> 00:00:44,250
software which typically consists of

00:00:42,329 --> 00:00:46,350
code developed by cyber attackers

00:00:44,250 --> 00:00:48,930
designed to cause extensive damage to

00:00:46,350 --> 00:00:52,010
data and systems to gain unauthorized

00:00:48,930 --> 00:00:54,480
access to a network yeah so actually

00:00:52,010 --> 00:00:57,199
various cyberattacks possible and this

00:00:54,480 --> 00:01:04,350
was only one of them the others would be

00:00:57,199 --> 00:01:06,990
SQL injection and fishing yes so so

00:01:04,350 --> 00:01:10,979
which which leads us to the main topic

00:01:06,990 --> 00:01:13,530
of cyber security why cyber security in

00:01:10,979 --> 00:01:15,930
why cyber security so cyber security is

00:01:13,530 --> 00:01:17,880
the protection of network devices and

00:01:15,930 --> 00:01:19,799
they tell from unauthorized access or

00:01:17,880 --> 00:01:22,049
criminal use and the practice of

00:01:19,799 --> 00:01:26,909
ensuring confidentiality integrity and

00:01:22,049 --> 00:01:29,329
availability of information so why must

00:01:26,909 --> 00:01:32,490
we protect ourselves from cyber security

00:01:29,329 --> 00:01:35,310
all our data currently has taught online

00:01:32,490 --> 00:01:37,710
because of the prevalent users of the

00:01:35,310 --> 00:01:39,090
Internet and every stall basically

00:01:37,710 --> 00:01:42,960
everything online because of convenience

00:01:39,090 --> 00:01:45,149
right so that's why it's important to

00:01:42,960 --> 00:01:48,780
ensure that we are safe on the cyber

00:01:45,149 --> 00:01:52,500
space so how do we protect ourselves

00:01:48,780 --> 00:01:53,820
from cyber attacks in so ethical hacking

00:01:52,500 --> 00:01:56,159
is one of the ways where we can protect

00:01:53,820 --> 00:01:58,740
ourselves basically is hacking performed

00:01:56,159 --> 00:02:00,540
by a company or individuals to get to

00:01:58,740 --> 00:02:06,240
help identify potential threats on

00:02:00,540 --> 00:02:08,399
computer or network yeah so the move on

00:02:06,240 --> 00:02:10,619
moving on to the min-ji's of our course

00:02:08,399 --> 00:02:12,180
today we'll be teaching you guys four

00:02:10,619 --> 00:02:13,230
different methods of how we can protect

00:02:12,180 --> 00:02:15,959
ourselves on

00:02:13,230 --> 00:02:19,019
so yeah how about ourselves on the way

00:02:15,959 --> 00:02:22,230
so namely their port scanner encryption

00:02:19,019 --> 00:02:24,720
input data validation and key logger so

00:02:22,230 --> 00:02:30,090
now I will pass the time on to Boyan to

00:02:24,720 --> 00:02:34,920
explain more so we'll be starting off

00:02:30,090 --> 00:02:36,420
with port scanners so post can in Python

00:02:34,920 --> 00:02:38,700
is essentially just sending client

00:02:36,420 --> 00:02:40,530
requests to line each different part of

00:02:38,700 --> 00:02:42,720
a specified IP address to check if that

00:02:40,530 --> 00:02:45,810
it is open so it's just like how a

00:02:42,720 --> 00:02:48,209
burglar before going to like burglar

00:02:45,810 --> 00:02:50,340
house you actually go to the house and I

00:02:48,209 --> 00:02:53,069
check if the door the windows were open

00:02:50,340 --> 00:02:54,870
so that he can I get in more easily so

00:02:53,069 --> 00:02:57,209
in this case in Python will be using

00:02:54,870 --> 00:03:00,030
sockets to send the client requests to

00:02:57,209 --> 00:03:06,840
each of the pot in the IP address so

00:03:00,030 --> 00:03:11,660
let's start with a demonstration okay so

00:03:06,840 --> 00:03:11,660
I will use idle for this

00:03:14,360 --> 00:03:23,329
okay so first yeah we will

00:03:19,940 --> 00:03:26,329
from will import everything from soccer

00:03:23,329 --> 00:03:26,329
module

00:04:52,980 --> 00:05:02,410
so first we'll import everything from

00:04:56,020 --> 00:05:04,300
the soccer module and next we'll import

00:05:02,410 --> 00:05:07,060
time so that we can know how long our

00:05:04,300 --> 00:05:09,460
program can run so we will start first

00:05:07,060 --> 00:05:13,210
with defining a start time which is the

00:05:09,460 --> 00:05:19,270
current time of which when the time the

00:05:13,210 --> 00:05:21,970
program starts then we'll start a run

00:05:19,270 --> 00:05:31,840
condition of the normal if name is equal

00:05:21,970 --> 00:05:35,940
to mean yes so first we'll ask the user

00:05:31,840 --> 00:05:35,940
for a toggle input IP address

00:05:52,179 --> 00:05:58,819
yeah then next we will be config we will

00:05:55,849 --> 00:06:02,569
be changing the target given by the host

00:05:58,819 --> 00:06:16,490
to ipv4 address through the host by name

00:06:02,569 --> 00:06:18,919
function yeah and then next will be just

00:06:16,490 --> 00:06:22,179
printing or lying to tell the user that

00:06:18,919 --> 00:06:22,179
the scan is starting

00:06:39,430 --> 00:06:47,860
okay so next we'll be starting a follow

00:06:42,310 --> 00:06:49,600
of 50 to 60 the slides show 50 to 500

00:06:47,860 --> 00:06:52,450
but because in this case we have for a

00:06:49,600 --> 00:07:00,700
limited time and 50 to 500 would be too

00:06:52,450 --> 00:07:04,900
long we will just do 50 to 60 so first

00:07:00,700 --> 00:07:16,900
initialize a socket with EFI net and

00:07:04,900 --> 00:07:19,630
sock stream you know then we'll use the

00:07:16,900 --> 00:07:21,790
socket to connect to the IP address and

00:07:19,630 --> 00:07:24,300
the current pot which is specified in

00:07:21,790 --> 00:07:24,300
the for loop

00:07:34,690 --> 00:07:39,640
you know then next we'll check if the

00:07:37,260 --> 00:07:40,150
connection is if it's equal to zero that

00:07:39,640 --> 00:07:42,820
means

00:07:40,150 --> 00:07:45,160
the connection has went through and past

00:07:42,820 --> 00:07:48,220
the port is actually open so we can

00:07:45,160 --> 00:07:50,730
print that the part number this part is

00:07:48,220 --> 00:07:50,730
open

00:08:07,840 --> 00:08:14,139
then else that means the pot is not open

00:08:10,690 --> 00:08:16,660
because we have gotten a message so we

00:08:14,139 --> 00:08:19,020
can tell the user that this pot is

00:08:16,660 --> 00:08:19,020
closed

00:08:35,089 --> 00:08:40,399
so Knicks will close the socket so that

00:08:37,009 --> 00:08:43,699
in the next follow we can connect to the

00:08:40,399 --> 00:08:45,829
same IP address but in another part then

00:08:43,699 --> 00:08:47,749
lastly we will print out the time taken

00:08:45,829 --> 00:08:50,149
for this whole program to run which is

00:08:47,749 --> 00:08:54,819
essentially the time at the end of the

00:08:50,149 --> 00:08:54,819
program - of the start time

00:09:12,020 --> 00:09:24,040
okay then we will run this program yeah

00:09:20,570 --> 00:09:24,040
and then the host to be scan

00:09:47,529 --> 00:09:54,200
yeah so we will be scanning a test

00:09:50,660 --> 00:09:56,600
server by n map which is the scan me mm

00:09:54,200 --> 00:09:58,700
to RG with the IP address of four five

00:09:56,600 --> 00:10:01,300
point three three point three two point

00:09:58,700 --> 00:10:01,300
one five six

00:10:18,830 --> 00:10:22,900
so he's starting the scan on a horse

00:10:27,610 --> 00:10:33,430
this can take awhile as sockets are very

00:10:30,560 --> 00:10:33,430
very slow

00:11:01,580 --> 00:11:07,280
so currently as you can see is being not

00:11:03,800 --> 00:11:10,870
quite of well and uni has only like

00:11:07,280 --> 00:11:10,870
sense that two parts are closed

00:11:27,160 --> 00:11:33,220
okay so we will let it run in the

00:11:29,930 --> 00:11:37,970
background and then we will move to the

00:11:33,220 --> 00:11:43,430
next spot which would be encryption in

00:11:37,970 --> 00:11:45,680
Python so encryption in Python for

00:11:43,430 --> 00:11:48,230
encryption Python will be using the hash

00:11:45,680 --> 00:11:53,000
lip module and will be teaching you how

00:11:48,230 --> 00:12:03,380
to encrypt your text string with very

00:11:53,000 --> 00:12:05,570
widely used algorithm called sha-256 so

00:12:03,380 --> 00:12:10,300
we'll start with our demonstration

00:12:05,570 --> 00:12:13,300
so first we'll create a new file on the

00:12:10,300 --> 00:12:13,300
idle

00:12:25,740 --> 00:12:39,210
sophist will import Ashley then next

00:12:34,750 --> 00:12:39,210
we'll ask the user for input

00:12:57,459 --> 00:13:04,449
then we'll be defining a result as the

00:13:00,879 --> 00:13:10,499
encryption of the sha-256 in the hash

00:13:04,449 --> 00:13:14,079
light module so we'll initialize it with

00:13:10,499 --> 00:13:17,860
text dot encode which encodes the string

00:13:14,079 --> 00:13:20,699
which is text and then we'll print out

00:13:17,860 --> 00:13:22,959
the result dot hex digest which is the

00:13:20,699 --> 00:13:25,449
encrypted string with the shuttle five

00:13:22,959 --> 00:13:37,149
things because printing result will only

00:13:25,449 --> 00:13:50,680
return or sha-256 object yes so we will

00:13:37,149 --> 00:13:58,029
save it and run it so

00:13:50,680 --> 00:14:02,260
try hello well as you can see this is

00:13:58,029 --> 00:14:04,779
like the encrypted string truly sha-256

00:14:02,260 --> 00:14:07,570
algorithm and you can see the previous

00:14:04,779 --> 00:14:09,459
program so the program stopped

00:14:07,570 --> 00:14:14,830
prematurely because we started running

00:14:09,459 --> 00:14:18,880
the encryption but yes scandal from 52 /

00:14:14,830 --> 00:14:22,570
58 of the test server for unmet or these

00:14:18,880 --> 00:14:23,860
eight parts are closed yeah so now that

00:14:22,570 --> 00:14:26,470
we are done with port scanning and

00:14:23,860 --> 00:14:31,480
encryption we will be moving on to the

00:14:26,470 --> 00:14:43,060
next part which would be our input data

00:14:31,480 --> 00:14:45,250
validation so I'm sure of you I have

00:14:43,060 --> 00:14:47,380
written programs before and then you

00:14:45,250 --> 00:14:50,470
have been asking users for their input

00:14:47,380 --> 00:14:53,170
and sometimes users may decide to input

00:14:50,470 --> 00:14:57,640
data that is not what you want and this

00:14:53,170 --> 00:14:59,920
may cause the may cause errors in your

00:14:57,640 --> 00:15:01,900
program and result in your program

00:14:59,920 --> 00:15:04,570
stopping so in this case we'll be using

00:15:01,900 --> 00:15:07,120
the try and except in Python where the

00:15:04,570 --> 00:15:09,310
try block lets us test a block of code

00:15:07,120 --> 00:15:12,790
for errors and the SM block lets us

00:15:09,310 --> 00:15:34,150
handle the error so we'll be

00:15:12,790 --> 00:15:36,490
demonstrating how to use it so first

00:15:34,150 --> 00:15:38,860
we'll start with a while true so that we

00:15:36,490 --> 00:15:40,810
can continuously asked for the as the

00:15:38,860 --> 00:15:43,480
user for input if it does not accept it

00:15:40,810 --> 00:15:47,620
and then we also have a try and we will

00:15:43,480 --> 00:15:50,880
attempt to make the input of the user of

00:15:47,620 --> 00:15:50,880
their age into an integer

00:15:58,290 --> 00:16:03,520
next we will do an Excel value error

00:16:01,450 --> 00:16:06,730
because there is the error that occurs

00:16:03,520 --> 00:16:09,940
when something that is not a number is

00:16:06,730 --> 00:16:24,160
put into int then we'll print an error

00:16:09,940 --> 00:16:27,370
message and after that we would tell the

00:16:24,160 --> 00:16:29,050
program to continue running after there

00:16:27,370 --> 00:16:31,450
is a value error so for the next

00:16:29,050 --> 00:16:34,120
condition we'll be using an if-else to

00:16:31,450 --> 00:16:37,000
check if the age is a negative number so

00:16:34,120 --> 00:16:39,450
if each is less or equal to zero we also

00:16:37,000 --> 00:16:39,450
print out

00:16:42,290 --> 00:16:45,440
[Music]

00:16:56,760 --> 00:17:02,160
then after this will continue we will

00:16:59,100 --> 00:17:03,840
tell the premier continue then else this

00:17:02,160 --> 00:17:06,089
means that he has passed both conditions

00:17:03,840 --> 00:17:09,150
and we would we are ready to exit the

00:17:06,089 --> 00:17:11,910
loop and put in a break so now that we

00:17:09,150 --> 00:17:15,180
have exited the while loop we will do

00:17:11,910 --> 00:17:17,940
our last check condition so if H is more

00:17:15,180 --> 00:17:20,250
equal to 21 we can then we can tell the

00:17:17,940 --> 00:17:22,790
user that they are eligible to vote in

00:17:20,250 --> 00:17:22,790
Singapore

00:17:33,210 --> 00:17:36,650
we will tell the user that the unknown

00:17:46,010 --> 00:17:58,030
okay we will

00:17:47,520 --> 00:18:02,290
attempt to run this so

00:17:58,030 --> 00:18:04,120
to M input with a character a so as you

00:18:02,290 --> 00:18:05,860
can see it says that sorry I didn't

00:18:04,120 --> 00:18:07,870
understand that which means that is the

00:18:05,860 --> 00:18:10,480
first condition the Tran SF condition

00:18:07,870 --> 00:18:13,320
and enough of you and input the error

00:18:10,480 --> 00:18:16,090
message we could also try over :

00:18:13,320 --> 00:18:18,880
you output the same thing as the program

00:18:16,090 --> 00:18:20,980
is unable to make this string into an

00:18:18,880 --> 00:18:25,930
integer so we can try now if a negative

00:18:20,980 --> 00:18:27,880
number of negative 1 so this hits the

00:18:25,930 --> 00:18:31,090
sec it is does not fulfill the second

00:18:27,880 --> 00:18:33,970
condition in the if-else task it will

00:18:31,090 --> 00:18:37,960
still return another at the second error

00:18:33,970 --> 00:18:39,430
message so now we can try 10 years or

00:18:37,960 --> 00:18:42,190
which means that this will not fulfill

00:18:39,430 --> 00:18:50,230
the last error message now we will run

00:18:42,190 --> 00:18:55,420
the program again - we will run the

00:18:50,230 --> 00:18:57,250
program again - with trying age 21 to

00:18:55,420 --> 00:19:04,870
show that they are eligible to vote with

00:18:57,250 --> 00:19:07,090
this input ok so we will be we are done

00:19:04,870 --> 00:19:10,030
with this path and we will be moving on

00:19:07,090 --> 00:19:19,620
to the last part of our workshop which

00:19:10,030 --> 00:19:23,070
is the keylogger so

00:19:19,620 --> 00:19:28,010
first we need of you who are going to

00:19:23,070 --> 00:19:28,010
attend this to pick install PI put

00:19:36,590 --> 00:19:56,029
peeping saw PI input yes so has everyone

00:19:48,570 --> 00:19:56,029
succeeded in pip installing okay sure

00:20:03,380 --> 00:20:09,350
okay we shall walk around and see if

00:20:06,090 --> 00:20:09,350
anyone needs help

00:20:11,120 --> 00:20:27,620
does anyone need help

00:20:13,110 --> 00:20:27,620
oh no it's pair only is PI and P UT

00:20:36,800 --> 00:20:51,220
beauty input input without the high

00:20:42,890 --> 00:20:57,620
input but without I you see okay okay so

00:20:51,220 --> 00:21:00,830
amber are you fine okay we shall now

00:20:57,620 --> 00:21:03,620
proceed on so keyloggers can be used to

00:21:00,830 --> 00:21:05,330
allow you can use it to run it in the

00:21:03,620 --> 00:21:08,510
background and see if anyone decides to

00:21:05,330 --> 00:21:10,820
use your laptop or devices without you

00:21:08,510 --> 00:21:12,740
knowing and you also be able to see what

00:21:10,820 --> 00:21:16,460
they have been attempting to look for on

00:21:12,740 --> 00:21:22,840
your devices without you knowing so now

00:21:16,460 --> 00:21:28,160
we open a new file and start so firstly

00:21:22,840 --> 00:21:31,330
we were from pi PI put dokkaebi import

00:21:28,160 --> 00:21:31,330
the key and listener

00:21:41,020 --> 00:21:49,809
next we'll import the login so that we

00:21:44,679 --> 00:21:51,850
can actually write to a file then we'll

00:21:49,809 --> 00:21:55,030
set the dock directory so in this case

00:21:51,850 --> 00:22:01,270
the log directory would be the directory

00:21:55,030 --> 00:22:03,340
that this file is currently in so we'll

00:22:01,270 --> 00:22:05,559
be using the directory desk that our

00:22:03,340 --> 00:22:10,080
Python file in currently is in as you

00:22:05,559 --> 00:22:10,080
can see is on the top of the save file

00:22:15,960 --> 00:22:21,190
so you all should not be copying ours

00:22:19,270 --> 00:22:22,840
you all should be saving it where you

00:22:21,190 --> 00:22:24,520
want to save it please key in the

00:22:22,840 --> 00:22:29,070
correct directory in a place where you

00:22:24,520 --> 00:22:29,070
can actually find the final output file

00:22:35,700 --> 00:22:40,929
yes so for now this is our directory is

00:22:38,920 --> 00:22:48,370
everyone done with King in your own

00:22:40,929 --> 00:22:50,650
directories ok then we'll move on with

00:22:48,370 --> 00:22:52,720
setting the configurations for our

00:22:50,650 --> 00:22:56,800
logging so first we'll be logging the

00:22:52,720 --> 00:22:59,170
basic comfy we will be setting the phone

00:22:56,800 --> 00:23:01,960
aim to be equals to our log directory

00:22:59,170 --> 00:23:05,230
and then we will name our output text

00:23:01,960 --> 00:23:07,510
file to be here long txt so the log

00:23:05,230 --> 00:23:11,320
directory will be where this text file

00:23:07,510 --> 00:23:13,780
will be saved in then next we'll be

00:23:11,320 --> 00:23:16,870
setting the logging level the level to

00:23:13,780 --> 00:23:20,350
be to log in debug so that we can

00:23:16,870 --> 00:23:25,110
actually read then lastly reform it

00:23:20,350 --> 00:23:25,110
would be of s time and message

00:23:36,700 --> 00:23:41,320
if any of you cannot follow us your can

00:23:38,860 --> 00:23:43,230
go online to the Google Drive and you

00:23:41,320 --> 00:23:45,580
all can refer to the code there

00:23:43,230 --> 00:23:49,540
so next we'll be defining a function

00:23:45,580 --> 00:23:53,020
call on press with the input of key

00:23:49,540 --> 00:23:56,140
which would be which would be detected

00:23:53,020 --> 00:23:57,540
when you press on the key on your

00:23:56,140 --> 00:24:01,780
keyboard

00:23:57,540 --> 00:24:04,840
so we'll do a login info shrinky which

00:24:01,780 --> 00:24:08,560
will actually let logging record the

00:24:04,840 --> 00:24:09,370
stroke of your key then lastly we'll do

00:24:08,560 --> 00:24:12,090
the run

00:24:09,370 --> 00:24:14,620
we'll make it run true with listener and

00:24:12,090 --> 00:24:17,020
set the condition of the function being

00:24:14,620 --> 00:24:27,040
true to itself on practical so on press

00:24:17,020 --> 00:24:30,880
and name this as listener and then we'll

00:24:27,040 --> 00:24:32,650
make it join or the output from the

00:24:30,880 --> 00:24:46,030
keyboard together to write it to the

00:24:32,650 --> 00:24:48,310
text file okay we shall run this now so

00:24:46,030 --> 00:24:51,390
it's currently running then we will

00:24:48,310 --> 00:24:53,710
shall just open up a note pad Wow and

00:24:51,390 --> 00:25:00,850
then we shall just type random

00:24:53,710 --> 00:25:02,680
characters in there like Hello whoa okay

00:25:00,850 --> 00:25:07,030
so now that we have this then we shall

00:25:02,680 --> 00:25:09,610
go into the cowl and we shall go into

00:25:07,030 --> 00:25:11,830
the foul directory where our program is

00:25:09,610 --> 00:25:14,500
taught here as you can see there's a

00:25:11,830 --> 00:25:17,710
keylock dot txt inside there and when we

00:25:14,500 --> 00:25:21,760
open it we can see that here this is

00:25:17,710 --> 00:25:25,270
what we have type after the program has

00:25:21,760 --> 00:25:27,940
started running so as you can see we are

00:25:25,270 --> 00:25:30,760
search for notepad well type in the

00:25:27,940 --> 00:25:32,590
hello so this can continue to run in the

00:25:30,760 --> 00:25:37,960
background and record all keystrokes

00:25:32,590 --> 00:25:47,429
that you have time so

00:25:37,960 --> 00:25:47,429
yeah so does anyone need help okay sure

00:25:52,619 --> 00:26:06,519
your can refer to the drive but we can

00:25:56,590 --> 00:26:11,039
always it's in these slides yeah

00:26:06,519 --> 00:26:20,409
so we shall show you these slides the

00:26:11,039 --> 00:26:22,629
slides is at this sling yes yes so this

00:26:20,409 --> 00:26:24,970
is where the slice is at your can access

00:26:22,629 --> 00:26:33,929
this drive to assess our workshop video

00:26:24,970 --> 00:26:33,929
our slides and order program code sure

00:26:35,940 --> 00:26:40,139
do you only any assistance

00:27:00,039 --> 00:27:05,889
the O is the big one zero is a small one

00:27:30,460 --> 00:27:45,919
the only any assist in diving in the

00:27:33,769 --> 00:27:48,820
link okay so the foil the benefit we

00:27:45,919 --> 00:27:53,259
shall copy it and go to tiny URL and

00:27:48,820 --> 00:27:53,259
make your life's much easier

00:28:00,970 --> 00:28:10,119
okay so the tiny URL is tan yo calm /qp

00:28:05,779 --> 00:28:10,119
4 4 s 3 4

00:28:25,379 --> 00:28:36,459
so has everyone managed to assess these

00:28:28,239 --> 00:28:38,820
slides okay so do you need the code for

00:28:36,459 --> 00:28:48,579
the keylogger or are you all able to

00:28:38,820 --> 00:29:00,190
view it for ourselves okay go to the

00:28:48,579 --> 00:29:07,029
code so this is the code for the key

00:29:00,190 --> 00:29:09,579
Locker so since this is the last part of

00:29:07,029 --> 00:29:13,089
our workshop you all can actually try

00:29:09,579 --> 00:29:14,919
out different ideas in different ideas

00:29:13,089 --> 00:29:16,419
and also the different parts of our

00:29:14,919 --> 00:29:18,759
workshop in different contexts like

00:29:16,419 --> 00:29:20,709
maybe the input data validation not in

00:29:18,759 --> 00:29:22,959
the each context but maybe in some other

00:29:20,709 --> 00:29:28,779
context by asking them to input your

00:29:22,959 --> 00:29:33,779
email yeah so does anyone need help in

00:29:28,779 --> 00:29:33,779
doing this we shall come and help your

00:29:56,899 --> 00:30:10,379
I think then if you are going to wonder

00:30:07,980 --> 00:30:14,279
to trigger then I think when you re in

00:30:10,379 --> 00:30:16,409
the key like I don't know I think it

00:30:14,279 --> 00:30:19,590
said a shrink either I think like you

00:30:16,409 --> 00:30:32,039
can compare like because let's go to the

00:30:19,590 --> 00:30:34,409
hero so as you can see each okay so as

00:30:32,039 --> 00:30:37,379
you as you can see like in here each

00:30:34,409 --> 00:30:40,019
each has like a similar format so if you

00:30:37,379 --> 00:30:43,769
are able to compare this last string

00:30:40,019 --> 00:30:45,629
here to less the equals equals a then

00:30:43,769 --> 00:30:50,629
you should be able to end in a specific

00:30:45,629 --> 00:30:50,629
event that occurs yeah

00:30:52,009 --> 00:31:01,529
depends on what you want to do yeah

00:30:58,080 --> 00:31:03,570
that's if you find how to do it I'm sure

00:31:01,529 --> 00:31:06,320
you can do in Python you can do

00:31:03,570 --> 00:31:06,320
everything in Python

00:31:10,720 --> 00:31:34,360
so now anyone have any more questions if

00:31:14,150 --> 00:31:34,360

YouTube URL: https://www.youtube.com/watch?v=ZomrNHHC67k


