Title: Real-world Machine Learning with TensorFlow and Cloud ML- Kaz Sato- FOSSASIA 2018
Publication date: 2018-03-23
Playlist: FOSSASIA Summit 2018
Description: 
	Speaker: Kaz Sato, Developer Advocate Google
Info: https://2018.fossasia.org/event/speakers.html#kaz-sato3320

We will explore examples of business that have adopted TensorFlow and Cloud ML to solve their real-world problems: a cucumber farmer in Japan who was able to build a deep learning-based cucumber sorter by himself, a used car auction service using TF for classifying car models and parts, and a food manufacturer that has been able to increase productivity significantly in their baby food factory.

Room: Lecture Theatre
Track: Artificial Intelligence
Date: Thursday, 22nd March, 13:50 - 14:15

Event Page: http://2018.fossasia.org
Follow FOSSASIA on Twitter: https://twitter.com/fossasia/
Like FOSSASIA on Facebook: https://www.facebook.com/fossasia/ 

Produced by Engineers.SG
Captions: 
	00:00:00,000 --> 00:00:06,390
okay it's a so thank you for taking your

00:00:03,330 --> 00:00:08,550
time for my session real-world machine

00:00:06,390 --> 00:00:10,980
learning with stencil oh and quad I know

00:00:08,550 --> 00:00:13,200
I'm a class I have been working at

00:00:10,980 --> 00:00:14,910
Google over seven years and for last

00:00:13,200 --> 00:00:17,609
four years I have been working as a

00:00:14,910 --> 00:00:19,289
developer advocate at Tokyo office so

00:00:17,609 --> 00:00:22,320
it's like a evangelist for developers

00:00:19,289 --> 00:00:24,630
attending meetups like this and speaking

00:00:22,320 --> 00:00:26,900
about mostly about machine learning or

00:00:24,630 --> 00:00:29,849
the typical data processing products

00:00:26,900 --> 00:00:32,790
let's start talking about the meanings

00:00:29,849 --> 00:00:35,430
of these buzzwords like AI or ml or

00:00:32,790 --> 00:00:37,469
network there is no clear definition of

00:00:35,430 --> 00:00:39,809
what is AI or artificial introduce but

00:00:37,469 --> 00:00:41,730
you can think it's an what's the

00:00:39,809 --> 00:00:44,610
definition the science of making things

00:00:41,730 --> 00:00:47,730
make things about so we like to make

00:00:44,610 --> 00:00:49,980
them smarter IT systems rather than the

00:00:47,730 --> 00:00:52,230
ordinary existing IT systems which is

00:00:49,980 --> 00:00:56,250
programmed by the human human

00:00:52,230 --> 00:00:57,960
programmers and one of the approaches

00:00:56,250 --> 00:01:00,300
many different approaches to realize

00:00:57,960 --> 00:01:03,030
division of the AI is machine learning

00:01:00,300 --> 00:01:05,549
and I personally think machine learning

00:01:03,030 --> 00:01:09,689
is kind of the paradigm shift of

00:01:05,549 --> 00:01:12,060
programming because instead of using the

00:01:09,689 --> 00:01:14,549
human programmers to instruct computers

00:01:12,060 --> 00:01:17,250
how to solve the problems now you can

00:01:14,549 --> 00:01:18,930
use data to program the computer so I

00:01:17,250 --> 00:01:21,270
think machine learning is a new way to

00:01:18,930 --> 00:01:23,490
program computer so it's a paradigm

00:01:21,270 --> 00:01:27,030
shift of the computer programming so

00:01:23,490 --> 00:01:29,939
instead of the specifying the each logic

00:01:27,030 --> 00:01:32,820
like if statements or database sql's

00:01:29,939 --> 00:01:34,979
we can let the computers looking at the

00:01:32,820 --> 00:01:37,829
data and try to extract certain patterns

00:01:34,979 --> 00:01:39,930
of logic hidden inside the data and one

00:01:37,829 --> 00:01:42,630
of those machine learning algorithms is

00:01:39,930 --> 00:01:46,560
the neural networks originally invented

00:01:42,630 --> 00:01:48,689
in 40s and we had to past

00:01:46,560 --> 00:01:50,810
blooming of the neural network in 60s

00:01:48,689 --> 00:01:53,820
and 80s and this is the third time point

00:01:50,810 --> 00:01:55,680
where we are seeing the blooming of the

00:01:53,820 --> 00:01:57,420
neural networks but now we are seeing

00:01:55,680 --> 00:01:59,630
the real breakthrough in the technology

00:01:57,420 --> 00:02:02,310
because now we have the big data

00:01:59,630 --> 00:02:05,700
terabytes of data the training data and

00:02:02,310 --> 00:02:10,050
the computing power rather GPUs so that

00:02:05,700 --> 00:02:11,490
at around 2012 what 2040 we are seeing

00:02:10,050 --> 00:02:13,890
there's something

00:02:11,490 --> 00:02:16,560
happening engineer networks when you put

00:02:13,890 --> 00:02:20,010
the the big data and copying in

00:02:16,560 --> 00:02:22,620
computing power and your network is is

00:02:20,010 --> 00:02:24,630
just like a function in the math or

00:02:22,620 --> 00:02:27,450
programming so you can put any kind of

00:02:24,630 --> 00:02:30,750
data so you would get the output data so

00:02:27,450 --> 00:02:33,360
not only the image data you can also put

00:02:30,750 --> 00:02:36,860
any kind of the data rack game user

00:02:33,360 --> 00:02:39,450
tivity log or credit card usage log or

00:02:36,860 --> 00:02:42,390
ecommerce logs any kind of business

00:02:39,450 --> 00:02:44,070
theater and you have to try whether it

00:02:42,390 --> 00:02:47,160
in Europe neural networks can solve your

00:02:44,070 --> 00:02:49,860
problem or not for example if you if we

00:02:47,160 --> 00:02:51,990
have a game application or game server

00:02:49,860 --> 00:02:54,180
you can try using in your network to

00:02:51,990 --> 00:02:56,910
classify whether a user could be a

00:02:54,180 --> 00:03:00,360
premium user for you will be buying more

00:02:56,910 --> 00:03:02,670
and more items on your service or a user

00:03:00,360 --> 00:03:05,040
can be a cheating player who will be

00:03:02,670 --> 00:03:08,190
using an automated script to try

00:03:05,040 --> 00:03:09,750
cheating on the game so anyway let's

00:03:08,190 --> 00:03:11,910
take a look at how the neural networks

00:03:09,750 --> 00:03:14,820
can solve a problem by using this very

00:03:11,910 --> 00:03:18,660
simple double spiral pattern this

00:03:14,820 --> 00:03:23,040
dataset has a two-dimensional data one

00:03:18,660 --> 00:03:25,020
and two dimensions in a 2d space and if

00:03:23,040 --> 00:03:28,170
you plot the data point then you can see

00:03:25,020 --> 00:03:31,230
the two groups already spiral and blue

00:03:28,170 --> 00:03:33,750
spiral and for humans it's pretty easy

00:03:31,230 --> 00:03:36,150
to cross by these data points if you

00:03:33,750 --> 00:03:38,820
have a new data point here this must be

00:03:36,150 --> 00:03:41,070
in blue if you have a new data point

00:03:38,820 --> 00:03:43,050
here this must be always but what kind

00:03:41,070 --> 00:03:45,120
of Java code or what kind of the cheat

00:03:43,050 --> 00:03:47,610
code or Python code you would write to

00:03:45,120 --> 00:03:50,280
classify these data points in the blue

00:03:47,610 --> 00:03:52,170
or orange and you can depress this

00:03:50,280 --> 00:03:55,140
spiral pattern with any arbitrary

00:03:52,170 --> 00:03:57,270
complex patas write the year whether

00:03:55,140 --> 00:04:00,600
your game player is a cheating or not

00:03:57,270 --> 00:04:02,850
whether your credit card users is doing

00:04:00,600 --> 00:04:05,640
a road or not what kind of the program

00:04:02,850 --> 00:04:07,950
code to classify these implicit patterns

00:04:05,640 --> 00:04:12,590
so that's where you may want to use

00:04:07,950 --> 00:04:16,620
machine running or near a network and

00:04:12,590 --> 00:04:21,049
somehow the video is not working what's

00:04:16,620 --> 00:04:21,049
up maybe I lost internet connection I

00:04:23,540 --> 00:04:35,160
think I have to connect busy in the

00:04:27,240 --> 00:04:41,540
Internet oh it's how do you have a wired

00:04:35,160 --> 00:04:41,540
connection ok sorry I lost my connection

00:04:56,990 --> 00:05:04,380
yes I can connect ya if just lost so I

00:05:00,120 --> 00:05:06,000
can reconnect via my demonstration

00:05:04,380 --> 00:05:07,200
doesn't work at all with that internet

00:05:06,000 --> 00:05:13,350
connection sorry

00:05:07,200 --> 00:05:15,960
I think it's work so this is a

00:05:13,350 --> 00:05:19,050
demonstration where we have the input

00:05:15,960 --> 00:05:20,760
data training data to train in your

00:05:19,050 --> 00:05:23,730
networks whether the data point should

00:05:20,760 --> 00:05:26,010
be in an orange or blue spiral and in

00:05:23,730 --> 00:05:28,320
the middle we have the three layers of

00:05:26,010 --> 00:05:30,330
neural network and at the right side you

00:05:28,320 --> 00:05:32,670
can see the output how the neural

00:05:30,330 --> 00:05:36,270
network thinks whether a point is in

00:05:32,670 --> 00:05:38,300
orange or blue so when you start the

00:05:36,270 --> 00:05:40,740
training over the neural network the

00:05:38,300 --> 00:05:43,830
neural network doesn't work at all

00:05:40,740 --> 00:05:46,560
because it thinks the points in this

00:05:43,830 --> 00:05:48,960
area must be all orange and points in

00:05:46,560 --> 00:05:52,080
this area must be all improved so it

00:05:48,960 --> 00:05:54,930
doesn't work it doesn't work so but if

00:05:52,080 --> 00:05:57,210
you keep trying training the model

00:05:54,930 --> 00:05:59,490
patient we is putting more and more

00:05:57,210 --> 00:06:01,980
training data and computing power you

00:05:59,490 --> 00:06:06,060
can see gradually computer tries to find

00:06:01,980 --> 00:06:09,540
any way to classify the data points in

00:06:06,060 --> 00:06:11,520
blue or orange just like humans do so

00:06:09,540 --> 00:06:14,520
eventually you to get pretty much high

00:06:11,520 --> 00:06:17,100
accuracy on classifying those data

00:06:14,520 --> 00:06:17,790
points and the rest result would be

00:06:17,100 --> 00:06:19,920
something like that

00:06:17,790 --> 00:06:22,950
ninety-nine point eight percent accuracy

00:06:19,920 --> 00:06:26,010
on quest Franzese that was parallel so

00:06:22,950 --> 00:06:28,110
as I mentioned you don't do any

00:06:26,010 --> 00:06:29,940
programming on the machine value yeah

00:06:28,110 --> 00:06:32,790
you have to write some code on building

00:06:29,940 --> 00:06:34,860
those setups for your machine body but

00:06:32,790 --> 00:06:37,200
the logic itself or pattern itself is

00:06:34,860 --> 00:06:39,600
not programmed by humans instead you can

00:06:37,200 --> 00:06:42,150
let the computers trying to find the

00:06:39,600 --> 00:06:44,730
best way to program the computer by

00:06:42,150 --> 00:06:47,190
itself and you can extend the same

00:06:44,730 --> 00:06:49,980
techniques to the higher dimensional

00:06:47,190 --> 00:06:52,380
data such as images or audio or natural

00:06:49,980 --> 00:06:55,560
languages we example if you have the 28

00:06:52,380 --> 00:07:00,630
times 28 pixel image that means you have

00:06:55,560 --> 00:07:02,400
the 784 dimensional vector it's just a

00:07:00,630 --> 00:07:05,280
bunch of numbers we see pictures like a

00:07:02,400 --> 00:07:07,740
black or white pixels and you can just

00:07:05,280 --> 00:07:09,810
put those pixel data directory into and

00:07:07,740 --> 00:07:12,870
at work so that the new ones in the

00:07:09,810 --> 00:07:16,530
network for example this new long tries

00:07:12,870 --> 00:07:18,990
to check the certain pixels whether it's

00:07:16,530 --> 00:07:22,740
a black or white to calculate the

00:07:18,990 --> 00:07:25,669
probability if the image is in is 8

00:07:22,740 --> 00:07:28,889
digit 8 on that so it's very simple

00:07:25,669 --> 00:07:31,440
mechanics running inside the neural

00:07:28,889 --> 00:07:33,509
networks but if you have in multiple

00:07:31,440 --> 00:07:36,060
layers of neural networks that is

00:07:33,509 --> 00:07:37,979
so-called deep neural network then you'd

00:07:36,060 --> 00:07:40,650
see something amazing could be happening

00:07:37,979 --> 00:07:43,800
in the annual Network so if you have

00:07:40,650 --> 00:07:47,069
like a 40 or 80 layers between the input

00:07:43,800 --> 00:07:48,389
and our data yeah at Google we are for

00:07:47,069 --> 00:07:51,120
the production we are using the

00:07:48,389 --> 00:07:52,620
inception model which uses the 40 or 80

00:07:51,120 --> 00:07:55,470
radius between the input and the output

00:07:52,620 --> 00:07:58,560
then you see very high accuracy on

00:07:55,470 --> 00:08:00,960
recognizing object image so the new

00:07:58,560 --> 00:08:03,900
neurons inside in lower layers to be

00:08:00,960 --> 00:08:06,389
trained to recognize things right edges

00:08:03,900 --> 00:08:09,270
of patterns in was in the middle ranges

00:08:06,389 --> 00:08:13,139
would be able to recognize nah eyes or

00:08:09,270 --> 00:08:15,449
nose of animals animals in the higher

00:08:13,139 --> 00:08:19,169
layers can be smart enough to recognize

00:08:15,449 --> 00:08:21,900
dog snout or Catlett and eventually you

00:08:19,169 --> 00:08:23,880
to have a very smart move on that you'll

00:08:21,900 --> 00:08:27,509
recognize laboratory to be polar or

00:08:23,880 --> 00:08:29,870
tiger cat just like humans do well this

00:08:27,509 --> 00:08:31,979
is how the neural network works and

00:08:29,870 --> 00:08:34,200
Google has been using this technology

00:08:31,979 --> 00:08:36,329
for implementing many different Google

00:08:34,200 --> 00:08:39,180
services for example if you are using

00:08:36,329 --> 00:08:41,010
Google search then you mean that means

00:08:39,180 --> 00:08:44,459
you are using deep running from Google

00:08:41,010 --> 00:08:46,680
everyday because in 2015 we have

00:08:44,459 --> 00:08:49,560
introduced skip running algorithms for

00:08:46,680 --> 00:08:51,750
ranking the search result of google

00:08:49,560 --> 00:08:52,260
search and we have been using the deep

00:08:51,750 --> 00:08:55,740
runnings

00:08:52,260 --> 00:08:59,760
at over 100 production projects inside

00:08:55,740 --> 00:09:00,630
Google so it's not a hyper buzzword

00:08:59,760 --> 00:09:03,180
anymore

00:09:00,630 --> 00:09:05,610
keep running for Google is a proven

00:09:03,180 --> 00:09:07,680
production quality technology that is a

00:09:05,610 --> 00:09:10,440
very important part of the Google

00:09:07,680 --> 00:09:12,209
services already and now we are trying

00:09:10,440 --> 00:09:14,490
to externalize the power of the deep

00:09:12,209 --> 00:09:16,920
running with the external developers and

00:09:14,490 --> 00:09:20,459
customers and we provide three different

00:09:16,920 --> 00:09:21,750
kinds of body services ameno api's and

00:09:20,459 --> 00:09:25,410
ottoman apiece

00:09:21,750 --> 00:09:26,820
pretty new product and tensorflow that

00:09:25,410 --> 00:09:29,790
could be running on machine running

00:09:26,820 --> 00:09:31,890
engine on the crowd so let's take a look

00:09:29,790 --> 00:09:33,900
at the each product in details

00:09:31,890 --> 00:09:36,150
MLA Pia is the easiest way to get

00:09:33,900 --> 00:09:37,380
started using machine learning so you

00:09:36,150 --> 00:09:39,420
don't have to have any machine running

00:09:37,380 --> 00:09:41,910
expertise or knowledge or experience all

00:09:39,420 --> 00:09:45,750
you have to do is upload your own image

00:09:41,910 --> 00:09:47,490
audio or text data to the API and you'll

00:09:45,750 --> 00:09:50,850
be receiving the result within a few

00:09:47,490 --> 00:09:54,630
seconds so if you go to the product page

00:09:50,850 --> 00:09:57,300
of cloud vision API then you have the

00:09:54,630 --> 00:09:59,700
try the API box in the product page

00:09:57,300 --> 00:10:02,220
anyone can try the API without signing

00:09:59,700 --> 00:10:04,530
up or spending any money just drag and

00:10:02,220 --> 00:10:08,100
drop your own images from local computer

00:10:04,530 --> 00:10:11,580
so for example if you drop the shift of

00:10:08,100 --> 00:10:15,360
image then it should be recognized as a

00:10:11,580 --> 00:10:17,880
dark or mama not mop or things like that

00:10:15,360 --> 00:10:20,190
this looks like a muppet it's a dog okay

00:10:17,880 --> 00:10:22,860
and if you go to the product page across

00:10:20,190 --> 00:10:24,780
speech recognition speech API you can

00:10:22,860 --> 00:10:28,200
just speak to the microphone of your

00:10:24,780 --> 00:10:29,730
laptop to try using the API by choosing

00:10:28,200 --> 00:10:31,440
in the one language probably 20

00:10:29,730 --> 00:10:34,410
different languages like English or

00:10:31,440 --> 00:10:36,870
Mandarin or Japanese and it can

00:10:34,410 --> 00:10:40,230
recognize your voice in real time just

00:10:36,870 --> 00:10:42,740
like you can you do with the Google home

00:10:40,230 --> 00:10:45,390
smart speakers or the Android devices

00:10:42,740 --> 00:10:48,089
then you can copy and paste the

00:10:45,390 --> 00:10:50,190
recognized text and put the text into

00:10:48,089 --> 00:10:54,660
the another API in natural language API

00:10:50,190 --> 00:10:56,910
to understand deeper about the meanings

00:10:54,660 --> 00:10:58,860
of the text you can just click the

00:10:56,910 --> 00:11:02,100
analyze button so you will be receiving

00:10:58,860 --> 00:11:03,930
the result all of the energy analysis to

00:11:02,100 --> 00:11:06,570
find that product names or company names

00:11:03,930 --> 00:11:08,460
the locations or sentiment to find out

00:11:06,570 --> 00:11:11,040
whether the same sentence is talking

00:11:08,460 --> 00:11:13,950
about positive or negative or syntactic

00:11:11,040 --> 00:11:16,170
analysis syntactic analysis for the year

00:11:13,950 --> 00:11:19,770
analyzing part of speech of each word

00:11:16,170 --> 00:11:21,150
probe or the noun or G active so that's

00:11:19,770 --> 00:11:23,339
so easy you don't have to hire expensive

00:11:21,150 --> 00:11:26,430
data scientist to do to do things like

00:11:23,339 --> 00:11:28,350
that but this API cannot solve all the

00:11:26,430 --> 00:11:31,020
problems these are all pre trained model

00:11:28,350 --> 00:11:33,850
that means you cannot customize the

00:11:31,020 --> 00:11:37,930
model for your own

00:11:33,850 --> 00:11:41,860
use cases to do so then you have to hire

00:11:37,930 --> 00:11:44,470
expensive data scientists to do the data

00:11:41,860 --> 00:11:47,230
pre-processing on the design the email

00:11:44,470 --> 00:11:51,100
model are tuning the hyper parameter

00:11:47,230 --> 00:11:53,050
tuning evaluation the primary and you

00:11:51,100 --> 00:11:55,540
have to continuously monitor and a

00:11:53,050 --> 00:11:57,340
training model all the time so that

00:11:55,540 --> 00:12:00,220
would take like a tens of thousands of

00:11:57,340 --> 00:12:03,070
dollars or millions of dollars so we are

00:12:00,220 --> 00:12:04,870
trying to mitigate this kind of building

00:12:03,070 --> 00:12:08,020
for building the customized email model

00:12:04,870 --> 00:12:10,660
to do so so we provide a new product

00:12:08,020 --> 00:12:12,880
called Auto ml the first product is

00:12:10,660 --> 00:12:15,250
order a narrow vision customizable

00:12:12,880 --> 00:12:18,040
machine learning model wallet or object

00:12:15,250 --> 00:12:20,860
to be recognition so all you have to do

00:12:18,040 --> 00:12:23,220
is collect all the training data image

00:12:20,860 --> 00:12:27,820
files uploaded to the Google crowd and

00:12:23,220 --> 00:12:44,830
push the Train button on the auto ml so

00:12:27,820 --> 00:12:46,900
let's take a look at the video if you

00:12:44,830 --> 00:12:48,820
try this with the vision API here are

00:12:46,900 --> 00:12:50,230
the labels you'd get back it wasn't

00:12:48,820 --> 00:12:52,570
trained specifically to identify

00:12:50,230 --> 00:12:54,040
different types of clouds what if you

00:12:52,570 --> 00:12:55,780
want to train a model to classify images

00:12:54,040 --> 00:12:58,660
specific to your data set without

00:12:55,780 --> 00:13:00,250
writing model code cloud auto

00:12:58,660 --> 00:13:01,840
Intellivision lets businesses and

00:13:00,250 --> 00:13:04,060
developers with limited machine learning

00:13:01,840 --> 00:13:06,370
expertise train custom vision models

00:13:04,060 --> 00:13:08,020
their own use cases developers can

00:13:06,370 --> 00:13:10,030
upload their own labels or unlabeled

00:13:08,020 --> 00:13:11,770
data set train and manage their models

00:13:10,030 --> 00:13:15,430
and use those models directly from the

00:13:11,770 --> 00:13:18,040
cloud to make predictions let's take a

00:13:15,430 --> 00:13:19,840
look at the auto ml you I begin by

00:13:18,040 --> 00:13:23,800
uploading your images to cloud auto

00:13:19,840 --> 00:13:25,690
amount then press the train button to

00:13:23,800 --> 00:13:28,720
train a custom model on your image data

00:13:25,690 --> 00:13:30,610
set when training group leads analysis

00:13:28,720 --> 00:13:33,210
and stats of the model quality are

00:13:30,610 --> 00:13:33,210
available too

00:13:33,520 --> 00:13:39,230
so that is so easy so you don't have to

00:13:36,200 --> 00:13:41,450
write any code for trying this out so

00:13:39,230 --> 00:13:44,540
the end result is API

00:13:41,450 --> 00:13:46,940
Wesley API you can access so you can ask

00:13:44,540 --> 00:13:49,040
some IP vendors to build a whole email

00:13:46,940 --> 00:13:51,620
system without using the expertise of

00:13:49,040 --> 00:13:54,740
machine learning expert or data

00:13:51,620 --> 00:13:55,970
scientist and this here's a very

00:13:54,740 --> 00:13:58,340
interesting use case of the

00:13:55,970 --> 00:14:00,380
classification classifying running balls

00:13:58,340 --> 00:14:02,620
this is actually done by a seriously two

00:14:00,380 --> 00:14:05,840
scientists in Japan and he collected

00:14:02,620 --> 00:14:08,900
45,000 pictures of the ramen balls made

00:14:05,840 --> 00:14:11,540
by ramen Jiro brunches ramen Jiro is one

00:14:08,900 --> 00:14:14,270
of the popular ramen franchise in Japan

00:14:11,540 --> 00:14:17,780
they have fought even branches and the

00:14:14,270 --> 00:14:19,370
those balls up looks the same but

00:14:17,780 --> 00:14:22,010
actually they are made by a different

00:14:19,370 --> 00:14:25,400
branch you can shop of the 41 it

00:14:22,010 --> 00:14:29,690
branches and this alternate model can

00:14:25,400 --> 00:14:33,380
classify the branches at 95 accuracy 95%

00:14:29,690 --> 00:14:35,780
accuracy so we cannot do these things

00:14:33,380 --> 00:14:37,250
but computers can do that so now the

00:14:35,780 --> 00:14:41,900
performance over the computer you're

00:14:37,250 --> 00:14:44,390
exceeding yeah from 10 computer the

00:14:41,900 --> 00:14:47,330
humans mercury is one of the popular

00:14:44,390 --> 00:14:49,220
setting app in Japan and then they have

00:14:47,330 --> 00:14:52,040
been trying to build a machine learning

00:14:49,220 --> 00:14:55,700
model to crush by the brand names of the

00:14:52,040 --> 00:14:59,600
product like a Gucci or Chanel and the

00:14:55,700 --> 00:15:01,790
the past result was 70 plus 75 percent

00:14:59,600 --> 00:15:04,280
accuracy with their own machine running

00:15:01,790 --> 00:15:06,620
model but when they try the auto ml they

00:15:04,280 --> 00:15:08,690
were able to get in 90% accuracy just by

00:15:06,620 --> 00:15:10,340
clicking the training bottom without any

00:15:08,690 --> 00:15:12,920
expertise dimensional data scientists

00:15:10,340 --> 00:15:15,380
and they are waiting for you the public

00:15:12,920 --> 00:15:17,740
a better release of the product to

00:15:15,380 --> 00:15:20,960
replace existing model obviously auto NL

00:15:17,740 --> 00:15:23,510
so that's how auto ml and then your API

00:15:20,960 --> 00:15:25,820
works and but still there are some cases

00:15:23,510 --> 00:15:27,830
where you may want to build the machine

00:15:25,820 --> 00:15:29,750
learning module from scratch with data

00:15:27,830 --> 00:15:31,730
scientist so that's where you you want

00:15:29,750 --> 00:15:33,770
to use the tensor properties now open

00:15:31,730 --> 00:15:36,380
source tool for building your own model

00:15:33,770 --> 00:15:38,780
from scratch this has been used inside

00:15:36,380 --> 00:15:40,730
Google for building any new machine

00:15:38,780 --> 00:15:42,770
learning or AI services here at Google

00:15:40,730 --> 00:15:43,760
and we have open sourced in November

00:15:42,770 --> 00:15:46,730
00:15:43,760 --> 00:15:48,110
and it's not so hard to build your own

00:15:46,730 --> 00:15:50,389
model with chance of parole

00:15:48,110 --> 00:15:52,760
you have to write maybe tens of Python

00:15:50,389 --> 00:15:56,269
code to define the neuron network graph

00:15:52,760 --> 00:15:58,699
like this is the Python like mattimore

00:15:56,269 --> 00:16:00,649
with your data and the way it's things

00:15:58,699 --> 00:16:02,810
like that or specifying the optimizer

00:16:00,649 --> 00:16:04,519
for the training the model and this is

00:16:02,810 --> 00:16:08,240
the demonstration I have created with my

00:16:04,519 --> 00:16:10,240
sound last summer to show how easy to

00:16:08,240 --> 00:16:12,529
use the ten circles this is a so-called

00:16:10,240 --> 00:16:14,570
rock-paper-scissors messy with cloth

00:16:12,529 --> 00:16:18,740
with three sensor on it

00:16:14,570 --> 00:16:20,750
so each sensor senses the position of

00:16:18,740 --> 00:16:24,470
the fingers so that the tensile core

00:16:20,750 --> 00:16:27,130
model can detect whether it's an lock or

00:16:24,470 --> 00:16:31,160
paper or scissors it's a toy

00:16:27,130 --> 00:16:32,570
demonstration but still that's very

00:16:31,160 --> 00:16:34,279
interesting because you can understand

00:16:32,570 --> 00:16:36,620
why the machine learning could be

00:16:34,279 --> 00:16:39,980
variable for your everyday programming

00:16:36,620 --> 00:16:43,160
so what it is doing is collecting the

00:16:39,980 --> 00:16:46,100
global sensor data like this and what

00:16:43,160 --> 00:16:48,920
test Pro is doing is the conversion or

00:16:46,100 --> 00:16:51,290
transformation of the input data to the

00:16:48,920 --> 00:16:53,180
expected to output the result in this

00:16:51,290 --> 00:16:55,730
case we want to get the probability of

00:16:53,180 --> 00:16:58,040
the rock paper or scissors based on the

00:16:55,730 --> 00:17:01,190
position of the fingers so what I have

00:16:58,040 --> 00:17:01,850
done is collected 800 position of the

00:17:01,190 --> 00:17:04,579
sensor data

00:17:01,850 --> 00:17:07,280
mr. levels whether it was a lot of paper

00:17:04,579 --> 00:17:09,400
or scissors so that the most important

00:17:07,280 --> 00:17:11,329
part the transport formation here is

00:17:09,400 --> 00:17:12,860
automatically done by the tensile flow

00:17:11,329 --> 00:17:15,620
so you don't have to do any programming

00:17:12,860 --> 00:17:18,230
to implement your transformation part so

00:17:15,620 --> 00:17:19,880
this is the idea of how why the Machine

00:17:18,230 --> 00:17:21,470
value could be useful for the everyday

00:17:19,880 --> 00:17:24,860
programming or any kind of the program

00:17:21,470 --> 00:17:27,500
and once you have defined your model is

00:17:24,860 --> 00:17:30,919
10 so Pro you can run it on your Mac or

00:17:27,500 --> 00:17:33,260
Windows or GPU from any video or tens or

00:17:30,919 --> 00:17:35,419
hundreds of GPU in the crowd we start

00:17:33,260 --> 00:17:37,940
thinking about the scalability because

00:17:35,419 --> 00:17:40,760
we take care of the scalability scalable

00:17:37,940 --> 00:17:42,950
and available the deployment of the

00:17:40,760 --> 00:17:45,740
training and prediction infrastructure

00:17:42,950 --> 00:17:47,540
by ourselves and also you once you have

00:17:45,740 --> 00:17:49,669
trained your model with cancer parole

00:17:47,540 --> 00:17:52,790
you can bring the model into the smaller

00:17:49,669 --> 00:17:54,919
devices like smartphones iOS Android or

00:17:52,790 --> 00:17:56,330
Raspberry Pi so that you can have the

00:17:54,919 --> 00:17:58,940
smartphones to take photo

00:17:56,330 --> 00:18:00,980
to become as an object in it or you can

00:17:58,940 --> 00:18:04,250
have the rosary PI to detect certain

00:18:00,980 --> 00:18:07,190
patterns one with the IOT sensor data we

00:18:04,250 --> 00:18:09,860
even developed our own processor called

00:18:07,190 --> 00:18:11,809
a GPU or tensor processing unit that

00:18:09,860 --> 00:18:15,799
allows the attention flow processing

00:18:11,809 --> 00:18:19,159
inside it and that is almost equivalent

00:18:15,799 --> 00:18:22,580
to the supercomputer performance is

00:18:19,159 --> 00:18:24,649
which is what 11.5 Peter crops so you

00:18:22,580 --> 00:18:26,809
can say that Google has been developing

00:18:24,649 --> 00:18:29,539
their own supercomputer just for

00:18:26,809 --> 00:18:32,510
building the AI or neural network

00:18:29,539 --> 00:18:34,340
infrastructure so telecoil is the most

00:18:32,510 --> 00:18:37,490
popular framework with those benefits

00:18:34,340 --> 00:18:39,980
and many different companies like Nvidia

00:18:37,490 --> 00:18:42,769
dropbox eBay coca-cola has been using

00:18:39,980 --> 00:18:45,470
tens of roll for production or POC news

00:18:42,769 --> 00:18:49,970
cases even these cucumber formers are

00:18:45,470 --> 00:18:53,210
using tens of roll there's a guy his son

00:18:49,970 --> 00:18:56,240
makoto-san who quitted his company as an

00:18:53,210 --> 00:18:58,399
engineer and started helping his parents

00:18:56,240 --> 00:19:01,190
talk about farming two or three years

00:18:58,399 --> 00:19:03,590
ago and he found out that most tedious

00:19:01,190 --> 00:19:06,529
tasks for the jicama farmer is

00:19:03,590 --> 00:19:08,480
classifying cucumbers his mother spent

00:19:06,529 --> 00:19:10,370
eight hours a day just for classifying

00:19:08,480 --> 00:19:12,769
each cucumbers by looking at its shape

00:19:10,370 --> 00:19:14,899
whether it's straight or bend it or

00:19:12,769 --> 00:19:17,510
whether half what kind of it car I'd

00:19:14,899 --> 00:19:19,549
head or what's the texture of the years

00:19:17,510 --> 00:19:22,909
it's came to crush by these cucumbers

00:19:19,549 --> 00:19:24,559
into nine different classes and she

00:19:22,909 --> 00:19:27,190
really didn't wanted to have that

00:19:24,559 --> 00:19:30,019
instead she downloaded tensorflow and

00:19:27,190 --> 00:19:32,510
took nine father photograph of the

00:19:30,019 --> 00:19:34,010
cucumber and trending model so that he

00:19:32,510 --> 00:19:35,590
was able to build his own cucumber

00:19:34,010 --> 00:19:39,860
sorter by himself

00:19:35,590 --> 00:19:43,639
he only spent 1,500 bucks to the whole

00:19:39,860 --> 00:19:45,919
system with Raspberry Pi so now you

00:19:43,639 --> 00:19:48,169
don't have to hire any expensive data

00:19:45,919 --> 00:19:49,820
scientist or Ikea vendors to build a

00:19:48,169 --> 00:19:52,639
million-dollar systems for this kind of

00:19:49,820 --> 00:19:54,350
classification with high quality so now

00:19:52,639 --> 00:19:56,450
we are seeing the real democratization

00:19:54,350 --> 00:20:00,740
of the machine running or the price list

00:19:56,450 --> 00:20:01,940
or the open-source tool so many company

00:20:00,740 --> 00:20:04,130
has started to bring this technology

00:20:01,940 --> 00:20:04,610
into the real world production systems

00:20:04,130 --> 00:20:06,350
right

00:20:04,610 --> 00:20:09,230
Ava's a say

00:20:06,350 --> 00:20:12,169
symmetry kakora kippie for example this

00:20:09,230 --> 00:20:14,390
is a global fishing watch project which

00:20:12,169 --> 00:20:17,150
is a project for or preventing

00:20:14,390 --> 00:20:18,710
overfishing in oceans they are

00:20:17,150 --> 00:20:20,450
collecting the real-time and GPS

00:20:18,710 --> 00:20:24,169
location of the two hundred thousand

00:20:20,450 --> 00:20:25,460
vessels ships in each autumn and storing

00:20:24,169 --> 00:20:27,710
everything is on the Google cloud

00:20:25,460 --> 00:20:29,960
straight and then using the attend so

00:20:27,710 --> 00:20:32,240
pro running on Google cloud to extract

00:20:29,960 --> 00:20:34,880
certain patterns or the movement of each

00:20:32,240 --> 00:20:37,400
ship so that you can easily find out

00:20:34,880 --> 00:20:40,940
whether each ship is doing a trawl

00:20:37,400 --> 00:20:43,520
fishing or longline fishing or pass same

00:20:40,940 --> 00:20:46,640
fishing by looking at the patterns at

00:20:43,520 --> 00:20:49,640
high accuracy so you can easily count

00:20:46,640 --> 00:20:51,289
how many fishes in each area QP is the

00:20:49,640 --> 00:20:53,900
one with the major food manufacturer in

00:20:51,289 --> 00:20:56,570
Japan they have been trying out tensile

00:20:53,900 --> 00:20:58,720
flow image recognition on their food

00:20:56,570 --> 00:21:02,120
manufacturing plant for the baby food

00:20:58,720 --> 00:21:05,480
they want to find out the bad production

00:21:02,120 --> 00:21:07,970
on on the diced potato the malformed

00:21:05,480 --> 00:21:10,970
potatoes of but a potato cue with the

00:21:07,970 --> 00:21:14,120
pod color and existing image recognition

00:21:10,970 --> 00:21:17,390
system didn't work so they try the D

00:21:14,120 --> 00:21:19,190
tensor flow but then they were able to

00:21:17,390 --> 00:21:22,039
get a really high accuracy that can

00:21:19,190 --> 00:21:24,740
replace the human workers so this is the

00:21:22,039 --> 00:21:26,980
real the POC system so you can hear the

00:21:24,740 --> 00:21:26,980
sound

00:21:32,880 --> 00:21:37,050
so it sounds like Super Mario Brothers

00:21:34,980 --> 00:21:39,810
but it's not attractive

00:21:37,050 --> 00:21:41,580
each bells tells you the position on the

00:21:39,810 --> 00:21:45,180
bill to compare whether you will have

00:21:41,580 --> 00:21:46,380
the bad potatoes so summary so we

00:21:45,180 --> 00:21:48,060
provide three different kinds of the

00:21:46,380 --> 00:21:50,370
products and officers to write on

00:21:48,060 --> 00:21:50,670
machine grinding ApS auto email and 10 o

00:21:50,370 --> 00:21:53,040
clock

00:21:50,670 --> 00:21:55,260
which is the opposite also everything is

00:21:53,040 --> 00:21:56,520
all about democratizing the power of the

00:21:55,260 --> 00:21:59,370
machine learning we want to have

00:21:56,520 --> 00:22:03,300
everybody using the machine learning so

00:21:59,370 --> 00:22:05,190
the most important the viable point of

00:22:03,300 --> 00:22:08,520
holding Google's email solution is the

00:22:05,190 --> 00:22:09,960
community and ecosystem the number of

00:22:08,520 --> 00:22:11,700
the developers for the tencel Pro

00:22:09,960 --> 00:22:14,910
machine mining API is growing and

00:22:11,700 --> 00:22:18,000
growing so it's so easy to find the best

00:22:14,910 --> 00:22:20,730
partner or vendor or developers for you

00:22:18,000 --> 00:22:23,880
to provide the real-world solution from

00:22:20,730 --> 00:22:24,990
the community with the system so that's

00:22:23,880 --> 00:22:34,349
it thank you so much

00:22:24,990 --> 00:22:34,349

YouTube URL: https://www.youtube.com/watch?v=_v23trYkMak


