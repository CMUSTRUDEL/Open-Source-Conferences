Title: Animation in DOM - Keya Desai- FOSSASIA 2018
Publication date: 2018-03-24
Playlist: FOSSASIA Summit 2018
Description: 
	Speaker: Keya Desai
Info: https://2018.fossasia.org/event/speakers.html#keya-desai3122

In this session, Keya looks at how animations can be applied to add style and substance to any webpage and how we can identify some common design patterns to add purposeful animations to our designs.

There are a  plethora of development tools available today, from declarative CSS Animations and Transitions to fully featured JavaScript animation libraries like GreenSock to develop slick animations, but there's an upcoming new option: the Web Animation API! 

Join in the fun as Keya demonstrates how simple animated micro interactions can be developed with ease using this new API combined with popular frameworks like React.

Track: Web and Mobile
Room: Training room 2-2
Date: Saturday, 24th March, 2018

Event Page: http://2018.fossasia.org
Follow FOSSASIA on Twitter: https://twitter.com/fossasia/
Like FOSSASIA on Facebook: https://www.facebook.com/fossasia/ 

Produced by Engineers.SG
Captions: 
	00:00:00,030 --> 00:00:06,540
can everyone hear me yeah awesome hello

00:00:03,300 --> 00:00:08,099
everyone my name is kaya I work at

00:00:06,540 --> 00:00:11,099
taught works as a senior consultant

00:00:08,099 --> 00:00:16,160
developer and today I'm going to talk

00:00:11,099 --> 00:00:18,779
about animation in Tom aka web animation

00:00:16,160 --> 00:00:21,150
so we will talk about some development

00:00:18,779 --> 00:00:22,260
tools and techniques around animation we

00:00:21,150 --> 00:00:24,960
will also talk about some design

00:00:22,260 --> 00:00:27,180
patterns around like how to design a

00:00:24,960 --> 00:00:29,160
good animation but before I jump into

00:00:27,180 --> 00:00:31,830
any of those things I want to talk about

00:00:29,160 --> 00:00:33,690
first of all why why I'm going to

00:00:31,830 --> 00:00:38,280
explain about the animation at all I am

00:00:33,690 --> 00:00:40,770
NOT an animator by trade or anything but

00:00:38,280 --> 00:00:43,230
basically I've always been fascinated by

00:00:40,770 --> 00:00:45,090
animation how those clever little

00:00:43,230 --> 00:00:46,770
techniques around animation can actually

00:00:45,090 --> 00:00:49,920
bring illusion to life on any medium

00:00:46,770 --> 00:00:52,440
that we are using it so I think we

00:00:49,920 --> 00:00:54,719
should embrace animation in web 2

00:00:52,440 --> 00:00:56,280
because it's not just a look and feel

00:00:54,719 --> 00:01:00,239
thing it's actually can have a real

00:00:56,280 --> 00:01:02,010
purpose so but unfortunately that that's

00:01:00,239 --> 00:01:06,119
always not a popular opinion every

00:01:02,010 --> 00:01:07,530
client I go so people think that okay if

00:01:06,119 --> 00:01:08,909
you have a lot of animation on our

00:01:07,530 --> 00:01:10,290
website you would end up with something

00:01:08,909 --> 00:01:13,020
like this

00:01:10,290 --> 00:01:15,270
yeah 90s and 2000 time where we have

00:01:13,020 --> 00:01:18,030
used to have like a lot of like overuse

00:01:15,270 --> 00:01:20,270
of gifs or gifts whatever it is and

00:01:18,030 --> 00:01:23,790
everywhere like annoying parallax

00:01:20,270 --> 00:01:27,600
animations and those things so it could

00:01:23,790 --> 00:01:30,869
but fortunately we moved from 1990s and

00:01:27,600 --> 00:01:32,790
2000 and we had whole iPhone launch

00:01:30,869 --> 00:01:35,430
happened and then iPhone changed our

00:01:32,790 --> 00:01:38,040
life we had like a whole UX movement

00:01:35,430 --> 00:01:40,280
going on and nowadays we actually see a

00:01:38,040 --> 00:01:43,049
lot more clever use of animations

00:01:40,280 --> 00:01:45,210
example this one it's a very popular

00:01:43,049 --> 00:01:47,939
example of how good animation looks like

00:01:45,210 --> 00:01:50,280
this is a stripe check out we must have

00:01:47,939 --> 00:01:52,229
used it at one point or another as you

00:01:50,280 --> 00:01:53,700
can see if you look it closely there are

00:01:52,229 --> 00:01:55,590
a lot of animations happening here

00:01:53,700 --> 00:01:57,570
pretty much every element on this

00:01:55,590 --> 00:01:59,490
particular form is animated in some way

00:01:57,570 --> 00:02:01,380
or another what's the difference here

00:01:59,490 --> 00:02:03,149
the difference is not the number of

00:02:01,380 --> 00:02:05,340
animation that you're doing the

00:02:03,149 --> 00:02:08,849
difference is actually that every

00:02:05,340 --> 00:02:11,790
animation in here has some purpose like

00:02:08,849 --> 00:02:14,130
good UI design good animation are also

00:02:11,790 --> 00:02:15,960
invisible so that's the difference

00:02:14,130 --> 00:02:19,830
so the next section will talk about some

00:02:15,960 --> 00:02:21,810
good design patterns around animation so

00:02:19,830 --> 00:02:23,670
we try to find out it like identifier

00:02:21,810 --> 00:02:27,120
places in a web that we can actually use

00:02:23,670 --> 00:02:29,220
animation that would add purpose to what

00:02:27,120 --> 00:02:31,320
we are doing and add some like improve

00:02:29,220 --> 00:02:33,000
the user experience so if you look at

00:02:31,320 --> 00:02:35,670
the web clothes leave a lot of web site

00:02:33,000 --> 00:02:37,170
you start seeing some patterns these

00:02:35,670 --> 00:02:38,820
patterns are actually very helpful in

00:02:37,170 --> 00:02:40,650
identifying where we can actually use

00:02:38,820 --> 00:02:42,210
animation so we'll look at some very

00:02:40,650 --> 00:02:44,610
common meant that we are seeing today a

00:02:42,210 --> 00:02:46,620
lot the first one is the navigational

00:02:44,610 --> 00:02:49,470
transition or general transitional

00:02:46,620 --> 00:02:51,480
animations like your carousel here or

00:02:49,470 --> 00:02:52,650
you can have like an page transitions

00:02:51,480 --> 00:02:55,170
which is also a kind of like

00:02:52,650 --> 00:02:57,240
transitional animation you can not have

00:02:55,170 --> 00:02:59,550
an animation here that's fine it will

00:02:57,240 --> 00:03:01,290
work perfectly the difference is like if

00:02:59,550 --> 00:03:04,080
you don't have an animation here that

00:03:01,290 --> 00:03:06,090
means it's the user who has to now work

00:03:04,080 --> 00:03:07,920
it out but if I want to go right or if I

00:03:06,090 --> 00:03:10,470
want to go left for going next or

00:03:07,920 --> 00:03:12,300
previous so it adds an extra cognitive

00:03:10,470 --> 00:03:13,950
load in your brain and we can use

00:03:12,300 --> 00:03:16,260
animation to actually reduce that

00:03:13,950 --> 00:03:18,600
cognitive load of per user so that's

00:03:16,260 --> 00:03:20,850
transitional animation the next ones are

00:03:18,600 --> 00:03:22,560
supplemental supplemental animations so

00:03:20,850 --> 00:03:24,840
transition takes you from wireless to

00:03:22,560 --> 00:03:27,000
another on an information stay is space

00:03:24,840 --> 00:03:28,950
or they take you out from like one task

00:03:27,000 --> 00:03:30,600
to another supplemental animation

00:03:28,950 --> 00:03:32,520
doesn't take you anywhere what they do

00:03:30,600 --> 00:03:34,050
is they basically adds information to a

00:03:32,520 --> 00:03:36,950
page or removes the information to a

00:03:34,050 --> 00:03:41,970
page so all our drop-down boxes our

00:03:36,950 --> 00:03:44,270
pop-up even the drop them annoying a

00:03:41,970 --> 00:03:46,050
dead lock they are all actually kind of

00:03:44,270 --> 00:03:48,020
supplemental animation they add

00:03:46,050 --> 00:03:50,760
information to the page and hopefully

00:03:48,020 --> 00:03:53,130
then you have a visual feedback feedback

00:03:50,760 --> 00:03:56,430
this is another very very common use

00:03:53,130 --> 00:03:58,230
case of animation the animation can be

00:03:56,430 --> 00:04:00,690
used to give a direct feedback to a

00:03:58,230 --> 00:04:03,180
user's inter interaction so like your

00:04:00,690 --> 00:04:05,160
depressed button or or even like a

00:04:03,180 --> 00:04:06,810
loading animation like a pre-loaded that

00:04:05,160 --> 00:04:08,190
you are using that is also a feedback

00:04:06,810 --> 00:04:10,410
animation that can actually give you

00:04:08,190 --> 00:04:12,750
give a user of feedback that system is

00:04:10,410 --> 00:04:14,730
busy doing something wait for it so

00:04:12,750 --> 00:04:18,150
that's also a feedback and we are using

00:04:14,730 --> 00:04:20,820
animation for that nowadays so and the

00:04:18,150 --> 00:04:23,130
next one is demonstration or visual heat

00:04:20,820 --> 00:04:25,169
this is very good this is where I like

00:04:23,130 --> 00:04:27,160
where it's like playing begins because

00:04:25,169 --> 00:04:29,620
you can play with a lot of things here

00:04:27,160 --> 00:04:31,360
demonstrations are the one which which

00:04:29,620 --> 00:04:34,990
can actually used animation to tell a

00:04:31,360 --> 00:04:37,180
story you can have a really big blog of

00:04:34,990 --> 00:04:38,860
blob of text around like what your

00:04:37,180 --> 00:04:40,630
product is doing something or how your

00:04:38,860 --> 00:04:41,770
product works but instead of that you

00:04:40,630 --> 00:04:44,170
can actually use an animation

00:04:41,770 --> 00:04:46,480
interactive animation to to tell a story

00:04:44,170 --> 00:04:49,090
in a very insightful as well as

00:04:46,480 --> 00:04:51,670
entertaining way so that's demonstration

00:04:49,090 --> 00:04:53,740
or a visual hint kind of animation then

00:04:51,670 --> 00:04:56,530
we have the last one is like pretty

00:04:53,740 --> 00:04:58,660
decorative animation so these animations

00:04:56,530 --> 00:05:01,570
are there for no reason they they're

00:04:58,660 --> 00:05:03,880
they're just just for fun and obviously

00:05:01,570 --> 00:05:05,410
we should be very mindful of using this

00:05:03,880 --> 00:05:06,880
kind of animation we can't have a lot of

00:05:05,410 --> 00:05:09,430
animation which doesn't have a purpose

00:05:06,880 --> 00:05:10,890
but in saying that decorative animation

00:05:09,430 --> 00:05:13,030
can have their purpose as well

00:05:10,890 --> 00:05:15,930
decorative animation can be used to

00:05:13,030 --> 00:05:18,340
enforce branding or it could use to and

00:05:15,930 --> 00:05:21,220
sometime make something ordinary into

00:05:18,340 --> 00:05:23,530
extraordinary so that's like decorative

00:05:21,220 --> 00:05:25,240
animation these are some very common but

00:05:23,530 --> 00:05:26,920
obviously there's a lot more patterns if

00:05:25,240 --> 00:05:29,190
you like to start seeing the web with

00:05:26,920 --> 00:05:31,450
very very we can use animation so

00:05:29,190 --> 00:05:32,950
identifying where to use animation is

00:05:31,450 --> 00:05:35,710
only half of the story

00:05:32,950 --> 00:05:38,560
in order to basically make a good

00:05:35,710 --> 00:05:40,510
animation it takes a whole team so

00:05:38,560 --> 00:05:43,210
that's why I like a designer can come up

00:05:40,510 --> 00:05:44,290
with an amazing animation design but at

00:05:43,210 --> 00:05:46,780
the end of the day you need to develop

00:05:44,290 --> 00:05:49,060
and put it in a production so I think

00:05:46,780 --> 00:05:51,760
the communication aspect of an animation

00:05:49,060 --> 00:05:53,230
is as important as a developer why

00:05:51,760 --> 00:05:55,180
should I care about animation at all

00:05:53,230 --> 00:05:56,980
like or communicating animation because

00:05:55,180 --> 00:05:58,480
if you know what goes into designing it

00:05:56,980 --> 00:06:00,250
you can ask the right questions at the

00:05:58,480 --> 00:06:01,870
right time rather than someone deliver

00:06:00,250 --> 00:06:05,470
your animation and just make it like

00:06:01,870 --> 00:06:07,120
this PSD that it doesn't work so that's

00:06:05,470 --> 00:06:09,370
why when we are communicating or

00:06:07,120 --> 00:06:11,080
defining an animation there are certain

00:06:09,370 --> 00:06:12,580
things we should keep it in mind let's

00:06:11,080 --> 00:06:14,170
say if you want to define an animation

00:06:12,580 --> 00:06:16,510
there are three things you should be at

00:06:14,170 --> 00:06:19,240
least asking the first and obvious one

00:06:16,510 --> 00:06:21,250
is a trigger what starts it it's

00:06:19,240 --> 00:06:21,880
actually happening page-load does it

00:06:21,250 --> 00:06:25,810
happen

00:06:21,880 --> 00:06:28,870
think of the visited permission that one

00:06:25,810 --> 00:06:30,610
is actual action and again like what

00:06:28,870 --> 00:06:34,780
happens it's like something aids

00:06:30,610 --> 00:06:37,090
something moves I'm just in a what what

00:06:34,780 --> 00:06:39,880
fiction is and the last one which is a

00:06:37,090 --> 00:06:42,280
quality so this is

00:06:39,880 --> 00:06:44,800
when forgotten but it's very important

00:06:42,280 --> 00:06:47,860
get the qualities right plus the right

00:06:44,800 --> 00:06:50,290
qualities answer you can actually create

00:06:47,860 --> 00:06:52,270
really smooth lifelike dimensions so

00:06:50,290 --> 00:06:57,910
they are all actually the quality to

00:06:52,270 --> 00:06:59,920
amplify like how how good missions isn't

00:06:57,910 --> 00:07:01,650
it a little bit more about qualities so

00:06:59,920 --> 00:07:09,430
what are the properties that we ask

00:07:01,650 --> 00:07:11,920
design so there a lot first and most

00:07:09,430 --> 00:07:14,500
simple one one is easy so easy

00:07:11,920 --> 00:07:16,480
we don't ask so easy basically a rate of

00:07:14,500 --> 00:07:19,510
change that something changes over the

00:07:16,480 --> 00:07:22,060
time in your CSS world it's a timing

00:07:19,510 --> 00:07:25,300
functions every browser understands for

00:07:22,060 --> 00:07:30,040
type of easing is in accelerate is out

00:07:25,300 --> 00:07:32,200
decelerate us decelerate learn later and

00:07:30,040 --> 00:07:33,640
linear which is no rate of change so

00:07:32,200 --> 00:07:34,750
every browser understand this for and

00:07:33,640 --> 00:07:36,790
you should be asking which one I should

00:07:34,750 --> 00:07:39,190
be using okay I see the animation have

00:07:36,790 --> 00:07:41,080
you were easing or is out at the end

00:07:39,190 --> 00:07:43,450
there is a fifth one called

00:07:41,080 --> 00:07:45,940
like custom easing as well that you can

00:07:43,450 --> 00:07:47,500
define by a cubic Bezier which is an

00:07:45,940 --> 00:07:49,570
automatical formula you can play around

00:07:47,500 --> 00:07:51,670
with so there's a website called cubic

00:07:49,570 --> 00:07:53,080
Bezier comm which can allow you to play

00:07:51,670 --> 00:07:54,820
with the different kind of thing but

00:07:53,080 --> 00:07:57,340
usually in my work what I've seen it

00:07:54,820 --> 00:08:00,790
mainly the four standard ones are will

00:07:57,340 --> 00:08:02,980
suffice so that's that's easy important

00:08:00,790 --> 00:08:05,590
one the next one is obvious one is the

00:08:02,980 --> 00:08:06,640
duration how long the animation lasts it

00:08:05,590 --> 00:08:08,620
will be asked like okay it's a

00:08:06,640 --> 00:08:11,800
two-second is a one-second depending on

00:08:08,620 --> 00:08:13,570
the frame rate restrictions and the last

00:08:11,800 --> 00:08:17,020
one is the properties which is which CSS

00:08:13,570 --> 00:08:18,970
properties are getting animated so you

00:08:17,020 --> 00:08:20,710
can have like any pretty much CSS

00:08:18,970 --> 00:08:22,480
property right written here but the node

00:08:20,710 --> 00:08:24,640
on this one is not all the CSS

00:08:22,480 --> 00:08:26,680
properties are animatable and the ones

00:08:24,640 --> 00:08:28,840
which are animatable not all of them are

00:08:26,680 --> 00:08:30,490
as performant on every browser so you

00:08:28,840 --> 00:08:32,169
should be very careful of what

00:08:30,490 --> 00:08:35,380
properties you are actually animating

00:08:32,169 --> 00:08:39,430
most of the time your safe bet are four

00:08:35,380 --> 00:08:41,590
properties opacity translate Tran scale

00:08:39,430 --> 00:08:44,440
and rotate so the last one are all done

00:08:41,590 --> 00:08:46,360
through transform so if you if you most

00:08:44,440 --> 00:08:48,220
of like work you can 80% of the

00:08:46,360 --> 00:08:49,660
animation we are doing we can do it with

00:08:48,220 --> 00:08:53,210
this four thing and we should be

00:08:49,660 --> 00:08:55,580
considering them over anything else so

00:08:53,210 --> 00:08:57,290
that's they talk about communicating

00:08:55,580 --> 00:08:58,790
animation and designing animation and

00:08:57,290 --> 00:09:00,800
other thing now let's get into a

00:08:58,790 --> 00:09:03,320
nativity of how to develop a good

00:09:00,800 --> 00:09:04,670
animation so with the developer nature

00:09:03,320 --> 00:09:06,680
it's a really good time to be around

00:09:04,670 --> 00:09:08,990
like I mean there are so many options

00:09:06,680 --> 00:09:11,450
available to develop really good

00:09:08,990 --> 00:09:14,300
animations you start with first let's

00:09:11,450 --> 00:09:16,640
say what's available natively so one

00:09:14,300 --> 00:09:18,770
obvious one is CSS we must have used it

00:09:16,640 --> 00:09:21,430
at one point or another CSS animation

00:09:18,770 --> 00:09:23,420
there are three ways to animate in CSS

00:09:21,430 --> 00:09:25,360
animation transition and

00:09:23,420 --> 00:09:29,000
requestanimationframe

00:09:25,360 --> 00:09:31,850
they there there you go to kind of place

00:09:29,000 --> 00:09:33,230
it will work on every browser you don't

00:09:31,850 --> 00:09:35,480
need any third-party library they are

00:09:33,230 --> 00:09:37,640
very easy to use they are really

00:09:35,480 --> 00:09:39,050
hardware accelerated so it's like if you

00:09:37,640 --> 00:09:41,690
can do it with the CSS you should do it

00:09:39,050 --> 00:09:44,060
with the CSS the downside of it it's

00:09:41,690 --> 00:09:45,890
actually as as soon as your animation

00:09:44,060 --> 00:09:48,649
gets complex it's really hard to

00:09:45,890 --> 00:09:50,270
maintain you can't do like motion along

00:09:48,649 --> 00:09:52,850
the path or chaining a different

00:09:50,270 --> 00:09:55,130
animation or staggering very easily in

00:09:52,850 --> 00:09:57,200
CSS it's it's just it's extremely hard

00:09:55,130 --> 00:09:59,300
so that's the downside there are other

00:09:57,200 --> 00:10:02,150
native option available like canvas

00:09:59,300 --> 00:10:04,880
I mean canvas can do an amazing things

00:10:02,150 --> 00:10:06,050
I'm canvas ninjas out there in the web

00:10:04,880 --> 00:10:09,020
they've done an amazing thing with

00:10:06,050 --> 00:10:12,350
canvas but there are downside of canvas

00:10:09,020 --> 00:10:13,850
as well it's not responsive and it's not

00:10:12,350 --> 00:10:15,500
accessible as well

00:10:13,850 --> 00:10:17,060
so when you are considering like okay

00:10:15,500 --> 00:10:19,040
your production ready website you need

00:10:17,060 --> 00:10:21,140
to make it responsive well canvas may

00:10:19,040 --> 00:10:23,570
not be a choice all the time

00:10:21,140 --> 00:10:25,730
the other one is WebGL which is again

00:10:23,570 --> 00:10:28,250
like you can do a lot of 3d related cool

00:10:25,730 --> 00:10:31,430
stuff with WebGL the problem with WebGL

00:10:28,250 --> 00:10:33,770
also is underneath its uses uses canvas

00:10:31,430 --> 00:10:35,779
so it's the same limitation you actually

00:10:33,770 --> 00:10:38,540
like can't make it that accessible as

00:10:35,779 --> 00:10:40,370
well as responsive so that's that's the

00:10:38,540 --> 00:10:41,779
natively available obviously we have

00:10:40,370 --> 00:10:43,880
plethora of option available for

00:10:41,779 --> 00:10:45,890
third-party so we look at some of them

00:10:43,880 --> 00:10:49,040
the first and most obvious one is a

00:10:45,890 --> 00:10:52,100
green sock jiseop twin max twin light

00:10:49,040 --> 00:10:54,140
all of the same name green sock is like

00:10:52,100 --> 00:10:55,700
a defect oh stand the library for any

00:10:54,140 --> 00:10:57,290
animation that you want to do like it's

00:10:55,700 --> 00:10:58,279
been there forever I'll like it's ten

00:10:57,290 --> 00:10:59,810
years or something like it's been

00:10:58,279 --> 00:11:01,550
development and it's it's it's kind of

00:10:59,810 --> 00:11:03,079
like anything that you want to do on

00:11:01,550 --> 00:11:04,910
animation you can do it with green

00:11:03,079 --> 00:11:06,580
screen so it's it's got that many

00:11:04,910 --> 00:11:09,070
plugins available

00:11:06,580 --> 00:11:11,590
it's it's very performant at the same

00:11:09,070 --> 00:11:13,810
time like easy to use very easy to use

00:11:11,590 --> 00:11:15,820
the only downside it's a it's an

00:11:13,810 --> 00:11:17,800
external dependency and the license

00:11:15,820 --> 00:11:19,090
licensing model is a bit funny so you

00:11:17,800 --> 00:11:20,530
need to know which license you are using

00:11:19,090 --> 00:11:22,360
but it's a third party library it's a

00:11:20,530 --> 00:11:24,940
dependency on your project you have

00:11:22,360 --> 00:11:26,410
another like option like velocity JS

00:11:24,940 --> 00:11:29,200
which is kind of like green sock with

00:11:26,410 --> 00:11:32,560
less bells and whistles then you have

00:11:29,200 --> 00:11:34,540
more js3 J is very good for 3d animation

00:11:32,560 --> 00:11:36,430
and their huge number there react

00:11:34,540 --> 00:11:38,470
specific one like reacts better 3 s

00:11:36,430 --> 00:11:41,110
reacts a CSS transition group there's a

00:11:38,470 --> 00:11:43,060
react motion a lot of time available so

00:11:41,110 --> 00:11:45,280
but they all have like that plus and

00:11:43,060 --> 00:11:48,100
minuses as CSS is very performant easy

00:11:45,280 --> 00:11:49,660
to use not great for complex animation

00:11:48,100 --> 00:11:51,430
at the same time you have green shop

00:11:49,660 --> 00:11:54,640
which does everything but it's a

00:11:51,430 --> 00:11:58,480
external dependency so but there is a

00:11:54,640 --> 00:12:01,510
new upcoming API or a spec that w3c has

00:11:58,480 --> 00:12:03,880
been working on for some time and it's

00:12:01,510 --> 00:12:08,050
called web animation API called moppy

00:12:03,880 --> 00:12:10,780
and the premise for that it is like

00:12:08,050 --> 00:12:13,540
you'll be able to create and very easily

00:12:10,780 --> 00:12:15,580
a complex animation in native javascript

00:12:13,540 --> 00:12:17,710
without any third-party library and

00:12:15,580 --> 00:12:20,410
which gives you the same power of CSS

00:12:17,710 --> 00:12:22,000
same hardware accelerated way so that's

00:12:20,410 --> 00:12:25,450
that's the idea behind

00:12:22,000 --> 00:12:27,760
boppy so but the biggest question is can

00:12:25,450 --> 00:12:28,570
we use it like I mean if it's amazing

00:12:27,760 --> 00:12:31,570
where I can't use it

00:12:28,570 --> 00:12:34,570
are we ready to use it well vApp is

00:12:31,570 --> 00:12:36,340
relatively new I'll say relatively

00:12:34,570 --> 00:12:39,010
because it's like if the first draft

00:12:36,340 --> 00:12:43,180
came out in 2012 but as you can see the

00:12:39,010 --> 00:12:45,400
browser's are not very easy to catch on

00:12:43,180 --> 00:12:46,780
with that so right now we have a Firefox

00:12:45,400 --> 00:12:48,730
and Chrome pretty much implemented most

00:12:46,780 --> 00:12:52,390
of the major feature but at the same

00:12:48,730 --> 00:12:56,110
time I edge and Safari are in still in

00:12:52,390 --> 00:12:57,130
development so what's the deal here well

00:12:56,110 --> 00:12:59,290
the good news is

00:12:57,130 --> 00:13:02,170
boppy comes with very comprehensive and

00:12:59,290 --> 00:13:04,420
very reliable polyfill so with that

00:13:02,170 --> 00:13:06,880
polyfill we can actually start it using

00:13:04,420 --> 00:13:08,470
it at least play around with it or if

00:13:06,880 --> 00:13:09,670
you want like you know controller and I

00:13:08,470 --> 00:13:12,460
mean you can use it in a production as

00:13:09,670 --> 00:13:13,810
well so that's the thing I mean the

00:13:12,460 --> 00:13:15,310
first question will come like yeah but

00:13:13,810 --> 00:13:18,160
with polyfill why should I care about

00:13:15,310 --> 00:13:21,610
puppy so the thing is like

00:13:18,160 --> 00:13:23,260
when even though browsers right now like

00:13:21,610 --> 00:13:24,910
from the browser sort of thing it looks

00:13:23,260 --> 00:13:27,550
like very bleak situation that they are

00:13:24,910 --> 00:13:29,410
not catching up very fast but the thing

00:13:27,550 --> 00:13:31,540
is when it will be available fully

00:13:29,410 --> 00:13:33,700
supported by all the browsers this will

00:13:31,540 --> 00:13:35,620
be the fastest and most sharpest way to

00:13:33,700 --> 00:13:37,030
actually write an animation in native

00:13:35,620 --> 00:13:38,020
JavaScript without resorting to

00:13:37,030 --> 00:13:40,210
something like WebGL

00:13:38,020 --> 00:13:41,680
so it's definitely worth looking into it

00:13:40,210 --> 00:13:43,960
right now or playing around with it and

00:13:41,680 --> 00:13:45,660
it's so easy to start so in the next

00:13:43,960 --> 00:13:48,280
brief section I'll look into like few

00:13:45,660 --> 00:13:51,670
basic API is that we can actually get

00:13:48,280 --> 00:13:56,200
started using straightaway the first one

00:13:51,670 --> 00:13:58,570
is called element animate see if you

00:13:56,200 --> 00:14:00,250
want if you have one one element and you

00:13:58,570 --> 00:14:01,990
want to animate that or do anything like

00:14:00,250 --> 00:14:03,910
any small animation with it you can

00:14:01,990 --> 00:14:06,340
actually call an animate method on that

00:14:03,910 --> 00:14:08,560
element and then you pass the keyframes

00:14:06,340 --> 00:14:13,050
and you pass the options keyframes are

00:14:08,560 --> 00:14:13,050
your simple CSS keyframes like your

00:14:13,140 --> 00:14:17,620
strands are your qualities like your

00:14:15,400 --> 00:14:19,360
easy in all your iterations all your

00:14:17,620 --> 00:14:20,890
durations and stuff like that so you can

00:14:19,360 --> 00:14:22,960
pass this and that that's it that's all

00:14:20,890 --> 00:14:26,560
you need so let's look at the example

00:14:22,960 --> 00:14:28,600
here so for my example I'll be using

00:14:26,560 --> 00:14:30,640
react no specific reason it's just like

00:14:28,600 --> 00:14:34,870
react right now is probably one of the

00:14:30,640 --> 00:14:36,640
most widely used framework for a

00:14:34,870 --> 00:14:39,850
front-end application and at least it

00:14:36,640 --> 00:14:41,980
dominates my world so there it is so I

00:14:39,850 --> 00:14:43,810
have a react component here it's a

00:14:41,980 --> 00:14:46,420
simple deal and I just want to animate

00:14:43,810 --> 00:14:48,670
it like rotate it so basically all I am

00:14:46,420 --> 00:14:51,520
doing here is in a component did mount I

00:14:48,670 --> 00:14:53,770
have timing which are options I have a

00:14:51,520 --> 00:14:55,780
kree frame and I'm getting the element

00:14:53,770 --> 00:14:58,360
by reference and I'm passing doing

00:14:55,780 --> 00:15:00,940
calling the dot animate method passing

00:14:58,360 --> 00:15:04,840
the keyframe and timing and that's all I

00:15:00,940 --> 00:15:07,960
need so it's if it's a simple example of

00:15:04,840 --> 00:15:11,890
how easy you can get it started the next

00:15:07,960 --> 00:15:16,030
one is a keyframe effect so it's exactly

00:15:11,890 --> 00:15:18,120
like animation element on animate if you

00:15:16,030 --> 00:15:20,860
want to animate a single anime anime

00:15:18,120 --> 00:15:22,510
single element you can call a new

00:15:20,860 --> 00:15:24,280
keyframe effect rather than an element

00:15:22,510 --> 00:15:26,140
or dynamic and you pass that element as

00:15:24,280 --> 00:15:27,440
a first parameter so that's the only

00:15:26,140 --> 00:15:29,330
difference it will it will give you

00:15:27,440 --> 00:15:31,130
exact same effect once you have the

00:15:29,330 --> 00:15:32,780
keyframe effect then you create a new

00:15:31,130 --> 00:15:35,060
animation object and you pass that

00:15:32,780 --> 00:15:37,450
keyframe effect with the timeline your

00:15:35,060 --> 00:15:41,090
animation timeline that you want this

00:15:37,450 --> 00:15:42,950
animation to play on now it's the same

00:15:41,090 --> 00:15:43,880
thing what's the difference so there's a

00:15:42,950 --> 00:15:46,280
big difference here

00:15:43,880 --> 00:15:48,290
boppy is not just a replacement for CSS

00:15:46,280 --> 00:15:50,570
animation it can actually give us a lot

00:15:48,290 --> 00:15:52,730
more now that we have new animation

00:15:50,570 --> 00:15:54,290
every time you do new animation it

00:15:52,730 --> 00:15:56,360
actually creates an instance of an

00:15:54,290 --> 00:15:57,950
animation player in that animation

00:15:56,360 --> 00:16:00,050
player you can now store it in a

00:15:57,950 --> 00:16:01,640
variable what you can do with it is now

00:16:00,050 --> 00:16:04,220
you can call a different methods on it

00:16:01,640 --> 00:16:06,920
like he can start you can stop you can

00:16:04,220 --> 00:16:08,390
reverse you can cancel a lot of other

00:16:06,920 --> 00:16:10,100
callback properties that you can call as

00:16:08,390 --> 00:16:11,510
well on top of that so now it's like

00:16:10,100 --> 00:16:13,040
your video you have an interactive

00:16:11,510 --> 00:16:15,290
animation and you go and click something

00:16:13,040 --> 00:16:16,880
it stops or something like that so it's

00:16:15,290 --> 00:16:19,160
actually lot more than you can't do that

00:16:16,880 --> 00:16:20,960
easily in CSS this this is a power of

00:16:19,160 --> 00:16:23,690
mapping so we look at the one of the

00:16:20,960 --> 00:16:27,410
example of this different kind of state

00:16:23,690 --> 00:16:28,880
if I can find my mouse okay so I have an

00:16:27,410 --> 00:16:30,020
animation here it's a continuous

00:16:28,880 --> 00:16:32,330
animation all I'm doing is just

00:16:30,020 --> 00:16:34,580
animating a deer and I have a button

00:16:32,330 --> 00:16:37,040
here I click on it and it just pauses

00:16:34,580 --> 00:16:39,140
click on it it starts again this is a

00:16:37,040 --> 00:16:42,020
simple example so again what I've done

00:16:39,140 --> 00:16:44,570
it here is I have with you and on my

00:16:42,020 --> 00:16:48,200
component did mount I have this

00:16:44,570 --> 00:16:50,600
animation defined so I have a new effect

00:16:48,200 --> 00:16:52,430
keyframe effect then I have a new player

00:16:50,600 --> 00:16:53,870
I'm creating a new animation passing

00:16:52,430 --> 00:16:56,600
that effect with the current timeline

00:16:53,870 --> 00:16:59,060
and I'm just saying player dot play and

00:16:56,600 --> 00:17:00,950
you'll start playing the animation when

00:16:59,060 --> 00:17:03,440
someone clicks on a button on a handle

00:17:00,950 --> 00:17:05,870
click all I'm doing is if it is just

00:17:03,440 --> 00:17:07,970
toggling the state so either play if

00:17:05,870 --> 00:17:10,220
it's playing just stop playing or play a

00:17:07,970 --> 00:17:13,699
pause so it's it's that simple to

00:17:10,220 --> 00:17:15,650
manipulate the state of an animation so

00:17:13,699 --> 00:17:16,699
that's an example now so these are all

00:17:15,650 --> 00:17:18,709
the basic ones that are available

00:17:16,699 --> 00:17:21,530
straightaway on level-1 there's a lot

00:17:18,709 --> 00:17:23,060
more it boppy is a pretty comprehensive

00:17:21,530 --> 00:17:26,720
spec and there's a lot more you can do

00:17:23,060 --> 00:17:27,890
with it but with just these two to api's

00:17:26,720 --> 00:17:29,960
you can do a lot more as well

00:17:27,890 --> 00:17:31,790
there are took a couple of other node to

00:17:29,960 --> 00:17:34,820
and the API is that are coming in level

00:17:31,790 --> 00:17:37,460
two first one is a group effect which is

00:17:34,820 --> 00:17:39,140
worth noting here so you can still use

00:17:37,460 --> 00:17:40,640
it today if you want the only thing is

00:17:39,140 --> 00:17:41,270
you need an under polyfill for that it's

00:17:40,640 --> 00:17:43,640
called polyfill

00:17:41,270 --> 00:17:45,500
next and it's still under developer it's

00:17:43,640 --> 00:17:47,060
experimental so it may break it

00:17:45,500 --> 00:17:48,380
sometimes so you can use it you can

00:17:47,060 --> 00:17:49,880
start playing with it it's no problem

00:17:48,380 --> 00:17:52,370
with that the group effect is exactly

00:17:49,880 --> 00:17:54,920
like a keyframe effect the only

00:17:52,370 --> 00:17:56,990
difference is it takes another array of

00:17:54,920 --> 00:17:58,940
keyframe effect so what you can do is

00:17:56,990 --> 00:18:00,500
like when you say animation dot play all

00:17:58,940 --> 00:18:01,700
those animation all those keyframe

00:18:00,500 --> 00:18:03,830
effect will start playing at the same

00:18:01,700 --> 00:18:06,320
time so it's like you can actually play

00:18:03,830 --> 00:18:08,480
a lot of animation at the same time and

00:18:06,320 --> 00:18:10,280
the similar one next one is a sequence

00:18:08,480 --> 00:18:12,380
effect it's exactly like group effect

00:18:10,280 --> 00:18:13,700
but you can instead of playing all at

00:18:12,380 --> 00:18:16,160
once it's going to play it in sequence

00:18:13,700 --> 00:18:19,190
so now like you can do a lot more with

00:18:16,160 --> 00:18:21,530
that so you can some time a lot of like

00:18:19,190 --> 00:18:23,150
timeline happening of the animation you

00:18:21,530 --> 00:18:24,650
have one animation here and then it

00:18:23,150 --> 00:18:26,660
stops and it starts another you don't

00:18:24,650 --> 00:18:28,730
need to chain them manually you can do

00:18:26,660 --> 00:18:32,060
it all in one shot so that's a sequence

00:18:28,730 --> 00:18:37,880
effect so we spoke about like a very

00:18:32,060 --> 00:18:40,310
basic example of poppy and api's in the

00:18:37,880 --> 00:18:42,710
next brief section I'll talk about like

00:18:40,310 --> 00:18:44,450
some real world like examples that I've

00:18:42,710 --> 00:18:46,580
created just how easy it is to actually

00:18:44,450 --> 00:18:48,620
use it just with element or animal so

00:18:46,580 --> 00:18:50,570
first one I have is is a button here so

00:18:48,620 --> 00:18:53,960
it's like a feedback button so you click

00:18:50,570 --> 00:18:55,940
on this and instead of having a loading

00:18:53,960 --> 00:18:57,650
spinner it actually has its own loading

00:18:55,940 --> 00:19:00,560
bar and then once it's finished it's a

00:18:57,650 --> 00:19:02,300
social success so how would the code

00:19:00,560 --> 00:19:04,310
look like this so as you can see there

00:19:02,300 --> 00:19:06,710
are there are four things first one when

00:19:04,310 --> 00:19:08,960
I click the button the button resize it

00:19:06,710 --> 00:19:11,030
to smaller then loading bar animation

00:19:08,960 --> 00:19:13,100
shows then it goes back up third

00:19:11,030 --> 00:19:14,660
animation and then success comes in so

00:19:13,100 --> 00:19:16,340
that's for animation here they're

00:19:14,660 --> 00:19:17,690
happening one by one so I'm not using

00:19:16,340 --> 00:19:19,280
sequence II back and I'll just show you

00:19:17,690 --> 00:19:21,920
how it is done without that as well

00:19:19,280 --> 00:19:23,780
right now with just element element so

00:19:21,920 --> 00:19:26,720
what I've done is like I have four

00:19:23,780 --> 00:19:29,090
different keyframes so for different

00:19:26,720 --> 00:19:32,030
animation and then on a handle click all

00:19:29,090 --> 00:19:34,730
I'm doing is I'm playing the first

00:19:32,030 --> 00:19:36,020
animation then on on finish of that

00:19:34,730 --> 00:19:38,300
animation I'm just changing the

00:19:36,020 --> 00:19:39,920
animation so you this is on finish so

00:19:38,300 --> 00:19:42,050
you have a call that call on finish as

00:19:39,920 --> 00:19:43,850
well which then you can use to chain

00:19:42,050 --> 00:19:45,880
animations and change your states in

00:19:43,850 --> 00:19:50,390
between so it's it's as simple as that

00:19:45,880 --> 00:19:52,370
so next one is a loading animation so

00:19:50,390 --> 00:19:54,170
it's like just if you have a two balls

00:19:52,370 --> 00:19:54,950
just rotating is showing that something

00:19:54,170 --> 00:19:56,750
is in progress

00:19:54,950 --> 00:19:59,210
as you can see there are two animations

00:19:56,750 --> 00:20:00,770
happening here first one is like a blue

00:19:59,210 --> 00:20:03,680
ball or something and it goes into

00:20:00,770 --> 00:20:05,120
direction the other animation the second

00:20:03,680 --> 00:20:09,520
ball is exactly the same just in a

00:20:05,120 --> 00:20:12,530
reverse direction so yep so you'll be

00:20:09,520 --> 00:20:15,140
the code would be simple again like it's

00:20:12,530 --> 00:20:16,640
the keyframe and another frame and I'm

00:20:15,140 --> 00:20:18,800
all I'm doing is element don't animate

00:20:16,640 --> 00:20:22,520
the only difference here is the

00:20:18,800 --> 00:20:24,200
direction of a second ball is actually

00:20:22,520 --> 00:20:27,890
in Reverse that's it everything else is

00:20:24,200 --> 00:20:30,800
same for both so yep and last one is I

00:20:27,890 --> 00:20:32,900
have transition animation here so you

00:20:30,800 --> 00:20:34,970
can have a master page kind of like

00:20:32,900 --> 00:20:37,280
requirement and you can create something

00:20:34,970 --> 00:20:40,280
like that so as you can see on click of

00:20:37,280 --> 00:20:42,410
it actually it rotates the whole page or

00:20:40,280 --> 00:20:45,050
rotates in based on what the state is

00:20:42,410 --> 00:20:47,240
status and then it rotates a button

00:20:45,050 --> 00:20:48,770
itself in between as well so the code

00:20:47,240 --> 00:20:50,660
would be very simple for that as well so

00:20:48,770 --> 00:20:52,280
two animations are happening on a handle

00:20:50,660 --> 00:20:54,680
click I'm just going to based on the

00:20:52,280 --> 00:20:57,110
state either rotate rotate in or rotate

00:20:54,680 --> 00:20:58,700
out the animation and then on finish of

00:20:57,110 --> 00:21:01,100
that I will just rotate the button as

00:20:58,700 --> 00:21:03,260
well the green bar a little bit so again

00:21:01,100 --> 00:21:06,860
that's another simple very simple

00:21:03,260 --> 00:21:10,100
example of that so with that I will wrap

00:21:06,860 --> 00:21:11,960
up giving you few references to start

00:21:10,100 --> 00:21:13,940
like start looking at mozilla developer

00:21:11,960 --> 00:21:16,430
documentation is very comprehensive to

00:21:13,940 --> 00:21:18,590
start with and these are all few people

00:21:16,430 --> 00:21:21,740
that I like to follow Rachel never like

00:21:18,590 --> 00:21:23,600
they all either involved in rap expect

00:21:21,740 --> 00:21:25,190
in some way or another or some people

00:21:23,600 --> 00:21:27,110
are really good at like writing about

00:21:25,190 --> 00:21:29,030
animation like animation at work book by

00:21:27,110 --> 00:21:30,410
Rachel neighbors Rachel never also wrote

00:21:29,030 --> 00:21:32,330
the documentation on Mozilla developer

00:21:30,410 --> 00:21:33,410
so these are all like people you can

00:21:32,330 --> 00:21:35,470
start following there's a lot of

00:21:33,410 --> 00:21:38,720
discussions around vaping and in

00:21:35,470 --> 00:21:40,010
nowadays in the web as well so with that

00:21:38,720 --> 00:21:42,080
I'll finish it off like I just I'm

00:21:40,010 --> 00:21:43,790
really excited about like a day where I

00:21:42,080 --> 00:21:45,530
really don't have to use any third-party

00:21:43,790 --> 00:21:47,210
library and native JavaScript can give

00:21:45,530 --> 00:21:48,980
you an easy way to write a really

00:21:47,210 --> 00:21:50,660
complex animation so I hope I've

00:21:48,980 --> 00:21:52,490
actually inspired some people to start

00:21:50,660 --> 00:21:54,440
using boppy or at least animation in our

00:21:52,490 --> 00:21:56,650
day to day work thanks everyone for

00:21:54,440 --> 00:21:56,650
listening

00:21:57,070 --> 00:22:01,510
[Applause]

00:22:03,350 --> 00:22:06,440
[Music]

00:22:15,279 --> 00:22:18,529
No

00:22:16,629 --> 00:22:20,389
so no they come with a very

00:22:18,529 --> 00:22:21,860
comprehensive polyfill so there are two

00:22:20,389 --> 00:22:23,570
levels of polyfills are the first

00:22:21,860 --> 00:22:24,919
polyfill you can actually start using it

00:22:23,570 --> 00:22:28,639
which I'm using it on there like this

00:22:24,919 --> 00:22:30,139
this all these are the animation example

00:22:28,639 --> 00:22:31,789
of shown is actually I've developed on

00:22:30,139 --> 00:22:33,379
the website and it works are not pretty

00:22:31,789 --> 00:22:36,110
much all the browser's so with the

00:22:33,379 --> 00:22:37,730
polyfill is actually very stable in a

00:22:36,110 --> 00:22:39,379
way that they if they make any breaking

00:22:37,730 --> 00:22:41,119
changes they make sure that they have

00:22:39,379 --> 00:22:42,289
the backward compatibility and they make

00:22:41,119 --> 00:22:44,419
sure that it's available for three

00:22:42,289 --> 00:22:45,619
months at least so you get the console

00:22:44,419 --> 00:22:48,019
error but you have three months to fix

00:22:45,619 --> 00:22:51,369
it as well so I mean it's it's it's very

00:22:48,019 --> 00:22:51,369
comprehensive and reliable yeah

00:23:02,900 --> 00:23:06,960
so underline it actually if with the

00:23:05,370 --> 00:23:09,510
polyfill if the browser doesn't support

00:23:06,960 --> 00:23:12,780
it actually turns into a CSS so yes it

00:23:09,510 --> 00:23:14,760
is exactly like CSS but it's just a in

00:23:12,780 --> 00:23:18,140
CSS if the same thing you want to do you

00:23:14,760 --> 00:23:18,140
will be writing like a huge code

00:23:24,910 --> 00:23:29,210
if you're if you're having a performance

00:23:27,440 --> 00:23:30,920
in CSS you will have performance here

00:23:29,210 --> 00:23:36,740
but because it's exactly the same

00:23:30,920 --> 00:23:38,150
hardware-accelerated sorry yeah so at

00:23:36,740 --> 00:23:40,610
the end of the day it actually turns out

00:23:38,150 --> 00:23:43,820
like it uses the same way the CSS

00:23:40,610 --> 00:23:45,230
actually using the GPU so all the

00:23:43,820 --> 00:23:47,270
third-party library won't be able to use

00:23:45,230 --> 00:23:49,340
use the GPU CSS uses is that's why

00:23:47,270 --> 00:23:50,870
they're most performant this is exactly

00:23:49,340 --> 00:23:52,400
the same thing so that's the reason why

00:23:50,870 --> 00:23:54,980
when when it's available this will be

00:23:52,400 --> 00:23:56,810
the most performant way but yeah you

00:23:54,980 --> 00:23:58,430
still have to be careful on what what

00:23:56,810 --> 00:24:03,050
properties you're animating you could

00:23:58,430 --> 00:24:04,760
actually become depends on like if

00:24:03,050 --> 00:24:07,730
you're doing a huge animation of a page

00:24:04,760 --> 00:24:09,350
which will repaint the whole page like a

00:24:07,730 --> 00:24:12,340
color changes yeah it would be expensive

00:24:09,350 --> 00:24:12,340
so yeah

00:24:16,490 --> 00:24:23,380
thank you

00:24:19,000 --> 00:24:23,380

YouTube URL: https://www.youtube.com/watch?v=QoL4TgfzcCc


