Title: Let's Fix The Internet - Martin Bähr - FOSSASIA 2018
Publication date: 2018-03-24
Playlist: FOSSASIA Summit 2018
Description: 
	Speaker: Martin Bähr
Info: Martin Bähr

The Internet today is plagued by many problems. From viruses and spam, to identity theft and piracy.We can solve those problems.With a virtual operating system that runs the cloud, using blockchains to secure identities and data, a virtual network layer to protect against unauthorized network access, and a virtual machine to sandbox untrusted code.This talk will describe Elastos, an Operating System for the smart web.It will explore the approach that Elastos takes to achieve these goals, and gives a vision of a possible future internet.

Track: Blockchain
Room: Event Hall 2-1
Date: Saturday, 24th March, 2018

Event Page: http://2018.fossasia.org
Follow FOSSASIA on Twitter: https://twitter.com/fossasia/
Like FOSSASIA on Facebook: https://www.facebook.com/fossasia/ 

Produced by Engineers.SG
Captions: 
	00:00:01,639 --> 00:00:05,270
well can we start now

00:00:14,870 --> 00:00:26,490
it's like yeah okay all right good

00:00:22,290 --> 00:00:30,619
afternoon everyone my name is Martin

00:00:26,490 --> 00:00:32,820
bear I live in China and I came with my

00:00:30,619 --> 00:00:40,350
colleague - Frank she's sitting here in

00:00:32,820 --> 00:00:45,870
the front so I will talk about alas dose

00:00:40,350 --> 00:00:52,199
a project that Esther said may blow your

00:00:45,870 --> 00:00:53,909
mind before I talk about the last dose I

00:00:52,199 --> 00:00:56,159
want to talk a little bit about the

00:00:53,909 --> 00:00:58,440
Internet itself the history of the

00:00:56,159 --> 00:01:01,830
internet how it was evolved and how it

00:00:58,440 --> 00:01:05,280
came to be so basically the internet was

00:01:01,830 --> 00:01:10,500
built on trust when the internet was

00:01:05,280 --> 00:01:13,080
designed in the 60 70s it was kind of

00:01:10,500 --> 00:01:16,670
assumed that everyone who would ever get

00:01:13,080 --> 00:01:19,920
onto that network was a trusted person

00:01:16,670 --> 00:01:22,590
from some trusted institution and we

00:01:19,920 --> 00:01:24,270
knew we would know who everybody is and

00:01:22,590 --> 00:01:26,729
we could trust everyone and there's no

00:01:24,270 --> 00:01:32,479
bad people that would ever be able to

00:01:26,729 --> 00:01:32,479
use this and so nobody thought about

00:01:35,790 --> 00:01:41,960
huh what's happening nobody thought

00:01:39,690 --> 00:01:48,510
about making the Internet in any way

00:01:41,960 --> 00:01:53,280
safe and build protections against bad

00:01:48,510 --> 00:01:56,460
people so somebody at another conference

00:01:53,280 --> 00:02:00,390
gave a talk about IOT and he decide he

00:01:56,460 --> 00:02:02,760
described the internet as a coffee party

00:02:00,390 --> 00:02:04,380
so people think the Internet is like a

00:02:02,760 --> 00:02:07,320
coffee party everybody is nice and

00:02:04,380 --> 00:02:09,030
polite everybody's friendly and nobody

00:02:07,320 --> 00:02:12,680
steals anything and nobody does bad

00:02:09,030 --> 00:02:19,650
things because of that assumption

00:02:12,680 --> 00:02:23,040
because of believing that there are no

00:02:19,650 --> 00:02:24,570
bad people no protections were built in

00:02:23,040 --> 00:02:29,970
and so now we have a problem that we

00:02:24,570 --> 00:02:32,310
cannot keep the bad people out we have

00:02:29,970 --> 00:02:37,500
to deal with spam we have to deal with

00:02:32,310 --> 00:02:39,540
that denial of service attacks we have

00:02:37,500 --> 00:02:43,290
problems with cookies cookies are being

00:02:39,540 --> 00:02:45,000
abused cookies are so bad I don't know

00:02:43,290 --> 00:02:46,920
if you are aware of this here but in

00:02:45,000 --> 00:02:50,040
your in the European Union the European

00:02:46,920 --> 00:02:52,650
Union made a law that requires every

00:02:50,040 --> 00:02:56,670
website that uses cookies to have a

00:02:52,650 --> 00:02:58,650
message or notice to tell the visitor

00:02:56,670 --> 00:03:01,019
that we're using kid cookies and you

00:02:58,650 --> 00:03:04,680
have to approve that you understand what

00:03:01,019 --> 00:03:07,890
that means I don't think it changes

00:03:04,680 --> 00:03:12,660
anything but basically you have to think

00:03:07,890 --> 00:03:15,209
about that we as engineers we build

00:03:12,660 --> 00:03:19,620
something that is so bad that a

00:03:15,209 --> 00:03:23,070
government has made laws to warn the

00:03:19,620 --> 00:03:26,880
common people against the threats of

00:03:23,070 --> 00:03:30,110
what we built and the same thing might

00:03:26,880 --> 00:03:32,250
be coming with with IOT devices because

00:03:30,110 --> 00:03:34,340
effectively I would he made everything

00:03:32,250 --> 00:03:39,950
worse

00:03:34,340 --> 00:03:42,330
IOT devices are so hopelessly insecure

00:03:39,950 --> 00:03:44,760
that really the only thing you want to

00:03:42,330 --> 00:03:49,230
do the only thing you can do at this

00:03:44,760 --> 00:03:51,420
point is to try to just block

00:03:49,230 --> 00:03:55,379
IOT devices from being able to access

00:03:51,420 --> 00:03:57,569
the Internet entirely at scale the

00:03:55,379 --> 00:04:01,019
Southern California Linux Expo in Los

00:03:57,569 --> 00:04:03,239
Angeles two weeks ago John Holly gave a

00:04:01,019 --> 00:04:06,989
talk with the topic good fences make

00:04:03,239 --> 00:04:12,269
good neighbors in IOT and he was

00:04:06,989 --> 00:04:15,599
describing in in graphic detail in what

00:04:12,269 --> 00:04:25,430
we had to do in order to to protect his

00:04:15,599 --> 00:04:28,470
network from from bad IOT devices yeah

00:04:25,430 --> 00:04:32,940
I'll have a link to that talk in the in

00:04:28,470 --> 00:04:37,560
the slides so are you familiar with the

00:04:32,940 --> 00:04:41,160
OSI model of networking basically the

00:04:37,560 --> 00:04:43,199
OSI model describes seven Network layers

00:04:41,160 --> 00:04:45,090
there's a physical layer and the data

00:04:43,199 --> 00:04:47,039
link layer which is mostly your cables

00:04:45,090 --> 00:04:50,280
your your Wi-Fi signals and so on

00:04:47,039 --> 00:04:53,880
there's a network layer where you will

00:04:50,280 --> 00:04:56,340
run IP and basically or your internet

00:04:53,880 --> 00:05:01,349
connections a transport layer where you

00:04:56,340 --> 00:05:05,310
have the network protocols HTTP and SSL

00:05:01,349 --> 00:05:06,900
and so on session layer presentation

00:05:05,310 --> 00:05:08,250
layer an application layer it's

00:05:06,900 --> 00:05:10,500
basically the important thing to

00:05:08,250 --> 00:05:14,430
understand this that the bottom layers

00:05:10,500 --> 00:05:17,669
are mostly hardware their network layer

00:05:14,430 --> 00:05:21,330
and the transport layer partly are in

00:05:17,669 --> 00:05:24,090
the kernel and the rest is in your

00:05:21,330 --> 00:05:27,919
application so applications are taking

00:05:24,090 --> 00:05:27,919
care of those top layers and

00:05:31,250 --> 00:05:37,500
and what's most important is

00:05:33,860 --> 00:05:39,600
applications are responsible for making

00:05:37,500 --> 00:05:43,170
their own network connections secure so

00:05:39,600 --> 00:05:45,660
every application that is running is on

00:05:43,170 --> 00:05:47,310
its own responsible for making sure that

00:05:45,660 --> 00:05:49,500
it has a secure Network your web browser

00:05:47,310 --> 00:05:52,560
is using TLS to secure the network with

00:05:49,500 --> 00:05:55,320
the web server and your email client may

00:05:52,560 --> 00:05:57,900
use TLS or may not use TLS depending on

00:05:55,320 --> 00:05:59,610
how its configured to secure its network

00:05:57,900 --> 00:06:03,380
connection and every program whatever

00:05:59,610 --> 00:06:08,340
you install is responsible for its own

00:06:03,380 --> 00:06:11,340
and we have a TLS SSH PGP and different

00:06:08,340 --> 00:06:13,260
ways to secure different aspects of the

00:06:11,340 --> 00:06:16,590
network and you sometimes use multiple

00:06:13,260 --> 00:06:20,460
combinations of those to get the job

00:06:16,590 --> 00:06:24,590
done what is very important is that

00:06:20,460 --> 00:06:24,590
identification of

00:06:29,109 --> 00:06:36,709
identification of communication of

00:06:34,699 --> 00:06:39,079
partners identification of people that

00:06:36,709 --> 00:06:43,489
you are communicating with is happening

00:06:39,079 --> 00:06:47,419
within the application so an email for

00:06:43,489 --> 00:06:49,789
example they the decision who is sending

00:06:47,419 --> 00:06:54,859
an email who sent you an email is not

00:06:49,789 --> 00:06:57,679
made it's made by you as a as a reader

00:06:54,859 --> 00:06:59,589
of the email and by the email program by

00:06:57,679 --> 00:07:02,059
identifying the email address and

00:06:59,589 --> 00:07:04,819
effectively every application has its

00:07:02,059 --> 00:07:07,009
own user database SSH is using the

00:07:04,819 --> 00:07:08,360
system database in most cases but they

00:07:07,009 --> 00:07:11,179
could in theory use its own database

00:07:08,360 --> 00:07:12,919
most websites web services that run on

00:07:11,179 --> 00:07:15,919
the machine have their own user database

00:07:12,919 --> 00:07:17,929
the mail server has a different user

00:07:15,919 --> 00:07:20,689
database depending on how its configured

00:07:17,929 --> 00:07:22,699
they all have a different source of what

00:07:20,689 --> 00:07:24,529
identities is exists and I have I have

00:07:22,699 --> 00:07:26,119
an association identity have an email at

00:07:24,529 --> 00:07:27,709
entity I have a website entity I have

00:07:26,119 --> 00:07:29,629
like hundreds of different identities

00:07:27,709 --> 00:07:31,339
even though they're all on the same

00:07:29,629 --> 00:07:33,759
machine they're all doing different

00:07:31,339 --> 00:07:33,759
things

00:07:34,629 --> 00:07:44,989
spam effectively comes from the fact

00:07:39,079 --> 00:07:48,139
that there is no programmatic user

00:07:44,989 --> 00:07:50,719
identification when I receive an email

00:07:48,139 --> 00:07:53,839
only me as a reader can actually

00:07:50,719 --> 00:07:57,079
identify who is the sender of this email

00:07:53,839 --> 00:07:58,849
and sometimes I can use the email

00:07:57,079 --> 00:08:00,199
address but I cannot trust that email

00:07:58,849 --> 00:08:04,759
address spam can fake email addresses

00:08:00,199 --> 00:08:10,159
and so and a computer the software has

00:08:04,759 --> 00:08:14,869
no way to 100% to be hundred percent

00:08:10,159 --> 00:08:18,860
sure that some an email is sent from the

00:08:14,869 --> 00:08:21,439
person that it claims to be only I as a

00:08:18,860 --> 00:08:24,009
reader can potentially verify that and

00:08:21,439 --> 00:08:27,529
even I as a reader can sometimes not

00:08:24,009 --> 00:08:29,179
even do that if I don't know this person

00:08:27,529 --> 00:08:31,029
very well and I know exactly whether

00:08:29,179 --> 00:08:35,029
they're going to send me that or not

00:08:31,029 --> 00:08:38,149
denial of service attacks are even in

00:08:35,029 --> 00:08:40,339
one level a few levels lower they happen

00:08:38,149 --> 00:08:42,260
at the network level before even they

00:08:40,339 --> 00:08:44,029
get into the computer

00:08:42,260 --> 00:08:45,970
they just spam your computer with

00:08:44,029 --> 00:08:51,880
Network packages and there's nothing I

00:08:45,970 --> 00:08:56,570
can do on any machine to prevent that

00:08:51,880 --> 00:08:59,390
because by the time I can do anything

00:08:56,570 --> 00:09:01,220
about a bad network packet I or the

00:08:59,390 --> 00:09:03,140
packet already is clogging the network

00:09:01,220 --> 00:09:05,420
because it's already gone through the

00:09:03,140 --> 00:09:07,970
network I cannot stop the denial of

00:09:05,420 --> 00:09:11,440
service attacks at the source I cannot

00:09:07,970 --> 00:09:11,440
stop spam at the source

00:09:14,949 --> 00:09:23,000
so how do we get out of this mess by

00:09:20,120 --> 00:09:26,630
putting user identification first by

00:09:23,000 --> 00:09:29,899
creating an operating system that allows

00:09:26,630 --> 00:09:34,750
applications to be built on a user first

00:09:29,899 --> 00:09:37,310
paradigm so any kind of networking

00:09:34,750 --> 00:09:39,680
happens before any kind of networking

00:09:37,310 --> 00:09:41,690
happens the applications have to

00:09:39,680 --> 00:09:44,420
identify the communication partners and

00:09:41,690 --> 00:09:51,920
verify that this communication is is

00:09:44,420 --> 00:09:55,160
what we want to do so quickly what is

00:09:51,920 --> 00:09:57,970
the last knows how we're doing it first

00:09:55,160 --> 00:10:01,070
of all this is a complete set of C++ API

00:09:57,970 --> 00:10:06,860
and ran and frameworks

00:10:01,070 --> 00:10:09,920
it's a operating system runtime that can

00:10:06,860 --> 00:10:15,110
that provides end-to-end security across

00:10:09,920 --> 00:10:16,910
a peer-to-peer network and it's designed

00:10:15,110 --> 00:10:19,120
for containers and in virtual machines

00:10:16,910 --> 00:10:22,970
so it can run in any kind of environment

00:10:19,120 --> 00:10:27,230
it can also run natively and it uses

00:10:22,970 --> 00:10:33,920
blockchain for user identities and other

00:10:27,230 --> 00:10:37,579
authentication very quickly the C++ API

00:10:33,920 --> 00:10:40,970
in frameworks and basically it's sandbox

00:10:37,579 --> 00:10:43,069
at a sea level so we are now app

00:10:40,970 --> 00:10:46,430
developers to write applications in C

00:10:43,069 --> 00:10:48,589
and C++ but we're still able to provide

00:10:46,430 --> 00:10:50,750
a sandboxed environment for those

00:10:48,589 --> 00:10:56,600
applications they're running inside our

00:10:50,750 --> 00:10:59,420
sandbox and we have a runtime inspection

00:10:56,600 --> 00:11:04,760
system that allows distributed apps to

00:10:59,420 --> 00:11:07,670
to talk to each other and to in order to

00:11:04,760 --> 00:11:09,769
get there we rewrote the whole Android

00:11:07,670 --> 00:11:14,730
stuck in C++

00:11:09,769 --> 00:11:18,210
I think about that one for a moment

00:11:14,730 --> 00:11:19,830
do you know how big Android is the whole

00:11:18,210 --> 00:11:22,050
Android stack the whole Android

00:11:19,830 --> 00:11:23,760
frameworks I think it's about 10 million

00:11:22,050 --> 00:11:25,200
lines of code or something like that so

00:11:23,760 --> 00:11:31,320
the whole thing has been rewritten in

00:11:25,200 --> 00:11:33,300
C++ when I first heard that I thought

00:11:31,320 --> 00:11:38,660
these guys are either crazy or they're

00:11:33,300 --> 00:11:40,920
genius or both so why did I do that

00:11:38,660 --> 00:11:44,790
performance memory footprint so we're

00:11:40,920 --> 00:11:46,970
targeting primarily IOT devices because

00:11:44,790 --> 00:11:49,530
they are there the need is the greatest

00:11:46,970 --> 00:11:52,770
so we want the system to be small and

00:11:49,530 --> 00:11:54,420
compact and allow IOT developers to

00:11:52,770 --> 00:11:56,430
write small and compact and fast

00:11:54,420 --> 00:12:00,890
applications that don't need many

00:11:56,430 --> 00:12:04,560
resources we want to enable developers

00:12:00,890 --> 00:12:06,330
who are at this point mostly used to

00:12:04,560 --> 00:12:09,180
writing Android applications to be able

00:12:06,330 --> 00:12:10,740
to write C++ applications in the same

00:12:09,180 --> 00:12:12,750
style that they already learned from

00:12:10,740 --> 00:12:14,970
writing Android applications and we also

00:12:12,750 --> 00:12:18,510
want to enable porting Android

00:12:14,970 --> 00:12:20,790
applications directly to Alaska so we

00:12:18,510 --> 00:12:22,050
can run native Android applications and

00:12:20,790 --> 00:12:25,500
you can use Java to write your

00:12:22,050 --> 00:12:31,170
applications but for a small IOT device

00:12:25,500 --> 00:12:34,130
you wouldn't really want that the

00:12:31,170 --> 00:12:37,290
disturber that OS runtime so basically

00:12:34,130 --> 00:12:41,540
we're building a network on top of the

00:12:37,290 --> 00:12:48,150
Internet and we're using peer-to-peer to

00:12:41,540 --> 00:12:51,960
to connect devices and nodes and the

00:12:48,150 --> 00:12:53,910
idea is yes so we're providing

00:12:51,960 --> 00:12:58,940
end-to-end security across that network

00:12:53,910 --> 00:13:00,320
and when a network connection happens so

00:12:58,940 --> 00:13:03,750
sorry

00:13:00,320 --> 00:13:07,140
the key point is we prohibit apps from

00:13:03,750 --> 00:13:08,190
doing their own networking so all the

00:13:07,140 --> 00:13:09,360
networking is going through the

00:13:08,190 --> 00:13:11,970
operating system and this is the

00:13:09,360 --> 00:13:16,460
important part every network connection

00:13:11,970 --> 00:13:16,460
is approved by the operating system so

00:13:17,270 --> 00:13:24,810
applications no longer do their own

00:13:20,040 --> 00:13:26,940
networking and that addresses the

00:13:24,810 --> 00:13:28,120
problem enquired so now I'm going to

00:13:26,940 --> 00:13:29,830
explain

00:13:28,120 --> 00:13:34,000
a little more detail so you've seen that

00:13:29,830 --> 00:13:37,089
slide before and when it last us comes

00:13:34,000 --> 00:13:40,300
into the picture it looks like this so

00:13:37,089 --> 00:13:42,190
alas this is taking over those middle

00:13:40,300 --> 00:13:44,320
layers transport session and

00:13:42,190 --> 00:13:45,460
presentation layer pretty much and part

00:13:44,320 --> 00:13:47,740
of the application layer and the

00:13:45,460 --> 00:13:49,480
applications really are mostly

00:13:47,740 --> 00:13:51,670
responsible for the user interface for

00:13:49,480 --> 00:13:53,320
the application logic but they're no

00:13:51,670 --> 00:13:56,830
longer responsible for networking

00:13:53,320 --> 00:13:58,420
networking is effectively the same in

00:13:56,830 --> 00:14:00,420
every application so there's no need to

00:13:58,420 --> 00:14:04,110
repeat all that into every application

00:14:00,420 --> 00:14:07,600
and so we are providing the networking

00:14:04,110 --> 00:14:11,520
as a service to the application and the

00:14:07,600 --> 00:14:11,520
applications themselves just use that

00:14:11,790 --> 00:14:19,410
and so what we achieve by doing that is

00:14:16,420 --> 00:14:22,000
we're able to move the user and if

00:14:19,410 --> 00:14:31,440
identification away from the application

00:14:22,000 --> 00:14:34,779
layer we're basically letting the apps

00:14:31,440 --> 00:14:36,940
specify that they want to talk to a

00:14:34,779 --> 00:14:40,110
certain identity if I want to send a

00:14:36,940 --> 00:14:42,490
message to you then I will have your

00:14:40,110 --> 00:14:47,380
identity in some form as a cryptographic

00:14:42,490 --> 00:14:48,970
key and then the application sends a

00:14:47,380 --> 00:14:51,089
request to the operating system that I

00:14:48,970 --> 00:14:53,800
want to send a message to this person

00:14:51,089 --> 00:14:55,510
and then the operating system will use

00:14:53,800 --> 00:14:57,459
the peer-to-peer network to find that

00:14:55,510 --> 00:14:59,350
identities there's no more IP addresses

00:14:57,459 --> 00:15:01,740
involved I mean yes in the lower level

00:14:59,350 --> 00:15:04,360
of course there's IP but for the

00:15:01,740 --> 00:15:06,070
applications the IP address is no longer

00:15:04,360 --> 00:15:07,900
matter the applications don't say I want

00:15:06,070 --> 00:15:09,940
to talk to this IP address they just say

00:15:07,900 --> 00:15:12,130
I want to talk to this identity the

00:15:09,940 --> 00:15:13,839
operating system goes out and finds the

00:15:12,130 --> 00:15:15,370
identity wherever it might be it could

00:15:13,839 --> 00:15:17,470
be moving around from one machine to

00:15:15,370 --> 00:15:19,029
another it's certainly gonna move around

00:15:17,470 --> 00:15:20,980
from one IP address to another because

00:15:19,029 --> 00:15:22,420
depending on where you are your mobile

00:15:20,980 --> 00:15:24,490
phone or your computer may have a

00:15:22,420 --> 00:15:27,220
different IP address and once it found

00:15:24,490 --> 00:15:29,860
that identity and basically with the key

00:15:27,220 --> 00:15:33,279
exchange verified for this is the

00:15:29,860 --> 00:15:34,779
correct identity and also then both

00:15:33,279 --> 00:15:36,820
sides has verified that they actually

00:15:34,779 --> 00:15:39,850
approve for this communication to happen

00:15:36,820 --> 00:15:42,130
only after that the application itself

00:15:39,850 --> 00:15:46,000
will be able to send a message to that

00:15:42,130 --> 00:15:48,700
recipient and so this authentication the

00:15:46,000 --> 00:15:51,370
verification happens in the beginning so

00:15:48,700 --> 00:15:53,110
that basically we can approve that we

00:15:51,370 --> 00:15:56,290
are communication partners and then

00:15:53,110 --> 00:15:58,180
after that the operating system just

00:15:56,290 --> 00:16:00,010
checks that all these checks are in

00:15:58,180 --> 00:16:01,720
place and as a user I don't actually

00:16:00,010 --> 00:16:06,490
notice that there's something going on

00:16:01,720 --> 00:16:09,040
the message just gets sent so the

00:16:06,490 --> 00:16:10,570
connections are only open after the user

00:16:09,040 --> 00:16:12,280
IDs have been verified and the

00:16:10,570 --> 00:16:15,430
connection has been approved and so this

00:16:12,280 --> 00:16:17,860
way we basically prevent any form of

00:16:15,430 --> 00:16:19,500
spam denial of service attacks worms

00:16:17,860 --> 00:16:22,180
viruses and what have you because

00:16:19,500 --> 00:16:25,870
applications cannot just do what they

00:16:22,180 --> 00:16:28,180
want on the internet and instead of

00:16:25,870 --> 00:16:32,100
having identities on the application

00:16:28,180 --> 00:16:34,840
level we have a kind of network-wide

00:16:32,100 --> 00:16:37,350
system of identities that can be

00:16:34,840 --> 00:16:40,830
verified through

00:16:37,350 --> 00:16:40,830
cryptographic keys

00:16:46,639 --> 00:16:55,350
okay continuing the runtime so basically

00:16:52,350 --> 00:16:58,259
you can imagine if you're familiar with

00:16:55,350 --> 00:16:59,879
Java the java virtual machine it's kind

00:16:58,259 --> 00:17:04,679
of like a java virtual machine but it's

00:16:59,879 --> 00:17:08,370
a c c++ virtual machine and runtime and

00:17:04,679 --> 00:17:10,140
so there's no need to break out of that

00:17:08,370 --> 00:17:12,029
virtual machine or in order to write

00:17:10,140 --> 00:17:15,149
native code that's a problem java has

00:17:12,029 --> 00:17:17,429
you have occasionally a situation where

00:17:15,149 --> 00:17:19,079
java runtime doesn't provide what you

00:17:17,429 --> 00:17:23,429
need and you need to write some stuff in

00:17:19,079 --> 00:17:25,439
C++ or C and then you break out of this

00:17:23,429 --> 00:17:27,270
Java runtime and use a jabber native

00:17:25,439 --> 00:17:29,130
interface to write native code and so we

00:17:27,270 --> 00:17:31,649
don't need to do that because we already

00:17:29,130 --> 00:17:34,669
are at the C++ C level and so you can

00:17:31,649 --> 00:17:38,460
basically always stay within the sandbox

00:17:34,669 --> 00:17:44,159
in order to do everything that you need

00:17:38,460 --> 00:17:46,289
to do yeah so it's kind of like

00:17:44,159 --> 00:17:48,510
providing a hybrid programming model

00:17:46,289 --> 00:17:51,270
where you can write in C C++ you can

00:17:48,510 --> 00:17:53,340
write in any kind of runtime language

00:17:51,270 --> 00:17:55,679
scripting language Python Ruby or

00:17:53,340 --> 00:17:58,200
anything else you like you can write in

00:17:55,679 --> 00:18:00,840
Java or any other language basically

00:17:58,200 --> 00:18:04,549
anything that can potentially compile to

00:18:00,840 --> 00:18:07,740
C which is pretty much everything and

00:18:04,549 --> 00:18:12,450
you get kind of like an an Android like

00:18:07,740 --> 00:18:14,520
programming environment and feeling like

00:18:12,450 --> 00:18:16,470
you're you're programming for Android

00:18:14,520 --> 00:18:21,270
but you're doing it in C++ or in other

00:18:16,470 --> 00:18:23,250
languages now where does the blockchain

00:18:21,270 --> 00:18:30,120
come in I've already mentioned the

00:18:23,250 --> 00:18:32,250
blockchain is used for once for managing

00:18:30,120 --> 00:18:35,399
user ID so reporter put the user ids

00:18:32,250 --> 00:18:37,799
onto the blockchain and then we're using

00:18:35,399 --> 00:18:41,909
the blockchain to to verify that these

00:18:37,799 --> 00:18:44,309
ids are genuine and are the ones that we

00:18:41,909 --> 00:18:46,620
want to talk to there are other uses for

00:18:44,309 --> 00:18:49,020
the blockchain and one example is

00:18:46,620 --> 00:18:51,450
digital asset management so what we're

00:18:49,020 --> 00:18:53,429
doing is we're actually we're on top of

00:18:51,450 --> 00:18:56,370
just using the blockchain for our

00:18:53,429 --> 00:18:59,159
networking we're also providing a

00:18:56,370 --> 00:19:00,779
blockchain development environment so

00:18:59,159 --> 00:19:03,690
you can write blockchain applications

00:19:00,779 --> 00:19:05,580
but the key point is were not only about

00:19:03,690 --> 00:19:07,200
blockchain applications you can write

00:19:05,580 --> 00:19:10,110
blockchain applications you can write

00:19:07,200 --> 00:19:11,309
regular applications that just do

00:19:10,110 --> 00:19:13,169
networking you can write applications

00:19:11,309 --> 00:19:15,360
that don't do networking if you don't

00:19:13,169 --> 00:19:18,090
need to you can write any kind of

00:19:15,360 --> 00:19:20,880
applications like in in any kind of

00:19:18,090 --> 00:19:24,750
development system like in Android and

00:19:20,880 --> 00:19:28,350
the blockchain is just part of the set

00:19:24,750 --> 00:19:32,330
of features that are being offered to to

00:19:28,350 --> 00:19:36,559
application writers and there's also

00:19:32,330 --> 00:19:42,360
poins to to enable trading and to enable

00:19:36,559 --> 00:19:49,340
market like applications and and things

00:19:42,360 --> 00:19:53,190
like that I want to expand on this thing

00:19:49,340 --> 00:19:56,490
what we call digital assets that's kind

00:19:53,190 --> 00:19:59,490
of a key point from a free software

00:19:56,490 --> 00:20:03,659
perspective because basically if you

00:19:59,490 --> 00:20:06,419
look at today we have a few types of

00:20:03,659 --> 00:20:09,419
digital content and a few ways to share

00:20:06,419 --> 00:20:12,270
digital content and one is I'm free to

00:20:09,419 --> 00:20:14,580
share which is new which you probably

00:20:12,270 --> 00:20:18,059
all know Creative Commons where you can

00:20:14,580 --> 00:20:20,700
basically share and do pretty much

00:20:18,059 --> 00:20:26,399
whatever you want with it as long as you

00:20:20,700 --> 00:20:31,230
follow the license and then there is DRM

00:20:26,399 --> 00:20:33,809
free which is you can share it but it's

00:20:31,230 --> 00:20:35,460
actually you're not legally allowed to

00:20:33,809 --> 00:20:37,970
share it I mean it's like it's like you

00:20:35,460 --> 00:20:40,320
can copy it but then you would be

00:20:37,970 --> 00:20:47,210
breaking the law but nobody is stopping

00:20:40,320 --> 00:20:47,210
you from from doing it and then we have

00:20:47,390 --> 00:20:51,740
leased and title control for

00:20:49,620 --> 00:20:54,210
distributors digital rights management

00:20:51,740 --> 00:20:56,970
or digital restriction management

00:20:54,210 --> 00:21:03,179
however you want to call that where the

00:20:56,970 --> 00:21:05,730
the the distributor controls what you do

00:21:03,179 --> 00:21:06,960
with the content that you receive them I

00:21:05,730 --> 00:21:10,380
don't know if you still remember the

00:21:06,960 --> 00:21:14,350
story when Amazon

00:21:10,380 --> 00:21:17,320
decided to delete a book 1984 from

00:21:14,350 --> 00:21:19,720
everybody's Kindle devices and so you

00:21:17,320 --> 00:21:21,010
bought that book and you were maybe in

00:21:19,720 --> 00:21:23,200
the middle of reading it and then

00:21:21,010 --> 00:21:24,880
ominous and decides that we're

00:21:23,200 --> 00:21:26,289
terminating that license and we're just

00:21:24,880 --> 00:21:28,659
going to take it away from everybody

00:21:26,289 --> 00:21:30,490
that's what DRM gives you and that's

00:21:28,659 --> 00:21:34,539
what we don't want so with the

00:21:30,490 --> 00:21:38,770
blockchain we can offer another

00:21:34,539 --> 00:21:40,779
alternative the blockchain allows us to

00:21:38,770 --> 00:21:43,899
track ownership of a piece of digital

00:21:40,779 --> 00:21:47,380
content and because we can track the

00:21:43,899 --> 00:21:52,870
ownership that means we can allow the

00:21:47,380 --> 00:21:55,539
reselling of content which enables this

00:21:52,870 --> 00:21:59,500
secondary market which in the world of

00:21:55,539 --> 00:22:01,630
books used to be a big issue that when

00:21:59,500 --> 00:22:03,669
you buy a book and whether were you

00:22:01,630 --> 00:22:05,799
allowed to resell the book that you

00:22:03,669 --> 00:22:08,230
bought or not they have been lawsuits

00:22:05,799 --> 00:22:10,270
fought about that and at least in the

00:22:08,230 --> 00:22:11,950
u.s. it has been weight very clear that

00:22:10,270 --> 00:22:14,620
there is no way that you can prevent

00:22:11,950 --> 00:22:16,450
anybody from reselling a book that they

00:22:14,620 --> 00:22:20,289
ever bought I don't know how it is in

00:22:16,450 --> 00:22:23,320
Singapore and in other countries it may

00:22:20,289 --> 00:22:25,990
be the same or worse but the point is

00:22:23,320 --> 00:22:29,919
with digital assets on the blockchain we

00:22:25,990 --> 00:22:32,230
enabled this same mechanism where when

00:22:29,919 --> 00:22:33,700
you own when you buy a piece of digital

00:22:32,230 --> 00:22:37,000
content whether it's a book or a movie

00:22:33,700 --> 00:22:39,539
or something else or a program you are

00:22:37,000 --> 00:22:43,840
able to resell it because you can prove

00:22:39,539 --> 00:22:45,789
that you made that sale and programs

00:22:43,840 --> 00:22:47,470
that read your digital content they can

00:22:45,789 --> 00:22:49,090
verify on the blockchain whether you

00:22:47,470 --> 00:22:50,559
still have the permission to read it or

00:22:49,090 --> 00:22:53,860
whether you sold it and you don't

00:22:50,559 --> 00:22:56,020
actually have it anymore the important

00:22:53,860 --> 00:22:59,830
part is that we're taking away the

00:22:56,020 --> 00:23:02,200
control from these distributors to

00:22:59,830 --> 00:23:04,090
decide what happens with this content

00:23:02,200 --> 00:23:06,340
and we're giving that control to the

00:23:04,090 --> 00:23:10,440
consumer who is buying the content who

00:23:06,340 --> 00:23:10,440
can then decide who to give it to next

00:23:14,130 --> 00:23:22,830
a bit about the history

00:23:19,100 --> 00:23:27,389
Alaska's development started around the

00:23:22,830 --> 00:23:31,259
year 2000 as a research project at Ching

00:23:27,389 --> 00:23:33,269
hai University in Beijing and they were

00:23:31,259 --> 00:23:36,320
trying to build a smartphone operating

00:23:33,269 --> 00:23:40,559
system and when iOS and Android came out

00:23:36,320 --> 00:23:44,330
they stopped working on that to thank

00:23:40,559 --> 00:23:49,549
may have some more details on that story

00:23:44,330 --> 00:23:49,549
then in 2012 development was restarted

00:23:49,820 --> 00:23:56,039
it was then it received thirty million

00:23:52,889 --> 00:23:58,860
dollars funding by Foxconn and it

00:23:56,039 --> 00:24:00,539
reached beta status so there's 30

00:23:58,860 --> 00:24:04,559
million dollars were basically used to

00:24:00,539 --> 00:24:12,779
at least as my understanding is were

00:24:04,559 --> 00:24:15,600
used to rewrite at Android runtime so we

00:24:12,779 --> 00:24:19,980
got we gotta lastest running natively on

00:24:15,600 --> 00:24:22,259
a bunch of devices beta status that

00:24:19,980 --> 00:24:24,299
phone actually have it here if somebody

00:24:22,259 --> 00:24:29,639
wants to take a look later running

00:24:24,299 --> 00:24:32,490
alaska's natively although now i didn't

00:24:29,639 --> 00:24:34,379
mention that before alaska's will not

00:24:32,490 --> 00:24:35,940
run natively on the phones that's not

00:24:34,379 --> 00:24:37,620
our target at the moment although

00:24:35,940 --> 00:24:41,850
technically could but we're actually

00:24:37,620 --> 00:24:43,049
building a Android and iOS runtime

00:24:41,850 --> 00:24:45,809
environment that you can basically

00:24:43,049 --> 00:24:48,870
install into your android phone into

00:24:45,809 --> 00:24:51,299
your iOS phone and then run a lastest

00:24:48,870 --> 00:24:53,759
apps within that environment so you

00:24:51,299 --> 00:24:55,259
don't have to flash your phone with a

00:24:53,759 --> 00:25:01,529
new operating system because nobody

00:24:55,259 --> 00:25:03,860
really wants to do that so the auction

00:25:01,529 --> 00:25:08,940
development started last year in 2017

00:25:03,860 --> 00:25:13,110
there was private funding round funded

00:25:08,940 --> 00:25:15,360
with from Bitcoin investors and in in

00:25:13,110 --> 00:25:17,460
January we had an ICO we got the more

00:25:15,360 --> 00:25:19,529
some more bitcoins and you can already

00:25:17,460 --> 00:25:22,169
see from the numbers the ICO was not

00:25:19,529 --> 00:25:23,580
done to get money in order to fund the

00:25:22,169 --> 00:25:26,130
project because we already had a bunch

00:25:23,580 --> 00:25:28,200
of money but it was more than two

00:25:26,130 --> 00:25:31,350
to get mine share and to get people

00:25:28,200 --> 00:25:34,140
actually interested in the project and

00:25:31,350 --> 00:25:37,280
so the roadmap is currently we're

00:25:34,140 --> 00:25:39,630
working on the peer-to-peer network I've

00:25:37,280 --> 00:25:42,690
seen the reports from the developers

00:25:39,630 --> 00:25:45,660
that this is already now in a working

00:25:42,690 --> 00:25:48,510
state and there's work done with the

00:25:45,660 --> 00:25:51,320
development partners to build strategic

00:25:48,510 --> 00:25:58,560
applications that we want in the

00:25:51,320 --> 00:26:01,560
ecosystem the the blockchain part is

00:25:58,560 --> 00:26:04,770
being worked on you're adding features

00:26:01,560 --> 00:26:06,450
like side chains so that blockchain

00:26:04,770 --> 00:26:08,910
applications don't have to put

00:26:06,450 --> 00:26:10,680
everything on the main chain we're

00:26:08,910 --> 00:26:12,930
building a framework for web

00:26:10,680 --> 00:26:16,650
applications so that you can run apps

00:26:12,930 --> 00:26:19,560
within the browser in the same and still

00:26:16,650 --> 00:26:22,070
have the same advantages and there's

00:26:19,560 --> 00:26:25,320
gonna be the the public minding of the

00:26:22,070 --> 00:26:32,250
illa tokens will start at the end of the

00:26:25,320 --> 00:26:34,590
year so that's pretty much it if you

00:26:32,250 --> 00:26:36,120
download the slides I have trouble

00:26:34,590 --> 00:26:38,730
uploading them but I will try to get

00:26:36,120 --> 00:26:40,230
them uploaded before the conference ends

00:26:38,730 --> 00:26:43,020
or at least a few days after the

00:26:40,230 --> 00:26:51,000
conference then you can get all these

00:26:43,020 --> 00:26:56,120
links from the slides the resource links

00:26:51,000 --> 00:27:02,370
is mostly a github and Alaska's website

00:26:56,120 --> 00:27:05,910
and yeah with that I want to close just

00:27:02,370 --> 00:27:08,910
one more thing I've been giving this

00:27:05,910 --> 00:27:12,110
given this talk at a few conferences now

00:27:08,910 --> 00:27:14,910
and everywhere I go I'm trying to

00:27:12,110 --> 00:27:16,590
assemble all the people who are working

00:27:14,910 --> 00:27:18,540
with blockchain in the free software

00:27:16,590 --> 00:27:20,880
community because I have a feeling that

00:27:18,540 --> 00:27:23,250
there's not enough free software in the

00:27:20,880 --> 00:27:26,640
blockchain world blockchain world is

00:27:23,250 --> 00:27:29,310
dominated by by investors by IC OS by

00:27:26,640 --> 00:27:32,340
token trading and there's not enough

00:27:29,310 --> 00:27:35,670
focus on development on focus on free

00:27:32,340 --> 00:27:40,020
software focus on on the ideals that the

00:27:35,670 --> 00:27:43,740
free software community wants to

00:27:40,020 --> 00:27:49,710
share and so I want to get us together

00:27:43,740 --> 00:27:51,480
and to that and at the end of this track

00:27:49,710 --> 00:27:55,039
tomorrow afternoon after the last

00:27:51,480 --> 00:27:59,220
blockchain talk we're going to have a a

00:27:55,039 --> 00:28:03,030
a meet-up of all people who are

00:27:59,220 --> 00:28:05,880
interested in blockchain development to

00:28:03,030 --> 00:28:09,330
share what we can do as a community to

00:28:05,880 --> 00:28:10,830
strengthen our case in the in the

00:28:09,330 --> 00:28:14,159
blockchain world and in the world as

00:28:10,830 --> 00:28:16,350
such and also just mentioning there's

00:28:14,159 --> 00:28:18,059
going to be a blockchain track at Hong

00:28:16,350 --> 00:28:21,240
Kong open-source conference in June and

00:28:18,059 --> 00:28:23,010
I'm also preparing one for the cost Cup

00:28:21,240 --> 00:28:26,000
in Taiwan and I'm still looking for

00:28:23,010 --> 00:28:28,730
volunteers to to help me with that

00:28:26,000 --> 00:28:32,640
that's it you've already seen this slide

00:28:28,730 --> 00:28:34,559
about me and drew Fang as I mentioned

00:28:32,640 --> 00:28:36,990
she's here she has been working on a

00:28:34,559 --> 00:28:39,600
last dose very very early in the years

00:28:36,990 --> 00:28:41,159
2003 to 2006 so she can tell you a

00:28:39,600 --> 00:28:43,250
little bit about the early history of

00:28:41,159 --> 00:28:47,960
alas dose and she rejoined the project

00:28:43,250 --> 00:28:53,360
this year as a program product manager

00:28:47,960 --> 00:28:53,360
yeah and they're links to the slides so

00:28:54,559 --> 00:28:57,559
questions

00:28:59,980 --> 00:29:04,179
this is a programmer is there anything

00:29:02,380 --> 00:29:06,120
about using elasto so you have to change

00:29:04,179 --> 00:29:07,590
your mental model or

00:29:06,120 --> 00:29:11,309
[Music]

00:29:07,590 --> 00:29:13,110
our treats network access um yes you

00:29:11,309 --> 00:29:15,090
will have to change your your mental

00:29:13,110 --> 00:29:17,210
model as far as network access is

00:29:15,090 --> 00:29:22,950
concerned because you're no longer

00:29:17,210 --> 00:29:24,929
thinking about say the most common way

00:29:22,950 --> 00:29:27,929
to work with today is that you have some

00:29:24,929 --> 00:29:30,720
kind of URL and the URL specifies a host

00:29:27,929 --> 00:29:34,679
name it specifies a path it may specify

00:29:30,720 --> 00:29:38,070
a user identity and/or like an email

00:29:34,679 --> 00:29:39,629
address and so and then you have to

00:29:38,070 --> 00:29:41,129
figure out okay what kind of your Ellis

00:29:39,629 --> 00:29:44,129
is is this a weapon your L is it an

00:29:41,129 --> 00:29:47,340
email address so how do I send a message

00:29:44,129 --> 00:29:50,759
or is it in an IRC address or something

00:29:47,340 --> 00:29:55,049
like that how do I send a message to

00:29:50,759 --> 00:29:57,929
this person and depending on what you

00:29:55,049 --> 00:29:59,970
want to support in your application then

00:29:57,929 --> 00:30:01,830
you have to write your your your

00:29:59,970 --> 00:30:03,360
networking code accordingly you open the

00:30:01,830 --> 00:30:05,879
connection to this port and then you

00:30:03,360 --> 00:30:07,409
start sending your HTTP there's

00:30:05,879 --> 00:30:08,940
libraries for of course for all of these

00:30:07,409 --> 00:30:10,590
but there's a different library for each

00:30:08,940 --> 00:30:12,779
way there's a library for email there's

00:30:10,590 --> 00:30:16,590
a library for HTTP requests there's a

00:30:12,779 --> 00:30:17,070
library for sending Java XMPP messages

00:30:16,590 --> 00:30:22,860
and so on

00:30:17,070 --> 00:30:25,529
and so now you will have one library

00:30:22,860 --> 00:30:27,830
framework for networking and all you're

00:30:25,529 --> 00:30:30,179
putting in is a user or application

00:30:27,830 --> 00:30:36,210
identity and you want to connect with

00:30:30,179 --> 00:30:38,220
this particular identity and then you

00:30:36,210 --> 00:30:41,389
wait for the approval and then you get

00:30:38,220 --> 00:30:41,389
the sucker to send a message

00:30:46,350 --> 00:30:49,740
we have to

00:30:56,400 --> 00:31:01,679
okay there are two answers to this the

00:30:58,200 --> 00:31:06,570
question is can you use or write regular

00:31:01,679 --> 00:31:08,429
Android applications so for one yes you

00:31:06,570 --> 00:31:11,070
can still write applications in Java and

00:31:08,429 --> 00:31:13,830
you can write pretty much a traditional

00:31:11,070 --> 00:31:16,260
Android applications as long as they

00:31:13,830 --> 00:31:20,070
don't do networking because the

00:31:16,260 --> 00:31:22,140
networking system is changing so if you

00:31:20,070 --> 00:31:23,610
want to run inside a lastest environment

00:31:22,140 --> 00:31:25,260
you have to use the lastest way of

00:31:23,610 --> 00:31:27,809
networking but the rest will stay the

00:31:25,260 --> 00:31:30,600
same and on top of that you can write

00:31:27,809 --> 00:31:33,059
your applications in C++ in the same

00:31:30,600 --> 00:31:35,340
logic and structure as you would do it

00:31:33,059 --> 00:31:40,309
in Android because we're basically

00:31:35,340 --> 00:31:40,309
duplicating that that way of developing

00:31:43,029 --> 00:31:46,029
yes

00:31:46,740 --> 00:31:53,450
there's a bunch of already using hero

00:31:50,250 --> 00:31:53,450
the public place

00:31:55,619 --> 00:32:01,169
okay I'm so the question is if we're

00:31:59,399 --> 00:32:07,109
using a public blockchain or if we use

00:32:01,169 --> 00:32:09,690
our own blockchain I am not sure about

00:32:07,109 --> 00:32:12,049
the details here but what I understand

00:32:09,690 --> 00:32:15,179
is that this is actually flexible so we

00:32:12,049 --> 00:32:19,259
pretty much have our own blockchain

00:32:15,179 --> 00:32:21,450
ecosystem but we're working with neo for

00:32:19,259 --> 00:32:24,210
the for the whole blockchain technology

00:32:21,450 --> 00:32:27,869
and so I'm not sure if you're using Neos

00:32:24,210 --> 00:32:31,769
main blockchain or if we're using our

00:32:27,869 --> 00:32:34,349
own but basically we're also providing

00:32:31,769 --> 00:32:38,869
an environment for other people to write

00:32:34,349 --> 00:32:41,070
their own blockchain applications and so

00:32:38,869 --> 00:32:42,539
we're having at least one main

00:32:41,070 --> 00:32:44,340
blockchain where we're lastest is

00:32:42,539 --> 00:32:46,919
running on and then a lot of side chains

00:32:44,340 --> 00:32:50,419
and for for different applications that

00:32:46,919 --> 00:32:55,409
don't need to be on the main chain so

00:32:50,419 --> 00:32:56,700
it's a it's pretty complex and I haven't

00:32:55,409 --> 00:32:58,649
really looked into that detail yet

00:32:56,700 --> 00:33:00,840
because it's still evolving and it may

00:32:58,649 --> 00:33:03,859
change over time depending on on what

00:33:00,840 --> 00:33:03,859
makes most sense

00:33:05,360 --> 00:33:09,250
and the other questions

00:33:12,980 --> 00:33:17,870
the middle the meet up tomorrow is after

00:33:16,130 --> 00:33:21,950
the last talk so I think the last talk

00:33:17,870 --> 00:33:24,889
ends at 2:25 so at 2:30 in the same room

00:33:21,950 --> 00:33:26,510
as the last blockchain talk so basically

00:33:24,889 --> 00:33:30,019
just look at the blockchain track at the

00:33:26,510 --> 00:33:31,789
end actually I'm so this is this was not

00:33:30,019 --> 00:33:34,429
it's not on the official schedule but it

00:33:31,789 --> 00:33:36,919
has been approved by the by the

00:33:34,429 --> 00:33:38,360
organizers and but they couldn't put it

00:33:36,919 --> 00:33:40,510
on the on the online schedule because

00:33:38,360 --> 00:33:43,039
they're too busy solving other problems

00:33:40,510 --> 00:33:45,139
but I'm gonna after this I'm gonna go

00:33:43,039 --> 00:33:47,059
around and everywhere I see the schedule

00:33:45,139 --> 00:33:49,130
printed I'm gonna pencil in that we're

00:33:47,059 --> 00:33:50,269
gonna have this event so people can see

00:33:49,130 --> 00:33:54,649
it I'm gonna put it on the board

00:33:50,269 --> 00:33:56,120
downstairs yeah I hope and you spread

00:33:54,649 --> 00:33:58,970
the word if you talk to anybody about

00:33:56,120 --> 00:34:01,490
blockchain mention tomorrow afternoon to

00:33:58,970 --> 00:34:05,799
come here after the talk after the last

00:34:01,490 --> 00:34:05,799
one so that we can share and and connect

00:34:07,460 --> 00:34:15,989
all right thank you

00:34:09,710 --> 00:34:15,989

YouTube URL: https://www.youtube.com/watch?v=wU9uIdJqnyo


