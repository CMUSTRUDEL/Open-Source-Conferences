Title: Setting up Open Event Frontend and Open Event Server locally -Sumedh Nimkarde- FOSSASIA 2018
Publication date: 2018-03-24
Playlist: FOSSASIA Summit 2018
Description: 
	Speaker: Sumedh Nimkarde, Developer FOSSASIA
Info: https://2018.fossasia.org/event/speakers.html#sumedh-nimkarde3315

In GSoC 2017, we in a team worked together and built the Open Event Frontend which is totally decoupled from the Open Event Server. Since Open Event is a vast ecosystem, we need to ensure that each and every contributor can set up the project locally for development and can proceed faster towards contribution. Thus, it sometimes gets difficult for beginners to set up the project. In this session, I will show how to set up Open Event Frontend and Open Event Server locally and make the frontend use the local server rather than online hosted version (heroku) so that new contributors can focus on contribution rather than spending their much time in setting up the project.

Track: Open Event Solutions
Room: Training room 2-2
Date: Saturday, 24th March, 2018

Event Page: http://2018.fossasia.org
Follow FOSSASIA on Twitter: https://twitter.com/fossasia/
Like FOSSASIA on Facebook: https://www.facebook.com/fossasia/ 

Produced by Engineers.SG
Captions: 
	00:00:00,060 --> 00:00:04,950
so hello I'm sue me down I study at an

00:00:03,600 --> 00:00:07,799
IT school at national issue of

00:00:04,950 --> 00:00:09,960
Technology Surat and yeah I'm basically

00:00:07,799 --> 00:00:12,210
from Maharashtra State in India okay

00:00:09,960 --> 00:00:21,170
okay thanks for joining us

00:00:12,210 --> 00:00:25,199
yeah okay so let's just get started

00:00:21,170 --> 00:00:28,140
hello everyone I'm Smith today I'll be

00:00:25,199 --> 00:00:30,330
talking about how you can set up open

00:00:28,140 --> 00:00:32,730
you in front end and open events locally

00:00:30,330 --> 00:00:34,829
on your system so why I chose this topic

00:00:32,730 --> 00:00:36,660
was like many of the new contributors

00:00:34,829 --> 00:00:39,809
when they come to open project they

00:00:36,660 --> 00:00:42,989
found it really difficult to set up both

00:00:39,809 --> 00:00:44,550
of the domains locally like the current

00:00:42,989 --> 00:00:46,770
open event front end if they set up only

00:00:44,550 --> 00:00:49,469
the front end the online hosted version

00:00:46,770 --> 00:00:51,989
of Heroku is used as the API so I

00:00:49,469 --> 00:00:55,590
decided to set up both of them and how

00:00:51,989 --> 00:00:57,510
you can hook them up so yes a little bit

00:00:55,590 --> 00:00:59,550
more about me so I'm a third year

00:00:57,510 --> 00:01:02,760
Computer Engineering undergrad I did an

00:00:59,550 --> 00:01:05,549
IIT Surat ia was a google code-in mentor

00:01:02,760 --> 00:01:08,820
in 2017 with forces here on opening

00:01:05,549 --> 00:01:10,740
content project I was google Summer of

00:01:08,820 --> 00:01:13,049
Code Celyn with force Asia I'm entered

00:01:10,740 --> 00:01:16,020
code hits students I have worked with

00:01:13,049 --> 00:01:17,759
hacker Rankin past and currently I'm

00:01:16,020 --> 00:01:22,680
working as a developer at web develops a

00:01:17,759 --> 00:01:25,619
knighthood so yeah like everyone else

00:01:22,680 --> 00:01:27,479
has told before but I just repeated what

00:01:25,619 --> 00:01:29,640
is open event so the opponent project

00:01:27,479 --> 00:01:32,189
offers event managers a platform to

00:01:29,640 --> 00:01:34,140
organize all kinds of event including

00:01:32,189 --> 00:01:35,610
concert conferences some its regular

00:01:34,140 --> 00:01:36,990
meters like consider you are a event

00:01:35,610 --> 00:01:39,420
organizer for example if you want to

00:01:36,990 --> 00:01:42,479
organize any event any regular meetup in

00:01:39,420 --> 00:01:43,950
your community or college so what do you

00:01:42,479 --> 00:01:47,250
do is you you have a lot of things to

00:01:43,950 --> 00:01:49,170
plan like you have to do the the whole

00:01:47,250 --> 00:01:50,579
event planning what all are you gonna do

00:01:49,170 --> 00:01:52,950
in the event you have to schedule

00:01:50,579 --> 00:01:55,860
everything you have to are gonna like

00:01:52,950 --> 00:01:57,630
open up the call for speakers you have

00:01:55,860 --> 00:02:02,520
to track the ticket sales and orders

00:01:57,630 --> 00:02:05,340
everything and stuff and yeah so we have

00:02:02,520 --> 00:02:08,520
so all of this thing's become a whole

00:02:05,340 --> 00:02:10,739
lot of mess when you have to do this

00:02:08,520 --> 00:02:12,640
separately so open you into the platform

00:02:10,739 --> 00:02:14,800
which helps you in

00:02:12,640 --> 00:02:16,990
in just getting all of these things

00:02:14,800 --> 00:02:21,540
together at a1 plate and now you can

00:02:16,990 --> 00:02:25,330
just go ahead and give it a try and like

00:02:21,540 --> 00:02:27,730
the components of like open event works

00:02:25,330 --> 00:02:29,800
in many components which help you in

00:02:27,730 --> 00:02:31,920
event planning publicizing your event

00:02:29,800 --> 00:02:34,360
like it's one of the most important

00:02:31,920 --> 00:02:36,370
thing that you have to publicize you

00:02:34,360 --> 00:02:37,480
have to make it live on the web and you

00:02:36,370 --> 00:02:39,880
have to build your online presence

00:02:37,480 --> 00:02:42,370
so when event helps you in doing that

00:02:39,880 --> 00:02:44,170
with the help of its Android app

00:02:42,370 --> 00:02:46,990
generator and web app generator and it

00:02:44,170 --> 00:02:52,560
also helps in tracking sales orders and

00:02:46,990 --> 00:02:55,090
stuff so yeah so a little bit about the

00:02:52,560 --> 00:02:59,170
architecture that we had Apted in from G

00:02:55,090 --> 00:03:01,959
soft 2017 so initially the current the

00:02:59,170 --> 00:03:04,420
current open event that is in production

00:03:01,959 --> 00:03:07,300
is event ei which from which you have

00:03:04,420 --> 00:03:09,160
bought the tickets so yeah it's it's a

00:03:07,300 --> 00:03:10,690
tightly coupled of like the front end

00:03:09,160 --> 00:03:14,260
and back end is tightly coupled so go

00:03:10,690 --> 00:03:16,750
from so it was hard to manage that code

00:03:14,260 --> 00:03:18,910
and and it was really difficult for new

00:03:16,750 --> 00:03:20,950
beginners so like to contribute to the

00:03:18,910 --> 00:03:22,840
project so we decided to ship to add the

00:03:20,950 --> 00:03:25,150
rest architecture D cupola picture and

00:03:22,840 --> 00:03:28,600
we just separated out the front end and

00:03:25,150 --> 00:03:30,370
back end so what this helps in is you

00:03:28,600 --> 00:03:34,450
can scale your project you can manage

00:03:30,370 --> 00:03:36,850
the like it's easy to code you remove a

00:03:34,450 --> 00:03:39,400
lot of redundancy in your project so

00:03:36,850 --> 00:03:41,970
yeah loosely coupled our other as

00:03:39,400 --> 00:03:44,769
architecture that's are the same so

00:03:41,970 --> 00:03:46,750
there are some certain ways where which

00:03:44,769 --> 00:03:51,220
you can deploy the open event like

00:03:46,750 --> 00:03:53,739
container and the backend so one way is

00:03:51,220 --> 00:03:55,780
to setup it locally other ways to like

00:03:53,739 --> 00:03:57,850
you can deploy to Heroku or vigor

00:03:55,780 --> 00:03:59,890
integrant is like for if you just want

00:03:57,850 --> 00:04:01,140
to give it a try you you can just run

00:03:59,890 --> 00:04:05,440
the command back and up and it's just

00:04:01,140 --> 00:04:07,360
sets up if you want to give it a docker

00:04:05,440 --> 00:04:09,940
like containerization if you want to do

00:04:07,360 --> 00:04:11,680
if you want a scale you can always do it

00:04:09,940 --> 00:04:14,320
with docker AWS Google compute engine

00:04:11,680 --> 00:04:17,859
these like offer you the bare instances

00:04:14,320 --> 00:04:22,300
where you can set up your the both the

00:04:17,859 --> 00:04:24,250
domains and Kuban it is so in this talk

00:04:22,300 --> 00:04:26,010
we'll be focusing more on how you can

00:04:24,250 --> 00:04:28,020
set up it locally that

00:04:26,010 --> 00:04:30,510
help you to begin the development flow

00:04:28,020 --> 00:04:34,710
and may like help you to contribute to

00:04:30,510 --> 00:04:37,680
this project so currently the structure

00:04:34,710 --> 00:04:39,720
of open event project is like we have

00:04:37,680 --> 00:04:42,690
like we adopted this structure in

00:04:39,720 --> 00:04:45,450
g-shock 2017 we have a API server in the

00:04:42,690 --> 00:04:48,510
middle and which serves our multiple

00:04:45,450 --> 00:04:50,070
services as you can see on the screen we

00:04:48,510 --> 00:04:51,900
have Android app generator which

00:04:50,070 --> 00:04:53,670
generates the Android app for the

00:04:51,900 --> 00:04:58,980
attendees we have web app generator -

00:04:53,670 --> 00:05:00,600
which generates the website from and we

00:04:58,980 --> 00:05:02,670
also have the event organiser app which

00:05:00,600 --> 00:05:05,760
helps the event organizers to keep a

00:05:02,670 --> 00:05:08,010
track of attendees and stuff so now

00:05:05,760 --> 00:05:10,530
there are basically three steps involved

00:05:08,010 --> 00:05:12,600
in setting up the open event front-end

00:05:10,530 --> 00:05:15,570
and server locally so what you need to

00:05:12,600 --> 00:05:18,180
do is first setup the shower secondly

00:05:15,570 --> 00:05:20,130
set up your front-end and just the third

00:05:18,180 --> 00:05:22,950
step is to make them work together right

00:05:20,130 --> 00:05:25,020
so we'll just go by the steps and one by

00:05:22,950 --> 00:05:28,500
one and we'll just go ahead and set it

00:05:25,020 --> 00:05:30,630
up so the very first thing we will just

00:05:28,500 --> 00:05:33,570
go ahead and set up our server API

00:05:30,630 --> 00:05:36,360
server so a little bit more about server

00:05:33,570 --> 00:05:39,240
so our API server is built on flask

00:05:36,360 --> 00:05:42,210
micro framework and currently we use

00:05:39,240 --> 00:05:44,550
celery and Redis for handling our shell

00:05:42,210 --> 00:05:46,230
and handling and scheduling our jobs we

00:05:44,550 --> 00:05:48,030
use post by sequel as a database and

00:05:46,230 --> 00:05:53,150
elasticsearch and Cabana the basic setup

00:05:48,030 --> 00:05:55,710
is ready we'll just improve it more so

00:05:53,150 --> 00:05:57,960
yeah there are several steps which I

00:05:55,710 --> 00:06:01,290
indicate like I'll demonstrate to you

00:05:57,960 --> 00:06:03,360
live how you can set up both of them so

00:06:01,290 --> 00:06:05,610
first let's get started with the open

00:06:03,360 --> 00:06:10,650
event server so there are some

00:06:05,610 --> 00:06:14,500
prerequisites that you need to have

00:06:10,650 --> 00:06:17,720
there are some prerequisites

00:06:14,500 --> 00:06:19,910
yeah that you need to have on your

00:06:17,720 --> 00:06:22,640
system which aren't related to the

00:06:19,910 --> 00:06:26,720
project so that's why the that's your

00:06:22,640 --> 00:06:28,790
concern to to make them work properly so

00:06:26,720 --> 00:06:30,920
these are really basic like you need to

00:06:28,790 --> 00:06:33,560
have item to on your system you need to

00:06:30,920 --> 00:06:36,680
have Postgres database and you need to

00:06:33,560 --> 00:06:39,410
have node.js right so all of the steps

00:06:36,680 --> 00:06:40,880
to resolve the prerequisites are listed

00:06:39,410 --> 00:06:43,760
over here you can just go ahead and

00:06:40,880 --> 00:06:48,050
check this out in the open event server

00:06:43,760 --> 00:06:50,930
repository so once you are done with

00:06:48,050 --> 00:06:54,260
installing the prerequisites we'll just

00:06:50,930 --> 00:06:56,210
I'll just show you how you can how we

00:06:54,260 --> 00:06:59,510
can set up the open event server right

00:06:56,210 --> 00:07:03,290
so the steps as you can see the step

00:06:59,510 --> 00:07:05,600
number zero yeah is to clone the

00:07:03,290 --> 00:07:08,900
repository so currently I have cloned

00:07:05,600 --> 00:07:10,760
the repository in my local so and so

00:07:08,900 --> 00:07:14,660
that I won't waste any more time in

00:07:10,760 --> 00:07:17,060
cloning it so after cloning it there is

00:07:14,660 --> 00:07:19,880
a step you have to install the Python

00:07:17,060 --> 00:07:21,890
dependency stick this step is basically

00:07:19,880 --> 00:07:23,630
common in every Python project like if

00:07:21,890 --> 00:07:26,210
you see any flask or Django project or

00:07:23,630 --> 00:07:28,790
any Python project you have to install

00:07:26,210 --> 00:07:31,400
the you have to solve the its

00:07:28,790 --> 00:07:33,410
dependencies and we do it with the help

00:07:31,400 --> 00:07:35,300
of lip and there is file called

00:07:33,410 --> 00:07:37,880
requirement or txt which lists all the

00:07:35,300 --> 00:07:40,970
dependencies that have to be installed

00:07:37,880 --> 00:07:48,640
so what we'll do is we'll just go ahead

00:07:40,970 --> 00:07:52,250
and install all our dependencies in our

00:07:48,640 --> 00:07:55,190
project so it's just go as you can see

00:07:52,250 --> 00:07:57,710
on the screen I just installed all the

00:07:55,190 --> 00:08:01,610
dependencies that are required by our

00:07:57,710 --> 00:08:04,040
project so if you face any any any

00:08:01,610 --> 00:08:07,910
issues in installing this you will have

00:08:04,040 --> 00:08:10,730
to update your version of lip and other

00:08:07,910 --> 00:08:12,260
Python or anything if the prerequisites

00:08:10,730 --> 00:08:15,470
are not working on your system then it

00:08:12,260 --> 00:08:17,900
will break so right so the next step

00:08:15,470 --> 00:08:20,870
that we have here is we need to have a

00:08:17,900 --> 00:08:22,430
database and since we are using courses

00:08:20,870 --> 00:08:26,390
you need to have possessed installed on

00:08:22,430 --> 00:08:27,319
your system right so we'll what we'll do

00:08:26,390 --> 00:08:29,240
is

00:08:27,319 --> 00:08:31,309
we'll just create a user for our

00:08:29,240 --> 00:08:34,370
database and we'll also create our

00:08:31,309 --> 00:08:36,680
database by setting the user as the

00:08:34,370 --> 00:08:39,949
owner right so let's just go and launch

00:08:36,680 --> 00:08:41,930
the Postgres equal console and we create

00:08:39,949 --> 00:08:47,860
a user for our database sake

00:08:41,930 --> 00:08:50,930
so as you can see I have launched the

00:08:47,860 --> 00:08:54,620
console and now what I'll do is I'll

00:08:50,930 --> 00:09:02,000
just go ahead and create a user here

00:08:54,620 --> 00:09:08,269
with just let's just say name and freed

00:09:02,000 --> 00:09:11,139
and let's keep it simple by power so as

00:09:08,269 --> 00:09:15,500
you can see it has created a rule and

00:09:11,139 --> 00:09:17,899
now that user is created we are just

00:09:15,500 --> 00:09:19,930
going ahead and creating a database so

00:09:17,899 --> 00:09:19,930
that

00:09:22,830 --> 00:09:32,290
so that we can set the created user as

00:09:26,770 --> 00:09:34,150
the owner of the database right so so as

00:09:32,290 --> 00:09:37,660
you can see you have we have created our

00:09:34,150 --> 00:09:39,910
database and if I'm going ahead and

00:09:37,660 --> 00:09:42,700
listing all the database you can see

00:09:39,910 --> 00:09:45,130
over here that a user the owner with the

00:09:42,700 --> 00:09:49,270
open event database is created over here

00:09:45,130 --> 00:09:51,400
so now that this step is done right we

00:09:49,270 --> 00:09:53,590
have to make our server use our database

00:09:51,400 --> 00:09:57,310
right so we will just exit our psql

00:09:53,590 --> 00:10:02,920
console and we will go ahead and we have

00:09:57,310 --> 00:10:05,670
a sample environment file that we need

00:10:02,920 --> 00:10:13,030
to modify so this file contains the

00:10:05,670 --> 00:10:16,390
database user and password so this helps

00:10:13,030 --> 00:10:20,110
us in like having multiple databases for

00:10:16,390 --> 00:10:24,420
development and production so that's a

00:10:20,110 --> 00:10:24,420
pretty efficient way to develop

00:10:25,430 --> 00:10:31,010
okay so as you can see I have changed

00:10:28,130 --> 00:10:33,260
the URL of the of the database that we

00:10:31,010 --> 00:10:36,050
currently created so let's just go ahead

00:10:33,260 --> 00:10:38,660
and save it and we will restart our

00:10:36,050 --> 00:10:40,070
poses equal service so that it will be

00:10:38,660 --> 00:10:43,730
loaded with the new configuration site

00:10:40,070 --> 00:10:46,810
so as you can see it is stopping and it

00:10:43,730 --> 00:10:51,110
will start again so we'll have our

00:10:46,810 --> 00:10:53,060
process we started yeah so now that you

00:10:51,110 --> 00:10:55,100
can see it has successfully restarted

00:10:53,060 --> 00:10:57,530
our process sequel we will just go ahead

00:10:55,100 --> 00:10:59,750
and create our DB bike like you can see

00:10:57,530 --> 00:11:02,690
the step number five it says Python

00:10:59,750 --> 00:11:06,590
create DV dot py so what it does is it

00:11:02,690 --> 00:11:12,680
creates the empty tables in our database

00:11:06,590 --> 00:11:16,370
so when I'll just as you can see it will

00:11:12,680 --> 00:11:19,340
ask me or email or the super admin a

00:11:16,370 --> 00:11:22,040
super admin is like you can keep a track

00:11:19,340 --> 00:11:24,170
of everything everything like your users

00:11:22,040 --> 00:11:26,750
what what and what or not I mean the

00:11:24,170 --> 00:11:36,740
events everything anything so I just go

00:11:26,750 --> 00:11:38,840
ahead and enter email and password and

00:11:36,740 --> 00:11:40,700
you can see it is listed that it's

00:11:38,840 --> 00:11:43,850
creating rules services permissions and

00:11:40,700 --> 00:11:45,940
everything and it it has successfully

00:11:43,850 --> 00:11:47,960
created now that our database is ready

00:11:45,940 --> 00:11:50,120
we'll just go ahead and check for

00:11:47,960 --> 00:11:51,890
migration so since we are setting it for

00:11:50,120 --> 00:11:55,880
the first time there is no need to setup

00:11:51,890 --> 00:12:00,410
migration migration are only like a gate

00:11:55,880 --> 00:12:02,780
for the database right so still if you

00:12:00,410 --> 00:12:10,160
want to run it like we can just go ahead

00:12:02,780 --> 00:12:14,870
and run it right so now basically we are

00:12:10,160 --> 00:12:18,880
ready to launch our API server we are

00:12:14,870 --> 00:12:22,090
and we can just go ahead and execute our

00:12:18,880 --> 00:12:25,640
command that is listed over here in the

00:12:22,090 --> 00:12:27,940
step number six which says vital

00:12:25,640 --> 00:12:27,940
marriage

00:12:28,600 --> 00:12:34,790
py runs over and as you can see it's the

00:12:31,880 --> 00:12:36,590
server is running on localhost 5,000 PI

00:12:34,790 --> 00:12:40,780
on vital code and we'll just go ahead

00:12:36,590 --> 00:12:40,780
and see

00:12:43,639 --> 00:12:49,579
if it yeah so as you can see we are

00:12:46,160 --> 00:12:51,139
having our API server ready over here

00:12:49,579 --> 00:12:56,720
it's running it's successfully running

00:12:51,139 --> 00:13:00,620
so we have done until this part then the

00:12:56,720 --> 00:13:02,689
next part would be to set up our open

00:13:00,620 --> 00:13:04,399
event front-end right we have our the

00:13:02,689 --> 00:13:06,470
three parts were sitting above an event

00:13:04,399 --> 00:13:09,110
server open event trenton and funny way

00:13:06,470 --> 00:13:13,850
i'm just linking them together to make

00:13:09,110 --> 00:13:15,620
use of them right so yeah let's just go

00:13:13,850 --> 00:13:17,600
ahead with open event friend and so this

00:13:15,620 --> 00:13:19,160
year since we had update the rest

00:13:17,600 --> 00:13:21,500
architecture for open event we decided

00:13:19,160 --> 00:13:24,529
to go with ember jeaious because of

00:13:21,500 --> 00:13:27,050
because of its some of its advantages

00:13:24,529 --> 00:13:28,550
like it has two way data binding it has

00:13:27,050 --> 00:13:33,079
convention it follows convention over

00:13:28,550 --> 00:13:35,449
configuration policy plus yeah since

00:13:33,079 --> 00:13:36,769
like it behave with the help of ember

00:13:35,449 --> 00:13:38,509
data you can just go ahead and fetch

00:13:36,769 --> 00:13:41,389
everything and store it in your browser

00:13:38,509 --> 00:13:45,139
so it's easy for the users to access

00:13:41,389 --> 00:13:50,170
everything rather than like the when

00:13:45,139 --> 00:13:52,579
it's helpful in scalability yeah so yeah

00:13:50,170 --> 00:13:55,819
we'll just go ahead and setup open event

00:13:52,579 --> 00:13:58,399
front end locally right so I have clone

00:13:55,819 --> 00:14:00,170
the repository to save time here so what

00:13:58,399 --> 00:14:01,699
will what are the prerequisites that you

00:14:00,170 --> 00:14:03,319
need these are also the basic one you'll

00:14:01,699 --> 00:14:05,959
need a get on your system you'll need no

00:14:03,319 --> 00:14:07,189
GS right so to install our NPM packages

00:14:05,959 --> 00:14:09,769
you'll need power to install your

00:14:07,189 --> 00:14:11,990
front-end dependencies plus there is one

00:14:09,769 --> 00:14:15,199
more tool called ember CLI so ember CLI

00:14:11,990 --> 00:14:18,579
is a very robust tool due to which

00:14:15,199 --> 00:14:21,740
provides you which which gives you like

00:14:18,579 --> 00:14:23,569
facility to create the routes components

00:14:21,740 --> 00:14:24,769
test controllers in ember.js easily with

00:14:23,569 --> 00:14:27,680
the elbow member CLI you can just

00:14:24,769 --> 00:14:29,180
generate the like you have to it enables

00:14:27,680 --> 00:14:30,829
you to focus more on your code logic

00:14:29,180 --> 00:14:34,490
rather than the structure of your

00:14:30,829 --> 00:14:36,589
project so yeah ember CLI you can

00:14:34,490 --> 00:14:38,809
install it from its official site

00:14:36,589 --> 00:14:42,680
it's just invent package so you don't

00:14:38,809 --> 00:14:44,720
worry much and phantom GS yeah we are

00:14:42,680 --> 00:14:45,230
using phantom just for our testing

00:14:44,720 --> 00:14:47,839
purposes

00:14:45,230 --> 00:14:50,750
it's a headless website testing tool so

00:14:47,839 --> 00:14:52,880
we are using phantom GS and it's a basic

00:14:50,750 --> 00:14:56,060
NPM package which is check not version

00:14:52,880 --> 00:14:58,040
so open you in front end like we

00:14:56,060 --> 00:15:01,310
we don't want our a front-end to brick

00:14:58,040 --> 00:15:02,870
on any at any instance so we check when

00:15:01,310 --> 00:15:03,980
we install the NPM packages we first

00:15:02,870 --> 00:15:07,100
check with the help of check node

00:15:03,980 --> 00:15:08,960
version whether our friend in project is

00:15:07,100 --> 00:15:11,930
compatible with the node version of the

00:15:08,960 --> 00:15:13,610
user or not so let's say it's it's

00:15:11,930 --> 00:15:15,620
pretty easy to set up front-end locally

00:15:13,610 --> 00:15:17,300
it's just you need to install your and

00:15:15,620 --> 00:15:19,040
primp Aggies and Bower packages Bower

00:15:17,300 --> 00:15:21,050
dependencies and you need to start the

00:15:19,040 --> 00:15:22,850
server so let's just go ahead as you can

00:15:21,050 --> 00:15:26,120
see I have this files I have package dot

00:15:22,850 --> 00:15:28,280
Jason file here I'll just go ahead and

00:15:26,120 --> 00:15:32,990
do a NPM install which will install all

00:15:28,280 --> 00:15:36,200
the dependencies here in the so as you

00:15:32,990 --> 00:15:38,600
can see it's it's checking for the it's

00:15:36,200 --> 00:15:40,280
checking the check node version and when

00:15:38,600 --> 00:15:41,990
it is fine it will run all the commands

00:15:40,280 --> 00:15:45,020
and install all your dependencies the

00:15:41,990 --> 00:15:48,200
next step is to do a bower install which

00:15:45,020 --> 00:15:50,210
will install over of oh so Bower

00:15:48,200 --> 00:15:52,730
dependencies are already installed so it

00:15:50,210 --> 00:15:55,220
didn't show up anything so Bower install

00:15:52,730 --> 00:15:57,440
will it's all your friend dependencies

00:15:55,220 --> 00:16:00,980
the whatever you are using in different

00:15:57,440 --> 00:16:04,100
CSS or GS packages on the front-end side

00:16:00,980 --> 00:16:05,420
right so now that we have installed all

00:16:04,100 --> 00:16:09,170
the dependencies we'll just spin up our

00:16:05,420 --> 00:16:11,180
server so with the in ember you can just

00:16:09,170 --> 00:16:15,020
do it with the help of ember serve and

00:16:11,180 --> 00:16:16,460
it will just start your server which we

00:16:15,020 --> 00:16:22,760
are just waiting to start our server

00:16:16,460 --> 00:16:27,410
right so once our server is started we

00:16:22,760 --> 00:16:29,770
will just go ahead and visit it at local

00:16:27,410 --> 00:16:32,720
as four two zero zero is self-starting

00:16:29,770 --> 00:16:35,080
so the current of front-end that you

00:16:32,720 --> 00:16:39,080
will see in a moment we'll be using the

00:16:35,080 --> 00:16:42,740
API that is hosted on the Heroku witches

00:16:39,080 --> 00:16:44,150
and that isn't the one that we have set

00:16:42,740 --> 00:16:47,870
up in that terminal that you can see in

00:16:44,150 --> 00:16:49,700
that terminal right so the we what our

00:16:47,870 --> 00:16:52,070
aim is to link them together like this

00:16:49,700 --> 00:16:53,990
front end so like it should make

00:16:52,070 --> 00:16:55,940
requests to this back-end that we have

00:16:53,990 --> 00:16:59,300
running here on the five thousand port

00:16:55,940 --> 00:17:03,880
right so this front end so what we'll do

00:16:59,300 --> 00:17:03,880
is we'll just go ahead and

00:17:05,270 --> 00:17:12,000
just a second I'm stopping the server

00:17:07,470 --> 00:17:13,890
and we need to so for this purpose what

00:17:12,000 --> 00:17:17,040
have we done in the project is we have a

00:17:13,890 --> 00:17:19,589
file called any moment or j/s where you

00:17:17,040 --> 00:17:21,630
have a API host set of you are where we

00:17:19,589 --> 00:17:23,579
are accepting or API host as inurement

00:17:21,630 --> 00:17:27,179
variable and if it is not there we are

00:17:23,579 --> 00:17:30,750
just going ahead and using OpenID API

00:17:27,179 --> 00:17:33,030
dot hello Capcom so let's just go ahead

00:17:30,750 --> 00:17:36,150
and set up our open and export any

00:17:33,030 --> 00:17:38,220
moment variable called API host which

00:17:36,150 --> 00:17:43,760
will be a which will just point towards

00:17:38,220 --> 00:17:43,760
our local running server right so yeah

00:17:50,179 --> 00:17:56,910
okay so I'll just go ahead and restart

00:17:53,250 --> 00:17:58,320
our server so that the front-end our

00:17:56,910 --> 00:17:59,610
front-end will use our local server

00:17:58,320 --> 00:18:02,970
rather than using the online hosted

00:17:59,610 --> 00:18:06,059
version of Heroku right we'll just wait

00:18:02,970 --> 00:18:10,770
till it start so how this can be helpful

00:18:06,059 --> 00:18:12,540
like consider you are you are like you

00:18:10,770 --> 00:18:15,179
are you have your own organization and

00:18:12,540 --> 00:18:17,610
if you want if you want to deploy your

00:18:15,179 --> 00:18:20,429
own event management system for your

00:18:17,610 --> 00:18:22,380
organization to bear is somewhere open

00:18:20,429 --> 00:18:24,750
to instance or any any inning of them

00:18:22,380 --> 00:18:26,040
like so you can just go ahead and clone

00:18:24,750 --> 00:18:28,500
these repositories and follow these

00:18:26,040 --> 00:18:31,350
steps to just and then you have you just

00:18:28,500 --> 00:18:33,780
have to do a DNS setup right now and you

00:18:31,350 --> 00:18:35,460
have a whole whole event management

00:18:33,780 --> 00:18:40,050
system of your organization ready a

00:18:35,460 --> 00:18:43,290
separate one like event accommodation

00:18:40,050 --> 00:18:45,510
it's it's more of like helpful to have a

00:18:43,290 --> 00:18:49,350
separate event management system right

00:18:45,510 --> 00:18:55,190
so as you can see I will just reload the

00:18:49,350 --> 00:18:55,190
page and it will

00:19:02,710 --> 00:19:06,090
just a second

00:19:07,160 --> 00:19:13,910
ha yeah so as you can see there it this

00:19:11,300 --> 00:19:16,160
shows no upcoming events found since we

00:19:13,910 --> 00:19:18,320
haven't clearly have our database empty

00:19:16,160 --> 00:19:21,350
so we'll just I will just show you how

00:19:18,320 --> 00:19:23,210
we can create events for example the

00:19:21,350 --> 00:19:25,670
super admin email that I created at the

00:19:23,210 --> 00:19:28,250
time of creating the database was hello

00:19:25,670 --> 00:19:30,200
it I'm logging with those credentials

00:19:28,250 --> 00:19:34,870
and as you can see you can just go ahead

00:19:30,200 --> 00:19:39,220
and create the event here you can just

00:19:34,870 --> 00:19:42,170
go ahead and have the location and just

00:19:39,220 --> 00:19:44,360
I'm just publishing this one I'll show

00:19:42,170 --> 00:19:49,190
the whole product later so as you can

00:19:44,360 --> 00:19:52,060
see that we have used the both front end

00:19:49,190 --> 00:19:56,600
and our back end and we have hosted it

00:19:52,060 --> 00:19:58,400
like we we can we are able to set up the

00:19:56,600 --> 00:20:02,380
whole event management system separate

00:19:58,400 --> 00:20:07,790
for any inning or anything right so yeah

00:20:02,380 --> 00:20:09,500
now the next part I will like so the

00:20:07,790 --> 00:20:11,590
g-shock work product so this project was

00:20:09,500 --> 00:20:14,690
at a front-end project was adopted in

00:20:11,590 --> 00:20:19,370
ji-suk 2017 what we built I am going to

00:20:14,690 --> 00:20:21,260
show you the whole screencast of the

00:20:19,370 --> 00:20:24,590
front-end that we created using ember

00:20:21,260 --> 00:20:26,870
chase and semantic UI so as Abby now

00:20:24,590 --> 00:20:28,490
said that semantic UI is a very robust

00:20:26,870 --> 00:20:30,500
framework it has a lot more components

00:20:28,490 --> 00:20:32,840
that Twitter bootstrap it has a great

00:20:30,500 --> 00:20:34,760
community to help out and you need to

00:20:32,840 --> 00:20:37,100
write a very less CSS

00:20:34,760 --> 00:20:39,880
I mean negligible CSS to have a very

00:20:37,100 --> 00:20:42,860
beautiful front-end like this right so

00:20:39,880 --> 00:20:44,720
yeah semantic UI is a great framework

00:20:42,860 --> 00:20:47,960
and you as you can see the this is the

00:20:44,720 --> 00:20:50,660
new product that we built in google

00:20:47,960 --> 00:20:52,190
Summer of Code 2017 so the current one

00:20:50,660 --> 00:20:54,230
that is in production is aventador come

00:20:52,190 --> 00:20:56,660
from which you purchase the tickets but

00:20:54,230 --> 00:20:58,880
now that this is in development we'll

00:20:56,660 --> 00:21:00,680
still will just release it this year at

00:20:58,880 --> 00:21:03,950
the end of the G's of this year so you

00:21:00,680 --> 00:21:08,090
will see this in production and yeah

00:21:03,950 --> 00:21:09,410
we'll be shifting to this UI so yeah as

00:21:08,090 --> 00:21:12,950
you can see you can just go ahead and

00:21:09,410 --> 00:21:14,900
edit your events and you can add tickets

00:21:12,950 --> 00:21:17,240
you can add sponsors for your tickets

00:21:14,900 --> 00:21:19,990
you can just go ahead and have sessions

00:21:17,240 --> 00:21:23,710
micro locations I

00:21:19,990 --> 00:21:23,710
as you can see and

00:21:25,679 --> 00:21:30,370
you can also manage the event from this

00:21:28,120 --> 00:21:32,679
dashboard you can add rules you as an

00:21:30,370 --> 00:21:34,900
attendee or as a organizer co-organizer

00:21:32,679 --> 00:21:37,120
track or ahead of you you are able to

00:21:34,900 --> 00:21:39,580
invite people for different roles you

00:21:37,120 --> 00:21:42,669
are also able to delete the roles you

00:21:39,580 --> 00:21:46,900
are able to track like group the tickets

00:21:42,669 --> 00:21:50,409
buy attain attendees or orders or and we

00:21:46,900 --> 00:21:54,150
have a scheduler to write so there are

00:21:50,409 --> 00:21:56,289
many more sections like event export so

00:21:54,150 --> 00:21:59,740
yeah as you can see there is a profile

00:21:56,289 --> 00:22:02,320
section of the user and admin section to

00:21:59,740 --> 00:22:03,970
where we where the admin can manage

00:22:02,320 --> 00:22:06,100
everything related to the project that

00:22:03,970 --> 00:22:08,559
he has created related to the even that

00:22:06,100 --> 00:22:13,840
he has created as you can see you here

00:22:08,559 --> 00:22:16,510
we are having here the admin can manage

00:22:13,840 --> 00:22:18,610
the sessions events users how many super

00:22:16,510 --> 00:22:21,400
admins that you have how many number of

00:22:18,610 --> 00:22:23,530
sessions that like are accepted that are

00:22:21,400 --> 00:22:29,650
in draft or rejected so this whole UI

00:22:23,530 --> 00:22:31,750
that we built and yeah you can just go

00:22:29,650 --> 00:22:33,850
ahead and check the sales which are

00:22:31,750 --> 00:22:36,490
grouped by event's organizers location

00:22:33,850 --> 00:22:40,929
marketer discounted events fees and

00:22:36,490 --> 00:22:42,580
invoices and a lot more and the admin

00:22:40,929 --> 00:22:48,340
can also see the activity who has logged

00:22:42,580 --> 00:22:51,880
in or into the open event and yeah the

00:22:48,340 --> 00:22:55,780
notifications report settings and their

00:22:51,880 --> 00:22:57,580
modules right so this was the front-end

00:22:55,780 --> 00:23:02,260
that we created during google Summer of

00:22:57,580 --> 00:23:06,250
Code 2017 and we'll be making it live as

00:23:02,260 --> 00:23:13,840
soon as possible there are notification

00:23:06,250 --> 00:23:16,450
to like so yeah so as you can see I have

00:23:13,840 --> 00:23:17,980
told you know I have distributed this

00:23:16,450 --> 00:23:19,480
talk in three parts first one was

00:23:17,980 --> 00:23:22,120
setting up for your front end setting of

00:23:19,480 --> 00:23:23,919
your back end and just hooking them up

00:23:22,120 --> 00:23:26,470
so that you can have your own event

00:23:23,919 --> 00:23:28,059
management system either on locally on

00:23:26,470 --> 00:23:31,120
your system or you can host it somewhere

00:23:28,059 --> 00:23:33,399
to for your university or or the

00:23:31,120 --> 00:23:35,049
organization right so this is the

00:23:33,399 --> 00:23:38,399
project link and document and

00:23:35,049 --> 00:23:40,799
communication part so

00:23:38,399 --> 00:23:43,440
if you want to note this one you can

00:23:40,799 --> 00:23:46,470
just go ahead and have a look at the

00:23:43,440 --> 00:23:48,360
project also if you found a bug just go

00:23:46,470 --> 00:23:49,950
ahead and report it there I'll share the

00:23:48,360 --> 00:23:52,919
link to the slides too

00:23:49,950 --> 00:23:54,840
yeah so that's it from my side if you

00:23:52,919 --> 00:23:57,299
are any questions so please do let me

00:23:54,840 --> 00:24:01,380
know and here are some links that you

00:23:57,299 --> 00:24:02,970
may want to note down ok now if you have

00:24:01,380 --> 00:24:10,940
any questions please please do let me

00:24:02,970 --> 00:24:10,940
know yeah this one yeah sure

00:24:11,309 --> 00:24:13,730
yeah

00:24:14,200 --> 00:24:19,379
okay okay that's just come I say take

00:24:17,200 --> 00:24:19,379

YouTube URL: https://www.youtube.com/watch?v=8ZQRqtb6pNE


