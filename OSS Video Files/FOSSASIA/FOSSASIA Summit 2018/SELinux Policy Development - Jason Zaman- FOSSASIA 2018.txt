Title: SELinux Policy Development - Jason Zaman- FOSSASIA 2018
Publication date: 2018-03-24
Playlist: FOSSASIA Summit 2018
Description: 
	Speaker: Jason Zaman, Software Engineer Gentoo Linux
Info: https://2018.fossasia.org/event/speakers.html#jason-zaman3191

Hands-on workshop covering how to write SELinux policies for new applications as well as update existing policies. Will cover Reference Policy framework, more advanced policy analysis and tradeoffs with different ways to confine applications.

Track: Cybersecurity
Room: Training room 4-1
Date: Saturday, 24th March, 2018

Event Page: http://2018.fossasia.org
Follow FOSSASIA on Twitter: https://twitter.com/fossasia/
Like FOSSASIA on Facebook: https://www.facebook.com/fossasia/ 

Produced by Engineers.SG
Captions: 
	00:00:00,030 --> 00:00:05,240
huh do I need it

00:00:07,420 --> 00:00:14,379
okay so good morning pop agrees to reach

00:00:11,290 --> 00:00:16,029
fresh from this is walkabout so we gave

00:00:14,379 --> 00:00:18,960
it a few minutes just to set up so Jason

00:00:16,029 --> 00:00:20,680
you've got about one hour 50 minutes so

00:00:18,960 --> 00:00:22,539
Jason is really gonna give you a

00:00:20,680 --> 00:00:25,990
hands-on workshop on covering how to

00:00:22,539 --> 00:00:27,339
write SELinux policies and so you'll

00:00:25,990 --> 00:00:30,519
really go through the reference policy

00:00:27,339 --> 00:00:32,050
framework which is as it says here I

00:00:30,519 --> 00:00:34,120
really will be like a hands-on workshop

00:00:32,050 --> 00:00:36,310
and kind of a deep dive into the

00:00:34,120 --> 00:00:38,800
trade-offs and kind of how to define

00:00:36,310 --> 00:00:40,840
these policies and find application so

00:00:38,800 --> 00:00:43,239
what we're gonna do is Jason to the

00:00:40,840 --> 00:00:45,850
present' up here for anybody who just

00:00:43,239 --> 00:00:48,100
joined he also created some images

00:00:45,850 --> 00:00:49,690
virtual machine images on here if you

00:00:48,100 --> 00:00:52,030
want to pull those I want your laptop to

00:00:49,690 --> 00:00:53,829
walk along with the session and kinda

00:00:52,030 --> 00:00:56,079
experiment so if you need this just

00:00:53,829 --> 00:00:58,899
raise your hand or hand it would pass it

00:00:56,079 --> 00:01:00,640
around we're gonna do this with video so

00:00:58,899 --> 00:01:02,469
Jason I think you're gonna like that

00:01:00,640 --> 00:01:05,260
I think so yeah okay so we'll get to go

00:01:02,469 --> 00:01:07,840
I will be running until the first

00:01:05,260 --> 00:01:08,290
session until Folsom you live in the

00:01:07,840 --> 00:01:12,009
talk

00:01:08,290 --> 00:01:15,579
yeah sounds good all right everyone hear

00:01:12,009 --> 00:01:20,829
me all right so this is assilex policy

00:01:15,579 --> 00:01:24,159
development we're gonna go over this is

00:01:20,829 --> 00:01:25,720
the policy how it falls he's made then

00:01:24,159 --> 00:01:28,049
the different parts of the reference

00:01:25,720 --> 00:01:33,390
policy the main the main bits to like

00:01:28,049 --> 00:01:37,630
make writing policies easier and then

00:01:33,390 --> 00:01:40,509
well at the end make our own policy for

00:01:37,630 --> 00:01:45,159
the little web server that's on the

00:01:40,509 --> 00:01:48,610
images I gave you so Who am I I'm Jason

00:01:45,159 --> 00:01:52,990
I'm a Gentoo Linux developer I look

00:01:48,610 --> 00:01:54,939
after the SELinux policies on Gen 2 a

00:01:52,990 --> 00:02:00,009
muscle in the hardened team

00:01:54,939 --> 00:02:04,650
I recently also am an upstream SELinux

00:02:00,009 --> 00:02:07,950
maintainer for that as well so

00:02:04,650 --> 00:02:10,770
I will put the slides up in my blog

00:02:07,950 --> 00:02:13,230
after I probably won't put the VM image

00:02:10,770 --> 00:02:15,990
up because it's big and it's like super

00:02:13,230 --> 00:02:18,260
insecure on purpose so probably not a

00:02:15,990 --> 00:02:18,260
good idea

00:02:21,270 --> 00:02:25,610
do you want the element

00:02:27,260 --> 00:02:35,519
so a quick bit about our sailor necks in

00:02:30,930 --> 00:02:38,579
general selinux is securing a console

00:02:35,519 --> 00:02:41,519
annex so it's extra stuff on top of

00:02:38,579 --> 00:02:44,819
normal linux that hopefully makes things

00:02:41,519 --> 00:02:47,879
more secure it is different from normal

00:02:44,819 --> 00:02:52,950
permissions on like UNIX permissions in

00:02:47,879 --> 00:02:54,239
that it's mandatory access the normal

00:02:52,950 --> 00:02:56,879
UNIX permissions are what's called

00:02:54,239 --> 00:03:00,030
discretionary access control back which

00:02:56,879 --> 00:03:03,030
is up to sort of the user like you can

00:03:00,030 --> 00:03:07,919
set your own permissions on the files

00:03:03,030 --> 00:03:10,889
you can set the user you can change the

00:03:07,919 --> 00:03:12,659
group and stuff like that and you can't

00:03:10,889 --> 00:03:14,519
do that with selinux there's a global

00:03:12,659 --> 00:03:16,699
policy and you have to follow that and

00:03:14,519 --> 00:03:20,629
it's loaded into the kernel and it will

00:03:16,699 --> 00:03:20,629
make sure it happens

00:03:22,690 --> 00:03:29,410
it covers quite a lot of things there's

00:03:25,320 --> 00:03:32,380
hooks into all parts of Linux you can do

00:03:29,410 --> 00:03:34,900
networking parts you can do regular

00:03:32,380 --> 00:03:38,580
files access control so a whole bunch of

00:03:34,900 --> 00:03:38,580
things we'll get into some of that later

00:03:39,840 --> 00:03:46,810
the base parts of the policy get loaded

00:03:44,830 --> 00:03:50,530
into the kernel when you boot so if you

00:03:46,810 --> 00:03:55,480
look in the / EGCG /se limits strict

00:03:50,530 --> 00:03:57,250
you'll see policy 231 that's the 31st

00:03:55,480 --> 00:03:57,850
version of the policy so that's the

00:03:57,250 --> 00:04:00,930
current one

00:03:57,850 --> 00:04:04,780
then in context is a bunch of files that

00:04:00,930 --> 00:04:07,000
have the final contexts around different

00:04:04,780 --> 00:04:09,010
parts of the file system so when you

00:04:07,000 --> 00:04:11,530
boot the policy 231 is the file actually

00:04:09,010 --> 00:04:15,370
gets loaded into the kernel the other

00:04:11,530 --> 00:04:21,040
ones are used by user space - real able

00:04:15,370 --> 00:04:24,520
things and check different things so

00:04:21,040 --> 00:04:27,880
then this policy 231 is the one that's

00:04:24,520 --> 00:04:32,950
loaded so where's that come from that is

00:04:27,880 --> 00:04:35,680
built from lots of little modules that

00:04:32,950 --> 00:04:39,430
you have on your machine

00:04:35,680 --> 00:04:41,620
on Gentoo they're stored in user share I

00:04:39,430 --> 00:04:46,930
see the next strict there'll be a lot of

00:04:41,620 --> 00:04:50,020
del PP files those are one policy module

00:04:46,930 --> 00:04:52,270
per thing you want so there's a chromium

00:04:50,020 --> 00:04:56,020
policy a cron policy cups there's a lot

00:04:52,270 --> 00:04:58,900
of them if you do SE module l like lists

00:04:56,020 --> 00:05:00,280
there'll be whole list of all of them if

00:04:58,900 --> 00:05:04,900
you do list full you'll see the

00:05:00,280 --> 00:05:06,880
different priorities so if you want to

00:05:04,900 --> 00:05:09,669
override one of the system policies

00:05:06,880 --> 00:05:11,740
that's loading level 400 if you wanted

00:05:09,669 --> 00:05:14,740
to take like cron and add another rule

00:05:11,740 --> 00:05:16,780
to it you could take the policy keep the

00:05:14,740 --> 00:05:19,210
same name add your own rules to it and

00:05:16,780 --> 00:05:24,090
load it in level 500 then it would mask

00:05:19,210 --> 00:05:24,090
the 400 level one when it gets loaded in

00:05:27,060 --> 00:05:33,930
so you could write these things in raw I

00:05:30,540 --> 00:05:36,390
say thanks format which is kind of

00:05:33,930 --> 00:05:39,150
verbose and kind of sucks so everything

00:05:36,390 --> 00:05:41,850
uses ref policy which is the reference

00:05:39,150 --> 00:05:43,140
policy not made for one specific

00:05:41,850 --> 00:05:44,850
distribution but it's made sort of in

00:05:43,140 --> 00:05:46,650
general so then all the other

00:05:44,850 --> 00:05:49,980
distributions take that policy and add

00:05:46,650 --> 00:05:51,630
on to it Red Hat's policy is based off

00:05:49,980 --> 00:05:52,950
of this gentoos based off this Debian's

00:05:51,630 --> 00:05:54,570
based off that but they'll have small

00:05:52,950 --> 00:05:56,070
changes for maybe if they move things

00:05:54,570 --> 00:06:00,810
around with file systems and things like

00:05:56,070 --> 00:06:04,110
that ref policy is mostly m4 macorÃ­s so

00:06:00,810 --> 00:06:08,370
it's not the nicest but you get used to

00:06:04,110 --> 00:06:12,990
it - it's fine and the way it's split is

00:06:08,370 --> 00:06:16,410
each policy file or each policy is made

00:06:12,990 --> 00:06:18,570
of three files there's the interfaces in

00:06:16,410 --> 00:06:23,460
a dot if' file and those are the ones

00:06:18,570 --> 00:06:26,210
that define how to use your policy for

00:06:23,460 --> 00:06:26,210
other

00:06:28,260 --> 00:06:35,310
like if you're the Kron policy you might

00:06:32,310 --> 00:06:39,600
want to allow other policies around the

00:06:35,310 --> 00:06:41,190
system maybe like the log rotate and

00:06:39,600 --> 00:06:44,160
things that would run under cron they

00:06:41,190 --> 00:06:47,250
would need a way to set up the

00:06:44,160 --> 00:06:51,090
transition from crawl into their types

00:06:47,250 --> 00:06:54,060
so you would use an interface from that

00:06:51,090 --> 00:07:00,420
and then the dot te file actually have

00:06:54,060 --> 00:07:02,850
it be another order yes okay the dot IO

00:07:00,420 --> 00:07:08,010
files the interface the te file is the

00:07:02,850 --> 00:07:11,400
actual rules for that module and the FC

00:07:08,010 --> 00:07:16,710
file is the file contexts for that one

00:07:11,400 --> 00:07:18,759
so to label things on the disk later to

00:07:16,710 --> 00:07:25,450
come back

00:07:18,759 --> 00:07:32,010
yeah so permissions

00:07:25,450 --> 00:07:36,100
the way allow rule is set up you allow a

00:07:32,010 --> 00:07:37,990
certain type access to another type and

00:07:36,100 --> 00:07:41,470
then you give it list of permissions

00:07:37,990 --> 00:07:44,230
it's allowed to do and usually you need

00:07:41,470 --> 00:07:46,060
a lot of permissions like together if

00:07:44,230 --> 00:07:47,350
you want to read a file you can't

00:07:46,060 --> 00:07:54,520
actually just have read you need to open

00:07:47,350 --> 00:07:58,510
the file first so there's these defines

00:07:54,520 --> 00:08:02,650
which are set so read read file perms

00:07:58,510 --> 00:08:04,870
there will give you open permission and

00:08:02,650 --> 00:08:10,510
read inherited files read inherited

00:08:04,870 --> 00:08:14,740
files will give you get octal on that so

00:08:10,510 --> 00:08:15,940
if you use this read file perms define

00:08:14,740 --> 00:08:19,720
it just gives you everything you need

00:08:15,940 --> 00:08:22,030
and everything underneath is usually

00:08:19,720 --> 00:08:26,320
safer so we will be the one that like

00:08:22,030 --> 00:08:28,390
the most important one and then manage

00:08:26,320 --> 00:08:33,640
will give you pretty much everything

00:08:28,390 --> 00:08:36,729
create unlink write remove oh like all

00:08:33,640 --> 00:08:41,979
of the things on it so the setup of

00:08:36,729 --> 00:08:43,810
these name of these defines is the

00:08:41,979 --> 00:08:46,450
permission that you're getting and then

00:08:43,810 --> 00:08:49,480
the class and then perms at the end so

00:08:46,450 --> 00:08:49,930
the permission will be depending on what

00:08:49,480 --> 00:08:55,120
the thing is

00:08:49,930 --> 00:08:57,940
it'll be like read write manage if it's

00:08:55,120 --> 00:09:04,180
directory you can have add remove these

00:08:57,940 --> 00:09:08,100
things the class is different kinds of

00:09:04,180 --> 00:09:14,620
things like file versus sock file versus

00:09:08,100 --> 00:09:18,040
the same links and if you look being the

00:09:14,620 --> 00:09:20,230
image that I gave I put the whole policy

00:09:18,040 --> 00:09:22,780
source code in the routes home directory

00:09:20,230 --> 00:09:25,330
so if you look in policy support I'll

00:09:22,780 --> 00:09:26,680
perm sets that's where all these are

00:09:25,330 --> 00:09:28,740
defined so you can go find some more of

00:09:26,680 --> 00:09:34,410
them

00:09:28,740 --> 00:09:37,630
and then on top of that there's patterns

00:09:34,410 --> 00:09:38,890
which usually you need to do a whole

00:09:37,630 --> 00:09:40,330
bunch of things together and more than

00:09:38,890 --> 00:09:43,540
just the permissions so if you need to

00:09:40,330 --> 00:09:44,890
read a file it's inside a directory so

00:09:43,540 --> 00:09:47,230
you need access to the directory first

00:09:44,890 --> 00:09:48,520
to be able to get the file so if you

00:09:47,230 --> 00:09:52,810
want to just read the file you need to

00:09:48,520 --> 00:09:55,690
search the directory so if you want to

00:09:52,810 --> 00:09:57,220
like create a file you need to add an

00:09:55,690 --> 00:10:01,390
entry into the directory on top so

00:09:57,220 --> 00:10:03,070
there's create file pattern which will

00:10:01,390 --> 00:10:05,680
take three things instead of two it will

00:10:03,070 --> 00:10:08,260
take the thing that wants to do it and

00:10:05,680 --> 00:10:09,730
then it will take the directory and the

00:10:08,260 --> 00:10:12,370
file type because those might be

00:10:09,730 --> 00:10:15,850
different you might have a file type

00:10:12,370 --> 00:10:19,240
like Apache log type and then it might

00:10:15,850 --> 00:10:21,460
be in the directory like var log type so

00:10:19,240 --> 00:10:24,550
you can't just give access to the entire

00:10:21,460 --> 00:10:28,930
directory just because you need a file

00:10:24,550 --> 00:10:33,330
so it's split up like that and yeah so

00:10:28,930 --> 00:10:35,850
you might have apti

00:10:33,330 --> 00:10:39,480
gets to write files that are called app

00:10:35,850 --> 00:10:41,970
log TV and they're in a directory called

00:10:39,480 --> 00:10:44,970
VAR log T or if you want to read write

00:10:41,970 --> 00:10:47,010
the socket file for my sequel it'll be

00:10:44,970 --> 00:10:48,390
in that directory and it's labeled that

00:10:47,010 --> 00:10:50,730
these happen to be the same but that

00:10:48,390 --> 00:10:53,850
like is not always the case so you gotta

00:10:50,730 --> 00:10:57,150
write out and they take three parameters

00:10:53,850 --> 00:11:00,840
the container is the middle one and the

00:10:57,150 --> 00:11:03,540
domain is the the sort like the source

00:11:00,840 --> 00:11:09,930
one who is running the thing like your

00:11:03,540 --> 00:11:13,350
demon or whatever your domain is file

00:11:09,930 --> 00:11:15,660
trends are very important and also

00:11:13,350 --> 00:11:19,920
really complicated to get your head

00:11:15,660 --> 00:11:23,010
around in the beginning they are without

00:11:19,920 --> 00:11:25,950
these and there's also Dom trance which

00:11:23,010 --> 00:11:30,320
is to change domain but they the

00:11:25,950 --> 00:11:34,280
transition basically starts you in one

00:11:30,320 --> 00:11:36,630
domain and you end up in another domain

00:11:34,280 --> 00:11:39,530
because otherwise everything would

00:11:36,630 --> 00:11:43,410
always be in one which is useless so you

00:11:39,530 --> 00:11:47,700
might have a transition from init T into

00:11:43,410 --> 00:11:50,550
like Apache T and then you would set a

00:11:47,700 --> 00:11:51,990
file transition right now if you would

00:11:50,550 --> 00:11:54,450
set a transition in general you might

00:11:51,990 --> 00:11:58,170
have when in it runs a file called

00:11:54,450 --> 00:12:03,690
Apache exact TV it'll end up with the

00:11:58,170 --> 00:12:06,780
process in Apache T and then file trends

00:12:03,690 --> 00:12:09,810
are what you encounter the most because

00:12:06,780 --> 00:12:13,720
usually the problems are file labels on

00:12:09,810 --> 00:12:17,970
disk so if you want to have

00:12:13,720 --> 00:12:22,089
a file or directory called Apache and

00:12:17,970 --> 00:12:25,209
you want it labeled HTTP log to and it's

00:12:22,089 --> 00:12:30,040
going to be in var log T you can set a

00:12:25,209 --> 00:12:34,060
file transp a turn when httpd creates a

00:12:30,040 --> 00:12:36,370
file or creates a directory and the

00:12:34,060 --> 00:12:40,120
directory is this parameter when it

00:12:36,370 --> 00:12:46,029
creates it in this directory it makes it

00:12:40,120 --> 00:12:47,949
into that label so this pattern gives

00:12:46,029 --> 00:12:51,579
you only the bare minimum that you need

00:12:47,949 --> 00:12:54,639
on the direct on the parent directory so

00:12:51,579 --> 00:12:58,449
you don't get more than you need and

00:12:54,639 --> 00:13:00,930
then it sets up the permissions to

00:12:58,449 --> 00:13:05,439
create the new source of the new

00:13:00,930 --> 00:13:07,509
directory you can do this based on any

00:13:05,439 --> 00:13:10,810
file name which is usually the case

00:13:07,509 --> 00:13:14,829
there's also file name specific ones

00:13:10,810 --> 00:13:18,100
which is useful if it's not needed that

00:13:14,829 --> 00:13:20,889
often but sometimes you'll have one

00:13:18,100 --> 00:13:22,240
daemon creates many files in the same

00:13:20,889 --> 00:13:25,720
directory but they need to end up as

00:13:22,240 --> 00:13:27,399
different types if you think like in it

00:13:25,720 --> 00:13:29,319
or something like that and it will need

00:13:27,399 --> 00:13:31,990
to create like the pig files for

00:13:29,319 --> 00:13:34,000
different demons being a certain

00:13:31,990 --> 00:13:36,250
directory or maybe it's creating them in

00:13:34,000 --> 00:13:38,259
run and it needs to create like run

00:13:36,250 --> 00:13:40,209
Apache run my sequel and they need to be

00:13:38,259 --> 00:13:44,860
different types so then you would create

00:13:40,209 --> 00:13:49,209
a named file transition on that specific

00:13:44,860 --> 00:13:52,720
name it has to be a specific name you

00:13:49,209 --> 00:13:54,670
can't like you can't do any races for

00:13:52,720 --> 00:13:58,839
this stuff it has to be a specific match

00:13:54,670 --> 00:14:02,139
only know like prefixes or anything so

00:13:58,839 --> 00:14:04,809
it kind of sucks if you have stuff in

00:14:02,139 --> 00:14:06,819
like temp because usually people in temp

00:14:04,809 --> 00:14:09,699
give things random names like they'll

00:14:06,819 --> 00:14:12,250
name it like Dropbox - and a whole bunch

00:14:09,699 --> 00:14:14,440
of numbers so it doesn't work at all for

00:14:12,250 --> 00:14:18,280
that so

00:14:14,440 --> 00:14:24,880
kind of sorry but it's needed when you

00:14:18,280 --> 00:14:28,090
need it so the policy modules if you

00:14:24,880 --> 00:14:32,800
look in the home directory on the VM I

00:14:28,090 --> 00:14:36,820
made a really simple my apt e for a

00:14:32,800 --> 00:14:42,340
simple Python web server and it's split

00:14:36,820 --> 00:14:44,740
into three things so the idea is

00:14:42,340 --> 00:14:47,620
basically every module should have its

00:14:44,740 --> 00:14:49,750
own stuff and only the module can access

00:14:47,620 --> 00:14:53,740
its own types directly so that's why you

00:14:49,750 --> 00:14:55,630
need the interfaces so if apache wants

00:14:53,740 --> 00:14:57,520
to allow other people to read and write

00:14:55,630 --> 00:15:01,210
its log files it's log files are going

00:14:57,520 --> 00:15:05,830
to be called Apache log T or HTTP D log

00:15:01,210 --> 00:15:08,320
T so other people can't use that type

00:15:05,830 --> 00:15:09,970
directly in their other ones so they

00:15:08,320 --> 00:15:12,850
will call the interface instead and the

00:15:09,970 --> 00:15:14,560
interface will set up like the rules

00:15:12,850 --> 00:15:16,720
they actually need this allows like if

00:15:14,560 --> 00:15:17,860
you need to change types underneath you

00:15:16,720 --> 00:15:23,200
don't have to change every other module

00:15:17,860 --> 00:15:26,650
around being general the name of all

00:15:23,200 --> 00:15:29,560
that types and all the interfaces in the

00:15:26,650 --> 00:15:31,690
module should be named the same some

00:15:29,560 --> 00:15:35,230
modules are not as good as at that as

00:15:31,690 --> 00:15:37,300
others Apache is kind of a huge monster

00:15:35,230 --> 00:15:38,980
of a policy because a lot of different

00:15:37,300 --> 00:15:39,790
things that web server does so it's kind

00:15:38,980 --> 00:15:42,160
of all over the place

00:15:39,790 --> 00:15:46,410
most of types actually start with HTTP D

00:15:42,160 --> 00:15:46,410
instead of Apache but and

00:15:48,480 --> 00:15:56,830
so if you build it you use the make file

00:15:53,980 --> 00:15:58,839
that responds he puts on the system i've

00:15:56,830 --> 00:16:00,370
actually seemed linked to in vm so it

00:15:58,839 --> 00:16:03,910
should just work if you just type make

00:16:00,370 --> 00:16:08,020
and then you load the molecule in so

00:16:03,910 --> 00:16:11,890
this like SE module - i Apache WP then

00:16:08,020 --> 00:16:16,420
it'll load up the PP like the policy

00:16:11,890 --> 00:16:18,250
module into the whole like list of all

00:16:16,420 --> 00:16:19,870
the other module in the system put them

00:16:18,250 --> 00:16:21,520
all together and then save it back is

00:16:19,870 --> 00:16:23,260
that policy at all 31 file from the

00:16:21,520 --> 00:16:28,480
beginning and then that gets loaded into

00:16:23,260 --> 00:16:29,610
kernel interfaces these are the ones

00:16:28,480 --> 00:16:35,190
I've been talking about all the time

00:16:29,610 --> 00:16:41,730
they're named in general module name

00:16:35,190 --> 00:16:41,730
verb predicate so Apache append blog or

00:16:43,140 --> 00:16:48,640
logging is the module for most things

00:16:46,390 --> 00:16:52,000
under var log and stuff like that so if

00:16:48,640 --> 00:16:56,200
you want to file trans to the log type

00:16:52,000 --> 00:16:56,680
or from the log type better or GPG dumb

00:16:56,200 --> 00:17:00,579
trans

00:16:56,680 --> 00:17:04,800
this will allow app T to run GPG and

00:17:00,579 --> 00:17:04,800
when it does so it'll run it in G pget

00:17:05,459 --> 00:17:12,540
modifier is usually don't Aude it so

00:17:10,839 --> 00:17:16,870
there's another set of rules which are

00:17:12,540 --> 00:17:20,050
like allow rules except when you run

00:17:16,870 --> 00:17:21,809
them they don't allow any access they

00:17:20,050 --> 00:17:26,020
just tell it to shut up about things

00:17:21,809 --> 00:17:27,309
there's a lot of programs try to do

00:17:26,020 --> 00:17:29,350
things but they don't actually ever need

00:17:27,309 --> 00:17:31,030
the thing like they try to just get at

00:17:29,350 --> 00:17:32,800
it on like a lot of files but they don't

00:17:31,030 --> 00:17:34,150
actually need access to any of them so

00:17:32,800 --> 00:17:35,620
you can either give it the rule to make

00:17:34,150 --> 00:17:38,740
it shut up or you can just tell to shut

00:17:35,620 --> 00:17:42,420
up and then it stops your logs filling

00:17:38,740 --> 00:17:42,420
up from all the other stuff so

00:17:43,590 --> 00:17:50,440
occasionally one of these don't audits

00:17:46,480 --> 00:17:53,019
will hide something that's actually like

00:17:50,440 --> 00:17:54,190
important for your like you you try and

00:17:53,019 --> 00:17:55,960
run things you don't see anything in the

00:17:54,190 --> 00:18:00,970
log but it still doesn't work then you

00:17:55,960 --> 00:18:02,529
can run SC module D B and D will turn

00:18:00,970 --> 00:18:04,600
off all the don't audits in the entire

00:18:02,529 --> 00:18:07,330
policy and then you will get really

00:18:04,600 --> 00:18:09,820
everything it's quite overwhelming but

00:18:07,330 --> 00:18:12,309
sometimes you need to do that and then

00:18:09,820 --> 00:18:13,720
to turn the back on you just SC module -

00:18:12,309 --> 00:18:18,330
B and it will rebuild the whole policy

00:18:13,720 --> 00:18:18,330
again and like have they don't audits on

00:18:19,110 --> 00:18:28,899
finding interfaces this is the hardest

00:18:23,019 --> 00:18:31,630
part you pretty much have to and you get

00:18:28,899 --> 00:18:34,929
them pretty quick after a while but it

00:18:31,630 --> 00:18:36,370
does take a while to get used to you the

00:18:34,929 --> 00:18:39,519
names are pretty good in general like

00:18:36,370 --> 00:18:41,350
you you can usually guess very close to

00:18:39,519 --> 00:18:43,809
what the name will be after seeing them

00:18:41,350 --> 00:18:48,039
for a while but to help with this there

00:18:43,809 --> 00:18:52,779
are these Bosch macros which will search

00:18:48,039 --> 00:18:55,110
the policy for things that you need so

00:18:52,779 --> 00:18:58,899
if you want for example a file trends

00:18:55,110 --> 00:19:04,059
for logs but you don't know exactly what

00:18:58,899 --> 00:19:07,299
it's called then you can se find if file

00:19:04,059 --> 00:19:10,720
trends it's a it's a rake so dot star

00:19:07,299 --> 00:19:11,799
instead of star VAR log and then it'll

00:19:10,720 --> 00:19:16,389
search through everything it'll say oh

00:19:11,799 --> 00:19:19,059
in logging IIF I found logging log file

00:19:16,389 --> 00:19:21,340
trends and this is the map this is the

00:19:19,059 --> 00:19:27,309
line within that interface that matched

00:19:21,340 --> 00:19:28,929
what you searched for and then there are

00:19:27,309 --> 00:19:30,820
more I just cut them out from the slide

00:19:28,929 --> 00:19:33,279
so you find that one and that one looks

00:19:30,820 --> 00:19:35,440
like the right one then you can se show

00:19:33,279 --> 00:19:38,080
if logging log file trans and it'll show

00:19:35,440 --> 00:19:39,580
you the entire interface so if you look

00:19:38,080 --> 00:19:43,720
at that one and then you see oh the file

00:19:39,580 --> 00:19:45,580
trends on log and it also gives you

00:19:43,720 --> 00:19:47,350
sibling access so that's probably the

00:19:45,580 --> 00:19:49,640
one you want and then you can use that

00:19:47,350 --> 00:19:51,950
in your policy problem

00:19:49,640 --> 00:19:54,620
and SCE

00:19:51,950 --> 00:19:56,740
so this as he find if and find death and

00:19:54,620 --> 00:19:59,720
se show if and show deaf because

00:19:56,740 --> 00:20:06,380
interfaces and defines are different

00:19:59,720 --> 00:20:08,210
places in the policy so you like the the

00:20:06,380 --> 00:20:09,410
defines are not very many of them so

00:20:08,210 --> 00:20:11,210
they're pretty easy to know when

00:20:09,410 --> 00:20:15,160
something should be a defined so try

00:20:11,210 --> 00:20:15,160
that otherwise it's always an interface

00:20:15,790 --> 00:20:25,220
boolean czar another part of the policy

00:20:19,280 --> 00:20:27,710
they're very important and the basic

00:20:25,220 --> 00:20:29,240
idea is that different programs have

00:20:27,710 --> 00:20:30,650
lots of different features but you don't

00:20:29,240 --> 00:20:34,130
always want to access all of them or

00:20:30,650 --> 00:20:37,400
enable all of them so if you think about

00:20:34,130 --> 00:20:39,380
it your web server might just serve

00:20:37,400 --> 00:20:40,640
static files so you wouldn't want that

00:20:39,380 --> 00:20:42,950
the web server to have access to

00:20:40,640 --> 00:20:46,490
anything else the very basic case is it

00:20:42,950 --> 00:20:49,280
accesses like the VAR w wh t ml and only

00:20:46,490 --> 00:20:53,920
files in there i can read and nothing

00:20:49,280 --> 00:20:53,920
else at all but then maybe you have

00:20:54,360 --> 00:21:00,390
like a MySQL server on the same machine

00:20:57,570 --> 00:21:02,309
and then it's fine it can you access it

00:21:00,390 --> 00:21:04,110
over the sock file then it wouldn't need

00:21:02,309 --> 00:21:06,179
any access but maybe you have your my

00:21:04,110 --> 00:21:08,010
sequel server on another machine in

00:21:06,179 --> 00:21:11,850
which case then you need Apache to

00:21:08,010 --> 00:21:13,950
connect to like the database over the

00:21:11,850 --> 00:21:17,070
over the Internet then you can enable

00:21:13,950 --> 00:21:18,510
this httpd can network connect and then

00:21:17,070 --> 00:21:21,830
it can connect over there there's

00:21:18,510 --> 00:21:26,940
actually several billions if you look at

00:21:21,830 --> 00:21:28,260
SE manage boolean - L you'll see a whole

00:21:26,940 --> 00:21:32,250
list of them and the description for

00:21:28,260 --> 00:21:33,929
them there's a CB can network Connect

00:21:32,250 --> 00:21:35,940
which gives you all network access you

00:21:33,929 --> 00:21:37,830
probably don't want to use that one then

00:21:35,940 --> 00:21:40,889
there's a if you can network connect dB

00:21:37,830 --> 00:21:42,059
there's memcache specific ones that you

00:21:40,889 --> 00:21:47,340
probably want if you don't want to give

00:21:42,059 --> 00:21:49,200
it everything then the way you set these

00:21:47,340 --> 00:21:52,440
up into policy is you first make the

00:21:49,200 --> 00:21:55,799
tunable so you give the name of it and

00:21:52,440 --> 00:21:56,880
then the false at the end is the default

00:21:55,799 --> 00:22:00,210
state for it

00:21:56,880 --> 00:22:05,010
so ref policy says that they should

00:22:00,210 --> 00:22:06,659
always be disabled so use that for if

00:22:05,010 --> 00:22:09,419
you want to choose whether to make it a

00:22:06,659 --> 00:22:12,559
negative or positive it should be off by

00:22:09,419 --> 00:22:12,559
default and it should

00:22:14,290 --> 00:22:19,120
like the the defaults they will always

00:22:17,470 --> 00:22:22,480
be often and you can enable them as

00:22:19,120 --> 00:22:24,910
needed some distros RedHat enables quite

00:22:22,480 --> 00:22:26,050
a lot of them to make things work easier

00:22:24,910 --> 00:22:28,480
in the general case in which case that

00:22:26,050 --> 00:22:31,120
you might want to turn some off Gentoo

00:22:28,480 --> 00:22:37,540
turns some on but leaves almost all of

00:22:31,120 --> 00:22:41,380
them off I don't know for Debian all

00:22:37,540 --> 00:22:42,340
right so now if you want to play around

00:22:41,380 --> 00:22:45,940
with a real policy

00:22:42,340 --> 00:22:49,720
I give around a VM image it's got a

00:22:45,940 --> 00:22:52,150
really simple Python script which

00:22:49,720 --> 00:22:55,150
listens on port 8080 by default and it

00:22:52,150 --> 00:23:00,820
saves its logs in var log server

00:22:55,150 --> 00:23:03,160
somewhere so by default I loaded the

00:23:00,820 --> 00:23:04,510
policy already it should just work if

00:23:03,160 --> 00:23:08,620
you load it up and then you can like

00:23:04,510 --> 00:23:16,480
curl localhost 8080 and it'll give you

00:23:08,620 --> 00:23:19,480
some stuff out you search dash m to look

00:23:16,480 --> 00:23:19,840
for ABCs and recent recent about last 15

00:23:19,480 --> 00:23:22,590
minutes

00:23:19,840 --> 00:23:24,940
it was also - yes like today or

00:23:22,590 --> 00:23:30,240
something like that if you want to get

00:23:24,940 --> 00:23:30,240
longer time and look at them and then

00:23:30,590 --> 00:23:36,649
that's how I made and loaded all C's so

00:23:33,740 --> 00:23:40,789
if you do that you'll get it if you

00:23:36,649 --> 00:23:45,559
instead do SV module - X 500 to say the

00:23:40,789 --> 00:23:47,629
level 501 and then - are my app it'll

00:23:45,559 --> 00:23:49,490
remove the policy so if you do that then

00:23:47,629 --> 00:23:57,320
the whole Python script will just like

00:23:49,490 --> 00:23:59,160
die so this is the VM if I show you can

00:23:57,320 --> 00:24:03,260
you see there

00:23:59,160 --> 00:24:03,260
maybe not huh

00:24:03,960 --> 00:24:09,010
No

00:24:05,900 --> 00:24:09,010
I don't I do that

00:24:17,100 --> 00:24:23,600
is that bigger that's a bit bigger all

00:24:20,580 --> 00:24:26,900
right so if we look at this

00:24:23,600 --> 00:24:26,900
that's the

00:24:28,680 --> 00:24:32,410
it's not very much I took most of it

00:24:31,390 --> 00:24:39,250
from stackoverflow

00:24:32,410 --> 00:24:42,010
it saves the it saves the logs into the

00:24:39,250 --> 00:24:47,160
log server don't log and it binds to

00:24:42,010 --> 00:24:47,160
port 8080 by default so if you run this

00:24:47,550 --> 00:24:54,420
and then another one if I curl

00:24:57,570 --> 00:25:05,390
it gets a request it's not very

00:25:00,450 --> 00:25:05,390
interesting the demon itself it's

00:25:06,710 --> 00:25:13,580
so then if we look in Ceylon X

00:25:15,250 --> 00:25:26,450
these are the three files in it so if we

00:25:20,120 --> 00:25:31,640
look at my app te this is the policy

00:25:26,450 --> 00:25:34,450
that allows this script to work the top

00:25:31,640 --> 00:25:34,450
you define

00:25:35,910 --> 00:25:42,120
type 4 the domain and the type 4 the

00:25:39,240 --> 00:25:44,730
file and in general their name my app T

00:25:42,120 --> 00:25:46,530
and my app exactiy it's just sort of

00:25:44,730 --> 00:25:48,120
it's not required but it's sort of

00:25:46,530 --> 00:25:51,330
convention so everyone kind of

00:25:48,120 --> 00:25:54,570
understands usually what they mean then

00:25:51,330 --> 00:25:58,560
this is an interface which sets up all

00:25:54,570 --> 00:26:01,080
the really common operations you need it

00:25:58,560 --> 00:26:03,180
will mark my app exacty as a file type

00:26:01,080 --> 00:26:05,400
so it can be on disk it'll mark the

00:26:03,180 --> 00:26:07,790
other one as a domain and it'll set up

00:26:05,400 --> 00:26:11,220
the transition from your normal user

00:26:07,790 --> 00:26:13,710
running it to allow it to run these

00:26:11,220 --> 00:26:22,740
things and then there's the type for the

00:26:13,710 --> 00:26:26,430
log and it's a log file then this needs

00:26:22,740 --> 00:26:29,130
to be able to do stream socket stuff for

00:26:26,430 --> 00:26:30,780
TCP so this is a self rule which means

00:26:29,130 --> 00:26:32,370
it the source and destination of the

00:26:30,780 --> 00:26:34,230
same thing for some rules are like that

00:26:32,370 --> 00:26:39,030
others are not depending on what the

00:26:34,230 --> 00:26:42,240
thing aren't then if we go to these

00:26:39,030 --> 00:26:46,770
Cornette rules the Cornette TCP bind

00:26:42,240 --> 00:26:51,680
generic and bind HTTP cache port so this

00:26:46,770 --> 00:26:55,530
allows access on HTTP cache port type

00:26:51,680 --> 00:26:58,770
which is port 8080 I did not actually

00:26:55,530 --> 00:27:00,780
give it access to HTTP port like the

00:26:58,770 --> 00:27:03,260
main one so if you try and run this

00:27:00,780 --> 00:27:03,260
script

00:27:04,280 --> 00:27:08,310
on port 80 instead it will die with

00:27:07,380 --> 00:27:11,550
permission denied

00:27:08,310 --> 00:27:14,340
so if you want to see what the ports are

00:27:11,550 --> 00:27:20,880
you se managed port L and then there's a

00:27:14,340 --> 00:27:26,180
lot of them and you can grep through

00:27:20,880 --> 00:27:26,180
whatever you want so if we look for

00:27:27,080 --> 00:27:31,710
there are HTTP cache port which are

00:27:30,330 --> 00:27:38,760
these ones

00:27:31,710 --> 00:27:41,900
there's HTTP port which is 80 443 we try

00:27:38,760 --> 00:27:41,900
if you wanted to add

00:27:43,640 --> 00:27:55,610
also here bind HTTP port instead and

00:27:50,770 --> 00:27:57,850
then load this up I think an eternal

00:27:55,610 --> 00:27:57,850
fetch

00:28:01,140 --> 00:28:05,830
now if I run it it'll actually bind to

00:28:03,430 --> 00:28:10,090
the port so you can give it access on a

00:28:05,830 --> 00:28:13,690
per port type basis there's another way

00:28:10,090 --> 00:28:15,910
if a mall if a policy only gives access

00:28:13,690 --> 00:28:17,830
to a certain port and you really want to

00:28:15,910 --> 00:28:20,200
bind Apache to port one two three four

00:28:17,830 --> 00:28:26,100
you could modify the policy like that or

00:28:20,200 --> 00:28:30,100
you can use se manage port port

00:28:26,100 --> 00:28:33,370
so there's se managed port ad and then

00:28:30,100 --> 00:28:35,920
you can add the protocol only tcp ports

00:28:33,370 --> 00:28:39,880
under port number one two three four

00:28:35,920 --> 00:28:41,020
would be given this like HTTP port t and

00:28:39,880 --> 00:28:49,140
then apache would be able to bind to it

00:28:41,020 --> 00:28:49,140
as well what if we look in

00:28:49,400 --> 00:28:52,519
[Music]

00:28:53,179 --> 00:29:01,710
it's not a very complicated policy so

00:28:56,039 --> 00:29:04,610
the only context I set was on the main

00:29:01,710 --> 00:29:09,590
file of it and it's named my app exactiy

00:29:04,610 --> 00:29:09,590
so that's the one that will let it know

00:29:12,460 --> 00:29:21,570
I don't know I'm trying ctrl+ now that

00:29:17,440 --> 00:29:21,570
this is DM where this is

00:29:22,660 --> 00:29:36,400
he's feeling yeah is that better I don't

00:29:29,350 --> 00:29:39,480
know how to make a bigger oh well sorry

00:29:36,400 --> 00:29:39,480
maybe you can move closer

00:29:39,790 --> 00:29:47,110
so if you do LS stash dead capital Zed

00:29:44,480 --> 00:29:49,400
then you get the context as well so the

00:29:47,110 --> 00:29:52,160
like without is act so these are their

00:29:49,400 --> 00:29:54,920
extra bits down the well that's really

00:29:52,160 --> 00:29:57,470
small it's labeled myapp exactiy and

00:29:54,920 --> 00:29:57,920
this is the one that lets the transition

00:29:57,470 --> 00:30:01,400
happen

00:29:57,920 --> 00:30:06,460
so if you instead change the context on

00:30:01,400 --> 00:30:06,460
this to just be in T and set it

00:30:09,059 --> 00:30:12,820
now it's regular binti and then you try

00:30:11,679 --> 00:30:15,850
and run the server it's going to fail

00:30:12,820 --> 00:30:17,980
because regular binti means that you can

00:30:15,850 --> 00:30:22,000
just run it but it doesn't do any file

00:30:17,980 --> 00:30:24,269
transitions or anything so if you fix up

00:30:22,000 --> 00:30:24,269
the

00:30:28,500 --> 00:30:37,220
if you put the file context back to what

00:30:32,700 --> 00:30:37,220
it should be then it works again

00:30:44,999 --> 00:30:54,119
I only made a really small interface for

00:30:48,449 --> 00:30:59,389
this usually every module should have a

00:30:54,119 --> 00:31:02,459
roll interface which process is that

00:30:59,389 --> 00:31:05,699
different rolls need to use so there's

00:31:02,459 --> 00:31:07,919
like regular users on the system will

00:31:05,699 --> 00:31:11,579
run under user T and the sysadmin will

00:31:07,919 --> 00:31:15,619
be like sis Adam T so there's different

00:31:11,579 --> 00:31:15,619
roll policies as well if you look in

00:31:19,450 --> 00:31:28,760
there's there's a staff module there's a

00:31:25,520 --> 00:31:34,580
user the system module there's a user

00:31:28,760 --> 00:31:37,070
domain module so each of these modules

00:31:34,580 --> 00:31:40,990
will call the roll

00:31:37,070 --> 00:31:45,410
interface on all these other modules and

00:31:40,990 --> 00:31:47,930
then give it access I didn't do it

00:31:45,410 --> 00:31:49,940
properly on this one I added it in

00:31:47,930 --> 00:31:51,830
itself like this which you're not

00:31:49,940 --> 00:31:54,140
supposed to do if you put it in the real

00:31:51,830 --> 00:31:56,360
policy this line at the bottom should

00:31:54,140 --> 00:32:01,460
actually be in the staff module or in

00:31:56,360 --> 00:32:04,970
the system model but this keeps it self

00:32:01,460 --> 00:32:06,970
contained in this thing and now we can

00:32:04,970 --> 00:32:09,970
go through some other of these

00:32:06,970 --> 00:32:09,970
interfaces

00:32:11,750 --> 00:32:20,279
the use interactive fps and the use

00:32:17,940 --> 00:32:22,080
inherited terminals these little ones to

00:32:20,279 --> 00:32:24,870
allow the module to print to your screen

00:32:22,080 --> 00:32:26,429
if you don't give that one then you run

00:32:24,870 --> 00:32:30,559
things and they'll all be silent and

00:32:26,429 --> 00:32:30,559
it's kind of weird until you remember

00:32:31,399 --> 00:32:43,740
then this was the log transition pretty

00:32:37,110 --> 00:32:48,559
much what I explained earlier yeah it's

00:32:43,740 --> 00:32:53,220
quite a short module so not that useful

00:32:48,559 --> 00:32:57,380
this is the whole policy itself so if

00:32:53,220 --> 00:32:57,380
you look in policy

00:33:02,259 --> 00:33:07,159
if you look at policy support there's

00:33:05,059 --> 00:33:10,659
all these different support macros so

00:33:07,159 --> 00:33:10,659
these are the ones I mentioned earlier

00:33:14,630 --> 00:33:20,640
first there's a whole bunch for

00:33:16,590 --> 00:33:22,500
different class sets which are like

00:33:20,640 --> 00:33:25,260
directory class they're not used very

00:33:22,500 --> 00:33:28,140
much at all then these are the more

00:33:25,260 --> 00:33:32,040
useful ones so these are get attribute

00:33:28,140 --> 00:33:35,760
on files set attributes and map the

00:33:32,040 --> 00:33:38,910
files exec the files append them read

00:33:35,760 --> 00:33:41,010
write create so there are a lot of these

00:33:38,910 --> 00:33:42,930
and they all follow the same naming

00:33:41,010 --> 00:33:45,680
convention so it's really easy to know

00:33:42,930 --> 00:33:45,680
what they're called

00:33:49,500 --> 00:33:53,850
and there's also they're not just for

00:33:52,169 --> 00:33:54,990
files like on regular things

00:33:53,850 --> 00:33:57,120
everything's kind of the same file but

00:33:54,990 --> 00:33:59,250
there are different classes specifically

00:33:57,120 --> 00:34:01,890
for block files versus char files or

00:33:59,250 --> 00:34:03,960
sockets so if you give access to a file

00:34:01,890 --> 00:34:05,789
and somebody changes the file underneath

00:34:03,960 --> 00:34:09,060
telling me to be a symlink it doesn't

00:34:05,789 --> 00:34:11,700
work anymore like it's specifically kept

00:34:09,060 --> 00:34:13,710
separate for everything like that so you

00:34:11,700 --> 00:34:17,280
need to keep in mind when you write the

00:34:13,710 --> 00:34:19,080
policy if people might be changing that

00:34:17,280 --> 00:34:23,190
to a symlink as well you might want to

00:34:19,080 --> 00:34:25,530
give that permission anyway so most of

00:34:23,190 --> 00:34:28,010
the modules are under policy modules and

00:34:25,530 --> 00:34:32,429
there's a bunch of different them once

00:34:28,010 --> 00:34:35,570
so if you looked under contrib there's a

00:34:32,429 --> 00:34:35,570
lot of these

00:34:37,090 --> 00:34:40,140
so if we pick a

00:34:41,560 --> 00:34:47,980
like there's a policy on chromium it has

00:34:45,540 --> 00:34:50,110
first a whole bunch of balloons because

00:34:47,980 --> 00:34:54,179
maybe not everyone wants to run Java so

00:34:50,110 --> 00:34:57,370
you can turn that off and then there's a

00:34:54,179 --> 00:34:59,020
one to allow chromium to read USB

00:34:57,370 --> 00:35:01,120
devices if you have a Yubikey or

00:34:59,020 --> 00:35:03,610
something like that and that's off by

00:35:01,120 --> 00:35:06,010
default as well and these are all the

00:35:03,610 --> 00:35:10,990
types and there's a lot of different

00:35:06,010 --> 00:35:16,180
things then we get to the optional

00:35:10,990 --> 00:35:19,600
policy part so these things might not

00:35:16,180 --> 00:35:22,000
always exist in other systems since the

00:35:19,600 --> 00:35:24,550
policies are modular you can load only

00:35:22,000 --> 00:35:28,000
the modules you need so if you don't

00:35:24,550 --> 00:35:30,520
have cups loaded on your system this

00:35:28,000 --> 00:35:34,240
cups read config and cup stream connect

00:35:30,520 --> 00:35:36,760
those two interfaces require cups to be

00:35:34,240 --> 00:35:40,020
present if it's not loaded those two

00:35:36,760 --> 00:35:43,090
will fail so this optional policy block

00:35:40,020 --> 00:35:45,100
means that it will check all those

00:35:43,090 --> 00:35:47,350
interfaces what they require and if it

00:35:45,100 --> 00:35:51,450
doesn't like if the requirements aren't

00:35:47,350 --> 00:35:56,380
mashed it takes the whole block out so

00:35:51,450 --> 00:35:59,620
you can use cups like that so the D bus

00:35:56,380 --> 00:36:01,600
one there's access for all the different

00:35:59,620 --> 00:36:03,280
D bus things all together so if they

00:36:01,600 --> 00:36:05,320
don't work it doesn't keep part of them

00:36:03,280 --> 00:36:09,510
it'll keep it'll knock out the entire

00:36:05,320 --> 00:36:09,510
block not just part

00:36:12,990 --> 00:36:21,160
there's also if deaths if you need to

00:36:16,710 --> 00:36:23,740
set they're kind of like tuna balls but

00:36:21,160 --> 00:36:28,210
they're set during build time so user

00:36:23,740 --> 00:36:29,740
can change those so you have to use them

00:36:28,210 --> 00:36:32,560
because you can't use a tunable

00:36:29,740 --> 00:36:34,000
everywhere but trying not to use them

00:36:32,560 --> 00:36:36,690
and try to use tables instead because

00:36:34,000 --> 00:36:36,690
they're better

00:36:40,940 --> 00:36:48,760
are there any questions or something and

00:36:43,849 --> 00:36:48,760
particularly want to see or do or

00:36:53,570 --> 00:36:56,470
I cover

00:37:14,770 --> 00:37:20,050
so you find the kindness of all favorite

00:37:17,380 --> 00:37:22,740
letters of usage today they'd start of

00:37:20,050 --> 00:37:22,740
it is

00:37:24,030 --> 00:37:28,820
the onesie

00:37:26,250 --> 00:37:28,820
boy

00:37:31,040 --> 00:37:36,540
Red Hat enables a lot of them because

00:37:34,609 --> 00:37:38,400
they don't know exactly what you're

00:37:36,540 --> 00:37:41,460
going to use so they want the general

00:37:38,400 --> 00:37:45,960
case to work there are some boolean x'

00:37:41,460 --> 00:37:49,230
which you may want to look at like

00:37:45,960 --> 00:37:52,530
there's a there's something like allow

00:37:49,230 --> 00:37:54,650
Kerberos which Kerberos requires network

00:37:52,530 --> 00:37:59,220
access for everything that uses Kerberos

00:37:54,650 --> 00:38:01,230
so if you don't use Kerberos you

00:37:59,220 --> 00:38:02,369
probably want to turn that off I don't

00:38:01,230 --> 00:38:06,420
know if they have it on or not by

00:38:02,369 --> 00:38:08,880
default but if they do because you might

00:38:06,420 --> 00:38:10,140
use Kerberos for logging in so then you

00:38:08,880 --> 00:38:11,579
obviously want to keep it all but you

00:38:10,140 --> 00:38:13,819
don't just turn everything off because

00:38:11,579 --> 00:38:16,550
then you're like a lottery machine but

00:38:13,819 --> 00:38:21,930
you can read the descriptions for them

00:38:16,550 --> 00:38:26,579
as he managed this command boolean - L

00:38:21,930 --> 00:38:28,770
will list all the names of them the

00:38:26,579 --> 00:38:33,359
description over here and the on/off

00:38:28,770 --> 00:38:36,359
thing is there's two ways to set it you

00:38:33,359 --> 00:38:38,910
can set it permanently in the policy so

00:38:36,359 --> 00:38:41,520
it'll happen every time you reboot it'll

00:38:38,910 --> 00:38:46,170
be back to that state then you can set

00:38:41,520 --> 00:38:47,460
them on and off only now but they're not

00:38:46,170 --> 00:38:49,980
saved in the policy so next time you

00:38:47,460 --> 00:38:53,599
reboot it'll be back to what it is by

00:38:49,980 --> 00:38:53,599
default so

00:38:54,410 --> 00:39:02,780
there are some like there's this secure

00:38:56,390 --> 00:39:05,799
mode policy and in Multan policy load if

00:39:02,780 --> 00:39:09,319
you turn that one off we've done one on

00:39:05,799 --> 00:39:11,180
then you can never reload the policy at

00:39:09,319 --> 00:39:13,549
all like it removes all the permissions

00:39:11,180 --> 00:39:14,990
to allow you to reload the policy the

00:39:13,549 --> 00:39:17,180
only way to reload that one is to reboot

00:39:14,990 --> 00:39:19,520
so it's disabled and then load it again

00:39:17,180 --> 00:39:23,539
so if you have a really secure system

00:39:19,520 --> 00:39:24,680
you might want to set things up make

00:39:23,539 --> 00:39:26,660
sure they're all working and then flip

00:39:24,680 --> 00:39:28,460
that one on but you probably want to set

00:39:26,660 --> 00:39:30,020
it on boot every time because if you set

00:39:28,460 --> 00:39:32,859
it permanently then like disabling it's

00:39:30,020 --> 00:39:32,859
a real pain in the ass

00:39:35,260 --> 00:39:40,060
and you don't want to just turn off

00:39:37,570 --> 00:39:43,300
everything because there's for example

00:39:40,060 --> 00:39:45,130
global SSP is the one to allow every

00:39:43,300 --> 00:39:47,380
domain to access you random because you

00:39:45,130 --> 00:39:49,330
need it for the stack smashing Canaries

00:39:47,380 --> 00:39:53,140
so if you turn that one off then it's

00:39:49,330 --> 00:39:55,810
worse than on so don't just like turn

00:39:53,140 --> 00:39:58,690
everything off it's not the right answer

00:39:55,810 --> 00:40:03,730
but you do read through them maybe you

00:39:58,690 --> 00:40:06,820
want to like grep for on and see which

00:40:03,730 --> 00:40:11,890
ones are on and then maybe decide to go

00:40:06,820 --> 00:40:13,630
on turn them off or yeah like console

00:40:11,890 --> 00:40:15,520
login that's probably not something to

00:40:13,630 --> 00:40:18,270
turn off either because otherwise you

00:40:15,520 --> 00:40:18,270
can't log any machine

00:40:22,599 --> 00:40:28,359
anything else

00:40:24,490 --> 00:40:31,960
other forces oh that's a thing I

00:40:28,359 --> 00:40:34,630
completely forgot little potential

00:40:31,960 --> 00:40:40,630
policies yeah thanks I completely forgot

00:40:34,630 --> 00:40:43,740
to explain that mainly you write the

00:40:40,630 --> 00:40:46,810
policy and run it and then so if I

00:40:43,740 --> 00:40:46,810
[Music]

00:40:49,650 --> 00:40:57,660
my app if I remove the policy for this

00:40:53,670 --> 00:41:01,440
thing I wrote now it just won't work at

00:40:57,660 --> 00:41:02,910
all if I lit B because it doesn't know

00:41:01,440 --> 00:41:04,200
what it was like it was something and

00:41:02,910 --> 00:41:09,390
now that types gone so now it's on

00:41:04,200 --> 00:41:12,019
labeled so if I run server alright won't

00:41:09,390 --> 00:41:12,019
even let me run it

00:41:13,620 --> 00:41:17,760
because you have no access on unlabelled

00:41:16,530 --> 00:41:23,340
it's like I don't know what the thing is

00:41:17,760 --> 00:41:26,480
so you can't do it yeah

00:41:23,340 --> 00:41:26,480
strict not targeted

00:41:27,599 --> 00:41:32,279
so if I make it like this it won't work

00:41:30,269 --> 00:41:35,009
so then usually you start by making the

00:41:32,279 --> 00:41:37,859
base thing set up its own type for the

00:41:35,009 --> 00:41:40,259
thing that you want and do that part and

00:41:37,859 --> 00:41:46,430
then I can actually just bring stuff

00:41:40,259 --> 00:41:46,430
here so if I remove like all these

00:41:47,910 --> 00:41:51,349
Network parts

00:41:52,440 --> 00:42:00,420
and then label it again it cycle so

00:41:58,230 --> 00:42:03,839
that's not very useful then you can run

00:42:00,420 --> 00:42:06,359
audit to allow which will read through

00:42:03,839 --> 00:42:11,579
your audit logs and convert the lines

00:42:06,359 --> 00:42:14,160
into like a policy thing so this one's

00:42:11,579 --> 00:42:17,640
saying it needs access on binti the

00:42:14,160 --> 00:42:23,849
other way you can do is this a you

00:42:17,640 --> 00:42:31,349
search this line and you search - M ABC

00:42:23,849 --> 00:42:33,060
- T this so this lists all the lines in

00:42:31,349 --> 00:42:37,280
the last 15 minutes that have happened

00:42:33,060 --> 00:42:37,280
so if you look here somewhere they'll be

00:42:37,730 --> 00:42:43,579
this one is user local bean server it's

00:42:42,270 --> 00:42:47,670
trying to do all these different things

00:42:43,579 --> 00:42:49,319
this is the file this is the program

00:42:47,670 --> 00:42:54,390
that's trying to do it this is the

00:42:49,319 --> 00:42:57,240
directory of the programs in you get the

00:42:54,390 --> 00:42:59,520
denied map at the bottom so the audit

00:42:57,240 --> 00:43:02,480
logs are very verbose and they're very

00:42:59,520 --> 00:43:05,220
very good for finding out what happened

00:43:02,480 --> 00:43:08,400
in the system so you run the audit

00:43:05,220 --> 00:43:12,060
daemon and it collects everything all

00:43:08,400 --> 00:43:13,770
the selinux denials and errors and

00:43:12,060 --> 00:43:16,020
everything go into the audit log but not

00:43:13,770 --> 00:43:17,609
just SELinux audit log actually collects

00:43:16,020 --> 00:43:20,310
a lot of things from the whole system

00:43:17,609 --> 00:43:23,430
you can set up you can even set up audit

00:43:20,310 --> 00:43:25,470
to look at a certain directory and tell

00:43:23,430 --> 00:43:27,240
you if anybody rights to the directory

00:43:25,470 --> 00:43:28,890
for any reason whatsoever so if you

00:43:27,240 --> 00:43:32,790
really need to know certain things audit

00:43:28,890 --> 00:43:34,650
is very powerful so if you look at this

00:43:32,790 --> 00:43:36,450
and you'll see what the denial was and

00:43:34,650 --> 00:43:42,950
then you go oh ok I need to add that

00:43:36,450 --> 00:43:42,950
back then we that one

00:43:45,350 --> 00:43:51,420
now load the policy again and try and

00:43:49,380 --> 00:43:55,410
run it and now you get a different error

00:43:51,420 --> 00:43:58,800
so writing the policies is very much an

00:43:55,410 --> 00:44:01,670
iterative approach one way you can do it

00:43:58,800 --> 00:44:01,670
is just turn off

00:44:05,820 --> 00:44:09,860
you could turn off excellence completely

00:44:10,300 --> 00:44:15,970
and run it and then see what the audit

00:44:13,180 --> 00:44:17,530
logs say and then add everything but

00:44:15,970 --> 00:44:19,540
that's a very bad way to do it because a

00:44:17,530 --> 00:44:22,320
lot of the time you don't actually need

00:44:19,540 --> 00:44:25,840
some of the permissions like some

00:44:22,320 --> 00:44:27,369
programs for whatever reason maybe we'll

00:44:25,840 --> 00:44:28,930
search a bunch of other files which are

00:44:27,369 --> 00:44:31,390
completely not needed for their

00:44:28,930 --> 00:44:33,610
operation but they just happen to do it

00:44:31,390 --> 00:44:36,610
anyway so if you do it in permissive

00:44:33,610 --> 00:44:38,230
mode you'll just add all the rules which

00:44:36,610 --> 00:44:43,810
is the wrong way to do it if you do it

00:44:38,230 --> 00:44:45,610
instead in enforcing mode it'll hit one

00:44:43,810 --> 00:44:47,410
denial and that'll be the one that makes

00:44:45,610 --> 00:44:50,950
it stop you add that one and then keep

00:44:47,410 --> 00:44:53,740
going then you'll get the smallest pulse

00:44:50,950 --> 00:44:57,930
so you can get that still lets it run

00:44:53,740 --> 00:44:57,930
which is what you're aiming for

00:44:59,460 --> 00:45:10,290
so they take it yeah

00:45:07,530 --> 00:45:12,119
and awed it is your friend it has a

00:45:10,290 --> 00:45:14,329
whole bunch of teachers so look into

00:45:12,119 --> 00:45:14,329
that

00:45:16,310 --> 00:45:22,020
the boys you have this like the

00:45:18,600 --> 00:45:24,460
chemistry wonderful

00:45:22,020 --> 00:45:27,040
Chicago's

00:45:24,460 --> 00:45:32,220
I think if you can do that you've solved

00:45:27,040 --> 00:45:32,220
the halting problem so probably not

00:45:32,369 --> 00:45:36,550
there are that's why we have the

00:45:35,020 --> 00:45:38,109
interfaces because the interface is

00:45:36,550 --> 00:45:39,760
there's a lot of things that come

00:45:38,109 --> 00:45:41,230
together a lot of the time so it's

00:45:39,760 --> 00:45:42,250
pretty obvious if you need to access the

00:45:41,230 --> 00:45:44,650
network you need to do all these other

00:45:42,250 --> 00:45:46,359
things too so you just use the interface

00:45:44,650 --> 00:45:48,070
and it will grant you the other

00:45:46,359 --> 00:45:51,010
permissions that almost always come

00:45:48,070 --> 00:45:52,960
along with it so definitely use the

00:45:51,010 --> 00:45:54,640
interfaces and don't use these rules raw

00:45:52,960 --> 00:45:59,320
like they are because then you'll miss

00:45:54,640 --> 00:46:01,839
some of them or like the interface will

00:45:59,320 --> 00:46:02,950
give you like the lock and the I octal

00:46:01,839 --> 00:46:04,770
permission even though maybe you don't

00:46:02,950 --> 00:46:07,359
need it now but maybe later or something

00:46:04,770 --> 00:46:09,910
changes and then you need to read all

00:46:07,359 --> 00:46:11,680
your stuff so just use the interfaces

00:46:09,910 --> 00:46:13,690
and they cover most things and then you

00:46:11,680 --> 00:46:15,580
just need to look in bigger blocks

00:46:13,690 --> 00:46:17,710
instead of each granular individual

00:46:15,580 --> 00:46:20,430
permission because that gets really

00:46:17,710 --> 00:46:20,430
tiring otherwise

00:46:20,820 --> 00:46:23,630
anything else

00:46:25,440 --> 00:46:30,750
I guess that's it any other questions

00:46:27,690 --> 00:46:34,340
Jason kind of getting towards the end of

00:46:30,750 --> 00:46:42,350
our time so yeah opportunities to ask

00:46:34,340 --> 00:46:42,350
yeah okay so Jason I think yep thank you

00:46:42,660 --> 00:46:47,750
[Applause]

00:46:44,960 --> 00:46:57,690
I'll put the slides up on my blog after

00:46:47,750 --> 00:46:59,400
maybe tomorrow or something yeah I've

00:46:57,690 --> 00:47:01,590
got time for that we got the next

00:46:59,400 --> 00:47:04,170
session starting about 10 11 o'clock so

00:47:01,590 --> 00:47:05,280
five minutes just settle in we'll

00:47:04,170 --> 00:47:07,910
continue from there thank you please

00:47:05,280 --> 00:47:07,910
thank you

00:51:08,480 --> 00:51:16,440
okay so just already just welcome to

00:51:11,760 --> 00:51:19,800
fuss Asia so Saturday track what we've

00:51:16,440 --> 00:51:20,940
got is the cybersecurity topic no sabe

00:51:19,800 --> 00:51:22,680
security track they were covering here

00:51:20,940 --> 00:51:24,390
and so just in between we've got a

00:51:22,680 --> 00:51:27,750
lightening session with some of the

00:51:24,390 --> 00:51:29,220
students I guess it is so really they're

00:51:27,750 --> 00:51:32,750
from the United World College of

00:51:29,220 --> 00:51:36,060
Southeast Asia they can have a group

00:51:32,750 --> 00:51:37,410
focusing on ethical hacking and so

00:51:36,060 --> 00:51:38,880
really nurturing the interest in their

00:51:37,410 --> 00:51:41,240
the kind of participation in

00:51:38,880 --> 00:51:41,240

YouTube URL: https://www.youtube.com/watch?v=GWy6vXIQxkc


