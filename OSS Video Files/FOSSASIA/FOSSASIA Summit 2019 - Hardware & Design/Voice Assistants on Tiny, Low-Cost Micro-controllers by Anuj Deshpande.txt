Title: Voice Assistants on Tiny, Low-Cost Micro-controllers by Anuj Deshpande
Publication date: 2019-03-28
Playlist: FOSSASIA Summit 2019 - Hardware & Design
Description: 
	16 March 2019 17:35, Training Room 2-2

Voice assistants like Alexa and Google Assistant offer excellent SDKs and APIs so that people can incorporate them in their hobby projects and consumer products. There is still a prohibitive cost to doing this, as $5 Raspberry Pis are not exactly available at bulk. Additionally, size is an issue.

A lesser known, but more effective way is using supercharged micro- controllers like the ESP32. The WROVER module for ESP32 comes with half a megabyte of RAM, which is more than enough for fitting voice assistants in tiny places.

In fact, we can do a lot more fun stuff with micro-controllers because of their smaller size and lower power requirements. We can embed them into appliances like light bulbs and fire alarm systems, to give them a truly ubiquitous feel.
Captions: 
	00:00:00,000 --> 00:00:06,990
judge some of you know me from my

00:00:02,850 --> 00:00:08,280
previous session but in this session I'm

00:00:06,990 --> 00:00:10,349
going to be talking so the previous

00:00:08,280 --> 00:00:11,550
session was about you know what's the

00:00:10,349 --> 00:00:12,750
difference between prototyping in

00:00:11,550 --> 00:00:13,950
production this session is going to be

00:00:12,750 --> 00:00:16,170
very different

00:00:13,950 --> 00:00:20,330
we're going to be talking about voice

00:00:16,170 --> 00:00:24,779
assistants like Alex Google oh and more

00:00:20,330 --> 00:00:28,039
on microcontrollers so typically any

00:00:24,779 --> 00:00:31,410
commercially available project product

00:00:28,039 --> 00:00:36,530
runs on a Linux based system some sort

00:00:31,410 --> 00:00:40,110
of a non-artists heavy kind of a thing

00:00:36,530 --> 00:00:42,260
but what we've been experimenting with

00:00:40,110 --> 00:00:47,670
and have been pretty successful with

00:00:42,260 --> 00:00:50,940
Atlas press F is making this run on $3

00:00:47,670 --> 00:00:56,190
and $4 chips right microcontrollers with

00:00:50,940 --> 00:00:57,870
a couple of megabytes of RAM similarly a

00:00:56,190 --> 00:01:03,600
couple of megabytes of storage and

00:00:57,870 --> 00:01:07,350
that's about it so the idea is that this

00:01:03,600 --> 00:01:12,240
becomes so cheap that this gets built

00:01:07,350 --> 00:01:15,450
into you typically like dumb things as

00:01:12,240 --> 00:01:17,009
well for example a coffee machine the

00:01:15,450 --> 00:01:19,259
barrier to entry for adding a voice

00:01:17,009 --> 00:01:23,430
assistant to it becomes very low because

00:01:19,259 --> 00:01:27,570
now it's only a few bucks so I'm from a

00:01:23,430 --> 00:01:29,130
specif so I'll be using as so unlike the

00:01:27,570 --> 00:01:33,020
previous talk all the stuff that I'm

00:01:29,130 --> 00:01:36,750
about to show is only like workable on

00:01:33,020 --> 00:01:42,000
expressive microcontrollers the github

00:01:36,750 --> 00:01:45,570
project part of this again yeah you can

00:01:42,000 --> 00:01:47,369
follow this on github and about the

00:01:45,570 --> 00:01:50,189
company we are a ten year old company we

00:01:47,369 --> 00:01:51,600
are a fabulous company the 230 employees

00:01:50,189 --> 00:01:54,810
part is a little outdated

00:01:51,600 --> 00:01:59,040
now 260 and most of you must have heard

00:01:54,810 --> 00:02:02,579
about us because of esp8266 which is one

00:01:59,040 --> 00:02:05,759
of our most popular chips and yeah yes

00:02:02,579 --> 00:02:09,030
p32 is a successor to that it comes with

00:02:05,759 --> 00:02:09,950
Bluetooth both Bluetooth classic and

00:02:09,030 --> 00:02:13,520
Bluetooth Low Energy

00:02:09,950 --> 00:02:15,349
so this is the architecture of ESP 32 so

00:02:13,520 --> 00:02:18,349
this particular attack I'm going to be

00:02:15,349 --> 00:02:20,060
talking more about ESP 32 so this is how

00:02:18,349 --> 00:02:22,400
it looks essentially what we have is a

00:02:20,060 --> 00:02:28,190
yellow agent Cooper Neil Irwin BG and

00:02:22,400 --> 00:02:29,840
Wi-Fi to microcontrollers to codes

00:02:28,190 --> 00:02:32,180
sorry one microcontroller with two codes

00:02:29,840 --> 00:02:35,239
we actually have a smaller code which we

00:02:32,180 --> 00:02:36,920
use for ultra-low power stuff but in

00:02:35,239 --> 00:02:43,760
this particular case you know we are not

00:02:36,920 --> 00:02:45,200
using it but that's it so the Bluetooth

00:02:43,760 --> 00:02:46,910
part is actually interesting because it

00:02:45,200 --> 00:02:49,760
we are building

00:02:46,910 --> 00:02:51,769
low-cost speakers so that means we want

00:02:49,760 --> 00:02:53,930
to have the bluetooth pairing like

00:02:51,769 --> 00:02:55,970
connect to a different Bluetooth speaker

00:02:53,930 --> 00:02:59,569
as well as connector phone to this

00:02:55,970 --> 00:03:02,630
particular speaker so we have an open

00:02:59,569 --> 00:03:05,480
source project on github which is the

00:03:02,630 --> 00:03:08,660
ESP audio SDK and what it essentially is

00:03:05,480 --> 00:03:12,170
it's based so this is a generic SDK for

00:03:08,660 --> 00:03:14,329
non like not related to any domain stuff

00:03:12,170 --> 00:03:15,739
so this is all the low level drivers and

00:03:14,329 --> 00:03:21,160
stuff and on top of that we have created

00:03:15,739 --> 00:03:25,250
a bunch of components which basically

00:03:21,160 --> 00:03:28,670
bring it at par with any Linux based

00:03:25,250 --> 00:03:30,890
system of course we will never have that

00:03:28,670 --> 00:03:34,670
breadth of functionality but whatever is

00:03:30,890 --> 00:03:38,680
required to run audio applications we

00:03:34,670 --> 00:03:40,880
can do so be that you know codecs like

00:03:38,680 --> 00:03:44,560
yeah I mean these are all the products

00:03:40,880 --> 00:03:48,739
that we support some of them are easier

00:03:44,560 --> 00:03:50,540
said than done we do stuff like

00:03:48,739 --> 00:03:53,690
Bluetooth because we already have

00:03:50,540 --> 00:03:55,519
bluetooth as part of a step as part of

00:03:53,690 --> 00:04:00,680
our radios we do stuff like airplane

00:03:55,519 --> 00:04:04,970
DLNA and yeah all of this so why this is

00:04:00,680 --> 00:04:06,380
interesting is so if you want to do like

00:04:04,970 --> 00:04:09,650
the previous talk or if you want to put

00:04:06,380 --> 00:04:11,870
an Alex or a personalised speaker you

00:04:09,650 --> 00:04:14,870
would typically go and buy a Raspberry

00:04:11,870 --> 00:04:17,660
Pi which goes for 350 dollars I'm sorry

00:04:14,870 --> 00:04:19,820
35 dollars

00:04:17,660 --> 00:04:22,430
so which typically goes for 3 for 35

00:04:19,820 --> 00:04:24,050
dollars but you know if you want to

00:04:22,430 --> 00:04:27,610
they could really go to production and

00:04:24,050 --> 00:04:29,990
you really think about the cost then

00:04:27,610 --> 00:04:32,600
microcontroller is always going to cost

00:04:29,990 --> 00:04:34,729
less as compared to a microprocessor

00:04:32,600 --> 00:04:37,699
that because that is because it's got

00:04:34,729 --> 00:04:39,410
its RAM built into it the flash is

00:04:37,699 --> 00:04:41,120
typically an external component but it's

00:04:39,410 --> 00:04:42,500
pretty cheap because you don't require

00:04:41,120 --> 00:04:47,300
as much because you are not running

00:04:42,500 --> 00:04:49,190
Linux and yeah I mean it's a very small

00:04:47,300 --> 00:04:52,009
constraint system which has very few

00:04:49,190 --> 00:04:53,570
other passives or other components that

00:04:52,009 --> 00:04:55,009
are required which is never the case

00:04:53,570 --> 00:04:59,509
when you are building a Linux based

00:04:55,009 --> 00:05:01,400
system so based on so because we have

00:04:59,509 --> 00:05:03,410
Wi-Fi which gives us Internet

00:05:01,400 --> 00:05:06,320
connectivity we can also do a lot of

00:05:03,410 --> 00:05:11,570
music related stuff so all of these

00:05:06,320 --> 00:05:13,639
players have their own standards so it's

00:05:11,570 --> 00:05:16,039
all essentially at the end

00:05:13,639 --> 00:05:18,320
HLS which is HTTP Live Streaming so

00:05:16,039 --> 00:05:20,240
there are some versions of it not

00:05:18,320 --> 00:05:22,849
everybody follows standards which is

00:05:20,240 --> 00:05:25,099
something that we are used to but yeah

00:05:22,849 --> 00:05:29,440
essentially we are fetching music

00:05:25,099 --> 00:05:32,320
remotely and playing it on our speakers

00:05:29,440 --> 00:05:34,849
the typical target products for this

00:05:32,320 --> 00:05:37,400
some of them you might already have in

00:05:34,849 --> 00:05:41,419
your house some of them might not be

00:05:37,400 --> 00:05:44,479
smart yet but making it so cheap makes

00:05:41,419 --> 00:05:45,860
it a no-brainer to put it inside of your

00:05:44,479 --> 00:05:47,570
alarm clock because if you are going to

00:05:45,860 --> 00:05:49,460
buy an alarm clock which you know has a

00:05:47,570 --> 00:05:52,580
digital display and stuff and if it

00:05:49,460 --> 00:05:54,889
costs you okay now what currency should

00:05:52,580 --> 00:05:57,680
I use yeah if it costs you ten dollars

00:05:54,889 --> 00:05:59,539
here and if this chip is going to be two

00:05:57,680 --> 00:06:07,990
dollars extra and for fifteen dollars

00:05:59,539 --> 00:06:13,340
you are getting sorry if that's a very

00:06:07,990 --> 00:06:15,470
non ideal scenario thing anyway so yeah

00:06:13,340 --> 00:06:17,539
in this case two dollars plus if you're

00:06:15,470 --> 00:06:18,380
getting a smart speaker for six dollars

00:06:17,539 --> 00:06:24,490
or something like that

00:06:18,380 --> 00:06:24,490
would you get one no because privacy

00:06:26,610 --> 00:06:32,440
but yeah the argument is to reduce the

00:06:30,849 --> 00:06:35,050
cost of adding smartness to lists

00:06:32,440 --> 00:06:37,300
because right now what happens is many a

00:06:35,050 --> 00:06:39,910
times you'd say something but it's not

00:06:37,300 --> 00:06:42,280
within your range within the audible

00:06:39,910 --> 00:06:43,660
range so all of these devices working

00:06:42,280 --> 00:06:46,840
together creating a unifying experience

00:06:43,660 --> 00:06:48,160
that's what that's what the goal is and

00:06:46,840 --> 00:06:50,050
that's what science fiction has honestly

00:06:48,160 --> 00:06:51,910
taught us thing when you say something

00:06:50,050 --> 00:06:56,710
something happens that's what happened

00:06:51,910 --> 00:07:00,819
in Star Trek or anywhere okay so just to

00:06:56,710 --> 00:07:03,610
give an idea of you know how Alexa has

00:07:00,819 --> 00:07:07,780
grown so these are on the y-axis I have

00:07:03,610 --> 00:07:13,229
how many million units sold and on the X

00:07:07,780 --> 00:07:17,319
have year right so if you see this

00:07:13,229 --> 00:07:20,889
Amazon said that in 2018 they had sold

00:07:17,319 --> 00:07:22,270
or 100 million devices and that's why

00:07:20,889 --> 00:07:25,169
this is interesting because they started

00:07:22,270 --> 00:07:27,430
only four years ago and this is very

00:07:25,169 --> 00:07:31,990
accelerated growth right they are

00:07:27,430 --> 00:07:33,880
putting Alex aníbal devices inside TVs

00:07:31,990 --> 00:07:35,979
they're putting it inside cars they are

00:07:33,880 --> 00:07:37,870
putting it in your fridge and oh and

00:07:35,979 --> 00:07:39,490
they're putting it everywhere apart from

00:07:37,870 --> 00:07:42,180
the Equador devices that the standalone

00:07:39,490 --> 00:07:44,710
devices they're managed to put that

00:07:42,180 --> 00:07:47,289
everywhere and they are aggressively

00:07:44,710 --> 00:07:49,889
growing this is not exactly a tech

00:07:47,289 --> 00:07:52,979
metric as such but I recently read that

00:07:49,889 --> 00:07:56,259
Google is hiring as many integers as

00:07:52,979 --> 00:07:59,289
Amazon's Alexei division so that's the

00:07:56,259 --> 00:08:00,849
amount of aggressive growth that's

00:07:59,289 --> 00:08:02,800
happening and Amazon is honestly not the

00:08:00,849 --> 00:08:05,680
only one who's doing this there are many

00:08:02,800 --> 00:08:09,699
other people who are working on it and

00:08:05,680 --> 00:08:12,280
as more and more devices come into this

00:08:09,699 --> 00:08:15,669
field a hundred million is a big number

00:08:12,280 --> 00:08:17,139
but as it goes bigger there will be a

00:08:15,669 --> 00:08:18,250
lot more integration because to get to

00:08:17,139 --> 00:08:19,599
the next hundred million you have to

00:08:18,250 --> 00:08:22,210
integrate with other services for

00:08:19,599 --> 00:08:25,300
example something that was unthinkable

00:08:22,210 --> 00:08:26,530
kind of happened where Amazon and Apple

00:08:25,300 --> 00:08:29,110
announced that you know they are going

00:08:26,530 --> 00:08:31,870
to start supporting airplay I played to

00:08:29,110 --> 00:08:34,000
in coming devices which is very

00:08:31,870 --> 00:08:36,089
interesting because Apple has always

00:08:34,000 --> 00:08:38,080
been cagey about its protocols and

00:08:36,089 --> 00:08:41,229
suddenly they are opening up

00:08:38,080 --> 00:08:51,250
they see the opportunity in that okay so

00:08:41,229 --> 00:08:55,649
now can I get the mic yes okay so what

00:08:51,250 --> 00:08:59,709
I'm going to show is a quick demo

00:08:55,649 --> 00:09:04,959
hopefully this works because I'm having

00:08:59,709 --> 00:09:07,660
issues with the Wi-Fi connected but

00:09:04,959 --> 00:09:09,790
essentially what I have here is a small

00:09:07,660 --> 00:09:12,010
development board it's a pretty local

00:09:09,790 --> 00:09:15,579
gentleman where I think it costs $15 or

00:09:12,010 --> 00:09:17,829
something you can buy it off Mauser and

00:09:15,579 --> 00:09:19,300
a couple of other website and what I've

00:09:17,829 --> 00:09:20,769
done is I've configured my Amazon

00:09:19,300 --> 00:09:26,410
account inside of this and have

00:09:20,769 --> 00:09:34,230
configured a Wi-Fi network as part of

00:09:26,410 --> 00:09:34,230
this so now what I'm going to do hello

00:09:42,500 --> 00:09:45,160
hello

00:09:53,650 --> 00:09:57,670
okay so I'm definitely having issue so

00:09:56,080 --> 00:10:03,460
what I'm going to do is I'm going to

00:09:57,670 --> 00:10:09,850
show video instead because this okay so

00:10:03,460 --> 00:10:12,250
to give an idea of what is possible so

00:10:09,850 --> 00:10:16,350
this is a device which is of this size

00:10:12,250 --> 00:10:19,870
right so this is the model and we have

00:10:16,350 --> 00:10:22,150
managed to so this is the same module

00:10:19,870 --> 00:10:23,680
that's here right and what we have done

00:10:22,150 --> 00:10:25,750
is we have put a speaker behind it and a

00:10:23,680 --> 00:10:29,040
small battery and what we have managed

00:10:25,750 --> 00:10:32,830
to do is shrink it to the size of an

00:10:29,040 --> 00:10:35,140
Oreo right so it's as small as an Oreo

00:10:32,830 --> 00:10:38,680
Wesley and what we have is a completely

00:10:35,140 --> 00:10:41,370
self-sustained battery-operated can

00:10:38,680 --> 00:10:41,370
increase the volume

00:10:49,999 --> 00:11:05,399
okay okay okay where's the audio coming

00:11:00,420 --> 00:11:14,660
from okay so the audio is coming from

00:11:05,399 --> 00:11:19,290
that okay okay okay but as you can see

00:11:14,660 --> 00:11:21,839
essentially what we have is we have

00:11:19,290 --> 00:11:24,509
managed to get a wise assistant

00:11:21,839 --> 00:11:26,369
recording data sending it to the cloud

00:11:24,509 --> 00:11:28,829
and getting it back from the cloud and

00:11:26,369 --> 00:11:34,199
playing it on the speaker and that's not

00:11:28,829 --> 00:11:36,179
all because we still have a lot of we

00:11:34,199 --> 00:11:38,819
still have a lot of memory it's still a

00:11:36,179 --> 00:11:41,819
lot of processing power left after all

00:11:38,819 --> 00:11:53,029
of that happens so this is one more

00:11:41,819 --> 00:11:53,029
example no it's okay no I'm good

00:11:56,140 --> 00:12:01,140
okay

00:11:58,860 --> 00:12:06,930
okay so in this particular scenario what

00:12:01,140 --> 00:12:09,810
we are having is along with yeah so I

00:12:06,930 --> 00:12:12,770
have the board I'll pass along data so

00:12:09,810 --> 00:12:15,060
along with doing like recording audio

00:12:12,770 --> 00:12:18,060
sending it to the cloud getting the

00:12:15,060 --> 00:12:21,410
response back and playing it what we

00:12:18,060 --> 00:12:24,750
also do is we code recognition which is

00:12:21,410 --> 00:12:27,120
completely happening offline so this is

00:12:24,750 --> 00:12:29,580
interesting because if your privacy

00:12:27,120 --> 00:12:31,620
conscious you might be thinking that you

00:12:29,580 --> 00:12:33,810
know I can't see the source code for

00:12:31,620 --> 00:12:35,520
what is happening inside of an echo why

00:12:33,810 --> 00:12:38,100
don't you just get any SP 32 flash the

00:12:35,520 --> 00:12:40,650
device with your own firmware we have

00:12:38,100 --> 00:12:45,650
the SDK out there and then it's easier

00:12:40,650 --> 00:12:49,470
for you to sleep at night but if you are

00:12:45,650 --> 00:12:52,020
still more adventurous and wanting to

00:12:49,470 --> 00:12:54,120
try out something more in this scenario

00:12:52,020 --> 00:12:57,600
what we have is we have face detection

00:12:54,120 --> 00:13:02,010
face recognition and a wise assistant

00:12:57,600 --> 00:13:04,710
all on one ESP 32 so I just quickly show

00:13:02,010 --> 00:13:07,110
that demo so this is a colleague of mine

00:13:04,710 --> 00:13:08,550
this is am I am I and that's me in the

00:13:07,110 --> 00:13:10,380
background both of our faces have been

00:13:08,550 --> 00:13:12,780
pre-configured in this the training also

00:13:10,380 --> 00:13:15,980
happens on the device there is no cloud

00:13:12,780 --> 00:13:21,600
connectivity involved in this at all

00:13:15,980 --> 00:13:24,600
so when he comes in front of the so did

00:13:21,600 --> 00:13:27,120
you realize so he so the assistant so in

00:13:24,600 --> 00:13:29,730
this case I'm using a Google dialog flow

00:13:27,120 --> 00:13:31,770
assistant right it's not necessary that

00:13:29,730 --> 00:13:36,360
you use alex or google voice assistant

00:13:31,770 --> 00:13:37,410
because those are personality so i will

00:13:36,360 --> 00:13:38,880
come back to my slides later but

00:13:37,410 --> 00:13:40,830
essentially those are personalities you

00:13:38,880 --> 00:13:43,320
if you want to make your own there are

00:13:40,830 --> 00:13:46,500
services like the one that susie AI dot

00:13:43,320 --> 00:13:48,240
people are using right so in this case

00:13:46,500 --> 00:13:50,520
we are using google dialogue flow which

00:13:48,240 --> 00:13:52,920
is the google service for chat bots

00:13:50,520 --> 00:13:56,580
which also includes text as well as

00:13:52,920 --> 00:13:58,860
audio stuff right so what happens is the

00:13:56,580 --> 00:14:01,980
device recognizes that you know this is

00:13:58,860 --> 00:14:05,280
a my instead of an old and asked am i

00:14:01,980 --> 00:14:07,490
what kind of coffee he want so he said

00:14:05,280 --> 00:14:07,490
latte

00:14:12,390 --> 00:14:37,630
that's a lot but now when I come it

00:14:18,640 --> 00:14:43,000
recognizes that it's me that's better

00:14:37,630 --> 00:14:46,060
than am i right so these are the kind of

00:14:43,000 --> 00:14:48,160
things that we are kind of enabling by

00:14:46,060 --> 00:14:50,560
putting these things here again the face

00:14:48,160 --> 00:14:52,630
recognition and face detection the face

00:14:50,560 --> 00:14:54,850
recognition at once at I think six

00:14:52,630 --> 00:14:56,350
frames per second and face detection

00:14:54,850 --> 00:14:58,180
happens at six frames per seconds and

00:14:56,350 --> 00:15:00,520
the recognition happens at three frames

00:14:58,180 --> 00:15:03,310
per second which is pretty fast the

00:15:00,520 --> 00:15:05,140
pretty snappy and again all of this is

00:15:03,310 --> 00:15:06,730
open source so if you want to make your

00:15:05,140 --> 00:15:08,800
own products you could just go to our

00:15:06,730 --> 00:15:12,730
github download all of this get one of

00:15:08,800 --> 00:15:18,070
our boats and make it right but that's

00:15:12,730 --> 00:15:22,590
the idea that I don't want to see what

00:15:18,070 --> 00:15:22,590
coffee I want every day right and

00:15:22,650 --> 00:15:30,850
product that fixes that that's great

00:15:26,100 --> 00:15:32,110
okay I have a couple of more demos but

00:15:30,850 --> 00:15:34,960
I'll come back to it so the difference

00:15:32,110 --> 00:15:38,470
between alexa and google voice assistant

00:15:34,960 --> 00:15:41,950
and others is the personality right alex

00:15:38,470 --> 00:15:45,010
is known to tell jokes it will have

00:15:41,950 --> 00:15:47,620
skills it will talk in a certain way it

00:15:45,010 --> 00:15:49,360
will have that sass right but when you

00:15:47,620 --> 00:15:51,700
are building your own product you don't

00:15:49,360 --> 00:15:53,530
necessarily want to be limited by that

00:15:51,700 --> 00:15:55,990
or be part of that right for whatever

00:15:53,530 --> 00:15:58,000
branding results that well that's why

00:15:55,990 --> 00:16:00,640
plus privacy is a major concern here

00:15:58,000 --> 00:16:02,980
right a lot of people that I've spoken

00:16:00,640 --> 00:16:05,320
to have said that you know we think that

00:16:02,980 --> 00:16:08,170
this is always listening to us right and

00:16:05,320 --> 00:16:09,580
that might not be true but it is very

00:16:08,170 --> 00:16:11,950
difficult to convince people otherwise

00:16:09,580 --> 00:16:14,320
and the best way to do that actually is

00:16:11,950 --> 00:16:17,020
to make the something available to them

00:16:14,320 --> 00:16:19,720
which can put them at ease making

00:16:17,020 --> 00:16:21,520
something open-source that you can flash

00:16:19,720 --> 00:16:27,550
but uses the same API as in the

00:16:21,520 --> 00:16:29,770
background that's a good cell right so

00:16:27,550 --> 00:16:32,200
yeah alex is a personality okay Google

00:16:29,770 --> 00:16:35,040
is a personality but the underlying

00:16:32,200 --> 00:16:38,320
technology we have behind all of this

00:16:35,040 --> 00:16:40,450
Amazon lacks service provided by AWS as

00:16:38,320 --> 00:16:42,370
well as the Google dialog so essentially

00:16:40,450 --> 00:16:44,500
we have managed to add support for both

00:16:42,370 --> 00:16:47,380
we haven't released the Lex bit because

00:16:44,500 --> 00:16:49,360
there are some so it wasn't meant to be

00:16:47,380 --> 00:16:52,060
run like the way we are running it right

00:16:49,360 --> 00:16:55,090
now but yeah that Google dialog flow

00:16:52,060 --> 00:16:56,850
thing is on github already and you can

00:16:55,090 --> 00:17:00,160
make your own you can give your own

00:16:56,850 --> 00:17:03,280
personality to these devices you can

00:17:00,160 --> 00:17:06,550
create your own responses you can create

00:17:03,280 --> 00:17:09,220
your own sass because that's what that's

00:17:06,550 --> 00:17:11,650
what makes them fun right when you watch

00:17:09,220 --> 00:17:14,350
Iron Man you like Jarvis because Jarvis

00:17:11,650 --> 00:17:16,569
is sarcastic like he talks back to Iron

00:17:14,350 --> 00:17:19,420
Man he's not some okay sir thank you sir

00:17:16,569 --> 00:17:20,680
type right like he he has that sass and

00:17:19,420 --> 00:17:23,230
that's what you want to build in your

00:17:20,680 --> 00:17:26,920
products right because that's that's

00:17:23,230 --> 00:17:30,570
honestly fun plus there are some more

00:17:26,920 --> 00:17:33,820
reasons why this thing needs to catch up

00:17:30,570 --> 00:17:35,590
because essentially we have been using

00:17:33,820 --> 00:17:39,460
buttons and displays then we graduated

00:17:35,590 --> 00:17:40,930
two screens with touch built in them but

00:17:39,460 --> 00:17:43,150
there are quite a few reasons

00:17:40,930 --> 00:17:44,440
I was talking to bunny on Thursday and

00:17:43,150 --> 00:17:46,750
he said one of the things that he wants

00:17:44,440 --> 00:17:50,140
to do in his new product is make it

00:17:46,750 --> 00:17:52,090
possible to record audio and listen to

00:17:50,140 --> 00:17:54,460
audio and that's because not everyone

00:17:52,090 --> 00:17:56,770
can read and write right not everyone

00:17:54,460 --> 00:17:59,080
even if they can read and write maybe

00:17:56,770 --> 00:18:00,910
they're permanent you are temporarily

00:17:59,080 --> 00:18:04,300
disabled from doing that so

00:18:00,910 --> 00:18:08,140
accessibility is a big thing when it

00:18:04,300 --> 00:18:09,910
comes to these technologies have missed

00:18:08,140 --> 00:18:12,900
up the sequence of that because

00:18:09,910 --> 00:18:18,880
accessibility was supposed to come later

00:18:12,900 --> 00:18:20,500
but anyways coming back I wanted to show

00:18:18,880 --> 00:18:22,750
this because you know this is one of the

00:18:20,500 --> 00:18:26,020
early washing machines and there are no

00:18:22,750 --> 00:18:27,700
buttons and no displays this is more so

00:18:26,020 --> 00:18:30,820
actually I think my parents have this

00:18:27,700 --> 00:18:32,140
exact same model but because

00:18:30,820 --> 00:18:34,930
there is no display on this there are

00:18:32,140 --> 00:18:36,490
just buttons and the newer versions come

00:18:34,930 --> 00:18:41,190
with this place I think most of us might

00:18:36,490 --> 00:18:45,310
have this any other houses so that's how

00:18:41,190 --> 00:18:46,870
the way at CI has evolved right because

00:18:45,310 --> 00:18:49,660
this is essentially a computer in one

00:18:46,870 --> 00:18:52,270
way or the other and the interaction

00:18:49,660 --> 00:18:54,550
between them has changed and now we are

00:18:52,270 --> 00:18:59,350
at a point where wise interaction is so

00:18:54,550 --> 00:19:02,170
cheap and so accessible that we are able

00:18:59,350 --> 00:19:04,270
to add it at virtually no cost to our

00:19:02,170 --> 00:19:07,720
products which is the interesting bit

00:19:04,270 --> 00:19:15,000
because all of this can go away if I can

00:19:07,720 --> 00:19:15,000
talk to my okay

00:19:33,470 --> 00:19:44,330
so in this case instead of Alexa the we

00:19:40,220 --> 00:19:46,809
have a Google dialog flow bot where we

00:19:44,330 --> 00:19:46,809
are talking about

00:20:18,010 --> 00:20:25,610
so yeah and what's interesting is that

00:20:21,470 --> 00:20:27,290
it gets better with time for example you

00:20:25,610 --> 00:20:28,670
don't have to set it in stone because

00:20:27,290 --> 00:20:31,220
all the communication is happening in

00:20:28,670 --> 00:20:35,350
the cloud right you can evolve the way

00:20:31,220 --> 00:20:37,820
you see it for example you could say

00:20:35,350 --> 00:20:39,290
instead of it being a conversation it

00:20:37,820 --> 00:20:44,210
could be a one-way instruction where you

00:20:39,290 --> 00:20:47,650
like do XY and Z and that's the good

00:20:44,210 --> 00:20:51,679
thing because asking people to

00:20:47,650 --> 00:20:55,460
constantly update their form was is a

00:20:51,679 --> 00:20:57,710
very tricky piece because not everyone

00:20:55,460 --> 00:20:59,660
liked that it's invasive

00:20:57,710 --> 00:21:01,610
people would like why I have to do this

00:20:59,660 --> 00:21:03,970
again and again but when you once you're

00:21:01,610 --> 00:21:07,340
building a natural language interface

00:21:03,970 --> 00:21:08,990
all of that goes away because you don't

00:21:07,340 --> 00:21:18,280
have to ask the user to do anything

00:21:08,990 --> 00:21:18,280
because it's just a dummy terminal okay

00:21:18,820 --> 00:21:24,410
yeah okay so this was supposed to be the

00:21:23,299 --> 00:21:28,100
last video could actually show that

00:21:24,410 --> 00:21:32,660
earlier on but that's about it from my

00:21:28,100 --> 00:21:36,500
end I think putting voice assistants on

00:21:32,660 --> 00:21:37,880
microcontrollers is a pretty big deal we

00:21:36,500 --> 00:21:40,280
are not the only ones working on it

00:21:37,880 --> 00:21:42,919
there are some other people like NXP who

00:21:40,280 --> 00:21:46,330
are also working on it and it's

00:21:42,919 --> 00:21:50,290
interesting because accessibility is one

00:21:46,330 --> 00:21:53,299
node you need for updates is another and

00:21:50,290 --> 00:21:55,220
yeah I mean honestly for me the coolest

00:21:53,299 --> 00:21:59,330
part is the science fiction aspect of it

00:21:55,220 --> 00:22:04,610
right 2001 a space already see anyone

00:21:59,330 --> 00:22:06,410
but it's been the dream as always like

00:22:04,610 --> 00:22:08,030
it's always been the dream when it comes

00:22:06,410 --> 00:22:10,640
to science fiction to have a very

00:22:08,030 --> 00:22:16,270
natural language interface with

00:22:10,640 --> 00:22:16,270
technology any questions

00:22:16,860 --> 00:22:22,670
[Applause]

00:22:26,440 --> 00:22:35,150
sorry oh there's a mic on the

00:22:31,429 --> 00:22:37,670
development board yeah I mean we have a

00:22:35,150 --> 00:22:40,010
driver I see who does that for us

00:22:37,670 --> 00:22:43,429
essentially what we also do is we also

00:22:40,010 --> 00:22:44,840
support multiple wake world engines some

00:22:43,429 --> 00:22:47,120
of them are software some of the ARMA

00:22:44,840 --> 00:22:49,610
Hardware in which case the mic has to be

00:22:47,120 --> 00:22:51,050
routed through them because they do the

00:22:49,610 --> 00:22:56,390
processing on that essentially there are

00:22:51,050 --> 00:22:59,809
DSPs yeah but yeah I mean we work with a

00:22:56,390 --> 00:23:02,059
couple of DSPs DSP G is 1 micro semi is

00:22:59,809 --> 00:23:05,000
another I think we have six one

00:23:02,059 --> 00:23:08,809
including six yeah five or six ones

00:23:05,000 --> 00:23:12,860
including Intel and we also do the DSP

00:23:08,809 --> 00:23:15,050
bits on ESP 32 as well that'll take up

00:23:12,860 --> 00:23:18,500
more application code space and all of

00:23:15,050 --> 00:23:19,940
that but it's doable like when you say

00:23:18,500 --> 00:23:22,510
Alex at the way code reduction happens

00:23:19,940 --> 00:23:22,510
on the user

00:23:25,419 --> 00:23:34,419
yeah yes so the question is is the phase

00:23:32,799 --> 00:23:35,709
detection thing done inside respitory

00:23:34,419 --> 00:23:37,329
the answer is yes there is no

00:23:35,709 --> 00:23:41,229
communication with anybody other than

00:23:37,329 --> 00:23:45,039
ears without you yeah we actually have

00:23:41,229 --> 00:23:46,299
some left after that where we are doing

00:23:45,039 --> 00:23:48,369
all the voice really good stuff we could

00:23:46,299 --> 00:23:50,499
actually still do some more things that

00:23:48,369 --> 00:23:52,629
if you if you are interested in I have a

00:23:50,499 --> 00:23:54,700
small development board for that kind of

00:23:52,629 --> 00:23:57,009
a demo and we also have the source code

00:23:54,700 --> 00:24:00,429
available on github so you are free to

00:23:57,009 --> 00:24:04,029
write down but yeah I mean we do that

00:24:00,429 --> 00:24:07,329
locally the machine learning bits are

00:24:04,029 --> 00:24:08,859
there but everything is local it's not

00:24:07,329 --> 00:24:12,700
communicated to anybody on the same

00:24:08,859 --> 00:24:16,589
network or outside so we have enough

00:24:12,700 --> 00:24:16,589
muscle locally

00:24:19,050 --> 00:24:35,250
two questions the video one so I think

00:24:25,050 --> 00:24:37,770
that's why no I think it's a spy is by

00:24:35,250 --> 00:24:39,870
human I think so I'm not exactly sure I

00:24:37,770 --> 00:24:51,240
love to check the schematic but the

00:24:39,870 --> 00:24:52,740
whole thing is up on github so yeah so

00:24:51,240 --> 00:24:54,030
essentially the way it works it's all

00:24:52,740 --> 00:24:55,440
streaming we don't store it locally

00:24:54,030 --> 00:24:56,670
that's one of the reasons why we have

00:24:55,440 --> 00:24:58,830
been able to do it on a microcontroller

00:24:56,670 --> 00:25:01,410
because we don't have need a lot of RAM

00:24:58,830 --> 00:25:04,770
for that so what it does is it's a start

00:25:01,410 --> 00:25:06,570
recording and then when it detects like

00:25:04,770 --> 00:25:08,760
when it detects that some sentence has

00:25:06,570 --> 00:25:12,800
ended then it will give the another

00:25:08,760 --> 00:25:12,800
indication saying that okay we are done

00:25:17,690 --> 00:25:21,710
no some are soft some are hard

00:25:29,690 --> 00:25:33,109
SP what I

00:25:46,320 --> 00:25:53,130
I think so I'm not sure I'm trying to

00:25:51,630 --> 00:26:01,410
think of what the bottleneck will be in

00:25:53,130 --> 00:26:11,670
this case frame buffers yes yeah but but

00:26:01,410 --> 00:26:12,890
but typically IP cameras pretty yeah but

00:26:11,670 --> 00:26:15,210
that's actually an interesting question

00:26:12,890 --> 00:26:17,610
I'll ask the right people about it but

00:26:15,210 --> 00:26:25,770
yeah you can have many cameras then you

00:26:17,610 --> 00:26:28,560
can have ESP to doing oh not yet not

00:26:25,770 --> 00:26:31,260
ungettable East but we do have it

00:26:28,560 --> 00:26:38,910
working it's actually one of those PRS

00:26:31,260 --> 00:26:40,980
that's assigned to me yeah essentially

00:26:38,910 --> 00:26:42,900
it works there are some edge cases that

00:26:40,980 --> 00:26:44,310
haven't been handled but that's one of

00:26:42,900 --> 00:26:46,050
the good things are having yes we do do

00:26:44,310 --> 00:26:47,820
that we have ble as well as BT on board

00:26:46,050 --> 00:26:49,440
so then you use BL you to provision to

00:26:47,820 --> 00:26:51,420
device with your login credentials as

00:26:49,440 --> 00:26:53,870
well as all of that and then we use BT

00:26:51,420 --> 00:26:53,870
forward

00:27:00,470 --> 00:27:03,549
[Music]

00:27:04,200 --> 00:27:10,200
does it support encryption yeah so a lot

00:27:07,770 --> 00:27:13,070
this is a TLS so all the communication

00:27:10,200 --> 00:27:15,300
that happens between microcontroller and

00:27:13,070 --> 00:27:17,280
Amazon's api's or Google chepelare

00:27:15,300 --> 00:27:18,480
everything is TRS because those guys

00:27:17,280 --> 00:27:20,220
won't have it any other way and neither

00:27:18,480 --> 00:27:23,010
would be because this is pretty

00:27:20,220 --> 00:27:25,920
sensitive information and all of this

00:27:23,010 --> 00:27:28,470
there's no unencrypted bits anywhere in

00:27:25,920 --> 00:27:34,440
this so the only attack factors are

00:27:28,470 --> 00:27:37,850
probably physically yeah I'm going to be

00:27:34,440 --> 00:27:37,850
around to anybody hasn't questions

00:27:54,420 --> 00:28:01,060
actually there's also scope for doing

00:27:56,890 --> 00:28:03,580
that using Wi-Fi yeah of course there

00:28:01,060 --> 00:28:11,790
are multiple ways to do that but there's

00:28:03,580 --> 00:28:17,290
also some work that's been done yeah

00:28:11,790 --> 00:28:19,390
yeah so also I just understood what you

00:28:17,290 --> 00:28:21,580
meant well the audio codecs you are

00:28:19,390 --> 00:28:23,740
talking about all of that a soft yeah

00:28:21,580 --> 00:28:26,980
all of that is soft I thought you were

00:28:23,740 --> 00:28:28,600
talking about how we drive speakers now

00:28:26,980 --> 00:28:30,570
I know all of that is awesome yeah all

00:28:28,600 --> 00:28:34,840
of that is well I thought you were

00:28:30,570 --> 00:28:37,440
misunderstood because I yeah okay very

00:28:34,840 --> 00:28:37,440
interesting

00:28:40,890 --> 00:28:47,489

YouTube URL: https://www.youtube.com/watch?v=d0Cb822p8v8


