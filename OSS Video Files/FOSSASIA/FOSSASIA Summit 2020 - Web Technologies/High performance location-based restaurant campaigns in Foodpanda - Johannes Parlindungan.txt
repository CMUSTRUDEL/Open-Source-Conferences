Title: High performance location-based restaurant campaigns in Foodpanda - Johannes Parlindungan
Publication date: 2020-03-19
Playlist: FOSSASIA Summit 2020 - Web Technologies
Description: 
	FOSSASIA Summit 2020 - Web Technologies
Speaker: Johannes Parlindungan | Software engineer | Foodpanda
Captions: 
	00:00:00,000 --> 00:00:04,589
hi everyone my name is Jonas Pauline

00:00:02,429 --> 00:00:06,660
Dugan I'm working on the backend for

00:00:04,589 --> 00:00:09,630
campaigns related features in food panda

00:00:06,660 --> 00:00:11,910
and now I'm going to talk about how we

00:00:09,630 --> 00:00:15,089
implemented location based campaign sea

00:00:11,910 --> 00:00:16,230
and foot Panda so this is the outline of

00:00:15,089 --> 00:00:19,380
the presentation

00:00:16,230 --> 00:00:21,090
the first one is introduction the second

00:00:19,380 --> 00:00:26,460
one I'm going to talk about the problem

00:00:21,090 --> 00:00:28,980
and the third one is solution to Panda

00:00:26,460 --> 00:00:32,579
is a food delivery app it is available

00:00:28,980 --> 00:00:35,850
in web Android and iOS poop under surf

00:00:32,579 --> 00:00:42,989
11 countries in Asia Pacific and 2

00:00:35,850 --> 00:00:45,480
countries in Europe now let's talk about

00:00:42,989 --> 00:00:47,820
the problem my team is currently

00:00:45,480 --> 00:00:50,160
handling several features related we

00:00:47,820 --> 00:00:52,829
campaign see in food panda one of them

00:00:50,160 --> 00:00:59,969
is can pay in karma so let's open the

00:00:52,829 --> 00:01:01,710
website to see how it works here you can

00:00:59,969 --> 00:01:09,360
put your location and then click

00:01:01,710 --> 00:01:12,479
delivery then we can see the campaigns

00:01:09,360 --> 00:01:15,509
on top of the page we have four

00:01:12,479 --> 00:01:20,009
campaigns right now let's say we click

00:01:15,509 --> 00:01:22,590
free delivery now we can see a bigger

00:01:20,009 --> 00:01:27,360
image of the campaign on top and then we

00:01:22,590 --> 00:01:37,820
can see the restaurants list with free

00:01:27,360 --> 00:01:40,650
delivery ok let's go back to the slide

00:01:37,820 --> 00:01:43,369
this is the simplified architecture of

00:01:40,650 --> 00:01:45,509
the process so user open the app app

00:01:43,369 --> 00:01:48,299
requests the list of campaigns to

00:01:45,509 --> 00:01:51,810
campaign API and then campaign IP I will

00:01:48,299 --> 00:01:56,880
send a list of campaigns and then user

00:01:51,810 --> 00:01:59,219
can see the campaigns from the app ok

00:01:56,880 --> 00:02:01,049
what is the campaign campaign has

00:01:59,219 --> 00:02:03,869
multiple restaurants with the same

00:02:01,049 --> 00:02:06,390
promotion it can be discounts vouchers

00:02:03,869 --> 00:02:09,629
free delivery campaign can also

00:02:06,390 --> 00:02:12,660
promoting new restaurants or restaurants

00:02:09,629 --> 00:02:14,820
in a specific area etc

00:02:12,660 --> 00:02:17,000
so where do these campaigns come from

00:02:14,820 --> 00:02:20,520
and how do we configure which

00:02:17,000 --> 00:02:22,680
restaurants can be a part of it so

00:02:20,520 --> 00:02:25,020
marketing teams create campaigns and

00:02:22,680 --> 00:02:30,030
assign restaurant to its campaigns using

00:02:25,020 --> 00:02:32,910
our internal tool its campaign has

00:02:30,030 --> 00:02:36,720
multiple restaurants now its restaurant

00:02:32,910 --> 00:02:38,850
has multiple delivery areas users can

00:02:36,720 --> 00:02:43,700
cannot get the food from the restaurant

00:02:38,850 --> 00:02:43,700
if they are outside of the delivery area

00:02:43,850 --> 00:02:49,560
now that we have enough contacts we need

00:02:47,160 --> 00:02:55,230
to answer this question how to show

00:02:49,560 --> 00:02:57,450
campaigns based on user location we have

00:02:55,230 --> 00:02:59,880
to make sure there is at least one

00:02:57,450 --> 00:03:02,490
restaurant offering to the user before

00:02:59,880 --> 00:03:04,890
we can show the campaign so no

00:03:02,490 --> 00:03:07,800
restaurants delivering to you means no

00:03:04,890 --> 00:03:09,300
campaigns to you the first solution

00:03:07,800 --> 00:03:13,410
comes in our mind

00:03:09,300 --> 00:03:15,210
probably this check one by one if user

00:03:13,410 --> 00:03:18,960
location is inside restaurant the

00:03:15,210 --> 00:03:21,710
freezer their free areas let's say we

00:03:18,960 --> 00:03:25,010
have camper one it has three restaurants

00:03:21,710 --> 00:03:28,470
its restaurant has three delivery areas

00:03:25,010 --> 00:03:31,080
so we check if the user is inside their

00:03:28,470 --> 00:03:35,580
free area one by one until we found that

00:03:31,080 --> 00:03:38,450
it is inside the free area three C then

00:03:35,580 --> 00:03:42,480
we we can show the campaign to the user

00:03:38,450 --> 00:03:45,150
but we have around ten active campaigns

00:03:42,480 --> 00:03:47,310
per country around nine thousand

00:03:45,150 --> 00:03:49,800
restaurants per campaign around ten

00:03:47,310 --> 00:03:52,500
delivery areas for restaurants so we

00:03:49,800 --> 00:03:55,140
need to do around nine hundred thousands

00:03:52,500 --> 00:03:59,690
location checks for all delivery areas

00:03:55,140 --> 00:04:02,910
per user request which will be very slow

00:03:59,690 --> 00:04:05,340
we refine our solution of her time until

00:04:02,910 --> 00:04:06,690
we found our current best solution which

00:04:05,340 --> 00:04:09,630
is using your house

00:04:06,690 --> 00:04:11,520
gos encodes a geographic location into a

00:04:09,630 --> 00:04:14,520
short string of letters and digits

00:04:11,520 --> 00:04:17,300
let's open a website to understand more

00:04:14,520 --> 00:04:17,300
about us

00:04:21,910 --> 00:04:30,250
this is a map of the world where you can

00:04:23,950 --> 00:04:41,980
see the GRS up the place you click ok

00:04:30,250 --> 00:04:44,290
let's go to Singapore for example if we

00:04:41,980 --> 00:04:46,990
click the box then we zoom in we can see

00:04:44,290 --> 00:04:50,230
that every time we go deeper one box the

00:04:46,990 --> 00:04:52,450
string upended by one character the G

00:04:50,230 --> 00:05:04,300
has is filled recursively inside the

00:04:52,450 --> 00:05:13,030
bigger gear gos so yeah let's go back to

00:05:04,300 --> 00:05:15,340
the slide this is the GRS dimension

00:05:13,030 --> 00:05:19,420
tables the longer the line the smaller

00:05:15,340 --> 00:05:22,330
the box okay so how do we use your eyes

00:05:19,420 --> 00:05:24,250
to solve our problem first let's see the

00:05:22,330 --> 00:05:26,800
example case let's say we have four

00:05:24,250 --> 00:05:29,230
campaigns the campaign one will be the

00:05:26,800 --> 00:05:31,360
same as the previous example it has

00:05:29,230 --> 00:05:34,720
three restaurants with three delivery

00:05:31,360 --> 00:05:37,000
areas each now let's say this is the

00:05:34,720 --> 00:05:39,850
coordinate of a delivery area for a

00:05:37,000 --> 00:05:42,250
restaurant in campaign 1 then we

00:05:39,850 --> 00:05:45,300
generate the us's with precision 5

00:05:42,250 --> 00:05:49,800
inside the polygons of the delivery area

00:05:45,300 --> 00:05:52,930
y5 as we can see here g RS with

00:05:49,800 --> 00:05:56,020
precision 5 means the width and the

00:05:52,930 --> 00:05:57,820
height is 4 point 9 kilometers we

00:05:56,020 --> 00:05:59,650
discuss with business team and we

00:05:57,820 --> 00:06:04,300
decided that this precision is enough

00:05:59,650 --> 00:06:07,720
for us there are many ways to generate

00:06:04,300 --> 00:06:09,580
us insert polygons but the simplest one

00:06:07,720 --> 00:06:12,400
is we take the lat/long of the centre of

00:06:09,580 --> 00:06:14,470
the polygon convert it to your house and

00:06:12,400 --> 00:06:16,780
then we check its neighbor if it is

00:06:14,470 --> 00:06:19,480
inside the polygon then we check its

00:06:16,780 --> 00:06:22,350
neighbors neighbors etc until we found

00:06:19,480 --> 00:06:29,080
the GS intersecting with the polygon

00:06:22,350 --> 00:06:31,070
then we get four GS s here w210 7w - 1 z

00:06:29,080 --> 00:06:34,140
e etcetera

00:06:31,070 --> 00:06:36,540
then the next thing we need to do is we

00:06:34,140 --> 00:06:40,230
map the campaign ID with the restaurant

00:06:36,540 --> 00:06:42,120
your house and store it in our DB you

00:06:40,230 --> 00:06:44,910
can store it as a key in Redis or

00:06:42,120 --> 00:06:50,670
anything but in our case we store it in

00:06:44,910 --> 00:06:52,740
similar format in dynamo dB all of the

00:06:50,670 --> 00:06:54,660
previous tabs are being done when the

00:06:52,740 --> 00:06:57,540
marketing team is create the campaigns

00:06:54,660 --> 00:06:58,620
now let's talk about the use case from

00:06:57,540 --> 00:07:01,440
the consumer side

00:06:58,620 --> 00:07:04,710
the first one is open the front and app

00:07:01,440 --> 00:07:07,560
and then front and center requests with

00:07:04,710 --> 00:07:10,770
country and users lat/long to get the

00:07:07,560 --> 00:07:13,440
leads of campaigns from campaigns API in

00:07:10,770 --> 00:07:16,740
campaign API we convert the users where

00:07:13,440 --> 00:07:18,690
long to us with precision five and then

00:07:16,740 --> 00:07:21,330
get the list of campaigns in specified

00:07:18,690 --> 00:07:23,820
country and therefore its campaign we

00:07:21,330 --> 00:07:26,910
query the database to check if the map

00:07:23,820 --> 00:07:29,550
of campaign ID and user enjoy a success

00:07:26,910 --> 00:07:31,890
if yes we can show the campaign to the

00:07:29,550 --> 00:07:36,210
user and then we send a list of

00:07:31,890 --> 00:07:39,210
campaigns to frontal and then user can

00:07:36,210 --> 00:07:42,420
see the location-based campaigns so now

00:07:39,210 --> 00:07:46,590
we only have one query to database per

00:07:42,420 --> 00:07:50,100
campaign let's see more details with the

00:07:46,590 --> 00:07:52,860
example case let's say this user is

00:07:50,100 --> 00:07:58,110
inside the delivery area of restaurant 3

00:07:52,860 --> 00:08:00,090
in campaign 1 and then our campaign API

00:07:58,110 --> 00:08:03,330
get the use of lat/long from front and

00:08:00,090 --> 00:08:09,870
app then converted to geohash with

00:08:03,330 --> 00:08:11,970
position 5 we got w-2 and zetas then we

00:08:09,870 --> 00:08:17,370
get all campaigns from our dB

00:08:11,970 --> 00:08:20,130
we go for campaigns then we just need to

00:08:17,370 --> 00:08:22,800
check for its campaign combined with you

00:08:20,130 --> 00:08:25,920
Sergio has if it is access in our

00:08:22,800 --> 00:08:28,680
database that means there is a rest or

00:08:25,920 --> 00:08:31,950
and delivering to this user then we can

00:08:28,680 --> 00:08:34,410
show the campaign 1 to the user that's

00:08:31,950 --> 00:08:38,640
all now we only need one query to the

00:08:34,410 --> 00:08:41,130
database per campaign another

00:08:38,640 --> 00:08:43,770
optimization we can do is the first one

00:08:41,130 --> 00:08:44,610
is using cash for our database

00:08:43,770 --> 00:08:47,579
where

00:08:44,610 --> 00:08:50,209
results and the second one is using

00:08:47,579 --> 00:08:53,850
concurrency when querying the database

00:08:50,209 --> 00:08:55,800
in our case since we are using golang we

00:08:53,850 --> 00:08:57,839
use goroutines to do the check per

00:08:55,800 --> 00:09:00,870
campaign and then send the result to a

00:08:57,839 --> 00:09:04,890
channel wait for all goroutines to Venus

00:09:00,870 --> 00:09:09,690
and send a list of campaigns to the

00:09:04,890 --> 00:09:13,829
fronton app with our current solution we

00:09:09,690 --> 00:09:17,040
are currently handled 23.7 K pick

00:09:13,829 --> 00:09:21,120
requests per minutes our average

00:09:17,040 --> 00:09:25,519
response time is 1.15 millisecond of

00:09:21,120 --> 00:09:29,310
course this is excluding Network latency

00:09:25,519 --> 00:09:33,800
okay that's all I hope this tour can be

00:09:29,310 --> 00:09:33,800

YouTube URL: https://www.youtube.com/watch?v=lH1kYKF1V0E


