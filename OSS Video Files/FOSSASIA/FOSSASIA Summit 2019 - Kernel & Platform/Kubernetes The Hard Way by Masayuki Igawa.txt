Title: Kubernetes The Hard Way by Masayuki Igawa
Publication date: 2019-03-29
Playlist: FOSSASIA Summit 2019 - Kernel & Platform
Description: 
	15 March 2019 15:40, Theatre Lounge

"Kubernetes" is one of the most popular and famous container orchestration open source software. And now, there are so many Kubernetes environments and deployment tools such as SUSE CaaS Platform, minikube, kubeadm, Rancher, GKE/AKS/EKS, etc. So, we can use or build a Kubernetes cluster with them very easily. However, it also prevents opportunities to understand Kubernetes technologies themselves from users. Therefore, if a Kubernetes cluster gets something wrong, it would be tough challenge to resolve it without such knowledge. With the situation, here is a very good exercise document - "Kubernetes The Hard Way[0]" which is a tutorial for setting up Kubernetes the hard way on Google Cloud Platform (GCP). People can learn internal architecture of Kubernetes from that.

In this session, attendees will get an opportunity to know how to set up a Kubernetes cluster on not only GCP but also an OpenStack cloud or something based on the tutorial, and, will get to know its technology deeply."Kubernetes The Hard Way"[0] has 14 chapters right now. And it's written for the GCP basically. However, it works on the other clouds  with some modifications.

[0] https://github.com/kelseyhightower/kubernetes-the-hard-way
Captions: 
	00:00:00,030 --> 00:00:09,630
give the welcome to master Yuki thank

00:00:06,120 --> 00:00:11,820
you so much Yuki Ogawa he is a senior

00:00:09,630 --> 00:00:14,400
software engineer for Susi and he works

00:00:11,820 --> 00:00:19,380
on kubernetes and that'll be what his

00:00:14,400 --> 00:00:22,769
talk is about today thank you so I will

00:00:19,380 --> 00:00:26,609
talk about kubernetes the hard way I'm

00:00:22,769 --> 00:00:29,760
actually working I'm not walking on a

00:00:26,609 --> 00:00:34,500
kubernetes itself but I am working for

00:00:29,760 --> 00:00:38,910
OpenStack things but so you know as you

00:00:34,500 --> 00:00:45,480
know kubernetes is a very popular and

00:00:38,910 --> 00:00:50,820
famous technology recently so I very

00:00:45,480 --> 00:00:53,699
interesting this technology so I'm on

00:00:50,820 --> 00:00:58,800
the freenode github teacher and a link

00:00:53,699 --> 00:01:03,239
team etc so you can contact me yeah

00:00:58,800 --> 00:01:09,090
if you want and I also uploaded this

00:01:03,239 --> 00:01:13,610
slide to the github here and also I will

00:01:09,090 --> 00:01:18,600
also upload to the post AG aside later

00:01:13,610 --> 00:01:25,049
ok let's get started and agenda yeah

00:01:18,600 --> 00:01:32,340
it's like this so discriminate so Who I

00:01:25,049 --> 00:01:39,479
am so I I was in traditional IT company

00:01:32,340 --> 00:01:44,369
in Japan a long time the move to HP and

00:01:39,479 --> 00:01:47,640
now scissor and my job is a co-op

00:01:44,369 --> 00:01:51,149
instructor qee team and the job is

00:01:47,640 --> 00:01:55,140
senior software engineer and upstream

00:01:51,149 --> 00:01:58,110
and the downstream the rapport the

00:01:55,140 --> 00:02:02,869
mainly focused on the QA side for the

00:01:58,110 --> 00:02:02,869
Hasharon side and i also

00:02:03,320 --> 00:02:12,530
some project in OpenStack core reviewer

00:02:07,430 --> 00:02:17,050
it seems like it's similar to maintain

00:02:12,530 --> 00:02:21,200
our committee or like that and I also I

00:02:17,050 --> 00:02:22,400
am also one of the authors this work

00:02:21,200 --> 00:02:25,790
read work

00:02:22,400 --> 00:02:27,440
it's a OpenStack the integration it's

00:02:25,790 --> 00:02:33,350
written in Japanese

00:02:27,440 --> 00:02:38,900
and I'll also infra see I guide as a

00:02:33,350 --> 00:02:41,090
reviewer and my hobby is bike class

00:02:38,900 --> 00:02:47,110
building a class office a crowd and a

00:02:41,090 --> 00:02:53,450
diet is my weight graph so far so good

00:02:47,110 --> 00:02:56,420
so today's goal is understand the what

00:02:53,450 --> 00:03:00,560
is the Cubana is the hard way and the

00:02:56,420 --> 00:03:04,940
other is I'd work to you to motivate to

00:03:00,560 --> 00:03:11,600
try OpenStack no sorry come on it is the

00:03:04,940 --> 00:03:15,410
hard way by yourself so first when you

00:03:11,600 --> 00:03:20,030
make a kubernetes cluster with Mini

00:03:15,410 --> 00:03:24,440
Cooper or to Gotham Rancho or ji ka ka e

00:03:20,030 --> 00:03:27,550
KS maybe you feel looks like magic

00:03:24,440 --> 00:03:32,420
because it's very easy to give the

00:03:27,550 --> 00:03:35,000
kubernetes cluster and but you also feel

00:03:32,420 --> 00:03:39,950
what's going on inside inside because

00:03:35,000 --> 00:03:43,790
it's like a magic right so if you want

00:03:39,950 --> 00:03:49,910
to know the its components and the

00:03:43,790 --> 00:03:55,190
architecture and if it sometimes happen

00:03:49,910 --> 00:04:00,290
the error or warning or some failure you

00:03:55,190 --> 00:04:03,290
maybe need to debug it and also you also

00:04:00,290 --> 00:04:10,700
need want to build a kubernetes cluster

00:04:03,290 --> 00:04:13,060
by yourself and I as I already said you

00:04:10,700 --> 00:04:17,340
feel it's too easy

00:04:13,060 --> 00:04:20,730
so maybe you need you want to be

00:04:17,340 --> 00:04:24,600
you want more harder way to build a

00:04:20,730 --> 00:04:26,520
couponer this may be the you maybe you

00:04:24,600 --> 00:04:30,840
want to understand the component itself

00:04:26,520 --> 00:04:33,510
deeply so if you interesting that like

00:04:30,840 --> 00:04:34,200
that things there is a coupon it's the

00:04:33,510 --> 00:04:38,400
hard way

00:04:34,200 --> 00:04:42,870
yeah this is not my yeah different

00:04:38,400 --> 00:04:46,700
person he's very famous and the popular

00:04:42,870 --> 00:04:50,910
person in kubernetes yeah there is

00:04:46,700 --> 00:04:56,370
Coogan it's the hard way in the github

00:04:50,910 --> 00:04:57,170
repo okay so what is that kubernetes the

00:04:56,370 --> 00:05:01,830
hard way

00:04:57,170 --> 00:05:06,690
it's a bootstrap kubernetes the hard way

00:05:01,830 --> 00:05:11,580
in a hard way um basically Google cloud

00:05:06,690 --> 00:05:15,620
platform DCP so it's a tutorial for

00:05:11,580 --> 00:05:19,110
kubernetes to build a kubernetes

00:05:15,620 --> 00:05:25,110
infrastructure and there's no script

00:05:19,110 --> 00:05:31,800
automated script it's only command line

00:05:25,110 --> 00:05:37,169
and some setting up files and also it's

00:05:31,800 --> 00:05:43,940
open source and also it comes at the

00:05:37,169 --> 00:05:47,700
document consists of 14 chapters and

00:05:43,940 --> 00:05:52,370
with that kubernetes the hard way we can

00:05:47,700 --> 00:05:54,290
build like these components and versions

00:05:52,370 --> 00:05:59,780
the kubernetes

00:05:54,290 --> 00:06:06,300
1.12 but the current latest version is a

00:05:59,780 --> 00:06:09,780
1.13 so it's not latest but yeah but

00:06:06,300 --> 00:06:14,280
that's good and continuity runtime and

00:06:09,780 --> 00:06:18,720
the divisor CNI container networking and

00:06:14,280 --> 00:06:24,680
the t-coordinate yeah the version is

00:06:18,720 --> 00:06:28,440
like this not so old so it's good and

00:06:24,680 --> 00:06:30,120
the the outline is like this the 14

00:06:28,440 --> 00:06:33,440
chapter as I said

00:06:30,120 --> 00:06:36,600
earlier the first three the

00:06:33,440 --> 00:06:40,770
prerequisites and the installed clients

00:06:36,600 --> 00:06:43,460
and the provision computed and the

00:06:40,770 --> 00:06:45,740
network and the setting up

00:06:43,460 --> 00:06:50,360
[Music]

00:06:45,740 --> 00:06:55,720
where that may be security grooves like

00:06:50,360 --> 00:06:58,280
that and setting up TRS certificates

00:06:55,720 --> 00:07:04,789
yeah like this and the bootstrapping

00:06:58,280 --> 00:07:08,440
some components and your provisioning

00:07:04,789 --> 00:07:13,759
the port network or like that and the

00:07:08,440 --> 00:07:16,880
number 13 there is a smoke test we can

00:07:13,759 --> 00:07:20,270
test it and the last thing is very

00:07:16,880 --> 00:07:25,000
important otherwise you need to pay a

00:07:20,270 --> 00:07:30,970
lot of money to Google class forever so

00:07:25,000 --> 00:07:35,020
the what is the coupon it's the hard way

00:07:30,970 --> 00:07:37,070
so this is the first chapter

00:07:35,020 --> 00:07:45,320
prerequisites

00:07:37,070 --> 00:07:49,909
it says almost three point that Chinese

00:07:45,320 --> 00:07:54,409
two cents per hour and that means of

00:07:49,909 --> 00:07:57,800
five five thirty nine thirty five dollar

00:07:54,409 --> 00:08:02,690
studied nine cents per day you know it's

00:07:57,800 --> 00:08:11,270
not so expensive to run it it's very

00:08:02,690 --> 00:08:14,780
easy and you need g-cloud command yeah

00:08:11,270 --> 00:08:17,050
so I already said that it works on

00:08:14,780 --> 00:08:22,520
Google cloud platform

00:08:17,050 --> 00:08:27,199
but as I I also lady already said I'm a

00:08:22,520 --> 00:08:31,000
OpenStack lie so I wanted to run it on

00:08:27,199 --> 00:08:35,570
the OpenStack cloud so I could run it i

00:08:31,000 --> 00:08:39,770
yeah I was being able to I can I can do

00:08:35,570 --> 00:08:46,370
that and I will talk about later about

00:08:39,770 --> 00:08:50,959
it and the on the Google Cloud the n1

00:08:46,370 --> 00:08:54,380
standard one instance is recorder six

00:08:50,959 --> 00:08:57,290
instances required so that means the

00:08:54,380 --> 00:08:59,050
three controllers and the three workers

00:08:57,290 --> 00:09:04,450
and also we

00:08:59,050 --> 00:09:07,510
one load balancer so the other balancer

00:09:04,450 --> 00:09:09,450
is connected to the controller nodes

00:09:07,510 --> 00:09:13,390
like this

00:09:09,450 --> 00:09:16,690
yeah the architecture of the kubernetes

00:09:13,390 --> 00:09:23,290
hard way yeah

00:09:16,690 --> 00:09:30,900
after the utter running the document we

00:09:23,290 --> 00:09:35,190
can get like this kubernetes cluster so

00:09:30,900 --> 00:09:37,620
actually it's really easy to run the

00:09:35,190 --> 00:09:43,240
itself run the documents

00:09:37,620 --> 00:09:47,440
it only takes it took two to two hours

00:09:43,240 --> 00:09:52,090
and a half not that much and the cost is

00:09:47,440 --> 00:09:56,170
less than $1 it's very easy and so it's

00:09:52,090 --> 00:10:00,310
said the hard way but it was not so hard

00:09:56,170 --> 00:10:05,140
because we just need to follow the

00:10:00,310 --> 00:10:09,010
instruction yeah that's it and there

00:10:05,140 --> 00:10:12,790
were also some warnings but I don't care

00:10:09,010 --> 00:10:18,850
about that yeah actually it's really

00:10:12,790 --> 00:10:23,700
easy but I could not understand itself

00:10:18,850 --> 00:10:29,020
because it's it's too easy to run that

00:10:23,700 --> 00:10:33,360
so I want to implement on the more

00:10:29,020 --> 00:10:42,280
harder way so that is a OpenStack route

00:10:33,360 --> 00:10:46,840
so the first three I I have old

00:10:42,280 --> 00:10:54,490
OpenStack cloud in my room that is a

00:10:46,840 --> 00:10:56,290
three 1u servers but this is yeah old

00:10:54,490 --> 00:10:59,990
but

00:10:56,290 --> 00:11:06,230
the performance itself it's good but

00:10:59,990 --> 00:11:10,010
it's very noisy and it consumed the a

00:11:06,230 --> 00:11:13,670
lot of electricity it means a costly to

00:11:10,010 --> 00:11:19,120
run on the maintain the cluster opposite

00:11:13,670 --> 00:11:23,600
cluster so I I decided to make a new

00:11:19,120 --> 00:11:27,890
obstacle aster so that is a hedgehog

00:11:23,600 --> 00:11:31,730
this mini is very small in that size

00:11:27,890 --> 00:11:35,089
it's like like this very small it's like

00:11:31,730 --> 00:11:40,330
interlocked the size is similar to

00:11:35,089 --> 00:11:45,260
interlock the CPU is very low and the

00:11:40,330 --> 00:11:48,260
memory is a bit smaller and the hard

00:11:45,260 --> 00:11:51,950
disk and the SSD is there it's bit

00:11:48,260 --> 00:11:55,010
smaller than the old one and the

00:11:51,950 --> 00:12:00,920
software is like this i installed

00:11:55,010 --> 00:12:03,589
openSUSE 15 version 15 and I also

00:12:00,920 --> 00:12:06,080
installed the OpenStack rocky version

00:12:03,589 --> 00:12:10,100
the components are like no Berggren

00:12:06,080 --> 00:12:14,560
cinder keystone Neutron and I follow the

00:12:10,100 --> 00:12:19,070
OpenStack install guide yeah there is no

00:12:14,560 --> 00:12:21,880
there are some issues actually but not

00:12:19,070 --> 00:12:28,760
so critical

00:12:21,880 --> 00:12:33,380
yeah and the cost is a almost $300 per

00:12:28,760 --> 00:12:36,230
node and I need four nodes compute to

00:12:33,380 --> 00:12:42,190
computes and one controller and the

00:12:36,230 --> 00:12:50,890
first one straight so I build that I

00:12:42,190 --> 00:12:54,079
build the OpenStack cloud first so but

00:12:50,890 --> 00:12:56,630
there are some program on the challenges

00:12:54,079 --> 00:12:59,480
the one program is initial and the

00:12:56,630 --> 00:13:06,680
maintaining cost of recorded yeah it's

00:12:59,480 --> 00:13:10,040
cos T so yeah as I said before yeah it's

00:13:06,680 --> 00:13:16,279
the $300

00:13:10,040 --> 00:13:21,920
it means $12,000 total totally so it's

00:13:16,279 --> 00:13:27,339
not so cheap and also OpenStack is also

00:13:21,920 --> 00:13:31,190
hard for me the the controller knows was

00:13:27,339 --> 00:13:37,190
unstable with the SSD yeah I think the

00:13:31,190 --> 00:13:42,740
my SSD 40 isn't good so I have to change

00:13:37,190 --> 00:13:45,860
it SSD to new one but the similar

00:13:42,740 --> 00:13:49,490
failure and the similar failure occurred

00:13:45,860 --> 00:13:51,350
at the time so I have to change it this

00:13:49,490 --> 00:13:56,779
to the hard disk

00:13:51,350 --> 00:14:01,579
so the currently it's stable now but I'm

00:13:56,779 --> 00:14:06,170
not sure the main reason for that

00:14:01,579 --> 00:14:08,630
unstable and also I took a lot of our to

00:14:06,170 --> 00:14:13,910
rebuild because of the hard disk failure

00:14:08,630 --> 00:14:16,970
so I made a automated script with the

00:14:13,910 --> 00:14:19,699
unstable playbook yeah it's also a very

00:14:16,970 --> 00:14:24,980
good exercise for me actually to land on

00:14:19,699 --> 00:14:26,959
support and sorry and there are some

00:14:24,980 --> 00:14:32,630
difference between the DCP and I'll post

00:14:26,959 --> 00:14:38,319
AK when I build kubernetes cluster under

00:14:32,630 --> 00:14:43,149
the OpenStack so so these are difference

00:14:38,319 --> 00:14:46,850
between TCP and the office stack so

00:14:43,149 --> 00:14:49,329
basically the command it's use a command

00:14:46,850 --> 00:14:55,279
sailor come on is different

00:14:49,329 --> 00:14:58,490
TCP is for gql command and the OPA stock

00:14:55,279 --> 00:15:04,519
is OpenStack command so for example

00:14:58,490 --> 00:15:06,740
booting putting instances in the TCP is

00:15:04,519 --> 00:15:10,880
like this G cloud computer instances

00:15:06,740 --> 00:15:15,649
create instance name and the Machine

00:15:10,880 --> 00:15:18,439
type setting and etc but open start

00:15:15,649 --> 00:15:18,769
server create a booster in the outpost

00:15:18,439 --> 00:15:21,770
ACK

00:15:18,769 --> 00:15:25,340
open source server create flavor

00:15:21,770 --> 00:15:29,060
something and the instance name so like

00:15:25,340 --> 00:15:34,070
this the like this happens in configure

00:15:29,060 --> 00:15:38,660
Network and the security groups and yeah

00:15:34,070 --> 00:15:44,300
these difference command is mediate and

00:15:38,660 --> 00:15:48,070
also I need a hostname reservation in my

00:15:44,300 --> 00:15:54,910
OpenStack cloud yeah I should set up

00:15:48,070 --> 00:15:59,720
something like DNS were at the host yeah

00:15:54,910 --> 00:16:03,640
but that it not so difficult to resolve

00:15:59,720 --> 00:16:08,360
that and I also need a lot of our answer

00:16:03,640 --> 00:16:13,880
in a OpenStack cloud because there is no

00:16:08,360 --> 00:16:19,360
load overruns originally so I use the

00:16:13,880 --> 00:16:19,360
engine x vm for load of our answer

00:16:19,420 --> 00:16:27,760
because Octavia is a bit harder for me

00:16:23,780 --> 00:16:32,780
to install than the set up but uh yeah

00:16:27,760 --> 00:16:35,170
imaginary maybe you you want to use the

00:16:32,780 --> 00:16:38,810
Octavia for lot of our answer

00:16:35,170 --> 00:16:43,520
yeah that's it that's difference between

00:16:38,810 --> 00:16:54,490
a TCP and OpenStack for that coupon it

00:16:43,520 --> 00:16:59,840
is the hard way yes and conclusion so I

00:16:54,490 --> 00:17:05,300
could run run the kubernetes the hard

00:16:59,840 --> 00:17:10,130
way itself but it's really easy to run

00:17:05,300 --> 00:17:15,230
itself so but I want to understand the

00:17:10,130 --> 00:17:20,000
Cubana is more so I set up my open star

00:17:15,230 --> 00:17:24,290
cluster and I tried under try and I read

00:17:20,000 --> 00:17:28,940
something to understand itself so one

00:17:24,290 --> 00:17:31,250
outcome is a bus script to run the

00:17:28,940 --> 00:17:33,640
itself ta'rhonda

00:17:31,250 --> 00:17:37,600
proven it is the hard way

00:17:33,640 --> 00:17:42,940
on the whole thing so this bus script

00:17:37,600 --> 00:17:49,210
itself is not so useful maybe yeah

00:17:42,940 --> 00:17:53,440
useful it just round the bus script yeah

00:17:49,210 --> 00:17:57,929
after that we can get kubernetes cluster

00:17:53,440 --> 00:18:01,660
itself but yeah it doesn't make sense so

00:17:57,929 --> 00:18:05,919
it's it is just for me to understand the

00:18:01,660 --> 00:18:09,330
kubernetes so I think to to make like

00:18:05,919 --> 00:18:14,890
this bus script or a civil provoke to

00:18:09,330 --> 00:18:19,870
help you understand yeah occupy itself

00:18:14,890 --> 00:18:23,620
and also the cupola is the hard way is

00:18:19,870 --> 00:18:27,780
for just learning not for production so

00:18:23,620 --> 00:18:30,850
you don't you must not use it in the

00:18:27,780 --> 00:18:34,540
production environment because there is

00:18:30,850 --> 00:18:39,010
no hva chasing sort of a system volume

00:18:34,540 --> 00:18:40,960
etc and it's also open source we can

00:18:39,010 --> 00:18:43,570
read and write yeah of course

00:18:40,960 --> 00:18:48,000
the kubernetes hard way itself is open

00:18:43,570 --> 00:18:50,530
source and also the coupon it's also are

00:18:48,000 --> 00:18:53,230
open source so you can we can

00:18:50,530 --> 00:18:57,600
participate the community and the

00:18:53,230 --> 00:18:58,900
developing and there are some books

00:18:57,600 --> 00:19:01,740
already

00:18:58,900 --> 00:19:05,080
and there also are kubernetes dot io

00:19:01,740 --> 00:19:12,460
website is useful should be useful to

00:19:05,080 --> 00:19:16,540
understand kubernetes yeah that's it

00:19:12,460 --> 00:19:22,419
it's bitter audio thank you very

00:19:16,540 --> 00:19:24,540
much any questions any questions in the

00:19:22,419 --> 00:19:24,540
audience

00:19:31,450 --> 00:19:37,130
so you said that kubernetes the hard way

00:19:35,660 --> 00:19:39,260
wasn't actually that hard and you just

00:19:37,130 --> 00:19:41,390
followed situation yeah one thing I

00:19:39,260 --> 00:19:44,390
noticed is that it looked like it was

00:19:41,390 --> 00:19:46,940
using precompiled binaries yeah did you

00:19:44,390 --> 00:19:48,620
consider building static binaries for

00:19:46,940 --> 00:19:50,210
all the kubernetes components from

00:19:48,620 --> 00:19:54,140
source because that's pretty difficult

00:19:50,210 --> 00:19:57,920
because yeah yes yeah all right you all

00:19:54,140 --> 00:20:02,270
right yeah that's yeah that should be

00:19:57,920 --> 00:20:06,770
more difficult way harder way so if you

00:20:02,270 --> 00:20:10,630
want yeah I will try that if I have a

00:20:06,770 --> 00:20:10,630
time thank you

00:20:16,200 --> 00:20:22,350
I mean coming back to his point was that

00:20:18,770 --> 00:20:24,270
maybe the Cuban it is hard way means

00:20:22,350 --> 00:20:27,900
that getting to know the underlying

00:20:24,270 --> 00:20:31,050
architecture and how it works from each

00:20:27,900 --> 00:20:32,820
component this yeah I mean the whole

00:20:31,050 --> 00:20:37,860
hard way as in the hard way because

00:20:32,820 --> 00:20:40,290
usually people use cube a DM and we

00:20:37,860 --> 00:20:42,920
don't really know how it creates

00:20:40,290 --> 00:20:49,770
everything because we use the cube a DM

00:20:42,920 --> 00:20:53,040
related thing so I this on I used the

00:20:49,770 --> 00:20:55,590
Kelsey Hightower one on an AWS cloud but

00:20:53,040 --> 00:20:59,580
then I did it manually yeah as you said

00:20:55,590 --> 00:21:02,220
it might take a couple of hours more but

00:20:59,580 --> 00:21:04,260
then at least what I really liked about

00:21:02,220 --> 00:21:07,650
it was that you get to know each

00:21:04,260 --> 00:21:10,860
component you know what it how it

00:21:07,650 --> 00:21:13,200
behaves and what it exactly does so yeah

00:21:10,860 --> 00:21:18,120
I mean compared to cube a Liam I would

00:21:13,200 --> 00:21:24,600
say yeah this was much better I had to

00:21:18,120 --> 00:21:28,020
just give a feedback thanks yeah I've

00:21:24,600 --> 00:21:32,910
already don't hear the whole other

00:21:28,020 --> 00:21:37,110
things but you you your comments we I

00:21:32,910 --> 00:21:39,530
should do something more on this we're

00:21:37,110 --> 00:21:44,090
sorry

00:21:39,530 --> 00:21:44,090
yeah thanks he was giving some feedback

00:21:45,890 --> 00:21:56,730
any further questions audience one slide

00:21:53,510 --> 00:21:59,730
you said it is not the production means

00:21:56,730 --> 00:22:08,640
that yeah so it can be used on

00:21:59,730 --> 00:22:12,530
production where yeah this yeah this the

00:22:08,640 --> 00:22:17,190
krugen it's hardware itself is not for

00:22:12,530 --> 00:22:19,800
production environment I mean we need to

00:22:17,190 --> 00:22:23,250
consider a lot of things yeah for

00:22:19,800 --> 00:22:27,210
example HJ or persistent volumes to run

00:22:23,250 --> 00:22:29,550
the production environment so you can

00:22:27,210 --> 00:22:34,350
use this for production but

00:22:29,550 --> 00:22:37,770
but you also have to consider the a lot

00:22:34,350 --> 00:22:41,100
of things like these things and yeah you

00:22:37,770 --> 00:22:42,660
can customize it it is used it is

00:22:41,100 --> 00:22:46,230
actually used for automatic deployment

00:22:42,660 --> 00:22:50,250
only right automated deployment yeah you

00:22:46,230 --> 00:22:55,950
can't do it with a like I did

00:22:50,250 --> 00:22:58,560
it was scraped world yeah ansible

00:22:55,950 --> 00:23:05,190
playbooks were like that yeah you can do

00:22:58,560 --> 00:23:11,000
it I think there's more time for

00:23:05,190 --> 00:23:14,160
questions single board computers

00:23:11,000 --> 00:23:30,210
Singapore computers I actually don't

00:23:14,160 --> 00:23:33,920
know what I'm not sure maybe has anyone

00:23:30,210 --> 00:23:40,970
tried communities on any small devices

00:23:33,920 --> 00:23:43,860
no sorry on individual small devices but

00:23:40,970 --> 00:23:45,870
okay now so that's one we've heard

00:23:43,860 --> 00:23:55,370
there's there's must be PI clusters

00:23:45,870 --> 00:23:58,800
using kubernetes questions audience no

00:23:55,370 --> 00:23:59,530
okay let's thank master Yuki thank you

00:23:58,800 --> 00:24:04,420
very much

00:23:59,530 --> 00:24:04,420

YouTube URL: https://www.youtube.com/watch?v=y0rraxDj_y8


