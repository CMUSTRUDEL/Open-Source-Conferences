Title: Get Started with Quantum Computing and QISKit by Matthew Treinish
Publication date: 2019-03-29
Playlist: FOSSASIA Summit 2019 - Kernel & Platform
Description: 
	15 March 2019 17:00, Theatre Lounge

Concepts in quantum computing have been around for over 30 years but only recently have practical quantum computers started to become available. While today's quantum computers are still very limited it's enough to start putting some of these concepts into practice. With the development of these machines there has been open source tooling developed to use them. One such example is QISKit, which is an Apache Licensed SDK for developing quantum applications. It lets you mix classical programming and quantum computing together to build applications that leverage the advantages of both. This workshop will explain the basics of quantum information theory and how you build quantum circuits. It will then provide a hands on introduction into using qiskit and how you can use it to implement quantum programs, how that can be integrated together within a larger application, and will also demonstrate how you can run your quantum program on real quantum computers.
Captions: 
	00:00:00,000 --> 00:00:06,330
let me welcome the next speaker Matthew

00:00:02,040 --> 00:00:11,759
furnish he I did the keynote on quantum

00:00:06,330 --> 00:00:15,089
computing and he works for IBM on Q is

00:00:11,759 --> 00:00:17,160
kids on quantum computing as a senior

00:00:15,089 --> 00:00:25,460
research engineer a big round of

00:00:17,160 --> 00:00:28,529
applause thanks for that introduction so

00:00:25,460 --> 00:00:30,359
today I'm trying to run a workshop on

00:00:28,529 --> 00:00:32,730
getting started with quantum information

00:00:30,359 --> 00:00:35,329
theory and quantum computing using the

00:00:32,730 --> 00:00:39,300
quiz kit SDK

00:00:35,329 --> 00:00:41,640
this presentation is a I've got a mix of

00:00:39,300 --> 00:00:43,200
little slides with some diagrams in it

00:00:41,640 --> 00:00:46,320
but most of it is going to be in a

00:00:43,200 --> 00:00:49,559
Jupiter notebook if you click that if

00:00:46,320 --> 00:00:53,010
you go to that link there which is just

00:00:49,559 --> 00:00:54,809
my github quiz kit - workshop there are

00:00:53,010 --> 00:00:57,930
some links you can all you need is a web

00:00:54,809 --> 00:00:59,190
browser to run this there's a link off

00:00:57,930 --> 00:01:01,500
the readme if people want to follow

00:00:59,190 --> 00:01:03,210
along or if you happen to have Jupiter

00:01:01,500 --> 00:01:05,100
notebook and Python 3 installed locally

00:01:03,210 --> 00:01:08,299
you can also run it locally on your

00:01:05,100 --> 00:01:11,549
laptop instead of a web hosted version I

00:01:08,299 --> 00:01:13,770
also believe I have the link in the

00:01:11,549 --> 00:01:16,320
notebook but I figured that that is a

00:01:13,770 --> 00:01:17,790
much shorter link so I'm going to leave

00:01:16,320 --> 00:01:19,920
this up on the screen for a bit I don't

00:01:17,790 --> 00:01:24,119
know who wants to follow along with me

00:01:19,920 --> 00:01:27,150
on their lab yes yes this is a this is

00:01:24,119 --> 00:01:28,799
the github repo you can clone it and in

00:01:27,150 --> 00:01:30,540
the readme and further down there's a

00:01:28,799 --> 00:01:33,119
link to I think the service is Google

00:01:30,540 --> 00:01:34,439
collab it's Google's hosted Jupiter

00:01:33,119 --> 00:01:38,070
notebook environment so you don't need

00:01:34,439 --> 00:01:39,390
to run anything locally so if people

00:01:38,070 --> 00:01:42,390
want to follow along now they're more

00:01:39,390 --> 00:01:45,180
than welcome to I only see 4 people with

00:01:42,390 --> 00:01:46,829
their laptop out so that's fine but if

00:01:45,180 --> 00:01:48,630
if are the people who do have their

00:01:46,829 --> 00:01:50,220
laptops out intending to follow along I

00:01:48,630 --> 00:01:54,659
can wait for you to get everything set

00:01:50,220 --> 00:01:58,619
up or we can I can just dive into it sir

00:01:54,659 --> 00:02:00,119
what was that okay well yeah you know

00:01:58,619 --> 00:02:01,890
that's the thing is you just go to that

00:02:00,119 --> 00:02:03,479
link and there's another link on the

00:02:01,890 --> 00:02:05,040
readme to just run it on a web browser

00:02:03,479 --> 00:02:06,899
you don't need get look you don't need

00:02:05,040 --> 00:02:09,770
anything local you just need a Google

00:02:06,899 --> 00:02:09,770
account if you want to

00:02:11,379 --> 00:02:16,900
yeah yeah now I can there's there's no

00:02:13,719 --> 00:02:20,069
rush and I realize my name is very

00:02:16,900 --> 00:02:20,069
difficult to spell so

00:02:25,270 --> 00:02:31,530
I wish there was a good format to send

00:02:28,930 --> 00:02:31,530
us out ahead of time

00:03:21,069 --> 00:03:29,129
people good or need to keep waiting okay

00:03:30,510 --> 00:03:38,290
so the first thing you need to do these

00:03:36,819 --> 00:03:40,269
are just the instructions I was talking

00:03:38,290 --> 00:03:42,129
about before that's the longer link to a

00:03:40,269 --> 00:03:44,560
Google collab but if you go to the

00:03:42,129 --> 00:03:46,659
shorter link it links there as well

00:03:44,560 --> 00:03:48,010
the first thing you need to do is if

00:03:46,659 --> 00:03:49,599
you're running in Google collabro you've

00:03:48,010 --> 00:03:51,609
never used quiz gate before is to

00:03:49,599 --> 00:03:54,909
install it if you just uncomment that

00:03:51,609 --> 00:03:57,700
first pound sign and run this command

00:03:54,909 --> 00:04:03,310
with shift enter it will install quiz

00:03:57,700 --> 00:04:04,799
get locally and I don't need to do that

00:04:03,310 --> 00:04:07,720
because obviously I have it installed

00:04:04,799 --> 00:04:09,970
locally but also while people are

00:04:07,720 --> 00:04:11,590
installing it it takes a few seconds to

00:04:09,970 --> 00:04:12,700
pull from the internet I just thought

00:04:11,590 --> 00:04:15,459
I'd give a little background on what

00:04:12,700 --> 00:04:17,049
quiz kit is before we move along for

00:04:15,459 --> 00:04:18,639
those who might not have been in my

00:04:17,049 --> 00:04:21,519
presentation yesterday as well these

00:04:18,639 --> 00:04:25,960
slides are exactly the same so quiz kit

00:04:21,519 --> 00:04:28,060
is an SDK for dealing with what are

00:04:25,960 --> 00:04:32,020
called miss devices or NIST computers

00:04:28,060 --> 00:04:33,910
which is just means noisy intermediate

00:04:32,020 --> 00:04:36,010
scale quantum computers those are

00:04:33,910 --> 00:04:37,870
quantum computers that exist today and

00:04:36,010 --> 00:04:41,169
in the near future like the next decade

00:04:37,870 --> 00:04:43,360
or so where they have a small number of

00:04:41,169 --> 00:04:45,250
qubits like around 100 or less maybe a

00:04:43,360 --> 00:04:46,810
little more and they're not fault

00:04:45,250 --> 00:04:50,430
tolerant which means that noise and

00:04:46,810 --> 00:04:53,199
errors affect their operation

00:04:50,430 --> 00:04:55,090
it's an Apache 2 license project and

00:04:53,199 --> 00:04:58,240
it's designed to be back-end agnostic

00:04:55,090 --> 00:05:00,520
while it doesn't include out-of-the-box

00:04:58,240 --> 00:05:02,050
support for IBM's quantum devices and

00:05:00,520 --> 00:05:04,750
some local simulators that are packaged

00:05:02,050 --> 00:05:06,550
with it it's written in a way that if

00:05:04,750 --> 00:05:08,289
you have your own quantum devices or

00:05:06,550 --> 00:05:10,659
your own simulators it's easily

00:05:08,289 --> 00:05:14,159
adaptable it designs abstract frameworks

00:05:10,659 --> 00:05:16,449
for dealing with quantum computation and

00:05:14,159 --> 00:05:17,050
like a lot of that's completely

00:05:16,449 --> 00:05:21,340
illegible

00:05:17,050 --> 00:05:22,900
I apologize like a lot of open source

00:05:21,340 --> 00:05:24,880
projects it's made up of different

00:05:22,900 --> 00:05:27,099
components in quiz kit third all named

00:05:24,880 --> 00:05:28,900
after the classical elements so in the

00:05:27,099 --> 00:05:31,090
center there we have the terror

00:05:28,900 --> 00:05:34,000
component which is the base it's a

00:05:31,090 --> 00:05:34,810
Python interface to interface software

00:05:34,000 --> 00:05:36,670
with

00:05:34,810 --> 00:05:39,790
hardware so it lets you interact with

00:05:36,670 --> 00:05:42,970
quantum actual quantum devices or

00:05:39,790 --> 00:05:44,080
simulators and that's the one we'll

00:05:42,970 --> 00:05:46,720
actually be spending most of the time

00:05:44,080 --> 00:05:48,570
with today then there's the air

00:05:46,720 --> 00:05:51,760
component which is a high-performance

00:05:48,570 --> 00:05:54,790
C++ simulator for that also supports

00:05:51,760 --> 00:05:57,580
noise modeling on the top there's the

00:05:54,790 --> 00:05:58,900
aqua component which for typical

00:05:57,580 --> 00:06:00,400
software development is the one most

00:05:58,900 --> 00:06:02,380
people would probably be interested in

00:06:00,400 --> 00:06:04,720
it provides a Python library interface

00:06:02,380 --> 00:06:06,640
so you can just call a Python library

00:06:04,720 --> 00:06:08,380
you give it data and it will do the

00:06:06,640 --> 00:06:11,110
quantum operations under the covers and

00:06:08,380 --> 00:06:13,750
give you a result back and then there's

00:06:11,110 --> 00:06:15,880
the Ignis component which as I said the

00:06:13,750 --> 00:06:17,080
current quantum computers and the ones

00:06:15,880 --> 00:06:19,840
that quiz kit is designed to work with

00:06:17,080 --> 00:06:22,870
are not no fault tolerant and have a lot

00:06:19,840 --> 00:06:24,370
of noise Ignace project is there to help

00:06:22,870 --> 00:06:25,840
deal with that noise that lets you

00:06:24,370 --> 00:06:29,550
characterize it and try to do

00:06:25,840 --> 00:06:31,480
statistical mitigation techniques and

00:06:29,550 --> 00:06:32,680
the component we're gonna be spending

00:06:31,480 --> 00:06:36,400
most of the time on today in this

00:06:32,680 --> 00:06:40,630
workshop is called Terra which is the

00:06:36,400 --> 00:06:42,940
base layer for interfacing software with

00:06:40,630 --> 00:06:46,210
the quantum devices it provides an SDK

00:06:42,940 --> 00:06:49,270
for writing quantum circuits it's like a

00:06:46,210 --> 00:06:51,640
DSL and Python that lets you define a

00:06:49,270 --> 00:06:54,370
quantum circuit and build it up and you

00:06:51,640 --> 00:06:55,810
can send that to a device you can you

00:06:54,370 --> 00:06:58,300
can draw it you can do all sorts of

00:06:55,810 --> 00:07:00,400
things with it and then it also lets you

00:06:58,300 --> 00:07:01,900
compile those circuits each quantum

00:07:00,400 --> 00:07:05,110
device has its own characteristics

00:07:01,900 --> 00:07:07,390
certain ways the qubits are aligned and

00:07:05,110 --> 00:07:08,979
other things that you need to factor in

00:07:07,390 --> 00:07:12,550
when you're trying to run a circuit on a

00:07:08,979 --> 00:07:14,110
quantum device and Terra will compile

00:07:12,550 --> 00:07:15,520
those circuits so it will run on the

00:07:14,110 --> 00:07:17,080
actual device and hopefully do it

00:07:15,520 --> 00:07:23,169
efficiently and it it's written in

00:07:17,080 --> 00:07:24,820
Python so assuming everyone was able to

00:07:23,169 --> 00:07:27,040
do the first step and install kit

00:07:24,820 --> 00:07:29,080
without an error is that good for people

00:07:27,040 --> 00:07:32,140
who are following along I don't know how

00:07:29,080 --> 00:07:35,410
many are the next step is to just check

00:07:32,140 --> 00:07:40,150
it by just running this one and it

00:07:35,410 --> 00:07:43,210
imports the version the next thing

00:07:40,150 --> 00:07:46,360
people want to do potentially is

00:07:43,210 --> 00:07:47,130
cyanosis the resolution is so low it's

00:07:46,360 --> 00:07:49,860
hard to

00:07:47,130 --> 00:07:54,120
read is to sign up for the quantum

00:07:49,860 --> 00:07:56,550
experience this enables you to get an

00:07:54,120 --> 00:07:59,310
account and submit jobs to the publicly

00:07:56,550 --> 00:08:00,630
accessible IBM quantum computers you

00:07:59,310 --> 00:08:02,700
don't actually need to make a separate

00:08:00,630 --> 00:08:05,100
account there's a single sign-on if you

00:08:02,700 --> 00:08:06,420
just click that link and you'll see this

00:08:05,100 --> 00:08:08,460
is a picture of what it looks like you

00:08:06,420 --> 00:08:10,710
can make an account or what I actually

00:08:08,460 --> 00:08:13,500
do and I work for IBM but I just click

00:08:10,710 --> 00:08:16,650
the github link and it just works so you

00:08:13,500 --> 00:08:18,300
get an account from that and once you

00:08:16,650 --> 00:08:23,640
make an account you can click that link

00:08:18,300 --> 00:08:26,790
to get credentials and once you get

00:08:23,640 --> 00:08:28,050
credentials then we can continue I'm

00:08:26,790 --> 00:08:29,280
going to run this because it takes a

00:08:28,050 --> 00:08:30,930
little bit of time with the network

00:08:29,280 --> 00:08:33,360
traffic but since I already have

00:08:30,930 --> 00:08:35,400
credentials saved I don't need to do

00:08:33,360 --> 00:08:37,979
this step but if you do you just want to

00:08:35,400 --> 00:08:39,479
comment out this line and follow the

00:08:37,979 --> 00:08:42,990
texts that I wrote in the notebook and

00:08:39,479 --> 00:08:44,520
you copy the API token from the

00:08:42,990 --> 00:08:46,470
instructions and you put it in that

00:08:44,520 --> 00:08:49,830
string where it says my API token and

00:08:46,470 --> 00:08:51,870
that will that will work but since I

00:08:49,830 --> 00:08:54,240
have mine saved locally already I can

00:08:51,870 --> 00:08:59,010
just run this and it's going to list the

00:08:54,240 --> 00:09:01,020
quantum computers I have access to which

00:08:59,010 --> 00:09:03,660
in this case there are three of them to

00:09:01,020 --> 00:09:08,130
five bit quantum computers which are Q X

00:09:03,660 --> 00:09:13,160
4 and Q X 2 and then 114 qubit device

00:09:08,130 --> 00:09:13,160
which is misleadingly labeled 16 because

00:09:15,890 --> 00:09:20,220
physically exist all three of them are

00:09:18,540 --> 00:09:29,160
in Yorktown Heights New York at the IBM

00:09:20,220 --> 00:09:30,810
research lab there it's all so the

00:09:29,160 --> 00:09:32,640
workshop is all going to be run locally

00:09:30,810 --> 00:09:34,350
on the simulator for time because there

00:09:32,640 --> 00:09:36,450
are three quantum computers and however

00:09:34,350 --> 00:09:38,130
many people sitting here trying to run

00:09:36,450 --> 00:09:40,770
jobs on them and there's also everyone

00:09:38,130 --> 00:09:43,320
in the world has access to them but it's

00:09:40,770 --> 00:09:45,330
just there's an a unified API interface

00:09:43,320 --> 00:09:47,010
so it's like a cloud API and you submit

00:09:45,330 --> 00:09:49,620
your jobs to it and then it's like a

00:09:47,010 --> 00:09:53,910
like an old-school HPC cluster where

00:09:49,620 --> 00:09:58,530
it's shared time batching but we have

00:09:53,910 --> 00:10:00,540
access to the Q 4 Q 2 and Q 16 cubed 16

00:09:58,530 --> 00:10:00,810
machine yeah so you have access to all

00:10:00,540 --> 00:10:03,510
of the

00:10:00,810 --> 00:10:07,220
the q16 is actually a 14 qubit computer

00:10:03,510 --> 00:10:12,029
not 16 because two of the qubits failed

00:10:07,220 --> 00:10:15,029
so they just disabled them but the yeah

00:10:12,029 --> 00:10:16,410
and so you can we're for the workshop

00:10:15,029 --> 00:10:18,839
we're going to be running everything

00:10:16,410 --> 00:10:21,180
locally on local simulator or if you're

00:10:18,839 --> 00:10:22,950
using Google collab you'll be using it

00:10:21,180 --> 00:10:28,140
on Google's computer and that's just for

00:10:22,950 --> 00:10:34,020
time reasons I believe if I scroll down

00:10:28,140 --> 00:10:36,089
I think I put it yeah right there I say

00:10:34,020 --> 00:10:38,010
so in in the workshop if you're

00:10:36,089 --> 00:10:40,920
following along there are these back-end

00:10:38,010 --> 00:10:43,140
sim strings which is the variable I use

00:10:40,920 --> 00:10:45,000
for this local simulator if you just

00:10:43,140 --> 00:10:46,860
replace back in sim with back-end it

00:10:45,000 --> 00:10:50,880
will run on one of the quantum devices

00:10:46,860 --> 00:10:53,010
which is something I do in a second

00:10:50,880 --> 00:11:02,700
there any other questions before I move

00:10:53,010 --> 00:11:06,000
on yeah some kind of grid oh no you

00:11:02,700 --> 00:11:08,580
specifically pick which one because

00:11:06,000 --> 00:11:12,330
there are they all behave differently

00:11:08,580 --> 00:11:14,460
because they're all noisy so there they

00:11:12,330 --> 00:11:16,170
have individual characteristics that you

00:11:14,460 --> 00:11:17,760
have to build the circuits for which is

00:11:16,170 --> 00:11:21,930
what I was saying Terra does during a

00:11:17,760 --> 00:11:23,910
compilation step so you you pick the

00:11:21,930 --> 00:11:28,700
specific one you want to run on which is

00:11:23,910 --> 00:11:32,970
going to be two or three lines down so

00:11:28,700 --> 00:11:36,020
let me let me just run this one and

00:11:32,970 --> 00:11:36,020
it'll give you a better picture

00:11:39,920 --> 00:11:44,580
once network traffic is fun this is why

00:11:42,840 --> 00:11:46,260
by the way this is why we do everything

00:11:44,580 --> 00:11:48,540
on the local simulator for this workshop

00:11:46,260 --> 00:11:51,330
because if everyone has to wait for the

00:11:48,540 --> 00:11:54,660
network to and this is just querying the

00:11:51,330 --> 00:11:55,980
devices to get their information we're

00:11:54,660 --> 00:11:58,890
not actually submitting the job I'm just

00:11:55,980 --> 00:12:00,090
asking all three devices what what are

00:11:58,890 --> 00:12:06,030
your characteristics what are your

00:12:00,090 --> 00:12:07,590
back-end properties and this is the fun

00:12:06,030 --> 00:12:11,060
part wait okay there we go oh and this

00:12:07,590 --> 00:12:13,920
is gonna be really fun with 1024 by 768

00:12:11,060 --> 00:12:18,210
so this is the 14 qubit one and that's

00:12:13,920 --> 00:12:20,480
called this is that's called the

00:12:18,210 --> 00:12:23,130
coupling map which shows the

00:12:20,480 --> 00:12:25,230
relationship between qubits that you can

00:12:23,130 --> 00:12:27,240
run multiple operations on so each dot

00:12:25,230 --> 00:12:29,940
is a qubit and then the line between

00:12:27,240 --> 00:12:31,590
them means there's a way to run a two

00:12:29,940 --> 00:12:34,770
qubit operation on them so you can run

00:12:31,590 --> 00:12:36,690
like the anywhere there's a line you can

00:12:34,770 --> 00:12:40,140
run between those two nodes and then you

00:12:36,690 --> 00:12:41,430
can see there are 14 qubits there that

00:12:40,140 --> 00:12:44,160
says there are zero jobs I think the

00:12:41,430 --> 00:12:47,190
network is running late and then it's

00:12:44,160 --> 00:12:50,640
the least busy and it's operational and

00:12:47,190 --> 00:12:52,650
then these t1 and t2 are time parameters

00:12:50,640 --> 00:12:54,570
for decoherence there are two different

00:12:52,650 --> 00:12:57,120
ways that your quantum state decays and

00:12:54,570 --> 00:12:58,920
those are the times you have until that

00:12:57,120 --> 00:13:01,740
happens on average between all of the

00:12:58,920 --> 00:13:04,050
qubits which is not very long if you

00:13:01,740 --> 00:13:06,060
know 56 microseconds is not that long

00:13:04,050 --> 00:13:11,010
but then we can compare it to another

00:13:06,060 --> 00:13:12,510
one which in this case is IBM QX 2 which

00:13:11,010 --> 00:13:14,640
is a 5 qubit device and you can see the

00:13:12,510 --> 00:13:16,970
coupling map is very different the

00:13:14,640 --> 00:13:19,920
number of qubits is very different and

00:13:16,970 --> 00:13:23,070
all of the parameters are also different

00:13:19,920 --> 00:13:24,990
and then the other thing the other

00:13:23,070 --> 00:13:29,760
back-end characteristic I want to show

00:13:24,990 --> 00:13:31,589
was this one one so we're going to sit

00:13:29,760 --> 00:13:33,570
here and wait for the HTTP traffic to go

00:13:31,589 --> 00:13:35,339
back and forth again and this shows the

00:13:33,570 --> 00:13:39,450
this is going to show the details on the

00:13:35,339 --> 00:13:41,430
IBM QX 2 device which I was that the one

00:13:39,450 --> 00:13:44,610
I just showed they're very similar in

00:13:41,430 --> 00:13:48,810
this level yeah so IBM QX 2 is the one

00:13:44,610 --> 00:13:54,310
on the screen right now and then

00:13:48,810 --> 00:13:55,660
qx4 is just the other five cubit one and

00:13:54,310 --> 00:13:57,490
it looks very similar but the time

00:13:55,660 --> 00:14:01,870
parameters are different and here we can

00:13:57,490 --> 00:14:03,790
see the QX two so we can see more

00:14:01,870 --> 00:14:05,500
details here so we can see that there

00:14:03,790 --> 00:14:06,640
are certain types of quantum gates that

00:14:05,500 --> 00:14:10,149
run on it which is something we'll be

00:14:06,640 --> 00:14:14,829
talking about in a minute says it's not

00:14:10,149 --> 00:14:17,740
a simulator it has a list representation

00:14:14,829 --> 00:14:20,680
of that graph the number of executions

00:14:17,740 --> 00:14:22,029
you can run in a single job things like

00:14:20,680 --> 00:14:23,920
that but then there are more more

00:14:22,029 --> 00:14:27,399
details so we can see the individual

00:14:23,920 --> 00:14:30,010
error rates for each qubit and the

00:14:27,399 --> 00:14:35,260
coherence time parameters for each of

00:14:30,010 --> 00:14:36,970
them and we can see the error rates this

00:14:35,260 --> 00:14:39,010
resolution makes it's a very low

00:14:36,970 --> 00:14:41,170
resolution projector so it's all

00:14:39,010 --> 00:14:44,500
overlapping but on that one you can see

00:14:41,170 --> 00:14:46,000
the error rates for two qubit operations

00:14:44,500 --> 00:14:48,579
which is something we'll also be talking

00:14:46,000 --> 00:14:50,980
about and then here is an error map

00:14:48,579 --> 00:14:53,380
where you can see the error rates for

00:14:50,980 --> 00:14:55,390
the qubits relative to the coupling map

00:14:53,380 --> 00:14:57,519
which actually helps you figure out how

00:14:55,390 --> 00:15:00,399
when you're going to run something on

00:14:57,519 --> 00:15:02,740
this which qubits you want to pick and

00:15:00,399 --> 00:15:08,190
then the job history is just the amount

00:15:02,740 --> 00:15:10,839
of jobs I've run a mess in the past so

00:15:08,190 --> 00:15:13,029
that was just the the back end aside and

00:15:10,839 --> 00:15:14,290
to give people some time to sign up for

00:15:13,029 --> 00:15:16,000
the quantum experience if they wanted to

00:15:14,290 --> 00:15:17,410
because the real fun of this is not to

00:15:16,000 --> 00:15:18,970
play around with it in a simulator but

00:15:17,410 --> 00:15:27,279
it's actually experiment with the real

00:15:18,970 --> 00:15:28,750
devices and I wanted to so the bulk of

00:15:27,279 --> 00:15:33,850
the time in the workshop is going to be

00:15:28,750 --> 00:15:35,800
on showing the basic concepts of quantum

00:15:33,850 --> 00:15:37,990
information theory through quiz kit and

00:15:35,800 --> 00:15:39,820
in Python code in this workshop but

00:15:37,990 --> 00:15:41,980
before I got into that I wanted to show

00:15:39,820 --> 00:15:44,110
the slides again from my presentation

00:15:41,980 --> 00:15:47,529
yesterday because it's very graphical

00:15:44,110 --> 00:15:49,870
and it helps people think about what a

00:15:47,529 --> 00:15:52,360
qubit is and will try to relate to this

00:15:49,870 --> 00:15:54,670
so the easiest way to think about a

00:15:52,360 --> 00:15:58,270
qubit is with the Bloch sphere which is

00:15:54,670 --> 00:16:00,279
that sphere right there it's a and you

00:15:58,270 --> 00:16:01,800
can think of the quanta the state of a

00:16:00,279 --> 00:16:03,630
qubit at any time as the

00:16:01,800 --> 00:16:05,880
orange vector and it can be anywhere on

00:16:03,630 --> 00:16:08,279
the surface of the sphere so you and

00:16:05,880 --> 00:16:09,779
when you perform operations on a cubit

00:16:08,279 --> 00:16:12,269
you're just moving that vector to a

00:16:09,779 --> 00:16:15,089
different position on the sphere and

00:16:12,269 --> 00:16:17,850
just like a classical bit it can be at

00:16:15,089 --> 00:16:18,930
the zero State or the one state and you

00:16:17,850 --> 00:16:21,360
don't really have to worry too much

00:16:18,930 --> 00:16:24,060
about that notation you the called bra

00:16:21,360 --> 00:16:26,220
ket notation and in this in this it just

00:16:24,060 --> 00:16:30,269
means it's a vector which it is because

00:16:26,220 --> 00:16:32,250
it's pointing up or down and when you're

00:16:30,269 --> 00:16:33,720
ready to read the value out of a cubit

00:16:32,250 --> 00:16:36,029
that's called measurement and you'll get

00:16:33,720 --> 00:16:38,220
a 0 or a 1 and what will happen is it

00:16:36,029 --> 00:16:39,990
will collapse up or down so if it

00:16:38,220 --> 00:16:41,760
collapses up it's going to be a 0 and if

00:16:39,990 --> 00:16:45,329
it collapses down it's going to be a 1

00:16:41,760 --> 00:16:47,700
and this measurement is irreversible so

00:16:45,329 --> 00:16:49,320
you can have that that arrow pointing

00:16:47,700 --> 00:16:51,450
anywhere along the surface as a sphere

00:16:49,320 --> 00:16:53,010
but when you measure you get a 0 or 1

00:16:51,450 --> 00:16:58,170
out and that's the only information

00:16:53,010 --> 00:17:01,790
you'll get out of the system and you

00:16:58,170 --> 00:17:04,380
perform operations on a cubit by using

00:17:01,790 --> 00:17:05,880
quantum logic gates which I talked about

00:17:04,380 --> 00:17:07,319
before there are a lot of different

00:17:05,880 --> 00:17:09,990
logic gates they do all different types

00:17:07,319 --> 00:17:12,209
of rotations the example I have there is

00:17:09,990 --> 00:17:15,510
called the X gate or the quantum not

00:17:12,209 --> 00:17:17,130
gate and it's the most simple one and

00:17:15,510 --> 00:17:18,720
it's just a you can think of it as a

00:17:17,130 --> 00:17:21,929
hundred and eighty degree rotation

00:17:18,720 --> 00:17:23,550
around the x-axis so in this example if

00:17:21,929 --> 00:17:25,559
you start at the base of state zero

00:17:23,550 --> 00:17:27,300
which have freshly initialized qubit

00:17:25,559 --> 00:17:29,580
always starts with that zero thinks it's

00:17:27,300 --> 00:17:31,230
the ground state when if you run an XK

00:17:29,580 --> 00:17:33,980
don that it just becomes a 1 because it

00:17:31,230 --> 00:17:37,200
rotates over the x axis and points down

00:17:33,980 --> 00:17:39,150
to things to keep in mind with quantum

00:17:37,200 --> 00:17:42,570
logic gates though is that they're

00:17:39,150 --> 00:17:46,110
reversible and which means you can go

00:17:42,570 --> 00:17:48,840
either way and they're also represented

00:17:46,110 --> 00:17:49,950
by unitary matrices which is a special

00:17:48,840 --> 00:17:51,840
type of matrix if you're not familiar

00:17:49,950 --> 00:17:55,500
with linear algebra it's you can read

00:17:51,840 --> 00:17:57,660
the Wikipedia page on it but I mention

00:17:55,500 --> 00:18:00,240
that because all quantum logic gates are

00:17:57,660 --> 00:18:03,240
represented by unitary matrices and all

00:18:00,240 --> 00:18:04,919
operations are matrix multiplications so

00:18:03,240 --> 00:18:06,809
you have a vector for your quantum state

00:18:04,919 --> 00:18:08,820
with all of your qubits and you multiply

00:18:06,809 --> 00:18:13,140
it by this unitary matrix and you get

00:18:08,820 --> 00:18:15,630
your output vector state and that's the

00:18:13,140 --> 00:18:17,340
most common way that people actually rep

00:18:15,630 --> 00:18:19,650
these logic gates they don't draw these

00:18:17,340 --> 00:18:23,880
spheres and rotate with arrows they just

00:18:19,650 --> 00:18:27,270
do a matrix multiplication so now we can

00:18:23,880 --> 00:18:30,240
see this in practice so the first thing

00:18:27,270 --> 00:18:31,919
we can do in quiz kit is this this line

00:18:30,240 --> 00:18:33,630
here which just gives us the simulator

00:18:31,919 --> 00:18:35,370
we're just setting that up but we can

00:18:33,630 --> 00:18:38,549
build a quantum circuit and a very

00:18:35,370 --> 00:18:40,770
simple one at that so this first one is

00:18:38,549 --> 00:18:43,020
just going to give us one qubit and then

00:18:40,770 --> 00:18:44,789
one classical register to store it which

00:18:43,020 --> 00:18:47,210
are these two lines here so we say give

00:18:44,789 --> 00:18:50,159
us a quantum register with one qubit and

00:18:47,210 --> 00:18:53,490
assign it to the variable Q and then we

00:18:50,159 --> 00:18:54,990
do one classical register one classical

00:18:53,490 --> 00:18:57,600
register with one classical bit and we

00:18:54,990 --> 00:18:59,549
label that C we define a circuit with

00:18:57,600 --> 00:19:01,850
Q&C for the quantum register in the

00:18:59,549 --> 00:19:06,210
classical register and we just measure

00:19:01,850 --> 00:19:09,419
we run that operation and what we're

00:19:06,210 --> 00:19:11,070
expecting is because it's a fresh qubit

00:19:09,419 --> 00:19:13,169
and we're not performing any we're not

00:19:11,070 --> 00:19:15,929
running any logic gates on it it should

00:19:13,169 --> 00:19:19,260
always be at that zero basis state which

00:19:15,929 --> 00:19:22,530
is represented this doesn't even fit the

00:19:19,260 --> 00:19:26,570
resolution so we can execute this

00:19:22,530 --> 00:19:30,720
circuit and then look at the amount of

00:19:26,570 --> 00:19:35,900
results we get so we always get a zero

00:19:30,720 --> 00:19:39,780
we run this circuit 1,024 times because

00:19:35,900 --> 00:19:41,880
quanta qubits are probabilistic so they

00:19:39,780 --> 00:19:44,220
can behave randomly and that's expected

00:19:41,880 --> 00:19:48,090
but there's also noise in a real quantum

00:19:44,220 --> 00:19:50,610
computer and we want to account for that

00:19:48,090 --> 00:19:52,559
by running things multiple times to

00:19:50,610 --> 00:19:54,510
student so we can look at the statistics

00:19:52,559 --> 00:19:56,309
over time even if we encounter an

00:19:54,510 --> 00:20:00,870
individual error so whenever we do

00:19:56,309 --> 00:20:04,320
execution we'll see numbers numbers like

00:20:00,870 --> 00:20:06,929
this and I think for this workshop I do

00:20:04,320 --> 00:20:10,049
all 1024 and maybe a hundred in a few

00:20:06,929 --> 00:20:11,909
spots but it doesn't really matter and

00:20:10,049 --> 00:20:14,340
then we can also graph it because

00:20:11,909 --> 00:20:15,809
everyone likes pretty pictures and in

00:20:14,340 --> 00:20:19,799
this case it's a hundred percent of the

00:20:15,809 --> 00:20:21,240
time we get a zero and then we can look

00:20:19,799 --> 00:20:24,809
at the quantum not gate which was that

00:20:21,240 --> 00:20:26,940
first gate that I showed and in this

00:20:24,809 --> 00:20:29,310
case we do the same set up so we get a

00:20:26,940 --> 00:20:31,500
quantum register with one qubit

00:20:29,310 --> 00:20:33,060
classical register with one classical

00:20:31,500 --> 00:20:35,790
bit to store the result the zero or the

00:20:33,060 --> 00:20:39,210
one on the output and then we define a

00:20:35,790 --> 00:20:42,570
circuit with those and then in quiz kit

00:20:39,210 --> 00:20:44,220
the way you run the XK is you just apply

00:20:42,570 --> 00:20:45,780
that you just run the method X on the

00:20:44,220 --> 00:20:47,660
quantum circuit object like right there

00:20:45,780 --> 00:20:52,920
and we say we're going to run that on

00:20:47,660 --> 00:20:55,080
quantum register zero and then measure

00:20:52,920 --> 00:20:58,590
and then we're gonna draw that circuit

00:20:55,080 --> 00:21:01,200
to see what it looks like the the actual

00:20:58,590 --> 00:21:05,160
circuit representation which is just X

00:21:01,200 --> 00:21:07,230
gate on qubit zero and then measure are

00:21:05,160 --> 00:21:13,500
people able to follow along is this also

00:21:07,230 --> 00:21:16,980
legible okay and then what we're

00:21:13,500 --> 00:21:18,990
expecting like before is to always get a

00:21:16,980 --> 00:21:21,720
1 instead of a zero because we apply

00:21:18,990 --> 00:21:25,500
that XK so this is the just the qubit

00:21:21,720 --> 00:21:27,210
for that and the same thing before we're

00:21:25,500 --> 00:21:28,710
going to execute on the back end

00:21:27,210 --> 00:21:31,050
simulator and in this case we're only

00:21:28,710 --> 00:21:32,730
running at 100 times these circuits are

00:21:31,050 --> 00:21:33,780
so small it doesn't really make a

00:21:32,730 --> 00:21:35,640
difference because things are going to

00:21:33,780 --> 00:21:39,330
be fast and then we're going to print

00:21:35,640 --> 00:21:41,670
the counts and here we get 1 100 times

00:21:39,330 --> 00:21:47,900
100% and biggest we get it 100 times and

00:21:41,670 --> 00:21:50,250
then we can also graph that and we get

00:21:47,900 --> 00:21:57,350
100 percent of the time this is really

00:21:50,250 --> 00:21:57,350
low resolution so

00:22:03,200 --> 00:22:07,590
there are the next thing we're going to

00:22:05,940 --> 00:22:09,990
talk about is called superposition but

00:22:07,590 --> 00:22:12,150
before we get into the details on that I

00:22:09,990 --> 00:22:14,220
just wanted to mention there are two

00:22:12,150 --> 00:22:16,110
fundamental properties to quantum

00:22:14,220 --> 00:22:19,560
mechanics and quantum computation that

00:22:16,110 --> 00:22:21,240
really give you which are going to be

00:22:19,560 --> 00:22:23,130
basically all I cover in this workshop

00:22:21,240 --> 00:22:24,810
but it should give you a basis to

00:22:23,130 --> 00:22:27,930
understand why quantum computing is

00:22:24,810 --> 00:22:30,420
different and and those are

00:22:27,930 --> 00:22:35,310
superposition and entanglement and if

00:22:30,420 --> 00:22:37,800
you look at them superposition is the

00:22:35,310 --> 00:22:40,890
property that a physical system in a

00:22:37,800 --> 00:22:42,840
definite state can behave randomly in

00:22:40,890 --> 00:22:45,300
the case of quantum computation it means

00:22:42,840 --> 00:22:47,280
you can prepare a qubit identically and

00:22:45,300 --> 00:22:50,100
even though it's identically prepared it

00:22:47,280 --> 00:22:51,540
will give you a random result the second

00:22:50,100 --> 00:22:54,860
one is a little bit more abstract and

00:22:51,540 --> 00:22:57,660
that's called entanglement and that's

00:22:54,860 --> 00:23:00,960
two systems that are too far apart to

00:22:57,660 --> 00:23:03,000
influence each other can still behave in

00:23:00,960 --> 00:23:04,860
a way that while individually random are

00:23:03,000 --> 00:23:07,200
correlated and I know that's a little

00:23:04,860 --> 00:23:09,390
weird to think about and hopefully later

00:23:07,200 --> 00:23:10,620
in the workshop I'll be able to

00:23:09,390 --> 00:23:12,990
demonstrate that a little bit more

00:23:10,620 --> 00:23:17,880
clearly but it's these two properties

00:23:12,990 --> 00:23:20,520
that really make quantum computing

00:23:17,880 --> 00:23:23,700
special because it's relying on these

00:23:20,520 --> 00:23:24,480
quantum mechanical effects and the first

00:23:23,700 --> 00:23:25,800
one we're going to talk about a

00:23:24,480 --> 00:23:27,870
superposition because it's a little bit

00:23:25,800 --> 00:23:29,310
easier to wrap your head around people

00:23:27,870 --> 00:23:31,440
have probably heard of Schrodinger's cat

00:23:29,310 --> 00:23:33,000
you know the class the classical thought

00:23:31,440 --> 00:23:35,550
experiment where you have a cat in a box

00:23:33,000 --> 00:23:37,140
with poison in a vial that's on a

00:23:35,550 --> 00:23:39,060
time-delay to open you don't know when

00:23:37,140 --> 00:23:40,440
and when the cat's in the box you can

00:23:39,060 --> 00:23:42,840
think of it as alive and dead at the

00:23:40,440 --> 00:23:45,920
same time and you don't know until you

00:23:42,840 --> 00:23:48,780
look at it whether it is alive or dead

00:23:45,920 --> 00:23:52,140
when you look at it from quantum

00:23:48,780 --> 00:23:55,590
computing it's the same thing but a

00:23:52,140 --> 00:23:57,390
little bit less morbid I guess so in

00:23:55,590 --> 00:23:59,760
this case we've talked about the zero

00:23:57,390 --> 00:24:02,370
basis state in the one basis state the

00:23:59,760 --> 00:24:05,160
zero and one but what happens when the

00:24:02,370 --> 00:24:09,090
qubit that vector is pointing anywhere

00:24:05,160 --> 00:24:11,850
else in between them the system can be

00:24:09,090 --> 00:24:13,140
thought of as being both a 0 and a 1 at

00:24:11,850 --> 00:24:14,070
the same time because you only get the

00:24:13,140 --> 00:24:16,950
zero or the one on the

00:24:14,070 --> 00:24:19,170
but I personally like to think of it

00:24:16,950 --> 00:24:21,270
more as just a probability thing so the

00:24:19,170 --> 00:24:23,430
vector is pointing to X plus 1 it's

00:24:21,270 --> 00:24:26,280
halfway between 1 & 0 and when you

00:24:23,430 --> 00:24:28,890
measure you'll get a 50/50 chance of it

00:24:26,280 --> 00:24:31,140
being 0 or 1 if it's a little bit closer

00:24:28,890 --> 00:24:32,790
to 0 your probability will go up that

00:24:31,140 --> 00:24:33,930
it's going to be a 0 and if it's

00:24:32,790 --> 00:24:40,790
pointing a little bit down a little

00:24:33,930 --> 00:24:46,620
probability will go up to be a 1 and

00:24:40,790 --> 00:24:48,840
just like the x gate for doing a quantum

00:24:46,620 --> 00:24:50,400
not there is a quantum logic gate called

00:24:48,840 --> 00:24:54,210
the Hadamard which is used for putting

00:24:50,400 --> 00:24:56,460
things in superposition and you can

00:24:54,210 --> 00:24:58,380
think of the Hadamard as an rotation

00:24:56,460 --> 00:25:00,930
over the x plus z axis which is just

00:24:58,380 --> 00:25:02,730
that diagonal right there

00:25:00,930 --> 00:25:05,100
so if you're at the base of state 0 and

00:25:02,730 --> 00:25:07,830
you apply a hatter mard it'll go down to

00:25:05,100 --> 00:25:11,780
that plus 1 X and that's that

00:25:07,830 --> 00:25:11,780
superposition state where it's a 50/50

00:25:14,510 --> 00:25:19,890
so we can build this in quiz kit the

00:25:17,700 --> 00:25:22,230
same way so just like before we're going

00:25:19,890 --> 00:25:25,110
to build a quantum register with one

00:25:22,230 --> 00:25:27,420
qubit a classical register with one

00:25:25,110 --> 00:25:31,040
classical bit for the result build a

00:25:27,420 --> 00:25:33,810
circuit with those apply a Hadamard and

00:25:31,040 --> 00:25:36,170
then measure and then we can draw that

00:25:33,810 --> 00:25:38,490
circuit and see what it looks like and

00:25:36,170 --> 00:25:40,260
just like before it's the same thing but

00:25:38,490 --> 00:25:44,600
instead of an X gate we have an H gate

00:25:40,260 --> 00:25:50,340
so we apply an H gate and we measure and

00:25:44,600 --> 00:25:55,730
then we're going to execute this a

00:25:50,340 --> 00:25:58,710
hundred times and print the output and

00:25:55,730 --> 00:26:01,470
it's behaving randomly you we have a

00:25:58,710 --> 00:26:03,330
50/50 50/50 chance of it being 1 or 0

00:26:01,470 --> 00:26:05,430
and that's more or less what we get

00:26:03,330 --> 00:26:07,680
because random doesn't mean perfectly

00:26:05,430 --> 00:26:09,540
distributed so it's about a 50/50 split

00:26:07,680 --> 00:26:11,220
between a 1 and a 0 which is what we

00:26:09,540 --> 00:26:14,160
expect when we measure in that

00:26:11,220 --> 00:26:16,560
superposition state we can also graph

00:26:14,160 --> 00:26:21,120
that because graphs are easier to read

00:26:16,560 --> 00:26:25,730
so here we had a 60/40 split which is

00:26:21,120 --> 00:26:25,730
pretty much exactly what we expected

00:26:26,260 --> 00:26:37,280
but things are a little bit interesting

00:26:31,360 --> 00:26:40,730
when we start looking at the phase

00:26:37,280 --> 00:26:43,280
component so the Hadamard is its own

00:26:40,730 --> 00:26:45,680
inverse so if you apply ahead of mark

00:26:43,280 --> 00:26:47,870
twice it goes back to the state it was

00:26:45,680 --> 00:26:50,000
in originally assuming that's along that

00:26:47,870 --> 00:26:51,680
basis state so if we start at zero we

00:26:50,000 --> 00:26:54,140
apply a Hadamard it goes to that plus X

00:26:51,680 --> 00:26:59,900
and if we apply it again it'll just

00:26:54,140 --> 00:27:02,030
rotate back up to zero and the same is

00:26:59,900 --> 00:27:06,110
true for when we're at one if we're

00:27:02,030 --> 00:27:08,030
pointing down at one and we go we apply

00:27:06,110 --> 00:27:10,610
a Hadamard it will go to minus x instead

00:27:08,030 --> 00:27:13,550
of plus x or you can think of that as 0

00:27:10,610 --> 00:27:15,440
minus 1 as opposed to 0 plus 1 because

00:27:13,550 --> 00:27:20,480
the phase is different that little red

00:27:15,440 --> 00:27:21,680
thing there is the phase and so while

00:27:20,480 --> 00:27:23,870
the Hadamard lets you put things in

00:27:21,680 --> 00:27:25,820
superposition it also lets you look at

00:27:23,870 --> 00:27:27,650
the phase because if you apply this

00:27:25,820 --> 00:27:29,060
rotation you can look at the phase

00:27:27,650 --> 00:27:32,150
component of something and it's just

00:27:29,060 --> 00:27:33,560
rotating it along that basis state that

00:27:32,150 --> 00:27:38,000
z-axis which is where we're measuring

00:27:33,560 --> 00:27:42,560
from and that's pretty useful but we can

00:27:38,000 --> 00:27:45,260
also demonstrate this in quiz get the

00:27:42,560 --> 00:27:47,360
same way so in here in this case we're

00:27:45,260 --> 00:27:49,940
building the same quantum circuit again

00:27:47,360 --> 00:27:51,950
from one quantum register one qubit and

00:27:49,940 --> 00:27:56,900
one classical bit and we just apply a

00:27:51,950 --> 00:27:59,980
Hadamard twice and we measure it and our

00:27:56,900 --> 00:28:06,410
gate looks like that only then we

00:27:59,980 --> 00:28:09,670
execute it we get zero 100% of the time

00:28:06,410 --> 00:28:16,090
like we expect and we just graph that

00:28:09,670 --> 00:28:19,040
and the same is true if we put things in

00:28:16,090 --> 00:28:21,260
from starting from the bay the one basis

00:28:19,040 --> 00:28:23,510
state so we put it we apply an x kate to

00:28:21,260 --> 00:28:26,240
go from 0 to 1 then we apply a how to

00:28:23,510 --> 00:28:29,920
mark twice and we measure and we should

00:28:26,240 --> 00:28:29,920
get one 100% of the time

00:28:31,429 --> 00:28:42,679
and we do and we can graph that we had

00:28:38,419 --> 00:28:45,229
100% of the time before I move on are

00:28:42,679 --> 00:28:46,820
there any questions because that's there

00:28:45,229 --> 00:28:49,700
is are people able to follow me am i

00:28:46,820 --> 00:28:56,269
moving too quickly any clarification on

00:28:49,700 --> 00:28:58,009
things sorry what was that how did we

00:28:56,269 --> 00:29:03,009
get hundred percent probability of one

00:28:58,009 --> 00:29:06,409
this time so this time we were doing the

00:29:03,009 --> 00:29:08,690
so we started in the one they sustained

00:29:06,409 --> 00:29:10,729
so we started by applying an XK and it

00:29:08,690 --> 00:29:12,529
pointed down to one and then we apply to

00:29:10,729 --> 00:29:15,109
Hadamard so it went to negative one and

00:29:12,529 --> 00:29:17,929
like I said the Hadamard because of the

00:29:15,109 --> 00:29:21,739
phase is its own inverse so when it's at

00:29:17,929 --> 00:29:25,339
negative one we rotate over the Z plus x

00:29:21,739 --> 00:29:26,659
axis and it goes back down to one so

00:29:25,339 --> 00:29:30,320
that's what I was showing there in a

00:29:26,659 --> 00:29:32,839
circuit was that it goes from zero minus

00:29:30,320 --> 00:29:35,389
one or the minus X position and then it

00:29:32,839 --> 00:29:37,539
goes back down to one is that answer

00:29:35,389 --> 00:29:37,539
your question

00:29:37,629 --> 00:29:42,589
in the representation of qubits like the

00:29:40,879 --> 00:29:45,859
value of the qubit change when we

00:29:42,589 --> 00:29:47,809
observe it the value may be 0 or 1 right

00:29:45,859 --> 00:29:49,879
yes so when we when we measure and

00:29:47,809 --> 00:29:52,009
observe it we get a 0 or 1 output and

00:29:49,879 --> 00:29:55,669
that's because it's collapsing we can't

00:29:52,009 --> 00:29:57,589
look at the sphere from it so it's not

00:29:55,669 --> 00:29:58,969
actually a sphere but from a logical

00:29:57,589 --> 00:30:00,950
perspective we can't look at the

00:29:58,969 --> 00:30:03,019
position along the sphere when we want

00:30:00,950 --> 00:30:05,779
to look at qubit we either get a 0 or a

00:30:03,019 --> 00:30:12,889
1 because that vector will move up or

00:30:05,779 --> 00:30:14,809
down so it is a probability so but how

00:30:12,889 --> 00:30:18,830
this qubits can be used to represent

00:30:14,809 --> 00:30:22,249
data because the value depends when we

00:30:18,830 --> 00:30:25,429
observe the value changes so how it can

00:30:22,249 --> 00:30:27,529
be used to represent the data well I

00:30:25,429 --> 00:30:30,259
mean you get a 0 or 1 output so you

00:30:27,529 --> 00:30:34,279
could think of it as a bit string of the

00:30:30,259 --> 00:30:36,889
number of qubits long or you can use

00:30:34,279 --> 00:30:39,070
some other tricks to use data out I

00:30:36,889 --> 00:30:39,070
actually

00:30:40,000 --> 00:30:44,560
- which algorithm am I using well I'm

00:30:42,940 --> 00:30:46,900
not specifically talking about any

00:30:44,560 --> 00:30:49,060
algorithms yet I'm still just looking at

00:30:46,900 --> 00:30:51,100
the basics of how qubits how you

00:30:49,060 --> 00:30:53,260
interact with qubits I'm dealing at a

00:30:51,100 --> 00:30:55,540
level below algorithms to give some

00:30:53,260 --> 00:30:57,130
fundamentals in the presentation

00:30:55,540 --> 00:30:59,200
yesterday I used an algorithm called

00:30:57,130 --> 00:31:03,010
Bernstein Bowser on E which was looking

00:30:59,200 --> 00:31:04,960
at its an Oracle problem and I think

00:31:03,010 --> 00:31:09,580
that was recorded and we can look at

00:31:04,960 --> 00:31:14,680
that then there any other questions

00:31:09,580 --> 00:31:16,300
Bernstein vawser on e yeah you can the

00:31:14,680 --> 00:31:20,950
recorded keynotes were recorded

00:31:16,300 --> 00:31:25,720
yesterday yeah online on the channel on

00:31:20,950 --> 00:31:29,080
YouTube okay I think we'll be online

00:31:25,720 --> 00:31:38,920
soon I think are there any other

00:31:29,080 --> 00:31:41,350
questions before I move on ok so I'm not

00:31:38,920 --> 00:31:43,330
going to get into a lot of other quantum

00:31:41,350 --> 00:31:47,140
gates right now because there there are

00:31:43,330 --> 00:31:48,940
lots of them there is a in the quiz kit

00:31:47,140 --> 00:31:51,070
tutorials repository which is this

00:31:48,940 --> 00:31:53,080
really large repository filled with a

00:31:51,070 --> 00:31:54,880
bunch of Jupiter notebooks that explain

00:31:53,080 --> 00:31:57,310
all the basics of quantum information

00:31:54,880 --> 00:31:59,080
theory a lot of different algorithms

00:31:57,310 --> 00:32:00,670
things like Shor's algorithm which is

00:31:59,080 --> 00:32:03,550
what everyone is always excited about

00:32:00,670 --> 00:32:06,370
because of RSA and a lot of other

00:32:03,550 --> 00:32:08,080
algorithms like rovers and but it also

00:32:06,370 --> 00:32:11,410
explains fundamentals there's a notebook

00:32:08,080 --> 00:32:14,980
in there that provides a list of all of

00:32:11,410 --> 00:32:16,120
the quantum gates that are by by default

00:32:14,980 --> 00:32:19,690
available in quiz kit they're the

00:32:16,120 --> 00:32:21,160
standard ones but because it's targeted

00:32:19,690 --> 00:32:21,670
for people who are familiar with linear

00:32:21,160 --> 00:32:23,260
algebra

00:32:21,670 --> 00:32:26,200
they don't actually show the qubit

00:32:23,260 --> 00:32:28,030
rotation model I use that because I find

00:32:26,200 --> 00:32:30,580
it a bit easier since my linear algebra

00:32:28,030 --> 00:32:34,870
is pretty weak and that's what I'm using

00:32:30,580 --> 00:32:37,170
here but that's not intuitive for people

00:32:34,870 --> 00:32:40,240
who aren't super familiar with how this

00:32:37,170 --> 00:32:42,850
rotating and vector spaces works so I

00:32:40,240 --> 00:32:45,790
just put an example here to show how

00:32:42,850 --> 00:32:47,980
encode how you can take the gate from

00:32:45,790 --> 00:32:51,070
that notebook and translate it to the

00:32:47,980 --> 00:32:53,050
output state on a block sphere so in

00:32:51,070 --> 00:32:55,210
this example I

00:32:53,050 --> 00:32:57,820
running the Wye gate so I'm building the

00:32:55,210 --> 00:33:00,100
same quantum circuit from one cubit one

00:32:57,820 --> 00:33:02,620
classical bit and just applying the Y

00:33:00,100 --> 00:33:04,120
gate and in this case I'm using a

00:33:02,620 --> 00:33:06,400
different simulator called the state

00:33:04,120 --> 00:33:08,590
vector simulator so instead of measuring

00:33:06,400 --> 00:33:11,260
and getting a count as your one output

00:33:08,590 --> 00:33:14,740
since we're simulating we can look at

00:33:11,260 --> 00:33:16,300
the quantum state as a vector of the

00:33:14,740 --> 00:33:18,610
components so I was showing zero plus

00:33:16,300 --> 00:33:21,550
one before you can represent the quantum

00:33:18,610 --> 00:33:23,860
state as a vector so that zero and that

00:33:21,550 --> 00:33:25,840
one have a coefficient in front of them

00:33:23,860 --> 00:33:27,700
so if it's at the base of state zero

00:33:25,840 --> 00:33:29,770
it's a 1 coefficient and a zero

00:33:27,700 --> 00:33:31,840
coefficient or if it's pointing anywhere

00:33:29,770 --> 00:33:33,610
along the surface you can give it its

00:33:31,840 --> 00:33:34,960
own number as a coefficient and that

00:33:33,610 --> 00:33:36,730
will represent its position on the

00:33:34,960 --> 00:33:40,750
sphere and the state vector simulator

00:33:36,730 --> 00:33:44,470
lets you get that get that state vector

00:33:40,750 --> 00:33:46,570
instead of measuring so we use that and

00:33:44,470 --> 00:33:49,330
then we use this visualization function

00:33:46,570 --> 00:33:53,470
plot block multi-vector to plot the

00:33:49,330 --> 00:33:55,300
output of the you know on a block sphere

00:33:53,470 --> 00:33:57,880
what the output of that operation looks

00:33:55,300 --> 00:33:59,350
like and it can be any any it can be a

00:33:57,880 --> 00:34:01,810
full quantum circuit with a lot of

00:33:59,350 --> 00:34:04,690
different gates or or just one like

00:34:01,810 --> 00:34:07,540
we're doing here so in this case if we

00:34:04,690 --> 00:34:07,990
apply the Y gate it will go from a 0 or

00:34:07,540 --> 00:34:12,220
a 1

00:34:07,990 --> 00:34:14,230
because doing a 180 degree rotation over

00:34:12,220 --> 00:34:15,730
the y axis is the same as doing it over

00:34:14,230 --> 00:34:17,620
the X if it's pointing straight up

00:34:15,730 --> 00:34:21,850
because there's no phase it just goes up

00:34:17,620 --> 00:34:26,140
to down but because there are gates a

00:34:21,850 --> 00:34:28,870
lot of gates that only work on phase you

00:34:26,140 --> 00:34:30,280
can't always see anything if it the if

00:34:28,870 --> 00:34:32,620
you're at the zero basis state and

00:34:30,280 --> 00:34:34,210
you're rotating this way like that like

00:34:32,620 --> 00:34:35,320
screwing a light bulb you're not going

00:34:34,210 --> 00:34:37,630
to see anything because the vector is

00:34:35,320 --> 00:34:39,640
still going to point up so you need to

00:34:37,630 --> 00:34:42,730
put it in superposition with a Hadamard

00:34:39,640 --> 00:34:44,950
to do it first so I put this example

00:34:42,730 --> 00:34:48,210
here this is just called the s dagger

00:34:44,950 --> 00:34:50,050
gate which is that symbol right there

00:34:48,210 --> 00:34:51,640
you don't have to worry about the math

00:34:50,050 --> 00:34:53,230
I've never actually used it in a

00:34:51,640 --> 00:34:55,510
practical application I don't know

00:34:53,230 --> 00:34:58,210
what's really used for personally but

00:34:55,510 --> 00:35:00,670
it's a phase rotation gate and I just

00:34:58,210 --> 00:35:02,440
picked it to do that so in here you can

00:35:00,670 --> 00:35:04,450
see we apply a Hadamard before we apply

00:35:02,440 --> 00:35:09,010
that s dagger

00:35:04,450 --> 00:35:11,079
and we run this cell and you can see it

00:35:09,010 --> 00:35:13,359
goes from we apply a Hadamard so it goes

00:35:11,079 --> 00:35:15,520
from the zero to the plus X state and

00:35:13,359 --> 00:35:19,750
then the dagger rotation moves it to

00:35:15,520 --> 00:35:23,440
that minus y and if we run this without

00:35:19,750 --> 00:35:25,059
that Hadamard it just points up at zero

00:35:23,440 --> 00:35:28,299
because we're rotating the phase and

00:35:25,059 --> 00:35:30,579
there's no phase component and if you

00:35:28,299 --> 00:35:32,710
look at that notebook I linked to you

00:35:30,579 --> 00:35:35,170
can use this to try to visualize what

00:35:32,710 --> 00:35:36,970
the gate is going to do and move it

00:35:35,170 --> 00:35:39,460
around an experiment to see how these

00:35:36,970 --> 00:35:41,650
operations are modifying the qubit state

00:35:39,460 --> 00:35:45,599
we on the Bloch sphere if you don't want

00:35:41,650 --> 00:35:45,599
to think about the matrix multiplication

00:35:47,790 --> 00:35:54,760
so the next thing I want to talk about

00:35:52,480 --> 00:35:57,540
before I do that are there any other

00:35:54,760 --> 00:35:57,540
questions okay

00:35:59,890 --> 00:36:08,319
that's so the next thing I want to talk

00:36:04,720 --> 00:36:10,480
about is multi qubit circuits and gates

00:36:08,319 --> 00:36:12,510
and all of the examples before we were

00:36:10,480 --> 00:36:16,540
looking at a single qubit and what a

00:36:12,510 --> 00:36:20,260
single qubit gate does to this the state

00:36:16,540 --> 00:36:23,319
of that qubit but to do real computation

00:36:20,260 --> 00:36:24,880
and to get to what the woman in the

00:36:23,319 --> 00:36:27,069
front row was talking about before is

00:36:24,880 --> 00:36:28,329
that's not real data that's one bit you

00:36:27,069 --> 00:36:32,650
get a 0 or 1 how can you do anything

00:36:28,329 --> 00:36:36,460
with one day so you're going to want to

00:36:32,650 --> 00:36:37,930
use more than one bit to do things and

00:36:36,460 --> 00:36:39,579
then their operation the real power of

00:36:37,930 --> 00:36:41,470
quantum computation comes when you start

00:36:39,579 --> 00:36:44,410
using operations on multiple qubits at

00:36:41,470 --> 00:36:45,849
the same time so in this case we're

00:36:44,410 --> 00:36:49,690
going to start looking at some

00:36:45,849 --> 00:36:51,160
operations on larger quantum circuits so

00:36:49,690 --> 00:36:54,339
here we're going to make a quantum

00:36:51,160 --> 00:36:57,760
register with three qubits and we're

00:36:54,339 --> 00:36:59,650
going to build a circuit with those with

00:36:57,760 --> 00:37:02,710
those three qubits and then we're just

00:36:59,650 --> 00:37:04,900
going to apply an ex gate on the first

00:37:02,710 --> 00:37:07,599
qubit and or the second qubit and the

00:37:04,900 --> 00:37:11,520
third qubit because of zero index in

00:37:07,599 --> 00:37:11,520
python and then we draw that circuit

00:37:13,849 --> 00:37:19,369
so just like before where we had the

00:37:17,329 --> 00:37:22,400
three we we represent in a quantum

00:37:19,369 --> 00:37:24,949
circuit the qubits with these single

00:37:22,400 --> 00:37:27,829
lines and gates on them and it just

00:37:24,949 --> 00:37:30,140
shows the order of operations so here

00:37:27,829 --> 00:37:32,959
you can see we're applying an X gate on

00:37:30,140 --> 00:37:36,259
qubits two and three and not on on the

00:37:32,959 --> 00:37:38,359
first qubit and when we execute this

00:37:36,259 --> 00:37:39,589
circuit using the state vector simulator

00:37:38,359 --> 00:37:43,569
because we're going to look at that

00:37:39,589 --> 00:37:47,239
state we can get a vector output and

00:37:43,569 --> 00:37:49,609
this is where the complexity from

00:37:47,239 --> 00:37:51,079
quantum computation comes from because

00:37:49,609 --> 00:37:52,789
of something called the entanglement

00:37:51,079 --> 00:37:54,349
principle I was talking about before and

00:37:52,789 --> 00:37:57,019
we'll get into in a minute because it's

00:37:54,349 --> 00:38:00,859
we need some more basics to understand

00:37:57,019 --> 00:38:02,569
it the complexity grows exponential with

00:38:00,859 --> 00:38:07,609
the number of qubits you can't represent

00:38:02,569 --> 00:38:09,079
the state of a quantum computer by each

00:38:07,609 --> 00:38:10,430
component individually like in a

00:38:09,079 --> 00:38:12,109
classical computer you have in a

00:38:10,430 --> 00:38:13,999
classical computer you have 0 or 1 for

00:38:12,109 --> 00:38:16,130
each bit in a quantum computer because

00:38:13,999 --> 00:38:17,930
of entanglement they're all coupled so

00:38:16,130 --> 00:38:21,920
when you look at the quantum state it

00:38:17,930 --> 00:38:23,390
becomes 2 to the N coefficients in the

00:38:21,920 --> 00:38:27,709
vector for the quantum state that you

00:38:23,390 --> 00:38:30,019
have to represent so here you can see we

00:38:27,709 --> 00:38:32,930
have all zeros except for the one answer

00:38:30,019 --> 00:38:35,779
right there another way to represent

00:38:32,930 --> 00:38:40,069
that is by plotting the quantum state as

00:38:35,779 --> 00:38:42,109
a 3-dimensional histogram which that is

00:38:40,069 --> 00:38:45,160
really tiny because of this resolution I

00:38:42,109 --> 00:38:49,069
apologize and you can see the individual

00:38:45,160 --> 00:38:51,319
components so you can see 0 0 through 1

00:38:49,069 --> 00:38:53,449
1 and you can see we have one answer

00:38:51,319 --> 00:38:55,009
because it's a deterministic because

00:38:53,449 --> 00:38:59,180
we're just applying X gates so there's

00:38:55,009 --> 00:39:03,319
two ones and 1 0 and that's 1 1 0 which

00:38:59,180 --> 00:39:05,180
is this one peak but these these Peaks

00:39:03,319 --> 00:39:07,130
are probabilities of being a result so

00:39:05,180 --> 00:39:08,630
it's just like the hit the 2d histogram

00:39:07,130 --> 00:39:10,369
we were looking at before but this is

00:39:08,630 --> 00:39:16,819
3-dimensional because the quantum state

00:39:10,369 --> 00:39:18,469
grows in complexity and it's also much

00:39:16,819 --> 00:39:21,170
easier to think of things in the Bloch

00:39:18,469 --> 00:39:24,469
sphere when it's deterministic like this

00:39:21,170 --> 00:39:26,089
so here we can see we have qubit zero at

00:39:24,469 --> 00:39:27,530
the zero basis state and we applied the

00:39:26,089 --> 00:39:28,790
XK to these two

00:39:27,530 --> 00:39:31,970
that's the other way to think about it

00:39:28,790 --> 00:39:33,859
this represent the cue the Bloch sphere

00:39:31,970 --> 00:39:36,170
representation falls apart when we start

00:39:33,859 --> 00:39:37,849
looking at entanglement because it's

00:39:36,170 --> 00:39:44,750
hard to visualize things being

00:39:37,849 --> 00:39:46,910
correlated but not touching and the only

00:39:44,750 --> 00:39:49,099
multi qubit operation I'm going to talk

00:39:46,910 --> 00:39:53,950
about today is called the C not gate

00:39:49,099 --> 00:39:59,030
which is the C X and I had a slide on it

00:39:53,950 --> 00:40:01,010
this one which is if the there are two

00:39:59,030 --> 00:40:02,599
qubits it operates on two qubits one is

00:40:01,010 --> 00:40:04,490
a control and one is a target the

00:40:02,599 --> 00:40:06,650
control is represented by this dot and

00:40:04,490 --> 00:40:10,070
the target is represented by that plus

00:40:06,650 --> 00:40:13,790
and if the control is at a zero it does

00:40:10,070 --> 00:40:16,460
nothing on the target but if the control

00:40:13,790 --> 00:40:19,010
is at a one then it flips the

00:40:16,460 --> 00:40:21,380
coefficients on the target or applies an

00:40:19,010 --> 00:40:26,060
X operation you can think of this so if

00:40:21,380 --> 00:40:27,820
this was at zero the a there would be

00:40:26,060 --> 00:40:32,359
one and the be there would be zero

00:40:27,820 --> 00:40:35,330
because it's pointing up and if you if

00:40:32,359 --> 00:40:37,820
we apply the C naught and the control is

00:40:35,330 --> 00:40:40,609
at a one state it'll flip that so it'll

00:40:37,820 --> 00:40:45,650
become zero on the zero and one on the

00:40:40,609 --> 00:40:47,390
one so you have a one on your output so

00:40:45,650 --> 00:40:50,740
we can see what a C naught looks like on

00:40:47,390 --> 00:40:54,710
a quantum circuit in quiz get by just

00:40:50,740 --> 00:40:56,990
applying the C X which is the controlled

00:40:54,710 --> 00:40:58,160
ex-gay data C not gate can we do the

00:40:56,990 --> 00:41:01,430
same thing so here we're going to build

00:40:58,160 --> 00:41:04,490
a quantum circuit with to register or

00:41:01,430 --> 00:41:07,339
two qubits two classical bits for the

00:41:04,490 --> 00:41:09,130
measurement we build that circuit we're

00:41:07,339 --> 00:41:14,599
gonna measure and we're going to draw it

00:41:09,130 --> 00:41:16,880
and you can see here we have the C

00:41:14,599 --> 00:41:19,220
naught which is what we wanted and then

00:41:16,880 --> 00:41:22,250
we can simulate with the state vector as

00:41:19,220 --> 00:41:24,740
before to look at the quantum state so

00:41:22,250 --> 00:41:26,119
you since it's smaller we have only four

00:41:24,740 --> 00:41:28,369
components because it's two to the

00:41:26,119 --> 00:41:32,240
second power and complexity and we can

00:41:28,369 --> 00:41:34,400
represent this quantum state as it's

00:41:32,240 --> 00:41:38,820
going to be zero zero because everything

00:41:34,400 --> 00:41:44,250
is at zero and we can draw the

00:41:38,820 --> 00:41:46,350
3d histogram and then if we would I

00:41:44,250 --> 00:41:48,150
don't I did not put a block sphere in

00:41:46,350 --> 00:41:51,000
here but it's pretty simple everything

00:41:48,150 --> 00:41:53,880
is at zero it's pretty uninteresting but

00:41:51,000 --> 00:41:56,040
then we can add measurement and get the

00:41:53,880 --> 00:41:58,859
counts and you see we get zero every

00:41:56,040 --> 00:42:00,930
single time and we can plot the

00:41:58,859 --> 00:42:06,060
histogram for that because everyone

00:42:00,930 --> 00:42:08,760
likes that blue 2d histogram and then we

00:42:06,060 --> 00:42:13,710
can show when the first qubit that

00:42:08,760 --> 00:42:17,340
control is at one we apply a C naught so

00:42:13,710 --> 00:42:20,880
we draw that circuit so that X gate is

00:42:17,340 --> 00:42:22,230
going to put qubit 0 at 1 at the 1 base

00:42:20,880 --> 00:42:23,700
of state right there and we apply C

00:42:22,230 --> 00:42:26,670
naught so that's going to flip the 0 2

00:42:23,700 --> 00:42:28,230
or 1 or so we expect it to and we can

00:42:26,670 --> 00:42:30,119
run this through the state vector

00:42:28,230 --> 00:42:32,820
simulator get our quantum state and you

00:42:30,119 --> 00:42:38,270
can see that coefficient used to be here

00:42:32,820 --> 00:42:43,500
on 0 on 0 0 and now it's here on 1 1 and

00:42:38,270 --> 00:42:45,500
we can show that in our on our 3d

00:42:43,500 --> 00:42:48,420
histogram plot for the quantum state of

00:42:45,500 --> 00:42:52,310
the whole system and then we can also do

00:42:48,420 --> 00:42:58,230
the counts and we get 1 1 like we expect

00:42:52,310 --> 00:42:59,570
and then plot the histogram because why

00:42:58,230 --> 00:43:04,410
not

00:42:59,570 --> 00:43:06,690
so this is how you start thinking about

00:43:04,410 --> 00:43:08,910
multi qubit operations the complexity

00:43:06,690 --> 00:43:12,119
grows so thinking about the system as a

00:43:08,910 --> 00:43:13,920
whole gets more complicated but we've

00:43:12,119 --> 00:43:15,660
only looked at the classical operations

00:43:13,920 --> 00:43:18,810
to try to build this basis for how we're

00:43:15,660 --> 00:43:21,260
going to look at multi qubit the next

00:43:18,810 --> 00:43:23,520
step is going to look when things get

00:43:21,260 --> 00:43:24,810
when we start using an entanglement and

00:43:23,520 --> 00:43:26,460
where things start being in

00:43:24,810 --> 00:43:28,020
superposition States while we're

00:43:26,460 --> 00:43:30,119
applying these operations to them that's

00:43:28,020 --> 00:43:33,740
where things get more complicated how

00:43:30,119 --> 00:43:36,359
much time do I have just 10 minutes ok

00:43:33,740 --> 00:43:38,430
so before I move on because this the

00:43:36,359 --> 00:43:39,810
next section is the last one

00:43:38,430 --> 00:43:42,540
I want to make sure there are no more

00:43:39,810 --> 00:43:47,460
questions before we move on or if people

00:43:42,540 --> 00:43:49,310
able to keep up okay if there's nothing

00:43:47,460 --> 00:43:52,150
I'll just move on to the last section

00:43:49,310 --> 00:43:55,620
which is entanglement and this is

00:43:52,150 --> 00:44:01,000
I struggled to come up with a way to

00:43:55,620 --> 00:44:03,400
think about this so like I said before

00:44:01,000 --> 00:44:06,880
entanglement is where you have two

00:44:03,400 --> 00:44:10,810
qubits that are independent but their

00:44:06,880 --> 00:44:12,280
output is correlated so here we're going

00:44:10,810 --> 00:44:16,240
to build something called a bell state

00:44:12,280 --> 00:44:18,250
which is the typical way the easiest way

00:44:16,240 --> 00:44:21,690
to put things in an entangled state so

00:44:18,250 --> 00:44:24,040
we're going to set up a two qubit

00:44:21,690 --> 00:44:26,320
quantum register and to classical

00:44:24,040 --> 00:44:28,240
registers and we're going to build a

00:44:26,320 --> 00:44:30,370
Bell State which is you put the first

00:44:28,240 --> 00:44:33,670
qubit in superposition with the Hadamard

00:44:30,370 --> 00:44:36,910
and then you apply a C naught on it to

00:44:33,670 --> 00:44:38,830
untangle them so one qubit is in

00:44:36,910 --> 00:44:40,750
superposition it's in that state where

00:44:38,830 --> 00:44:43,240
it can be a zero or one 50-50 chance you

00:44:40,750 --> 00:44:46,300
don't know and then we apply a C naught

00:44:43,240 --> 00:44:51,670
on it which changes the output of the

00:44:46,300 --> 00:44:52,840
second one if it's 1 and that sets up an

00:44:51,670 --> 00:44:55,780
entanglement and then we're going to

00:44:52,840 --> 00:44:58,570
look at this from a lot of different

00:44:55,780 --> 00:45:01,870
ways so we're going to look at the

00:44:58,570 --> 00:45:06,670
output this one this measure Isaiah is

00:45:01,870 --> 00:45:09,220
going to look at the first qubit whether

00:45:06,670 --> 00:45:10,900
it's a 0 or 1 by itself not looking at

00:45:09,220 --> 00:45:13,720
the two qubits together just the first

00:45:10,900 --> 00:45:16,060
one then we're going to look at the

00:45:13,720 --> 00:45:18,640
phase or the superposition basis of that

00:45:16,060 --> 00:45:22,620
second qubit by applying a Hadamard

00:45:18,640 --> 00:45:24,610
before we measure which is right there

00:45:22,620 --> 00:45:26,680
then we're going to look at the second

00:45:24,610 --> 00:45:29,560
qubit the same way on its basis state

00:45:26,680 --> 00:45:33,910
and then it's phase by applying a

00:45:29,560 --> 00:45:37,030
Hadamard and then we look at both qubits

00:45:33,910 --> 00:45:39,040
together in the base of state so the

00:45:37,030 --> 00:45:42,640
first one and the second one we're going

00:45:39,040 --> 00:45:45,970
to get a 0 or 1 on the output then we're

00:45:42,640 --> 00:45:47,860
going to look at the this this with this

00:45:45,970 --> 00:45:53,500
third example here we're going to get a

00:45:47,860 --> 00:45:54,940
0 0 a 0 1 a 1 0 or 1 1 and then we're

00:45:53,500 --> 00:45:58,270
going to look at the phase of that again

00:45:54,940 --> 00:46:01,150
and we're going to get a 0 0 a 0 1 a 1 0

00:45:58,270 --> 00:46:03,850
or 1 1 and we're going to look at all of

00:46:01,150 --> 00:46:05,339
these circuits to try to get a grasp on

00:46:03,850 --> 00:46:08,940
what's going on in this entangled

00:46:05,339 --> 00:46:11,999
case so we build all of those circuits

00:46:08,940 --> 00:46:14,249
and then we're just going to draw them

00:46:11,999 --> 00:46:16,829
to show what they all do

00:46:14,249 --> 00:46:23,999
so here Hadamard we build that Bell

00:46:16,829 --> 00:46:25,499
state and then we measure here we build

00:46:23,999 --> 00:46:27,329
that Bell state again then we apply a

00:46:25,499 --> 00:46:29,039
Hadamard to look at its superposition

00:46:27,329 --> 00:46:31,619
basis or its phase and then we measure

00:46:29,039 --> 00:46:35,719
and then the next two are the same thing

00:46:31,619 --> 00:46:35,719
just the measure is on the other qubit

00:46:36,349 --> 00:46:40,009
say and then

00:46:42,040 --> 00:46:49,030
same thing and then we look at both

00:46:47,109 --> 00:46:51,520
qubits together so we measure we put a

00:46:49,030 --> 00:46:58,330
set up a bell state and we measure both

00:46:51,520 --> 00:47:00,460
of them and then we apply the Hadamard

00:46:58,330 --> 00:47:06,250
on the after on the two of them to look

00:47:00,460 --> 00:47:11,410
at the phase and then we use the state

00:47:06,250 --> 00:47:17,320
vector simulator to put all of these

00:47:11,410 --> 00:47:21,460
together and execute them all and then

00:47:17,320 --> 00:47:22,930
we look at the oh sorry we look at we

00:47:21,460 --> 00:47:24,490
use the regular simulator the state

00:47:22,930 --> 00:47:29,440
vector simulator we use later I just did

00:47:24,490 --> 00:47:33,490
that as a shortcut and we look at the

00:47:29,440 --> 00:47:35,950
first qubit along its basis state so we

00:47:33,490 --> 00:47:37,480
get a 0 or a 1 50% of the time which is

00:47:35,950 --> 00:47:38,800
on that first qubit with a Hadamard

00:47:37,480 --> 00:47:41,920
which is what we expect we did that

00:47:38,800 --> 00:47:43,450
before we it's at the plus X we're not

00:47:41,920 --> 00:47:49,540
doing anything else and we get a 0 or 1

00:47:43,450 --> 00:47:52,540
that's what we expect then we look at

00:47:49,540 --> 00:47:56,650
its phase or SR we look at the counts

00:47:52,540 --> 00:47:58,900
just raw then we look at its phase and

00:47:56,650 --> 00:48:07,840
in the same same way because it's in a

00:47:58,900 --> 00:48:10,320
superposition we get 0 or 1 50/50 which

00:48:07,840 --> 00:48:10,320
one is this

00:48:10,730 --> 00:48:15,230
this is then we look at second qubit

00:48:12,680 --> 00:48:16,550
same thing because this is where the

00:48:15,230 --> 00:48:17,810
entanglement starts to come in we can't

00:48:16,550 --> 00:48:19,609
really tell that they're entangled

00:48:17,810 --> 00:48:22,070
because we're just looking at them

00:48:19,609 --> 00:48:24,380
individually but it's in a superposition

00:48:22,070 --> 00:48:26,540
because we applied that see not so if

00:48:24,380 --> 00:48:34,339
it's 0 at 0 and then the other one it's

00:48:26,540 --> 00:48:41,119
1 and then we look at its phase and it's

00:48:34,339 --> 00:48:42,470
the same thing and now we look at this

00:48:41,119 --> 00:48:45,550
is where the entanglement starts to

00:48:42,470 --> 00:48:49,280
really become a little bit obvious so

00:48:45,550 --> 00:48:52,550
when we look at two qubits together we

00:48:49,280 --> 00:48:54,859
get correlated results so if the first

00:48:52,550 --> 00:48:57,980
qubit is a zero the second qubit is a

00:48:54,859 --> 00:48:59,510
zero and if the first qubit is a 1 the

00:48:57,980 --> 00:49:00,950
second qubit is a 1 they're always

00:48:59,510 --> 00:49:03,230
correlated there's nothing in the middle

00:49:00,950 --> 00:49:06,740
which is starting to show there's an

00:49:03,230 --> 00:49:10,030
entanglement because the output is

00:49:06,740 --> 00:49:19,160
correlated and then if we look at the

00:49:10,030 --> 00:49:20,420
phase it's also correlated which if you

00:49:19,160 --> 00:49:22,670
remember the principle I was talking

00:49:20,420 --> 00:49:24,260
about before it's they're not touching

00:49:22,670 --> 00:49:26,450
or they're not interacting they're not

00:49:24,260 --> 00:49:28,730
connected we're just applying the

00:49:26,450 --> 00:49:30,560
operation to the two of them at one in a

00:49:28,730 --> 00:49:33,800
superposition state and the output

00:49:30,560 --> 00:49:36,170
becomes correlated and that's what

00:49:33,800 --> 00:49:38,210
entanglement is and then we can also

00:49:36,170 --> 00:49:42,829
look at that 3-dimensional histogram as

00:49:38,210 --> 00:49:46,160
before and you can see here that we see

00:49:42,829 --> 00:49:50,150
that same correlation between these

00:49:46,160 --> 00:49:54,650
corners which are 0 0 and 1 1 and that's

00:49:50,150 --> 00:49:59,839
the that that demonstrates that these

00:49:54,650 --> 00:50:01,520
are correlated so before I show how this

00:49:59,839 --> 00:50:03,500
is different from like a classical way

00:50:01,520 --> 00:50:05,480
are there any questions on that I know

00:50:03,500 --> 00:50:07,280
it's pretty abstract and I'm trying my

00:50:05,480 --> 00:50:09,819
best to come up with explaining us

00:50:07,280 --> 00:50:09,819
without the math

00:50:15,200 --> 00:50:22,520
oh you can so often you use the sea

00:50:20,210 --> 00:50:23,299
knots and the Hadamard to set up an

00:50:22,520 --> 00:50:25,280
entanglement

00:50:23,299 --> 00:50:26,900
and then you perform operations on one

00:50:25,280 --> 00:50:28,160
or both of the qubits to perform

00:50:26,900 --> 00:50:30,290
operations and that's actually like

00:50:28,160 --> 00:50:31,940
where the power from quantum computing

00:50:30,290 --> 00:50:34,220
comes in because you can change one

00:50:31,940 --> 00:50:35,720
qubit and because they're correlated the

00:50:34,220 --> 00:50:37,670
operation affects the other one and

00:50:35,720 --> 00:50:39,079
that's actually like that's how like

00:50:37,670 --> 00:50:42,290
quantum Fourier transform and all the

00:50:39,079 --> 00:50:46,160
big quantum algorithms you expect are

00:50:42,290 --> 00:50:48,799
built I'm just showing you just the the

00:50:46,160 --> 00:50:50,770
basic building blocks at the end we have

00:50:48,799 --> 00:50:53,329
a lot of links to more information

00:50:50,770 --> 00:50:54,740
because what I thought was valuable in

00:50:53,329 --> 00:50:56,780
this presentation instead of showing you

00:50:54,740 --> 00:50:59,030
all of these abstract algorithms was

00:50:56,780 --> 00:51:01,220
build the building blocks and in the

00:50:59,030 --> 00:51:03,740
software to show how you can do this at

00:51:01,220 --> 00:51:05,059
home yourself and try to understand the

00:51:03,740 --> 00:51:06,890
basics so when you look at those other

00:51:05,059 --> 00:51:08,869
algorithms you understand how they're

00:51:06,890 --> 00:51:14,329
built and maybe play around with them

00:51:08,869 --> 00:51:16,549
you're on your own so the last thing I

00:51:14,329 --> 00:51:22,339
wanted to show in my remaining five

00:51:16,549 --> 00:51:24,109
minutes was how this is different from a

00:51:22,339 --> 00:51:26,569
classical way so you can build a

00:51:24,109 --> 00:51:29,059
classical system where you always get 0

00:51:26,569 --> 00:51:31,190
0 & 1 1 is your output but that's not

00:51:29,059 --> 00:51:33,380
entangled and we can build that on a

00:51:31,190 --> 00:51:35,589
quantum computer pretty easily so here

00:51:33,380 --> 00:51:39,079
what I'm doing is I'm just building two

00:51:35,589 --> 00:51:41,540
quantum circuits with two qubits two

00:51:39,079 --> 00:51:43,790
classical bits and applying X gates on

00:51:41,540 --> 00:51:45,619
one of them one of those sets and then I

00:51:43,790 --> 00:51:51,260
just measure everything and you can see

00:51:45,619 --> 00:51:52,609
I get one where it's just measured so

00:51:51,260 --> 00:51:55,309
it's always going to be zero zero and

00:51:52,609 --> 00:51:59,599
one where I apply an X and then measure

00:51:55,309 --> 00:52:01,970
so it's going to be 1 1 and then I can

00:51:59,599 --> 00:52:03,920
come execute both of them combine the

00:52:01,970 --> 00:52:05,960
results in plinth plot a histogram and

00:52:03,920 --> 00:52:07,609
there I get what looks like the same

00:52:05,960 --> 00:52:13,160
exact thing we were getting before where

00:52:07,609 --> 00:52:15,470
it's 50 result is always 0 0 or 1 1 but

00:52:13,160 --> 00:52:19,160
this is not actually correlated they're

00:52:15,470 --> 00:52:21,410
just 0 0 1 1 and we can show that by

00:52:19,160 --> 00:52:23,990
looking at that superposition basis or

00:52:21,410 --> 00:52:27,440
the phase by applying Hadamard so here

00:52:23,990 --> 00:52:34,940
we built the same thing up again and

00:52:27,440 --> 00:52:38,089
we just apply a Hadamard to the end so

00:52:34,940 --> 00:52:39,410
here we have we applied a Hadamard for

00:52:38,089 --> 00:52:43,480
the first case where it was just zero

00:52:39,410 --> 00:52:48,980
zero and then we do the same thing again

00:52:43,480 --> 00:52:50,240
with when it's in the one so we apply

00:52:48,980 --> 00:52:51,890
the X so it's in a 1 and we apply

00:52:50,240 --> 00:52:53,869
Hadamard and we measure so we're just

00:52:51,890 --> 00:52:56,960
looking at that that phase component by

00:52:53,869 --> 00:52:58,640
applying the Hadamard and then we do the

00:52:56,960 --> 00:53:01,099
same thing with the execution we combine

00:52:58,640 --> 00:53:04,039
them and we run it and we visualize the

00:53:01,099 --> 00:53:05,329
histogram and you can see there the

00:53:04,039 --> 00:53:07,520
results aren't correlated when you look

00:53:05,329 --> 00:53:09,680
at that phase component their individual

00:53:07,520 --> 00:53:11,839
superposition so you get basically an

00:53:09,680 --> 00:53:14,690
even spread across all of them which is

00:53:11,839 --> 00:53:15,950
what which shows that you can you can

00:53:14,690 --> 00:53:17,780
build something that looks like it's

00:53:15,950 --> 00:53:22,520
entangled classically but it's not

00:53:17,780 --> 00:53:26,599
actually entangled and that's that's

00:53:22,520 --> 00:53:28,460
where things get different so that's all

00:53:26,599 --> 00:53:30,589
I had in this notebook I like I said

00:53:28,460 --> 00:53:32,059
before I was trying to build the basic

00:53:30,589 --> 00:53:34,039
building blocks to give people an

00:53:32,059 --> 00:53:37,279
understanding of how quantum algorithms

00:53:34,039 --> 00:53:39,740
are built from these basic things those

00:53:37,279 --> 00:53:45,319
two key concepts of superposition and

00:53:39,740 --> 00:53:46,670
entanglement and they a lot of the

00:53:45,319 --> 00:53:48,859
things in this notebook are built off

00:53:46,670 --> 00:53:52,210
this quiz kit tutorials repository I

00:53:48,859 --> 00:53:55,369
mentioned before and there are some

00:53:52,210 --> 00:53:58,160
other notebooks that continue off where

00:53:55,369 --> 00:54:01,700
this one where I built off this one so

00:53:58,160 --> 00:54:03,529
these three notebooks here this one goes

00:54:01,700 --> 00:54:05,150
more into the concept of phase which I

00:54:03,529 --> 00:54:08,569
just briefly touched on I didn't deep

00:54:05,150 --> 00:54:11,059
dive in on and then the next one is

00:54:08,569 --> 00:54:12,260
testing entanglement so we showed what

00:54:11,059 --> 00:54:15,770
entanglement is and how it's different

00:54:12,260 --> 00:54:17,839
from a classical case this one starts

00:54:15,770 --> 00:54:20,299
probing that to show that it's really

00:54:17,839 --> 00:54:23,329
entangled and show what that correlation

00:54:20,299 --> 00:54:25,490
can do and then quantum teleportation

00:54:23,329 --> 00:54:28,190
and super dense coding starts building

00:54:25,490 --> 00:54:30,740
off that entanglement to do real things

00:54:28,190 --> 00:54:35,230
and it's not teleportation like in Star

00:54:30,740 --> 00:54:35,230
Trek it's it's different and

00:54:37,570 --> 00:54:43,330
and then something I have a cops

00:54:40,570 --> 00:54:46,930
I didn't mean dad I have a colleague who

00:54:43,330 --> 00:54:50,080
gives introductory talks that are and he

00:54:46,930 --> 00:54:51,760
likes to teach through games so in that

00:54:50,080 --> 00:54:53,680
quiz kit tutorials repository there's a

00:54:51,760 --> 00:54:56,410
directory called games and it shows a

00:54:53,680 --> 00:54:58,150
bunch of games built using superposition

00:54:56,410 --> 00:55:00,190
and entanglement so it shows how you can

00:54:58,150 --> 00:55:02,530
actually run these games on the quantum

00:55:00,190 --> 00:55:04,720
computers and play around with them

00:55:02,530 --> 00:55:06,400
one of them's like battleship there are

00:55:04,720 --> 00:55:07,600
other things there are a lot of examples

00:55:06,400 --> 00:55:13,360
there those are fun to play around with

00:55:07,600 --> 00:55:14,680
locally and if this was all too dense

00:55:13,360 --> 00:55:16,600
and you never want to look at this again

00:55:14,680 --> 00:55:18,100
and you you hate me for introducing you

00:55:16,600 --> 00:55:21,190
to the weirdest fears with rotating

00:55:18,100 --> 00:55:24,100
vectors and all of that the quiz kid

00:55:21,190 --> 00:55:26,110
aqua project is what I mentioned earlier

00:55:24,100 --> 00:55:28,210
is designed to give you a Python library

00:55:26,110 --> 00:55:30,010
that abstract away quantum algorithm so

00:55:28,210 --> 00:55:32,650
it does all of the circuit building

00:55:30,010 --> 00:55:34,330
underneath and all of the algorithms

00:55:32,650 --> 00:55:36,520
there ones in there for like Shor's

00:55:34,330 --> 00:55:38,500
algorithm Grover's algorithm Bernstein

00:55:36,520 --> 00:55:40,240
vows irani all the big algorithms and

00:55:38,500 --> 00:55:43,000
there are application specific ones like

00:55:40,240 --> 00:55:45,790
chemistry machine learning there's an

00:55:43,000 --> 00:55:47,260
SVM example in there and it just gives

00:55:45,790 --> 00:55:48,609
you a Python library so you give it data

00:55:47,260 --> 00:55:50,710
in the format it expects and it gives

00:55:48,609 --> 00:55:52,540
you the result on the output and then

00:55:50,710 --> 00:55:55,090
the last one is there was a paper

00:55:52,540 --> 00:55:57,250
published very recently that goes into

00:55:55,090 --> 00:55:59,710
all I was talking about here in more

00:55:57,250 --> 00:56:01,780
detail with the math to back up so shows

00:55:59,710 --> 00:56:04,780
you the rotations the math and math and

00:56:01,780 --> 00:56:07,540
the quiz kit examples and it's a very

00:56:04,780 --> 00:56:09,280
good read and it it's um it builds off

00:56:07,540 --> 00:56:11,410
of where I where I left off and

00:56:09,280 --> 00:56:13,060
continues to go because I had to figure

00:56:11,410 --> 00:56:15,130
out what to talk about in 50 minutes so

00:56:13,060 --> 00:56:16,210
I think I'm out of time but I'm gonna be

00:56:15,130 --> 00:56:18,760
around for the rest of the conference

00:56:16,210 --> 00:56:19,960
and if people have any questions I don't

00:56:18,760 --> 00:56:24,460
know if we have time for questions now

00:56:19,960 --> 00:56:30,749
but I'll be around thank you

00:56:24,460 --> 00:56:30,749
[Applause]

00:56:37,180 --> 00:56:40,359
did you want to just borrow this one

00:56:38,549 --> 00:56:50,589
okay

00:56:40,359 --> 00:56:52,150
thank you much anyone for question do we

00:56:50,589 --> 00:57:06,009
have the probability of having one

00:56:52,150 --> 00:57:10,329
question okay that's that's fine video

00:57:06,009 --> 00:57:13,329
tutorials yes I think there there are

00:57:10,329 --> 00:57:31,299
probably I know there is a team at IBM

00:57:13,329 --> 00:57:33,400
that are okay running in a classic

00:57:31,299 --> 00:57:35,170
quantum computing machine or simulator

00:57:33,400 --> 00:57:39,059
kind of thing but we could not find any

00:57:35,170 --> 00:57:42,700
video tutorial or any reference okay I I

00:57:39,059 --> 00:57:44,019
don't know of any because I myself this

00:57:42,700 --> 00:57:48,910
by looking at the code and all of those

00:57:44,019 --> 00:57:50,079
notebooks but I will ask internally to

00:57:48,910 --> 00:57:52,299
see if there are people working on it

00:57:50,079 --> 00:57:54,309
specifically like the Aqua team that

00:57:52,299 --> 00:57:55,539
algorithms project they have a group of

00:57:54,309 --> 00:57:57,789
people working on machine learning

00:57:55,539 --> 00:58:00,220
applications and the Aqua project their

00:57:57,789 --> 00:58:01,630
documentation lists how you can use some

00:58:00,220 --> 00:58:02,859
of the machine learning algorithms the

00:58:01,630 --> 00:58:05,019
one that I've played around with

00:58:02,859 --> 00:58:06,489
personally as an SVM which is pretty

00:58:05,019 --> 00:58:10,569
simple but it shows how you can do an

00:58:06,489 --> 00:58:11,980
SVM on a quantum computer using aqua and

00:58:10,569 --> 00:58:15,309
that's in the documentation but there's

00:58:11,980 --> 00:58:17,230
no video example I know I can ask

00:58:15,309 --> 00:58:21,039
because that's actually good feedback I

00:58:17,230 --> 00:58:22,299
can have people start work on like video

00:58:21,039 --> 00:58:25,140
tutorials on these things

00:58:22,299 --> 00:58:29,650
okay the quantum computing quantum

00:58:25,140 --> 00:58:33,160
processor q4r q2 that is a IBM processor

00:58:29,650 --> 00:58:35,650
or ibm's processor yeah so those are two

00:58:33,160 --> 00:58:37,359
of I be M's quantum computers there some

00:58:35,650 --> 00:58:38,980
more some are only available to paying

00:58:37,359 --> 00:58:41,079
customers but those three that I showed

00:58:38,980 --> 00:58:42,519
before those are publicly accessible so

00:58:41,079 --> 00:58:43,960
if you follow the instructions in the

00:58:42,519 --> 00:58:45,249
notebook you can sign up for an account

00:58:43,960 --> 00:58:46,599
for free you don't even need you can

00:58:45,249 --> 00:58:48,759
just use your github credentials and

00:58:46,599 --> 00:58:50,800
then once you get that token you can

00:58:48,759 --> 00:58:52,990
submit jobs to it anytime from anywhere

00:58:50,800 --> 00:58:55,150
it's just but we need to lay them but

00:58:52,990 --> 00:58:58,300
yes it's a shared time machine so you

00:58:55,150 --> 00:58:59,620
have to wait in a queue I've been here

00:58:58,300 --> 00:59:01,780
all week and the queues have been very

00:58:59,620 --> 00:59:03,160
short because I think in America where

00:59:01,780 --> 00:59:05,800
most of the people are using them there

00:59:03,160 --> 00:59:07,150
everyone's asleep but um I'm not

00:59:05,800 --> 00:59:09,580
actually sure why the queues are short

00:59:07,150 --> 00:59:11,170
but sometimes the queues can be very

00:59:09,580 --> 00:59:12,970
long sometimes they can be very short

00:59:11,170 --> 00:59:14,710
and you can look at the queue before you

00:59:12,970 --> 00:59:18,250
submit so you can pick which machine you

00:59:14,710 --> 00:59:20,350
run on ok available for the quantum

00:59:18,250 --> 00:59:22,510
computer where is the simulator code

00:59:20,350 --> 00:59:24,010
simulator so there's the quiz kit err

00:59:22,510 --> 00:59:25,780
project which I mentioned at the

00:59:24,010 --> 00:59:27,820
beginning that's the simulator you can

00:59:25,780 --> 00:59:30,970
find that on github in the quiz kid

00:59:27,820 --> 00:59:32,470
organization and it's and there's also

00:59:30,970 --> 00:59:34,540
in quiz get tera there's a Python

00:59:32,470 --> 00:59:39,390
simulator but that's more limited

00:59:34,540 --> 00:59:39,390

YouTube URL: https://www.youtube.com/watch?v=30pG_7sptdo


