Title: Improving the FreeBSD security advisory process by Philip Paeps
Publication date: 2019-03-29
Playlist: FOSSASIA Summit 2019 - Kernel & Platform
Description: 
	15 March 2019 13:30, Theatre Lounge

The FreeBSD Project is an old and well-established open source community. With volunteer developers around the world, handling security advisories in a timely manner while respecting third-party embargoes poses unique challenges. This presentation introduces the FreeBSD security officer team and the processes in place for handling security advisories affecting the FreeBSD open source operating system itself and the third-party components the project distributes.
Captions: 
	00:00:00,000 --> 00:00:06,750
my name is Phillip ops I'm here with the

00:00:02,730 --> 00:00:09,420
freebie of the foundation I think since

00:00:06,750 --> 00:00:11,340
there's a lot of confusion about these

00:00:09,420 --> 00:00:12,900
things I should probably tell you my

00:00:11,340 --> 00:00:14,759
slides are a little bit odd

00:00:12,900 --> 00:00:16,320
about the three things that are called

00:00:14,759 --> 00:00:17,580
FreeBSD do you want me to be there or

00:00:16,320 --> 00:00:19,859
here you'd be elsewhere

00:00:17,580 --> 00:00:24,090
there we go I'll stay here three beers

00:00:19,859 --> 00:00:27,449
these three things the FreeBSD by itself

00:00:24,090 --> 00:00:30,510
is a unix-like operating system that's

00:00:27,449 --> 00:00:33,989
been around for quite a while we

00:00:30,510 --> 00:00:36,390
originally derived from patches made by

00:00:33,989 --> 00:00:40,230
the University of Berkeley in California

00:00:36,390 --> 00:00:41,610
in the 1970s and these patches have been

00:00:40,230 --> 00:00:44,850
developed continuously throughout the

00:00:41,610 --> 00:00:47,820
70s the 80s and then in the 90s there

00:00:44,850 --> 00:00:51,989
was a you know spirited exchange of

00:00:47,820 --> 00:00:54,600
views and two different projects were

00:00:51,989 --> 00:00:56,520
found at the net bsd project on one hand

00:00:54,600 --> 00:01:01,079
they were first and then the FreeBSD

00:00:56,520 --> 00:01:02,969
project started in 1993 so the freebie

00:01:01,079 --> 00:01:05,150
is the operating system is an

00:01:02,969 --> 00:01:08,070
open-source operating system with its

00:01:05,150 --> 00:01:11,189
source code history going way back to

00:01:08,070 --> 00:01:14,630
the 70s the FreeBSD project is an open

00:01:11,189 --> 00:01:19,470
source community that was started in

00:01:14,630 --> 00:01:23,759
1993 and we currently have a few

00:01:19,470 --> 00:01:25,920
hundreds committers and several thousand

00:01:23,759 --> 00:01:28,470
contributors from all over the world we

00:01:25,920 --> 00:01:29,909
interact on mailing lists and we produce

00:01:28,470 --> 00:01:32,579
this operating system we run our own

00:01:29,909 --> 00:01:35,130
revision control system and you know you

00:01:32,579 --> 00:01:36,720
can go and run FreeBSD on anything you

00:01:35,130 --> 00:01:38,100
like traditionally people run at all

00:01:36,720 --> 00:01:40,110
servers but there's nothing wrong with

00:01:38,100 --> 00:01:42,479
running it on your laptop as well if if

00:01:40,110 --> 00:01:45,119
that sort of thing rocks your boat and

00:01:42,479 --> 00:01:47,729
finally the FreeBSD Foundation the third

00:01:45,119 --> 00:01:50,700
of our things called FreeBSD is a

00:01:47,729 --> 00:01:55,259
nonprofit entity which was registered in

00:01:50,700 --> 00:01:57,479
in the u.s. in 2001 and the FreeBSD

00:01:55,259 --> 00:02:00,119
Foundation is a charity you give us

00:01:57,479 --> 00:02:04,740
money and you trust us to spend it well

00:02:00,119 --> 00:02:08,539
and the foundation supports the FreeBSD

00:02:04,740 --> 00:02:11,009
projects by providing it a legal

00:02:08,539 --> 00:02:12,880
personality to engage in non-disclosure

00:02:11,009 --> 00:02:15,130
agreements and things like that

00:02:12,880 --> 00:02:18,010
and we support the previous the project

00:02:15,130 --> 00:02:19,960
developments by owning hardware and

00:02:18,010 --> 00:02:21,700
resources and things like that the

00:02:19,960 --> 00:02:25,030
FreeBSD Foundation also pays for my

00:02:21,700 --> 00:02:28,450
travel to events like this I'm a

00:02:25,030 --> 00:02:32,310
director of that organization so enough

00:02:28,450 --> 00:02:32,310
about that who uses the 3 va0

00:02:33,660 --> 00:02:38,230
presumably or keep talking to me but

00:02:36,910 --> 00:02:39,910
there's a couple of or there are several

00:02:38,230 --> 00:02:41,200
large organizations that use phoebe is

00:02:39,910 --> 00:02:43,840
the units and it's probably impossible

00:02:41,200 --> 00:02:45,280
to use the internet or a corporate

00:02:43,840 --> 00:02:47,400
network for any length of time without

00:02:45,280 --> 00:02:50,140
using freebsd in some way shape or form

00:02:47,400 --> 00:02:51,760
so there are several companies that use

00:02:50,140 --> 00:02:54,520
freebsd by itself

00:02:51,760 --> 00:02:56,640
whatsapp is a good example of that and

00:02:54,520 --> 00:03:00,850
Netflix are a good example of that they

00:02:56,640 --> 00:03:02,740
they take the whole operating system and

00:03:00,850 --> 00:03:07,240
they run systems administration and they

00:03:02,740 --> 00:03:10,690
buy they pay for people to to run

00:03:07,240 --> 00:03:13,660
freebsd servers huge numbers of them but

00:03:10,690 --> 00:03:14,050
the majority of the companies on this

00:03:13,660 --> 00:03:16,060
list

00:03:14,050 --> 00:03:18,550
don't run 3 beers these a whole they

00:03:16,060 --> 00:03:20,020
take FreeBSD and then they fork it into

00:03:18,550 --> 00:03:23,560
their own products which previously

00:03:20,020 --> 00:03:26,110
obviously allows so juniper is my usual

00:03:23,560 --> 00:03:28,960
example of that every every juniper

00:03:26,110 --> 00:03:30,070
Rueter or every juniper I think your

00:03:28,960 --> 00:03:32,020
switches as well

00:03:30,070 --> 00:03:33,550
they run something called Juno's which

00:03:32,020 --> 00:03:34,900
is a control plane for all of their

00:03:33,550 --> 00:03:37,300
hardware stuff and that's actually just

00:03:34,900 --> 00:03:40,780
FreeBSD which has been repackaged to run

00:03:37,300 --> 00:03:43,780
on whatever tiny GPUs are in these boxes

00:03:40,780 --> 00:03:46,860
NetApp does something quite similar net

00:03:43,780 --> 00:03:49,870
hop builds gigantic storage appliances

00:03:46,860 --> 00:03:52,000
with all sorts of exciting filesystem

00:03:49,870 --> 00:03:54,520
features which are not available in open

00:03:52,000 --> 00:03:56,350
source form or in any other product and

00:03:54,520 --> 00:03:57,970
they've also taken FreeBSD and they've

00:03:56,350 --> 00:04:00,220
thrown away most of the operating system

00:03:57,970 --> 00:04:02,530
and built something around that they

00:04:00,220 --> 00:04:04,300
call on top but it still fundamentally

00:04:02,530 --> 00:04:05,800
3b is the Apple has done something like

00:04:04,300 --> 00:04:07,600
that as well they've taken a freebie is

00:04:05,800 --> 00:04:09,910
the network stacked a lot of security

00:04:07,600 --> 00:04:12,610
features and they've merged it with

00:04:09,910 --> 00:04:14,170
other secret sauce and they call it you

00:04:12,610 --> 00:04:16,359
know they call it my course or iOS and

00:04:14,170 --> 00:04:19,030
it runs on your phone and it runs on

00:04:16,359 --> 00:04:21,880
your on your laptop and so all of these

00:04:19,030 --> 00:04:23,440
companies run FreeBSD maybe not

00:04:21,880 --> 00:04:26,020
necessarily the whole operating system

00:04:23,440 --> 00:04:28,509
but huge chunks of it

00:04:26,020 --> 00:04:31,150
so why do these people run FreeBSD well

00:04:28,509 --> 00:04:33,909
for one thing we are a large friendly

00:04:31,150 --> 00:04:36,810
and professional community myself

00:04:33,909 --> 00:04:40,840
included he says modestly we have many

00:04:36,810 --> 00:04:43,449
active very active contributors many of

00:04:40,840 --> 00:04:46,810
our contributors have been contributing

00:04:43,449 --> 00:04:50,020
for FreeBSD for a very long time so we

00:04:46,810 --> 00:04:51,879
have previously developers who've been

00:04:50,020 --> 00:04:54,310
working on FreeBSD for more than 20

00:04:51,879 --> 00:04:56,469
years I've been working on FreeBSD for

00:04:54,310 --> 00:05:00,250
15 years now I got my freebsd commitment

00:04:56,469 --> 00:05:02,830
in 2003 so that's actually 16 years I'm

00:05:00,250 --> 00:05:06,550
older than I think we have people who've

00:05:02,830 --> 00:05:09,669
been working on BSD since before it was

00:05:06,550 --> 00:05:13,270
free BSD so it's very easy for companies

00:05:09,669 --> 00:05:16,469
of that size to go in and talk to our

00:05:13,270 --> 00:05:19,120
community and work with us other things

00:05:16,469 --> 00:05:21,069
people like about FreeBSD is that we

00:05:19,120 --> 00:05:23,860
have mentoring built into our projects

00:05:21,069 --> 00:05:25,719
culture and our processes so when when

00:05:23,860 --> 00:05:28,270
you know when you show up on our mailing

00:05:25,719 --> 00:05:29,740
list with patches we try to rope you in

00:05:28,270 --> 00:05:31,870
and we try to mentor you into our

00:05:29,740 --> 00:05:33,190
processes and we try we try very hard

00:05:31,870 --> 00:05:35,310
for people to become freely a-z

00:05:33,190 --> 00:05:37,930
developers we like to make this easy

00:05:35,310 --> 00:05:40,479
people also like the fact that freebsd

00:05:37,930 --> 00:05:43,479
has documentation I like to say that you

00:05:40,479 --> 00:05:45,310
can go and live in a cave or a mountain

00:05:43,479 --> 00:05:46,900
or on a small island in the Pacific

00:05:45,310 --> 00:05:49,060
Ocean and you can get work done on

00:05:46,900 --> 00:05:51,039
FreeBSD without having an internet

00:05:49,060 --> 00:05:54,099
connection if you want to use Linux to

00:05:51,039 --> 00:05:55,629
use an arbitrary example you cannot use

00:05:54,099 --> 00:05:57,430
Linux without an internet connection

00:05:55,629 --> 00:05:59,610
access to Google and Stack Exchange and

00:05:57,430 --> 00:06:02,259
other repositories is terrible advice

00:05:59,610 --> 00:06:03,759
FreeBSD has documentation and we install

00:06:02,259 --> 00:06:05,949
the documentation with the operating

00:06:03,759 --> 00:06:07,930
system so you can be productive all the

00:06:05,949 --> 00:06:09,810
FreeBSD system without having an

00:06:07,930 --> 00:06:13,270
internet connection without having to

00:06:09,810 --> 00:06:16,449
engage with with all sorts of websites

00:06:13,270 --> 00:06:18,879
to get get the data it means finally

00:06:16,449 --> 00:06:20,800
FreeBSD is very friendly to business

00:06:18,879 --> 00:06:22,870
endeavors we have a friendly to clause

00:06:20,800 --> 00:06:24,969
BSD license we don't try to control what

00:06:22,870 --> 00:06:27,430
you do with your own source codes we

00:06:24,969 --> 00:06:30,310
rewrite the operating system we are done

00:06:27,430 --> 00:06:32,199
with it now if you like it you can use

00:06:30,310 --> 00:06:34,449
it and you can use it in any way you

00:06:32,199 --> 00:06:38,360
like if it blows up in your face that's

00:06:34,449 --> 00:06:40,490
cool you get to keep the pieces but

00:06:38,360 --> 00:06:42,379
you know we like we like people to

00:06:40,490 --> 00:06:44,300
submit patches and we were friendly to

00:06:42,379 --> 00:06:45,949
patches but if people don't want to send

00:06:44,300 --> 00:06:47,599
patches that that's cool too we don't

00:06:45,949 --> 00:06:49,550
you know we make we place no

00:06:47,599 --> 00:06:52,280
restrictions on what you do with your

00:06:49,550 --> 00:06:54,710
own codes if you want to use FreeBSD and

00:06:52,280 --> 00:06:56,870
and derive something from it and change

00:06:54,710 --> 00:07:00,439
it completely that is entirely your look

00:06:56,870 --> 00:07:02,090
at and that's cool so that's where we

00:07:00,439 --> 00:07:03,650
are good at we're very good at producing

00:07:02,090 --> 00:07:05,479
an operating system we're very good at

00:07:03,650 --> 00:07:07,400
growing our community and we're very

00:07:05,479 --> 00:07:08,949
good at documenting what we do and

00:07:07,400 --> 00:07:11,389
making it useful to people

00:07:08,949 --> 00:07:14,270
unfortunately historically we have not

00:07:11,389 --> 00:07:17,330
been very good at handling security

00:07:14,270 --> 00:07:20,180
advisories so we're you know in a timely

00:07:17,330 --> 00:07:21,949
way we do fix we've always fixed our

00:07:20,180 --> 00:07:23,780
security bugs we've always owned up to

00:07:21,949 --> 00:07:25,940
our security processes we've always

00:07:23,780 --> 00:07:27,919
practiced responsible disclosure but

00:07:25,940 --> 00:07:32,569
historically at some times taken a very

00:07:27,919 --> 00:07:35,240
long time for FreeBSD to you to release

00:07:32,569 --> 00:07:36,860
patches and to communicate them to the

00:07:35,240 --> 00:07:40,729
community and this is a particular

00:07:36,860 --> 00:07:42,680
problem given the fact that most FreeBSD

00:07:40,729 --> 00:07:44,750
users are unaware that they are using

00:07:42,680 --> 00:07:47,539
FreeBSD you know you you you have a

00:07:44,750 --> 00:07:48,979
Juno's Rooter you don't know that you're

00:07:47,539 --> 00:07:52,340
running previously you don't care

00:07:48,979 --> 00:07:54,589
juniper obviously cares and/or you're

00:07:52,340 --> 00:07:56,479
running you're running iOS on your phone

00:07:54,589 --> 00:07:58,339
you don't know that you're running huge

00:07:56,479 --> 00:08:01,490
chunks of FreeBSD and you shouldn't have

00:07:58,339 --> 00:08:03,259
to care Apple obviously cares but

00:08:01,490 --> 00:08:06,650
historically we've not been very good at

00:08:03,259 --> 00:08:08,509
the seminary security information in a

00:08:06,650 --> 00:08:10,159
timely manner there's a couple of

00:08:08,509 --> 00:08:12,349
reasons for this the main reason for

00:08:10,159 --> 00:08:15,080
this is the previously is a large and

00:08:12,349 --> 00:08:17,389
diverse codebase so whereas many open

00:08:15,080 --> 00:08:22,039
source projects focus on one tiny

00:08:17,389 --> 00:08:26,389
component like a kernel or security

00:08:22,039 --> 00:08:28,729
stack like SSL or or some rochelle like

00:08:26,389 --> 00:08:30,259
like bash the FreeBSD project has all of

00:08:28,729 --> 00:08:32,599
those things so the previous the kernel

00:08:30,259 --> 00:08:34,219
by itself is already a fairly gigantic

00:08:32,599 --> 00:08:37,099
beast the FreeBSD kernel is a network

00:08:34,219 --> 00:08:39,909
stack is large stack huge load of device

00:08:37,099 --> 00:08:42,680
drivers and a virtual memory system and

00:08:39,909 --> 00:08:44,570
someone who works on the network stack

00:08:42,680 --> 00:08:47,089
is not necessarily familiar with the

00:08:44,570 --> 00:08:49,970
storage stack so if some if there's a

00:08:47,089 --> 00:08:51,830
vulnerability in the storage subsystem

00:08:49,970 --> 00:08:53,839
and networks like develop

00:08:51,830 --> 00:08:55,820
is not going to be the person who wants

00:08:53,839 --> 00:08:57,890
to work on fixing this or will not

00:08:55,820 --> 00:08:59,720
necessarily be aware of this the virtual

00:08:57,890 --> 00:09:01,820
memory subsystems there's a handful of

00:08:59,720 --> 00:09:03,430
people or several handfuls of people who

00:09:01,820 --> 00:09:06,230
understand how this stuff works

00:09:03,430 --> 00:09:08,810
and they're very keen on fixing problems

00:09:06,230 --> 00:09:10,370
in the VM system but they don't care

00:09:08,810 --> 00:09:13,490
well they care but they're not familiar

00:09:10,370 --> 00:09:17,000
with device drivers or storage to go and

00:09:13,490 --> 00:09:18,290
fix security problems they're also you

00:09:17,000 --> 00:09:21,709
know when when a security vulnerability

00:09:18,290 --> 00:09:23,300
turns up it's usually fairly sudden and

00:09:21,709 --> 00:09:24,230
then you know you need to get the

00:09:23,300 --> 00:09:26,209
developers we're an open source

00:09:24,230 --> 00:09:28,100
community we're made of all of Tears you

00:09:26,209 --> 00:09:30,380
need to get the volunteers to focus on

00:09:28,100 --> 00:09:32,600
on the problem and that's just a kernel

00:09:30,380 --> 00:09:35,390
so in user lands 3 B is the operating

00:09:32,600 --> 00:09:39,680
system has a whole lot of libraries and

00:09:35,390 --> 00:09:41,630
applications in the Linux world or in in

00:09:39,680 --> 00:09:43,149
other open-source operating systems all

00:09:41,630 --> 00:09:46,550
of these things are maintained by

00:09:43,149 --> 00:09:47,000
separate groups of people in the freebsd

00:09:46,550 --> 00:09:49,820
world

00:09:47,000 --> 00:09:52,180
these things are maintained by us and

00:09:49,820 --> 00:09:54,829
again the same the same problem is true

00:09:52,180 --> 00:09:56,390
someone a kernel developer me for

00:09:54,829 --> 00:09:59,240
instance I'm a kernel developer I mostly

00:09:56,390 --> 00:10:02,300
do device drivers if you tell me is that

00:09:59,240 --> 00:10:04,010
we have a vulnerability in our shell I

00:10:02,300 --> 00:10:05,560
will say well that's that's nice

00:10:04,010 --> 00:10:07,790
someone should go and fix it that

00:10:05,560 --> 00:10:10,610
someone should not be me

00:10:07,790 --> 00:10:12,230
and that sort of problem appears all

00:10:10,610 --> 00:10:14,570
over the stack you have a limited number

00:10:12,230 --> 00:10:16,910
of people we have a limited number of

00:10:14,570 --> 00:10:19,240
developers and our developers while

00:10:16,910 --> 00:10:22,660
they're by and large they're generalists

00:10:19,240 --> 00:10:24,829
they're not really in on solving

00:10:22,660 --> 00:10:26,690
security vulnerabilities in parts of the

00:10:24,829 --> 00:10:28,130
stock they're not familiar with so the

00:10:26,690 --> 00:10:30,410
left side of your screen that's code we

00:10:28,130 --> 00:10:33,200
produce in addition to the code we

00:10:30,410 --> 00:10:35,449
produce we also suck in code from all

00:10:33,200 --> 00:10:36,800
sorts of other projects open SSL of

00:10:35,449 --> 00:10:41,600
course is the the elephant in the room

00:10:36,800 --> 00:10:44,180
or the ADB big green gorilla losing puss

00:10:41,600 --> 00:10:46,310
all over all over the grounds we

00:10:44,180 --> 00:10:46,579
distribute open SSL just like everyone

00:10:46,310 --> 00:10:48,800
else

00:10:46,579 --> 00:10:51,980
distributes open SSL when open SSL

00:10:48,800 --> 00:10:54,529
springs a leak every other week we have

00:10:51,980 --> 00:10:56,510
to fix it in freebsd just as every

00:10:54,529 --> 00:10:57,920
living distributor just as apple just to

00:10:56,510 --> 00:10:59,570
say well apple not anymore because

00:10:57,920 --> 00:11:02,510
they've got core crypto but just as

00:10:59,570 --> 00:11:04,240
everyone else who uses open SSL has to

00:11:02,510 --> 00:11:06,369
patch open SSL we have to patch it

00:11:04,240 --> 00:11:08,740
you and we need to tell the world that

00:11:06,369 --> 00:11:10,300
we've touched it preferably not before

00:11:08,740 --> 00:11:12,610
everyone else is patched as or knows

00:11:10,300 --> 00:11:15,459
that it's even vulnerable the same thing

00:11:12,610 --> 00:11:18,910
applies to OpenSSH when OpenSSH breaks

00:11:15,459 --> 00:11:20,550
which is comparatively rarely we need to

00:11:18,910 --> 00:11:23,709
coordinate with other open-source

00:11:20,550 --> 00:11:25,600
projects who also distribute OpenSSH you

00:11:23,709 --> 00:11:27,970
know we need to responsibly disclose the

00:11:25,600 --> 00:11:29,980
vulnerability and there's a whole bunch

00:11:27,970 --> 00:11:31,629
of other components in freebsd lights up

00:11:29,980 --> 00:11:33,939
the the five i've listed are just the

00:11:31,629 --> 00:11:36,160
ones that that are most likely to affect

00:11:33,939 --> 00:11:37,899
people you'll see unbound on that list

00:11:36,160 --> 00:11:41,619
we used to have binds we no longer have

00:11:37,899 --> 00:11:44,379
minds but bind was bind was the classic

00:11:41,619 --> 00:11:47,889
example of three b is the always being

00:11:44,379 --> 00:11:49,959
late with patches binds broke roughly

00:11:47,889 --> 00:11:51,550
every week in the 90s and early 2000s

00:11:49,959 --> 00:11:53,319
and three b is he was always the last

00:11:51,550 --> 00:11:56,290
operating system to release a security

00:11:53,319 --> 00:11:58,089
advisory because the security team does

00:11:56,290 --> 00:11:59,709
not have bind developers and you know

00:11:58,089 --> 00:12:01,899
we're not terribly keen on fixing bind

00:11:59,709 --> 00:12:03,459
runner abilities and that's just the

00:12:01,899 --> 00:12:04,839
operating system components so we've got

00:12:03,459 --> 00:12:06,879
a kernel we've got user landon we've got

00:12:04,839 --> 00:12:09,429
third-party bits which we distribute and

00:12:06,879 --> 00:12:11,619
then finally the freebsd operating

00:12:09,429 --> 00:12:14,529
system also has a ports and package

00:12:11,619 --> 00:12:16,389
system which at last counts has thirty

00:12:14,529 --> 00:12:18,399
five thousand thirty third-party

00:12:16,389 --> 00:12:20,259
applications each of which will be

00:12:18,399 --> 00:12:22,540
vulnerable at some points right that's

00:12:20,259 --> 00:12:27,179
inevitable every line of code you write

00:12:22,540 --> 00:12:29,769
has at least one bug in it so how do we

00:12:27,179 --> 00:12:31,329
how do we deal with these

00:12:29,769 --> 00:12:33,429
vulnerabilities how do we deal with

00:12:31,329 --> 00:12:36,519
disclosing vulnerability information and

00:12:33,429 --> 00:12:40,600
sending patches well again it depends

00:12:36,519 --> 00:12:41,019
the easiest the easiest kind of problems

00:12:40,600 --> 00:12:44,259
to fix

00:12:41,019 --> 00:12:46,749
are the ones where only the FreeBSD

00:12:44,259 --> 00:12:49,360
project is effective so that the left

00:12:46,749 --> 00:12:50,619
side of my previous slides these kinds

00:12:49,360 --> 00:12:52,809
of vulnerabilities are easy

00:12:50,619 --> 00:12:55,689
there's no non-disclosure agreement

00:12:52,809 --> 00:12:57,699
there's no explicit embargo FreeBSD is

00:12:55,689 --> 00:13:00,100
the only operating system broke it's our

00:12:57,699 --> 00:13:03,699
bug we are responsible we need to fix it

00:13:00,100 --> 00:13:06,399
and we can fix it on basically we can

00:13:03,699 --> 00:13:08,949
fix it on our own time accepts you know

00:13:06,399 --> 00:13:11,799
if there's a zero day sort of thing then

00:13:08,949 --> 00:13:13,209
we don't have any time but we are we're

00:13:11,799 --> 00:13:15,879
in charge of our own time management

00:13:13,209 --> 00:13:17,290
here maybe we might need to coordinate

00:13:15,879 --> 00:13:19,540
with net bsd or

00:13:17,290 --> 00:13:21,670
or OpenBSD but their friends and family

00:13:19,540 --> 00:13:23,650
to be as the projects are very very good

00:13:21,670 --> 00:13:25,240
friends and when when something affects

00:13:23,650 --> 00:13:28,440
three beers the OpenBSD and that be as

00:13:25,240 --> 00:13:30,610
the it's really easy to coordinate

00:13:28,440 --> 00:13:32,290
another kind of vulnerability that's

00:13:30,610 --> 00:13:35,050
nice is when there's no major risk of

00:13:32,290 --> 00:13:38,800
exposure right so if if it's a fairly

00:13:35,050 --> 00:13:40,210
subtle sort of vulnerability we can we

00:13:38,800 --> 00:13:40,720
can usually take a little bit more time

00:13:40,210 --> 00:13:45,130
about it

00:13:40,720 --> 00:13:49,480
examples of that were to what advisory

00:13:45,130 --> 00:13:51,910
last year in April last year we broke VT

00:13:49,480 --> 00:13:53,230
which is our our system console I can't

00:13:51,910 --> 00:13:55,420
remember what the bug was but it was

00:13:53,230 --> 00:13:57,160
it's a freebie is the only component no

00:13:55,420 --> 00:13:59,650
one else uses it we didn't even have to

00:13:57,160 --> 00:14:01,780
coordinate with net bsd or open BSD we

00:13:59,650 --> 00:14:05,410
broke it we fix it we released the

00:14:01,780 --> 00:14:08,080
security advisory and we were done kale

00:14:05,410 --> 00:14:09,700
these stats I think might have also

00:14:08,080 --> 00:14:13,840
affected a net bsd I don't remember that

00:14:09,700 --> 00:14:16,690
was 2017 same thing we just fixed a bug

00:14:13,840 --> 00:14:18,610
we we submitted we wrote a security

00:14:16,690 --> 00:14:21,400
advisory mailed it out everything good

00:14:18,610 --> 00:14:23,470
no problem much more complicated than

00:14:21,400 --> 00:14:25,840
three B is the only vulnerabilities are

00:14:23,470 --> 00:14:28,000
vulnerabilities that effects multiple

00:14:25,840 --> 00:14:30,310
operating systems or multiple vendors in

00:14:28,000 --> 00:14:31,840
that case there's usually some kind of

00:14:30,310 --> 00:14:33,730
non-disclosure agreements and there's

00:14:31,840 --> 00:14:37,420
usually some kind of explicit embargo

00:14:33,730 --> 00:14:39,430
where every vendor of this p or every

00:14:37,420 --> 00:14:41,110
distributor of this piece of code needs

00:14:39,430 --> 00:14:43,240
to coordinate and release their patches

00:14:41,110 --> 00:14:45,280
at the same time so that everyone can

00:14:43,240 --> 00:14:47,470
update everyone can be safe and there's

00:14:45,280 --> 00:14:50,710
no windows where the vulnerability is

00:14:47,470 --> 00:14:53,320
known and then it takes several weeks

00:14:50,710 --> 00:14:56,050
before freebsd is patched or some other

00:14:53,320 --> 00:14:58,450
thing is patched the you sponsor is

00:14:56,050 --> 00:15:00,880
usually coordinated either by some kind

00:14:58,450 --> 00:15:03,190
of asserts Coordination Center or by

00:15:00,880 --> 00:15:05,830
some private party who discovers the

00:15:03,190 --> 00:15:08,710
vulnerability your security lab or or an

00:15:05,830 --> 00:15:12,010
individual developer and this kind of

00:15:08,710 --> 00:15:13,720
security response requires a limited

00:15:12,010 --> 00:15:15,310
disclosure so we need to we can't just

00:15:13,720 --> 00:15:16,900
talk about these vulnerabilities are our

00:15:15,310 --> 00:15:20,350
public mailing lists their archives that

00:15:16,900 --> 00:15:22,360
anyone can go and read them and we need

00:15:20,350 --> 00:15:25,720
to contain the risk of exposure because

00:15:22,360 --> 00:15:27,460
not only will our users be affected by

00:15:25,720 --> 00:15:29,860
disclosing this vulnerability users of

00:15:27,460 --> 00:15:32,080
other operating systems will also be

00:15:29,860 --> 00:15:34,150
effective and good examples of this or

00:15:32,080 --> 00:15:36,760
terrible terrible examples of this are

00:15:34,150 --> 00:15:39,370
last year's fun in game with speculative

00:15:36,760 --> 00:15:43,240
execution which broke every computer on

00:15:39,370 --> 00:15:47,290
earth and then the debug registers which

00:15:43,240 --> 00:15:50,680
is slightly less terrible buglets that

00:15:47,290 --> 00:15:53,680
came up later in the year so what's the

00:15:50,680 --> 00:15:55,090
freebie is the security officer been you

00:15:53,680 --> 00:15:56,470
know how does the three be as a security

00:15:55,090 --> 00:15:59,710
officer worked all three be as the

00:15:56,470 --> 00:16:04,540
security officer is a team a team of

00:15:59,710 --> 00:16:07,270
individuals they have a huge number of

00:16:04,540 --> 00:16:10,450
tasks right they they need to resolve

00:16:07,270 --> 00:16:13,150
all disputes involving security that by

00:16:10,450 --> 00:16:16,420
itself is a lot of work they need to fix

00:16:13,150 --> 00:16:19,720
fix bugs in in previously your patch

00:16:16,420 --> 00:16:21,490
patch bugs the previously security team

00:16:19,720 --> 00:16:22,960
needs to write the security advisory so

00:16:21,490 --> 00:16:25,030
it was all the security team for many

00:16:22,960 --> 00:16:28,090
years and writing security advisories is

00:16:25,030 --> 00:16:29,890
a lot of fun tasks and we need to

00:16:28,090 --> 00:16:32,620
respond to email pretty much in real

00:16:29,890 --> 00:16:34,120
time so if someone if someone writes a

00:16:32,620 --> 00:16:36,550
bug report saying you know something

00:16:34,120 --> 00:16:38,710
something has sprung a security leak

00:16:36,550 --> 00:16:41,590
the security officer needs to reply to

00:16:38,710 --> 00:16:43,120
this fairly quickly meanwhile while

00:16:41,590 --> 00:16:44,770
there's nothing you know well there's

00:16:43,120 --> 00:16:46,630
nothing on fire

00:16:44,770 --> 00:16:48,550
of much source code as possible still

00:16:46,630 --> 00:16:50,830
needs to be audited and we should

00:16:48,550 --> 00:16:52,600
monitor all of the appropriate channels

00:16:50,830 --> 00:16:54,310
for any vulnerabilities that are being

00:16:52,600 --> 00:16:56,470
disclosed and finally the security

00:16:54,310 --> 00:17:01,420
officer is also the only person with

00:16:56,470 --> 00:17:03,100
access to the PGP key so if you know you

00:17:01,420 --> 00:17:05,830
come just distribute this PGP key to

00:17:03,100 --> 00:17:08,470
everyone did the number of people who

00:17:05,830 --> 00:17:09,670
have this key is limited so it's a small

00:17:08,470 --> 00:17:12,130
group of people that needs to do a lot

00:17:09,670 --> 00:17:13,570
of things so that's an extremely broad

00:17:12,130 --> 00:17:14,020
mandate and there's a lot of hurry up

00:17:13,570 --> 00:17:16,839
and wait

00:17:14,020 --> 00:17:19,330
so you sit there everything is on fire

00:17:16,839 --> 00:17:21,130
and and then you fix the bug and then

00:17:19,330 --> 00:17:23,680
you just do nothing for a while and then

00:17:21,130 --> 00:17:25,780
everything is quiet and you know you

00:17:23,680 --> 00:17:27,220
just carry on with life and that's not

00:17:25,780 --> 00:17:30,070
very conducive to a friendly working

00:17:27,220 --> 00:17:31,180
environment also there's a very high

00:17:30,070 --> 00:17:33,580
level of technical knowledge that

00:17:31,180 --> 00:17:35,230
required to all sorts of things so you

00:17:33,580 --> 00:17:36,910
know the vulnerabilities are in the

00:17:35,230 --> 00:17:38,770
kernel and libraries applications

00:17:36,910 --> 00:17:40,750
third-party things it's all sorts of

00:17:38,770 --> 00:17:42,160
things so as a result of this you know

00:17:40,750 --> 00:17:43,190
security officers note lasts for very

00:17:42,160 --> 00:17:45,830
long

00:17:43,190 --> 00:17:49,070
they they they are security officers

00:17:45,830 --> 00:17:51,980
they're very active and very good but

00:17:49,070 --> 00:17:54,820
they burn out inevitably they just they

00:17:51,980 --> 00:17:57,140
lose interest and and they go away

00:17:54,820 --> 00:18:00,920
alternatively you have very enthusiastic

00:17:57,140 --> 00:18:03,680
volunteers who unfortunately do not have

00:18:00,920 --> 00:18:06,380
the level of experience or knowledge to

00:18:03,680 --> 00:18:08,180
be our security officer so this has been

00:18:06,380 --> 00:18:11,420
a problem in the FreeBSD project for

00:18:08,180 --> 00:18:12,620
well ever since our inception so how are

00:18:11,420 --> 00:18:14,540
we fixing it well we're fixing it with

00:18:12,620 --> 00:18:18,200
new blood we've we've looked at our

00:18:14,540 --> 00:18:20,000
security team and we've we've decided to

00:18:18,200 --> 00:18:23,230
get rid of it and replace it with a new

00:18:20,000 --> 00:18:26,630
one and which lets the technical

00:18:23,230 --> 00:18:30,620
resources from the administrative and

00:18:26,630 --> 00:18:32,090
vulnerability response requirements so

00:18:30,620 --> 00:18:34,040
that the people who reply to the email

00:18:32,090 --> 00:18:36,320
are not necessarily the people who fix

00:18:34,040 --> 00:18:38,420
the bugs so we have a security officer

00:18:36,320 --> 00:18:40,490
secretary now whose job it is to

00:18:38,420 --> 00:18:42,470
basically reply to email that arrives at

00:18:40,490 --> 00:18:43,930
the security officer address I said at

00:18:42,470 --> 00:18:46,250
least if you have submitted a

00:18:43,930 --> 00:18:48,500
vulnerability report it is at least

00:18:46,250 --> 00:18:49,670
responded to in a timely manner and then

00:18:48,500 --> 00:18:52,280
the security officer goes and

00:18:49,670 --> 00:18:54,440
coordinates the technical resources to

00:18:52,280 --> 00:18:56,300
actually fix the bug so we instead of

00:18:54,440 --> 00:18:58,460
having a security team which is a

00:18:56,300 --> 00:19:02,600
mailing list with a lot of hurry up and

00:18:58,460 --> 00:19:04,700
wait we have a very small security

00:19:02,600 --> 00:19:06,440
officer team which essentially replies

00:19:04,700 --> 00:19:10,310
to the emails and then recruits

00:19:06,440 --> 00:19:12,290
technical resources as required the

00:19:10,310 --> 00:19:15,020
FreeBSD foundation is also involved in a

00:19:12,290 --> 00:19:17,300
security team now the FreeBSD foundation

00:19:15,020 --> 00:19:20,780
can sign non-disclosure agreements we

00:19:17,300 --> 00:19:22,310
are a legal entity so the FreeBSD

00:19:20,780 --> 00:19:24,670
foundation can sign NDA's and this

00:19:22,310 --> 00:19:27,320
allows it just allows us to survive

00:19:24,670 --> 00:19:29,360
security officer churn our current

00:19:27,320 --> 00:19:31,190
security officer goes away and we get a

00:19:29,360 --> 00:19:33,290
new one at least our non-disclosure

00:19:31,190 --> 00:19:35,660
agreements with large vendors stay in

00:19:33,290 --> 00:19:38,030
place and we can continue to work with

00:19:35,660 --> 00:19:40,040
these people the FreeBSD Foundation also

00:19:38,030 --> 00:19:41,810
has money we can always use more money

00:19:40,040 --> 00:19:43,730
if you have too much money or if your

00:19:41,810 --> 00:19:45,200
organization has too much money the

00:19:43,730 --> 00:19:47,270
FreeBSD Foundation is a charity and

00:19:45,200 --> 00:19:50,090
we'll be more than happy to relieve you

00:19:47,270 --> 00:19:52,700
of this problem but we use some of this

00:19:50,090 --> 00:19:54,380
money to pay for the definitely security

00:19:52,700 --> 00:19:57,200
officers times there are

00:19:54,380 --> 00:19:59,450
our CTO or our technical manager and

00:19:57,200 --> 00:20:02,360
FreeBSD Foundation has some of his time

00:19:59,450 --> 00:20:04,130
earmarked for security work we also pay

00:20:02,360 --> 00:20:05,780
for the security officers travel we feel

00:20:04,130 --> 00:20:08,360
that he should be attending more

00:20:05,780 --> 00:20:11,360
conferences at certain events and such

00:20:08,360 --> 00:20:13,580
and we pay for one full-time employee to

00:20:11,360 --> 00:20:16,730
basically be there when things catch

00:20:13,580 --> 00:20:19,280
fire so we have one full-time developer

00:20:16,730 --> 00:20:20,990
who is a very strong generalist and

00:20:19,280 --> 00:20:23,750
works on all all parts of the operating

00:20:20,990 --> 00:20:25,490
system and we just pay for him and when

00:20:23,750 --> 00:20:27,680
when something inevitably catches fire

00:20:25,490 --> 00:20:31,730
anywhere in the stack he just homes off

00:20:27,680 --> 00:20:33,980
fixes it and then it helps the security

00:20:31,730 --> 00:20:37,880
team write the advisory and gets the

00:20:33,980 --> 00:20:39,430
response out in new course and this has

00:20:37,880 --> 00:20:43,420
worked very well for us it's new model

00:20:39,430 --> 00:20:43,420
we got it just in time

00:20:43,490 --> 00:20:48,230
I got this wonderful case study the

00:20:46,070 --> 00:20:50,420
debug registers where you know debug

00:20:48,230 --> 00:20:52,940
registers were not quite as secure as

00:20:50,420 --> 00:20:55,250
what we'd hoped them to be it was a

00:20:52,940 --> 00:20:57,410
multi vendor sort of response we were

00:20:55,250 --> 00:20:59,570
pulled in very early in the game by

00:20:57,410 --> 00:21:02,960
Microsoft they sent an email to the

00:20:59,570 --> 00:21:05,930
security officer alias it was responded

00:21:02,960 --> 00:21:08,090
to quickly all of the the non-disclosure

00:21:05,930 --> 00:21:09,710
agreements and embargoes were word ago

00:21:08,090 --> 00:21:12,050
she ated and put in place and very

00:21:09,710 --> 00:21:13,730
quickly we were talking with other

00:21:12,050 --> 00:21:15,410
vendors who were also affected which was

00:21:13,730 --> 00:21:17,870
every vendor of every operating system

00:21:15,410 --> 00:21:20,990
which runs on any cpu made by Intel ever

00:21:17,870 --> 00:21:23,030
in the history of time and there was

00:21:20,990 --> 00:21:24,650
lots of good collaboration between the

00:21:23,030 --> 00:21:28,150
technical people fixing this

00:21:24,650 --> 00:21:32,300
vulnerability and then finally once the

00:21:28,150 --> 00:21:32,960
once the certs was was gave their

00:21:32,300 --> 00:21:35,450
approval

00:21:32,960 --> 00:21:37,610
they allowed us to give our patches to

00:21:35,450 --> 00:21:39,470
one of our downstream consumers pfsense

00:21:37,610 --> 00:21:41,840
is basically a rear old version of

00:21:39,470 --> 00:21:43,310
freely as needed runs on a firewall the

00:21:41,840 --> 00:21:46,310
cert said yes that's good you can send

00:21:43,310 --> 00:21:48,650
them their patches which we did and one

00:21:46,310 --> 00:21:50,750
hour of the embargo being dropped

00:21:48,650 --> 00:21:52,460
freebie as these patches were committed

00:21:50,750 --> 00:21:54,380
and the security advisory was released

00:21:52,460 --> 00:21:58,400
and that was several hours before read

00:21:54,380 --> 00:22:01,150
half which made us very happy so this is

00:21:58,400 --> 00:22:04,240
working out for us quite well

00:22:01,150 --> 00:22:07,840
I originally wrote this talk for a cert

00:22:04,240 --> 00:22:10,840
vent where I encouraged the certs in the

00:22:07,840 --> 00:22:12,700
room to come and talk to me about you

00:22:10,840 --> 00:22:15,220
know coordinating vulnerabilities and

00:22:12,700 --> 00:22:17,500
just becoming part of the club so if you

00:22:15,220 --> 00:22:19,300
are a security researcher or are

00:22:17,500 --> 00:22:21,520
otherwise involved in security in

00:22:19,300 --> 00:22:23,650
another operating system FreeBSD would

00:22:21,520 --> 00:22:25,510
like to play nice with you we would like

00:22:23,650 --> 00:22:29,290
to coordinate our vulnerability response

00:22:25,510 --> 00:22:31,060
better if you know contacts need to be

00:22:29,290 --> 00:22:33,700
made or if you if you're aware of

00:22:31,060 --> 00:22:36,850
vulnerabilities or if you if you have

00:22:33,700 --> 00:22:39,190
issues stalled with us please talk to me

00:22:36,850 --> 00:22:40,810
and I will I will see about moving this

00:22:39,190 --> 00:22:42,270
forward because the previously

00:22:40,810 --> 00:22:44,880
foundation is obviously trying to

00:22:42,270 --> 00:22:47,830
continue to improve our security

00:22:44,880 --> 00:22:49,630
response and with that I have one

00:22:47,830 --> 00:22:52,690
minutes and 55 seconds left for

00:22:49,630 --> 00:22:54,040
questions this is actually a forty

00:22:52,690 --> 00:23:01,770
minute to talk which I have compressed

00:22:54,040 --> 00:23:04,980
into 25 no questions

00:23:01,770 --> 00:23:04,980
that's good

00:23:07,670 --> 00:23:12,860
if there are no questions that I think

00:23:09,590 --> 00:23:15,250
it's like for next speaker okay so a big

00:23:12,860 --> 00:23:15,250
hand please

00:23:18,970 --> 00:23:23,600
very good actually

00:23:20,810 --> 00:23:28,060
PTSD is is quite fundamental to many

00:23:23,600 --> 00:23:31,400
organizations really in their storage

00:23:28,060 --> 00:23:34,460
systems so I think it's kind of hard to

00:23:31,400 --> 00:23:37,070
realize how much data or how much like

00:23:34,460 --> 00:23:41,540
instructions on that so it's certainly

00:23:37,070 --> 00:23:43,610
quite a important project actually I was

00:23:41,540 --> 00:23:45,860
wanting to ask just a one quick question

00:23:43,610 --> 00:23:48,350
there sorry um

00:23:45,860 --> 00:23:51,500
how much movement hasn't been away from

00:23:48,350 --> 00:23:54,020
PTSD say more to Linux with the

00:23:51,500 --> 00:23:56,510
developer community it's unknown and

00:23:54,020 --> 00:23:58,010
unknowable one of the what are the

00:23:56,510 --> 00:24:00,830
features of previous years that we have

00:23:58,010 --> 00:24:02,660
no idea who runs three BSD and we don't

00:24:00,830 --> 00:24:04,820
have to know we don't we don't well

00:24:02,660 --> 00:24:06,680
it's literally we want to know we would

00:24:04,820 --> 00:24:07,790
like to know who runs FreeBSD but we

00:24:06,680 --> 00:24:11,330
don't have to know you don't have to

00:24:07,790 --> 00:24:14,870
tell us we you know you use our our

00:24:11,330 --> 00:24:17,360
software and and you're good we do

00:24:14,870 --> 00:24:19,640
notice that ever since Linux has gone

00:24:17,360 --> 00:24:21,080
stop being a unix-like operating system

00:24:19,640 --> 00:24:24,290
ever since Linux has this thing called

00:24:21,080 --> 00:24:26,270
system D we do see quite a lot more

00:24:24,290 --> 00:24:28,190
developers showing up on FreeBSD because

00:24:26,270 --> 00:24:30,410
it turns out that people like the UNIX

00:24:28,190 --> 00:24:31,880
way of doing things people like having

00:24:30,410 --> 00:24:34,760
multiple processes and multiple threads

00:24:31,880 --> 00:24:37,160
people like having log files people like

00:24:34,760 --> 00:24:40,430
being able to read their log files so we

00:24:37,160 --> 00:24:43,430
find that there's more more people

00:24:40,430 --> 00:24:46,070
coming to FreeBSD from from Linux

00:24:43,430 --> 00:24:47,660
operating systems which is good they're

00:24:46,070 --> 00:24:49,370
probably also churn going the other way

00:24:47,660 --> 00:24:52,520
as well three Beasley is great on

00:24:49,370 --> 00:24:55,220
servers and on things that just need to

00:24:52,520 --> 00:24:57,560
run quietly freebsd is not terribly good

00:24:55,220 --> 00:24:58,880
at laptops so people who run previously

00:24:57,560 --> 00:25:00,650
on their laptop they buy a new laptop

00:24:58,880 --> 00:25:02,720
their graphics don't work they go and

00:25:00,650 --> 00:25:04,070
run linux for a while and then you know

00:25:02,720 --> 00:25:07,220
once we have a graphics driver they come

00:25:04,070 --> 00:25:09,350
back so I think there's churn in both

00:25:07,220 --> 00:25:13,160
directions yeah and also obviously they

00:25:09,350 --> 00:25:16,160
are different markets well Linux perhaps

00:25:13,160 --> 00:25:18,740
is more like less kind of necessarily

00:25:16,160 --> 00:25:23,240
the backend where where is obviously a

00:25:18,740 --> 00:25:26,270
PST is more in like embedded sort of

00:25:23,240 --> 00:25:29,930
storage systems and core infrastructure

00:25:26,270 --> 00:25:34,469
call ok thank you

00:25:29,930 --> 00:25:34,469

YouTube URL: https://www.youtube.com/watch?v=qf8e9td70Mk


