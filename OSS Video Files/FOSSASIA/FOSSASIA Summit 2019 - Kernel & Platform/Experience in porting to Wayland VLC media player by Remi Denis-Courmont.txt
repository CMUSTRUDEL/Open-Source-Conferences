Title: Experience in porting to Wayland VLC media player by Remi Denis-Courmont
Publication date: 2019-03-29
Playlist: FOSSASIA Summit 2019 - Kernel & Platform
Description: 
	15 March 2019 14:30, Theatre Lounge

The upcoming VLC 4.0 will finally have support for the next-generation open-source Wayland display protocol. We will discuss the key points to consider when porting a native application to Wayland through the example of VLC.
Captions: 
	00:00:00,030 --> 00:00:07,230
good afternoon everyone I hope you are

00:00:01,949 --> 00:00:10,500
not sleeping on your lunch anymore so

00:00:07,230 --> 00:00:12,000
I'm Remy as I was introduced and well

00:00:10,500 --> 00:00:13,530
I'm not going to talk about here see for

00:00:12,000 --> 00:00:15,570
that there was that much because I'll

00:00:13,530 --> 00:00:18,630
talk about that a few hours ago but I'm

00:00:15,570 --> 00:00:24,210
just gonna talk mostly but actually more

00:00:18,630 --> 00:00:26,970
about when and and VLC really yes this

00:00:24,210 --> 00:00:29,760
is just my point of view it please don't

00:00:26,970 --> 00:00:33,899
quote me as representing my employer

00:00:29,760 --> 00:00:36,980
because I did not Hanks so quick intro

00:00:33,899 --> 00:00:42,570
listen about myself I joined Videoland

00:00:36,980 --> 00:00:46,760
C project as a student in 2003 at 16

00:00:42,570 --> 00:00:50,700
years ago well okay 15 years ago and I

00:00:46,760 --> 00:00:54,539
stayed on the VLC project as a hobby he

00:00:50,700 --> 00:00:56,699
stuffed after I graduated I spent a

00:00:54,539 --> 00:00:58,770
whole long quite a few years working for

00:00:56,699 --> 00:01:01,649
local in New York earnings phones but of

00:00:58,770 --> 00:01:03,570
course that didn't turn out very well as

00:01:01,649 --> 00:01:07,880
you might remember and nowadays I work

00:01:03,570 --> 00:01:11,520
for research edges of the engineer and

00:01:07,880 --> 00:01:12,780
have become the largest and he said in

00:01:11,520 --> 00:01:16,619
terms of source code I'm the largest

00:01:12,780 --> 00:01:18,630
contributor and VLC project C story but

00:01:16,619 --> 00:01:24,930
let's get on to with with the actual

00:01:18,630 --> 00:01:28,200
content this is a bit of like chronology

00:01:24,930 --> 00:01:31,530
or milestone of VLC a superhit Wayland

00:01:28,200 --> 00:01:35,220
and over in a way I think opens I think

00:01:31,530 --> 00:01:36,689
it's a good example of all open source

00:01:35,220 --> 00:01:39,810
projects are picking up on Maryland in

00:01:36,689 --> 00:01:43,860
general I mean we of course we will you

00:01:39,810 --> 00:01:45,540
will see variation but so in 2010 I

00:01:43,860 --> 00:01:48,329
think we were already starting to hear

00:01:45,540 --> 00:01:50,939
about like this fancy new windowing

00:01:48,329 --> 00:01:54,140
management system that would supposedly

00:01:50,939 --> 00:01:59,399
be coming from I think Intel research

00:01:54,140 --> 00:02:01,259
and well looked at it and as I quell

00:01:59,399 --> 00:02:02,580
okay so we need to support this egl

00:02:01,259 --> 00:02:04,380
thing and

00:02:02,580 --> 00:02:09,830
and each year is the replacement for G

00:02:04,380 --> 00:02:09,830
Erickson is basically all you bind your

00:02:09,950 --> 00:02:14,610
let's all you bound the windows on your

00:02:12,000 --> 00:02:16,560
on your operating system to OpenGL

00:02:14,610 --> 00:02:20,190
context so you can send all that's

00:02:16,560 --> 00:02:23,550
really content with OpenGL oh render or

00:02:20,190 --> 00:02:25,860
should I say but didn't really go very

00:02:23,550 --> 00:02:27,870
very far back at back in back in those

00:02:25,860 --> 00:02:29,640
days eg are very only only supported x11

00:02:27,870 --> 00:02:31,380
on Linux so you couldn't really do a

00:02:29,640 --> 00:02:34,260
line with it so it was kind of going

00:02:31,380 --> 00:02:37,910
nowhere and for four years nothing

00:02:34,260 --> 00:02:41,510
really happened which chorus to 2014 and

00:02:37,910 --> 00:02:48,030
finally at that point we were able to

00:02:41,510 --> 00:02:53,700
have ELC draw some kind of image in

00:02:48,030 --> 00:02:56,100
Wayland using using actually geo 2015

00:02:53,700 --> 00:02:59,010
official using MFD so if you are

00:02:56,100 --> 00:03:00,660
familiar with Linux that's kind of the

00:02:59,010 --> 00:03:05,550
more modern wait when the temporary

00:03:00,660 --> 00:03:09,239
memory segments or Shannon Shannon oil

00:03:05,550 --> 00:03:13,830
segments 2017 we finally got the first

00:03:09,239 --> 00:03:16,110
version of the xdg shell which is a code

00:03:13,830 --> 00:03:18,420
word sort of as a name for the window

00:03:16,110 --> 00:03:22,680
management like the desktop window

00:03:18,420 --> 00:03:25,140
management in in Wayland then the stable

00:03:22,680 --> 00:03:28,440
version a year later and also last year

00:03:25,140 --> 00:03:29,459
we finally got input input working which

00:03:28,440 --> 00:03:31,650
mean that you can actually use your

00:03:29,459 --> 00:03:34,050
mouse and your keyboard with VLC on

00:03:31,650 --> 00:03:38,070
Wayland and you also have the cursor

00:03:34,050 --> 00:03:40,860
working so hopefully this year we'll get

00:03:38,070 --> 00:03:43,590
it in a usable shape and it should be

00:03:40,860 --> 00:03:45,150
shipping in follow zero this has been

00:03:43,590 --> 00:03:48,739
really really slow as you can see

00:03:45,150 --> 00:03:51,959
incoming and yet we still don't have

00:03:48,739 --> 00:03:53,840
screen capture which is basically

00:03:51,959 --> 00:03:57,360
recording you're recording your desktop

00:03:53,840 --> 00:04:00,030
so using the SE to record your your

00:03:57,360 --> 00:04:02,250
desktop and encode it or stream it out

00:04:00,030 --> 00:04:06,560
we don't have global hotkeys which is

00:04:02,250 --> 00:04:08,580
stuff like multimedia keys or any custom

00:04:06,560 --> 00:04:11,700
global key you might want to associate

00:04:08,580 --> 00:04:13,140
to here's even if this is not the active

00:04:11,700 --> 00:04:14,220
application is not the focused

00:04:13,140 --> 00:04:16,019
application

00:04:14,220 --> 00:04:18,360
and the skinny engine is also not

00:04:16,019 --> 00:04:20,060
supported in Maryland and I don't know

00:04:18,360 --> 00:04:22,170
if that's more like a lack of

00:04:20,060 --> 00:04:24,840
engineering resources and I'm not sure

00:04:22,170 --> 00:04:26,670
if nobody is anybody still using the V

00:04:24,840 --> 00:04:29,010
risk in anything anymore so maybe we

00:04:26,670 --> 00:04:30,180
don't really care but we'll see why we

00:04:29,010 --> 00:04:33,780
are not doing the screen capture and the

00:04:30,180 --> 00:04:35,520
global keys later on the talk so in a

00:04:33,780 --> 00:04:39,570
nutshell what is very land for those who

00:04:35,520 --> 00:04:41,550
don't know so as as mentioned in the

00:04:39,570 --> 00:04:44,600
intro it with basically a success of Fox

00:04:41,550 --> 00:04:48,080
11 windowing subsystem which is which is

00:04:44,600 --> 00:04:50,850
all pretty much all Linux and BSD and

00:04:48,080 --> 00:04:54,330
well mostly Newton busy and all UNIX

00:04:50,850 --> 00:04:57,690
systems in general except Mac OS used

00:04:54,330 --> 00:05:00,780
for drawing applications without knowing

00:04:57,690 --> 00:05:05,040
at all only in graphic mode and SEO in

00:05:00,780 --> 00:05:09,030
plain text you hope using x11 and like

00:05:05,040 --> 00:05:12,660
Suellen like like x11 is is is a

00:05:09,030 --> 00:05:14,250
client-server protocol each up its

00:05:12,660 --> 00:05:19,560
applications with us at your browser

00:05:14,250 --> 00:05:21,570
your VLC your word processor is a client

00:05:19,560 --> 00:05:23,430
and you can have multiple client at a

00:05:21,570 --> 00:05:25,590
time each application that is currently

00:05:23,430 --> 00:05:27,990
running with your client and you have

00:05:25,590 --> 00:05:30,419
one server which is the display or the

00:05:27,990 --> 00:05:34,080
compositor in Wayland terminology which

00:05:30,419 --> 00:05:38,430
is basically one graphic card with one

00:05:34,080 --> 00:05:40,200
or more monitors connected to it it's

00:05:38,430 --> 00:05:42,780
it's an inter process communication

00:05:40,200 --> 00:05:46,140
protocol it's one of our socket usually

00:05:42,780 --> 00:05:50,910
unique circuit x11 cuda drawn on IP

00:05:46,140 --> 00:05:52,470
sockets but but when and doesn't really

00:05:50,910 --> 00:05:55,560
it's really just a unique circuit at the

00:05:52,470 --> 00:05:57,990
time like also like x11

00:05:55,560 --> 00:06:01,080
the protocol definitions all the message

00:05:57,990 --> 00:06:07,620
formats and parameters are defined in an

00:06:01,080 --> 00:06:09,450
XML file now in x11 it was more like an

00:06:07,620 --> 00:06:14,010
afterthought and and something that the

00:06:09,450 --> 00:06:16,350
xeb projects added after long after X 11

00:06:14,010 --> 00:06:17,850
is already taken into use for Whalen it

00:06:16,350 --> 00:06:20,510
has been like that from the beginning

00:06:17,850 --> 00:06:23,010
and that also means that in Wolens case

00:06:20,510 --> 00:06:27,030
the specification is also part of the

00:06:23,010 --> 00:06:27,639
XML now it's just comments or text in

00:06:27,030 --> 00:06:30,550
the exam

00:06:27,639 --> 00:06:32,139
prose for a complete form humans to read

00:06:30,550 --> 00:06:33,930
it doesn't affect the computer but but

00:06:32,139 --> 00:06:36,520
essentially is a protocol specification

00:06:33,930 --> 00:06:40,569
is also part of the protocol definition

00:06:36,520 --> 00:06:42,039
and it's in the XML files input

00:06:40,569 --> 00:06:45,039
management especially keyboard handling

00:06:42,039 --> 00:06:46,659
is done with xkb common you might have

00:06:45,039 --> 00:06:49,000
seen that library named among the

00:06:46,659 --> 00:06:51,069
package names on your Ubuntu TV and

00:06:49,000 --> 00:06:54,879
destroy which every new this or you're

00:06:51,069 --> 00:06:57,189
using it's it's basic user roles that

00:06:54,879 --> 00:06:59,020
pass these key maps came up

00:06:57,189 --> 00:07:01,419
configuration files for the different

00:06:59,020 --> 00:07:03,729
languages and keyboard keyboard layout

00:07:01,419 --> 00:07:06,069
that you might have it's actually a

00:07:03,729 --> 00:07:08,050
rather complex seeing because you have

00:07:06,069 --> 00:07:11,259
especially well if you don't use Latin

00:07:08,050 --> 00:07:15,310
as your alphabet as your main as German

00:07:11,259 --> 00:07:18,069
alphabet input C and writing system you

00:07:15,310 --> 00:07:19,270
probably have a switch and support

00:07:18,069 --> 00:07:20,889
different lapping sorry Frankie's

00:07:19,270 --> 00:07:23,620
depending on key states so it gets quite

00:07:20,889 --> 00:07:26,529
complicated when and actually shares the

00:07:23,620 --> 00:07:29,520
same input system as x11 and both of

00:07:26,529 --> 00:07:33,460
them passing those files in client-side

00:07:29,520 --> 00:07:35,379
using this xkb common libraries and and

00:07:33,460 --> 00:07:39,099
the exactly refers to acts 11 in this

00:07:35,379 --> 00:07:41,860
case but it is used for Overland the key

00:07:39,099 --> 00:07:44,770
differences between women and x11 Waylon

00:07:41,860 --> 00:07:46,990
is a very tiny core protocol the

00:07:44,770 --> 00:07:50,169
baseline protocol in Waylon is extremely

00:07:46,990 --> 00:07:52,240
small and simple who has X 11 as

00:07:50,169 --> 00:07:53,699
thousands of different message messages

00:07:52,240 --> 00:07:56,620
that it can send

00:07:53,699 --> 00:08:00,940
Waylon is totally geared toward share

00:07:56,620 --> 00:08:03,250
memory it doesn't support when an it set

00:08:00,940 --> 00:08:04,719
does not support him a desktop if you

00:08:03,250 --> 00:08:06,879
want to do remote desktop with one hand

00:08:04,719 --> 00:08:07,479
you have to convert it into a different

00:08:06,879 --> 00:08:09,969
protocol

00:08:07,479 --> 00:08:12,039
typically in VNC or you could username a

00:08:09,969 --> 00:08:14,680
desktop if you own more Microsoft minded

00:08:12,039 --> 00:08:17,050
so of course you can use Wayland as a

00:08:14,680 --> 00:08:18,879
client or the server side of a remote

00:08:17,050 --> 00:08:21,789
and the local side of a remote desktop

00:08:18,879 --> 00:08:24,009
session but you can't use it as as the

00:08:21,789 --> 00:08:27,550
protocol data run over all the obviously

00:08:24,009 --> 00:08:29,889
network unlike x11 but that's just

00:08:27,550 --> 00:08:31,930
because I mean most most cases you do

00:08:29,889 --> 00:08:33,849
your application is running locally and

00:08:31,930 --> 00:08:35,229
for performance reason you want to have

00:08:33,849 --> 00:08:37,990
shared memory and of course shared

00:08:35,229 --> 00:08:39,690
memory does not work across the network

00:08:37,990 --> 00:08:42,490
by definition

00:08:39,690 --> 00:08:45,460
and none of the big big difference and

00:08:42,490 --> 00:08:48,280
that does affect software developers a

00:08:45,460 --> 00:08:51,910
lot including myself is that where

00:08:48,280 --> 00:08:53,800
Nana's very strict access control so a

00:08:51,910 --> 00:08:56,730
single client or a single application a

00:08:53,800 --> 00:08:59,020
single process can only manage its own

00:08:56,730 --> 00:09:01,320
objects within the protocol so it's on

00:08:59,020 --> 00:09:05,440
windows or surfaces as they're called

00:09:01,320 --> 00:09:07,540
you cannot see you cannot definitely

00:09:05,440 --> 00:09:09,370
cannot modify indicative and see with

00:09:07,540 --> 00:09:11,440
the wind in human right the windows of

00:09:09,370 --> 00:09:12,790
other are with our clients this is a

00:09:11,440 --> 00:09:13,930
security feature by design of the

00:09:12,790 --> 00:09:17,770
protocol it's meant to be

00:09:13,930 --> 00:09:21,880
to enable sandbox applications running

00:09:17,770 --> 00:09:23,560
directly talking directly to the

00:09:21,880 --> 00:09:28,300
compositor on without to the display

00:09:23,560 --> 00:09:31,060
server without any kind of park seeing

00:09:28,300 --> 00:09:33,100
of course this does cause problems such

00:09:31,060 --> 00:09:35,980
as as I was mentioning earlier you can't

00:09:33,100 --> 00:09:37,930
do screen capture and you can do input

00:09:35,980 --> 00:09:41,290
grabbing so you can do a global hotkeys

00:09:37,930 --> 00:09:42,610
and that because of you see well if you

00:09:41,290 --> 00:09:43,840
can screen capture you can see what

00:09:42,610 --> 00:09:47,620
other applications are doing and this

00:09:43,840 --> 00:09:50,200
goes against the security model another

00:09:47,620 --> 00:09:52,060
side effect is that you can't do nested

00:09:50,200 --> 00:09:54,310
nested windows between different

00:09:52,060 --> 00:09:57,910
processes which can sometimes be a

00:09:54,310 --> 00:09:59,710
problem unless nowadays but it was it

00:09:57,910 --> 00:10:01,510
would have been a huge problems for like

00:09:59,710 --> 00:10:03,100
web plug-ins for instance there are

00:10:01,510 --> 00:10:04,870
actually extensions where you can

00:10:03,100 --> 00:10:07,030
explicitly enable this on a Windows

00:10:04,870 --> 00:10:10,570
basis though but I won't cover that

00:10:07,030 --> 00:10:12,130
today so anyway if you want to put your

00:10:10,570 --> 00:10:13,690
application to Wayland and this is

00:10:12,130 --> 00:10:17,200
basically the thought process that I've

00:10:13,690 --> 00:10:20,050
been into like for five years ago well

00:10:17,200 --> 00:10:21,550
either you open the API documentation or

00:10:20,050 --> 00:10:23,410
you just or you're feeling courageous

00:10:21,550 --> 00:10:26,170
and you do like here open the C header

00:10:23,410 --> 00:10:27,730
file and you'll see that basically all

00:10:26,170 --> 00:10:28,900
the functions except for this one the

00:10:27,730 --> 00:10:31,540
value display Connect

00:10:28,900 --> 00:10:33,040
require another existing one and object

00:10:31,540 --> 00:10:34,540
you're like probably I need to start

00:10:33,040 --> 00:10:36,370
with this one and that would be a very

00:10:34,540 --> 00:10:38,350
good guess you need to start with this

00:10:36,370 --> 00:10:42,760
function to create a connection to the

00:10:38,350 --> 00:10:43,990
display server and then you keep

00:10:42,760 --> 00:10:46,180
browsing and you're like what can I do

00:10:43,990 --> 00:10:47,560
now that I have this dpy he said well

00:10:46,180 --> 00:10:50,080
now that I've connected to this display

00:10:47,560 --> 00:10:51,580
what can I do with it and that's where

00:10:50,080 --> 00:10:52,840
it gets tricky because you're like you

00:10:51,580 --> 00:10:54,190
realize eventually

00:10:52,840 --> 00:10:56,770
basically there's nothing you can do

00:10:54,190 --> 00:11:00,730
other than colleges display get register

00:10:56,770 --> 00:11:04,060
function Oh get registry I think anyway

00:11:00,730 --> 00:11:06,570
and you're like okay but now what if you

00:11:04,060 --> 00:11:11,800
use 2x11 you can create Windows and

00:11:06,570 --> 00:11:13,960
cursors and and also something like

00:11:11,800 --> 00:11:16,450
images or sort of things you realize you

00:11:13,960 --> 00:11:17,650
can't you just get this watch history

00:11:16,450 --> 00:11:19,180
object and you're like I don't know what

00:11:17,650 --> 00:11:21,520
to do with this I don't know do i create

00:11:19,180 --> 00:11:24,820
my surfaces or do i do anything so it

00:11:21,520 --> 00:11:28,510
turns out in Wayland there's no there's

00:11:24,820 --> 00:11:32,020
no responses to requests everything is

00:11:28,510 --> 00:11:33,279
based on events everything coming from

00:11:32,020 --> 00:11:35,410
the server back to the client

00:11:33,279 --> 00:11:39,610
application is based on events and so

00:11:35,410 --> 00:11:41,170
what the registry does is is basically

00:11:39,610 --> 00:11:42,550
provide the list of the supported

00:11:41,170 --> 00:11:44,920
protocol extensions and baseline

00:11:42,550 --> 00:11:47,350
protocol features and what you need to

00:11:44,920 --> 00:11:49,210
do is get the registry and then the

00:11:47,350 --> 00:11:50,860
server will then eventually send you

00:11:49,210 --> 00:11:52,839
events that oh i support this extension

00:11:50,860 --> 00:11:54,430
a soupçon that extension as it was

00:11:52,839 --> 00:11:56,950
Eastern that feature and so on and so

00:11:54,430 --> 00:11:59,800
forth and every time you find one of

00:11:56,950 --> 00:12:01,750
among that list of public or extensions

00:11:59,800 --> 00:12:04,030
one that you actually need on or might

00:12:01,750 --> 00:12:08,080
want to use you need to bind that

00:12:04,030 --> 00:12:09,280
extension to an object and they have

00:12:08,080 --> 00:12:12,490
they have some kind of weird naming

00:12:09,280 --> 00:12:15,000
convention so W at least for the coop

00:12:12,490 --> 00:12:18,580
protocol which is support by everything

00:12:15,000 --> 00:12:21,089
WP is basically the same thing but

00:12:18,580 --> 00:12:23,290
define later I think they just had some

00:12:21,089 --> 00:12:25,420
it's not likely what the difference is

00:12:23,290 --> 00:12:27,520
really between them XD geez form always

00:12:25,420 --> 00:12:30,400
an extension defined by the cause was

00:12:27,520 --> 00:12:35,980
desktop working group so mostly

00:12:30,400 --> 00:12:38,080
KDE and Gnome people I dream so as I was

00:12:35,980 --> 00:12:40,440
saying everything happens by events and

00:12:38,080 --> 00:12:42,640
one other thing that is kind of

00:12:40,440 --> 00:12:45,430
different from what you might be used to

00:12:42,640 --> 00:12:47,950
when you program network or IPC protocol

00:12:45,430 --> 00:12:51,370
is that that is a standard wooden

00:12:47,950 --> 00:12:55,270
library it doesn't give you a queue of

00:12:51,370 --> 00:12:56,740
inbound messages like you say get next

00:12:55,270 --> 00:12:59,290
message and then you start passing it

00:12:56,740 --> 00:13:01,589
and then have a big switch statement it

00:12:59,290 --> 00:13:03,730
doesn't work like that instead it it

00:13:01,589 --> 00:13:06,560
expects you to register your callbacks

00:13:03,730 --> 00:13:10,790
for its types of message for its object

00:13:06,560 --> 00:13:14,660
and it actually at one time generates a

00:13:10,790 --> 00:13:16,340
typesafe function call even so it's C

00:13:14,660 --> 00:13:18,290
and you normally don't have runtime code

00:13:16,340 --> 00:13:21,560
generation in C attack leaders generate

00:13:18,290 --> 00:13:25,580
type specific function calls at runtime

00:13:21,560 --> 00:13:27,830
and felicity's ffff I which is library

00:13:25,580 --> 00:13:29,150
for doing that kind of like kind of

00:13:27,830 --> 00:13:31,339
things if you're interested in the

00:13:29,150 --> 00:13:34,490
details you can you can look at FFA on

00:13:31,339 --> 00:13:37,790
the internet all the FFI I just

00:13:34,490 --> 00:13:39,170
mentioned that you really need to be

00:13:37,790 --> 00:13:41,240
careful with version numbering because

00:13:39,170 --> 00:13:44,390
the version number of the protocol is

00:13:41,240 --> 00:13:46,700
basically what specifies which events

00:13:44,390 --> 00:13:48,470
and what parameters you support and if

00:13:46,700 --> 00:13:50,420
you mismatch them there on time calls

00:13:48,470 --> 00:13:51,890
will not match between what you have

00:13:50,420 --> 00:13:53,390
written in the source code and what the

00:13:51,890 --> 00:13:57,529
runtimes actually expecting and then

00:13:53,390 --> 00:14:00,140
you'll crash immediately okay is the

00:13:57,529 --> 00:14:02,210
main purpose of Whalen and before it x11

00:14:00,140 --> 00:14:02,690
was to of course show something on the

00:14:02,210 --> 00:14:06,200
screen

00:14:02,690 --> 00:14:10,940
so all oh we used to draw I know you

00:14:06,200 --> 00:14:12,350
cannot draw any more so so Whalen

00:14:10,940 --> 00:14:15,080
doesn't have any server-side painting

00:14:12,350 --> 00:14:17,839
which unlike x11 you cannot beat pixels

00:14:15,080 --> 00:14:20,030
you can add or line so see occurs or

00:14:17,839 --> 00:14:22,010
triangles that you could do in x11 and

00:14:20,030 --> 00:14:23,780
there's also no server-side forms which

00:14:22,010 --> 00:14:27,860
is something that nobody was really

00:14:23,780 --> 00:14:30,530
using with x11 or supporting you cannot

00:14:27,860 --> 00:14:32,990
do have their overlays and if you don't

00:14:30,530 --> 00:14:34,430
know what I have already is because you

00:14:32,990 --> 00:14:36,080
probably didn't use them when they still

00:14:34,430 --> 00:14:38,800
existed now it is you don't see them

00:14:36,080 --> 00:14:40,960
anymore so it only to worry about them a

00:14:38,800 --> 00:14:43,190
bit more

00:14:40,960 --> 00:14:46,130
bothering maybe is that there is no

00:14:43,190 --> 00:14:47,420
modern so-called modern 2d rendering API

00:14:46,130 --> 00:14:50,000
in Wayland

00:14:47,420 --> 00:14:53,150
which would be similar to since renderer

00:14:50,000 --> 00:14:55,550
in X so behind there's basically just

00:14:53,150 --> 00:14:57,050
drawing rectangles and putting them on

00:14:55,550 --> 00:15:01,070
on top of each other and scaling them

00:14:57,050 --> 00:15:02,690
and auditing them all you can roll with

00:15:01,070 --> 00:15:04,790
Rheinland well you can use egn as i

00:15:02,690 --> 00:15:06,800
mentioned at the beginning originally

00:15:04,790 --> 00:15:11,450
Whalen was meant to be used with OpenGL

00:15:06,800 --> 00:15:12,589
ES subset but by now it's been of course

00:15:11,450 --> 00:15:15,589
section II to support desktop of

00:15:12,589 --> 00:15:16,470
engineer as well you can also use we can

00:15:15,589 --> 00:15:22,170
if you

00:15:16,470 --> 00:15:25,920
really modern way so and then if you

00:15:22,170 --> 00:15:30,600
just want to share a plain simple RGB

00:15:25,920 --> 00:15:33,620
pixel bitmaps or pix maps you can use

00:15:30,600 --> 00:15:36,030
share memory and just have 32-bit RGB

00:15:33,620 --> 00:15:38,910
but then you need to do the entire

00:15:36,030 --> 00:15:40,290
rendering down to the last pixel in

00:15:38,910 --> 00:15:41,940
software and that's probably gonna be

00:15:40,290 --> 00:15:46,380
slow so you typically don't want to do

00:15:41,940 --> 00:15:48,570
this you can also do here on the right

00:15:46,380 --> 00:15:50,790
handling manager or not digital art

00:15:48,570 --> 00:15:53,550
management which is the way that Linux

00:15:50,790 --> 00:15:55,680
manages low-level buffer access for GPU

00:15:53,550 --> 00:15:57,660
but typically it's something that the

00:15:55,680 --> 00:16:00,510
low-level drivers do for you so you

00:15:57,660 --> 00:16:02,250
don't need to worry about it you can

00:16:00,510 --> 00:16:04,860
still sort of emulate render

00:16:02,250 --> 00:16:08,280
functionality so you have the viewport

00:16:04,860 --> 00:16:10,740
extension which supports scaling in

00:16:08,280 --> 00:16:15,690
Hardware so you can you don't have to

00:16:10,740 --> 00:16:18,270
scale in software you know your your

00:16:15,690 --> 00:16:22,920
pics map and it can also Orion things we

00:16:18,270 --> 00:16:24,120
can rotate at square angles or flip and

00:16:22,920 --> 00:16:29,460
you have the step compositor which

00:16:24,120 --> 00:16:32,640
enables blending multiple surfaces and

00:16:29,460 --> 00:16:33,740
then called sub surfaces so you can put

00:16:32,640 --> 00:16:37,650
surfaces on top of each other

00:16:33,740 --> 00:16:40,380
unconditionally from the same client and

00:16:37,650 --> 00:16:42,210
the surprising things that you will

00:16:40,380 --> 00:16:44,460
definitely hit if you do when on

00:16:42,210 --> 00:16:47,310
development a new port on existing

00:16:44,460 --> 00:16:50,430
application is the way that window size

00:16:47,310 --> 00:16:53,810
is handled and first windows are called

00:16:50,430 --> 00:16:56,370
surfaces in women but this is a windows

00:16:53,810 --> 00:16:58,980
the surface size of the window size and

00:16:56,370 --> 00:17:01,890
whalen is defined by the content that

00:16:58,980 --> 00:17:04,920
you are that you have last attached so

00:17:01,890 --> 00:17:07,050
the last drawn on to the attach is the

00:17:04,920 --> 00:17:08,699
correct word to a surface so you say I

00:17:07,050 --> 00:17:11,130
have I have the surface here it's my

00:17:08,699 --> 00:17:14,329
window for my application and this is

00:17:11,130 --> 00:17:16,980
the content I want to show at the next

00:17:14,329 --> 00:17:18,660
rendering until further notice and this

00:17:16,980 --> 00:17:21,350
the side of that content will define the

00:17:18,660 --> 00:17:23,400
size of the window on screen it's not

00:17:21,350 --> 00:17:25,679
it's completely the other way around

00:17:23,400 --> 00:17:28,650
what it's what used to be in Windows or

00:17:25,679 --> 00:17:29,800
x11 where the system tells you now your

00:17:28,650 --> 00:17:32,740
window is

00:17:29,800 --> 00:17:34,390
about pixels by 200 pixels and if you

00:17:32,740 --> 00:17:36,610
don't roll outside those boundaries I'm

00:17:34,390 --> 00:17:38,080
just gonna not show it and screw you you

00:17:36,610 --> 00:17:39,900
just have to follow that size in Whalen

00:17:38,080 --> 00:17:43,630
is user way because they want to have

00:17:39,900 --> 00:17:45,490
t-cell perfect angering the client is

00:17:43,630 --> 00:17:47,140
now I have a surface ready of that seed

00:17:45,490 --> 00:17:50,920
size you have to show it at this size

00:17:47,140 --> 00:17:52,750
and and so it works in such a way that

00:17:50,920 --> 00:17:54,850
for instance if you drag an upper window

00:17:52,750 --> 00:17:56,680
or if the system wants to resize the

00:17:54,850 --> 00:17:58,480
window for some reason it will ask the

00:17:56,680 --> 00:18:00,460
application a would be nice if you could

00:17:58,480 --> 00:18:03,400
resize the window to a different size

00:18:00,460 --> 00:18:05,320
but you don't have to do it and when you

00:18:03,400 --> 00:18:06,730
do it you have to then be careful about

00:18:05,320 --> 00:18:11,530
the ordering of the event because you

00:18:06,730 --> 00:18:13,780
have to first I prepare the surface is a

00:18:11,530 --> 00:18:16,570
new size then acknowledge the new size

00:18:13,780 --> 00:18:18,610
and immediately provide the new size

00:18:16,570 --> 00:18:20,650
otherwise they are going to have some D

00:18:18,610 --> 00:18:21,940
synchronization between the size of the

00:18:20,650 --> 00:18:23,770
window and the content and your windows

00:18:21,940 --> 00:18:28,570
going to move around and it's gonna look

00:18:23,770 --> 00:18:29,800
really ugly another thing to keep in

00:18:28,570 --> 00:18:32,530
mind is that in Wayland

00:18:29,800 --> 00:18:36,090
there's no decorations by default this

00:18:32,530 --> 00:18:38,200
client side the questions so means that

00:18:36,090 --> 00:18:40,060
the application is responsible for

00:18:38,200 --> 00:18:41,650
drawing the border and the title bar and

00:18:40,060 --> 00:18:43,420
all the decoration that that you

00:18:41,650 --> 00:18:47,620
typically have avoided by the by the

00:18:43,420 --> 00:18:49,770
window manager and well this is this is

00:18:47,620 --> 00:18:52,420
a bit controversial

00:18:49,770 --> 00:18:55,420
there is now an extension but it's only

00:18:52,420 --> 00:18:57,820
since less than a year after much much

00:18:55,420 --> 00:18:59,350
flame wars and discussions in the

00:18:57,820 --> 00:19:00,610
communities as they are actually easier

00:18:59,350 --> 00:19:02,290
way now to ask the server to provide

00:19:00,610 --> 00:19:04,360
service at the question if you want them

00:19:02,290 --> 00:19:06,550
but some services don't support it and

00:19:04,360 --> 00:19:10,180
now and some developers are adamant that

00:19:06,550 --> 00:19:11,860
they will not support this but the

00:19:10,180 --> 00:19:16,660
system's if you consider so normally

00:19:11,860 --> 00:19:19,030
your UI frameworks or cute

00:19:16,660 --> 00:19:21,160
gtk or whichever using will do all the

00:19:19,030 --> 00:19:25,120
decorations for you but but if you don't

00:19:21,160 --> 00:19:27,370
have UI framework then you will have to

00:19:25,120 --> 00:19:30,780
deposit equations of them hopes at the

00:19:27,370 --> 00:19:37,240
window manager can provide them for you

00:19:30,780 --> 00:19:39,810
this is an angle and I think done faces

00:19:37,240 --> 00:19:39,810
any questions

00:19:41,280 --> 00:19:44,280
nope

00:19:48,260 --> 00:19:50,950
all right

00:19:53,540 --> 00:19:57,020
what sinks in

00:20:08,260 --> 00:20:24,850
and any questions now yeah earlier yeah

00:20:21,549 --> 00:20:28,240
earlier I was mentioning about how do

00:20:24,850 --> 00:20:32,440
you send Wayland content open network

00:20:28,240 --> 00:20:35,320
and I mean earlier Remy was saying there

00:20:32,440 --> 00:20:36,940
isn't any core support the key the key

00:20:35,320 --> 00:20:39,400
selling point for a while and there's

00:20:36,940 --> 00:20:41,440
two key selling points for Wayland the

00:20:39,400 --> 00:20:42,700
first one and it's a very bad selling

00:20:41,440 --> 00:20:44,380
point in my opinion as an application

00:20:42,700 --> 00:20:45,820
developer is that they wanted to get the

00:20:44,380 --> 00:20:48,660
developers wanted to get rid of the x11

00:20:45,820 --> 00:20:51,190
legacy which had become intractable and

00:20:48,660 --> 00:20:52,510
it might be a valid point if you onyx 11

00:20:51,190 --> 00:20:54,190
developer of course as an application

00:20:52,510 --> 00:20:55,900
developer like myself I don't really

00:20:54,190 --> 00:20:56,500
care it's their problem well it's not my

00:20:55,900 --> 00:20:59,710
problem

00:20:56,500 --> 00:21:01,990
but the other argument and this is the

00:20:59,710 --> 00:21:03,940
more interesting one is is is pixel

00:21:01,990 --> 00:21:05,710
perfect rendering so in well and

00:21:03,940 --> 00:21:08,770
everything is synchronized you don't

00:21:05,710 --> 00:21:10,360
have this effect fine I mean you must

00:21:08,770 --> 00:21:11,890
have seen it on especially on slow

00:21:10,360 --> 00:21:13,330
computers when you take the window and

00:21:11,890 --> 00:21:15,730
your resize it with the mouse very fast

00:21:13,330 --> 00:21:17,410
and the declaration moves but you see

00:21:15,730 --> 00:21:18,790
the old content and it's not a tracer

00:21:17,410 --> 00:21:21,010
so in Wayland this does not happen

00:21:18,790 --> 00:21:24,280
because because as I was mentioning with

00:21:21,010 --> 00:21:26,110
the size thing the window manager will

00:21:24,280 --> 00:21:27,970
tell your application are now your size

00:21:26,110 --> 00:21:29,559
should change please change it then the

00:21:27,970 --> 00:21:31,929
application will tell when it's ready to

00:21:29,559 --> 00:21:33,250
change to when it has updated the size

00:21:31,929 --> 00:21:36,100
and so everything will be synchronize

00:21:33,250 --> 00:21:37,660
nicely and and that is the key selling

00:21:36,100 --> 00:21:39,970
point and this is why when on is

00:21:37,660 --> 00:21:41,950
basically a compositor and not this

00:21:39,970 --> 00:21:43,980
preserver and traditional sense at X 11

00:21:41,950 --> 00:21:47,650
is now regarding regarding

00:21:43,980 --> 00:21:48,970
remote desktop there was a bit of a

00:21:47,650 --> 00:21:51,130
controversy because it's not supported

00:21:48,970 --> 00:21:52,840
in the protocol but of course you can

00:21:51,130 --> 00:21:56,890
still encapsulate it in some other

00:21:52,840 --> 00:21:58,510
protocol and because you have to sell

00:21:56,890 --> 00:22:00,540
effects on drawing and because you have

00:21:58,510 --> 00:22:03,250
this more optimized

00:22:00,540 --> 00:22:05,590
communications protocol than x11 was and

00:22:03,250 --> 00:22:06,790
you have lesser than C issues and then

00:22:05,590 --> 00:22:09,100
you might have had with x11

00:22:06,790 --> 00:22:11,830
but to be honest if you have latency

00:22:09,100 --> 00:22:15,100
issues with x11 just switching to xcb

00:22:11,830 --> 00:22:16,990
from a clip at the application level can

00:22:15,100 --> 00:22:18,700
already help a lot in terms of reducing

00:22:16,990 --> 00:22:19,500
the number of round trips that you need

00:22:18,700 --> 00:22:22,950
to do

00:22:19,500 --> 00:22:25,860
on during purpose but also I think I'm

00:22:22,950 --> 00:22:29,610
answering the issue here and there is

00:22:25,860 --> 00:22:32,000
actually an extension for Weiland which

00:22:29,610 --> 00:22:34,860
which does actually provide VNC style

00:22:32,000 --> 00:22:37,620
protocol over network and maths that

00:22:34,860 --> 00:22:40,590
brings the efficiency and the solution

00:22:37,620 --> 00:22:44,580
really for the for many applications on

00:22:40,590 --> 00:22:47,940
linux open network hopefully with a

00:22:44,580 --> 00:22:50,670
similar level of efficiency as the

00:22:47,940 --> 00:22:57,050
Microsoft RDP protocol that works on the

00:22:50,670 --> 00:23:01,640
widgets any further questions that ok

00:22:57,050 --> 00:23:01,640

YouTube URL: https://www.youtube.com/watch?v=xIccwlJCgcE


