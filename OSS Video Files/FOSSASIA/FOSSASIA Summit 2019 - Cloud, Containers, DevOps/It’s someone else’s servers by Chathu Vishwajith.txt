Title: It’s someone else’s servers by Chathu Vishwajith
Publication date: 2019-03-31
Playlist: FOSSASIA Summit 2019 - Cloud, Containers, DevOps
Description: 
	15 March 2019 16:40, Lecture Theatre

Serverless and micro-services now being evolving and many providers have been introduced services and frameworks to creating Serverless applications. I will talk about how the industry evolved to Serverless and when It’s useful. WebTask.io is a new Serverless provider who supports Node version 8 out of the box. WebTask can use as code sandbox for Node.js applications. WebTask also can be used to create scheduled tasks and Webhooks with Node.js. I had a chance to work with WebTask on beta phase so I would like to share my knowledge and some demos I have created to the Audience.
Captions: 
	00:00:00,089 --> 00:00:05,580
I'm going to talk about someone is

00:00:02,970 --> 00:00:06,450
service that's a topic which I'm going

00:00:05,580 --> 00:00:11,849
to explain later

00:00:06,450 --> 00:00:22,310
so I'm chatty we should eat I'm from Sri

00:00:11,849 --> 00:00:26,550
Lanka you can find me via Instagram so

00:00:22,310 --> 00:00:29,840
service I'm going to explain you what is

00:00:26,550 --> 00:00:36,960
actually service when I say serverless

00:00:29,840 --> 00:00:39,239
it's like this say no service so yeah

00:00:36,960 --> 00:00:43,770
is that all 0 the other company running

00:00:39,239 --> 00:00:46,829
without service no so let's talk about

00:00:43,770 --> 00:00:49,219
what this service company if the word is

00:00:46,829 --> 00:00:52,320
actually about service computing not the

00:00:49,219 --> 00:00:56,610
service just a word like a buzz word

00:00:52,320 --> 00:00:58,109
used to get some people going on so if

00:00:56,610 --> 00:01:01,890
you are going with the quickie Street

00:00:58,109 --> 00:01:05,070
how it happened so it is like companies

00:01:01,890 --> 00:01:08,220
started to own their own service so they

00:01:05,070 --> 00:01:11,790
started creating jobs for network

00:01:08,220 --> 00:01:14,280
engineers load balancing and everything

00:01:11,790 --> 00:01:17,430
else was there and so they run their own

00:01:14,280 --> 00:01:19,590
physical servers which is kind of really

00:01:17,430 --> 00:01:21,869
missed even come to purchase and

00:01:19,590 --> 00:01:24,930
maintaining this service so it's need

00:01:21,869 --> 00:01:27,210
additional stuff rather than your main

00:01:24,930 --> 00:01:29,610
business goal you may get in your own

00:01:27,210 --> 00:01:32,729
application but you need to create how

00:01:29,610 --> 00:01:35,090
another set of staff just to maintain a

00:01:32,729 --> 00:01:35,090
service

00:01:35,299 --> 00:01:42,840
so then people started to you their own

00:01:40,049 --> 00:01:46,890
idle service as a cloud and charge it

00:01:42,840 --> 00:01:51,329
for about how are you basis so yeah

00:01:46,890 --> 00:01:54,240
Scott's the bill about considerable

00:01:51,329 --> 00:01:56,820
amount and the maintenance costs also

00:01:54,240 --> 00:02:00,170
get less down and you can actually have

00:01:56,820 --> 00:02:00,170
less number of staff to run it

00:02:01,040 --> 00:02:07,750
but you need to set up the service

00:02:03,380 --> 00:02:07,750
because you need to know about divorce

00:02:08,740 --> 00:02:14,240
that divorce yeah that but you need to

00:02:11,990 --> 00:02:16,280
knew that if you are running on cloud

00:02:14,240 --> 00:02:18,100
you need to know new about how to set up

00:02:16,280 --> 00:02:21,410
the server how to set up the base image

00:02:18,100 --> 00:02:25,270
install the dependencies maintaining it

00:02:21,410 --> 00:02:30,470
scale it everything yeah it's not hard

00:02:25,270 --> 00:02:33,170
so then a company's games that we can do

00:02:30,470 --> 00:02:37,330
bit offs for you so they tell us

00:02:33,170 --> 00:02:40,040
platform as a service like Heroku and

00:02:37,330 --> 00:02:41,930
you know many other things you may know

00:02:40,040 --> 00:02:44,020
even from it obviously itself there's a

00:02:41,930 --> 00:02:48,530
platform as a service from there like

00:02:44,020 --> 00:02:54,640
mean stack mean stock so companies

00:02:48,530 --> 00:02:58,040
evolve the path but still not you know

00:02:54,640 --> 00:03:00,560
rest of people come with soft as a

00:02:58,040 --> 00:03:02,600
service fee so you give the mailing

00:03:00,560 --> 00:03:05,150
service as a service we are giving

00:03:02,600 --> 00:03:07,010
famous or messaging service as a service

00:03:05,150 --> 00:03:09,050
so you don't need to set up your service

00:03:07,010 --> 00:03:11,209
or your application you just use our API

00:03:09,050 --> 00:03:15,670
and we are you going to charge a little

00:03:11,209 --> 00:03:19,970
bit for it so new business is going on

00:03:15,670 --> 00:03:23,959
then people came why don't we do a

00:03:19,970 --> 00:03:26,450
service essence so we set up everything

00:03:23,959 --> 00:03:28,459
this is part factor and everything and

00:03:26,450 --> 00:03:33,470
you just need to put your code and we do

00:03:28,459 --> 00:03:36,170
the magic for you so this concept has a

00:03:33,470 --> 00:03:38,450
password is called service some people

00:03:36,170 --> 00:03:39,820
call it cloud functions some people for

00:03:38,450 --> 00:03:42,230
it has micro services

00:03:39,820 --> 00:03:45,680
some people iroquois at a function

00:03:42,230 --> 00:03:49,220
necessaries so whatever is safe actually

00:03:45,680 --> 00:03:53,269
it's just a server and it has everything

00:03:49,220 --> 00:03:58,750
that required for your use case preset

00:03:53,269 --> 00:03:58,750
UPS and another thing is actually

00:03:58,840 --> 00:04:04,940
but Oh skills support auto-scaling

00:04:02,030 --> 00:04:08,840
and you don't need to pay for your idle

00:04:04,940 --> 00:04:13,310
constant so if your application is not

00:04:08,840 --> 00:04:15,620
much using night time or some time cases

00:04:13,310 --> 00:04:18,560
we are in normal cloud cases you just

00:04:15,620 --> 00:04:21,139
keep your service running on but when it

00:04:18,560 --> 00:04:24,380
come to service it only charge for the

00:04:21,139 --> 00:04:27,230
request just fire it up and do the task

00:04:24,380 --> 00:04:29,300
and for the that amount of time that

00:04:27,230 --> 00:04:33,710
took for the task they only charge for

00:04:29,300 --> 00:04:36,620
that one so that is security service

00:04:33,710 --> 00:04:39,050
it's still someone else's service only

00:04:36,620 --> 00:04:41,120
thing that you need not no need to pay

00:04:39,050 --> 00:04:42,070
the idle cost plus it support

00:04:41,120 --> 00:04:45,680
auto-scaling

00:04:42,070 --> 00:04:49,130
so whatever number of because you're

00:04:45,680 --> 00:04:52,430
coming the server will be scaling and do

00:04:49,130 --> 00:04:53,419
the tasks for you and you don't need to

00:04:52,430 --> 00:04:54,950
learn about divorce

00:04:53,419 --> 00:04:57,850
you don't need to maintain the service

00:04:54,950 --> 00:05:02,180
you don't need to think about updates

00:04:57,850 --> 00:05:03,800
patches yeah everything is going on so

00:05:02,180 --> 00:05:08,720
what are the some of these platforms

00:05:03,800 --> 00:05:12,560
what is this one so India to Islam lamda

00:05:08,720 --> 00:05:16,130
which was the earliest in scale it was

00:05:12,560 --> 00:05:21,169
called early as Jos later became the

00:05:16,130 --> 00:05:23,630
lambda and cloud function from Google

00:05:21,169 --> 00:05:27,560
just Google code mentioned plus it as

00:05:23,630 --> 00:05:31,370
club mansion from firebase so yeah they

00:05:27,560 --> 00:05:33,500
join the band and as a from Microsoft

00:05:31,370 --> 00:05:38,030
they have their own functions so they

00:05:33,500 --> 00:05:42,760
also join s this one and the last time

00:05:38,030 --> 00:05:42,760
the web task io from watch it

00:05:43,820 --> 00:05:49,450
so you may think that if I am going to

00:05:47,120 --> 00:05:52,580
write an application in these things

00:05:49,450 --> 00:05:55,070
it's like you are depending on these

00:05:52,580 --> 00:05:57,710
platforms but there's a open source

00:05:55,070 --> 00:06:00,980
project called server largesse yeah you

00:05:57,710 --> 00:06:02,930
can use it and make it the provider with

00:06:00,980 --> 00:06:05,660
the ratings then you can actually run

00:06:02,930 --> 00:06:09,860
your service function you need almost

00:06:05,660 --> 00:06:11,210
these all four services so if you're

00:06:09,860 --> 00:06:16,250
going to start with we have tasks are

00:06:11,210 --> 00:06:22,520
you you just need to npm install that

00:06:16,250 --> 00:06:26,240
WTC Ella just globally and never come

00:06:22,520 --> 00:06:29,840
one will be about eating so do just WT

00:06:26,240 --> 00:06:31,940
any PT or email id going to give a count

00:06:29,840 --> 00:06:37,030
just from the command line sign up in

00:06:31,940 --> 00:06:39,860
there and this is the hello world

00:06:37,030 --> 00:06:45,680
yes export the module with the callback

00:06:39,860 --> 00:06:51,290
function and just go into the normal

00:06:45,680 --> 00:06:57,550
file and for Ronny we just type created

00:06:51,290 --> 00:06:57,550
a beauty create with your application

00:06:58,689 --> 00:07:07,679
yeah it is really painful no no it is

00:07:06,429 --> 00:07:10,869
not that hard

00:07:07,679 --> 00:07:13,110
so there's another way if you're not

00:07:10,869 --> 00:07:16,360
like a fan like me in common line

00:07:13,110 --> 00:07:20,379
doesn't rapira tell you just type w did

00:07:16,360 --> 00:07:25,689
it keep going to you use this URL which

00:07:20,379 --> 00:07:28,479
is going to be look like this this is

00:07:25,689 --> 00:07:36,399
the editor so let's get at some point

00:07:28,479 --> 00:07:39,129
you most suitable I hope you can all

00:07:36,399 --> 00:07:44,169
read it right so this is the basic

00:07:39,129 --> 00:07:48,459
editor from Episode II oh it's supposed

00:07:44,169 --> 00:07:52,269
not 8.0 and you can just type your

00:07:48,459 --> 00:07:56,919
normal JavaScript in here and you can

00:07:52,269 --> 00:08:01,349
serve it in like in here a just an

00:07:56,919 --> 00:08:05,379
endpoint so I have a small application

00:08:01,349 --> 00:08:09,389
which uses its own web browser your

00:08:05,379 --> 00:08:15,809
storage you guys to store JSON content

00:08:09,389 --> 00:08:15,809
if I run this it may explain it

00:08:17,660 --> 00:08:24,740
so it gives deep yes so let's it's

00:08:22,100 --> 00:08:26,930
cost-effective so if I want to put

00:08:24,740 --> 00:08:29,830
another data in here try this little

00:08:26,930 --> 00:08:29,830
pause request

00:08:37,430 --> 00:08:40,789
I'm not sure

00:08:42,760 --> 00:08:51,910
so it said sale which is from this part

00:08:46,899 --> 00:08:58,320
of the code so if I see okay with a get

00:08:51,910 --> 00:08:58,320
request you can go directly to the site

00:09:01,600 --> 00:09:11,470
so adult the tips that I fostered

00:09:05,260 --> 00:09:14,470
already let's get into a little bit easy

00:09:11,470 --> 00:09:17,320
example than this one to expect so this

00:09:14,470 --> 00:09:21,640
is the normal hello world that I

00:09:17,320 --> 00:09:23,680
explained it so it has about function a

00:09:21,640 --> 00:09:25,390
normal function with a callback so you

00:09:23,680 --> 00:09:29,050
just send whatever the thing that you

00:09:25,390 --> 00:09:31,630
need to output in here or you can go

00:09:29,050 --> 00:09:35,910
like little bit more like running a

00:09:31,630 --> 00:09:42,550
total Express server in the endpoint and

00:09:35,910 --> 00:09:45,450
you can even write your own maragon to

00:09:42,550 --> 00:09:45,450
just send an email

00:09:52,030 --> 00:09:58,000
so many possibilities other even you can

00:09:54,370 --> 00:10:03,880
run Skype payment so if I go to this URL

00:09:58,000 --> 00:10:07,170
you can just have any point to spell so

00:10:03,880 --> 00:10:10,780
this my API is really so if I play it

00:10:07,170 --> 00:10:17,920
it's going to give my anyway it's going

00:10:10,780 --> 00:10:20,410
to open it in test mode so it's going to

00:10:17,920 --> 00:10:23,140
be like that so every endpoint is a just

00:10:20,410 --> 00:10:25,510
an JavaScript endpoint you can put

00:10:23,140 --> 00:10:28,330
whatever you like express or whatever no

00:10:25,510 --> 00:10:31,240
you normally write in node.js you can

00:10:28,330 --> 00:10:33,820
put it and all the dependencies also you

00:10:31,240 --> 00:10:36,760
can install from here you just go to the

00:10:33,820 --> 00:10:38,110
earth you can see the old NPM

00:10:36,760 --> 00:10:40,690
dependencies and you can actually

00:10:38,110 --> 00:10:44,730
install whatever you the most are the

00:10:40,690 --> 00:10:44,730
dependencies you want in your project

00:10:49,840 --> 00:10:58,170
if I move the presentation again these

00:10:56,470 --> 00:11:03,090
are the limitations currently with the

00:10:58,170 --> 00:11:05,470
Laplace are you is it free yes it free

00:11:03,090 --> 00:11:07,779
there's a soft limit of one request for

00:11:05,470 --> 00:11:10,680
second but is it just a soft request I

00:11:07,779 --> 00:11:15,120
tried more than that so it's working and

00:11:10,680 --> 00:11:18,310
30 seconds of the execution limit and

00:11:15,120 --> 00:11:19,480
you can set up trend corndog schedules

00:11:18,310 --> 00:11:21,790
which I am going to explain what is

00:11:19,480 --> 00:11:26,170
actually this part the crown schedules

00:11:21,790 --> 00:11:32,320
and forth every caught fire this has a

00:11:26,170 --> 00:11:34,089
limit of under TV of four tasks and 400

00:11:32,320 --> 00:11:36,279
KB of the Jason story if you are going

00:11:34,089 --> 00:11:38,140
to use it rather than using normal

00:11:36,279 --> 00:11:41,230
nobody B or whatever you do a black

00:11:38,140 --> 00:11:46,720
thing and for resources you can go to

00:11:41,230 --> 00:11:49,150
your slash Docs just get into the web

00:11:46,720 --> 00:11:51,300
task Ron what is this task cronies in

00:11:49,150 --> 00:11:51,300
here

00:11:52,890 --> 00:11:57,120
so it was cronies actually

00:12:02,319 --> 00:12:09,239
is this normal kind of a Phoenix haunted

00:12:05,019 --> 00:12:12,399
but your service endpoint will be cold

00:12:09,239 --> 00:12:15,639
these given times that you set up so you

00:12:12,399 --> 00:12:19,869
can set up a time period that you want

00:12:15,639 --> 00:12:21,660
like in here instead you or you can use

00:12:19,869 --> 00:12:25,059
it in the command line also from the WT

00:12:21,660 --> 00:12:28,739
CLI you can share you endpoint to call

00:12:25,059 --> 00:12:32,049
on a given time in a given time so on

00:12:28,739 --> 00:12:34,929
just like a crontab so they every time

00:12:32,049 --> 00:12:37,720
the setup will be fired from here or you

00:12:34,929 --> 00:12:40,989
can actually have kind of hooks like

00:12:37,720 --> 00:12:43,509
from strike a hook from to a coil and

00:12:40,989 --> 00:12:50,319
web passing point so these kind of

00:12:43,509 --> 00:12:52,359
things are possible from here and that's

00:12:50,319 --> 00:12:56,759
all for my presentation and let's move

00:12:52,359 --> 00:12:56,759
to the questions

00:13:03,650 --> 00:13:20,030
I hope my time is going where you are

00:13:06,260 --> 00:13:22,100
will ahead right okay yeah yeah so so

00:13:20,030 --> 00:13:24,620
and what I haven't quite understand what

00:13:22,100 --> 00:13:27,380
the server does is it and what about

00:13:24,620 --> 00:13:28,970
state I saw you were having your saving

00:13:27,380 --> 00:13:32,210
something so the store which is separate

00:13:28,970 --> 00:13:34,250
from these functions in some way so this

00:13:32,210 --> 00:13:37,310
noise will remain until you an expansion

00:13:34,250 --> 00:13:39,290
yeah storage actually in web browser you

00:13:37,310 --> 00:13:42,230
store it actually a destination storage

00:13:39,290 --> 00:13:45,680
which is a persistable storage apart

00:13:42,230 --> 00:13:47,750
from the idle time okay so it is only in

00:13:45,680 --> 00:13:49,640
point then it is only going to charge

00:13:47,750 --> 00:13:51,740
for the end phone call but not for a

00:13:49,640 --> 00:13:56,270
storage actually here is actually free

00:13:51,740 --> 00:13:59,750
total people nobody else and you can

00:13:56,270 --> 00:14:01,760
actually connect your MongoDB or normal

00:13:59,750 --> 00:14:03,830
database back in there and only when you

00:14:01,760 --> 00:14:10,060
call it's great updated in a database

00:14:03,830 --> 00:14:10,060
still there others

00:14:11,760 --> 00:14:18,210
once

00:14:14,010 --> 00:14:19,810
I'm twice okay thank you very much thank

00:14:18,210 --> 00:14:23,940
you very much for getting us in here

00:14:19,810 --> 00:14:23,940

YouTube URL: https://www.youtube.com/watch?v=9Xx1_gtwiV4


