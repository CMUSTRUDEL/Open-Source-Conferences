Title: Fedora CoreOS - best host for your containers by Sinny Kumari
Publication date: 2019-03-29
Playlist: FOSSASIA Summit 2019 - Cloud, Containers, DevOps
Description: 
	17 March 2019 14:00, Training Room 2-2

Fedora CoreOS is an Operating System which emerged from the best of both Fedora Atomic Host and Container Linux. It provides unique features like immutability, automatic updates and rollback so that you don't have to worry about the host. It is also optimized to run/manage both standalone and a cluster of containerized applications. Fedora CoreOS community is working towards its first version release with a likely target being Fedora 30 release.

During this talk, you will get to know:

* What is Fedora CoreOS and its underlying history

* Features which makes this OS unique and fit for running containers

* Tools like ignition and rpm-ostree to manage your host

* Availability in cloud providers

* Demo (if time permits)

* How you can get involved

Know more about Fedora CoreOS from https://coreos.fedoraproject.org/
Captions: 
	00:00:00,120 --> 00:00:04,950
so in this talk I will talk about the

00:00:03,090 --> 00:00:07,049
Fedora core OS which is kind of

00:00:04,950 --> 00:00:11,160
sister-brother whatever you say of a

00:00:07,049 --> 00:00:14,250
sever blue and it will see why the

00:00:11,160 --> 00:00:19,350
federal chorus is best for landing your

00:00:14,250 --> 00:00:23,609
containers before talking more I'd like

00:00:19,350 --> 00:00:27,210
to know who all are using fedora or at

00:00:23,609 --> 00:00:32,059
least know what ever used fedora okay

00:00:27,210 --> 00:00:37,649
that's nice and who knows what Fedora

00:00:32,059 --> 00:00:42,030
atomic host okay that's nice and about

00:00:37,649 --> 00:00:44,460
continually looks okay that that's

00:00:42,030 --> 00:00:46,170
that's actually good it's not like we

00:00:44,460 --> 00:00:49,140
don't have anyone here who knows about

00:00:46,170 --> 00:00:52,050
it so it's like good good audience okay

00:00:49,140 --> 00:00:55,500
so we'll see what for the record is is

00:00:52,050 --> 00:00:57,629
and which all features it provides to

00:00:55,500 --> 00:01:01,109
you and why it's based sauce for our

00:00:57,629 --> 00:01:04,979
containers and we are exactly we stand

00:01:01,109 --> 00:01:06,780
today in federal chorus and how I can

00:01:04,979 --> 00:01:10,409
get involved if you're interested or if

00:01:06,780 --> 00:01:13,530
you want to try out okay it's a federal

00:01:10,409 --> 00:01:16,200
color is it's the minimal operating

00:01:13,530 --> 00:01:20,970
system optimized for running containers

00:01:16,200 --> 00:01:23,939
and its its goal is to automatically

00:01:20,970 --> 00:01:26,939
update your system so they are there are

00:01:23,939 --> 00:01:28,979
three things and let me clear it's it's

00:01:26,939 --> 00:01:31,049
four server just in case you are

00:01:28,979 --> 00:01:33,540
confused why we are both silver blue and

00:01:31,049 --> 00:01:36,329
silver cutaways so this for the chorus

00:01:33,540 --> 00:01:39,420
has mainly focus for this running on the

00:01:36,329 --> 00:01:43,590
server which is targeting to basically

00:01:39,420 --> 00:01:46,560
containers and controls workflow so the

00:01:43,590 --> 00:01:49,049
mean the many potential is that you

00:01:46,560 --> 00:01:52,530
would like to run clusters of containers

00:01:49,049 --> 00:01:54,149
so that's where you should use it or if

00:01:52,530 --> 00:01:57,210
you want to run a single node container

00:01:54,149 --> 00:02:02,700
that's also you can use this system for

00:01:57,210 --> 00:02:05,159
and it's basically mainly designed to do

00:02:02,700 --> 00:02:08,160
your container workflow in kind of

00:02:05,159 --> 00:02:10,770
clusters of clusters and if you can run

00:02:08,160 --> 00:02:13,340
on top of it's optimized to run the

00:02:10,770 --> 00:02:15,950
cumulative class communities and of

00:02:13,340 --> 00:02:19,849
or maybe without Cuban it is also it

00:02:15,950 --> 00:02:23,030
will just run fine also it's the project

00:02:19,849 --> 00:02:25,129
is under Fedora umbrella so you you can

00:02:23,030 --> 00:02:27,410
think that it's what you get in the

00:02:25,129 --> 00:02:30,110
regular Fedora like whatever rpms you

00:02:27,410 --> 00:02:32,450
have we built in Fedora which is get

00:02:30,110 --> 00:02:35,390
find and all are like from touch trust

00:02:32,450 --> 00:02:38,450
us please so this Fedora chorus also you

00:02:35,390 --> 00:02:40,970
make you use of all the packages which

00:02:38,450 --> 00:02:42,890
we have in fedora it's just that the

00:02:40,970 --> 00:02:45,980
packages it does not directly consumed

00:02:42,890 --> 00:02:48,829
it's just it uses a cream OS tree which

00:02:45,980 --> 00:02:52,160
creates a tree of the whole whole

00:02:48,829 --> 00:02:54,380
packages into a object format of the

00:02:52,160 --> 00:02:56,870
format is history which is uses

00:02:54,380 --> 00:02:59,030
internally antov and that's how you have

00:02:56,870 --> 00:03:02,900
the operating system we'll see more in

00:02:59,030 --> 00:03:06,590
later on also the federal choruses Ã¶ktem

00:03:02,900 --> 00:03:10,430
4rh chorus so if you haven't really used

00:03:06,590 --> 00:03:12,890
rh chorus then maybe you can try this

00:03:10,430 --> 00:03:17,290
and get a fill but it has some broader

00:03:12,890 --> 00:03:21,400
scope then what we have for our H chorus

00:03:17,290 --> 00:03:24,620
okay yeah I think by looking at this

00:03:21,400 --> 00:03:28,760
picture you can get some idea about what

00:03:24,620 --> 00:03:31,280
Fedora core OS is so if it's just like

00:03:28,760 --> 00:03:34,130
it's the combination of what we have

00:03:31,280 --> 00:03:38,810
from Fedora Tomic host and what we have

00:03:34,130 --> 00:03:42,410
in container Linux so I will tell you we

00:03:38,810 --> 00:03:44,859
want here in the Fedora core OS that we

00:03:42,410 --> 00:03:48,910
want to keep the community which we have

00:03:44,859 --> 00:03:51,470
in the Fedora atomic host and from the

00:03:48,910 --> 00:03:53,569
community from container Linux so we

00:03:51,470 --> 00:03:56,120
want to keep the community grow the

00:03:53,569 --> 00:03:59,660
community keep their users so that

00:03:56,120 --> 00:04:08,269
everyone is happy and we haven't good

00:03:59,660 --> 00:04:11,599
federal code is for all the users so

00:04:08,269 --> 00:04:13,790
we'll see how exactly these these

00:04:11,599 --> 00:04:16,250
features from Twitter atomic host and

00:04:13,790 --> 00:04:19,010
fedora and the container Linux fits in

00:04:16,250 --> 00:04:20,239
together in Fedora chorus let's see

00:04:19,010 --> 00:04:23,790
first the features of

00:04:20,239 --> 00:04:26,160
the operating system itself as

00:04:23,790 --> 00:04:29,580
so the this operating system is based on

00:04:26,160 --> 00:04:32,690
history and art history as we talked

00:04:29,580 --> 00:04:37,860
before and it's an in which table host

00:04:32,690 --> 00:04:40,560
which means that the the slash vessel

00:04:37,860 --> 00:04:43,950
which is majorly the main part of your

00:04:40,560 --> 00:04:47,130
operating system it's a it's a read-only

00:04:43,950 --> 00:04:48,810
file system for the saris not read-only

00:04:47,130 --> 00:04:50,790
file system for entire operating system

00:04:48,810 --> 00:04:53,760
it's the read-only file system for slash

00:04:50,790 --> 00:04:56,940
events so all the binaries which we

00:04:53,760 --> 00:04:59,640
which is created from the generally rpms

00:04:56,940 --> 00:05:02,820
or anything it's slashes are been nor it

00:04:59,640 --> 00:05:05,130
will mean slash s slash yourself in on

00:05:02,820 --> 00:05:07,890
anything else so basically all are in

00:05:05,130 --> 00:05:11,040
read mode so so that this is to help you

00:05:07,890 --> 00:05:13,020
to not do any accidental damage to your

00:05:11,040 --> 00:05:15,180
system and because we want to run in an

00:05:13,020 --> 00:05:17,130
automated fashion and in the container

00:05:15,180 --> 00:05:20,190
workflow where we just basically want to

00:05:17,130 --> 00:05:22,410
create once the we want to create our

00:05:20,190 --> 00:05:24,660
infrastructure once and we want to keep

00:05:22,410 --> 00:05:26,670
keep it running without much

00:05:24,660 --> 00:05:28,770
intervention without breaking it so that

00:05:26,670 --> 00:05:31,140
our clusters and everything keeps

00:05:28,770 --> 00:05:37,140
running smoothly like forever we'll see

00:05:31,140 --> 00:05:42,360
why why I am saying forever ok and so ok

00:05:37,140 --> 00:05:43,890
so it uses ignition so if you are from

00:05:42,360 --> 00:05:46,380
continually next while you already know

00:05:43,890 --> 00:05:50,280
the ignition this this is being used

00:05:46,380 --> 00:05:53,700
during the boot time so when the first

00:05:50,280 --> 00:05:57,060
time the system gets booted in during

00:05:53,700 --> 00:05:58,980
the any travel face face it it has the

00:05:57,060 --> 00:06:01,920
ignition and it shakes the ignition

00:05:58,980 --> 00:06:05,580
country and it will do the concentration

00:06:01,920 --> 00:06:08,310
like this partitioning or user creation

00:06:05,580 --> 00:06:11,520
all the stuff will be done at when the

00:06:08,310 --> 00:06:13,940
system first boots so that's that one

00:06:11,520 --> 00:06:18,530
the advantage of this ignition is that

00:06:13,940 --> 00:06:20,820
if you if you have a good good

00:06:18,530 --> 00:06:23,790
configuration of ignition then

00:06:20,820 --> 00:06:26,730
everything will happen before the system

00:06:23,790 --> 00:06:29,160
boots because you are this is running

00:06:26,730 --> 00:06:32,160
and the elite Rama phase phase where

00:06:29,160 --> 00:06:35,250
system has not really got transferred to

00:06:32,160 --> 00:06:35,790
the user space so if if something goes

00:06:35,250 --> 00:06:36,970
wrong

00:06:35,790 --> 00:06:39,880
basically your sister

00:06:36,970 --> 00:06:41,590
that won't come up so either you have a

00:06:39,880 --> 00:06:44,050
running system or you don't have a

00:06:41,590 --> 00:06:47,080
system so it's not like in stained state

00:06:44,050 --> 00:06:49,840
like when you use cloud in it you may

00:06:47,080 --> 00:06:52,540
have a running system but it may not be

00:06:49,840 --> 00:06:55,030
configured properly if something in the

00:06:52,540 --> 00:06:58,870
chronic totally doesn't go well so these

00:06:55,030 --> 00:07:01,060
kind of stuff get like you we don't have

00:06:58,870 --> 00:07:02,920
to worry about those either you get a

00:07:01,060 --> 00:07:06,790
good system or you don't get a system

00:07:02,920 --> 00:07:10,060
that really helps also another feature

00:07:06,790 --> 00:07:11,950
of this is rolling release this is

00:07:10,060 --> 00:07:15,010
through the motivation from the

00:07:11,950 --> 00:07:16,900
container Linux in container Linux as I

00:07:15,010 --> 00:07:19,560
think you said that we have three

00:07:16,900 --> 00:07:22,750
channels like alpha beta and stable so

00:07:19,560 --> 00:07:25,180
these channels you get different the

00:07:22,750 --> 00:07:27,700
alpha is like the ticks which is about

00:07:25,180 --> 00:07:29,950
to come and then beat eyes like a bit

00:07:27,700 --> 00:07:32,530
more bactine when stable is watch is

00:07:29,950 --> 00:07:35,020
like even more registered so we have

00:07:32,530 --> 00:07:39,010
different different approach of getting

00:07:35,020 --> 00:07:41,050
how stable you can get so similarly in

00:07:39,010 --> 00:07:44,800
Fedora core OS there will be three

00:07:41,050 --> 00:07:47,520
streams it will be next and there will

00:07:44,800 --> 00:07:51,190
be a testing and there will be stable so

00:07:47,520 --> 00:07:54,340
it is a bit different meaning stable is

00:07:51,190 --> 00:07:57,070
what you have very stable and testing is

00:07:54,340 --> 00:07:59,590
what which is going to come next in your

00:07:57,070 --> 00:08:04,030
step in moving to stable so everything

00:07:59,590 --> 00:08:06,370
better maybe less this trade you can say

00:08:04,030 --> 00:08:09,250
which is my main you can find some box

00:08:06,370 --> 00:08:12,250
during testing then it won't go into

00:08:09,250 --> 00:08:15,610
stable so it will get it fixed before

00:08:12,250 --> 00:08:16,360
that so and the next is thread was going

00:08:15,610 --> 00:08:20,710
to come next

00:08:16,360 --> 00:08:23,200
like right now is Fedora 29 and we are

00:08:20,710 --> 00:08:25,600
going to have further 30 so so if

00:08:23,200 --> 00:08:29,290
suppose we have pre doryphoros today the

00:08:25,600 --> 00:08:31,180
stable will be from Fedora 29 and the

00:08:29,290 --> 00:08:33,280
further and the next we'll have the

00:08:31,180 --> 00:08:35,589
package is from Peter 30 so you will

00:08:33,280 --> 00:08:37,960
know that what's going to come next so

00:08:35,589 --> 00:08:41,349
you will give the feedback to us in

00:08:37,960 --> 00:08:43,870
advance and all will have the CI and all

00:08:41,349 --> 00:08:47,080
will be well tested so these all three

00:08:43,870 --> 00:08:50,240
streams will be released mostly like two

00:08:47,080 --> 00:08:52,520
in two weeks so you keep getting

00:08:50,240 --> 00:08:54,380
good feedbacks from the beginning and if

00:08:52,520 --> 00:08:56,270
there is some security issues or

00:08:54,380 --> 00:08:58,700
something comes then we will apply all

00:08:56,270 --> 00:09:01,070
those fixes on all the three branches so

00:08:58,700 --> 00:09:04,100
we'll try to keep everything stable so

00:09:01,070 --> 00:09:06,350
you users are like you can run some

00:09:04,100 --> 00:09:08,960
wherever they want like they cancel have

00:09:06,350 --> 00:09:12,200
some notes on stable some notes on

00:09:08,960 --> 00:09:15,230
testing and so next so that you know how

00:09:12,200 --> 00:09:17,060
the next is going to look and what you

00:09:15,230 --> 00:09:19,400
should have be having in the stable so

00:09:17,060 --> 00:09:21,920
so that this helps to keep your system

00:09:19,400 --> 00:09:26,720
always stable and without breaking and

00:09:21,920 --> 00:09:29,570
yeah and yeah one feature I just

00:09:26,720 --> 00:09:31,520
mentioned is the no Python because we

00:09:29,570 --> 00:09:34,520
really if I Phineas like everywhere but

00:09:31,520 --> 00:09:37,370
in Korres we are trying to keep things

00:09:34,520 --> 00:09:40,130
minimal so we do not really need Python

00:09:37,370 --> 00:09:43,250
there and the main reason is the Python

00:09:40,130 --> 00:09:45,980
makes things it just reduces the email

00:09:43,250 --> 00:09:48,350
size also and you don't have to worry

00:09:45,980 --> 00:09:51,020
about the Python whole stack so if this

00:09:48,350 --> 00:09:54,440
really reduces the a bit risk it won't

00:09:51,020 --> 00:09:58,340
have to care about the security security

00:09:54,440 --> 00:10:00,800
issues which came to Python and it keeps

00:09:58,340 --> 00:10:09,380
things minimal and we are trying to work

00:10:00,800 --> 00:10:11,300
on that to have no Python okay so we are

00:10:09,380 --> 00:10:14,240
all it should be available we are

00:10:11,300 --> 00:10:16,280
targeting mostly from running you can

00:10:14,240 --> 00:10:19,640
run in your bare metal system by

00:10:16,280 --> 00:10:21,140
installing ISO or through PXE and it

00:10:19,640 --> 00:10:24,770
cannot spawn in a virtualized

00:10:21,140 --> 00:10:26,810
environment like qumu or liquid qmu and

00:10:24,770 --> 00:10:30,560
VirtualBox and also to the various

00:10:26,810 --> 00:10:36,680
different cloud providers like GC GC and

00:10:30,560 --> 00:10:39,740
aw is assured and OpenStack etc and we

00:10:36,680 --> 00:10:43,400
are also targeting the x86 architecture

00:10:39,740 --> 00:10:48,320
and other two are like arks 64-bit and

00:10:43,400 --> 00:10:50,690
RPC is 64-bit le so currently the more

00:10:48,320 --> 00:10:54,740
work is to us exit a 64 but people are

00:10:50,690 --> 00:10:57,650
who apparently heavily have also trying

00:10:54,740 --> 00:11:00,140
to do the things on add 64 and PowerPC

00:10:57,650 --> 00:11:01,800
so they are also going really well it

00:11:00,140 --> 00:11:04,709
will take some time and

00:11:01,800 --> 00:11:06,300
let's see how how and when we get all

00:11:04,709 --> 00:11:09,300
the three I could take just in one place

00:11:06,300 --> 00:11:15,269
but exist if the 64 is like first we

00:11:09,300 --> 00:11:17,399
want to get and that architecture okay

00:11:15,269 --> 00:11:19,649
so we have seen all the features which

00:11:17,399 --> 00:11:22,049
this operating system provides to you so

00:11:19,649 --> 00:11:24,600
why this is really based hoster you

00:11:22,049 --> 00:11:26,879
should consider to run your your

00:11:24,600 --> 00:11:29,040
containers this is because this is

00:11:26,879 --> 00:11:31,199
minimal as a tool we don't have any

00:11:29,040 --> 00:11:33,749
extra packages other than what you

00:11:31,199 --> 00:11:36,329
required for running the containers it

00:11:33,749 --> 00:11:38,939
also provides you the it also provides

00:11:36,329 --> 00:11:40,980
to the all the container runtimes which

00:11:38,939 --> 00:11:43,790
is required to run the container like

00:11:40,980 --> 00:11:47,730
docker also part man

00:11:43,790 --> 00:11:51,059
surround the run see so you don't need

00:11:47,730 --> 00:11:53,309
to really install anything else and and

00:11:51,059 --> 00:11:55,889
in sinful blue we have seen that we also

00:11:53,309 --> 00:11:58,290
support package layering but here we

00:11:55,889 --> 00:12:01,110
really don't encourage people to do

00:11:58,290 --> 00:12:03,029
package nearing if if we need to do some

00:12:01,110 --> 00:12:05,850
pipe in erie it maybe some case-by-case

00:12:03,029 --> 00:12:07,829
basis but we don't do that the reason is

00:12:05,850 --> 00:12:10,860
that we don't we want to run it in a

00:12:07,829 --> 00:12:13,529
place where we you don't have to keep

00:12:10,860 --> 00:12:15,480
into a intervening your system it should

00:12:13,529 --> 00:12:17,429
be like running every time without any

00:12:15,480 --> 00:12:19,949
problem so if you have more package

00:12:17,429 --> 00:12:21,990
layer it can create issues like because

00:12:19,949 --> 00:12:24,959
you are adding more layer and layer so

00:12:21,990 --> 00:12:28,049
and those are not tested by us we are

00:12:24,959 --> 00:12:29,970
only testing and the base of interest of

00:12:28,049 --> 00:12:32,100
which we are giving and the package

00:12:29,970 --> 00:12:34,709
loading which me or you are doing is its

00:12:32,100 --> 00:12:37,799
kind it can have some issues are so

00:12:34,709 --> 00:12:40,740
really in in the service server workflow

00:12:37,799 --> 00:12:44,160
we are not really recommend to do the

00:12:40,740 --> 00:12:46,139
package layering and yeah it has

00:12:44,160 --> 00:12:48,660
multiple strains so you whatever you

00:12:46,139 --> 00:12:50,610
want to try out weather testing next or

00:12:48,660 --> 00:12:52,259
stable you can try it and try the

00:12:50,610 --> 00:12:54,179
feature early or if you want to be

00:12:52,259 --> 00:12:56,790
unstable you can be unstable so it

00:12:54,179 --> 00:13:01,610
really allows you to to stay where you

00:12:56,790 --> 00:13:04,739
want to go yeah and the current status

00:13:01,610 --> 00:13:06,959
so this is a new operating system which

00:13:04,739 --> 00:13:09,689
we are designing based on continually

00:13:06,959 --> 00:13:11,429
nuts and Fedora atomic hosts so this is

00:13:09,689 --> 00:13:14,549
not really currently released

00:13:11,429 --> 00:13:15,270
we have Fedora Tommy cost in 29 if you

00:13:14,549 --> 00:13:17,279
want to try

00:13:15,270 --> 00:13:19,290
and if we have container Linux also if

00:13:17,279 --> 00:13:20,640
you want to try it continue index so you

00:13:19,290 --> 00:13:23,250
can go ahead and try those and get a

00:13:20,640 --> 00:13:25,880
feel of that and this the federal

00:13:23,250 --> 00:13:29,220
currency is likely currently in the

00:13:25,880 --> 00:13:32,220
development phase and the tiger it is to

00:13:29,220 --> 00:13:35,100
have it after Fedora 30 so wind up

00:13:32,220 --> 00:13:37,589
iteratively release will take the

00:13:35,100 --> 00:13:40,230
package from pure authority and updates

00:13:37,589 --> 00:13:44,430
are available in fidelity and use that

00:13:40,230 --> 00:13:49,080
and make that into the as a preview form

00:13:44,430 --> 00:13:51,630
so so that will help us to get some

00:13:49,080 --> 00:13:55,410
feedback from users from patina Linux

00:13:51,630 --> 00:13:57,899
and atomic host to know whether where we

00:13:55,410 --> 00:13:59,670
are which features we are missing so so

00:13:57,899 --> 00:14:02,670
that we don't really want to make it

00:13:59,670 --> 00:14:04,920
stable now and break your system later

00:14:02,670 --> 00:14:07,589
on it's better to keep it in preview get

00:14:04,920 --> 00:14:11,220
the feedback and have most likely will

00:14:07,589 --> 00:14:14,610
have the stable release or where you can

00:14:11,220 --> 00:14:18,480
rely on after through the 31 which will

00:14:14,610 --> 00:14:20,570
be based on 431 content and Atma okay I

00:14:18,480 --> 00:14:22,079
forgot to tell the advantage of

00:14:20,570 --> 00:14:25,649
different streams

00:14:22,079 --> 00:14:28,589
so like intentional Linux I think is

00:14:25,649 --> 00:14:32,250
once you install the system on I think

00:14:28,589 --> 00:14:34,050
if you're in beta or any stable channel

00:14:32,250 --> 00:14:37,110
you always cared or rolling releases

00:14:34,050 --> 00:14:38,760
like never had to switch to any other or

00:14:37,110 --> 00:14:42,600
upgrade or anything like that you can

00:14:38,760 --> 00:14:45,930
keep updating similarly here once we

00:14:42,600 --> 00:14:49,170
move to the stable release you can be on

00:14:45,930 --> 00:14:51,420
stable and once you have installed it

00:14:49,170 --> 00:14:53,670
will keep updating the system every time

00:14:51,420 --> 00:14:56,100
it have releases like it will have two

00:14:53,670 --> 00:14:59,459
weeks releases mostly unless there is

00:14:56,100 --> 00:15:01,860
some security security fixes so we can

00:14:59,459 --> 00:15:04,110
have some out of cycle releases also so

00:15:01,860 --> 00:15:06,450
you just install once and keep running

00:15:04,110 --> 00:15:07,920
keep getting update for a system so you

00:15:06,450 --> 00:15:09,870
don't have to worry about your system

00:15:07,920 --> 00:15:12,750
and you can have your own cluster

00:15:09,870 --> 00:15:14,130
running kubernetes or okd or anything

00:15:12,750 --> 00:15:16,890
else whatever you want to try the

00:15:14,130 --> 00:15:18,779
container run containers stuff so you

00:15:16,890 --> 00:15:19,320
don't really need to worry about your

00:15:18,779 --> 00:15:21,630
hosts

00:15:19,320 --> 00:15:23,310
just keep running and it will keep

00:15:21,630 --> 00:15:25,310
getting updated when further there is

00:15:23,310 --> 00:15:28,110
new release of fedora then

00:15:25,310 --> 00:15:30,930
updated content based on the new

00:15:28,110 --> 00:15:33,600
releases and you will be always on the

00:15:30,930 --> 00:15:36,360
same system and will try a little bit

00:15:33,600 --> 00:15:38,399
focusing on making it automatic updated

00:15:36,360 --> 00:15:43,860
so that it really don't have to do

00:15:38,399 --> 00:15:46,649
anything and we are also producing the

00:15:43,860 --> 00:15:49,230
artefact currently which is really

00:15:46,649 --> 00:15:52,110
currently mostly developers are creating

00:15:49,230 --> 00:15:53,819
it is not it's not really like very

00:15:52,110 --> 00:15:57,389
tested of something but if you want to

00:15:53,819 --> 00:16:00,329
try out you can go and try these from

00:15:57,389 --> 00:16:03,060
its in currently built in the center's

00:16:00,329 --> 00:16:05,279
pipe CI pipeline and they are available

00:16:03,060 --> 00:16:07,290
I will show the link later on which all

00:16:05,279 --> 00:16:09,509
artifacts are currently there and also

00:16:07,290 --> 00:16:13,560
we are very close to shipping no no pipe

00:16:09,509 --> 00:16:17,399
and autonomy in the host I am personally

00:16:13,560 --> 00:16:19,920
working on that mainly and we have like

00:16:17,399 --> 00:16:23,850
six or seven packages of item currently

00:16:19,920 --> 00:16:26,519
available in the host and mostly we have

00:16:23,850 --> 00:16:28,800
tried to remove whatever the Python

00:16:26,519 --> 00:16:31,860
things are there and some of the some of

00:16:28,800 --> 00:16:34,589
the packages really are pythons what we

00:16:31,860 --> 00:16:37,050
are trying to see if it fits you can use

00:16:34,589 --> 00:16:40,110
those utilities from the containers so

00:16:37,050 --> 00:16:42,720
so really on the host know Python so it

00:16:40,110 --> 00:16:47,220
really reduces so mostly we'll be able

00:16:42,720 --> 00:16:50,399
to achieve its own and we have we have a

00:16:47,220 --> 00:16:52,560
track we're here for the 2-dose on what

00:16:50,399 --> 00:16:54,480
things are completed so if you want to

00:16:52,560 --> 00:16:56,519
look ahead and get some idea and feel

00:16:54,480 --> 00:16:58,980
you can see there we have already

00:16:56,519 --> 00:17:01,769
finished lots of design making the

00:16:58,980 --> 00:17:03,660
season what we really want to keep in in

00:17:01,769 --> 00:17:05,579
Fedora chorus because we have learned

00:17:03,660 --> 00:17:07,829
from container Linux and we learned from

00:17:05,579 --> 00:17:10,079
Fedora atomic boost so we want to be

00:17:07,829 --> 00:17:13,130
better than bit take better things and

00:17:10,079 --> 00:17:15,240
just extrude whatever was not really

00:17:13,130 --> 00:17:17,699
maybe pain points or something

00:17:15,240 --> 00:17:20,069
so keep the good things I'm to see there

00:17:17,699 --> 00:17:21,780
and make the flora chorus even better so

00:17:20,069 --> 00:17:25,169
we made a lot of design decisions

00:17:21,780 --> 00:17:26,730
already and then we are we're working a

00:17:25,169 --> 00:17:29,460
loss of features already and getting

00:17:26,730 --> 00:17:35,669
implemented and aggregated and give you

00:17:29,460 --> 00:17:36,929
a good Fedora chorus and that's all if

00:17:35,669 --> 00:17:37,950
you want to get involved there are

00:17:36,929 --> 00:17:40,110
various ways

00:17:37,950 --> 00:17:43,620
go to the suit record or join our

00:17:40,110 --> 00:17:46,020
mailing list and we are there forum also

00:17:43,620 --> 00:17:48,600
if you want to ask question go to go to

00:17:46,020 --> 00:17:51,330
the community i also meeting also we

00:17:48,600 --> 00:17:57,480
have epic finale meeting which we do

00:17:51,330 --> 00:18:00,000
every two week in iran 5 5 u DC so it

00:17:57,480 --> 00:18:02,340
will work it is friendly for a pack also

00:18:00,000 --> 00:18:06,600
we have a regular I am Semitic on every

00:18:02,340 --> 00:18:08,760
Wednesday around 4:30 UTC so whatever

00:18:06,600 --> 00:18:11,010
time works for you you can come join the

00:18:08,760 --> 00:18:14,730
meeting ask questions or maybe just ask

00:18:11,010 --> 00:18:17,030
on mailing list or or anywhere whatever

00:18:14,730 --> 00:18:26,070
is comfortable and it will help us

00:18:17,030 --> 00:18:28,290
that's all and yeah so these are the

00:18:26,070 --> 00:18:33,750
artists activity we are now creating

00:18:28,290 --> 00:18:37,950
nightly basis cotton and you will find

00:18:33,750 --> 00:18:42,000
on you fine moon goblet that images and

00:18:37,950 --> 00:18:44,460
oh yeah OpenStack unit so so all are all

00:18:42,000 --> 00:18:48,240
everything is we are using the core OSS

00:18:44,460 --> 00:18:50,010
of net to build everything so this is a

00:18:48,240 --> 00:18:51,930
tool so really if you want to try out

00:18:50,010 --> 00:18:54,480
this is the best way all the

00:18:51,930 --> 00:18:58,740
instructions are mentioned here so it's

00:18:54,480 --> 00:19:01,470
really very easy to try I'm sorry I'm at

00:18:58,740 --> 00:19:03,930
wrong place these are the links so

00:19:01,470 --> 00:19:06,000
basically you it's like a chorus

00:19:03,930 --> 00:19:08,790
assemblage self is in a container image

00:19:06,000 --> 00:19:11,310
so it pulls in and then it does is just

00:19:08,790 --> 00:19:14,850
to chorus a sample fetch build and

00:19:11,310 --> 00:19:17,220
create stock compose of OS tree on your

00:19:14,850 --> 00:19:19,470
local system and then you have the

00:19:17,220 --> 00:19:21,830
artifacts whatever you want you can give

00:19:19,470 --> 00:19:25,140
the parameter sending and try it out and

00:19:21,830 --> 00:19:28,620
if something is not there you can make a

00:19:25,140 --> 00:19:31,170
request or talk to us on mailing list or

00:19:28,620 --> 00:19:33,300
as a channel and we can may include

00:19:31,170 --> 00:19:34,950
something which we have not yet learned

00:19:33,300 --> 00:19:38,150
because we don't know if that's a use

00:19:34,950 --> 00:19:42,980
case but we are open for everything

00:19:38,150 --> 00:19:42,980
that's pretty much any questions

00:19:57,860 --> 00:20:07,650
that's on the test for contain managing

00:20:03,300 --> 00:20:10,710
the managing that oh that containers

00:20:07,650 --> 00:20:13,770
right and that's not part of the

00:20:10,710 --> 00:20:18,510
continual units itself tectonic is part

00:20:13,770 --> 00:20:47,690
of on top of on top of the container

00:20:18,510 --> 00:20:47,690
index right I know that but it's like

00:21:11,030 --> 00:21:16,920
anything else maybe silver blue or in

00:21:14,070 --> 00:21:41,940
general or any question like chorus

00:21:16,920 --> 00:21:46,380
maybe we have in core OS both point man

00:21:41,940 --> 00:21:49,260
and talk movie whatever is the open

00:21:46,380 --> 00:21:53,780
source version so we are keeping both is

00:21:49,260 --> 00:21:56,940
for now mostly the plan is to keep both

00:21:53,780 --> 00:21:57,840
we we focus more on Parliament because

00:21:56,940 --> 00:22:00,600
it's

00:21:57,840 --> 00:22:04,049
it said oh she OCI based and it's like

00:22:00,600 --> 00:22:06,809
more open to take our feedback and and

00:22:04,049 --> 00:22:09,480
have the PRS ready and it's really

00:22:06,809 --> 00:22:11,700
because for dr. as far as I know for

00:22:09,480 --> 00:22:14,309
some patches people were having hard

00:22:11,700 --> 00:22:16,770
time to get it miles into docker and

00:22:14,309 --> 00:22:18,809
also there may be some time licensing

00:22:16,770 --> 00:22:21,000
this way long but here is like multiple

00:22:18,809 --> 00:22:24,150
companies are involved and it's more

00:22:21,000 --> 00:23:01,020
kind of open space so feels better to

00:22:24,150 --> 00:23:03,690
move forward yes you can but for now we

00:23:01,020 --> 00:23:06,210
don't have any image running because a

00:23:03,690 --> 00:23:09,120
lot of stuff are coming from container

00:23:06,210 --> 00:23:11,940
linux and some stuff for like and we are

00:23:09,120 --> 00:23:15,029
still working on coating and coating

00:23:11,940 --> 00:23:18,149
stuff which is fixing bugs and all so

00:23:15,029 --> 00:23:20,570
it's really in we are trying our best to

00:23:18,149 --> 00:23:24,000
have that included so once we have our

00:23:20,570 --> 00:23:28,169
64 support available we can obviously

00:23:24,000 --> 00:23:31,770
try on orders verify thanks but the main

00:23:28,169 --> 00:23:34,140
target is for server side but yeah it's

00:23:31,770 --> 00:23:35,940
always good because in atomic host we we

00:23:34,140 --> 00:23:38,100
are trying also to learn it will last

00:23:35,940 --> 00:23:40,140
very PI because it's easier that people

00:23:38,100 --> 00:23:43,580
can try in general people can try

00:23:40,140 --> 00:23:43,580
everyone don't have the server

00:24:04,610 --> 00:24:11,659
so far we have we don't have any CI we

00:24:09,320 --> 00:24:14,750
are right now working on designing the

00:24:11,659 --> 00:24:18,250
streams various trees we just we just

00:24:14,750 --> 00:24:21,500
planned which all streams we want and

00:24:18,250 --> 00:24:23,179
how we want so the CI part is still

00:24:21,500 --> 00:24:26,900
needs to be done but definitely we are

00:24:23,179 --> 00:24:30,110
going to have and also we have we have

00:24:26,900 --> 00:24:32,870
the mental which have Cola which does

00:24:30,110 --> 00:24:35,929
already lot of testing like launching

00:24:32,870 --> 00:24:38,450
lots launching images you know what sure

00:24:35,929 --> 00:24:41,090
but should only work you know or

00:24:38,450 --> 00:24:43,520
anything or in the AWS or something like

00:24:41,090 --> 00:24:46,159
I think it's they have very nice testing

00:24:43,520 --> 00:24:49,760
coverage block of testing and all so we

00:24:46,159 --> 00:24:53,480
will make use of Cola a lot other than

00:24:49,760 --> 00:24:55,549
that we'll see at package level we will

00:24:53,480 --> 00:24:57,320
try like if there is a new package which

00:24:55,549 --> 00:24:59,720
we want to in so we will have a new

00:24:57,320 --> 00:25:03,650
artifacts and then we'll try to run the

00:24:59,720 --> 00:25:34,700
CI on that still in like not like

00:25:03,650 --> 00:25:39,230
everything is planned at that area new

00:25:34,700 --> 00:25:42,080
version of docker yeah there is a new

00:25:39,230 --> 00:25:45,559
version of it which first kid melts into

00:25:42,080 --> 00:25:47,120
fedora correctly so once it once it's

00:25:45,559 --> 00:25:49,370
built into further on we have a new

00:25:47,120 --> 00:25:52,789
package so we will take in and we'll use

00:25:49,370 --> 00:25:56,500
it in the use it in the content the

00:25:52,789 --> 00:25:56,500
federal chorus it will be available

00:26:22,480 --> 00:26:29,779
this is part of the operating system

00:26:25,190 --> 00:26:31,789
itself so the the Fedora chorus when

00:26:29,779 --> 00:26:34,970
there is a new version update you don't

00:26:31,789 --> 00:26:36,649
have to do anything if the operating

00:26:34,970 --> 00:26:39,950
system itself will pick up that update

00:26:36,649 --> 00:26:49,850
it will build a new OS tree update from

00:26:39,950 --> 00:26:51,559
that and it will apply yeah if yes so

00:26:49,850 --> 00:26:54,380
that's the cost you have to pay if you

00:26:51,559 --> 00:26:56,750
want to keep the system stable and

00:26:54,380 --> 00:26:59,389
running for like forever like if it's

00:26:56,750 --> 00:27:01,250
not very tested then there is chances

00:26:59,389 --> 00:27:04,070
that your system may not boot or

00:27:01,250 --> 00:27:06,110
something like that right so we want to

00:27:04,070 --> 00:27:08,059
make sure that everything is tested and

00:27:06,110 --> 00:27:10,539
we don't want to ship everything to

00:27:08,059 --> 00:27:13,130
stable it's it's it's go through testing

00:27:10,539 --> 00:27:15,649
users if they're using they can know and

00:27:13,130 --> 00:27:17,299
they can give us feedback that it's not

00:27:15,649 --> 00:27:19,519
about to put their environment in the

00:27:17,299 --> 00:27:24,769
testing itself rather than running it on

00:27:19,519 --> 00:27:27,409
the production servers unless it's a

00:27:24,769 --> 00:27:29,240
security fix we security if there is a

00:27:27,409 --> 00:27:34,450
critical security it will be applied to

00:27:29,240 --> 00:27:34,450

YouTube URL: https://www.youtube.com/watch?v=2MYlQAXZuCM


