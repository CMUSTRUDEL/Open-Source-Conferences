Title: MySQL 8 vs MariaDB Server 10 4 with a sprinkling of Percona Server - Colin Charles
Publication date: 2020-03-27
Playlist: FOSSASIA Summit 2020 - Database
Description: 
	MySQL 8 vs. MariaDB 10.4 - Feature ComparisonAt the moment MySQL 8 and MariaDB 10.4 are the latest versions of the corresponding database management systems. Each of these DBMSs has a unique set of features, unavailable in its analogue (MariaDB features might be unavailable in MySQL, and vice versa). In this presentation, weâ€™ll cover these new features and provide recommendations re: which application will work best on which DBMS.

FOSSASIA Summit 2020 - Database

Speaker: Colin Charles, Chief Evangelist Percona
Captions: 
	00:00:00,089 --> 00:00:06,410
hello everybody from Asia my name is

00:00:04,319 --> 00:00:09,090
Colin Charles I'm here to give you a

00:00:06,410 --> 00:00:10,830
quick recording of my Escalade with his

00:00:09,090 --> 00:00:13,080
murid Ibiza written for first recording

00:00:10,830 --> 00:00:17,910
actually failed so this is my second

00:00:13,080 --> 00:00:19,199
attempt at doing it so you know talking

00:00:17,910 --> 00:00:23,519
about my skull a it wasn't really said

00:00:19,199 --> 00:00:26,039
was 10-4 I've been in the my scale world

00:00:23,519 --> 00:00:27,330
for more than 15 years I've active

00:00:26,039 --> 00:00:29,099
relationships with coda ship mckisack

00:00:27,330 --> 00:00:31,349
our transfers was proxy SQL founding

00:00:29,099 --> 00:00:33,450
team of Marie to be server formerly of

00:00:31,349 --> 00:00:36,059
MySQL a be worked a percona so basically

00:00:33,450 --> 00:00:38,340
been around the block quite a bit in

00:00:36,059 --> 00:00:42,329
terms of Licensing this slides are

00:00:38,340 --> 00:00:44,010
obviously fully CC licensed so yeah go

00:00:42,329 --> 00:00:45,629
for it so what is compatibility

00:00:44,010 --> 00:00:46,980
basically the state in which two things

00:00:45,629 --> 00:00:49,620
are able to exist or record together

00:00:46,980 --> 00:00:51,180
without problems or conflict why it

00:00:49,620 --> 00:00:52,920
matters is because marina be server is

00:00:51,180 --> 00:00:56,039
the default in many linux distributions

00:00:52,920 --> 00:00:58,530
and this is slowly of course changing

00:00:56,039 --> 00:01:02,010
because I'd use reddit Enterprise the

00:00:58,530 --> 00:01:08,670
next eight or you'll find that it ships

00:01:02,010 --> 00:01:09,930
both Maria DB as well as MySQL that's

00:01:08,670 --> 00:01:12,540
because you know things are obviously

00:01:09,930 --> 00:01:14,610
different but if you use Center why

00:01:12,540 --> 00:01:17,009
seven or eight seven it only comes with

00:01:14,610 --> 00:01:18,750
MySQL five five Marie to be five five as

00:01:17,009 --> 00:01:19,650
a default sorry not my scale there's no

00:01:18,750 --> 00:01:21,270
my scale at all

00:01:19,650 --> 00:01:24,689
of course it's abundantly clear that

00:01:21,270 --> 00:01:27,780
Marie server is not MySQL which is again

00:01:24,689 --> 00:01:29,479
why you starting to see Amazon as you

00:01:27,780 --> 00:01:31,680
are an Ali Baba offer different services

00:01:29,479 --> 00:01:35,790
expect always incompatibilities between

00:01:31,680 --> 00:01:39,299
the two now when it comes to licensing

00:01:35,790 --> 00:01:41,750
Marie to be server is gplv2 only Mac

00:01:39,299 --> 00:01:44,790
scale is business source licensed it is

00:01:41,750 --> 00:01:47,310
not an oppo as I approved licensed proxy

00:01:44,790 --> 00:01:49,770
SQL is gplv3

00:01:47,310 --> 00:01:51,930
columnstore again gplv2 because of

00:01:49,770 --> 00:01:54,630
history well many of the tools that make

00:01:51,930 --> 00:01:56,579
columnstore usable and useful actually

00:01:54,630 --> 00:01:59,189
the source license so you wanna maybe

00:01:56,579 --> 00:02:00,600
think twice about that my skill of

00:01:59,189 --> 00:02:04,110
course is community enterprise reasons

00:02:00,600 --> 00:02:05,399
just like more adb profiles gplv2 when

00:02:04,110 --> 00:02:07,500
comes the support

00:02:05,399 --> 00:02:09,929
what is the ecosystem and landscape look

00:02:07,500 --> 00:02:11,550
like I don't know if you if you go to a

00:02:09,929 --> 00:02:13,620
third-party company that's not more ADB

00:02:11,550 --> 00:02:15,030
for Kona or MySQL

00:02:13,620 --> 00:02:16,709
you find that they are willing to

00:02:15,030 --> 00:02:18,480
support you the solution that you're

00:02:16,709 --> 00:02:20,040
providing that's what that's very

00:02:18,480 --> 00:02:21,659
important so the particle basically like

00:02:20,040 --> 00:02:24,330
this you know or you know local

00:02:21,659 --> 00:02:26,220
companies and so forth who does training

00:02:24,330 --> 00:02:27,780
who does certification both MySQL and

00:02:26,220 --> 00:02:30,239
Maria me do certification for a dozen

00:02:27,780 --> 00:02:31,920
different certification being an open

00:02:30,239 --> 00:02:33,659
source conference community

00:02:31,920 --> 00:02:35,790
contributions extremely important in

00:02:33,659 --> 00:02:37,230
terms of who actually X takes the most

00:02:35,790 --> 00:02:39,329
contributions I'd say it's an or a DB

00:02:37,230 --> 00:02:41,190
because you can put it on the Murray to

00:02:39,329 --> 00:02:44,489
be contributed agreement or the PSD new

00:02:41,190 --> 00:02:47,459
followed by Oracle MySQL which has the

00:02:44,489 --> 00:02:49,049
OCA and then followed by Percona percona

00:02:47,459 --> 00:02:51,599
being very much more interested in only

00:02:49,049 --> 00:02:54,450
solving the customer problems like I was

00:02:51,599 --> 00:02:56,280
a governance you know Murray DB

00:02:54,450 --> 00:02:58,590
corporation is a for-profit corporation

00:02:56,280 --> 00:03:01,859
it's been funded a lot it's on its third

00:02:58,590 --> 00:03:04,640
CEO not a founder CEO it's it's raised

00:03:01,859 --> 00:03:06,750
over ninety eight million dollars

00:03:04,640 --> 00:03:09,359
obviously has a foundation but it's also

00:03:06,750 --> 00:03:10,530
heavily dependent mention money so you

00:03:09,359 --> 00:03:11,849
know I always ask you know how many

00:03:10,530 --> 00:03:13,920
times things like websites change

00:03:11,849 --> 00:03:16,709
management change and be careful when

00:03:13,920 --> 00:03:19,889
the Lockean open source comes and

00:03:16,709 --> 00:03:21,780
releases MySQL of course you know in the

00:03:19,889 --> 00:03:23,970
middle is the is the soul soul soul

00:03:21,780 --> 00:03:25,590
release release are but maybe does

00:03:23,970 --> 00:03:28,319
release once every year my skill once

00:03:25,590 --> 00:03:30,480
every two years plus Percona you'll

00:03:28,319 --> 00:03:33,919
notice is actually lagging behind in

00:03:30,480 --> 00:03:37,049
terms of release time compared to

00:03:33,919 --> 00:03:38,579
compared to MySQL it can sometimes lag

00:03:37,049 --> 00:03:40,019
up to eight months behind a release

00:03:38,579 --> 00:03:43,889
that's because it's getting extremely

00:03:40,019 --> 00:03:46,079
hard to merge MySQL because my SQL point

00:03:43,889 --> 00:03:47,340
releases also get new features so this

00:03:46,079 --> 00:03:49,260
is something that's very important to

00:03:47,340 --> 00:03:50,879
remember with MySQL is that it

00:03:49,260 --> 00:03:53,989
introduces new features in point

00:03:50,879 --> 00:03:56,910
releases like 8 0 17 8 0 16 and so forth

00:03:53,989 --> 00:03:58,410
when it comes to installation it is

00:03:56,910 --> 00:03:59,790
clear the proto nacelle follows the

00:03:58,410 --> 00:04:03,209
easiest installation model because you

00:03:59,790 --> 00:04:05,699
have a young file you just install rpm

00:04:03,209 --> 00:04:07,319
and then you get to go maybe it makes

00:04:05,699 --> 00:04:09,299
you copy and paste edit a file then

00:04:07,319 --> 00:04:11,730
install cuz it's got a repo builder but

00:04:09,299 --> 00:04:13,470
with my skill to grab packages and yeah

00:04:11,730 --> 00:04:15,690
this can be kind of vaguely annoying

00:04:13,470 --> 00:04:17,820
obviously now when it comes to

00:04:15,690 --> 00:04:19,380
replication you notice that it's easier

00:04:17,820 --> 00:04:21,000
to migrate to more UDP so much much

00:04:19,380 --> 00:04:24,180
harder way to migrate away from rate

00:04:21,000 --> 00:04:25,770
observer so you could kind of like Hotel

00:04:24,180 --> 00:04:27,330
California program through see if

00:04:25,770 --> 00:04:27,570
checkout any time you like but you can

00:04:27,330 --> 00:04:31,560
ever

00:04:27,570 --> 00:04:33,480
leave and you always a GT ID variances

00:04:31,560 --> 00:04:36,300
and really be when it's attached a slave

00:04:33,480 --> 00:04:41,370
to my SQL will just discard the GT IDs

00:04:36,300 --> 00:04:42,810
and actually create creative zone now

00:04:41,370 --> 00:04:44,850
there comes a replication the default

00:04:42,810 --> 00:04:47,130
binary log format inside of Mario DB is

00:04:44,850 --> 00:04:49,860
mixed the worse the default is row

00:04:47,130 --> 00:04:51,510
inside of MySQL so you should probably

00:04:49,860 --> 00:04:52,920
note that you may want to change it

00:04:51,510 --> 00:04:56,190
because mixed means you get statement

00:04:52,920 --> 00:04:59,280
most most of the time or you know you'll

00:04:56,190 --> 00:05:01,170
get row new my statement is deemed

00:04:59,280 --> 00:05:03,360
problematic also you may want to think

00:05:01,170 --> 00:05:05,610
about turning on the replicate annotate

00:05:03,360 --> 00:05:08,610
row events to off this is on by default

00:05:05,610 --> 00:05:11,280
which means that if you get a binary log

00:05:08,610 --> 00:05:13,140
or application a row based application

00:05:11,280 --> 00:05:15,720
it will also append the statement on the

00:05:13,140 --> 00:05:17,610
top which will actually waste binary log

00:05:15,720 --> 00:05:19,080
space however you could also turn on

00:05:17,610 --> 00:05:21,090
binary log compression which is unique

00:05:19,080 --> 00:05:23,340
to me really be maybe then save some

00:05:21,090 --> 00:05:25,890
space time delay replication is also

00:05:23,340 --> 00:05:27,510
extremely interesting because this is

00:05:25,890 --> 00:05:28,890
something that's been around for a while

00:05:27,510 --> 00:05:31,590
which allows you to have a delayed

00:05:28,890 --> 00:05:33,360
replica maybe one hour delay so if it

00:05:31,590 --> 00:05:35,640
was about code pushes this might be

00:05:33,360 --> 00:05:37,410
useful for you especially if something

00:05:35,640 --> 00:05:39,930
breaks and you don't want to to restore

00:05:37,410 --> 00:05:40,980
it was present in my list l56 but it

00:05:39,930 --> 00:05:43,710
only arrived and ready to be tend to

00:05:40,980 --> 00:05:45,420
which is a significant delay in time DML

00:05:43,710 --> 00:05:47,190
only flashback is great allows you to

00:05:45,420 --> 00:05:49,650
rollback instances databases tables and

00:05:47,190 --> 00:05:52,170
all the snapshot via came by Alibaba is

00:05:49,650 --> 00:05:55,380
the my scalp in long to extremely

00:05:52,170 --> 00:05:59,280
extremely useful and I highly highly

00:05:55,380 --> 00:06:03,600
recommend you check and check out now

00:05:59,280 --> 00:06:04,710
when it comes to security MySQL is of

00:06:03,600 --> 00:06:06,210
course started using something called a

00:06:04,710 --> 00:06:07,680
caching shout to you password and it

00:06:06,210 --> 00:06:10,470
actually is not compatible with many

00:06:07,680 --> 00:06:11,670
connectors unless it's provided by MySQL

00:06:10,470 --> 00:06:12,930
so there's something very important to

00:06:11,670 --> 00:06:15,660
know when you're moving to MySQL eight

00:06:12,930 --> 00:06:19,950
is that connector support is extremely

00:06:15,660 --> 00:06:21,120
extremely important now mice QL for the

00:06:19,950 --> 00:06:22,650
longest time it uses something called my

00:06:21,120 --> 00:06:24,360
little native password which actually

00:06:22,650 --> 00:06:26,460
previously uses share one based

00:06:24,360 --> 00:06:30,660
authentication and double shower one

00:06:26,460 --> 00:06:32,580
that then computers became faster a

00:06:30,660 --> 00:06:34,680
sha-1 isn't great because you get

00:06:32,580 --> 00:06:36,270
collisions double sha-1 is also not

00:06:34,680 --> 00:06:37,350
really considered as secure any longer

00:06:36,270 --> 00:06:38,640
though we haven't really seen any

00:06:37,350 --> 00:06:41,490
break-ins so MySQL

00:06:38,640 --> 00:06:43,620
naturally has shadow physics

00:06:41,490 --> 00:06:45,180
we had two five one nine which is based

00:06:43,620 --> 00:06:47,729
on typical curve digital signature

00:06:45,180 --> 00:06:50,780
algorithm same as OpenSSH uses

00:06:47,729 --> 00:06:53,280
elliptical curve by I know Jay Bernstein

00:06:50,780 --> 00:06:55,199
now they're not compatible each other so

00:06:53,280 --> 00:06:57,330
you can migrate users passwords between

00:06:55,199 --> 00:06:59,340
the two very important to remember that

00:06:57,330 --> 00:07:01,319
validate password is on by default in

00:06:59,340 --> 00:07:02,699
MySQL five seven and greater but not in

00:07:01,319 --> 00:07:04,770
Murray DB so maybe you want to turn that

00:07:02,699 --> 00:07:09,509
on because it's actually kind of kind of

00:07:04,770 --> 00:07:10,949
Handy my basically you have the

00:07:09,509 --> 00:07:12,599
excellent slow query log instead of

00:07:10,949 --> 00:07:16,080
Murray to be very very useful you have

00:07:12,599 --> 00:07:17,639
things like thread pool you have that

00:07:16,080 --> 00:07:19,110
you don't have to buy my Enterprise for

00:07:17,639 --> 00:07:20,970
thread pull off parcels of contents out

00:07:19,110 --> 00:07:22,349
on a server if these like cable

00:07:20,970 --> 00:07:24,270
elimination which allows you to do

00:07:22,349 --> 00:07:26,849
anchor modeling you don't get that in

00:07:24,270 --> 00:07:30,139
any other open source database generally

00:07:26,849 --> 00:07:33,720
speaking our numbers are 1900 and above

00:07:30,139 --> 00:07:35,639
for Kona Liki taken like 30 the 3000 s

00:07:33,720 --> 00:07:36,930
and above things like show processes

00:07:35,639 --> 00:07:38,550
with progress reporting so you can

00:07:36,930 --> 00:07:42,060
actually see if you do an alter table

00:07:38,550 --> 00:07:43,229
should you do at alter table and and go

00:07:42,060 --> 00:07:45,539
for a cup of coffee or go with the

00:07:43,229 --> 00:07:49,860
weekend dynamic columns allow you to

00:07:45,539 --> 00:07:51,659
actually have nice new many new columns

00:07:49,860 --> 00:07:54,840
for each and every row inside of your

00:07:51,659 --> 00:07:58,139
database tables very useful to one

00:07:54,840 --> 00:08:00,599
gigabyte in size so it's like NoSQL kind

00:07:58,139 --> 00:08:02,490
of thing for you encryption is of course

00:08:00,599 --> 00:08:06,270
different marina bishops a very old

00:08:02,490 --> 00:08:08,610
performance schema so don't use it Marie

00:08:06,270 --> 00:08:11,909
prefers gg's information schema whereas

00:08:08,610 --> 00:08:14,250
my skills and pronate excellent

00:08:11,909 --> 00:08:16,440
performance schema now this is an

00:08:14,250 --> 00:08:19,409
example of where I can do the time in

00:08:16,440 --> 00:08:21,330
microseconds as the stages backstage and

00:08:19,409 --> 00:08:25,680
so forth stuff that's not the present

00:08:21,330 --> 00:08:27,780
inside of MySQL Lake when it comes to

00:08:25,680 --> 00:08:30,690
JSON there is a binary data type inside

00:08:27,780 --> 00:08:32,130
of MySQL whereas in Murray ODB you

00:08:30,690 --> 00:08:35,279
really have

00:08:32,130 --> 00:08:38,820
blobs with handling functions so to

00:08:35,279 --> 00:08:41,010
speak when it comes to using the X

00:08:38,820 --> 00:08:43,380
protocol which allows you to use a new

00:08:41,010 --> 00:08:45,180
part three three zero six zero really

00:08:43,380 --> 00:08:48,029
bees missing the functionality for this

00:08:45,180 --> 00:08:48,899
and unfortunately this also means it

00:08:48,029 --> 00:08:53,710
doesn't work with things like

00:08:48,899 --> 00:08:58,120
clarification and you can't actually

00:08:53,710 --> 00:09:00,790
do queries with JavaScript and so forth

00:08:58,120 --> 00:09:03,490
so this is one of those key key

00:09:00,790 --> 00:09:05,410
differences I think that that are quite

00:09:03,490 --> 00:09:08,190
significant there will drive things to

00:09:05,410 --> 00:09:11,200
be a little different going forward

00:09:08,190 --> 00:09:12,820
storage engines I'll talk about you only

00:09:11,200 --> 00:09:15,010
but the cool sort and it's like my rocks

00:09:12,820 --> 00:09:16,330
my rocks is you know based on rocks DB

00:09:15,010 --> 00:09:18,100
which is a four core level D beats right

00:09:16,330 --> 00:09:20,200
optimized to focus on endurance of flash

00:09:18,100 --> 00:09:22,330
devices because it has ten times write

00:09:20,200 --> 00:09:24,850
less write amplification compared to you

00:09:22,330 --> 00:09:27,910
know DB it's also a better compression

00:09:24,850 --> 00:09:30,700
that inner DB and the ability load data

00:09:27,910 --> 00:09:33,730
fast avoiding compaction overheads in

00:09:30,700 --> 00:09:37,990
fact my rocks powers more than 95

00:09:33,730 --> 00:09:40,540
percent of Facebook today so if you if

00:09:37,990 --> 00:09:42,910
you are wondering if it is ever used in

00:09:40,540 --> 00:09:45,040
production my rocks is the Facebook's or

00:09:42,910 --> 00:09:46,780
engine of choice which is great news for

00:09:45,040 --> 00:09:49,300
you because you're actually getting huge

00:09:46,780 --> 00:09:50,500
amounts of benefits from from them this

00:09:49,300 --> 00:09:52,390
is a spider which is great for

00:09:50,500 --> 00:09:53,890
transparent sharding and recharging

00:09:52,390 --> 00:09:59,860
where I ask you also get partitioned via

00:09:53,890 --> 00:10:02,800
range key hash list and this is all by

00:09:59,860 --> 00:10:04,420
SQL and of course is things like

00:10:02,800 --> 00:10:08,020
connects which allows you to import

00:10:04,420 --> 00:10:11,470
MongoDB files and text files and so

00:10:08,020 --> 00:10:13,150
forth it's also fairly cool the ability

00:10:11,470 --> 00:10:14,350
to do things like column compression

00:10:13,150 --> 00:10:16,410
which is present inside of Percona

00:10:14,350 --> 00:10:18,760
server with this dictionary support also

00:10:16,410 --> 00:10:20,710
from row row compression to pay to

00:10:18,760 --> 00:10:22,420
impression you can now create columns

00:10:20,710 --> 00:10:24,700
that are also compressed and you can

00:10:22,420 --> 00:10:27,970
actually see if columns are how they're

00:10:24,700 --> 00:10:29,710
compressing or decompressing invisible

00:10:27,970 --> 00:10:31,960
columns allow you to remove a dependency

00:10:29,710 --> 00:10:33,610
to applications so basically a column

00:10:31,960 --> 00:10:35,230
can be added to a table without hiding

00:10:33,610 --> 00:10:37,510
them from the application which may fail

00:10:35,230 --> 00:10:38,850
to run keep historical columns are

00:10:37,510 --> 00:10:41,680
needed by applications anymore

00:10:38,850 --> 00:10:43,660
prepare you know database analog grade

00:10:41,680 --> 00:10:45,610
so when you do a select star from as you

00:10:43,660 --> 00:10:47,590
could see select star from user show

00:10:45,610 --> 00:10:50,430
anything unless you explicitly specify

00:10:47,590 --> 00:10:53,770
the secret column in this example

00:10:50,430 --> 00:10:55,900
system version tables I really really

00:10:53,770 --> 00:10:57,850
enjoy this because it's SQL 2011

00:10:55,900 --> 00:10:58,840
standard its losses we have all changes

00:10:57,850 --> 00:11:00,580
so you can alter a table to

00:10:58,840 --> 00:11:02,440
enable/disable remove system version

00:11:00,580 --> 00:11:03,910
data you can make ads of queries which

00:11:02,440 --> 00:11:06,040
will be on the next slide so you can

00:11:03,910 --> 00:11:07,310
select data as a point in time you can

00:11:06,040 --> 00:11:09,320
also select between an

00:11:07,310 --> 00:11:11,000
select data between two points it's

00:11:09,320 --> 00:11:12,740
great for forensic analysis or legal

00:11:11,000 --> 00:11:15,020
requirements data analytics point in

00:11:12,740 --> 00:11:18,980
time recovery to find time staff

00:11:15,020 --> 00:11:22,760
versions of data and in this example I

00:11:18,980 --> 00:11:24,800
show you that you know a one user called

00:11:22,760 --> 00:11:26,300
Colin the thousand dollars on marketing

00:11:24,800 --> 00:11:28,850
department then it gets a ten thousand

00:11:26,300 --> 00:11:32,779
dollar salary bump and then moves to the

00:11:28,850 --> 00:11:36,770
engineering department and the as of

00:11:32,779 --> 00:11:38,690
example of that is to see what what he

00:11:36,770 --> 00:11:44,560
was earning at that point in time back

00:11:38,690 --> 00:11:46,700
in time so there of course things like

00:11:44,560 --> 00:11:49,040
differences obviously like no resource

00:11:46,700 --> 00:11:50,690
groups no a native partitioning no

00:11:49,040 --> 00:11:54,980
timetables origin

00:11:50,690 --> 00:11:56,839
no no set persist no the regular

00:11:54,980 --> 00:12:00,529
expression libraries are different MySQL

00:11:56,839 --> 00:12:02,900
80s as ICU whereas a marine business

00:12:00,529 --> 00:12:06,020
pcre but everyone's gotten rid of Harry

00:12:02,900 --> 00:12:07,910
Spencer's library but you know I think

00:12:06,020 --> 00:12:09,680
there are many many features and maybe

00:12:07,910 --> 00:12:12,320
that outweigh the differences or

00:12:09,680 --> 00:12:13,970
whatever is lacking so to speak but at

00:12:12,320 --> 00:12:17,560
the same time we have to remember that

00:12:13,970 --> 00:12:20,810
differences also mean that things like

00:12:17,560 --> 00:12:23,650
not having a GT ID available in the okay

00:12:20,810 --> 00:12:27,260
column for example is a real big issue

00:12:23,650 --> 00:12:29,440
so you know you can find that tools like

00:12:27,260 --> 00:12:32,930
proxy SQL can do do interesting things

00:12:29,440 --> 00:12:34,790
because it has okay packet GTI in the

00:12:32,930 --> 00:12:37,490
okay packet but it is missing inside of

00:12:34,790 --> 00:12:39,920
things like Marais DB so you can do

00:12:37,490 --> 00:12:41,660
consistent reads and an adaptive query

00:12:39,920 --> 00:12:43,610
routing based on global transaction ID

00:12:41,660 --> 00:12:45,530
tracking which you can't do inside of

00:12:43,610 --> 00:12:47,510
say if you use Maury DB so you have to

00:12:45,530 --> 00:12:51,170
know your the the pros and the cons the

00:12:47,510 --> 00:12:52,670
of which server you end up choosing of

00:12:51,170 --> 00:12:55,970
course it's also very important to note

00:12:52,670 --> 00:12:58,010
that Murray DB is a while is still

00:12:55,970 --> 00:13:00,800
considered drop-in replacement can use

00:12:58,010 --> 00:13:04,070
you can read your mind at conf can

00:13:00,800 --> 00:13:06,230
basically use valid MySQL is it's a it's

00:13:04,070 --> 00:13:09,560
an easy upgrade but migrating back may

00:13:06,230 --> 00:13:11,720
not necessarily always work when it

00:13:09,560 --> 00:13:14,390
comes to clustering my Escalade uses

00:13:11,720 --> 00:13:17,930
group application with NDB cluster MySQL

00:13:14,390 --> 00:13:19,880
shell MySQL router it's all one package

00:13:17,930 --> 00:13:21,020
you can get and MySQL shell could

00:13:19,880 --> 00:13:23,270
configure your your in

00:13:21,020 --> 00:13:25,340
be cluster and the router will be

00:13:23,270 --> 00:13:28,400
certain for ships camera cluster rolled

00:13:25,340 --> 00:13:29,750
into it it's configurable again by mile

00:13:28,400 --> 00:13:32,510
TNF but you don't have the tools like

00:13:29,750 --> 00:13:33,980
shell and there's no proxy built in see

00:13:32,510 --> 00:13:35,990
stuff to download like Mac scale proxy

00:13:33,980 --> 00:13:37,940
SQL Percona server uses gather

00:13:35,990 --> 00:13:40,430
clustering it does ship in actually meet

00:13:37,940 --> 00:13:43,280
cluster a proxy SQL admin to as well as

00:13:40,430 --> 00:13:45,590
proxy SQL so you're looking for

00:13:43,280 --> 00:13:46,190
out-of-the-box clustering solution it

00:13:45,590 --> 00:13:49,310
just works

00:13:46,190 --> 00:13:50,720
exe actually is pretty good but the

00:13:49,310 --> 00:13:52,430
development definitely likes behind what

00:13:50,720 --> 00:13:54,140
you seen that a Murray server as well as

00:13:52,430 --> 00:13:55,970
coalition directly so gallery is now in

00:13:54,140 --> 00:13:57,710
version 4 which is available inside a

00:13:55,970 --> 00:13:59,450
memory to be sorry time for and coda

00:13:57,710 --> 00:14:02,930
Chappell obviously other release but

00:13:59,450 --> 00:14:06,170
proponents are still not still using

00:14:02,930 --> 00:14:08,300
Garen 3 in production use cases and of

00:14:06,170 --> 00:14:09,800
course it comes to proxies MySQL

00:14:08,300 --> 00:14:11,330
recommends router Murray to be server

00:14:09,800 --> 00:14:13,700
recommends Mac scalper corner commands

00:14:11,330 --> 00:14:15,530
boxy SQL parks SQL works at all the

00:14:13,700 --> 00:14:18,860
above and it's like the Swiss Army knife

00:14:15,530 --> 00:14:22,580
or DBAs it works generally with with

00:14:18,860 --> 00:14:25,100
everything everywhere so with that I

00:14:22,580 --> 00:14:27,200
actually compressed this 25-minute talk

00:14:25,100 --> 00:14:31,100
into 15 because this is not the second

00:14:27,200 --> 00:14:33,740
recording I'm making and I will always

00:14:31,100 --> 00:14:36,650
be available while email or Twitter so

00:14:33,740 --> 00:14:38,900
feel free to drop me a line I can have a

00:14:36,650 --> 00:14:41,000
very comprehensive resource so please

00:14:38,900 --> 00:14:44,300
watch watch Twitter and the blog for

00:14:41,000 --> 00:14:46,310
further information so thank you thank

00:14:44,300 --> 00:14:47,990
you very much for listening and if you

00:14:46,310 --> 00:14:50,470
have any questions feel free to ask them

00:14:47,990 --> 00:14:50,470

YouTube URL: https://www.youtube.com/watch?v=8w6NKFuc6Nk


