Title: Open Source Quantum Computing by Matthew Treinish
Publication date: 2019-03-31
Playlist: FOSSASIA Summit 2019 - Open Data, Internet, Community
Description: 
	15 March 2019 16:05, Lecture Theatre

Quantum computers are not just science fiction anymore, with many companies building increasingly more powerful quantum computers. While, concepts in quantum computing have been around for over 30 years, but it hasn't been generally accessible until recently. Despite this quantum computing is still very much in its infancy and there are physical limitations preventing them from being generally usable. But the machines that are available today are useful for experimentation and showcasing certain applications where they will be useful.

Open source software for quantum computing has started being developed as these new machines are being built. Learning the lessons from the history of developing classical computers, there are already several open source SDKs, languages, and libraries being developed for quantum computers despite the current limitations of quantum computers. This means as the technology matures and becomes more practical there will already be an open source ecosystem for using quantum computing.

This talk will provide an introduction to the basics of quantum information theory, look at some of the quantum computers out there, explore the open source tooling available for quantum computing, and show how you can use that to write your own quantum programs and run them on simulators and actual quantum computers.
Captions: 
	00:00:00,450 --> 00:00:04,470
so in that try and I work at IBM

00:00:02,610 --> 00:00:07,519
research I'm a quantum computing team

00:00:04,470 --> 00:00:09,900
and I'm gonna here today to talk about

00:00:07,519 --> 00:00:11,580
quantum computing and the role that open

00:00:09,900 --> 00:00:13,259
source software is playing in the

00:00:11,580 --> 00:00:16,170
development of these new types of

00:00:13,259 --> 00:00:17,640
computers to start though we need to

00:00:16,170 --> 00:00:19,080
really talk about what a quantum

00:00:17,640 --> 00:00:21,210
computer is because I find a lot of

00:00:19,080 --> 00:00:23,519
people really have some misconceptions

00:00:21,210 --> 00:00:26,099
and the first one that everyone assumes

00:00:23,519 --> 00:00:28,170
is that the world is going to be on fire

00:00:26,099 --> 00:00:30,210
because of something called Shor's

00:00:28,170 --> 00:00:32,219
algorithm which is an algorithm that was

00:00:30,210 --> 00:00:35,070
developed in the 90s that says using the

00:00:32,219 --> 00:00:37,530
quantum computer we can factor prime

00:00:35,070 --> 00:00:39,270
numbers efficiently and prime numbers

00:00:37,530 --> 00:00:40,860
are the basis of RSA encryption and

00:00:39,270 --> 00:00:42,719
that's what everyone uses for everything

00:00:40,860 --> 00:00:45,510
and everyone assumes the world is going

00:00:42,719 --> 00:00:47,160
to be on fire but that's neglecting the

00:00:45,510 --> 00:00:49,230
fact that for Shor's algorithm to work

00:00:47,160 --> 00:00:52,320
to factor the prime numbers we use for

00:00:49,230 --> 00:00:53,760
RSA we need machine we need something

00:00:52,320 --> 00:00:56,160
called a universal fault-tolerant

00:00:53,760 --> 00:00:58,469
quantum computer and one with massively

00:00:56,160 --> 00:01:00,359
more qubits than what we have today it's

00:00:58,469 --> 00:01:01,859
a long way in the future the numbers I

00:01:00,359 --> 00:01:05,040
hear are like decades in the future

00:01:01,859 --> 00:01:07,020
before this is a reality the other

00:01:05,040 --> 00:01:08,729
misconception for people more like me a

00:01:07,020 --> 00:01:11,070
little bit nerdier is something from

00:01:08,729 --> 00:01:12,450
science fiction there's a quantum

00:01:11,070 --> 00:01:14,880
computer from an anime I loved in

00:01:12,450 --> 00:01:16,860
college and you have just have this idea

00:01:14,880 --> 00:01:19,259
that there are super computers that are

00:01:16,860 --> 00:01:20,580
in space and glowing and that's not

00:01:19,259 --> 00:01:22,110
actually what a quantum computer is

00:01:20,580 --> 00:01:25,799
although it'd be kind of cool if I

00:01:22,110 --> 00:01:27,810
worked in space with glowing lights this

00:01:25,799 --> 00:01:29,340
is a real quantum computer this is one

00:01:27,810 --> 00:01:30,960
of IBM's quantum computers at the

00:01:29,340 --> 00:01:35,640
research lab in Yorktown Heights New

00:01:30,960 --> 00:01:37,770
York where I work and most of the space

00:01:35,640 --> 00:01:39,210
here is actually taken for cooling that

00:01:37,770 --> 00:01:40,740
white cylinder and then all of the

00:01:39,210 --> 00:01:43,350
internals which are the three pictures

00:01:40,740 --> 00:01:45,780
there are what's called a dilution

00:01:43,350 --> 00:01:47,250
refrigerator and that enables getting

00:01:45,780 --> 00:01:49,829
the quantum chip which that guy is

00:01:47,250 --> 00:01:51,390
holding in his hand there down to a

00:01:49,829 --> 00:01:53,549
temperature of about 10 to 20

00:01:51,390 --> 00:01:56,430
millikelvin which is actually colder

00:01:53,549 --> 00:01:57,960
than outer space and it needs to be at

00:01:56,430 --> 00:02:01,380
that temperature for the quantum ship to

00:01:57,960 --> 00:02:03,450
operate and to limit the noise the other

00:02:01,380 --> 00:02:05,729
key thing you can see there is in that

00:02:03,450 --> 00:02:08,220
picture on the upper right you can see

00:02:05,729 --> 00:02:10,440
some some of the transmission cables

00:02:08,220 --> 00:02:12,330
which are used for transmitting the

00:02:10,440 --> 00:02:13,860
microwave pulses from the electronics

00:02:12,330 --> 00:02:15,420
that are outside the refrigerator

00:02:13,860 --> 00:02:17,100
into the quantum chip and those

00:02:15,420 --> 00:02:19,170
microwave pulses are what are actually

00:02:17,100 --> 00:02:22,230
used to perform the operations on the

00:02:19,170 --> 00:02:24,030
qubits and you can see some of those

00:02:22,230 --> 00:02:26,040
electronics in the background there but

00:02:24,030 --> 00:02:28,230
just like on any computer the smallest

00:02:26,040 --> 00:02:31,560
the processor is still the smallest bit

00:02:28,230 --> 00:02:33,540
of it and we can zoom in on these chips

00:02:31,560 --> 00:02:36,930
and get some dye photos of what they

00:02:33,540 --> 00:02:38,160
actually look like here we have to dye

00:02:36,930 --> 00:02:39,750
photos for two different quantum

00:02:38,160 --> 00:02:42,120
computers the one on the right is a five

00:02:39,750 --> 00:02:44,700
qubit device called tenerife and the one

00:02:42,120 --> 00:02:47,730
on the left is a fourteen qubit device

00:02:44,700 --> 00:02:51,900
called melbourne and the key features to

00:02:47,730 --> 00:02:54,090
really take away here are the qubits

00:02:51,900 --> 00:02:55,380
which are labeled q1 on the picture on

00:02:54,090 --> 00:02:59,340
the right and they're those little

00:02:55,380 --> 00:03:03,080
squares and then between them labeled

00:02:59,340 --> 00:03:06,870
with B are the bus resonators which are

00:03:03,080 --> 00:03:08,220
basically just connections between the

00:03:06,870 --> 00:03:11,190
qubits and those are used for running

00:03:08,220 --> 00:03:12,930
multi qubit operations and you can see

00:03:11,190 --> 00:03:15,570
that there there's a certain pattern to

00:03:12,930 --> 00:03:17,550
the connection and then there's the the

00:03:15,570 --> 00:03:19,230
resonators labeled R which are for

00:03:17,550 --> 00:03:21,989
reading out the data from the qubit when

00:03:19,230 --> 00:03:23,910
it's time to measure and as

00:03:21,989 --> 00:03:26,340
sophisticated as these devices are and

00:03:23,910 --> 00:03:28,260
as cool as they are there are still a

00:03:26,340 --> 00:03:30,030
lot of physical limitations with them

00:03:28,260 --> 00:03:32,959
the most obvious one is the number of

00:03:30,030 --> 00:03:36,600
qubits this one has five this one has 14

00:03:32,959 --> 00:03:38,640
that's not a very large number you can't

00:03:36,600 --> 00:03:41,700
really do big problems with it

00:03:38,640 --> 00:03:44,100
especially if you're you know using 16

00:03:41,700 --> 00:03:46,440
bits of data or 64 bits of data that's

00:03:44,100 --> 00:03:48,120
the size limit there but the other thing

00:03:46,440 --> 00:03:50,660
that people don't really realize is that

00:03:48,120 --> 00:03:53,310
these machines are very noisy they

00:03:50,660 --> 00:03:56,700
they're very susceptible to temperature

00:03:53,310 --> 00:03:58,440
fluctuations and other sources of noise

00:03:56,700 --> 00:04:00,269
in the environment and as you perform

00:03:58,440 --> 00:04:02,130
operations on them the noise builds up

00:04:00,269 --> 00:04:04,019
over time and there's something called

00:04:02,130 --> 00:04:05,880
quantum decoherence which is if you run

00:04:04,019 --> 00:04:07,350
it long enough you'll lose your quantum

00:04:05,880 --> 00:04:10,110
state and all the information and your

00:04:07,350 --> 00:04:11,760
qubit will disappear and you just get a

00:04:10,110 --> 00:04:13,760
random output which is not what you want

00:04:11,760 --> 00:04:18,959
if you're trying to do computation and

00:04:13,760 --> 00:04:20,760
all of these things together or what Lin

00:04:18,959 --> 00:04:23,220
are limiting what we can do is quantum

00:04:20,760 --> 00:04:24,360
computing today you can't just increase

00:04:23,220 --> 00:04:26,760
the number of qubits you could build a

00:04:24,360 --> 00:04:27,600
bigger chip but you'd still have noise

00:04:26,760 --> 00:04:28,980
problems that you

00:04:27,600 --> 00:04:31,350
interconnection problems because you

00:04:28,980 --> 00:04:34,350
can't run operations on two qubits

00:04:31,350 --> 00:04:35,760
unless they're connected so there are

00:04:34,350 --> 00:04:38,340
still a lot of limitations with the

00:04:35,760 --> 00:04:40,410
devices that exist today but why am I

00:04:38,340 --> 00:04:42,810
talking about this if they're so limited

00:04:40,410 --> 00:04:44,220
and that's because it's despite these

00:04:42,810 --> 00:04:47,280
limitations it's actually really

00:04:44,220 --> 00:04:49,290
exciting time in quantum computing and

00:04:47,280 --> 00:04:50,700
to showcase that I just have this time

00:04:49,290 --> 00:04:52,290
line which I borrowed from one of my

00:04:50,700 --> 00:04:53,940
colleagues because I don't actually have

00:04:52,290 --> 00:04:57,720
a background in quantum information

00:04:53,940 --> 00:05:00,210
theory which just a showcase how things

00:04:57,720 --> 00:05:02,310
have evolved over time so we have in the

00:05:00,210 --> 00:05:04,410
upper left hand corner the 1930s with

00:05:02,310 --> 00:05:06,300
the the theoretical underpinnings of

00:05:04,410 --> 00:05:08,850
quantum mechanics and it wasn't until

00:05:06,300 --> 00:05:10,680
like the 1970s when people realized you

00:05:08,850 --> 00:05:13,320
could use quantum mechanics to do

00:05:10,680 --> 00:05:16,830
computation and use it for information

00:05:13,320 --> 00:05:18,330
theory and into the 80s they started

00:05:16,830 --> 00:05:20,820
having conferences on the topic people

00:05:18,330 --> 00:05:23,160
started developing different algorithms

00:05:20,820 --> 00:05:26,780
and techniques on a strictly theoretical

00:05:23,160 --> 00:05:29,580
basis into the 90s when they were

00:05:26,780 --> 00:05:31,200
practical lab experiments so in your

00:05:29,580 --> 00:05:32,790
experimental physics lab with your

00:05:31,200 --> 00:05:35,130
dilution refrigerator they started

00:05:32,790 --> 00:05:37,140
building small like one or two qubit

00:05:35,130 --> 00:05:39,120
devices and they started getting more

00:05:37,140 --> 00:05:41,700
sophisticated over time but it was the

00:05:39,120 --> 00:05:43,560
domain of laboratory research up until

00:05:41,700 --> 00:05:46,080
about three years ago when IBM decided

00:05:43,560 --> 00:05:47,550
to take one of its five qubit devices

00:05:46,080 --> 00:05:49,440
that was in its research lab in Yorktown

00:05:47,550 --> 00:05:51,390
and say you know what this is pretty

00:05:49,440 --> 00:05:52,830
stable let's put it out on the internet

00:05:51,390 --> 00:05:54,570
for anyone to sign up for an account and

00:05:52,830 --> 00:05:57,300
submit jobs to and that was the IBM

00:05:54,570 --> 00:05:59,160
quantum experience in twenty sixteen and

00:05:57,300 --> 00:06:00,660
when that happened it really changed the

00:05:59,160 --> 00:06:03,150
game because no longer did you need like

00:06:00,660 --> 00:06:05,070
a PhD in experimental physics to get

00:06:03,150 --> 00:06:07,470
access to these machines anyone in the

00:06:05,070 --> 00:06:09,180
world sitting at home can just submit to

00:06:07,470 --> 00:06:11,580
it and start playing around and learning

00:06:09,180 --> 00:06:13,440
about quantum computing and that's

00:06:11,580 --> 00:06:15,390
actually where the project I came I work

00:06:13,440 --> 00:06:17,070
on comes into play because with open

00:06:15,390 --> 00:06:19,860
access you needed software to deal with

00:06:17,070 --> 00:06:20,310
it and we started developing a toolkit

00:06:19,860 --> 00:06:24,260
called

00:06:20,310 --> 00:06:27,210
kiss ket which is an open source sdk for

00:06:24,260 --> 00:06:29,220
programming quantum computers it's

00:06:27,210 --> 00:06:31,410
designed for dealing with misc devices

00:06:29,220 --> 00:06:34,410
or noisy intermediate scale quantum

00:06:31,410 --> 00:06:36,120
computers which is just a term that

00:06:34,410 --> 00:06:37,830
means for the computers we have today

00:06:36,120 --> 00:06:40,889
and into the near future where they're

00:06:37,830 --> 00:06:43,210
still small still not fault tolerant

00:06:40,889 --> 00:06:46,420
basically this provides us the tool

00:06:43,210 --> 00:06:49,030
provides anyone of anyone the tools to

00:06:46,420 --> 00:06:52,540
build software and interact with these

00:06:49,030 --> 00:06:53,950
computers and try to you know use what

00:06:52,540 --> 00:06:56,620
we have today

00:06:53,950 --> 00:06:59,470
it's an Apache License project we've

00:06:56,620 --> 00:07:02,050
designed it to be back-end agnostic so

00:06:59,470 --> 00:07:04,540
while out of the box it runs on IBM q

00:07:02,050 --> 00:07:07,930
IBM's quantum computers and some local

00:07:04,540 --> 00:07:10,150
simulators we include the framework

00:07:07,930 --> 00:07:11,740
itself is not hard-coded for that you

00:07:10,150 --> 00:07:14,110
can write your own back-end if you have

00:07:11,740 --> 00:07:15,930
access to other quantum devices or you

00:07:14,110 --> 00:07:20,080
have your own simulator that you wrote

00:07:15,930 --> 00:07:22,530
and like a lot of open source projects

00:07:20,080 --> 00:07:24,970
it's made up of multiple components

00:07:22,530 --> 00:07:27,640
we've named them after the classical

00:07:24,970 --> 00:07:29,590
elements kind of to be a little funny I

00:07:27,640 --> 00:07:31,419
guess I don't really know I didn't come

00:07:29,590 --> 00:07:33,430
up with the names and the the four

00:07:31,419 --> 00:07:35,470
components of quiz kit are there's the

00:07:33,430 --> 00:07:37,210
tera component which is the base this

00:07:35,470 --> 00:07:39,870
provides the interface between the

00:07:37,210 --> 00:07:44,139
quantum hardware and software it's

00:07:39,870 --> 00:07:46,150
basically the Python SDK for writing

00:07:44,139 --> 00:07:48,250
quantum circuits and compiling them for

00:07:46,150 --> 00:07:50,590
devices and dealing with results then

00:07:48,250 --> 00:07:52,150
there's the air component which is a

00:07:50,590 --> 00:07:56,440
high-performance simulator written in

00:07:52,150 --> 00:07:57,729
C++ and then there's the aqua component

00:07:56,440 --> 00:07:59,320
which is interesting for a lot of

00:07:57,729 --> 00:08:01,120
software developers because it is a

00:07:59,320 --> 00:08:03,039
Python library interface that has

00:08:01,120 --> 00:08:04,870
pre-written algorithms for quantum

00:08:03,039 --> 00:08:06,250
computing so you give it data and an

00:08:04,870 --> 00:08:07,690
expected format and it'll give you the

00:08:06,250 --> 00:08:10,780
result so you don't have to think about

00:08:07,690 --> 00:08:12,880
the quantum information at a low level

00:08:10,780 --> 00:08:14,410
it will just give you like any library

00:08:12,880 --> 00:08:18,340
call and then there's the Ignis

00:08:14,410 --> 00:08:19,900
component which is designed for dealing

00:08:18,340 --> 00:08:21,850
with noise so the computers we have

00:08:19,900 --> 00:08:23,950
today are very noisy this provides you

00:08:21,850 --> 00:08:26,950
some techniques for characterizing that

00:08:23,950 --> 00:08:28,270
noise and trying to mitigate it it was

00:08:26,950 --> 00:08:31,390
at this point in the presentation I

00:08:28,270 --> 00:08:32,950
wanted to show a example application

00:08:31,390 --> 00:08:34,419
something we can actually run on one of

00:08:32,950 --> 00:08:36,490
these quantum computers today to show

00:08:34,419 --> 00:08:39,310
you give you a feel for how you do this

00:08:36,490 --> 00:08:41,409
but before I can do that I really needed

00:08:39,310 --> 00:08:43,270
to provide some background on quantum

00:08:41,409 --> 00:08:46,720
information because it's not something

00:08:43,270 --> 00:08:49,240
that most people know about and this is

00:08:46,720 --> 00:08:51,550
not going to be an exhaustive primer on

00:08:49,240 --> 00:08:53,560
quantum information theory it's just

00:08:51,550 --> 00:08:54,610
going to be the basics so I can explain

00:08:53,560 --> 00:08:56,200
the application

00:08:54,610 --> 00:08:58,720
have some information some lengths and

00:08:56,200 --> 00:09:02,620
places for more information the end if

00:08:58,720 --> 00:09:04,060
people are interested so to start we

00:09:02,620 --> 00:09:07,089
need to talk about the qubit or the

00:09:04,060 --> 00:09:09,610
quantum bit the easiest way I found to

00:09:07,089 --> 00:09:11,140
think about a quantum that is using the

00:09:09,610 --> 00:09:12,970
Bloch sphere which is the sphere on the

00:09:11,140 --> 00:09:15,700
right it's a geometric representation

00:09:12,970 --> 00:09:19,600
for a quantum bit and it lets you

00:09:15,700 --> 00:09:21,399
visualize in your head pretty easily the

00:09:19,600 --> 00:09:23,950
quantum state and what the effect your

00:09:21,399 --> 00:09:25,779
operations are having on it so it's

00:09:23,950 --> 00:09:27,550
represented by the sphere and there's a

00:09:25,779 --> 00:09:30,940
vector represented by that orange line

00:09:27,550 --> 00:09:32,980
and you basically perform operations by

00:09:30,940 --> 00:09:36,250
moving that vector along this any point

00:09:32,980 --> 00:09:37,990
of the surface of the sphere and just

00:09:36,250 --> 00:09:41,250
like a classical computer you can have

00:09:37,990 --> 00:09:46,209
it at the zero state or the one state

00:09:41,250 --> 00:09:47,829
and you can when you perform operations

00:09:46,209 --> 00:09:49,600
you can move it anywhere on the surface

00:09:47,829 --> 00:09:52,269
of the sphere but when it comes time to

00:09:49,600 --> 00:09:57,610
measure to get a result from the quantum

00:09:52,269 --> 00:09:58,959
bit it measures either a 0 or 1 and not

00:09:57,610 --> 00:10:01,329
any of the other information it will

00:09:58,959 --> 00:10:03,250
collapse either up or down and you'll

00:10:01,329 --> 00:10:05,980
get a 0 or 1 out and when you measure

00:10:03,250 --> 00:10:07,329
you lose all of the other information so

00:10:05,980 --> 00:10:09,790
you don't you know if it's pointing

00:10:07,329 --> 00:10:11,829
somewhere else on the sphere you get a 0

00:10:09,790 --> 00:10:13,750
or 1 out and where it's pointing you you

00:10:11,829 --> 00:10:17,709
don't know and it's not recoverable

00:10:13,750 --> 00:10:20,079
after you measure and you perform

00:10:17,709 --> 00:10:22,630
operations on the qubit with what are

00:10:20,079 --> 00:10:24,160
called quantum logic gates the example I

00:10:22,630 --> 00:10:25,750
have here is the EX gate it's also

00:10:24,160 --> 00:10:27,670
called the quantum not gate it's the

00:10:25,750 --> 00:10:29,380
simplest one to think about you can

00:10:27,670 --> 00:10:32,140
think of it as a hundred and eighty

00:10:29,380 --> 00:10:34,690
degree rotation over the x axis so if

00:10:32,140 --> 00:10:37,149
it's pointing up at the zero it would

00:10:34,690 --> 00:10:38,890
just rotate down to point down to one

00:10:37,149 --> 00:10:40,209
which is why it's an odd operation a

00:10:38,890 --> 00:10:44,740
zero becomes a one and if you do it

00:10:40,209 --> 00:10:47,140
again it goes from one to zero but two

00:10:44,740 --> 00:10:48,699
key things to take away about quantum

00:10:47,140 --> 00:10:49,990
logic gates is that first they're

00:10:48,699 --> 00:10:51,940
reversible which is a little bit

00:10:49,990 --> 00:10:54,339
different from your classical computer

00:10:51,940 --> 00:10:55,480
you can run them both ways and the other

00:10:54,339 --> 00:10:58,149
thing which I'm not really going to get

00:10:55,480 --> 00:11:00,040
into too much detail but is that all the

00:10:58,149 --> 00:11:04,000
logic gates can be represented as

00:11:00,040 --> 00:11:06,279
unitary matrix C's which is just to say

00:11:04,000 --> 00:11:07,640
that all of these operations are matrix

00:11:06,279 --> 00:11:11,330
multiplication and

00:11:07,640 --> 00:11:13,010
linear algebra operations so it's just

00:11:11,330 --> 00:11:15,710
matrix multiplication so you have a

00:11:13,010 --> 00:11:17,720
vector representing that the position on

00:11:15,710 --> 00:11:19,370
the sphere and you multiply it by your

00:11:17,720 --> 00:11:21,920
unitary matrix and that's your transform

00:11:19,370 --> 00:11:26,720
and that's if you get more advanced

00:11:21,920 --> 00:11:28,850
that's useful to understand but we've

00:11:26,720 --> 00:11:30,350
only talked about when it's at a 0 or a

00:11:28,850 --> 00:11:33,050
1 what happens if it's pointing

00:11:30,350 --> 00:11:35,990
somewhere in the middle and that's the

00:11:33,050 --> 00:11:38,420
first principle of quantum computers

00:11:35,990 --> 00:11:40,940
that kind of fundamental to understand

00:11:38,420 --> 00:11:42,830
is that when you identically prepare

00:11:40,940 --> 00:11:45,350
multiple qubits they can still behave

00:11:42,830 --> 00:11:47,300
randomly they're probabilistic so in

00:11:45,350 --> 00:11:50,540
this example here I've put it exactly

00:11:47,300 --> 00:11:53,030
halfway between 0 & 1 with like plus 1

00:11:50,540 --> 00:11:55,670
on the x axis and if you were to measure

00:11:53,030 --> 00:12:00,770
when it's in that state you have a 50/50

00:11:55,670 --> 00:12:02,150
chance of getting a 0 or 1 and it's a

00:12:00,770 --> 00:12:03,350
little bit weird to think about you put

00:12:02,150 --> 00:12:05,960
the computer in a state and you get a

00:12:03,350 --> 00:12:08,410
random answer and that randomness is

00:12:05,960 --> 00:12:11,720
inherent to nature and this is actually

00:12:08,410 --> 00:12:14,600
useful it's hard to think about but when

00:12:11,720 --> 00:12:17,090
I get to the example you'll say and the

00:12:14,600 --> 00:12:19,060
quantum gate for putting something in

00:12:17,090 --> 00:12:21,950
superposition is called the Hadamard

00:12:19,060 --> 00:12:23,990
which you can think about as a hundred

00:12:21,950 --> 00:12:25,970
and eighty degree rotation over the X

00:12:23,990 --> 00:12:27,650
plus z axis which is a little abstract

00:12:25,970 --> 00:12:32,380
to think about but you can just see it

00:12:27,650 --> 00:12:34,850
as that diagonal right there and the

00:12:32,380 --> 00:12:39,590
other interesting thing about a Hadamard

00:12:34,850 --> 00:12:42,470
is it's it's it's it's its own inverse

00:12:39,590 --> 00:12:46,820
so if you apply two Hadamard x' you get

00:12:42,470 --> 00:12:48,230
you go from zero to that 50/50 one in

00:12:46,820 --> 00:12:52,520
the middle and if you apply it again it

00:12:48,230 --> 00:12:56,270
goes back to the zero and the same is

00:12:52,520 --> 00:12:58,220
true when it's at the one state so if

00:12:56,270 --> 00:13:00,920
it's pointing down at one you apply a

00:12:58,220 --> 00:13:02,570
Hadamard it will go to the minus x and

00:13:00,920 --> 00:13:08,120
then if you apply it again it'll go back

00:13:02,570 --> 00:13:09,980
to one and then the last operation i

00:13:08,120 --> 00:13:11,990
wanted to talk about is the

00:13:09,980 --> 00:13:14,240
controlled-not gate which is a two qubit

00:13:11,990 --> 00:13:17,450
gate operates on two you've got the

00:13:14,240 --> 00:13:19,040
target bit on the top and the can sorry

00:13:17,450 --> 00:13:20,990
the control bit on the top and the

00:13:19,040 --> 00:13:21,620
target on the bottom and it's basically

00:13:20,990 --> 00:13:24,440
if

00:13:21,620 --> 00:13:27,800
the control is at zero it does nothing

00:13:24,440 --> 00:13:30,710
and if the control is at one the target

00:13:27,800 --> 00:13:32,990
flips it applies an X operation you can

00:13:30,710 --> 00:13:36,560
represent it there I did it the linear

00:13:32,990 --> 00:13:39,890
algebra way so it's that the just the

00:13:36,560 --> 00:13:42,920
coefficients swap so if that was you

00:13:39,890 --> 00:13:45,350
know zero it would be one plus zero and

00:13:42,920 --> 00:13:49,400
then it would just swap so it would

00:13:45,350 --> 00:13:51,560
become a one and then you can put this

00:13:49,400 --> 00:13:53,330
all together to build quantum circuits

00:13:51,560 --> 00:13:56,060
which you can also think about like

00:13:53,330 --> 00:13:58,640
quantum programs and it's just a way of

00:13:56,060 --> 00:14:00,530
representing the series of operations

00:13:58,640 --> 00:14:02,900
and the dependencies between them over

00:14:00,530 --> 00:14:04,700
multiple qubits so in this example we

00:14:02,900 --> 00:14:06,530
apply two ex gates to the first two

00:14:04,700 --> 00:14:08,540
qubits we apply hata Mart's to all of

00:14:06,530 --> 00:14:12,320
them and then we have that one C not

00:14:08,540 --> 00:14:13,820
between qubit 2 and qubit zero and then

00:14:12,320 --> 00:14:15,020
those are the only things I haven't

00:14:13,820 --> 00:14:19,370
talked about yet which are just

00:14:15,020 --> 00:14:21,380
measurements and then so you measure

00:14:19,370 --> 00:14:22,790
from a quantum bit to a classical bit

00:14:21,380 --> 00:14:25,130
and then you'll get a 0 or a 1 on the

00:14:22,790 --> 00:14:27,950
output and this is a way of visually

00:14:25,130 --> 00:14:29,810
representing a program where you can see

00:14:27,950 --> 00:14:31,310
all of the operations at once and how

00:14:29,810 --> 00:14:33,680
they interact with each other

00:14:31,310 --> 00:14:36,640
it doesn't explicitly show timing just

00:14:33,680 --> 00:14:39,320
the dependency between the operations

00:14:36,640 --> 00:14:42,850
and that's all I really all you really

00:14:39,320 --> 00:14:45,200
need to know to understand the basics of

00:14:42,850 --> 00:14:47,390
the example application I want to talk

00:14:45,200 --> 00:14:49,640
about which is the Bernstein Val's irani

00:14:47,390 --> 00:14:51,980
algorithm which is just it was a paper

00:14:49,640 --> 00:14:54,350
published in 1993 about this

00:14:51,980 --> 00:14:55,640
hypothetical situation and it's an

00:14:54,350 --> 00:14:57,710
algorithm you can run on a classical

00:14:55,640 --> 00:15:00,710
computer and a quantum computer the

00:14:57,710 --> 00:15:02,510
basic premise is there is this Oracle

00:15:00,710 --> 00:15:05,960
function that has a secret number a

00:15:02,510 --> 00:15:07,910
secret bit string you can ask the Oracle

00:15:05,960 --> 00:15:09,980
a question by giving it your own bit

00:15:07,910 --> 00:15:12,320
string of the same length and it will

00:15:09,980 --> 00:15:15,920
give you the dot product output of the

00:15:12,320 --> 00:15:20,240
secret and your input and the goal is to

00:15:15,920 --> 00:15:22,940
figure out what that secret is and it

00:15:20,240 --> 00:15:25,430
turns out on a classical computer the

00:15:22,940 --> 00:15:27,980
best way to solve this is by looping

00:15:25,430 --> 00:15:31,390
over every bit so you give it what if

00:15:27,980 --> 00:15:35,360
you have 4 bits you give it 1 0 0 0 then

00:15:31,390 --> 00:15:36,920
0 1 0 0 and so on and so forth until

00:15:35,360 --> 00:15:38,690
figure out what the value at each

00:15:36,920 --> 00:15:40,279
position is and then you know your bit

00:15:38,690 --> 00:15:43,430
string so the efficiency the algorithm

00:15:40,279 --> 00:15:45,950
on a classical computer is om but on a

00:15:43,430 --> 00:15:50,839
quantum computer you can do this in a

00:15:45,950 --> 00:15:52,459
single call to the to the Oracle

00:15:50,839 --> 00:15:56,630
function so you give it your input

00:15:52,459 --> 00:15:59,209
you'll get the output in one call it

00:15:56,630 --> 00:16:00,560
turns out the implementation of the

00:15:59,209 --> 00:16:03,950
Oracle function is actually really

00:16:00,560 --> 00:16:07,190
simple it's just a bunch of C knots you

00:16:03,950 --> 00:16:10,970
basically put the control bit on any

00:16:07,190 --> 00:16:13,700
qubit where there's a where there's one

00:16:10,970 --> 00:16:17,750
and then the target is this temporary

00:16:13,700 --> 00:16:19,250
bit and 0 if there's nothing you put

00:16:17,750 --> 00:16:20,990
nothing if there's zero and this relies

00:16:19,250 --> 00:16:24,610
on something called phase kickback

00:16:20,990 --> 00:16:32,290
which is where if that temp bit is a 1

00:16:24,610 --> 00:16:35,480
the phase of the qubit will flip and

00:16:32,290 --> 00:16:36,769
using the Hadamard gate we can if you

00:16:35,480 --> 00:16:39,380
remember what I said before

00:16:36,769 --> 00:16:41,480
where the Hadamard is itself inverse so

00:16:39,380 --> 00:16:45,470
if it's at plus X it goes to 0 and if

00:16:41,480 --> 00:16:47,269
it's at minus X it goes down to 1 so we

00:16:45,470 --> 00:16:49,130
can we can use this phase kick back if

00:16:47,269 --> 00:16:51,500
everything's a zero on the input we can

00:16:49,130 --> 00:16:53,390
use that to flip a 0 2 or 1 and that's

00:16:51,500 --> 00:16:55,940
how the Oracle works so we can plug this

00:16:53,390 --> 00:16:58,850
into a bigger circuit where we put the

00:16:55,940 --> 00:17:01,610
temp bit at an X to make it a 1 then we

00:16:58,850 --> 00:17:05,419
apply how to march to everything to move

00:17:01,610 --> 00:17:07,939
it to that plus X state then we apply

00:17:05,419 --> 00:17:10,130
our Oracle function with C knots to make

00:17:07,939 --> 00:17:13,280
it you know for our secret value which

00:17:10,130 --> 00:17:15,079
is 1 0 0 1 then we apply how to marts

00:17:13,280 --> 00:17:16,160
again and we get our 1 output and then

00:17:15,079 --> 00:17:19,459
we measure and we get the right answer

00:17:16,160 --> 00:17:22,100
every time or at least hopefully and now

00:17:19,459 --> 00:17:24,439
I'm going to hopefully show this to you

00:17:22,100 --> 00:17:27,919
on a real quantum computer so let's hope

00:17:24,439 --> 00:17:32,120
this live demo works it's this legible

00:17:27,919 --> 00:17:36,650
to everyone if not I can make the font

00:17:32,120 --> 00:17:39,650
bigger that's good ok so the first thing

00:17:36,650 --> 00:17:41,210
we do is we create our our quantum

00:17:39,650 --> 00:17:44,210
registers which are just the qubit so we

00:17:41,210 --> 00:17:46,520
make one for bit for our secret or for

00:17:44,210 --> 00:17:48,590
our input for bits for Q we have the one

00:17:46,520 --> 00:17:50,630
one qubit for the temp and then our

00:17:48,590 --> 00:17:59,029
four bits classical bits for their

00:17:50,630 --> 00:18:00,559
result then we build our Oracle function

00:17:59,029 --> 00:18:02,270
and I'm just using a for loop here for

00:18:00,559 --> 00:18:04,520
brevity where we just loop over our

00:18:02,270 --> 00:18:06,860
secret which is 1 0 0 1 you can put any

00:18:04,520 --> 00:18:08,750
value there or an integer and we just

00:18:06,860 --> 00:18:11,960
loop over it and when there's a 1 we

00:18:08,750 --> 00:18:15,799
apply a C not a C not gate which is C X

00:18:11,960 --> 00:18:18,529
and the Python code on our bits and we

00:18:15,799 --> 00:18:21,399
build an Oracle function with that then

00:18:18,529 --> 00:18:26,029
we plug that into our bigger circuit

00:18:21,399 --> 00:18:28,700
where we applied the V X X then our

00:18:26,029 --> 00:18:31,159
Hadamard zhan everything then we add our

00:18:28,700 --> 00:18:35,990
Oracle function and we apply the hata

00:18:31,159 --> 00:18:39,580
marts again and we measure and then we

00:18:35,990 --> 00:18:41,750
can draw the circuit to make sure our

00:18:39,580 --> 00:18:44,090
what we wrote in Python code to

00:18:41,750 --> 00:18:47,570
represent this matches what we have in

00:18:44,090 --> 00:18:48,919
our head and here it does match because

00:18:47,570 --> 00:18:53,870
I copied the code from this for my

00:18:48,919 --> 00:18:55,970
presentation and then we can run this on

00:18:53,870 --> 00:18:58,730
a simulator real quickly just to there 5

00:18:55,970 --> 00:19:00,830
because it's a little bit faster so we

00:18:58,730 --> 00:19:02,179
just list all the simulators we picked

00:19:00,830 --> 00:19:03,980
the one we want you can read the

00:19:02,179 --> 00:19:08,330
documentation for what all the different

00:19:03,980 --> 00:19:10,789
ones do and we get a result and then we

00:19:08,330 --> 00:19:12,890
can print the result and we can see that

00:19:10,789 --> 00:19:14,809
when we we run it a thousand 24 times

00:19:12,890 --> 00:19:16,549
because I said they're probabilistic and

00:19:14,809 --> 00:19:19,370
also the real computers are noisy so you

00:19:16,549 --> 00:19:21,200
run it multiple times to get the full

00:19:19,370 --> 00:19:23,240
probability so we run it a thousand 24

00:19:21,200 --> 00:19:28,450
times and we get our answer all the time

00:19:23,240 --> 00:19:33,169
and we can graph that as well we get

00:19:28,450 --> 00:19:35,960
100% of the time 1 0 0 1 and now we can

00:19:33,169 --> 00:19:37,669
run it on a real quantum computer so

00:19:35,960 --> 00:19:39,679
first I load my account my credentials

00:19:37,669 --> 00:19:41,360
and I list the available devices and

00:19:39,679 --> 00:19:43,669
there are three quantum computers

00:19:41,360 --> 00:19:46,309
available to me with my credentials and

00:19:43,669 --> 00:19:48,830
then a simulator that's online and I can

00:19:46,309 --> 00:19:50,299
print the state of them and because it's

00:19:48,830 --> 00:19:52,070
so blown up and the resolutions low you

00:19:50,299 --> 00:19:53,720
can only see one of the three but you

00:19:52,070 --> 00:19:56,120
can see right there the qubit mapping

00:19:53,720 --> 00:19:59,590
and then the current state so it's 14

00:19:56,120 --> 00:20:01,480
qubits and some parameters about it

00:19:59,590 --> 00:20:05,470
and we're just gonna pick one because

00:20:01,480 --> 00:20:10,810
this one is fast and then run the

00:20:05,470 --> 00:20:12,250
circuit on it and this takes some time

00:20:10,810 --> 00:20:13,810
because it's a shared device there are

00:20:12,250 --> 00:20:15,510
only three quantum computers in the

00:20:13,810 --> 00:20:18,040
world available to everyone right now

00:20:15,510 --> 00:20:19,450
and it's cute one but there's gonna take

00:20:18,040 --> 00:20:20,800
a little bit of time and because I only

00:20:19,450 --> 00:20:23,260
have two minutes left according to the

00:20:20,800 --> 00:20:24,850
clock uh-huh I'm just gonna switch

00:20:23,260 --> 00:20:26,980
because I saved the results ahead of

00:20:24,850 --> 00:20:28,630
time from a previous run just to give

00:20:26,980 --> 00:20:31,360
you an idea so you run the circuit and

00:20:28,630 --> 00:20:33,700
then you get an output histogram graph

00:20:31,360 --> 00:20:36,010
that looks like this and you can see

00:20:33,700 --> 00:20:37,960
here that the real computer is noisy

00:20:36,010 --> 00:20:39,760
there's not Fault correction so there's

00:20:37,960 --> 00:20:41,290
noise in the system so you can see here

00:20:39,760 --> 00:20:43,780
we ran it a thousand twenty four times

00:20:41,290 --> 00:20:46,330
and 46 percent of the results were the

00:20:43,780 --> 00:20:49,120
right answer but then we had at least

00:20:46,330 --> 00:20:50,770
once every single other result because

00:20:49,120 --> 00:20:52,480
there's no fault tolerance and noise and

00:20:50,770 --> 00:20:54,220
the system gave us the wrong answer and

00:20:52,480 --> 00:20:58,930
that's a big reason why we run it so

00:20:54,220 --> 00:21:00,640
many times and that's one of the big

00:20:58,930 --> 00:21:04,540
limitations I was talking about earlier

00:21:00,640 --> 00:21:06,640
with the current devices so the other

00:21:04,540 --> 00:21:08,620
thing that you might be thinking is this

00:21:06,640 --> 00:21:11,020
example is terrible because no one in

00:21:08,620 --> 00:21:12,880
the real world actually writes in oracle

00:21:11,020 --> 00:21:15,610
function no one that your day job says

00:21:12,880 --> 00:21:17,890
oh here I need you to write a function

00:21:15,610 --> 00:21:18,970
with a secret value and no one is going

00:21:17,890 --> 00:21:22,630
to know what that secret is and they

00:21:18,970 --> 00:21:24,700
have to probe it with a dot product this

00:21:22,630 --> 00:21:26,590
is just an example to prove that quantum

00:21:24,700 --> 00:21:30,400
computers can do something better than a

00:21:26,590 --> 00:21:32,050
classical computer there are real-world

00:21:30,400 --> 00:21:33,730
applications where the current devices

00:21:32,050 --> 00:21:35,610
are being used the biggest example that

00:21:33,730 --> 00:21:38,910
I always talk about is quantum chemistry

00:21:35,610 --> 00:21:41,650
using the quantum computers to simulate

00:21:38,910 --> 00:21:44,230
molecule creation which is being used

00:21:41,650 --> 00:21:47,680
for a lot of it's being investigated by

00:21:44,230 --> 00:21:49,390
a lot of different companies so just to

00:21:47,680 --> 00:21:52,360
wrap up with what little time I have

00:21:49,390 --> 00:21:54,370
left I want to talk about open sources

00:21:52,360 --> 00:21:58,240
role in quantum computing so it's being

00:21:54,370 --> 00:22:00,160
used to foster collaboration between

00:21:58,240 --> 00:22:01,900
research institutes this is still a

00:22:00,160 --> 00:22:04,120
developing field the technology's very

00:22:01,900 --> 00:22:07,300
new and not one single company or

00:22:04,120 --> 00:22:09,820
individual can do it on their own so by

00:22:07,300 --> 00:22:11,380
having all the tools open source you can

00:22:09,820 --> 00:22:12,770
get collaboration between multiple

00:22:11,380 --> 00:22:15,380
entities to try to make

00:22:12,770 --> 00:22:16,970
the ecosystem better and moving forward

00:22:15,380 --> 00:22:18,860
and that's something I see day-to-day

00:22:16,970 --> 00:22:20,809
working on this project in the open we

00:22:18,860 --> 00:22:23,300
get contributors from research labs

00:22:20,809 --> 00:22:26,210
companies all trying to use this for

00:22:23,300 --> 00:22:28,040
their own research in the field the

00:22:26,210 --> 00:22:29,900
other thing which I personally found

00:22:28,040 --> 00:22:32,090
very useful is it's a great educational

00:22:29,900 --> 00:22:35,360
tool having everything open about this

00:22:32,090 --> 00:22:37,040
enables people to dig in and learn I

00:22:35,360 --> 00:22:39,290
don't have a background in quantum

00:22:37,040 --> 00:22:41,420
information theory or in physics I must

00:22:39,290 --> 00:22:43,340
open source software developer and just

00:22:41,420 --> 00:22:44,840
by looking at this digging in figuring

00:22:43,340 --> 00:22:46,670
out how it all worked I was able to

00:22:44,840 --> 00:22:48,440
learn enough to at least work on the

00:22:46,670 --> 00:22:52,309
project and also give a presentation

00:22:48,440 --> 00:22:54,320
here and something I found amusing is

00:22:52,309 --> 00:22:58,940
that history is kind of repeating itself

00:22:54,320 --> 00:23:00,290
a bit because we're starting with open

00:22:58,940 --> 00:23:01,790
software and if you look at the history

00:23:00,290 --> 00:23:03,500
of free software it's kind of the same

00:23:01,790 --> 00:23:06,020
thing except we have all the lessons

00:23:03,500 --> 00:23:07,970
learned and the last thing is there are

00:23:06,020 --> 00:23:11,120
actually a ton of open source projects

00:23:07,970 --> 00:23:12,500
not outside of IBM that are related to

00:23:11,120 --> 00:23:14,990
quantum computing if you click this link

00:23:12,500 --> 00:23:17,360
and search for quantum computing you'll

00:23:14,990 --> 00:23:19,670
get 300 plus results which is really

00:23:17,360 --> 00:23:22,250
exciting to me the field is still like

00:23:19,670 --> 00:23:23,330
day zero I mean you saw I ran a example

00:23:22,250 --> 00:23:29,960
and I didn't get the right answer every

00:23:23,330 --> 00:23:31,190
time but even with that it's yeah so I'm

00:23:29,960 --> 00:23:32,840
just gonna skip that slide because I'm

00:23:31,190 --> 00:23:34,550
out of time and everyone's brushed and

00:23:32,840 --> 00:23:36,050
just have some links for more

00:23:34,550 --> 00:23:37,970
information including my workshop

00:23:36,050 --> 00:23:40,040
tomorrow afternoon so if people want to

00:23:37,970 --> 00:23:41,450
learn more in depth about quantum

00:23:40,040 --> 00:23:43,400
information theory and using kiss kit

00:23:41,450 --> 00:23:45,230
they can come to that and they're also

00:23:43,400 --> 00:23:48,260
the slides and some other useful places

00:23:45,230 --> 00:23:51,950
so with that I think I'm out of time and

00:23:48,260 --> 00:23:51,950
[Applause]

00:23:51,970 --> 00:23:57,470
though one of the simulators that the

00:23:54,649 --> 00:23:59,750
air project has support for extensible

00:23:57,470 --> 00:24:02,600
noise modeling so you can create a noise

00:23:59,750 --> 00:24:04,730
model for your device or you there are

00:24:02,600 --> 00:24:06,679
some example ones that you can inject

00:24:04,730 --> 00:24:10,600
when you call the simulator and it will

00:24:06,679 --> 00:24:10,600

YouTube URL: https://www.youtube.com/watch?v=2Lt84UWdoOk


