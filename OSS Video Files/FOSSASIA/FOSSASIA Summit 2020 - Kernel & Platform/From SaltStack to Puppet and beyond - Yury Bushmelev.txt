Title: From SaltStack to Puppet and beyond - Yury Bushmelev
Publication date: 2020-03-31
Playlist: FOSSASIA Summit 2020 - Kernel & Platform
Description: 
	This is story of our journey from SaltStack to Puppet and beyond. This talk will answer following questions:

- why we moved from SaltStack
- why Puppet was chosen
- how to use Puppet OpenSource in painless way
- which orchestration tool to use with Puppet
- what is next

FOSSASIA Summit 2020 - Kernel & Platform

Speaker: Yury Bushmelev, SP Digital
Captions: 
	00:00:00,030 --> 00:00:07,290
so we started right actually it's hard

00:00:04,529 --> 00:00:10,200
to talk with audience when you cannot

00:00:07,290 --> 00:00:12,960
see audience but well I will try I guess

00:00:10,200 --> 00:00:16,289
I'm doing it first time is like when

00:00:12,960 --> 00:00:21,029
audience inside is less than audience

00:00:16,289 --> 00:00:24,689
outside are anyway so I'm Yuri

00:00:21,029 --> 00:00:27,500
I am from speed digital this is part of

00:00:24,689 --> 00:00:31,830
a big group we're doing some

00:00:27,500 --> 00:00:36,030
digitalization things for SP group and I

00:00:31,830 --> 00:00:38,820
will speak today about our transition

00:00:36,030 --> 00:00:43,410
our migration from Soul stick to pipe it

00:00:38,820 --> 00:00:47,700
and why we did this what we learned that

00:00:43,410 --> 00:00:51,360
why well what to do what do not do and

00:00:47,700 --> 00:00:56,160
things like that and then I will say a

00:00:51,360 --> 00:00:59,039
bit about what's next step after we will

00:00:56,160 --> 00:01:02,219
finish this migration so in first horse

00:00:59,039 --> 00:01:07,229
migration is not finished yet it's in

00:01:02,219 --> 00:01:14,189
progress so we are still like maybe 40

00:01:07,229 --> 00:01:21,240
percent done but anyway so what's the

00:01:14,189 --> 00:01:25,049
scale of our organization we have about

00:01:21,240 --> 00:01:27,540
hundred developers and we have a lot of

00:01:25,049 --> 00:01:35,040
products so our developers split into

00:01:27,540 --> 00:01:39,869
product teams and so we si infra team

00:01:35,040 --> 00:01:43,740
actually doing a kind of platform for

00:01:39,869 --> 00:01:46,430
our developers for product teams so this

00:01:43,740 --> 00:01:49,680
is really persistence layer databases

00:01:46,430 --> 00:01:53,399
all the stuff which is common for

00:01:49,680 --> 00:01:56,369
everyone and yeah we are just six

00:01:53,399 --> 00:02:00,240
persons and we run in right now about

00:01:56,369 --> 00:02:02,430
200 vm's in every cloud we have on Prem

00:02:00,240 --> 00:02:05,040
part as well but I will not talk about

00:02:02,430 --> 00:02:07,250
this part here in this talk because it's

00:02:05,040 --> 00:02:12,150
it's complicated

00:02:07,250 --> 00:02:14,700
so yeah usual question when you see the

00:02:12,150 --> 00:02:18,680
topic who what's wrong we saw

00:02:14,700 --> 00:02:22,920
I guess someone using salt here No

00:02:18,680 --> 00:02:26,060
someone using puppet here someone

00:02:22,920 --> 00:02:29,400
monitoring YouTube channel for comments

00:02:26,060 --> 00:02:32,150
okay so let me know if there were any

00:02:29,400 --> 00:02:35,730
question in the flow

00:02:32,150 --> 00:02:37,769
okay so what's wrong result first think

00:02:35,730 --> 00:02:40,889
actually when I joined the company I

00:02:37,769 --> 00:02:42,659
started to use all first time I had some

00:02:40,889 --> 00:02:45,480
background with instable and pepper

00:02:42,659 --> 00:02:50,639
tourism and it was like first meeting we

00:02:45,480 --> 00:02:56,010
sold so it was a bit hard for me like I

00:02:50,639 --> 00:02:59,069
hit hard into this some mean when I will

00:02:56,010 --> 00:03:01,019
explain what's wrong result or why I'd

00:02:59,069 --> 00:03:05,639
prefer puppet I will explain it from

00:03:01,019 --> 00:03:06,419
point of view of team so this is team

00:03:05,639 --> 00:03:09,299
white

00:03:06,419 --> 00:03:11,430
meaning so why it's good for team or why

00:03:09,299 --> 00:03:15,000
it's bad for team because if you are

00:03:11,430 --> 00:03:18,090
just alone doing things we will just use

00:03:15,000 --> 00:03:19,799
what you like but if we are working in a

00:03:18,090 --> 00:03:26,189
team you need to take care about the

00:03:19,799 --> 00:03:28,109
team so yeah first thing is I feel it

00:03:26,189 --> 00:03:29,970
inconsistent it doesn't mean it's

00:03:28,109 --> 00:03:33,599
inconsistent in terms of managing

00:03:29,970 --> 00:03:36,989
virtual machines so if it applied state

00:03:33,599 --> 00:03:39,750
or apply it some something on your show

00:03:36,989 --> 00:03:41,669
machine it will be applied there so it's

00:03:39,750 --> 00:03:43,439
consistent but I am talking about

00:03:41,669 --> 00:03:47,549
different inconsistency when you know

00:03:43,439 --> 00:03:49,590
when you doing similar things in

00:03:47,549 --> 00:03:52,859
different modules different states and

00:03:49,590 --> 00:03:56,489
they behave in a different way and they

00:03:52,859 --> 00:04:01,469
have different names so in some state

00:03:56,489 --> 00:04:05,280
you you can see like names like install

00:04:01,469 --> 00:04:07,819
it or present in another model you can

00:04:05,280 --> 00:04:12,629
see similar things name it differently

00:04:07,819 --> 00:04:17,789
and this is like you so you need to keep

00:04:12,629 --> 00:04:19,979
a lot of names a lot of context in your

00:04:17,789 --> 00:04:25,740
head when you written something and when

00:04:19,979 --> 00:04:29,460
we debug in it so then it's actually

00:04:25,740 --> 00:04:32,729
error-prone so for example you can do

00:04:29,460 --> 00:04:35,910
miss type like do a typo in right

00:04:32,729 --> 00:04:38,849
require instead of requires and you will

00:04:35,910 --> 00:04:41,310
never know about that the only way to

00:04:38,849 --> 00:04:45,270
know that is apply and see that the

00:04:41,310 --> 00:04:47,599
actual steps solved it there are

00:04:45,270 --> 00:04:52,639
different one from what you expected and

00:04:47,599 --> 00:04:57,360
there is no way to see that and actually

00:04:52,639 --> 00:05:01,199
yeah I type it a bit earlier but anyway

00:04:57,360 --> 00:05:04,289
so it's hard to debug because diagnostic

00:05:01,199 --> 00:05:05,550
messages are about nothing like hey

00:05:04,289 --> 00:05:10,550
there is some error

00:05:05,550 --> 00:05:13,710
I cannot compile data set for example I

00:05:10,550 --> 00:05:17,550
so it's really hard to understand what

00:05:13,710 --> 00:05:19,710
happens and where is the error it's

00:05:17,550 --> 00:05:21,870
seven worse when you write a lot just

00:05:19,710 --> 00:05:24,180
before and then you're trying to apply

00:05:21,870 --> 00:05:28,740
it first time and you see that hey they

00:05:24,180 --> 00:05:31,949
are serving somewhere then it's llamo

00:05:28,740 --> 00:05:35,130
well yeah Mel is good and the bet at the

00:05:31,949 --> 00:05:40,620
same time it's good because it's easy to

00:05:35,130 --> 00:05:42,210
write and more or less easy to read yeah

00:05:40,620 --> 00:05:43,680
actually it's more or less reason to

00:05:42,210 --> 00:05:46,229
write as well because you can hit

00:05:43,680 --> 00:05:49,349
anything like know which is false and

00:05:46,229 --> 00:05:53,969
you never know about that until you hit

00:05:49,349 --> 00:05:57,780
into that but when you're reaching llamo

00:05:53,969 --> 00:06:01,409
everyday like hundred few hundred lines

00:05:57,780 --> 00:06:04,349
of llamo every day and debugging it so a

00:06:01,409 --> 00:06:07,289
when you're using it as a language like

00:06:04,349 --> 00:06:10,039
programming language I feel it's wrong

00:06:07,289 --> 00:06:14,310
so it's not programming language it's

00:06:10,039 --> 00:06:18,030
it's declarative configuration language

00:06:14,310 --> 00:06:21,870
is different so I guess I am wall is a

00:06:18,030 --> 00:06:29,280
bit overhyped and people already started

00:06:21,870 --> 00:06:33,509
to mention that so next this is actually

00:06:29,280 --> 00:06:35,969
most critical part I'd say because I'm

00:06:33,509 --> 00:06:39,150
okay with ginger in ansible because they

00:06:35,969 --> 00:06:42,660
did it in more or less okay way but salt

00:06:39,150 --> 00:06:45,180
really wrong way they applied yamo they

00:06:42,660 --> 00:06:50,190
applied ginger on top of llamo so they

00:06:45,180 --> 00:06:52,830
generating llamo by ginger actually and

00:06:50,190 --> 00:06:56,310
so if you need some iterations like you

00:06:52,830 --> 00:06:58,830
need for loop or some to do something or

00:06:56,310 --> 00:07:02,010
you need some conditions you need to

00:06:58,830 --> 00:07:03,870
write ginger and this ginger will like

00:07:02,010 --> 00:07:07,710
between those ginger block you will

00:07:03,870 --> 00:07:11,550
write llamo it's okay if you're writing

00:07:07,710 --> 00:07:13,760
just I don't know single state 400 lines

00:07:11,550 --> 00:07:18,630
but if you have thousand planes and

00:07:13,760 --> 00:07:21,960
complex logic there I'd say good luck

00:07:18,630 --> 00:07:27,890
with the back in that because it's it's

00:07:21,960 --> 00:07:30,960
hella hard so and next which is actually

00:07:27,890 --> 00:07:34,320
because of previous one so you cannot

00:07:30,960 --> 00:07:37,740
limit it because to limit it you need to

00:07:34,320 --> 00:07:41,790
do parsing of ginger so you need to

00:07:37,740 --> 00:07:48,120
write core of salt to do the link which

00:07:41,790 --> 00:07:50,880
is again it's insane firstly initially I

00:07:48,120 --> 00:07:54,270
wrote this because this this was my

00:07:50,880 --> 00:07:57,090
impression so I spent a few days trying

00:07:54,270 --> 00:08:01,050
to find some unit testing for salt I

00:07:57,090 --> 00:08:04,650
didn't found but recently I just

00:08:01,050 --> 00:08:06,570
mentioned it there is salt check it had

00:08:04,650 --> 00:08:08,730
just happened SATA dentally I saw it

00:08:06,570 --> 00:08:12,240
somewhere and then I realized that it

00:08:08,730 --> 00:08:14,160
was three years ago were easy but nobody

00:08:12,240 --> 00:08:18,060
know about that it seems all I didn't

00:08:14,160 --> 00:08:20,210
found it in Google at least I checked it

00:08:18,060 --> 00:08:26,150
history yesterday and yeah it's from

00:08:20,210 --> 00:08:30,090
2017 there I don't know why why it's was

00:08:26,150 --> 00:08:32,880
hard to find it ok so this is my

00:08:30,090 --> 00:08:39,060
impression from salt why I don't like it

00:08:32,880 --> 00:08:41,250
from team view perspective so why puppet

00:08:39,060 --> 00:08:44,430
again from team view perspective

00:08:41,250 --> 00:08:45,570
yeah this is actually why what I will

00:08:44,430 --> 00:08:50,490
talk about today

00:08:45,570 --> 00:08:52,830
but seriously first of

00:08:50,490 --> 00:08:55,350
this is actually the same with salt

00:08:52,830 --> 00:08:58,890
right salt half Adrian Piper trap agent

00:08:55,350 --> 00:09:04,190
so it's smaller less same I will not

00:08:58,890 --> 00:09:06,810
keep here more time so then it use

00:09:04,190 --> 00:09:08,670
domain-specific language so this

00:09:06,810 --> 00:09:13,080
language actually it is spatially design

00:09:08,670 --> 00:09:15,180
it for task area so it's not llamo so

00:09:13,080 --> 00:09:17,400
you can write meaningful constructions

00:09:15,180 --> 00:09:22,320
meaningful things in meaningful language

00:09:17,400 --> 00:09:26,880
and it's declarative and actually I did

00:09:22,320 --> 00:09:28,950
mention here it's I can say it's

00:09:26,880 --> 00:09:31,850
functional language so it's immutable

00:09:28,950 --> 00:09:34,980
you cannot change things accidentally

00:09:31,850 --> 00:09:36,690
which is really good so yeah you need to

00:09:34,980 --> 00:09:39,150
take care about that you need to write

00:09:36,690 --> 00:09:41,100
maybe a bit more but you cannot just

00:09:39,150 --> 00:09:44,930
accidentally change some parameter

00:09:41,100 --> 00:09:49,560
somewhere and it will affect everything

00:09:44,930 --> 00:09:51,600
so then there is built-in support for

00:09:49,560 --> 00:09:54,510
syntax check there is support for

00:09:51,600 --> 00:09:57,810
linking there is support for style

00:09:54,510 --> 00:10:01,950
checking so you can keep your repository

00:09:57,810 --> 00:10:04,920
your puppet code in well in good form in

00:10:01,950 --> 00:10:06,750
good condition which is really good when

00:10:04,920 --> 00:10:08,850
you're working in a team because team

00:10:06,750 --> 00:10:11,400
usually have different like every

00:10:08,850 --> 00:10:14,640
teammate has different vision of style

00:10:11,400 --> 00:10:17,040
and whatever else or you need to somehow

00:10:14,640 --> 00:10:20,310
take care about that way stop it you can

00:10:17,040 --> 00:10:22,590
just put linked in with correction right

00:10:20,310 --> 00:10:27,060
in your CI CT pipeline and we will have

00:10:22,590 --> 00:10:33,020
no issues with that then you can use our

00:10:27,060 --> 00:10:36,090
spec the usual tool for Ruby world and

00:10:33,020 --> 00:10:39,330
people usually know a bit at least but

00:10:36,090 --> 00:10:41,850
about that and it's really powerful and

00:10:39,330 --> 00:10:45,300
then you can use say respect which is

00:10:41,850 --> 00:10:50,430
very similar to a spec to do a certain

00:10:45,300 --> 00:10:56,040
tests so this Walt is really really good

00:10:50,430 --> 00:10:58,380
tied together then there is high error

00:10:56,040 --> 00:11:03,090
which is so if you're not familiar with

00:10:58,380 --> 00:11:04,080
puppet I can say this is kind of mine

00:11:03,090 --> 00:11:06,930
insult

00:11:04,080 --> 00:11:09,330
or this is kind of worried actually I

00:11:06,930 --> 00:11:10,560
almost forgot insult but yes it was

00:11:09,330 --> 00:11:14,519
variables there

00:11:10,560 --> 00:11:17,610
so single database of settings which

00:11:14,519 --> 00:11:20,880
will apply to your actual quote actual

00:11:17,610 --> 00:11:23,579
statements and this is hierarchical

00:11:20,880 --> 00:11:27,149
database I will spend some time later on

00:11:23,579 --> 00:11:29,100
this and good to think there is

00:11:27,149 --> 00:11:30,660
parameters out to look up but I will

00:11:29,100 --> 00:11:36,269
explain it a bit later as well

00:11:30,660 --> 00:11:39,470
and then it's written in Ruby so you can

00:11:36,269 --> 00:11:42,990
use anything which is done in Ruby world

00:11:39,470 --> 00:11:43,800
the whole Ruby ecosystem which is really

00:11:42,990 --> 00:11:46,920
really great

00:11:43,800 --> 00:11:50,100
I entered that world really late just

00:11:46,920 --> 00:11:52,589
maybe a year or two ago and I still

00:11:50,100 --> 00:11:57,720
think it's really nice because it's it's

00:11:52,589 --> 00:11:59,459
very very well designed so next question

00:11:57,720 --> 00:12:03,810
is why we decided to go as open-source

00:11:59,459 --> 00:12:09,149
puppet why we didn't get puppet

00:12:03,810 --> 00:12:11,010
enterprise that good question and the

00:12:09,149 --> 00:12:15,990
answer is actually simple because we can

00:12:11,010 --> 00:12:18,630
I seen no real reason well I'm okay to

00:12:15,990 --> 00:12:22,140
pay money for good thing it's it's okay

00:12:18,630 --> 00:12:26,190
but I don't like to pay money for things

00:12:22,140 --> 00:12:28,440
which actually limiting you so and I

00:12:26,190 --> 00:12:31,020
don't like having a graphical user

00:12:28,440 --> 00:12:32,820
interface because this is actually

00:12:31,020 --> 00:12:36,089
making you well

00:12:32,820 --> 00:12:38,640
usually not you but someone might decide

00:12:36,089 --> 00:12:42,420
okay I have graphical interface so I can

00:12:38,640 --> 00:12:44,399
just do anything there and nobody know

00:12:42,420 --> 00:12:46,380
what actually happens after like they

00:12:44,399 --> 00:12:50,220
changed some parameters and there is no

00:12:46,380 --> 00:12:52,079
code behind that so I'd prefer to put

00:12:50,220 --> 00:12:55,620
everything into a git repo and then I

00:12:52,079 --> 00:12:56,520
have I have a legit because I can see

00:12:55,620 --> 00:12:58,709
transactions there

00:12:56,520 --> 00:13:02,550
I have everything there I have

00:12:58,709 --> 00:13:05,490
visibility so for me as a developer

00:13:02,550 --> 00:13:06,420
before all schools is admin Evan it's

00:13:05,490 --> 00:13:10,290
still better

00:13:06,420 --> 00:13:13,339
I don't like changing things directly so

00:13:10,290 --> 00:13:16,250
that's why we did that

00:13:13,339 --> 00:13:19,190
but maybe we'll change our main

00:13:16,250 --> 00:13:21,080
our decision later but because of Piper

00:13:19,190 --> 00:13:26,330
trim is eight or things like that or

00:13:21,080 --> 00:13:31,730
piped CIS compliance so it still can be

00:13:26,330 --> 00:13:34,490
changed yeah so but usually people

00:13:31,730 --> 00:13:37,880
complains when you're talking about

00:13:34,490 --> 00:13:39,950
piped people will say hey it's hard to

00:13:37,880 --> 00:13:42,110
use this have to learn it's complicated

00:13:39,950 --> 00:13:44,630
I don't like it I will just run in Sybil

00:13:42,110 --> 00:13:45,140
I write hundred lines of yamo and it's

00:13:44,630 --> 00:13:47,930
okay

00:13:45,140 --> 00:13:50,360
yeah if you manage it I don't know ten

00:13:47,930 --> 00:13:54,410
we have some machines and you just doing

00:13:50,360 --> 00:13:56,750
it once like after deployment yeah yeah

00:13:54,410 --> 00:13:59,980
it's okay just too sensible just or

00:13:56,750 --> 00:14:04,340
puppet bolt they doing similar things

00:13:59,980 --> 00:14:07,160
but if you're managing hundred teams or

00:14:04,340 --> 00:14:11,660
more or thousand servers like widget in

00:14:07,160 --> 00:14:14,510
Lozada in Prairie bubble as other heroes

00:14:11,660 --> 00:14:17,240
see that appliance states every time

00:14:14,510 --> 00:14:19,610
from set of servers like that

00:14:17,240 --> 00:14:21,350
pushing module actually do not work well

00:14:19,610 --> 00:14:23,840
in that can in that situation because

00:14:21,350 --> 00:14:25,820
every time you will see that this error

00:14:23,840 --> 00:14:28,610
cannot be connected by a stage because

00:14:25,820 --> 00:14:29,750
of network drop or something happens or

00:14:28,610 --> 00:14:32,510
something else

00:14:29,750 --> 00:14:34,460
or you will forget to apply changes if

00:14:32,510 --> 00:14:37,730
you're doing it manually so you change

00:14:34,460 --> 00:14:40,850
your states and apply it to subsets of

00:14:37,730 --> 00:14:44,240
servers which you actually for which

00:14:40,850 --> 00:14:45,620
those changes was intended and then you

00:14:44,240 --> 00:14:47,930
forgot about the rest and then you

00:14:45,620 --> 00:14:49,760
change something else then you go to the

00:14:47,930 --> 00:14:53,090
new server apply it there and see it

00:14:49,760 --> 00:14:55,520
doesn't work anymore so I prefer if you

00:14:53,090 --> 00:14:57,140
just push it to get and then magic

00:14:55,520 --> 00:14:59,210
happens and your changes I apply it

00:14:57,140 --> 00:15:04,330
across the fleet so you don't need to

00:14:59,210 --> 00:15:07,940
care about every single server yeah and

00:15:04,330 --> 00:15:10,850
yes about second case I am actually

00:15:07,940 --> 00:15:13,490
pretty agree with that development is

00:15:10,850 --> 00:15:16,160
getting slower because you starting to

00:15:13,490 --> 00:15:21,890
write unit tests this is the main reason

00:15:16,160 --> 00:15:24,200
of that I'm spending maybe fifty fifty

00:15:21,890 --> 00:15:28,160
percent of times like rating manifest

00:15:24,200 --> 00:15:29,420
written I'm not doing the test drive and

00:15:28,160 --> 00:15:31,670
development I'm usually written

00:15:29,420 --> 00:15:33,920
God and before then rating test for it

00:15:31,670 --> 00:15:37,220
then during the reading test Yuja liza

00:15:33,920 --> 00:15:39,860
well I did something wrong and you

00:15:37,220 --> 00:15:43,130
changing the code updates in tests so it

00:15:39,860 --> 00:15:48,200
the station actually take time but after

00:15:43,130 --> 00:15:50,750
that it's saying 90% your code will work

00:15:48,200 --> 00:15:52,490
more or less okay so you're also not hit

00:15:50,750 --> 00:15:55,490
into big issues at least you check into

00:15:52,490 --> 00:15:57,170
the logic before it hit production so

00:15:55,490 --> 00:15:59,900
you're not debugging it in production

00:15:57,170 --> 00:16:03,260
like doing good doing it with salt or

00:15:59,900 --> 00:16:05,930
rinsable maybe but yeah you can write

00:16:03,260 --> 00:16:07,880
unit tests for rinsable as well and now

00:16:05,930 --> 00:16:11,840
i can say that you can write it for salt

00:16:07,880 --> 00:16:14,780
so please do if you are using it so I

00:16:11,840 --> 00:16:17,510
don't know maybe audience v different

00:16:14,780 --> 00:16:20,330
short something else about pipette why

00:16:17,510 --> 00:16:22,460
it's hard to use or why don't they don't

00:16:20,330 --> 00:16:25,730
like it so I'd like to know about that

00:16:22,460 --> 00:16:31,160
so I can maybe mention something about

00:16:25,730 --> 00:16:36,860
that during my talk so please gather

00:16:31,160 --> 00:16:38,120
some something if people will mention so

00:16:36,860 --> 00:16:42,320
we have an invitation from the speaker

00:16:38,120 --> 00:16:46,280
for their own experiences with puppet

00:16:42,320 --> 00:16:48,650
specifically asking about puppet yeah

00:16:46,280 --> 00:16:50,570
why people do not choose but or what

00:16:48,650 --> 00:16:52,310
they don't like piped maybe because I'm

00:16:50,570 --> 00:16:54,740
a bit biased that I really like it

00:16:52,310 --> 00:16:58,040
because I saw really nice installation

00:16:54,740 --> 00:17:00,050
of pipetting rosada so I understand how

00:16:58,040 --> 00:17:05,660
it works and white pretty good for big

00:17:00,050 --> 00:17:08,750
team for big distributed team Evan so

00:17:05,660 --> 00:17:13,280
well anyway so if something happens let

00:17:08,750 --> 00:17:17,050
me know okay I will continue them so now

00:17:13,280 --> 00:17:20,900
I will start talking about puppet and

00:17:17,050 --> 00:17:25,580
the main slide of this talk I'd say

00:17:20,900 --> 00:17:28,310
puppet is about the state this this is

00:17:25,580 --> 00:17:34,190
all you should know before you starting

00:17:28,310 --> 00:17:38,540
to use puppet actually so when you write

00:17:34,190 --> 00:17:42,050
your code and some manifest so call it

00:17:38,540 --> 00:17:43,430
manifest it will push it so then you

00:17:42,050 --> 00:17:47,090
need to deploy it to piped

00:17:43,430 --> 00:17:49,780
a puppet master will compile it so yeah

00:17:47,090 --> 00:17:52,520
it's compilation it's not like

00:17:49,780 --> 00:17:55,130
interpreting it step-by-step so it will

00:17:52,520 --> 00:18:00,740
compile it into a catalog which is

00:17:55,130 --> 00:18:03,380
entity holding all the states so this is

00:18:00,740 --> 00:18:09,380
definition of desired state to which you

00:18:03,380 --> 00:18:12,200
want to bring your system and then when

00:18:09,380 --> 00:18:16,310
agent come from note agent asking for

00:18:12,200 --> 00:18:18,800
catalog for this note and then apply the

00:18:16,310 --> 00:18:22,460
changes according to the catalog for

00:18:18,800 --> 00:18:25,310
this note so agent actually executing

00:18:22,460 --> 00:18:28,790
some herbal providers passing them

00:18:25,310 --> 00:18:33,320
catalog and those Ruby providers change

00:18:28,790 --> 00:18:37,880
your your system to be in this state so

00:18:33,320 --> 00:18:40,100
you don't need to yeah so it's not

00:18:37,880 --> 00:18:44,300
sequence of steps how to bring system to

00:18:40,100 --> 00:18:46,580
this step so to this state it's actually

00:18:44,300 --> 00:18:49,490
it is the state so you don't need to

00:18:46,580 --> 00:18:52,370
care about steps how to bring it like an

00:18:49,490 --> 00:18:55,210
instable or soul - usually you can see

00:18:52,370 --> 00:18:59,000
that people are right in steps like

00:18:55,210 --> 00:19:01,820
download this file then execute some

00:18:59,000 --> 00:19:05,210
comment then do these do that install

00:19:01,820 --> 00:19:07,390
this package so this you can consider

00:19:05,210 --> 00:19:11,960
this as state as well as long as you are

00:19:07,390 --> 00:19:16,640
caring about immutability so when you so

00:19:11,960 --> 00:19:18,500
if you apply it again it will be in the

00:19:16,640 --> 00:19:21,170
same state here you don't need to care

00:19:18,500 --> 00:19:24,890
about that more or less well you can

00:19:21,170 --> 00:19:26,570
hack it but usually you don't need so

00:19:24,890 --> 00:19:33,920
you're defining the state from the

00:19:26,570 --> 00:19:36,770
beginning okay so but this actually give

00:19:33,920 --> 00:19:41,660
you some there are some drawbacks this

00:19:36,770 --> 00:19:43,640
so you cannot easily rename or move file

00:19:41,660 --> 00:19:46,400
if you are not managing it so if you

00:19:43,640 --> 00:19:49,250
want to change to rename some file on

00:19:46,400 --> 00:19:52,250
some virtual machine you cannot do that

00:19:49,250 --> 00:19:54,320
from your puppet code because there is

00:19:52,250 --> 00:19:56,720
no state for this it's not status

00:19:54,320 --> 00:20:00,690
changes

00:19:56,720 --> 00:20:03,539
then you cannot treat file from agent

00:20:00,690 --> 00:20:05,909
from note and then make decision on your

00:20:03,539 --> 00:20:08,309
in your court on piped server because

00:20:05,909 --> 00:20:10,559
your piped server have no idea well it's

00:20:08,309 --> 00:20:13,650
half idea but I will speak about that a

00:20:10,559 --> 00:20:19,409
bit later but you cannot just read file

00:20:13,650 --> 00:20:21,600
from that then you cannot just insuk you

00:20:19,409 --> 00:20:25,950
some binary and do something depending

00:20:21,600 --> 00:20:29,100
on on the result of this that binary

00:20:25,950 --> 00:20:31,620
call when it happens over agent because

00:20:29,100 --> 00:20:34,530
again your master your puppet master

00:20:31,620 --> 00:20:38,010
have no idea about what happens on agent

00:20:34,530 --> 00:20:39,830
it it's different way but you can see

00:20:38,010 --> 00:20:42,600
stars here which actually means that

00:20:39,830 --> 00:20:46,110
well there are some ways to do things

00:20:42,600 --> 00:20:47,789
and the easiest ways to use effects so

00:20:46,110 --> 00:20:51,179
if you want to read file you can create

00:20:47,789 --> 00:20:55,679
effect which contain in contents of this

00:20:51,179 --> 00:21:01,049
file but it may hit you hard after so be

00:20:55,679 --> 00:21:03,059
careful about that then again this means

00:21:01,049 --> 00:21:06,059
that you need to care about things like

00:21:03,059 --> 00:21:09,330
when you change in when you do in

00:21:06,059 --> 00:21:13,650
transition of state like you cannot just

00:21:09,330 --> 00:21:15,840
rename file so if you had some file

00:21:13,650 --> 00:21:19,320
before and then you decided to rename it

00:21:15,840 --> 00:21:21,960
you need to remove old one and then you

00:21:19,320 --> 00:21:24,179
need to create new one so it can be just

00:21:21,960 --> 00:21:26,580
next line in your manifest but anyway

00:21:24,179 --> 00:21:27,169
you need to take care about previous

00:21:26,580 --> 00:21:32,460
file

00:21:27,169 --> 00:21:35,549
nobody will remove it for you yeah and

00:21:32,460 --> 00:21:38,100
usually after you remove something and

00:21:35,549 --> 00:21:41,039
you think okay it's already applied

00:21:38,100 --> 00:21:43,200
right I can remove it it doesn't mean

00:21:41,039 --> 00:21:44,820
that it's always applied because some

00:21:43,200 --> 00:21:46,770
virtual machine may be down in that

00:21:44,820 --> 00:21:48,270
during that period or they may may be

00:21:46,770 --> 00:21:52,409
some drop in

00:21:48,270 --> 00:21:57,150
so some catalog maybe not appears yet on

00:21:52,409 --> 00:22:00,030
some subset of your servers so in lazada

00:21:57,150 --> 00:22:04,980
we decided to keep it for one month

00:22:00,030 --> 00:22:07,440
and SP digital ID say well we have small

00:22:04,980 --> 00:22:08,850
fleet so for us I guess one day or seven

00:22:07,440 --> 00:22:11,880
days should be ok

00:22:08,850 --> 00:22:15,690
because we are running puppet every 13

00:22:11,880 --> 00:22:19,350
minutes I guess nothing should stay down

00:22:15,690 --> 00:22:26,840
for more than one one day or seven days

00:22:19,350 --> 00:22:30,900
at least then yeah this is another thing

00:22:26,840 --> 00:22:34,170
which is good to know before you

00:22:30,900 --> 00:22:37,230
starting do things so if you need to do

00:22:34,170 --> 00:22:39,210
changes on different nodes in specific

00:22:37,230 --> 00:22:42,810
order you cannot do it easily with

00:22:39,210 --> 00:22:45,660
puppet because usually puppet is puppet

00:22:42,810 --> 00:22:47,970
agent is running once per period like

00:22:45,660 --> 00:22:52,050
once per 30 minutes by default or once

00:22:47,970 --> 00:22:54,150
per hour how you set it and there is no

00:22:52,050 --> 00:22:56,430
synchronization between different agents

00:22:54,150 --> 00:22:58,530
between different notes so you need to

00:22:56,430 --> 00:23:01,140
take care about that if you need this or

00:22:58,530 --> 00:23:05,240
maybe you prefer to use orchestration

00:23:01,140 --> 00:23:11,280
bodies I will say about that a bit later

00:23:05,240 --> 00:23:13,800
so we can return to this okay so then I

00:23:11,280 --> 00:23:19,230
will explain how we are going to use it

00:23:13,800 --> 00:23:22,170
and how we are using it yeah

00:23:19,230 --> 00:23:25,590
so this actually again this another main

00:23:22,170 --> 00:23:27,630
sleight of this talk so if you are going

00:23:25,590 --> 00:23:31,760
to use it use it in this way so you

00:23:27,630 --> 00:23:34,980
please use git please use your NEC ICD

00:23:31,760 --> 00:23:38,220
software you like we are using Jenkins

00:23:34,980 --> 00:23:40,470
and github enterprise but before in was

00:23:38,220 --> 00:23:43,620
that we were using git lab and get lab

00:23:40,470 --> 00:23:45,750
actually quite I'd say I miss it now

00:23:43,620 --> 00:23:50,280
because it was really easy to use and

00:23:45,750 --> 00:23:54,860
you shave git repository and see I CD in

00:23:50,280 --> 00:24:01,200
the same box just just out of the box

00:23:54,860 --> 00:24:03,750
okay so then I short I saw actually

00:24:01,200 --> 00:24:05,970
people just written manifest right on

00:24:03,750 --> 00:24:09,180
puppet server right in environment

00:24:05,970 --> 00:24:12,330
directory without any version control

00:24:09,180 --> 00:24:15,150
without anything it works but it works

00:24:12,330 --> 00:24:16,740
for some short time after some short

00:24:15,150 --> 00:24:19,200
time you will hit into some issues

00:24:16,740 --> 00:24:19,920
because it's hard to manage in this have

00:24:19,200 --> 00:24:22,860
to check

00:24:19,920 --> 00:24:24,960
I prefer I'd say please

00:24:22,860 --> 00:24:28,920
start with control reaper from from the

00:24:24,960 --> 00:24:31,320
beginning make it this is actually it

00:24:28,920 --> 00:24:34,200
repository when everything your right

00:24:31,320 --> 00:24:36,929
through sites all your manifests and

00:24:34,200 --> 00:24:39,740
there is your higher data and there is

00:24:36,929 --> 00:24:44,880
your test and maybe something else i

00:24:39,740 --> 00:24:48,030
musical scripts or whatever else so this

00:24:44,880 --> 00:24:50,010
is definition of that when you're

00:24:48,030 --> 00:24:53,040
starting it's really nice to have some

00:24:50,010 --> 00:24:55,919
example and there are three links to

00:24:53,040 --> 00:25:00,000
useful examples first one is puppet labs

00:24:55,919 --> 00:25:04,280
own example but there are no tests at

00:25:00,000 --> 00:25:07,169
all so it just pure repo with puppet

00:25:04,280 --> 00:25:10,140
skeleton and that's all so there is no I

00:25:07,169 --> 00:25:12,120
respect configuration nothing so a

00:25:10,140 --> 00:25:16,230
friend of mine actually my ex-colleague

00:25:12,120 --> 00:25:19,740
from lazada did another control repo

00:25:16,230 --> 00:25:23,280
skeleton which is based on what we had

00:25:19,740 --> 00:25:25,890
in lazada it's more or less same as last

00:25:23,280 --> 00:25:27,419
one but there are our spec helper

00:25:25,890 --> 00:25:29,700
stories pre-configured

00:25:27,419 --> 00:25:34,970
so you can just start reading test there

00:25:29,700 --> 00:25:37,950
and you will have something and there is

00:25:34,970 --> 00:25:39,630
psi CK I know I know few how to

00:25:37,950 --> 00:25:45,179
pronounce it right because I don't know

00:25:39,630 --> 00:25:48,510
those people so they provide some kind

00:25:45,179 --> 00:25:51,120
of building blocks for your repo which

00:25:48,510 --> 00:25:53,190
you can use but it's very specific so

00:25:51,120 --> 00:25:55,530
they have their own vision how it should

00:25:53,190 --> 00:25:57,480
be and that vision actually reflected by

00:25:55,530 --> 00:26:00,980
these people but you may find it

00:25:57,480 --> 00:26:05,400
suitable for your needs please read it

00:26:00,980 --> 00:26:08,460
then I'd like to speak a bit about roles

00:26:05,400 --> 00:26:13,290
and profiles so this is how your code

00:26:08,460 --> 00:26:16,740
organized it in control repo and so role

00:26:13,290 --> 00:26:19,770
is actually if we are defining some

00:26:16,740 --> 00:26:21,840
configuration for layers fleet we can we

00:26:19,770 --> 00:26:24,090
can have some roles there like your

00:26:21,840 --> 00:26:26,520
server can be positive server or Jenkins

00:26:24,090 --> 00:26:29,370
master or Jenkins slave or I don't know

00:26:26,520 --> 00:26:31,710
something like Gravano or Prometheus

00:26:29,370 --> 00:26:33,299
error this is actually role role of this

00:26:31,710 --> 00:26:38,759
particular server

00:26:33,299 --> 00:26:41,700
and not usually have only one role so

00:26:38,759 --> 00:26:45,960
this role doing this thing like this

00:26:41,700 --> 00:26:48,989
role is for me to server but this role

00:26:45,960 --> 00:26:51,720
is actually combined it from different

00:26:48,989 --> 00:26:55,200
blocks like if this promise you server

00:26:51,720 --> 00:26:58,919
for example and is running in docker you

00:26:55,200 --> 00:27:01,019
need actually some something to set up

00:26:58,919 --> 00:27:03,059
parameters container there something to

00:27:01,019 --> 00:27:07,109
set up docker there something to set up

00:27:03,059 --> 00:27:10,409
virtual machine actually so this those

00:27:07,109 --> 00:27:14,279
things are called profiles and yet

00:27:10,409 --> 00:27:17,220
different again one thing about trolls I

00:27:14,279 --> 00:27:21,509
miss it is that role have no

00:27:17,220 --> 00:27:24,239
configuration it just definition so when

00:27:21,509 --> 00:27:26,850
you split in your code shuffling your

00:27:24,239 --> 00:27:29,220
code between roles and profiles usually

00:27:26,850 --> 00:27:31,919
you don't need to configure role you

00:27:29,220 --> 00:27:36,980
need to configure profiles it's hard

00:27:31,919 --> 00:27:42,929
maybe to understand when you did 0 ok

00:27:36,980 --> 00:27:46,129
it's already yeah ok so this is for

00:27:42,929 --> 00:27:49,769
example for examples of profiles we have

00:27:46,129 --> 00:27:51,779
you can see the adapter then next

00:27:49,769 --> 00:27:54,330
question how to attach your role - I

00:27:51,779 --> 00:27:57,799
mean how to attach actual role and set

00:27:54,330 --> 00:27:59,999
of profiles to your server you can use

00:27:57,799 --> 00:28:01,980
hostname like match by hostname but

00:27:59,999 --> 00:28:04,820
please do not do that do not encode your

00:28:01,980 --> 00:28:08,759
metadata into hostname this is wrong way

00:28:04,820 --> 00:28:10,409
then you can base on trusted facts so

00:28:08,759 --> 00:28:12,480
when you're generating certificate and

00:28:10,409 --> 00:28:14,850
pipe it you can put some data inside and

00:28:12,480 --> 00:28:18,720
you cannot change it as the only way to

00:28:14,850 --> 00:28:21,330
change it to regenerate certificate so

00:28:18,720 --> 00:28:24,029
we are using this way now and then marks

00:28:21,330 --> 00:28:27,149
the flexible way is to write something

00:28:24,029 --> 00:28:29,929
which will assign this for you which is

00:28:27,149 --> 00:28:33,239
called external not classifier I

00:28:29,929 --> 00:28:35,759
actually didn't saw any examples around

00:28:33,239 --> 00:28:39,029
but I'm pretty sure there's something

00:28:35,759 --> 00:28:44,220
concrete happen and then high error can

00:28:39,029 --> 00:28:46,440
be used as NC as well then I guess I

00:28:44,220 --> 00:28:47,309
will keep most part of higher because

00:28:46,440 --> 00:28:50,669
I'm short of time

00:28:47,309 --> 00:28:53,700
already and yeah so this is just

00:28:50,669 --> 00:28:58,169
database so this is configuration you

00:28:53,700 --> 00:29:01,289
can see after here is how it's reflected

00:28:58,169 --> 00:29:03,779
so you do different layers of your

00:29:01,289 --> 00:29:07,470
hierarchy and it's going from top to

00:29:03,779 --> 00:29:09,779
down so and last one wins so if you save

00:29:07,470 --> 00:29:13,440
something specific for your note you can

00:29:09,779 --> 00:29:15,629
write it in not specific then another

00:29:13,440 --> 00:29:17,850
nice thing about higher is doing

00:29:15,629 --> 00:29:21,600
parameter rule cups for you so if you

00:29:17,850 --> 00:29:29,639
define class you can specify the values

00:29:21,600 --> 00:29:33,749
of these parameters of class in I okay I

00:29:29,639 --> 00:29:36,990
hope 40 minutes right it's a 30-minute

00:29:33,749 --> 00:29:41,809
slots so your 25 minute talk okay so let

00:29:36,990 --> 00:29:45,149
me then is already two minutes over oh I

00:29:41,809 --> 00:29:49,710
was sure I actually I did it I will do

00:29:45,149 --> 00:29:50,909
it really faster we leave his okay we go

00:29:49,710 --> 00:29:56,970
a little bit time take take a few

00:29:50,909 --> 00:29:59,789
minutes I will skip part but so how

00:29:56,970 --> 00:30:02,159
about ICD

00:29:59,789 --> 00:30:05,909
this is steps you usually need in your C

00:30:02,159 --> 00:30:08,789
ICD next slice will be about what

00:30:05,909 --> 00:30:11,129
software to use to do that steps first

00:30:08,789 --> 00:30:14,159
of all there is puppet development kit

00:30:11,129 --> 00:30:17,190
this is really new and now it's a port

00:30:14,159 --> 00:30:20,909
control Reapers as well so this bundle

00:30:17,190 --> 00:30:24,869
of software everything you actually need

00:30:20,909 --> 00:30:27,570
in your puppet development please check

00:30:24,869 --> 00:30:30,679
it out and use it then there is lint

00:30:27,570 --> 00:30:34,320
syntax checks or speak once I were doing

00:30:30,679 --> 00:30:35,279
integration test then piped litmus doing

00:30:34,320 --> 00:30:37,710
exception test

00:30:35,279 --> 00:30:40,590
so those wrappers actually doing a lot

00:30:37,710 --> 00:30:42,450
of things so you don't need to care

00:30:40,590 --> 00:30:45,149
about just please use them and that's

00:30:42,450 --> 00:30:46,889
all then this is what you need to deploy

00:30:45,149 --> 00:30:49,649
so you didn't like you don't need to

00:30:46,889 --> 00:30:53,580
deploy tests for example on your puppet

00:30:49,649 --> 00:30:54,460
server usually I have just this set of

00:30:53,580 --> 00:30:58,180
things

00:30:54,460 --> 00:31:01,180
and how to deploy sexually you will see

00:30:58,180 --> 00:31:03,340
that your task is just to bring this

00:31:01,180 --> 00:31:10,510
quote to this particular place on your

00:31:03,340 --> 00:31:13,210
server and then there is workflow for

00:31:10,510 --> 00:31:15,220
example like you do in checkout you're

00:31:13,210 --> 00:31:17,350
changing things pushing to servers I

00:31:15,220 --> 00:31:19,990
should do in branch and deploying it to

00:31:17,350 --> 00:31:22,450
pipette master as a branch as a norm as

00:31:19,990 --> 00:31:25,330
an environment then you're going to

00:31:22,450 --> 00:31:28,450
server you can apply it on that server

00:31:25,330 --> 00:31:30,820
this particular environment and then if

00:31:28,450 --> 00:31:33,100
it's actually ok you just do in usual

00:31:30,820 --> 00:31:35,770
things like maybe doing they are maybe

00:31:33,100 --> 00:31:38,380
needing to master or actually input in

00:31:35,770 --> 00:31:43,120
production so master branch usually call

00:31:38,380 --> 00:31:46,210
it production in puppet and have fun

00:31:43,120 --> 00:31:47,920
after so I'll skip part about secrets

00:31:46,210 --> 00:31:52,480
because I have no time but you can read

00:31:47,920 --> 00:31:55,330
about that then orchestration there is

00:31:52,480 --> 00:31:58,900
no orchestration an open-source puppet

00:31:55,330 --> 00:32:02,080
but you can use those tools and we

00:31:58,900 --> 00:32:05,230
actually decided to go with Korea latest

00:32:02,080 --> 00:32:06,700
one which is framework actually it's not

00:32:05,230 --> 00:32:10,450
solution so you need to write a lot

00:32:06,700 --> 00:32:12,640
there here are some examples of what you

00:32:10,450 --> 00:32:15,580
can achieve it's actually a successor of

00:32:12,640 --> 00:32:19,360
M collective that's why the binary call

00:32:15,580 --> 00:32:21,460
it MCO but it's changing so you can see

00:32:19,360 --> 00:32:23,950
and this is really nice thing you can

00:32:21,460 --> 00:32:27,220
write play books orchestration play

00:32:23,950 --> 00:32:29,410
books in puppet DSL which means you can

00:32:27,220 --> 00:32:31,990
use same language for configuring things

00:32:29,410 --> 00:32:34,630
and for orchestrating these those things

00:32:31,990 --> 00:32:38,380
for example here is my playbook doing

00:32:34,630 --> 00:32:40,900
open csdb cluster restart and you can

00:32:38,380 --> 00:32:43,000
refer to it later because I cannot say

00:32:40,900 --> 00:32:47,440
it's well-documented but you can at

00:32:43,000 --> 00:32:50,320
least have some examples then yeah this

00:32:47,440 --> 00:32:53,890
is what I did during migration already

00:32:50,320 --> 00:32:57,340
and what I am doing right now you can

00:32:53,890 --> 00:33:00,100
see that well it's not yet published but

00:32:57,340 --> 00:33:03,960
I'm working on up and sourcing it so one

00:33:00,100 --> 00:33:08,500
day I hope I will be able to share it

00:33:03,960 --> 00:33:11,890
in github and this is where we are going

00:33:08,500 --> 00:33:14,170
after this is immutable infrastructure

00:33:11,890 --> 00:33:15,730
in short Wars that mean that you are not

00:33:14,170 --> 00:33:18,460
managing we've shot every version

00:33:15,730 --> 00:33:20,350
machine we are managing image of which

00:33:18,460 --> 00:33:24,070
on machine like we doing it with images

00:33:20,350 --> 00:33:25,420
for docker and then you just recreate in

00:33:24,070 --> 00:33:28,690
your original machine based on that

00:33:25,420 --> 00:33:32,440
image it sounds really great because you

00:33:28,690 --> 00:33:35,950
have immutable things but I have a lot

00:33:32,440 --> 00:33:38,260
of question I cannot find answers for so

00:33:35,950 --> 00:33:40,240
this is set of questions which are open

00:33:38,260 --> 00:33:43,870
for me so maybe you can suggest me

00:33:40,240 --> 00:33:46,690
something here and thank you sorry for

00:33:43,870 --> 00:33:49,690
like compressing so much information

00:33:46,690 --> 00:33:52,660
small time and if you have any questions

00:33:49,690 --> 00:33:57,820
you can reach me in Twitter or LinkedIn

00:33:52,660 --> 00:34:00,000
or in telegram charge here thank you so

00:33:57,820 --> 00:34:00,000
much

00:34:02,770 --> 00:34:07,770
William do want to set up and while he's

00:34:05,380 --> 00:34:10,149
doing that I invited questions from the

00:34:07,770 --> 00:34:12,570
YouTube channel questions in the room or

00:34:10,149 --> 00:34:12,570
comments

00:34:16,980 --> 00:34:19,879
feel free to ask

00:34:47,990 --> 00:34:54,490
so you're looking for UI for

00:34:50,089 --> 00:34:54,490
provisioning or for UI for monitoring

00:34:58,030 --> 00:35:00,810
okay

00:35:07,460 --> 00:35:11,869
okay so we are using terraform for

00:35:09,619 --> 00:35:14,839
provisioning because we are running in

00:35:11,869 --> 00:35:17,890
cloud and what we have on Prem and when

00:35:14,839 --> 00:35:20,300
we thinking about going on Prem well it

00:35:17,890 --> 00:35:23,240
it seems we all used to reform there as

00:35:20,300 --> 00:35:26,540
well because it's been well but there is

00:35:23,240 --> 00:35:29,319
Razer software made by puppet as well

00:35:26,540 --> 00:35:32,980
and in open source world there is

00:35:29,319 --> 00:35:36,710
Foreman is doing mole as the same and

00:35:32,980 --> 00:35:39,740
but it's mostly UI and set of things

00:35:36,710 --> 00:35:44,420
around actually everything is set of

00:35:39,740 --> 00:35:48,349
things around DHCP and but those boot

00:35:44,420 --> 00:35:51,440
protocols but you can refer to Foreman

00:35:48,349 --> 00:35:53,150
and razor and then for monitoring well

00:35:51,440 --> 00:35:57,109
it depends on what you will use we are

00:35:53,150 --> 00:36:00,380
using primitive Sanger fauna and it's

00:35:57,109 --> 00:36:02,359
actually configure it by a puppet so

00:36:00,380 --> 00:36:06,109
just configure it by pipetting music

00:36:02,359 --> 00:36:08,329
that's it I think we should move on

00:36:06,109 --> 00:36:10,480
given the time thank you very much thank

00:36:08,329 --> 00:36:10,480

YouTube URL: https://www.youtube.com/watch?v=X_5NjtTWpvQ


