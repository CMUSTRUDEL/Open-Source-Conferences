Title: The Integration of DevOps and Cybersecurity by Sachin Shridhar
Publication date: 2019-03-31
Playlist: FOSSASIA Summit 2019 - Cybersecurity
Description: 
	15 March 2019 16:30, Lecture Theatre

With the introduction of DevOps, organisations have become more agile. Given the scale and velocity imposed by processes and today’s threat landscape, this also means that organisations can no longer depend on the existing approaches – especially for cybersecurity.

Organisations need to look beyond the current practices and enable a ‘secure by default’ posture. This can be achieved in two ways: by distributing more responsibilities to development and operations teams, and by embracing continuous delivery of applications on newer platforms. Some security practices include:

Permeate security across the organisation. A prudent security posture, including processes and tooling, will permeate the organisation. An adoption of company-wide initiatives, for instance, could be enabled by security teams, but may not be necessarily manned by them.

Bring in the developers. The inclusion of security practices and guidance within the application development lifecycle is key. What this means for businesses is to make that inclusion without a significant cognitive overload to the developers themselves.
Use automation to improve defense posture. To reduce cyber risks, organisations will need to repair vulnerable software through automation – this means that patches are applied as soon as they are released. Repaving servers and applications will also help organisations remove any malware that has already gained access to their systems and prevent them from penetrating the same systems in the future.

In today’s DevOps era, cybersecurity should no longer be at the back burner of any business. Relooking at cybersecurity approaches will enable organisations to reap positive outcomes such as faster responses to business needs and crises caused by incidents or disclosures, and prevention of cyber attacks.
Captions: 
	00:00:00,000 --> 00:00:05,339
all right good afternoon Banerjee is a

00:00:03,629 --> 00:00:07,529
bit low let's get warmed up a few

00:00:05,339 --> 00:00:12,059
questions to get us started who's having

00:00:07,529 --> 00:00:16,080
fun also anybody learned anything new

00:00:12,059 --> 00:00:17,670
today very cool how many developers in

00:00:16,080 --> 00:00:19,949
the room right now how many of you

00:00:17,670 --> 00:00:23,300
actually write code on a daily basis and

00:00:19,949 --> 00:00:26,460
some are probably writing that right now

00:00:23,300 --> 00:00:29,820
hopefully not we're gonna shift gears a

00:00:26,460 --> 00:00:33,420
little bit here now I have no code to

00:00:29,820 --> 00:00:34,950
show quickly to introduce myself and the

00:00:33,420 --> 00:00:38,280
session and and the company I'm

00:00:34,950 --> 00:00:42,600
representing here I work for pivotal how

00:00:38,280 --> 00:00:44,579
many of you have heard about great

00:00:42,600 --> 00:00:47,430
Jerome mask Jerome works for pivotal

00:00:44,579 --> 00:00:48,930
he's a field chief security officer so

00:00:47,430 --> 00:00:50,340
in case you have questions later or you

00:00:48,930 --> 00:00:54,449
want to know more about stuff that we

00:00:50,340 --> 00:00:58,469
got to talk about Jerome's pivotal labs

00:00:54,449 --> 00:01:01,469
was formed over 25 years ago formed in

00:00:58,469 --> 00:01:03,390
the Silicon Valley in the Bay Area the

00:01:01,469 --> 00:01:04,710
early days of the agile movement so

00:01:03,390 --> 00:01:06,000
they've been in this agile space for a

00:01:04,710 --> 00:01:08,580
very very long time

00:01:06,000 --> 00:01:10,590
starting with startups back in the day

00:01:08,580 --> 00:01:12,330
when Google was a start-up when Twitter

00:01:10,590 --> 00:01:16,020
was a start-up eBay was a start-up and

00:01:12,330 --> 00:01:19,409
now helping the largest fortune 100 500

00:01:16,020 --> 00:01:21,689
companies and their mission is how to

00:01:19,409 --> 00:01:24,570
help these large enterprises get awesome

00:01:21,689 --> 00:01:27,060
at software my role at the Whittle I

00:01:24,570 --> 00:01:29,790
lead the technology services divisions

00:01:27,060 --> 00:01:31,890
across APJ and I'm really really

00:01:29,790 --> 00:01:34,110
privileged because it gives me access to

00:01:31,890 --> 00:01:36,000
see all the change happening in the

00:01:34,110 --> 00:01:37,950
largest enterprises that are trying to

00:01:36,000 --> 00:01:40,409
respond to the threat of startups and

00:01:37,950 --> 00:01:42,659
they're all trying to be great at

00:01:40,409 --> 00:01:45,180
building software and releasing software

00:01:42,659 --> 00:01:47,880
faster and doing this in a way that is

00:01:45,180 --> 00:01:50,280
so opposite of what enterprises are used

00:01:47,880 --> 00:01:52,710
to that it's fascinating to watch all

00:01:50,280 --> 00:01:55,409
the change happen and most of the change

00:01:52,710 --> 00:01:58,229
we see is the challenging portion is not

00:01:55,409 --> 00:02:01,500
the technology it's everything else so

00:01:58,229 --> 00:02:03,869
what we going to do here today is share

00:02:01,500 --> 00:02:06,439
lessons from the field share what we've

00:02:03,869 --> 00:02:09,119
learned how the balance between

00:02:06,439 --> 00:02:11,489
developing and releasing faster versus

00:02:09,119 --> 00:02:13,190
managing security is being done by these

00:02:11,489 --> 00:02:15,990
large enterprises escape

00:02:13,190 --> 00:02:17,430
how many of you here would identify

00:02:15,990 --> 00:02:19,620
yourself as working in an enterprise

00:02:17,430 --> 00:02:23,940
environment large hundred-plus

00:02:19,620 --> 00:02:25,500
in your team's okay so very few so a lot

00:02:23,940 --> 00:02:27,270
of you are very familiar with startups

00:02:25,500 --> 00:02:29,700
is that fair you're mostly in the

00:02:27,270 --> 00:02:31,590
startup world okay that's cool so some

00:02:29,700 --> 00:02:34,110
of these problems may seem familiar and

00:02:31,590 --> 00:02:35,550
some of these may be not so familiar

00:02:34,110 --> 00:02:38,670
this is what we've seen in in large

00:02:35,550 --> 00:02:40,620
companies the principles however apply

00:02:38,670 --> 00:02:43,740
whether you're a small team or a large

00:02:40,620 --> 00:02:45,600
team right the the concepts of solving

00:02:43,740 --> 00:02:47,310
for security applies no matter the size

00:02:45,600 --> 00:02:50,100
of the organization the lessons here

00:02:47,310 --> 00:02:51,660
however are from the largest enterprises

00:02:50,100 --> 00:02:53,880
whether they've applied it at a team

00:02:51,660 --> 00:02:59,370
level or a product level or a complete

00:02:53,880 --> 00:03:01,140
enterprise level so what we've learnt is

00:02:59,370 --> 00:03:02,880
obviously what worked yesterday never

00:03:01,140 --> 00:03:05,010
works today and never works tomorrow

00:03:02,880 --> 00:03:08,490
right this is what all of us deal with

00:03:05,010 --> 00:03:10,920
at multiple levels what got us here

00:03:08,490 --> 00:03:12,720
doesn't get us forward be it in tools

00:03:10,920 --> 00:03:16,650
and technology be it in process and

00:03:12,720 --> 00:03:19,530
culture and I think all of us are

00:03:16,650 --> 00:03:23,130
familiar we work in this space where we

00:03:19,530 --> 00:03:26,550
recognize that technology has enabled

00:03:23,130 --> 00:03:29,640
such powerful transformations in how

00:03:26,550 --> 00:03:34,800
customers and how companies go to market

00:03:29,640 --> 00:03:37,920
right the the power that fast software

00:03:34,800 --> 00:03:40,980
development and release and working on

00:03:37,920 --> 00:03:44,220
on really really quick cadences has

00:03:40,980 --> 00:03:46,940
allowed a lot of non-traditional

00:03:44,220 --> 00:03:48,990
competitors against the enterprises and

00:03:46,940 --> 00:03:51,030
enterprises are learning how to respond

00:03:48,990 --> 00:03:55,320
all right so it's a it's a constant

00:03:51,030 --> 00:03:57,090
ongoing evolution of how do I catch up

00:03:55,320 --> 00:03:59,010
and how do I stay ahead and how do I

00:03:57,090 --> 00:04:01,740
discover new sources of revenue and how

00:03:59,010 --> 00:04:06,090
do I fight competition etc etc all of us

00:04:01,740 --> 00:04:09,180
are very familiar with this but as

00:04:06,090 --> 00:04:10,650
companies are getting faster right and

00:04:09,180 --> 00:04:12,060
as they are getting new tools and

00:04:10,650 --> 00:04:14,750
they're getting awesome at releasing

00:04:12,060 --> 00:04:17,040
software every day so are the bad guys

00:04:14,750 --> 00:04:18,600
it's not just the good guys getting

00:04:17,040 --> 00:04:22,350
better with software it is the bad guys

00:04:18,600 --> 00:04:24,570
as well and when being good in your

00:04:22,350 --> 00:04:26,140
business has started to mean being good

00:04:24,570 --> 00:04:28,490
in software

00:04:26,140 --> 00:04:31,310
it does not come at the expense of

00:04:28,490 --> 00:04:33,650
security now all of us have seen a lot

00:04:31,310 --> 00:04:36,380
of recent examples we're not dealing

00:04:33,650 --> 00:04:39,320
with security really well cost companies

00:04:36,380 --> 00:04:41,300
millions and billions of dollars costs

00:04:39,320 --> 00:04:43,730
the executives on these companies their

00:04:41,300 --> 00:04:46,010
jobs and in worst cases some of those

00:04:43,730 --> 00:04:51,260
guys have landed in jail all right we've

00:04:46,010 --> 00:04:53,480
seen those examples and what we have

00:04:51,260 --> 00:04:54,950
learned is it's not that the successful

00:04:53,480 --> 00:04:57,620
companies are the ones who will go

00:04:54,950 --> 00:05:02,120
extreme fast releases on point number

00:04:57,620 --> 00:05:04,370
one or extremely slow in a deep amount

00:05:02,120 --> 00:05:07,400
of security built in deep amount of

00:05:04,370 --> 00:05:09,710
technology and deep gating processes

00:05:07,400 --> 00:05:12,230
that would be successful it's really

00:05:09,710 --> 00:05:15,250
companies that have managed to have that

00:05:12,230 --> 00:05:17,540
balance and it's not one or the other

00:05:15,250 --> 00:05:19,669
one of those approaches going really

00:05:17,540 --> 00:05:22,190
heavy on being awesome at software not

00:05:19,669 --> 00:05:24,380
caring about security or being awesome

00:05:22,190 --> 00:05:26,750
at security not caring about customer

00:05:24,380 --> 00:05:28,880
experience either of those shifts are

00:05:26,750 --> 00:05:31,430
extreme either of those positions are

00:05:28,880 --> 00:05:33,350
extreme and they don't really help

00:05:31,430 --> 00:05:35,540
enable the business to take a solid

00:05:33,350 --> 00:05:37,460
business leadership position it's the

00:05:35,540 --> 00:05:44,030
ability to balance these two extreme

00:05:37,460 --> 00:05:46,240
positions now anybody in IT would be

00:05:44,030 --> 00:05:48,710
very familiar with what's up here right

00:05:46,240 --> 00:05:51,470
not so long ago not even a decade ago

00:05:48,710 --> 00:05:53,890
you see the first headline up their IT

00:05:51,470 --> 00:05:56,390
was the enemy in large organizations

00:05:53,890 --> 00:05:58,490
these were the guys slowing everything

00:05:56,390 --> 00:06:01,310
down there's a market to be captured

00:05:58,490 --> 00:06:02,810
there's revenue to be made there are

00:06:01,310 --> 00:06:05,570
business opportunities there are

00:06:02,810 --> 00:06:08,900
competitive threats but here's this big

00:06:05,570 --> 00:06:11,540
financial burden called IT that takes a

00:06:08,900 --> 00:06:15,470
lot of dollars from budgets and yet

00:06:11,540 --> 00:06:18,169
fails to deliver value quickly right and

00:06:15,470 --> 00:06:19,370
you fast forward the industry responded

00:06:18,169 --> 00:06:22,340
you know there was the DevOps movement

00:06:19,370 --> 00:06:24,580
the agile movement we've sort of trained

00:06:22,340 --> 00:06:27,080
IT to respond really really quickly

00:06:24,580 --> 00:06:29,000
software gets released way faster than

00:06:27,080 --> 00:06:31,160
it was released back when you know this

00:06:29,000 --> 00:06:32,860
article was originally published but

00:06:31,160 --> 00:06:36,560
then the problems moved on to now

00:06:32,860 --> 00:06:39,740
security and that's the one now viewed

00:06:36,560 --> 00:06:41,690
as the enemy that's the one slowing down

00:06:39,740 --> 00:06:43,820
your ability to release off there faster

00:06:41,690 --> 00:06:46,100
rata cadence you want in a manner you

00:06:43,820 --> 00:06:47,840
want alright so the problems have

00:06:46,100 --> 00:06:50,090
shifted got an awesome at releasing

00:06:47,840 --> 00:06:52,250
software now we need to bring that same

00:06:50,090 --> 00:06:54,620
level of Awesomeness around bringing

00:06:52,250 --> 00:07:00,650
teams together integrating two sets and

00:06:54,620 --> 00:07:03,170
toolkits now to the security world so

00:07:00,650 --> 00:07:05,180
who has got this right I mentioned at

00:07:03,170 --> 00:07:07,370
the start we've got a lot of you know

00:07:05,180 --> 00:07:09,500
very very large enterprises we work with

00:07:07,370 --> 00:07:11,480
and the rest of this talk is going to be

00:07:09,500 --> 00:07:14,330
pasted on on the customers and the

00:07:11,480 --> 00:07:16,970
enterprises and the organizations that

00:07:14,330 --> 00:07:19,310
we've seen do a really good job at

00:07:16,970 --> 00:07:22,340
managing fast software release Cadence's

00:07:19,310 --> 00:07:25,280
and create security controls and as much

00:07:22,340 --> 00:07:27,350
as as difficult this sound we've seen a

00:07:25,280 --> 00:07:29,210
huge amount of organizations get this

00:07:27,350 --> 00:07:31,670
right and I'll show you some some cases

00:07:29,210 --> 00:07:33,950
and then our synthesis of what they have

00:07:31,670 --> 00:07:36,530
done well and so this is rooted in

00:07:33,950 --> 00:07:39,190
reality this is what we've seen across

00:07:36,530 --> 00:07:42,590
the largest customers across the globe

00:07:39,190 --> 00:07:44,120
so now when done right the customers the

00:07:42,590 --> 00:07:46,880
enterprises that we have seen do this

00:07:44,120 --> 00:07:48,830
really really well they achieve huge

00:07:46,880 --> 00:07:50,330
amount of benefits there are some

00:07:48,830 --> 00:07:52,970
numbers up on the screen hopefully

00:07:50,330 --> 00:07:56,390
they're visible at the back huge amount

00:07:52,970 --> 00:08:00,200
in efficiency for how software gets

00:07:56,390 --> 00:08:01,760
released to your in customer huge amount

00:08:00,200 --> 00:08:04,520
of increase in where developers are

00:08:01,760 --> 00:08:06,800
spending their time versus traditional

00:08:04,520 --> 00:08:09,320
environments where processes are still

00:08:06,800 --> 00:08:11,900
very manual Security's an afterthought

00:08:09,320 --> 00:08:14,720
so it slows down the release Cadence's

00:08:11,900 --> 00:08:17,090
all the gates that security wants in a

00:08:14,720 --> 00:08:19,880
release process are all at the end of

00:08:17,090 --> 00:08:22,250
the release process hence the train runs

00:08:19,880 --> 00:08:23,600
and then slows down waiting to clear all

00:08:22,250 --> 00:08:26,780
these security checks and then getting

00:08:23,600 --> 00:08:29,150
to production and we've seen really and

00:08:26,780 --> 00:08:31,370
and the point of these three metrics

00:08:29,150 --> 00:08:34,730
here are they're appealing to all three

00:08:31,370 --> 00:08:37,100
different audiences that starting with

00:08:34,730 --> 00:08:39,800
security in mind does not need to cost

00:08:37,100 --> 00:08:42,980
you your release cadence it does not

00:08:39,800 --> 00:08:45,500
need to cost you your developers having

00:08:42,980 --> 00:08:48,650
to slow down in fact they can get faster

00:08:45,500 --> 00:08:51,110
it does not mean you having to do a lot

00:08:48,650 --> 00:08:52,700
more manual tasks in fact you can get

00:08:51,110 --> 00:08:54,070
really faster with your platforms as

00:08:52,700 --> 00:08:57,770
well

00:08:54,070 --> 00:09:00,680
the first example up here is the largest

00:08:57,770 --> 00:09:02,600
retailer worldwide right and so we are

00:09:00,680 --> 00:09:04,970
not talking about a small retailer we'll

00:09:02,600 --> 00:09:07,340
talk about a mom-and-pop shop and the

00:09:04,970 --> 00:09:10,550
point there is about proven this

00:09:07,340 --> 00:09:14,900
approach at scale so this very large

00:09:10,550 --> 00:09:17,480
retailer still is able to ship 20 100

00:09:14,900 --> 00:09:19,670
times a month which is really great for

00:09:17,480 --> 00:09:22,400
an organization that size right global

00:09:19,670 --> 00:09:25,220
organization present in thousands and

00:09:22,400 --> 00:09:28,100
thousands of locations IT is distributed

00:09:25,220 --> 00:09:30,320
across multiple data centers so yet they

00:09:28,100 --> 00:09:33,200
have their fast release cadence being

00:09:30,320 --> 00:09:34,790
achieved at the same time they are able

00:09:33,200 --> 00:09:38,930
to deliver all the security requirements

00:09:34,790 --> 00:09:41,060
while shipping at that speed second

00:09:38,930 --> 00:09:44,510
example one of the largest FSI

00:09:41,060 --> 00:09:46,280
institutions worldwide and they are able

00:09:44,510 --> 00:09:50,000
to repave all of their entire

00:09:46,280 --> 00:09:53,510
environments on a weekly basis as a

00:09:50,000 --> 00:09:55,630
preventative security measure while they

00:09:53,510 --> 00:09:58,970
are running 25 foundations globally

00:09:55,630 --> 00:10:01,190
running mission critical workloads so

00:09:58,970 --> 00:10:03,980
again security does not have to cost you

00:10:01,190 --> 00:10:07,730
your application experience or release

00:10:03,980 --> 00:10:10,100
cadence or your productivity and the

00:10:07,730 --> 00:10:12,530
last one is one of the largest telcos in

00:10:10,100 --> 00:10:14,630
the world is able to increase their

00:10:12,530 --> 00:10:16,540
frequency of patching and if you go back

00:10:14,630 --> 00:10:19,400
everyone familiar with security knows

00:10:16,540 --> 00:10:21,140
one of the most common issues why

00:10:19,400 --> 00:10:22,370
security breaches or tags or

00:10:21,140 --> 00:10:24,950
vulnerabilities happen

00:10:22,370 --> 00:10:27,470
it's just delay in patching it's simple

00:10:24,950 --> 00:10:29,810
right most of the issues can be traced

00:10:27,470 --> 00:10:31,970
back to there's a patch available it

00:10:29,810 --> 00:10:34,370
takes us time to apply the patch that

00:10:31,970 --> 00:10:36,590
gives the attackers a window and in that

00:10:34,370 --> 00:10:38,870
window is where most of the bad things

00:10:36,590 --> 00:10:41,090
happen so the faster you can patch

00:10:38,870 --> 00:10:42,850
whether it be your application or your

00:10:41,090 --> 00:10:45,320
middleware or your operating system

00:10:42,850 --> 00:10:47,900
you'd have taken most of the surface

00:10:45,320 --> 00:10:50,810
area out for an attacker right so this

00:10:47,900 --> 00:10:53,060
example of a telco needing only six

00:10:50,810 --> 00:10:56,960
operators to support a thousand

00:10:53,060 --> 00:10:58,390
developers that's huge scale while still

00:10:56,960 --> 00:11:00,710
being able to apply patches

00:10:58,390 --> 00:11:03,470
automatically at a very very fast pace

00:11:00,710 --> 00:11:06,080
so what has enabled all these awesome

00:11:03,470 --> 00:11:06,440
results right these are proven at huge

00:11:06,080 --> 00:11:07,910
scale

00:11:06,440 --> 00:11:10,640
so what what really has worked for these

00:11:07,910 --> 00:11:14,060
enterprises that we can learn from so

00:11:10,640 --> 00:11:17,030
four quick things first you know

00:11:14,060 --> 00:11:20,000
security cannot be retrofitted it cannot

00:11:17,030 --> 00:11:23,000
be enough the thought if you're starting

00:11:20,000 --> 00:11:24,920
with security in mind right from the

00:11:23,000 --> 00:11:26,390
word get-go you're thinking about where

00:11:24,920 --> 00:11:29,260
we need security in the entire

00:11:26,390 --> 00:11:32,150
development to path to production cycle

00:11:29,260 --> 00:11:34,190
versus trying to retrofit things like

00:11:32,150 --> 00:11:36,950
Identity and Access Management and log

00:11:34,190 --> 00:11:39,440
monitoring much later in the cycle that

00:11:36,950 --> 00:11:41,930
cost us a lot of time and effort and

00:11:39,440 --> 00:11:44,450
slow down right so we always start with

00:11:41,930 --> 00:11:46,760
security in mind we cannot retrofit and

00:11:44,450 --> 00:11:48,620
there's never one size fits all so you

00:11:46,760 --> 00:11:52,010
really have to consider what works for

00:11:48,620 --> 00:11:54,710
you and your organization the second

00:11:52,010 --> 00:11:57,800
thing is to have developers start with

00:11:54,710 --> 00:11:59,780
secure environments to begin with if you

00:11:57,800 --> 00:12:02,360
have reduced the security threshold for

00:11:59,780 --> 00:12:04,040
developers to create and write software

00:12:02,360 --> 00:12:05,840
in development environments that are not

00:12:04,040 --> 00:12:08,600
very secure with all the security

00:12:05,840 --> 00:12:09,950
controls built in it's gonna cost you

00:12:08,600 --> 00:12:13,040
pain and headache when you move to

00:12:09,950 --> 00:12:14,570
production right so we solved the

00:12:13,040 --> 00:12:16,160
problem of development and production

00:12:14,570 --> 00:12:18,410
environments looking the same with

00:12:16,160 --> 00:12:21,650
DevOps but now we need to put in

00:12:18,410 --> 00:12:23,420
security into the same continuum is your

00:12:21,650 --> 00:12:25,340
developer environments are built with

00:12:23,420 --> 00:12:27,230
security in mind you've got all lockdown

00:12:25,340 --> 00:12:29,480
restrictions you've got identity access

00:12:27,230 --> 00:12:31,580
management built in you've got log

00:12:29,480 --> 00:12:33,200
monitoring access etc all built into

00:12:31,580 --> 00:12:36,920
your developer environment so moving to

00:12:33,200 --> 00:12:38,420
production is really really smooth then

00:12:36,920 --> 00:12:43,310
you need to consider automating

00:12:38,420 --> 00:12:45,230
everything now all your tool sets can be

00:12:43,310 --> 00:12:46,880
built into your pipeline and you can

00:12:45,230 --> 00:12:48,800
automate everything in your delivery

00:12:46,880 --> 00:12:51,320
pipeline such as you know the richness

00:12:48,800 --> 00:12:53,120
of the toolset available today but you

00:12:51,320 --> 00:12:56,120
have to be very very judicious about

00:12:53,120 --> 00:12:58,880
what you really need in your pipeline so

00:12:56,120 --> 00:13:00,740
you really put in testing into your

00:12:58,880 --> 00:13:02,450
delivery pipelines if you're sure you're

00:13:00,740 --> 00:13:05,780
not going to produce false positives and

00:13:02,450 --> 00:13:07,610
slow the entire cycle down and choosing

00:13:05,780 --> 00:13:08,600
that to be built in your pipeline is

00:13:07,610 --> 00:13:12,710
something that you have to consciously

00:13:08,600 --> 00:13:16,160
keep thinking and looking at and lastly

00:13:12,710 --> 00:13:17,990
you also have to think about this

00:13:16,160 --> 00:13:20,360
mindset of security and we'll talk about

00:13:17,990 --> 00:13:21,680
that in a minute is what

00:13:20,360 --> 00:13:23,690
does that really mean for you and

00:13:21,680 --> 00:13:25,399
thinking about what outcomes and my

00:13:23,690 --> 00:13:28,190
trying to get better at when I'm saying

00:13:25,399 --> 00:13:30,440
I want to be secure security shows up on

00:13:28,190 --> 00:13:33,050
very different metrics it shows up in

00:13:30,440 --> 00:13:35,209
very different areas of operation and

00:13:33,050 --> 00:13:37,579
application and so on we're not going to

00:13:35,209 --> 00:13:39,680
talk a lot about application security

00:13:37,579 --> 00:13:42,610
here today but I believe there's a talk

00:13:39,680 --> 00:13:45,649
on Saturday by Imran called AB sec

00:13:42,610 --> 00:13:46,910
DevOps in in practical so I would

00:13:45,649 --> 00:13:48,380
encourage you to go to that talk if

00:13:46,910 --> 00:13:53,110
you're interested in in application

00:13:48,380 --> 00:13:55,940
security and the one other point here is

00:13:53,110 --> 00:13:58,519
while you build all of these tool sets

00:13:55,940 --> 00:14:01,490
and chains and and and get developer

00:13:58,519 --> 00:14:03,950
environments with security built in it's

00:14:01,490 --> 00:14:06,110
necessary to test and build your

00:14:03,950 --> 00:14:09,140
responsiveness to when your failures

00:14:06,110 --> 00:14:11,740
happen the difference between an attack

00:14:09,140 --> 00:14:15,620
and a breach is your ability to respond

00:14:11,740 --> 00:14:17,690
so the more prepared you are on how

00:14:15,620 --> 00:14:20,660
should I respond once a breach happens

00:14:17,690 --> 00:14:22,610
you can you can reduce that just to an

00:14:20,660 --> 00:14:24,230
attack right and that's a very important

00:14:22,610 --> 00:14:26,990
part of your security mentality is

00:14:24,230 --> 00:14:29,300
assuming it will fail and when it fails

00:14:26,990 --> 00:14:34,970
how ready are you and how responsive can

00:14:29,300 --> 00:14:37,010
you be automation now we are obviously

00:14:34,970 --> 00:14:39,709
we living in the great times where tools

00:14:37,010 --> 00:14:42,769
give us an awesome amount of automation

00:14:39,709 --> 00:14:44,420
possibility we can automation almost you

00:14:42,769 --> 00:14:46,790
know everything that's mentioned here

00:14:44,420 --> 00:14:48,709
these are all the different things you

00:14:46,790 --> 00:14:51,850
take into account from a security

00:14:48,709 --> 00:14:54,350
perspective that you want automation on

00:14:51,850 --> 00:14:56,149
you obviously don't want it to be manual

00:14:54,350 --> 00:14:57,380
it's a lot more error-prone it's going

00:14:56,149 --> 00:14:59,930
to be very very costly

00:14:57,380 --> 00:15:01,670
people will stop following and it's

00:14:59,930 --> 00:15:03,860
gonna be creating a lot of cultural

00:15:01,670 --> 00:15:05,449
issues if you have a people and not

00:15:03,860 --> 00:15:07,250
automation driving all of these

00:15:05,449 --> 00:15:11,180
behaviors into your into your

00:15:07,250 --> 00:15:13,310
organization the thing that we've seen

00:15:11,180 --> 00:15:15,829
the companies that I mentioned that are

00:15:13,310 --> 00:15:18,459
doing this really well the question is

00:15:15,829 --> 00:15:20,510
do we do this ourselves or we find

00:15:18,459 --> 00:15:23,300
platforms that do this really well for

00:15:20,510 --> 00:15:26,029
us do we have three integrated solutions

00:15:23,300 --> 00:15:28,190
a tendency that we see many companies

00:15:26,029 --> 00:15:30,319
tend to have is the tool oriented

00:15:28,190 --> 00:15:31,310
mindset which is hey I can do all this

00:15:30,319 --> 00:15:36,410
myself

00:15:31,310 --> 00:15:38,389
you could do this all yourself but that

00:15:36,410 --> 00:15:40,850
the thought process of having security

00:15:38,389 --> 00:15:43,819
even you build it but more importantly

00:15:40,850 --> 00:15:45,259
when you start to manage this and if you

00:15:43,819 --> 00:15:47,569
build something like this on your own

00:15:45,259 --> 00:15:50,360
you have to think about security for

00:15:47,569 --> 00:15:52,999
each one of these components each one of

00:15:50,360 --> 00:15:54,050
these components of a lifecycle each one

00:15:52,999 --> 00:15:57,860
of these components have vulnerabilities

00:15:54,050 --> 00:16:00,079
and updates and patches and so on right

00:15:57,860 --> 00:16:02,269
so the best in class the best in breed

00:16:00,079 --> 00:16:04,970
organizations look at pre integrated

00:16:02,269 --> 00:16:06,620
fabricated solutions that have all of

00:16:04,970 --> 00:16:09,139
these awesome automation already

00:16:06,620 --> 00:16:10,699
pre-built in so all you then have to

00:16:09,139 --> 00:16:12,559
worry about what's unique to your

00:16:10,699 --> 00:16:14,930
environment and your compliance

00:16:12,559 --> 00:16:17,990
requirements and you can move on to a

00:16:14,930 --> 00:16:21,019
lot more value-added security features

00:16:17,990 --> 00:16:22,759
and and things you know work on which is

00:16:21,019 --> 00:16:24,920
around your day to operations how will

00:16:22,759 --> 00:16:27,279
you keep this going and how will you

00:16:24,920 --> 00:16:30,379
improve the detection and responsiveness

00:16:27,279 --> 00:16:33,170
versus working on the security tools the

00:16:30,379 --> 00:16:35,480
tools are not the answer right making

00:16:33,170 --> 00:16:37,220
sure that you've got the behavior you've

00:16:35,480 --> 00:16:38,899
got the collaboration and you've got the

00:16:37,220 --> 00:16:41,240
responsiveness is where most

00:16:38,899 --> 00:16:44,050
organizations have the maximum benefit

00:16:41,240 --> 00:16:48,230
and not having the most awesome tools

00:16:44,050 --> 00:16:50,480
and like we said making sure that you've

00:16:48,230 --> 00:16:52,730
got the right security thought process

00:16:50,480 --> 00:16:54,680
at each stage of the software lifecycle

00:16:52,730 --> 00:16:57,470
there are different things that need to

00:16:54,680 --> 00:16:59,449
happen and moving from everything that

00:16:57,470 --> 00:17:03,019
you see on this slide typically coming

00:16:59,449 --> 00:17:05,480
into play in tests and deployment start

00:17:03,019 --> 00:17:08,059
to spread those out and thinking about

00:17:05,480 --> 00:17:11,419
the appropriate tool at each stage of

00:17:08,059 --> 00:17:12,589
these different cycles of designing what

00:17:11,419 --> 00:17:14,959
needs to happen from a security

00:17:12,589 --> 00:17:16,909
perspective at the design stage right

00:17:14,959 --> 00:17:18,409
and and you see recommendations up there

00:17:16,909 --> 00:17:19,970
what needs to happen at the development

00:17:18,409 --> 00:17:22,669
stage and so on and so forth so

00:17:19,970 --> 00:17:25,189
Security's not bunched up at the end and

00:17:22,669 --> 00:17:27,770
that's lost on the whole process so

00:17:25,189 --> 00:17:30,049
distributing these tasks out at the most

00:17:27,770 --> 00:17:32,330
relevant stage of building these awesome

00:17:30,049 --> 00:17:35,510
software's that you guys do reduces

00:17:32,330 --> 00:17:37,970
friction at the end and ultimately what

00:17:35,510 --> 00:17:40,090
you want to do and our prescription is

00:17:37,970 --> 00:17:42,620
measuring the value that you create

00:17:40,090 --> 00:17:44,970
really the value for the developer is

00:17:42,620 --> 00:17:48,929
the most amount of time spent

00:17:44,970 --> 00:17:52,380
in writing cold verses testing and

00:17:48,929 --> 00:17:54,330
regression and fixing right so if you're

00:17:52,380 --> 00:17:55,830
ever curious about am i being super

00:17:54,330 --> 00:17:57,530
productive just look at that quick

00:17:55,830 --> 00:17:59,940
formula how much time is spent on

00:17:57,530 --> 00:18:02,460
writing code versus the rest of the

00:17:59,940 --> 00:18:04,710
activities and following this

00:18:02,460 --> 00:18:06,510
prescription you will keep increasing

00:18:04,710 --> 00:18:08,820
the amount of time you spend on the code

00:18:06,510 --> 00:18:14,340
versus doing all the testing and fixing

00:18:08,820 --> 00:18:18,059
that a lot of us are getting used to and

00:18:14,340 --> 00:18:20,039
so the point here is we are a very

00:18:18,059 --> 00:18:21,270
metrics driven organization so we showed

00:18:20,039 --> 00:18:23,010
you some metrics of what large

00:18:21,270 --> 00:18:26,100
organizations have have achieved at

00:18:23,010 --> 00:18:29,159
scale our prescription learning from all

00:18:26,100 --> 00:18:31,110
of these great companies is to start

00:18:29,159 --> 00:18:34,799
with security in an outcome driven

00:18:31,110 --> 00:18:36,510
manner as well what are the metrics

00:18:34,799 --> 00:18:39,230
around security that you would like to

00:18:36,510 --> 00:18:41,130
get better at and that's going to inform

00:18:39,230 --> 00:18:44,100
everything else that we saw on the

00:18:41,130 --> 00:18:45,960
previous slides around here do I need

00:18:44,100 --> 00:18:47,760
more automation do I need more upfront

00:18:45,960 --> 00:18:50,610
testing am I trying to improve

00:18:47,760 --> 00:18:51,870
compliance how do I measure improvement

00:18:50,610 --> 00:18:54,390
in compliance do I know I'm really

00:18:51,870 --> 00:18:56,669
getting better or do I need to slow down

00:18:54,390 --> 00:18:58,890
my development because I'm compromising

00:18:56,669 --> 00:19:01,409
security as measured by a certain metric

00:18:58,890 --> 00:19:03,809
that we've all agreed upon in the

00:19:01,409 --> 00:19:07,289
absence of metrics it all becomes very

00:19:03,809 --> 00:19:08,760
subjective and culturally that provides

00:19:07,289 --> 00:19:11,630
a challenge because you don't have a

00:19:08,760 --> 00:19:14,390
point of alignment around what does

00:19:11,630 --> 00:19:18,240
being good at security mean or does not

00:19:14,390 --> 00:19:19,650
right and then as with everything it's

00:19:18,240 --> 00:19:22,679
very important to create the right

00:19:19,650 --> 00:19:25,350
culture so that the focus on security is

00:19:22,679 --> 00:19:27,600
not just by the security team just like

00:19:25,350 --> 00:19:29,220
DevOps was not developers or operations

00:19:27,600 --> 00:19:31,320
it's the entire development and

00:19:29,220 --> 00:19:33,530
operations team it's the same thing with

00:19:31,320 --> 00:19:35,760
security and it's everybody's business

00:19:33,530 --> 00:19:37,409
because guess what if your application

00:19:35,760 --> 00:19:40,080
is considered not secured who's going to

00:19:37,409 --> 00:19:41,909
spend time fixing it writing it testing

00:19:40,080 --> 00:19:44,909
it releasing it it's probably going to

00:19:41,909 --> 00:19:48,360
be you right so having this common

00:19:44,909 --> 00:19:51,090
collaborative joint mindset around hey

00:19:48,360 --> 00:19:52,799
security matters for everyone and here

00:19:51,090 --> 00:19:54,840
is what it means when we say security

00:19:52,799 --> 00:19:58,720
matters here are the metrics we want to

00:19:54,840 --> 00:20:00,580
get better at we are at 50% of patching

00:19:58,720 --> 00:20:03,190
within a seven day window we want to get

00:20:00,580 --> 00:20:06,160
to 90% that's an awesome metric

00:20:03,190 --> 00:20:07,900
everybody can align and agree upon right

00:20:06,160 --> 00:20:09,580
so it's not more subjective and then we

00:20:07,900 --> 00:20:12,670
all drive to common metrics and common

00:20:09,580 --> 00:20:14,830
goals so with that I think we have a

00:20:12,670 --> 00:20:18,090
couple of minutes left for any questions

00:20:14,830 --> 00:20:18,090
for Jerome or myself

00:20:20,550 --> 00:20:25,050
did anyone learn any one new thing today

00:20:25,140 --> 00:20:32,340
there's a question you did that was you

00:20:29,410 --> 00:20:32,340
saying okay

00:20:37,840 --> 00:20:46,180
all right I have one usually I do much

00:20:42,880 --> 00:20:50,020
of my learning by looking at how well

00:20:46,180 --> 00:20:53,080
setup open-source projects do their

00:20:50,020 --> 00:20:55,870
things now do you see any open-source

00:20:53,080 --> 00:21:00,960
projects that sort of embodies the best

00:20:55,870 --> 00:21:04,960
of depths this is Deb Cyclops write

00:21:00,960 --> 00:21:08,350
practices well we obviously would be

00:21:04,960 --> 00:21:10,720
biased so pivotal sells sells platform

00:21:08,350 --> 00:21:13,480
for a living right so I would encourage

00:21:10,720 --> 00:21:17,260
you to look at Cloud Foundry I would

00:21:13,480 --> 00:21:19,270
also still say and again this is based

00:21:17,260 --> 00:21:20,920
on what we've seen right and we are

00:21:19,270 --> 00:21:22,840
talking from experience of these massive

00:21:20,920 --> 00:21:27,340
large complex organizations doing this

00:21:22,840 --> 00:21:29,470
at scale it is really your focus on the

00:21:27,340 --> 00:21:31,990
best-in-class tools that you get you the

00:21:29,470 --> 00:21:33,220
security outcomes so we know of many

00:21:31,990 --> 00:21:35,860
organizations that have chosen

00:21:33,220 --> 00:21:38,470
individual best-in-class tool for a

00:21:35,860 --> 00:21:40,480
certain security purpose and yet it gets

00:21:38,470 --> 00:21:43,210
them nowhere because then you've shifted

00:21:40,480 --> 00:21:44,860
your pain in the integration of all of

00:21:43,210 --> 00:21:46,690
these components and the management of

00:21:44,860 --> 00:21:49,210
these components and you have not

00:21:46,690 --> 00:21:50,890
aligned on what am i trying to improve

00:21:49,210 --> 00:21:53,710
by these components and could a lesser

00:21:50,890 --> 00:21:56,440
set of components to it the other thing

00:21:53,710 --> 00:21:58,870
that these that we have learned is the

00:21:56,440 --> 00:22:01,780
acceptability versus resistance

00:21:58,870 --> 00:22:04,680
culturally of of tool sets in a in a

00:22:01,780 --> 00:22:07,300
large organization you really want

00:22:04,680 --> 00:22:09,610
developers on one side and security on

00:22:07,300 --> 00:22:11,980
the other side to sort of harmonize and

00:22:09,610 --> 00:22:13,690
say this tool is achieving a specific

00:22:11,980 --> 00:22:16,120
purpose and it's not slowing anybody

00:22:13,690 --> 00:22:17,440
else in the organization now so yes we

00:22:16,120 --> 00:22:19,150
could follow up and give you a list of

00:22:17,440 --> 00:22:21,340
tools certainly encourage you to look at

00:22:19,150 --> 00:22:24,310
Cloud Foundry but also encourage you to

00:22:21,340 --> 00:22:26,710
look beyond the tool sets our experience

00:22:24,310 --> 00:22:30,100
says it's really about the tools lesser

00:22:26,710 --> 00:22:31,810
tools managed to well the most amount of

00:22:30,100 --> 00:22:34,450
automation you do with it and you raise

00:22:31,810 --> 00:22:36,640
the value line above the tool set so the

00:22:34,450 --> 00:22:40,270
tool set is inconsequential that's where

00:22:36,640 --> 00:22:44,280
you start to see results thank you for

00:22:40,270 --> 00:22:44,280

YouTube URL: https://www.youtube.com/watch?v=l-B2ETwSA7o


