Title: Dependency Analytics for Navigating the Complexity of Components by Aagam Shah, Sunil Samal
Publication date: 2019-03-27
Playlist: FOSSASIA Summit 2019 - Artificial Intelligence
Description: 
	16 March 2019 10:00, Event Hall 2-1

Vast and fast growing ecosystem of opensource components enable developers choose appropriate components. Along with the vast choice of opensource components, developers need guidance to choose secure, license compliant and appropriate dependencies that match the "intent" of the application(s) being built.

Powered by Machine Learning algorithms, Dependency analytics platform  ingests vast number of opensource components and right inside your VSCode editor, provides complete health check for all the opensource components (Security, License compliance and flag any usage outliers) along with specific guidance to choose appropriate opensource components matching the intent of the application being built.

The platform performs in depth analysis of application dependencies and provides developer with a report which has below features and are the major topics for our talk:

1. Suggests a project level license, check for conflicts between dependency licences.

2. Flags a security vulnerability (CVE) and suggests a remedial version.

3. Shows GitHub popularity metrics of dependencies along with latest version.

4. Recommends dependencies based on the current set of dependencies used, using machine learning techniques.
Captions: 
	00:00:00,000 --> 00:00:05,480
I think so our first talk to gate

00:00:03,210 --> 00:00:10,740
today's about dependency analytics and

00:00:05,480 --> 00:00:14,340
we have Sunil somehow and a gum Shah

00:00:10,740 --> 00:00:15,900
both from Red Hat and they're here to

00:00:14,340 --> 00:00:18,270
entertain you and maybe scare you a

00:00:15,900 --> 00:00:19,830
little bit because they were part of the

00:00:18,270 --> 00:00:20,730
group of people that had never seen the

00:00:19,830 --> 00:00:31,289
Terminator movies

00:00:20,730 --> 00:00:32,820
oh good morning everybody so as I said

00:00:31,289 --> 00:00:38,550
I'm Sonia I'm from Brainerd and he's

00:00:32,820 --> 00:00:40,860
autumn my colleague so today before I

00:00:38,550 --> 00:00:42,719
start with my presentation I would like

00:00:40,860 --> 00:00:46,020
to tell you about an incident that

00:00:42,719 --> 00:00:48,899
happened back in May 2018 when the NPM

00:00:46,020 --> 00:00:51,840
security team received and responded to

00:00:48,899 --> 00:00:54,300
a report that one of the NPM package

00:00:51,840 --> 00:00:57,690
named gate cookies have our security

00:00:54,300 --> 00:01:01,620
issues have a malicious backdoor that

00:00:57,690 --> 00:01:04,650
allows the attackers to inject arbitrary

00:01:01,620 --> 00:01:08,460
code into a running server and execute

00:01:04,650 --> 00:01:11,869
it so the problem is the problem here is

00:01:08,460 --> 00:01:15,479
that the external applications using the

00:01:11,869 --> 00:01:18,479
package are under the risk of being

00:01:15,479 --> 00:01:20,939
exploited so later the NPM security team

00:01:18,479 --> 00:01:25,680
resolved the issue and unpublished the

00:01:20,939 --> 00:01:28,080
package from the NPM registry so here

00:01:25,680 --> 00:01:31,200
you can see we use dependencies on a

00:01:28,080 --> 00:01:33,900
daily basis to build our applications so

00:01:31,200 --> 00:01:37,020
dependencies are nothing but third-party

00:01:33,900 --> 00:01:40,530
libraries or modules that you that we

00:01:37,020 --> 00:01:42,240
use to build our application and there

00:01:40,530 --> 00:01:47,430
are a lot of lots and lots of

00:01:42,240 --> 00:01:49,560
dependencies so hundreds of dependencies

00:01:47,430 --> 00:01:52,170
gets published every day so as you can

00:01:49,560 --> 00:01:56,790
see in the graph let's take for example

00:01:52,170 --> 00:01:59,509
for the NPM each day thousands of NPM

00:01:56,790 --> 00:02:02,310
packages gets published to NPM registry

00:01:59,509 --> 00:02:05,700
so this many number of choices a

00:02:02,310 --> 00:02:08,340
developer has to choose from so when we

00:02:05,700 --> 00:02:10,739
started looking into this space we found

00:02:08,340 --> 00:02:13,380
a potential problem to solve so that we

00:02:10,739 --> 00:02:17,490
can ease the development process

00:02:13,380 --> 00:02:21,250
so we figure out that there are three

00:02:17,490 --> 00:02:24,880
certain parameters that we need to see

00:02:21,250 --> 00:02:28,300
while choosing a dependency okay the

00:02:24,880 --> 00:02:30,820
first one is security vulnerability the

00:02:28,300 --> 00:02:33,970
second one is licensed third one is

00:02:30,820 --> 00:02:36,040
popularity and maintainability and the

00:02:33,970 --> 00:02:41,170
fourth one is completeness of the

00:02:36,040 --> 00:02:44,440
application stack next slide okay what

00:02:41,170 --> 00:02:46,840
is CV so Stevie's a security

00:02:44,440 --> 00:02:49,320
vulnerability that may or may not be

00:02:46,840 --> 00:02:52,720
present in your application dependencies

00:02:49,320 --> 00:02:54,790
so it's always better to check for CV

00:02:52,720 --> 00:02:57,100
before using any dependencies to build

00:02:54,790 --> 00:02:59,800
your application so that at later point

00:02:57,100 --> 00:03:04,540
of time you are not under the risk of

00:02:59,800 --> 00:03:06,910
being exploited by an attacker and the

00:03:04,540 --> 00:03:10,090
second one is license license can be

00:03:06,910 --> 00:03:11,950
tricky to choose like no most of the

00:03:10,090 --> 00:03:13,959
developers they don't have an idea like

00:03:11,950 --> 00:03:17,910
how they license open source license

00:03:13,959 --> 00:03:21,820
works so how many food here know like

00:03:17,910 --> 00:03:25,360
the apache license and the GPL license

00:03:21,820 --> 00:03:27,610
don't go with each other so like most of

00:03:25,360 --> 00:03:30,400
the developers don't know this fact so

00:03:27,610 --> 00:03:34,480
they suppose for example you are using a

00:03:30,400 --> 00:03:36,370
package which isn't cheap GPL and you

00:03:34,480 --> 00:03:38,940
decided to release your project under

00:03:36,370 --> 00:03:42,910
Apache - you know you can't do that

00:03:38,940 --> 00:03:45,220
because Apache and GPL are conflict like

00:03:42,910 --> 00:03:47,560
they are in Cocke so at this point of

00:03:45,220 --> 00:03:51,790
time there is no tool or application

00:03:47,560 --> 00:03:55,890
which do that so when we started looking

00:03:51,790 --> 00:04:00,370
into this space we created like kind of

00:03:55,890 --> 00:04:02,170
extension 4 vs codecs vs code which help

00:04:00,370 --> 00:04:04,480
developers to choose the right

00:04:02,170 --> 00:04:11,290
dependencies in the development phase

00:04:04,480 --> 00:04:13,570
only so let's see a demo how how you can

00:04:11,290 --> 00:04:15,570
choose how you can use our extension and

00:04:13,570 --> 00:04:18,820
choose the right dependencies for your

00:04:15,570 --> 00:04:20,979
application so my colleague ogum will

00:04:18,820 --> 00:04:23,650
explain like we will show you the demo

00:04:20,979 --> 00:04:25,919
and explain our goals and future use

00:04:23,650 --> 00:04:25,919
cases

00:04:29,479 --> 00:04:34,530
yeah Thank You Sunil

00:04:31,349 --> 00:04:37,740
so as Sunil mentioned there are a lot of

00:04:34,530 --> 00:04:40,860
dependencies to choose from and this

00:04:37,740 --> 00:04:43,860
ecosystems are growing rapidly like for

00:04:40,860 --> 00:04:45,389
NPM it for maven actually there were 102

00:04:43,860 --> 00:04:47,340
percent growth in number of packages in

00:04:45,389 --> 00:04:50,310
the last two years so you can imagine

00:04:47,340 --> 00:04:52,159
now coming to our goal we are we are

00:04:50,310 --> 00:04:56,669
providing our goal in three aspects

00:04:52,159 --> 00:04:59,909
first is the first is the higher

00:04:56,669 --> 00:05:02,400
confidence aspect where you can choose

00:04:59,909 --> 00:05:03,840
dependencies which are which are free of

00:05:02,400 --> 00:05:05,639
anyone abilities and which do not have

00:05:03,840 --> 00:05:06,960
any license conflicts so you can have

00:05:05,639 --> 00:05:08,490
higher confidence while your product

00:05:06,960 --> 00:05:09,930
icing your application you know our

00:05:08,490 --> 00:05:11,879
confidence in your deployments because

00:05:09,930 --> 00:05:15,000
and your enterprises our confidence in

00:05:11,879 --> 00:05:17,279
you that you are shipping and building

00:05:15,000 --> 00:05:19,349
the same like the best software out

00:05:17,279 --> 00:05:21,509
there and the second is the increased

00:05:19,349 --> 00:05:23,699
productivity levels so what we mean by

00:05:21,509 --> 00:05:25,439
here is you don't need to go anywhere to

00:05:23,699 --> 00:05:27,060
search for any security vulnerabilities

00:05:25,439 --> 00:05:28,889
or you don't need to go anywhere to

00:05:27,060 --> 00:05:31,529
search for licenses for a specific

00:05:28,889 --> 00:05:34,110
dependency because we all show you right

00:05:31,529 --> 00:05:36,029
inside your editor third is the reduce

00:05:34,110 --> 00:05:37,710
development risk as as we already

00:05:36,029 --> 00:05:39,930
discussed there are a lot of malicious

00:05:37,710 --> 00:05:41,460
packages that are out there and we

00:05:39,930 --> 00:05:42,900
should as a developers we should be

00:05:41,460 --> 00:05:44,940
knowing that while developing your

00:05:42,900 --> 00:05:48,270
application because that increases our

00:05:44,940 --> 00:05:49,919
risk if we don't do that so yeah it

00:05:48,270 --> 00:05:53,610
might save you company a few dollars and

00:05:49,919 --> 00:05:55,529
you your time yeah this is the current

00:05:53,610 --> 00:05:57,930
statistics all platform so as you can

00:05:55,529 --> 00:05:59,909
see for node we have like five seventy

00:05:57,930 --> 00:06:04,129
seven thousand packages and 1.2 million

00:05:59,909 --> 00:06:07,710
versions that we track four CVEs and

00:06:04,129 --> 00:06:10,949
license complex and also we have 438 CVS

00:06:07,710 --> 00:06:13,919
as of now for node and 531 CVS for Java

00:06:10,949 --> 00:06:15,599
and 195 for Python and we have 28

00:06:13,919 --> 00:06:17,909
license as open source licenses in our

00:06:15,599 --> 00:06:19,740
system so if you use if you're using any

00:06:17,909 --> 00:06:21,990
of the 28 licenses then we can actually

00:06:19,740 --> 00:06:23,219
show you if there is a conflict or under

00:06:21,990 --> 00:06:27,710
what license your project can be

00:06:23,219 --> 00:06:31,589
released now coming to the demo part so

00:06:27,710 --> 00:06:33,000
this is a vs code extension so you the

00:06:31,589 --> 00:06:34,949
presentation is already on the force

00:06:33,000 --> 00:06:37,139
Asia website so when you go to this

00:06:34,949 --> 00:06:39,660
slide you can just click this image and

00:06:37,139 --> 00:06:43,200
it will land you up at the vs

00:06:39,660 --> 00:06:46,620
marketplace so this is the marketplace

00:06:43,200 --> 00:06:48,390
of Visual Studio code as you can see we

00:06:46,620 --> 00:06:50,990
exchanged a neighbor's dependency

00:06:48,390 --> 00:06:53,970
analytics you can just click on install

00:06:50,990 --> 00:06:56,820
and it will open the link inside your

00:06:53,970 --> 00:06:59,310
use code editor right here so I already

00:06:56,820 --> 00:07:02,490
have it installed so let's just quickly

00:06:59,310 --> 00:07:05,160
go through the devil so here I will be

00:07:02,490 --> 00:07:10,170
showing two kinds of applications let me

00:07:05,160 --> 00:07:12,120
just zoom it a little bit yeah I think

00:07:10,170 --> 00:07:13,470
that's visible down so here I'll be

00:07:12,120 --> 00:07:15,450
showing two kinds of applications first

00:07:13,470 --> 00:07:17,010
there's an old application which is a

00:07:15,450 --> 00:07:19,500
color chooser so you can actually two

00:07:17,010 --> 00:07:22,110
chili styles your terminal using a color

00:07:19,500 --> 00:07:25,380
of your choice and the second is a java

00:07:22,110 --> 00:07:27,990
application which is we created for just

00:07:25,380 --> 00:07:30,420
for this table for license conflicts so

00:07:27,990 --> 00:07:32,520
yeah so we are using palm dot XML for

00:07:30,420 --> 00:07:34,800
Java as many of you might be using and

00:07:32,520 --> 00:07:38,430
we are using package JSON that is the

00:07:34,800 --> 00:07:40,710
NPM package manager for node and yeah so

00:07:38,430 --> 00:07:42,300
here as you can see we are using four

00:07:40,710 --> 00:07:45,150
dependencies first what is the answer

00:07:42,300 --> 00:07:47,250
Styles second is extra escape string

00:07:45,150 --> 00:07:49,020
reject regular expressions third is

00:07:47,250 --> 00:07:51,090
supports color and forth is bootstrap

00:07:49,020 --> 00:07:52,080
now we are using specific versions for

00:07:51,090 --> 00:07:54,990
let's say for an example we are using

00:07:52,080 --> 00:07:57,570
bootstrap 4.1.1 now as you can see there

00:07:54,990 --> 00:08:00,240
is a red line down there that means it

00:07:57,570 --> 00:08:01,860
has a security vulnerability and if you

00:08:00,240 --> 00:08:03,780
hover over it you can see that

00:08:01,860 --> 00:08:05,460
application dependency would strap has

00:08:03,780 --> 00:08:07,440
vulnerable to the following CVEs

00:08:05,460 --> 00:08:10,530
now our recommendation is to use where

00:08:07,440 --> 00:08:12,419
your in 4.1.2 and the latest version is

00:08:10,530 --> 00:08:14,910
four point three point one so we

00:08:12,419 --> 00:08:19,140
actually show you why insider editor how

00:08:14,910 --> 00:08:21,180
you can get rid of the CVS so if you see

00:08:19,140 --> 00:08:23,610
there is a tooltip I switch to

00:08:21,180 --> 00:08:29,970
recommended version 4.1 point to you can

00:08:23,610 --> 00:08:32,669
just click on it and so now actually the

00:08:29,970 --> 00:08:35,430
CVS that we saw you can actually see it

00:08:32,669 --> 00:08:37,080
as a part of a stack report so how you

00:08:35,430 --> 00:08:38,700
couldn't read a stag report the whole

00:08:37,080 --> 00:08:41,160
report with Seavey's license and

00:08:38,700 --> 00:08:43,080
everything you right-click and you see

00:08:41,160 --> 00:08:44,790
the dependency Analytics report right

00:08:43,080 --> 00:08:47,430
down there you can press command D on

00:08:44,790 --> 00:08:51,590
mac or control-d on windows to directly

00:08:47,430 --> 00:08:54,680
just generate the report for you

00:08:51,590 --> 00:08:57,680
so let's say the report now so coming to

00:08:54,680 --> 00:08:59,720
the report part as we can see we have

00:08:57,680 --> 00:09:02,600
four cards based on the four

00:08:59,720 --> 00:09:05,150
perspectives that we have so first is

00:09:02,600 --> 00:09:09,020
the CV card as you can see bootstrap has

00:09:05,150 --> 00:09:12,850
CV 2018 one four zero four zero and if

00:09:09,020 --> 00:09:15,320
you google it you can actually see

00:09:12,850 --> 00:09:18,170
inside the nvd database there in

00:09:15,320 --> 00:09:20,930
bootstrap before 4.1.2 accesses is

00:09:18,170 --> 00:09:22,220
possible so if you're using this if

00:09:20,930 --> 00:09:24,190
you're using bootstrap version before

00:09:22,220 --> 00:09:28,640
4.1.2 which was our case we were using

00:09:24,190 --> 00:09:30,589
4.1.1 and your application is vulnerable

00:09:28,640 --> 00:09:32,839
to an exorcist attack now you as the

00:09:30,589 --> 00:09:34,130
developer might not know that before it

00:09:32,839 --> 00:09:36,260
this exchange entails before this

00:09:34,130 --> 00:09:38,000
product tells you so and it's very

00:09:36,260 --> 00:09:40,070
useful for you in the development phase

00:09:38,000 --> 00:09:42,350
to make those decisions because once

00:09:40,070 --> 00:09:45,260
your product has shaped and if the third

00:09:42,350 --> 00:09:47,150
party is able to access your application

00:09:45,260 --> 00:09:51,080
using an exercise the tag or is able to

00:09:47,150 --> 00:09:54,560
exploit then it comes to responsibility

00:09:51,080 --> 00:09:58,490
part so yeah so it's better if you do it

00:09:54,560 --> 00:10:00,770
beforehand second is the licenses tab

00:09:58,490 --> 00:10:02,150
where right now the suggested license is

00:10:00,770 --> 00:10:05,450
MIT because you have no license

00:10:02,150 --> 00:10:07,640
conflicts so how is it MIT now we can go

00:10:05,450 --> 00:10:09,680
to the dependency detail part where we

00:10:07,640 --> 00:10:10,910
have all the four dependencies that were

00:10:09,680 --> 00:10:12,560
in the package.json that are being

00:10:10,910 --> 00:10:14,630
analyzed now we have no unknown

00:10:12,560 --> 00:10:16,910
dependencies here but that might not

00:10:14,630 --> 00:10:18,680
always be the case there are as you as I

00:10:16,910 --> 00:10:20,660
said there are thousands of packages

00:10:18,680 --> 00:10:23,180
that are being added every day in NPM

00:10:20,660 --> 00:10:26,000
so we might not have data for each and

00:10:23,180 --> 00:10:28,640
every package out there but we made sure

00:10:26,000 --> 00:10:31,310
that whenever we see an unseen package

00:10:28,640 --> 00:10:33,320
we ingest it for you and whenever you

00:10:31,310 --> 00:10:34,580
run the report next time we will have

00:10:33,320 --> 00:10:35,990
all the data you need for that

00:10:34,580 --> 00:10:38,240
particular package and the particular

00:10:35,990 --> 00:10:41,810
version so we have automated data

00:10:38,240 --> 00:10:44,060
pipelines to do that so coming to the

00:10:41,810 --> 00:10:47,150
dependency details part as you can see

00:10:44,060 --> 00:10:49,850
supports color is licensed under MIT and

00:10:47,150 --> 00:10:51,589
it has this kit of statistics so why are

00:10:49,850 --> 00:10:54,650
you disturbed statistics important over

00:10:51,589 --> 00:10:57,040
here so you can actually check if your

00:10:54,650 --> 00:10:59,330
project or if your package is being

00:10:57,040 --> 00:11:00,800
famous across data but not how many

00:10:59,330 --> 00:11:01,730
contributors are there how many stars

00:11:00,800 --> 00:11:03,980
how many Forks

00:11:01,730 --> 00:11:05,300
how many dependent repos what is the

00:11:03,980 --> 00:11:06,470
usage statistics

00:11:05,300 --> 00:11:07,640
so you can actually make an informed

00:11:06,470 --> 00:11:09,709
choice that if this package is being

00:11:07,640 --> 00:11:11,600
used or is being maintained anymore or

00:11:09,709 --> 00:11:14,240
not based on the status to you you are

00:11:11,600 --> 00:11:17,630
just seeing right now so that helps in

00:11:14,240 --> 00:11:19,459
making right choices and it does also as

00:11:17,630 --> 00:11:21,560
license as I just said it also has tags

00:11:19,459 --> 00:11:23,060
so this tags are just from the interim

00:11:21,560 --> 00:11:25,670
registry if you're familiar with the

00:11:23,060 --> 00:11:27,290
tagging weekend is amojan p.m. and this

00:11:25,670 --> 00:11:29,209
is the bootstrap so as you can see in

00:11:27,290 --> 00:11:31,760
bootstrap we actually see a warning sign

00:11:29,209 --> 00:11:34,760
in the security security part because we

00:11:31,760 --> 00:11:38,209
had a CV right remember in the 4.1.1

00:11:34,760 --> 00:11:40,399
version now these are the cv IDs because

00:11:38,209 --> 00:11:43,519
we had a cv for this package and the

00:11:40,399 --> 00:11:46,940
license is also MIT for this particular

00:11:43,519 --> 00:11:48,980
dependency now the third package is the

00:11:46,940 --> 00:11:50,660
escape string and here it is also

00:11:48,980 --> 00:11:52,760
licensed in here my T and our sister

00:11:50,660 --> 00:11:55,250
this is also by sensitive MIT and hence

00:11:52,760 --> 00:11:56,720
our project license can be MIT now if

00:11:55,250 --> 00:11:58,550
there were a restricted license for this

00:11:56,720 --> 00:12:00,079
any of this packages and there will be a

00:11:58,550 --> 00:12:01,930
license conflict I think so Neal already

00:12:00,079 --> 00:12:03,920
mentioned about Apache and GPL v2 oh

00:12:01,930 --> 00:12:08,240
they are not they don't go together

00:12:03,920 --> 00:12:10,430
because of some parent clauses so those

00:12:08,240 --> 00:12:13,339
that gave me a license conflict we will

00:12:10,430 --> 00:12:16,250
see a license conflict in our java

00:12:13,339 --> 00:12:19,490
application soon so yeah will it's a

00:12:16,250 --> 00:12:22,339
part of the next so then comes the

00:12:19,490 --> 00:12:26,899
insights part now inside says basically

00:12:22,339 --> 00:12:28,279
how like what packages can you use think

00:12:26,899 --> 00:12:31,130
of it think of it as a recommendation

00:12:28,279 --> 00:12:33,550
system for your application dependencies

00:12:31,130 --> 00:12:35,899
like your fear using this for packages

00:12:33,550 --> 00:12:38,810
then you might be interested in using

00:12:35,899 --> 00:12:40,880
this packages as well like it's based on

00:12:38,810 --> 00:12:42,709
our data collection that we collected

00:12:40,880 --> 00:12:45,770
public data from github like what

00:12:42,709 --> 00:12:47,420
developers mostly use and we devil the

00:12:45,770 --> 00:12:49,730
created a machine learning model that

00:12:47,420 --> 00:12:51,140
basically recommends your packages based

00:12:49,730 --> 00:12:51,589
on the packages that you're using right

00:12:51,140 --> 00:12:55,130
now

00:12:51,589 --> 00:12:57,320
so for example in terms of Python you

00:12:55,130 --> 00:12:59,000
might be using them by Syfy and because

00:12:57,320 --> 00:13:01,490
they're pretty common nowadays then you

00:12:59,000 --> 00:13:02,779
might be interested in our model we say

00:13:01,490 --> 00:13:05,000
you might be interested in pandas or

00:13:02,779 --> 00:13:07,430
tensorflow or scikit-learn or matplotlib

00:13:05,000 --> 00:13:09,140
or Seabourn those kinds of things so

00:13:07,430 --> 00:13:11,810
basically we have trained our models

00:13:09,140 --> 00:13:14,329
based on the data that we had from the

00:13:11,810 --> 00:13:16,279
developers a usage point of view like

00:13:14,329 --> 00:13:18,350
what kind of packages usually eat all

00:13:16,279 --> 00:13:19,190
the press use together so it's kind of

00:13:18,350 --> 00:13:21,230
helpful because

00:13:19,190 --> 00:13:23,030
you're a developing web application and

00:13:21,230 --> 00:13:24,680
web application is not a common thing

00:13:23,030 --> 00:13:26,030
nowadays or a machine learning

00:13:24,680 --> 00:13:28,520
application it's not a very common thing

00:13:26,030 --> 00:13:29,960
every everybody is doing it so you might

00:13:28,520 --> 00:13:32,690
be interested in doing what other people

00:13:29,960 --> 00:13:34,670
or work what people usually use along

00:13:32,690 --> 00:13:37,430
with those packages so you don't have to

00:13:34,670 --> 00:13:38,720
go and search every time you know what

00:13:37,430 --> 00:13:40,370
what is the best package out there for

00:13:38,720 --> 00:13:43,520
this particular let's say floating

00:13:40,370 --> 00:13:45,410
library right so that's useful and we

00:13:43,520 --> 00:13:48,110
also show a confidence score like how

00:13:45,410 --> 00:13:50,480
much confident we are recommending this

00:13:48,110 --> 00:13:53,360
package to you so let's have a talk we

00:13:50,480 --> 00:13:54,560
are 66% confident now as you can see as

00:13:53,360 --> 00:13:55,100
you can see there is also a feedback

00:13:54,560 --> 00:13:57,950
button

00:13:55,100 --> 00:13:59,540
I like okay this is plus 1 and this is

00:13:57,950 --> 00:14:01,130
minus 1 so if you're happy if you're

00:13:59,540 --> 00:14:03,170
using it then you can just say ok I'm

00:14:01,130 --> 00:14:05,000
using it it's great for me it it works

00:14:03,170 --> 00:14:06,980
for me it's a plus 1 and

00:14:05,000 --> 00:14:09,140
oh I don't like it it's you know it

00:14:06,980 --> 00:14:12,080
doesn't make sense for me so it's it's

00:14:09,140 --> 00:14:14,420
minus 1 also if you drop down you can

00:14:12,080 --> 00:14:15,800
see a recommended version what version

00:14:14,420 --> 00:14:17,840
to use of that particular dependency

00:14:15,800 --> 00:14:19,820
also you can see the same statistics and

00:14:17,840 --> 00:14:21,680
the licenses for those recommended

00:14:19,820 --> 00:14:23,870
dependencies as well so you can actually

00:14:21,680 --> 00:14:25,970
make a choice of what dependency to use

00:14:23,870 --> 00:14:27,680
based on the confidence score or either

00:14:25,970 --> 00:14:29,840
you're comfortable looking at the

00:14:27,680 --> 00:14:32,270
statistics or you're comfortable looking

00:14:29,840 --> 00:14:34,550
at licensed the dependencies using maybe

00:14:32,270 --> 00:14:36,140
you want to reject it at MIT so you

00:14:34,550 --> 00:14:38,000
might not want to choose any dependency

00:14:36,140 --> 00:14:40,460
which is another less more restrictive

00:14:38,000 --> 00:14:42,950
licenses gplv2 right it doesn't make

00:14:40,460 --> 00:14:47,030
sense for you so those are the kind of

00:14:42,950 --> 00:14:50,540
things and coming to the next part where

00:14:47,030 --> 00:14:54,250
we are using a java application so here

00:14:50,540 --> 00:14:56,150
we are has I just added a stag report

00:14:54,250 --> 00:14:58,580
similarly I said it last time we are

00:14:56,150 --> 00:15:00,950
using 7 dependencies now here as you can

00:14:58,580 --> 00:15:04,160
see in the licenses that there is a

00:15:00,950 --> 00:15:05,900
license conflict now how do we show the

00:15:04,160 --> 00:15:07,940
license conflict so we actually show you

00:15:05,900 --> 00:15:09,890
the dependency name which the license is

00:15:07,940 --> 00:15:12,680
conflicting with so dependency is Java X

00:15:09,890 --> 00:15:14,960
dot servlet so late API and what is the

00:15:12,680 --> 00:15:16,700
license CDL plus gplv2 with class both

00:15:14,960 --> 00:15:19,190
exception there is the license this

00:15:16,700 --> 00:15:22,040
dependency is licensed under wind and we

00:15:19,190 --> 00:15:24,410
also show you the other one the ortho

00:15:22,040 --> 00:15:26,660
Java cyst Collin Java cyst which is

00:15:24,410 --> 00:15:28,250
licensed in Apache as we already I think

00:15:26,660 --> 00:15:31,250
to scale stopwatch and GPL which you

00:15:28,250 --> 00:15:32,810
don't usually go together so here is the

00:15:31,250 --> 00:15:37,160
license contract that you just saw

00:15:32,810 --> 00:15:38,780
now how you can actually you get at you

00:15:37,160 --> 00:15:40,370
let's see what is the current version

00:15:38,780 --> 00:15:42,020
you're using and all the statistics

00:15:40,370 --> 00:15:43,880
right over here so you might want to

00:15:42,020 --> 00:15:48,860
actually you know change your dependency

00:15:43,880 --> 00:15:50,900
to some other compatible license so here

00:15:48,860 --> 00:15:52,400
is the dependency detail part where we

00:15:50,900 --> 00:15:54,670
are seeing seven dependencies that we

00:15:52,400 --> 00:15:58,040
are using and as you can see there is a

00:15:54,670 --> 00:16:00,020
check mark and the every other field

00:15:58,040 --> 00:16:02,330
except the license type for solid API

00:16:00,020 --> 00:16:04,100
and also for the same goes for Java

00:16:02,330 --> 00:16:06,710
cysts because they are conflicting so

00:16:04,100 --> 00:16:09,470
you can actually know what what kind of

00:16:06,710 --> 00:16:12,940
things are are broken here right inside

00:16:09,470 --> 00:16:15,560
your editor so that's why

00:16:12,940 --> 00:16:17,960
then there's the insights part again now

00:16:15,560 --> 00:16:19,520
here we are using many Apache packages

00:16:17,960 --> 00:16:21,350
so as you can see the third

00:16:19,520 --> 00:16:23,180
recommendation Apache common slang 3

00:16:21,350 --> 00:16:25,250
which is used with most of the Apache

00:16:23,180 --> 00:16:27,320
packages out there if you're using some

00:16:25,250 --> 00:16:29,150
Java budget packages so where we are the

00:16:27,320 --> 00:16:30,530
confidence score is really high we were

00:16:29,150 --> 00:16:33,400
ready for personal confident that you

00:16:30,530 --> 00:16:36,560
might want to use this dependency so

00:16:33,400 --> 00:16:41,980
yeah that's that's I think pretty much

00:16:36,560 --> 00:16:41,980
it for the demo part so you can actually

00:16:43,060 --> 00:16:47,930
use it if you're using vs code right now

00:16:45,860 --> 00:16:49,340
and you can try it on your laptop's if

00:16:47,930 --> 00:16:52,820
you're using visual studio code and

00:16:49,340 --> 00:16:55,700
right now we support Java in node we are

00:16:52,820 --> 00:16:58,280
very releasing support for Python and go

00:16:55,700 --> 00:17:01,400
soon so we will see it in the future use

00:16:58,280 --> 00:17:06,710
cases part so coming back to the

00:17:01,400 --> 00:17:08,780
presentation yeah

00:17:06,710 --> 00:17:10,850
so what are the future use cases that we

00:17:08,780 --> 00:17:12,410
have so as I said Python we are ready to

00:17:10,850 --> 00:17:14,810
support ways it's already in beta it's

00:17:12,410 --> 00:17:17,630
going and an internal testing second is

00:17:14,810 --> 00:17:19,340
the Go Go Lang third is transitive

00:17:17,630 --> 00:17:21,140
dependencies which is already entered

00:17:19,340 --> 00:17:22,880
internal testing so what I will talk a

00:17:21,140 --> 00:17:25,850
little bit about transitive so what

00:17:22,880 --> 00:17:29,690
transitive dependencies do is how

00:17:25,850 --> 00:17:33,080
actually select for an example in this

00:17:29,690 --> 00:17:35,150
particular case of NPM we only had four

00:17:33,080 --> 00:17:36,740
dependencies now if you if you go to the

00:17:35,150 --> 00:17:39,260
node modules part of it once you're in

00:17:36,740 --> 00:17:41,360
to install you can see many dependencies

00:17:39,260 --> 00:17:44,540
like AG we a corn which you didn't

00:17:41,360 --> 00:17:45,890
mention here at all all right they don't

00:17:44,540 --> 00:17:46,730
appear here at all because those are

00:17:45,890 --> 00:17:49,250
like dependencies

00:17:46,730 --> 00:17:51,679
of dependencies like maybe on secular

00:17:49,250 --> 00:17:53,419
state or bootstrap needs a trade you

00:17:51,679 --> 00:17:55,450
don't know so we are actually going to

00:17:53,419 --> 00:17:57,950
show you a complete stack of what your

00:17:55,450 --> 00:18:00,049
dependencies are using as in the whole

00:17:57,950 --> 00:18:01,370
transitive report as well have we're

00:18:00,049 --> 00:18:03,919
going to show you the statistics the

00:18:01,370 --> 00:18:06,140
license conflicts the cv ease everything

00:18:03,919 --> 00:18:07,940
for all of your transitive right inside

00:18:06,140 --> 00:18:11,630
your IDE so you can actually make a

00:18:07,940 --> 00:18:13,580
choice as to how and how like sometimes

00:18:11,630 --> 00:18:15,260
what happens is there is not a problem

00:18:13,580 --> 00:18:16,429
in some detect dependency for example

00:18:15,260 --> 00:18:18,410
there might not be a problem in

00:18:16,429 --> 00:18:20,780
bootstrap but one of the dependencies of

00:18:18,410 --> 00:18:24,049
bootstrap has a problem so how would he

00:18:20,780 --> 00:18:26,090
know without actually you know looking

00:18:24,049 --> 00:18:30,110
at the report so that is kind of tricky

00:18:26,090 --> 00:18:31,370
as well so there is one part so we are

00:18:30,110 --> 00:18:33,080
looking at transitive it's already in

00:18:31,370 --> 00:18:35,299
beta and I think it will be released

00:18:33,080 --> 00:18:36,530
along with Python third is the container

00:18:35,299 --> 00:18:38,299
applicator fourth is the content

00:18:36,530 --> 00:18:41,360
applications scanning where we actually

00:18:38,299 --> 00:18:43,370
are planning to integrate and integrate

00:18:41,360 --> 00:18:45,200
this whole thing inside clear if you're

00:18:43,370 --> 00:18:48,080
aware tool by core OS

00:18:45,200 --> 00:18:51,140
which actually scans your container

00:18:48,080 --> 00:18:52,549
images for runtime vulnerabilities but

00:18:51,140 --> 00:18:54,470
we also are planning to do it for

00:18:52,549 --> 00:18:55,910
application vulnerabilities so that we

00:18:54,470 --> 00:18:57,980
have a component with picture from

00:18:55,910 --> 00:18:59,630
runtime to from your system to your

00:18:57,980 --> 00:19:01,880
application and you can provide your

00:18:59,630 --> 00:19:05,390
whole report as to how your application

00:19:01,880 --> 00:19:06,590
is vulnerable at what levels fifth is

00:19:05,390 --> 00:19:08,990
the probable security vulnerability

00:19:06,590 --> 00:19:11,929
based on AI so right now what happens is

00:19:08,990 --> 00:19:15,410
60% of read abilities are never reported

00:19:11,929 --> 00:19:17,630
to nvd so every DS think of Nvidia as a

00:19:15,410 --> 00:19:19,370
public database for vulnerabilities it's

00:19:17,630 --> 00:19:21,350
not easy to get through like it's not

00:19:19,370 --> 00:19:23,690
easy to just look at it and you know

00:19:21,350 --> 00:19:25,370
tell what package is vulnerable but it's

00:19:23,690 --> 00:19:28,600
it's public like anybody can see it

00:19:25,370 --> 00:19:31,370
anybody can use it for other purposes so

00:19:28,600 --> 00:19:33,740
that is like 60-person don't actually

00:19:31,370 --> 00:19:35,630
even end up in anybody so what we are

00:19:33,740 --> 00:19:37,850
going to do is we are going to look at

00:19:35,630 --> 00:19:39,440
get up we are going to look at github so

00:19:37,850 --> 00:19:41,960
particularly we are going to look at get

00:19:39,440 --> 00:19:44,600
up commits get fpr's get of issues and

00:19:41,960 --> 00:19:46,610
based on the text like if it looks like

00:19:44,600 --> 00:19:48,650
a CV has been fixed or any security

00:19:46,610 --> 00:19:52,210
vulnerability has been fixed based using

00:19:48,650 --> 00:19:55,159
machine learning then we are going to

00:19:52,210 --> 00:19:56,929
show that right inside your ID before it

00:19:55,159 --> 00:19:57,740
even gets out there like it's given if

00:19:56,929 --> 00:20:00,230
it gets reported

00:19:57,740 --> 00:20:01,759
great

00:20:00,230 --> 00:20:03,110
and the fourth is predicting service

00:20:01,759 --> 00:20:05,149
upgrades for recipients oh this is more

00:20:03,110 --> 00:20:06,980
to do with open shift so if you're using

00:20:05,149 --> 00:20:09,639
open shave 3 anyone omega 2 over here

00:20:06,980 --> 00:20:12,200
for now if your application is

00:20:09,639 --> 00:20:14,149
compatible with OC before before I've

00:20:12,200 --> 00:20:16,570
been deploying that we will tell you

00:20:14,149 --> 00:20:19,730
using machine learning that okay how

00:20:16,570 --> 00:20:21,590
similar applications were deployed and

00:20:19,730 --> 00:20:22,429
if they're compatible at all so you can

00:20:21,590 --> 00:20:24,889
actually make an informed decision

00:20:22,429 --> 00:20:28,090
beforehand if you want to migrate or sit

00:20:24,889 --> 00:20:30,559
before or you would remain toshiba 3 so

00:20:28,090 --> 00:20:32,450
that's about it you can find us on get

00:20:30,559 --> 00:20:34,610
up and you can chat with us on matter

00:20:32,450 --> 00:20:37,610
most matter most is just like slag but

00:20:34,610 --> 00:20:39,409
it's open source and it's all public so

00:20:37,610 --> 00:20:42,769
you can file also issue or you can rate

00:20:39,409 --> 00:20:44,360
us on Visual Studio marketplace and you

00:20:42,769 --> 00:20:45,799
can leave us some reviews on matter most

00:20:44,360 --> 00:20:47,899
and you can if you have any queries or

00:20:45,799 --> 00:20:50,110
any questions or any feedback for us

00:20:47,899 --> 00:20:57,830
then you can just reach out to us here

00:20:50,110 --> 00:21:20,480
thank you time for questions right yeah

00:20:57,830 --> 00:21:22,759
one or two minutes here okay so you're

00:21:20,480 --> 00:21:25,370
basically asking for any other platforms

00:21:22,759 --> 00:21:26,990
right like sublime or IntelliJ or very

00:21:25,370 --> 00:21:28,909
more anything yeah so we have plans to

00:21:26,990 --> 00:21:30,799
do that and we have received a number of

00:21:28,909 --> 00:21:32,450
feature requests from all of the

00:21:30,799 --> 00:21:34,759
developers that we need for IntelliJ and

00:21:32,450 --> 00:21:38,149
so we are prioritizing it accordingly I

00:21:34,759 --> 00:21:39,350
think once we go back and give you the

00:21:38,149 --> 00:21:40,879
feedback to the team because I think

00:21:39,350 --> 00:21:43,429
prioritize it accordingly let you know

00:21:40,879 --> 00:21:45,919
you can just follow us on github or on

00:21:43,429 --> 00:21:47,570
my demos to see where we are and you can

00:21:45,919 --> 00:21:49,580
actually file an issue for this

00:21:47,570 --> 00:21:51,470
marketing it as a feature request I will

00:21:49,580 --> 00:21:55,240
highly suggest you do that so that we

00:21:51,470 --> 00:21:57,440
can look at it yeah it doesn't get lost

00:21:55,240 --> 00:22:02,070
any other questions do we have

00:21:57,440 --> 00:22:04,080
oh you can

00:22:02,070 --> 00:22:05,850
find us at the Centaurs booth if you

00:22:04,080 --> 00:22:07,920
have any questions or you want us to

00:22:05,850 --> 00:22:09,420
demo something to you or you want to

00:22:07,920 --> 00:22:12,180
just try to the extension you can just

00:22:09,420 --> 00:22:15,260
drop by and we will see what we can do I

00:22:12,180 --> 00:22:15,260

YouTube URL: https://www.youtube.com/watch?v=Ow_MmBlYlaw


