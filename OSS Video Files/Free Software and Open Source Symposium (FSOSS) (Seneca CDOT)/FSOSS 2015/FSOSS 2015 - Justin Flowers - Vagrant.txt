Title: FSOSS 2015 - Justin Flowers - Vagrant
Publication date: 2015-11-12
Playlist: FSOSS 2015
Description: 
	FSOSS 2015 - Justin Flowers - Vagrant
Captions: 
	00:00:05,089 --> 00:00:12,480
can be a flow he's going to be SD

00:00:09,420 --> 00:00:17,130
program but not go to the pictures of

00:00:12,480 --> 00:00:18,779
the move reading books about speaking

00:00:17,130 --> 00:00:22,650
born and raised in front of our material

00:00:18,779 --> 00:00:33,989
he's going to describe for us an

00:00:22,650 --> 00:00:35,940
environment hi everybody I've been

00:00:33,989 --> 00:00:44,280
working at CDOT for about six months

00:00:35,940 --> 00:00:45,930
using vagrant yeah what uh uh so yeah

00:00:44,280 --> 00:00:49,559
I'd like to just figure out who here is

00:00:45,930 --> 00:00:55,980
heard about vagrant and who here uses

00:00:49,559 --> 00:00:57,480
vagrant a lot okay good uh yeah so

00:00:55,980 --> 00:00:58,920
before we begin she's going to talk a

00:00:57,480 --> 00:01:01,020
little bit about our agenda for today

00:00:58,920 --> 00:01:03,000
I'm going to start by describing what

00:01:01,020 --> 00:01:05,700
vagrant is and how it does what it does

00:01:03,000 --> 00:01:07,140
I'll then be moving on to how to use

00:01:05,700 --> 00:01:09,780
vagrant and we're talking about some

00:01:07,140 --> 00:01:12,030
simple functionality like importing

00:01:09,780 --> 00:01:14,640
boxes using boxes and making your own

00:01:12,030 --> 00:01:16,740
base box and then I'll be describing why

00:01:14,640 --> 00:01:20,900
vagrant is valuable so talking about why

00:01:16,740 --> 00:01:26,610
it's powerful and why it should be used

00:01:20,900 --> 00:01:29,100
so what is vagrant from Wikipedia the

00:01:26,610 --> 00:01:31,290
definition is a software that creates

00:01:29,100 --> 00:01:33,299
and configures virtual development

00:01:31,290 --> 00:01:34,350
environments and it can be seen as a

00:01:33,299 --> 00:01:38,400
higher level wrapper around

00:01:34,350 --> 00:01:40,619
virtualization software in English

00:01:38,400 --> 00:01:43,770
virtual development environments really

00:01:40,619 --> 00:01:46,140
just means virtual machines higher level

00:01:43,770 --> 00:01:48,600
rapper really just means software that

00:01:46,140 --> 00:01:51,540
knows how to use and virtualization

00:01:48,600 --> 00:01:54,630
software would be basically vm providers

00:01:51,540 --> 00:01:57,950
so VirtualBox vmware those sorts of

00:01:54,630 --> 00:02:00,479
things so we can translate this to

00:01:57,950 --> 00:02:02,700
vagrant is a software that creates and

00:02:00,479 --> 00:02:04,200
configures virtual machines and it can

00:02:02,700 --> 00:02:09,330
be seen as a software that knows how to

00:02:04,200 --> 00:02:13,020
use virtualbox VMware and etc so what is

00:02:09,330 --> 00:02:13,950
vagrant really it is a wrapper for vm

00:02:13,020 --> 00:02:17,069
providers

00:02:13,950 --> 00:02:19,709
created by hasha Corp it provisions and

00:02:17,069 --> 00:02:21,840
configures and imports and exports VMs

00:02:19,709 --> 00:02:26,700
and it does this with the same process

00:02:21,840 --> 00:02:28,819
across multiple operating systems so

00:02:26,700 --> 00:02:31,440
what is provisioning and configuring

00:02:28,819 --> 00:02:33,810
essentially configuring can be seen as

00:02:31,440 --> 00:02:35,370
setting up the VMS hardware so this

00:02:33,810 --> 00:02:38,970
would be anything from allocating memory

00:02:35,370 --> 00:02:43,200
to allocating storage to allocating CPU

00:02:38,970 --> 00:02:45,750
cores okay and setting up any sort of

00:02:43,200 --> 00:02:48,120
the network and provisioning can be seen

00:02:45,750 --> 00:02:49,920
as setting up vm software this would

00:02:48,120 --> 00:02:52,140
include installing any programs or

00:02:49,920 --> 00:02:54,239
services you need working with any

00:02:52,140 --> 00:02:57,840
configuration files and running any

00:02:54,239 --> 00:03:04,319
scripts necessary and it deals with

00:02:57,840 --> 00:03:06,930
importing an export import in a premade

00:03:04,319 --> 00:03:09,150
machine and exporting would be making a

00:03:06,930 --> 00:03:11,880
premade machine because we're working

00:03:09,150 --> 00:03:13,980
with virtual machines here it can be any

00:03:11,880 --> 00:03:18,180
operating system with any software that

00:03:13,980 --> 00:03:21,329
supported moment so what does all this

00:03:18,180 --> 00:03:24,750
mean this means that vagrant knows how

00:03:21,329 --> 00:03:27,600
to use vm providers for you to allocate

00:03:24,750 --> 00:03:31,230
memory to configure networks and to run

00:03:27,600 --> 00:03:33,000
your own provisioning scripts so

00:03:31,230 --> 00:03:36,209
essentially vagrant knows how to take

00:03:33,000 --> 00:03:38,989
your vm with installed software and give

00:03:36,209 --> 00:03:42,739
it to someone else in the exact state

00:03:38,989 --> 00:03:46,380
all you need to do is tell it what to do

00:03:42,739 --> 00:03:49,920
so here's an example problem jack is a

00:03:46,380 --> 00:03:51,930
web developer up the hill inc and he

00:03:49,920 --> 00:03:54,600
needs to get his working lamp stock on

00:03:51,930 --> 00:03:58,260
to jills mashina lamp is linux running

00:03:54,600 --> 00:04:01,139
apache my sequel PHP but jack is a bad

00:03:58,260 --> 00:04:04,620
employee jack doesn't remember what

00:04:01,139 --> 00:04:07,260
apache modules he's using his my sequel

00:04:04,620 --> 00:04:08,970
database setup or where any of his

00:04:07,260 --> 00:04:11,669
dependent services or installed or

00:04:08,970 --> 00:04:14,069
configured so what does he do but use

00:04:11,669 --> 00:04:17,370
vagrant he decides to install a vagrant

00:04:14,069 --> 00:04:18,959
in VirtualBox on both machines and he

00:04:17,370 --> 00:04:21,750
tells vagrant how to configure and

00:04:18,959 --> 00:04:23,700
provision his environment it then

00:04:21,750 --> 00:04:26,940
exports his machine and gives it to Jill

00:04:23,700 --> 00:04:27,660
who imports his machine using all the

00:04:26,940 --> 00:04:30,450
definitions

00:04:27,660 --> 00:04:32,010
jag game the whole process takes an hour

00:04:30,450 --> 00:04:34,320
when it would normally take weeks of

00:04:32,010 --> 00:04:35,730
environment setup and Jack is considered

00:04:34,320 --> 00:04:39,440
a huge success and given a great

00:04:35,730 --> 00:04:39,440
promotion add up the hill incorporated

00:04:43,070 --> 00:04:47,850
so how does vagrant really work well it

00:04:46,290 --> 00:04:50,760
uses two files to provide this

00:04:47,850 --> 00:04:53,490
functionality he uses a single format

00:04:50,760 --> 00:04:56,220
box file and a vagrant file which is

00:04:53,490 --> 00:04:58,860
essentially for configuration the box

00:04:56,220 --> 00:05:00,000
file is a vm container it's the results

00:04:58,860 --> 00:05:03,990
of an export and what you'll be

00:05:00,000 --> 00:05:06,330
importing and if you want to control

00:05:03,990 --> 00:05:08,430
vagrant you'll be using a command-line

00:05:06,330 --> 00:05:10,500
interface and you'll be using this to do

00:05:08,430 --> 00:05:13,380
everything from import and export boxes

00:05:10,500 --> 00:05:16,680
to turn on and off boxes to connect two

00:05:13,380 --> 00:05:18,510
boxes with ssh all the user needs to

00:05:16,680 --> 00:05:20,550
define is the vagrant file and ship it

00:05:18,510 --> 00:05:25,230
with the box but we'll be going into the

00:05:20,550 --> 00:05:30,030
details about this a little later so how

00:05:25,230 --> 00:05:31,320
to use vagrant we're going to start in

00:05:30,030 --> 00:05:33,630
this section by discussing some

00:05:31,320 --> 00:05:36,390
essential commands then we'll start with

00:05:33,630 --> 00:05:38,940
the impressive easy side of vagrant so

00:05:36,390 --> 00:05:40,290
importing a box and using boxes and then

00:05:38,940 --> 00:05:42,480
we'll move towards the more complicated

00:05:40,290 --> 00:05:47,970
part which would be making your own base

00:05:42,480 --> 00:05:50,340
boxes and a quick note about vagrant it

00:05:47,970 --> 00:05:53,790
works by creating a hidden dot vagrant

00:05:50,340 --> 00:05:55,980
folder this dot vagrant folder stores

00:05:53,790 --> 00:05:58,230
all the information that will need to

00:05:55,980 --> 00:06:00,570
connect your machines and configure them

00:05:58,230 --> 00:06:03,000
so it's very important for vagrant to

00:06:00,570 --> 00:06:05,700
work and it's located wherever you

00:06:03,000 --> 00:06:07,919
import a box so for example if I need a

00:06:05,700 --> 00:06:10,830
centos 6 minimal box I'll make a

00:06:07,919 --> 00:06:13,710
directory called centos minimal go into

00:06:10,830 --> 00:06:17,460
it import my box and then perform all my

00:06:13,710 --> 00:06:18,840
commands from that folder so the

00:06:17,460 --> 00:06:23,419
essential commands you'll need are a

00:06:18,840 --> 00:06:26,400
vagrant in it vagrant box in vagrant up

00:06:23,419 --> 00:06:29,460
the whole job of vagrant in it is to

00:06:26,400 --> 00:06:30,990
create vagrant files if you call vagrant

00:06:29,460 --> 00:06:32,730
in it and then boxing it will just

00:06:30,990 --> 00:06:36,210
create an empty vagrant file that

00:06:32,730 --> 00:06:38,520
defines the box name in that file and if

00:06:36,210 --> 00:06:40,849
you do vagrant and it box URL you can

00:06:38,520 --> 00:06:43,129
load the vagrant file for a particular

00:06:40,849 --> 00:06:46,429
I'll is hosted box which I will be

00:06:43,129 --> 00:06:48,020
describing in a couple of minutes the

00:06:46,429 --> 00:06:49,879
vagrant box command is incredibly

00:06:48,020 --> 00:06:53,319
important it allows you to manage your

00:06:49,879 --> 00:06:58,669
boxes so this command is used to add

00:06:53,319 --> 00:07:00,439
remove and list your boxes and vagrant

00:06:58,669 --> 00:07:04,929
up is the most important vagrant command

00:07:00,439 --> 00:07:07,789
it creates and configures machines so

00:07:04,929 --> 00:07:10,369
basically it tries to create the machine

00:07:07,789 --> 00:07:12,409
that's not already been created then it

00:07:10,369 --> 00:07:15,409
configures port forwarding for the ssh

00:07:12,409 --> 00:07:17,659
it tries turning on the machine try is

00:07:15,409 --> 00:07:23,029
connecting to the machine and then once

00:07:17,659 --> 00:07:24,019
it's connected begins provision so first

00:07:23,029 --> 00:07:27,619
thing we're gonna be talking about is

00:07:24,019 --> 00:07:30,889
importing a vm from atlas so Atlas is a

00:07:27,619 --> 00:07:32,779
hash accor posted vagrant box repository

00:07:30,889 --> 00:07:36,199
so they have a bunch of different

00:07:32,779 --> 00:07:38,119
vagrant boxes with a bunch of different

00:07:36,199 --> 00:07:40,550
operating systems and software installed

00:07:38,119 --> 00:07:43,519
on them it's easy to search through and

00:07:40,550 --> 00:07:45,939
even easier to set up boxes locally all

00:07:43,519 --> 00:07:49,459
you need to do is use a two-step process

00:07:45,939 --> 00:07:53,389
vagrant in it and vagrant out so let's

00:07:49,459 --> 00:07:56,930
go on the internet discover some vagrant

00:07:53,389 --> 00:08:02,539
boxes does uh does anyone have a

00:07:56,930 --> 00:08:08,419
favorite operating system oh man if they

00:08:02,539 --> 00:08:10,869
don't have slackware okay we got some

00:08:08,419 --> 00:08:10,869
slack where

00:08:11,870 --> 00:08:16,639
okay just copy and paste this command

00:08:19,669 --> 00:08:30,620
all right bye okay let's make their

00:08:25,189 --> 00:08:30,620
slackware spell it right

00:08:37,270 --> 00:08:51,720
wait a minute Chris Marquis otta what's

00:08:41,470 --> 00:08:51,720
happening I was I was in a screen there

00:08:52,230 --> 00:09:01,210
yeah okay so now I've got the vagrant

00:08:56,470 --> 00:09:03,370
file open it up for you guys the only

00:09:01,210 --> 00:09:11,050
thing that vagrant in it has done is set

00:09:03,370 --> 00:09:14,080
this line right here config BMX now by

00:09:11,050 --> 00:09:16,720
calling vagrant up it will start

00:09:14,080 --> 00:09:18,400
downloading the machine and install it

00:09:16,720 --> 00:09:19,810
but that's going to take a while over

00:09:18,400 --> 00:09:23,470
Wi-Fi so I'm just going to move on while

00:09:19,810 --> 00:09:27,370
it finishes that the other way you can

00:09:23,470 --> 00:09:29,920
import a vm is from a box so this would

00:09:27,370 --> 00:09:31,600
be essentially taking something your

00:09:29,920 --> 00:09:34,720
friend gave you and getting working on

00:09:31,600 --> 00:09:36,460
yours so in order to do this you must

00:09:34,720 --> 00:09:39,790
have a dot box file with its

00:09:36,460 --> 00:09:41,500
corresponding vagrant file the box file

00:09:39,790 --> 00:09:43,800
is called a base box because it's really

00:09:41,500 --> 00:09:46,180
will be starting from to install and

00:09:43,800 --> 00:09:49,180
again this is a really simple two-step

00:09:46,180 --> 00:09:55,120
process vagrant box add and then vagrant

00:09:49,180 --> 00:10:01,270
up and it couldn't find the host there

00:09:55,120 --> 00:10:04,270
but just trust me that does things so

00:10:01,270 --> 00:10:07,090
I've got this centos minimal box with

00:10:04,270 --> 00:10:08,950
the vagrant file in order to find out

00:10:07,090 --> 00:10:11,560
the name of the box I can open up the

00:10:08,950 --> 00:10:15,210
vagrant file and this line right here

00:10:11,560 --> 00:10:15,210
tells me the name I'm going to be adding

00:10:16,740 --> 00:10:22,840
excuse me so I can do your vagrant Fox

00:10:19,360 --> 00:10:25,750
and centos minimal so that's the name

00:10:22,840 --> 00:10:27,930
and then I give it the file i'll be

00:10:25,750 --> 00:10:27,930
using

00:10:29,740 --> 00:10:40,180
I don't know why it says downloading

00:10:37,660 --> 00:10:42,820
it's it's local but there we go we've

00:10:40,180 --> 00:10:48,850
added the box now it's as simple as

00:10:42,820 --> 00:10:51,160
calling vagrant up and it will begin

00:10:48,850 --> 00:10:52,810
setting everything up so as you can see

00:10:51,160 --> 00:10:55,750
here it configured port forwarding at

00:10:52,810 --> 00:10:57,370
the beginning and then it started

00:10:55,750 --> 00:10:58,870
turning on the machine right now it's

00:10:57,370 --> 00:11:02,310
waiting for the machine to turn on so

00:10:58,870 --> 00:11:02,310
that it can connect via SSH

00:11:13,400 --> 00:11:17,570
it's already it's doing some

00:11:15,590 --> 00:11:20,540
provisioning so mounting some shared

00:11:17,570 --> 00:11:27,980
folders and the box seems to be working

00:11:20,540 --> 00:11:29,750
I prove that to you open up VirtualBox

00:11:27,980 --> 00:11:32,360
you can see there's a machine called

00:11:29,750 --> 00:11:33,680
centos minimal that's running and no

00:11:32,360 --> 00:11:38,480
that wasn't there before if that's what

00:11:33,680 --> 00:11:40,310
you're wondering know that I didn't

00:11:38,480 --> 00:11:43,610
finish installing that it couldn't find

00:11:40,310 --> 00:11:48,410
the host sorry yeah that would have been

00:11:43,610 --> 00:11:50,330
a magic trick okay so we've got a box

00:11:48,410 --> 00:11:52,970
we've added it with two really really

00:11:50,330 --> 00:11:55,370
simple steps so now you want to use the

00:11:52,970 --> 00:11:58,250
box and this is just as easy as it was

00:11:55,370 --> 00:12:00,920
to bring in the box you can start boxes

00:11:58,250 --> 00:12:03,890
with vagrant up you can stop them with

00:12:00,920 --> 00:12:07,100
vagrant halts and you can basically do a

00:12:03,890 --> 00:12:08,690
reset with vagrant reload connecting to

00:12:07,100 --> 00:12:11,690
them is incredibly simple because you

00:12:08,690 --> 00:12:13,790
can just use vagran SSH so now I've got

00:12:11,690 --> 00:12:18,890
the Box running and then the box is

00:12:13,790 --> 00:12:21,320
folder you vaguer an SSH and I've

00:12:18,890 --> 00:12:26,930
connected I'm now running a centos 6

00:12:21,320 --> 00:12:30,920
points something if I cut out centos

00:12:26,930 --> 00:12:33,080
release see it centos really 6.5 I just

00:12:30,920 --> 00:12:36,160
do your name minus R I seem to be

00:12:33,080 --> 00:12:36,160
running a colonel yes

00:12:43,720 --> 00:12:50,750
yeah and it did everything regarding the

00:12:46,790 --> 00:12:52,910
provisioning for me configuring so

00:12:50,750 --> 00:12:55,160
working with vagrant files if you want

00:12:52,910 --> 00:12:56,060
to do any sort of changes to the machine

00:12:55,160 --> 00:12:58,670
when it comes to the network

00:12:56,060 --> 00:13:01,520
configuration you will need to go in

00:12:58,670 --> 00:13:03,020
here and do some changes so the vagrant

00:13:01,520 --> 00:13:05,750
file is traditionally written in Ruby

00:13:03,020 --> 00:13:07,970
and it can like I said it can be used to

00:13:05,750 --> 00:13:12,080
control port forwarding internal network

00:13:07,970 --> 00:13:16,310
set up vm memory storage CPU allocation

00:13:12,080 --> 00:13:18,410
and provisioning scripts so for those of

00:13:16,310 --> 00:13:20,720
you who know rubios will be pretty easy

00:13:18,410 --> 00:13:23,150
to read essentially we've got a loop

00:13:20,720 --> 00:13:26,390
declaration of the top with a config

00:13:23,150 --> 00:13:29,300
variable and confident way inside the

00:13:26,390 --> 00:13:31,460
inside the loop you can ignore the loop

00:13:29,300 --> 00:13:35,090
for the main part though essentially

00:13:31,460 --> 00:13:37,610
you're accessing properties of conflict

00:13:35,090 --> 00:13:42,770
to change the most important ones would

00:13:37,610 --> 00:13:45,980
be vm box vm network vm provider and vm

00:13:42,770 --> 00:13:48,110
not provision so box simply sets the box

00:13:45,980 --> 00:13:50,090
name so this is how you'll be talking

00:13:48,110 --> 00:13:52,510
with the talking with vagrant about it

00:13:50,090 --> 00:13:55,490
this will be its label in vagrant

00:13:52,510 --> 00:13:57,350
network is used for any sort of network

00:13:55,490 --> 00:14:00,640
configuration so here I've got a

00:13:57,350 --> 00:14:06,230
forwarded port from 22 on the guest

00:14:00,640 --> 00:14:08,810
222222 on the host and provider gives

00:14:06,230 --> 00:14:10,670
you access to the provider so you can

00:14:08,810 --> 00:14:12,380
control stuff there in this case this is

00:14:10,670 --> 00:14:16,790
where you would actually specify the

00:14:12,380 --> 00:14:22,630
name inside VirtualBox the like memory

00:14:16,790 --> 00:14:22,630
allocation and stuff like that and yeah

00:14:22,690 --> 00:14:27,980
so this is as examples of provisioning

00:14:25,730 --> 00:14:29,180
with a vagrant pal there is a three

00:14:27,980 --> 00:14:30,560
different well there's lots of different

00:14:29,180 --> 00:14:33,290
ways you can provision but the three

00:14:30,560 --> 00:14:36,910
most important would be file inline

00:14:33,290 --> 00:14:39,380
scripts and external escapes scripts so

00:14:36,910 --> 00:14:41,840
file allows you to simply copy a file

00:14:39,380 --> 00:14:44,840
from one location to another so in this

00:14:41,840 --> 00:14:50,030
case I'd be copying my ssh config on the

00:14:44,840 --> 00:14:52,220
host to the SSH config on the guest for

00:14:50,030 --> 00:14:53,559
the next example I've got provision

00:14:52,220 --> 00:14:56,329
shell in line

00:14:53,559 --> 00:14:57,709
so here the point of the in line is

00:14:56,329 --> 00:15:00,410
simply that you can define the script

00:14:57,709 --> 00:15:02,449
inside the ruby file and then call it

00:15:00,410 --> 00:15:05,839
inside there so in this case it would

00:15:02,449 --> 00:15:07,759
just echo hello world and external

00:15:05,839 --> 00:15:09,799
allows you to make a scripts on the

00:15:07,759 --> 00:15:12,889
outside and point your vagrant box

00:15:09,799 --> 00:15:19,910
towards it so in this case after it's

00:15:12,889 --> 00:15:22,329
connected it will run script SH now for

00:15:19,910 --> 00:15:24,980
the fun part making your own bass box

00:15:22,329 --> 00:15:26,869
making a bass box is essentially taking

00:15:24,980 --> 00:15:30,769
a regular vm that's not associated with

00:15:26,869 --> 00:15:33,439
vagrant and exporting with vigor so too

00:15:30,769 --> 00:15:36,049
there's three steps for this left I set

00:15:33,439 --> 00:15:41,119
up your vm configure your vagrant file

00:15:36,049 --> 00:15:44,749
and then create the dot box while so

00:15:41,119 --> 00:15:46,459
just set up the vm you'll have to do a

00:15:44,749 --> 00:15:49,249
few things left to create the vagrant

00:15:46,459 --> 00:15:51,739
user give the vagrant user password list

00:15:49,249 --> 00:15:54,579
suit up privileges and optionally set

00:15:51,739 --> 00:15:56,989
the vagrant users password it's

00:15:54,579 --> 00:15:58,910
convention is to make the password for a

00:15:56,989 --> 00:16:01,639
vagrant user vagrant you're going to be

00:15:58,910 --> 00:16:02,779
passing it but you don't really need to

00:16:01,639 --> 00:16:06,290
do that because we control it through

00:16:02,779 --> 00:16:10,459
ssh keys and you will need to copy over

00:16:06,290 --> 00:16:14,959
the ssh public key SSH insecure private

00:16:10,459 --> 00:16:16,669
public key pair that vagrant uses so if

00:16:14,959 --> 00:16:23,419
we want to do that let's let's make a

00:16:16,669 --> 00:16:26,629
machine so for this one we've already

00:16:23,419 --> 00:16:29,509
got the vagrant user setup but we will

00:16:26,629 --> 00:16:33,139
need to actually give the ssh key pair

00:16:29,509 --> 00:16:43,999
again because vagrant essentially

00:16:33,139 --> 00:16:46,480
changes oh yeah oh yeah sorry um believe

00:16:43,999 --> 00:16:46,480
I am

00:16:47,930 --> 00:16:58,050
yeah so I ssh into the vm and i'm in the

00:16:54,779 --> 00:17:00,420
vm and i need to change the

00:16:58,050 --> 00:17:03,600
public-private key pair and the reason

00:17:00,420 --> 00:17:05,819
for that is and i did it again the

00:17:03,600 --> 00:17:08,400
reason for that is when vagrant detects

00:17:05,819 --> 00:17:11,850
the insecure key pair they come up with

00:17:08,400 --> 00:17:13,620
a new one and put that onto the box this

00:17:11,850 --> 00:17:24,449
is pretty simple you just go to your

00:17:13,620 --> 00:17:27,199
good old friend of Google until I've

00:17:24,449 --> 00:17:27,199
been here quite a few times

00:17:33,809 --> 00:17:37,940
and really just copy and paste it in

00:17:35,730 --> 00:17:37,940
here

00:17:42,970 --> 00:17:49,409
so now we've done that we should install

00:17:45,700 --> 00:17:49,409
some software to make this box different

00:17:50,220 --> 00:17:54,900
so we'll install Apache

00:18:16,840 --> 00:18:22,660
okay httpd was already installed uh yeah

00:18:21,140 --> 00:18:27,050
I don't know that happened that's cool

00:18:22,660 --> 00:18:28,220
yeah we have httpd now actually it's

00:18:27,050 --> 00:18:34,430
let's install something even more

00:18:28,220 --> 00:18:40,970
important then yeah yeah what's it stand

00:18:34,430 --> 00:18:46,250
for Chris Marquis Ella VI and I think

00:18:40,970 --> 00:18:51,260
everyone here knows it okay so we have

00:18:46,250 --> 00:18:57,710
them now I can go them that I make files

00:18:51,260 --> 00:18:59,180
cool alright so we have done two steps

00:18:57,710 --> 00:19:01,640
there we've installed the software we

00:18:59,180 --> 00:19:05,720
need and we have set up the insecure key

00:19:01,640 --> 00:19:07,190
pair now would be the time to configure

00:19:05,720 --> 00:19:10,550
the vagrant file if you're going to be

00:19:07,190 --> 00:19:12,200
doing anything crazy things you would

00:19:10,550 --> 00:19:14,990
have to consider setting up the vagrant

00:19:12,200 --> 00:19:17,390
file would be how you need the box and

00:19:14,990 --> 00:19:20,690
networked if you need any sort of port

00:19:17,390 --> 00:19:22,910
forwarding to access your services or if

00:19:20,690 --> 00:19:24,320
you need any fancy provisioning scripts

00:19:22,910 --> 00:19:29,480
to get this box to work the way it's

00:19:24,320 --> 00:19:36,110
meant to so in my case I'm just going to

00:19:29,480 --> 00:19:42,280
copy the vagrant file from here so let's

00:19:36,110 --> 00:19:42,280
call this new box Santo sweater

00:19:44,660 --> 00:19:53,400
copy the other vagrant file here and now

00:19:51,660 --> 00:20:00,810
that we have a vagrant file here let's

00:19:53,400 --> 00:20:03,660
change the name on the inside this tells

00:20:00,810 --> 00:20:06,570
VirtualBox or sorry this tells a vagrant

00:20:03,660 --> 00:20:15,960
what to label at us and this tells

00:20:06,570 --> 00:20:18,630
VirtualBox what to call it inside yeah

00:20:15,960 --> 00:20:21,330
the last step in this process is to

00:20:18,630 --> 00:20:22,950
actually create the box so to do that

00:20:21,330 --> 00:20:25,440
you need to find the vm name and the

00:20:22,950 --> 00:20:27,930
provider you have to have a divine a

00:20:25,440 --> 00:20:29,010
defined name in the vagrant file you

00:20:27,930 --> 00:20:30,270
should really double check everything

00:20:29,010 --> 00:20:32,760
else just to make sure that everything

00:20:30,270 --> 00:20:35,850
is working and then it's as simple as

00:20:32,760 --> 00:20:38,490
running a vagrant package command so

00:20:35,850 --> 00:20:40,290
I've open up VirtualBox this is the box

00:20:38,490 --> 00:20:43,860
we want to use we know its name is

00:20:40,290 --> 00:20:45,660
vagrant or Santos minimal if you've got

00:20:43,860 --> 00:20:47,640
a really complicated name you can use

00:20:45,660 --> 00:20:49,590
settings and copy and paste this text

00:20:47,640 --> 00:20:51,360
box but since it's really simple for us

00:20:49,590 --> 00:20:59,280
we can just do it off the top of our

00:20:51,360 --> 00:21:01,380
heads so I do vagrant package actually

00:20:59,280 --> 00:21:03,590
before I do that I should stop the other

00:21:01,380 --> 00:21:03,590
machine

00:21:11,789 --> 00:21:19,970
it's going to try a graceful and should

00:21:14,190 --> 00:21:19,970
fail or not

00:21:25,810 --> 00:21:36,100
so when a package I'm going to give it

00:21:28,810 --> 00:21:39,970
the name inside virtualbox eat it to

00:21:36,100 --> 00:21:42,010
your base and then I'm going to give it

00:21:39,970 --> 00:21:48,010
the name I want it to output to so I'm

00:21:42,010 --> 00:21:52,510
going to say centos letter dot box so

00:21:48,010 --> 00:21:53,740
now this is working exporting that's

00:21:52,510 --> 00:21:57,430
going to take a minute so I'm just going

00:21:53,740 --> 00:22:01,750
to continue and then come back so let's

00:21:57,430 --> 00:22:04,630
talk about why vagrant is valuable it's

00:22:01,750 --> 00:22:07,990
powerful complicated vm setups can be

00:22:04,630 --> 00:22:11,040
defined simply and complicated VMS VN

00:22:07,990 --> 00:22:14,740
setups can be more importantly automated

00:22:11,040 --> 00:22:16,840
it's really fast to set up environments

00:22:14,740 --> 00:22:19,540
to work with in vague Renee to important

00:22:16,840 --> 00:22:22,570
export environments with vagrant and to

00:22:19,540 --> 00:22:25,950
control environments and it works

00:22:22,570 --> 00:22:25,950
identically across platforms

00:22:26,220 --> 00:22:31,060
additionally much like docker it

00:22:28,540 --> 00:22:33,010
eliminates the works for me problem if

00:22:31,060 --> 00:22:35,170
you have this configuration and it's

00:22:33,010 --> 00:22:38,350
working on your machine it must work on

00:22:35,170 --> 00:22:41,140
other people's machines it also provides

00:22:38,350 --> 00:22:42,760
source control of the vm set up so the

00:22:41,140 --> 00:22:45,670
vagrant file can be added to project

00:22:42,760 --> 00:22:48,400
repos and tracks and as a developer

00:22:45,670 --> 00:22:54,010
changes the configuration they can keep

00:22:48,400 --> 00:22:55,450
up the date additionally branches of

00:22:54,010 --> 00:22:58,440
machines and vagrant files can be

00:22:55,450 --> 00:23:00,790
tracked this includes provisioning and

00:22:58,440 --> 00:23:02,950
finally it ties together other

00:23:00,790 --> 00:23:04,840
automation technologies so you can

00:23:02,950 --> 00:23:06,460
bundle chef and puppet installations in

00:23:04,840 --> 00:23:12,130
a box and have them be called at the

00:23:06,460 --> 00:23:14,680
beginning by Baker so why should it be

00:23:12,130 --> 00:23:17,230
use from a system administrators

00:23:14,680 --> 00:23:19,630
perspective it's pretty apparent and

00:23:17,230 --> 00:23:22,720
make system setups which work across all

00:23:19,630 --> 00:23:24,430
platforms you can quickly get access to

00:23:22,720 --> 00:23:27,850
pre-built vanilla machines from Atlas

00:23:24,430 --> 00:23:31,660
you have automated control over the

00:23:27,850 --> 00:23:33,640
configuration of the machine so

00:23:31,660 --> 00:23:36,550
including network control and resource

00:23:33,640 --> 00:23:37,890
control and you have automated control

00:23:36,550 --> 00:23:39,520
over provisioning of the machine and

00:23:37,890 --> 00:23:44,380
it's a fully to

00:23:39,520 --> 00:23:47,800
poseable environment for the developer

00:23:44,380 --> 00:23:50,320
that gives a simple modular way to

00:23:47,800 --> 00:23:52,120
control dev environments it gives you

00:23:50,320 --> 00:23:53,800
easy cross-platform environment

00:23:52,120 --> 00:23:55,060
modifications so not all of your

00:23:53,800 --> 00:23:58,000
programmers have to work in the same

00:23:55,060 --> 00:24:00,880
environment all changes are tracked by

00:23:58,000 --> 00:24:03,070
version control and it's a quick process

00:24:00,880 --> 00:24:04,660
to get the environment up-to-date all

00:24:03,070 --> 00:24:08,530
you have to do is a git pull and a

00:24:04,660 --> 00:24:10,210
vagrant up and most importantly it

00:24:08,530 --> 00:24:14,350
allows a programmer to focus on

00:24:10,210 --> 00:24:17,350
programming and why it should be used

00:24:14,350 --> 00:24:18,970
for designers for designers it allows

00:24:17,350 --> 00:24:21,940
them to reform powerful environment

00:24:18,970 --> 00:24:23,800
setup with two commands it's not a huge

00:24:21,940 --> 00:24:26,800
amount of options so the designer it's

00:24:23,800 --> 00:24:29,490
not as easy to make mistakes and it's

00:24:26,800 --> 00:24:33,330
easy to pick up with no learning curve

00:24:29,490 --> 00:24:35,410
there's also a series of time savings in

00:24:33,330 --> 00:24:38,020
getting complicated environments

00:24:35,410 --> 00:24:40,000
together and fixing environments which

00:24:38,020 --> 00:24:42,400
are out of date and just like

00:24:40,000 --> 00:24:47,080
programmers it again allows designers to

00:24:42,400 --> 00:24:51,750
focus on designing go back to this

00:24:47,080 --> 00:24:51,750
terminal okay we've got the exported box

00:24:52,290 --> 00:25:07,780
yeah it is half a gig okay so does

00:25:06,430 --> 00:25:16,240
anyone remember the process for adding

00:25:07,780 --> 00:25:18,370
this because I forgot good so you'll do

00:25:16,240 --> 00:25:20,320
a vagrant box odd you'll give the name

00:25:18,370 --> 00:25:23,250
that you define in the vagrant file in

00:25:20,320 --> 00:25:25,900
this case I know it's centos better and

00:25:23,250 --> 00:25:32,520
then I know the name of the box is

00:25:25,900 --> 00:25:32,520
centos better box let that ad

00:25:40,890 --> 00:25:44,370
give a hub

00:25:58,950 --> 00:26:13,390
I'm sorry what has to be installed yeah

00:26:11,410 --> 00:26:16,930
so in this case I am taking the bass box

00:26:13,390 --> 00:26:19,210
i just made where i saw the bin and i am

00:26:16,930 --> 00:26:20,830
I just exported it and now I'm bringing

00:26:19,210 --> 00:26:25,330
it in to show you that when we connect

00:26:20,830 --> 00:26:38,770
to it it will happen so I thought that

00:26:25,330 --> 00:26:48,910
the box so i took santos minimal oh wait

00:26:38,770 --> 00:26:51,190
where do you see oh yes i'm importing

00:26:48,910 --> 00:26:53,980
centos better yep so I took centos

00:26:51,190 --> 00:26:55,840
minimal I set it up the way that I want

00:26:53,980 --> 00:26:58,630
it to and then I took an image of it and

00:26:55,840 --> 00:27:03,430
put it into Santos fire so now i'm

00:26:58,630 --> 00:27:07,240
importing centos better it's all real up

00:27:03,430 --> 00:27:10,060
and running I can ssh in and before I

00:27:07,240 --> 00:27:12,010
kept getting hit by doing bill and I

00:27:10,060 --> 00:27:13,990
mean I communicated saravana mental file

00:27:12,010 --> 00:27:17,260
and it say hey you don't have been you

00:27:13,990 --> 00:27:21,690
can't do that but now I can do them

00:27:17,260 --> 00:27:21,690
hello and it's actually there

00:27:23,010 --> 00:27:29,850
yeah the question in the first place is

00:27:28,440 --> 00:27:34,710
why don't they have been with centos

00:27:29,850 --> 00:27:38,640
jesus anyways sorry so what's the

00:27:34,710 --> 00:27:41,610
conclusion from all this vagrant is a

00:27:38,640 --> 00:27:43,320
rapper for existing vm providers it

00:27:41,610 --> 00:27:46,170
deals with the automated configuration

00:27:43,320 --> 00:27:48,240
and provisioning of machines and it has

00:27:46,170 --> 00:27:51,480
simple exporting and importing of

00:27:48,240 --> 00:27:54,060
machines it uses vagrant files and drop

00:27:51,480 --> 00:27:56,190
box files and it's all about the

00:27:54,060 --> 00:28:00,990
automation of setup and time savings

00:27:56,190 --> 00:28:04,470
with setup vagrant lets you import box

00:28:00,990 --> 00:28:08,310
is easily a vagrant box add startup

00:28:04,470 --> 00:28:10,640
boxes easily with vagrant up and control

00:28:08,310 --> 00:28:13,560
the setup of a box with the vagrant file

00:28:10,640 --> 00:28:16,140
it also allows you to export VMs with

00:28:13,560 --> 00:28:20,520
pre-installed software very easily with

00:28:16,140 --> 00:28:22,860
vagrant package and finally vagrant will

00:28:20,520 --> 00:28:26,040
help you bring your environments up and

00:28:22,860 --> 00:28:28,710
take them down share environments easily

00:28:26,040 --> 00:28:31,020
as an operator it will help you make

00:28:28,710 --> 00:28:32,460
environment simply as a developer it

00:28:31,020 --> 00:28:34,800
will help you track environments with

00:28:32,460 --> 00:28:36,300
versioning software and as a designer

00:28:34,800 --> 00:28:40,440
you will never have to worry about

00:28:36,300 --> 00:28:43,280
environment setup again and that is it

00:28:40,440 --> 00:28:43,280
thank you

00:29:11,940 --> 00:29:24,070
okay good no bigger'n essentially so

00:29:21,010 --> 00:29:28,330
commands attack for setting up a like

00:29:24,070 --> 00:29:30,490
memory and CPU and use that I probably

00:29:28,330 --> 00:29:32,640
should have used an inline script to

00:29:30,490 --> 00:29:35,140
install that to approve it you're right

00:29:32,640 --> 00:29:36,820
but essentially a vagrant did a lot of

00:29:35,140 --> 00:29:39,180
work for exporting the box and bring it

00:29:36,820 --> 00:29:39,180
in for me

00:29:46,390 --> 00:29:52,040
it's more for much more complicated

00:29:48,860 --> 00:29:56,510
setups so for example you say you've got

00:29:52,040 --> 00:29:58,700
a for example at CDOT I've got a paci

00:29:56,510 --> 00:30:00,380
load balance that i use and I've got us

00:29:58,700 --> 00:30:02,480
up a bunch of ports to get that

00:30:00,380 --> 00:30:05,420
configured so I gotta like take port 80

00:30:02,480 --> 00:30:07,280
and read it to my hosts 8080 I need to

00:30:05,420 --> 00:30:08,960
get it onto a host only network I need

00:30:07,280 --> 00:30:11,060
to give it a specific IP on that host

00:30:08,960 --> 00:30:13,430
only network I need to make sure that a

00:30:11,060 --> 00:30:14,840
bunch of scripts are done before life

00:30:13,430 --> 00:30:16,160
just basically to make sure everything

00:30:14,840 --> 00:30:18,650
gets started up in the right order and

00:30:16,160 --> 00:30:20,000
that would save all my time because I

00:30:18,650 --> 00:30:22,790
could define all about in the bigger

00:30:20,000 --> 00:30:23,980
file and then you beg or not and more

00:30:22,790 --> 00:30:26,420
importantly when I want to give it to

00:30:23,980 --> 00:30:28,490
Edwin or gay or anyone else that I've

00:30:26,420 --> 00:30:31,640
worked with I can just do a vagrants a

00:30:28,490 --> 00:30:33,560
package get that box give them the box

00:30:31,640 --> 00:30:35,210
with the beggar file and then for that

00:30:33,560 --> 00:30:36,230
it's just a simple or just do bake or

00:30:35,210 --> 00:30:38,420
not and they don't need to know about

00:30:36,230 --> 00:30:40,990
any of the magic divided in the

00:30:38,420 --> 00:30:40,990
configuration

00:30:54,900 --> 00:31:07,510
oh yeah yeah so I question is let's say

00:31:04,240 --> 00:31:10,150
you you you sent us six and you

00:31:07,510 --> 00:31:12,610
installed yes solar system all that you

00:31:10,150 --> 00:31:14,590
created your lunch box file so in a

00:31:12,610 --> 00:31:16,870
sense you've created a snapshot of p.m.

00:31:14,590 --> 00:31:20,350
at the end it's a terrible for you to

00:31:16,870 --> 00:31:22,240
come back to later yes so the question

00:31:20,350 --> 00:31:24,490
is what if I want me to have exactly the

00:31:22,240 --> 00:31:26,230
same act of the office file but I wanted

00:31:24,490 --> 00:31:29,980
it to be all this and beta 2 the latest

00:31:26,230 --> 00:31:33,780
version of the OS and then still keep

00:31:29,980 --> 00:31:39,250
the latest version of the services okay

00:31:33,780 --> 00:31:41,680
would be able to that I believe so with

00:31:39,250 --> 00:31:44,230
Alice so there's a those commands that

00:31:41,680 --> 00:31:45,730
allow you to update the bigger so you

00:31:44,230 --> 00:31:49,450
can say when a vagrant file has changed

00:31:45,730 --> 00:31:52,210
our boxes changed so for example if I if

00:31:49,450 --> 00:31:54,640
I get a box from Atlas which is why I

00:31:52,210 --> 00:31:56,680
sort of wish that a slacker worked but

00:31:54,640 --> 00:31:58,870
um basically anytime you do a grown up

00:31:56,680 --> 00:32:00,040
from a box that's from atlas it will

00:31:58,870 --> 00:32:01,570
tell you it's checking for updates

00:32:00,040 --> 00:32:03,730
seeing if the vagrant file has changed

00:32:01,570 --> 00:32:06,430
or if the actual image of the box has

00:32:03,730 --> 00:32:08,920
changed if it has the last q if you want

00:32:06,430 --> 00:32:11,430
to update that and move forward so if

00:32:08,920 --> 00:32:13,420
you need tracking of what type of

00:32:11,430 --> 00:32:15,070
history of your box and they're like

00:32:13,420 --> 00:32:16,180
maybe someone else is working on it

00:32:15,070 --> 00:32:18,790
you're not sure if it's the most

00:32:16,180 --> 00:32:24,700
up-to-date you could host it off Atlas

00:32:18,790 --> 00:32:27,700
and have the changes track them what it

00:32:24,700 --> 00:32:29,890
was well you could use your own machines

00:32:27,700 --> 00:32:32,950
and UK you can set it all up yourself

00:32:29,890 --> 00:32:35,270
and you can use get to track the vagrant

00:32:32,950 --> 00:32:43,060
file and if you even want to try

00:32:35,270 --> 00:32:43,060
the box to see if the engine strange yes

00:32:47,380 --> 00:32:53,240
I know you can use a single vagrant file

00:32:50,450 --> 00:32:54,919
to configure multiple machines I'll have

00:32:53,240 --> 00:32:58,570
to get back to you on it you can use a

00:32:54,919 --> 00:32:58,570
single box to contain multiple machines

00:33:02,710 --> 00:33:05,890
do what

00:33:09,049 --> 00:33:15,179
yes you can the vagrant file supports

00:33:11,999 --> 00:33:17,249
the defining how to set up for example

00:33:15,179 --> 00:33:19,799
say OPA host only network and you know

00:33:17,249 --> 00:33:22,830
you always want first four boxes to have

00:33:19,799 --> 00:33:24,659
certain IPS you can define that in a

00:33:22,830 --> 00:33:27,269
vagrant file and save the first box use

00:33:24,659 --> 00:33:37,590
this with second box use this so I so

00:33:27,269 --> 00:33:42,119
for you yeah can love good use the movie

00:33:37,590 --> 00:33:46,909
yes vagrant supports so many providers

00:33:42,119 --> 00:33:49,049
like I like seeing VMware in virtualbox

00:33:46,909 --> 00:33:51,029
the specifics for that I'll have to get

00:33:49,049 --> 00:33:56,990
back to you want but I'm confident

00:33:51,029 --> 00:33:56,990
writing news ever yeah

00:34:02,370 --> 00:34:07,600
no that is against the rules I can do it

00:34:05,500 --> 00:34:08,950
across operating systems identically but

00:34:07,600 --> 00:34:11,889
when it comes to providers you would

00:34:08,950 --> 00:34:14,370
have to box up different the same box

00:34:11,889 --> 00:34:18,040
for different providers sorry that the

00:34:14,370 --> 00:34:19,510
different vm exports in the same box so

00:34:18,040 --> 00:34:21,580
you can I know you can have one box that

00:34:19,510 --> 00:34:34,480
has a series of different reminders for

00:34:21,580 --> 00:34:37,210
it so yeah yep I'm sorry oh I yes you

00:34:34,480 --> 00:34:38,560
could install ansible on the middle vm

00:34:37,210 --> 00:34:41,169
you'll be using and then use inline

00:34:38,560 --> 00:34:44,320
scripts to trigger it you know there's

00:34:41,169 --> 00:34:46,629
there's plug-ins for dr. and for her

00:34:44,320 --> 00:34:48,909
chef and puppet I'm not positive about

00:34:46,629 --> 00:34:51,370
ansible but I'd be willing to bet but it

00:34:48,909 --> 00:35:03,640
can definitely be manually gotten or set

00:34:51,370 --> 00:35:06,850
up and configure that way okay yeah uses

00:35:03,640 --> 00:35:08,200
any Linux uses windows uses OSX it

00:35:06,850 --> 00:35:10,000
understands it's more like it

00:35:08,200 --> 00:35:13,420
understands providers not operating

00:35:10,000 --> 00:35:15,750
systems that makes sense so controlling

00:35:13,420 --> 00:35:18,370
VirtualBox is the san juan windows on

00:35:15,750 --> 00:35:25,570
linux and on you've always I suggest we

00:35:18,370 --> 00:35:28,900
owe you mean for guest OS is yellow case

00:35:25,570 --> 00:35:30,640
yeah vagrant uses rdp and remote

00:35:28,900 --> 00:35:36,010
administration for that stuff so you

00:35:30,640 --> 00:35:38,510
can't have windows as a guest OS okay

00:35:36,010 --> 00:35:40,570
thank you

00:35:38,510 --> 00:35:40,570

YouTube URL: https://www.youtube.com/watch?v=_km02aDgMH4


