Title: FSOSS 2015 - David Humphrey - Git and GitHub
Publication date: 2015-11-20
Playlist: FSOSS 2015
Description: 
	FSOSS 2015 - David Humphrey - Git and GitHub
Captions: 
	00:00:00,000 --> 00:00:10,040
Tyler's turn my life efendim not that

00:00:05,910 --> 00:00:12,870
may I couldn't believe anyone is not you

00:00:10,040 --> 00:00:15,719
expect a few year is evangelizing and

00:00:12,870 --> 00:00:18,869
telling everyone listen this can only do

00:00:15,719 --> 00:00:20,340
good things there was a long time ago a

00:00:18,869 --> 00:00:22,949
subversion of those back in the days

00:00:20,340 --> 00:00:25,109
when the only people using virtual

00:00:22,949 --> 00:00:33,870
controls were large old school

00:00:25,109 --> 00:00:38,180
corporations they use perforce CES they

00:00:33,870 --> 00:00:38,180
kind of stay back in the box I still

00:00:41,690 --> 00:00:45,780
people like David in telling me for

00:00:44,040 --> 00:00:48,570
years and years listen what's wrong with

00:00:45,780 --> 00:00:51,750
you I will sit focus have you looked at

00:00:48,570 --> 00:00:58,949
my instruments all the projects of the

00:00:51,750 --> 00:01:02,340
door I do appreciate it but I never

00:00:58,949 --> 00:01:06,000
really learned to be good I just get the

00:01:02,340 --> 00:01:07,920
way you supporting back today different

00:01:06,000 --> 00:01:10,979
person someday has jumped right on it

00:01:07,920 --> 00:01:13,549
he's figured it out he knows normal

00:01:10,979 --> 00:01:13,549
Gibson

00:01:58,080 --> 00:02:05,850
miss me so okay yeah so my goal is I'd

00:02:03,150 --> 00:02:09,720
like to encourage you to go and learn

00:02:05,850 --> 00:02:12,000
get and i'm going to give you enough

00:02:09,720 --> 00:02:16,260
that hopefully i can get you motivated

00:02:12,000 --> 00:02:19,860
to do it get has become essential

00:02:16,260 --> 00:02:22,350
infrastructure in computing not only an

00:02:19,860 --> 00:02:24,930
open source but in all aspects of

00:02:22,350 --> 00:02:27,240
computing and programming being able to

00:02:24,930 --> 00:02:28,950
work with get is is critical and this

00:02:27,240 --> 00:02:32,820
was sort of a funny thing that was going

00:02:28,950 --> 00:02:35,070
around the internet recently and joking

00:02:32,820 --> 00:02:37,020
that you know in case of a fire for

00:02:35,070 --> 00:02:39,390
heaven's sake commit your changes push

00:02:37,020 --> 00:02:42,990
them up and then leave the building the

00:02:39,390 --> 00:02:48,600
order is very clear so but get is

00:02:42,990 --> 00:02:50,850
intimidating and a lot of people avoid

00:02:48,600 --> 00:02:53,190
it including myself andrew is very kind

00:02:50,850 --> 00:02:55,560
to say that i know everything about it

00:02:53,190 --> 00:02:58,920
and so on but when i when i first

00:02:55,560 --> 00:03:00,209
learned get I really hesitated for the

00:02:58,920 --> 00:03:02,519
same reason than Andrew talked about

00:03:00,209 --> 00:03:07,140
because I had spent so much time using

00:03:02,519 --> 00:03:10,230
other tools heavily used CVS used

00:03:07,140 --> 00:03:12,480
subversion I've used everything and it

00:03:10,230 --> 00:03:14,400
took me a long time to be to come to

00:03:12,480 --> 00:03:17,550
terms with get because I want to get to

00:03:14,400 --> 00:03:21,120
be just a better subversion or a better

00:03:17,550 --> 00:03:22,709
whatever old system you've used a friend

00:03:21,120 --> 00:03:25,800
of mine who now works at Facebook Mike

00:03:22,709 --> 00:03:28,380
shaver once said that it has to be the

00:03:25,800 --> 00:03:30,090
first or the seventh version control

00:03:28,380 --> 00:03:33,180
system that you learn it can't be the

00:03:30,090 --> 00:03:34,500
second and the reason is that you either

00:03:33,180 --> 00:03:36,570
have to know nothing about version

00:03:34,500 --> 00:03:38,250
control and have no preconceived ideas

00:03:36,570 --> 00:03:39,959
and therefore you won't be frustrated by

00:03:38,250 --> 00:03:43,110
it or you'll just accept it as being

00:03:39,959 --> 00:03:44,970
frustrating or you have to be so

00:03:43,110 --> 00:03:47,430
comfortable with the concepts of a

00:03:44,970 --> 00:03:49,620
version control system that you can just

00:03:47,430 --> 00:03:57,140
slot get into it and say I understand

00:03:49,620 --> 00:04:01,380
this makes sense so get is is hard

00:03:57,140 --> 00:04:04,290
mostly because of this guy so I get was

00:04:01,380 --> 00:04:08,069
created by the same guy who created the

00:04:04,290 --> 00:04:09,240
linux kernel and so this is liz torvalds

00:04:08,069 --> 00:04:11,319
and this is another joke that went

00:04:09,240 --> 00:04:12,670
around if you use LinkedIn

00:04:11,319 --> 00:04:16,180
whether or not you would endorse him yet

00:04:12,670 --> 00:04:19,090
lettuce does know get linis knows get

00:04:16,180 --> 00:04:22,270
because he built it in order to run the

00:04:19,090 --> 00:04:25,199
colonel the colonel project so a little

00:04:22,270 --> 00:04:29,349
history lesson for you get starts up in

00:04:25,199 --> 00:04:32,470
2005 so happy 10th birthday get and it

00:04:29,349 --> 00:04:35,380
comes about because linna's needs to run

00:04:32,470 --> 00:04:36,880
the project and they've hit a crossroads

00:04:35,380 --> 00:04:38,889
with the current system they're using

00:04:36,880 --> 00:04:41,800
we're using a proprietary system called

00:04:38,889 --> 00:04:43,570
bitkeeper and one of their very

00:04:41,800 --> 00:04:45,699
brilliant developers had reverse

00:04:43,570 --> 00:04:49,210
engineered the protocol for bitkeeper in

00:04:45,699 --> 00:04:51,250
order to add a new feature and the

00:04:49,210 --> 00:04:53,139
maintainer of the project company said

00:04:51,250 --> 00:04:54,729
we're not going to let you use this for

00:04:53,139 --> 00:04:55,900
free anymore they were very upset that

00:04:54,729 --> 00:04:57,639
they had done this because they felt

00:04:55,900 --> 00:05:02,009
that was an attack on their product and

00:04:57,639 --> 00:05:04,000
so at a certain point lynus shut down

00:05:02,009 --> 00:05:05,080
development on the colonel and said

00:05:04,000 --> 00:05:07,930
we're not going to do any more work

00:05:05,080 --> 00:05:11,139
until we can come up with a replacement

00:05:07,930 --> 00:05:12,400
for the way that we work because not you

00:05:11,139 --> 00:05:14,289
probably have talked about it's another

00:05:12,400 --> 00:05:17,229
talks but the way that the colonel was

00:05:14,289 --> 00:05:20,020
built was a particular way of working

00:05:17,229 --> 00:05:21,630
you had all sorts of people around the

00:05:20,020 --> 00:05:25,180
world working in a distributed way

00:05:21,630 --> 00:05:26,740
submitting things up various levels in a

00:05:25,180 --> 00:05:28,960
chain and eventually they would get to

00:05:26,740 --> 00:05:30,550
the desk of this guy and he would merge

00:05:28,960 --> 00:05:32,560
the manner he wouldn't or he'd make

00:05:30,550 --> 00:05:34,900
comments and say change this do this and

00:05:32,560 --> 00:05:37,090
you had you had a very interesting model

00:05:34,900 --> 00:05:39,159
of development and he wanted a tool that

00:05:37,090 --> 00:05:40,930
allowed you to work in the way that he

00:05:39,159 --> 00:05:42,669
wanted to work so this is very much

00:05:40,930 --> 00:05:45,310
something that comes out of lettuces

00:05:42,669 --> 00:05:46,840
mind and linux has an odd mind and some

00:05:45,310 --> 00:05:49,000
of the choices he made are not good

00:05:46,840 --> 00:05:52,030
choices but here we are and we have get

00:05:49,000 --> 00:05:55,150
as a result of it so get is free

00:05:52,030 --> 00:05:57,250
software get is design in a particular

00:05:55,150 --> 00:05:59,169
way I'm going to come out back to this

00:05:57,250 --> 00:06:01,840
over and over again but get is not a

00:05:59,169 --> 00:06:04,180
version control system get is more of a

00:06:01,840 --> 00:06:05,949
version file system so if you can think

00:06:04,180 --> 00:06:07,810
about get as a file system you will

00:06:05,949 --> 00:06:10,389
start to get closer to what get is and

00:06:07,810 --> 00:06:12,070
forget about subversion and other types

00:06:10,389 --> 00:06:15,039
of tools that were all about tracking

00:06:12,070 --> 00:06:17,680
revisions that's not what get is it is

00:06:15,039 --> 00:06:20,260
designed to be distributed so I don't

00:06:17,680 --> 00:06:22,000
need to have a network which I don't

00:06:20,260 --> 00:06:23,409
know what network is where you work but

00:06:22,000 --> 00:06:25,060
I work here and sometimes the network

00:06:23,409 --> 00:06:26,500
isn't great in fact if I make it

00:06:25,060 --> 00:06:30,070
my talk without any problems on the

00:06:26,500 --> 00:06:31,510
network i'll be very happy so it's

00:06:30,070 --> 00:06:33,730
designed that you could get on a train

00:06:31,510 --> 00:06:35,290
or a plane or a bus be a student work in

00:06:33,730 --> 00:06:36,700
a place that has network or doesn't have

00:06:35,290 --> 00:06:38,889
network and be able to do all of your

00:06:36,700 --> 00:06:40,990
work and that's what that's what is

00:06:38,889 --> 00:06:43,630
fundamental to it another thing that's

00:06:40,990 --> 00:06:46,060
important is that your data always is

00:06:43,630 --> 00:06:48,639
the same going in and coming out that

00:06:46,060 --> 00:06:50,350
you can rely on the data and no one will

00:06:48,639 --> 00:06:52,510
be able to tamper with it without you

00:06:50,350 --> 00:06:55,210
knowing and finally that it has to be

00:06:52,510 --> 00:06:58,330
fast so it was designed to work at the

00:06:55,210 --> 00:06:59,830
scale of the colonel being able to check

00:06:58,330 --> 00:07:01,270
out different things merge different

00:06:59,830 --> 00:07:03,610
things had to be really quick because

00:07:01,270 --> 00:07:05,590
that's mostly what lynus does he doesn't

00:07:03,610 --> 00:07:08,740
write a lot of code he reads patches

00:07:05,590 --> 00:07:10,570
merges them and puts things to get an

00:07:08,740 --> 00:07:13,389
Orchestrator and so it's a tool designed

00:07:10,570 --> 00:07:15,940
for that workflow so this is a quote

00:07:13,389 --> 00:07:17,229
from lynus and he says exactly what I'm

00:07:15,940 --> 00:07:19,990
going to try and convince you up today

00:07:17,229 --> 00:07:22,840
and that is that you can see get just as

00:07:19,990 --> 00:07:25,630
a file system and it was designed by a

00:07:22,840 --> 00:07:27,340
guy who designs file systems the colonel

00:07:25,630 --> 00:07:30,220
is really just an excuse to write a file

00:07:27,340 --> 00:07:32,169
system and linux and unix is basically a

00:07:30,220 --> 00:07:33,880
big file system and that's what is at

00:07:32,169 --> 00:07:36,130
the heart of the way that he's designed

00:07:33,880 --> 00:07:37,720
the system now linis doesn't work day to

00:07:36,130 --> 00:07:40,000
day on get anymore it's been taken over

00:07:37,720 --> 00:07:42,010
by other people it's a project with lots

00:07:40,000 --> 00:07:47,550
of different contributors going on but

00:07:42,010 --> 00:07:50,890
that's where it came from so it has

00:07:47,550 --> 00:07:53,350
concept of a repository and a repository

00:07:50,890 --> 00:07:55,919
and get is simply a directory it's a

00:07:53,350 --> 00:07:58,120
regular directory on your computer and

00:07:55,919 --> 00:08:00,880
inside that directory you have a folder

00:07:58,120 --> 00:08:03,340
you have a folder called dot get so it's

00:08:00,880 --> 00:08:04,539
a hidden folder and it contains a bunch

00:08:03,340 --> 00:08:08,560
of stuff which I'm going to talk about

00:08:04,539 --> 00:08:10,120
in a little bit of detail here I'm going

00:08:08,560 --> 00:08:11,650
to be referring to a couple of different

00:08:10,120 --> 00:08:13,600
repositories and doing some

00:08:11,650 --> 00:08:14,710
demonstrations using a few repositories

00:08:13,600 --> 00:08:16,450
so if you're interested in looking at

00:08:14,710 --> 00:08:17,919
these one of the projects that I've been

00:08:16,450 --> 00:08:21,400
working on the last couple of years is

00:08:17,919 --> 00:08:25,539
I've been working on a fork of Adobe's

00:08:21,400 --> 00:08:27,970
brackets desktop editor so there there

00:08:25,539 --> 00:08:30,610
particular project is hosted at that URL

00:08:27,970 --> 00:08:31,780
I'm going to talk about github later on

00:08:30,610 --> 00:08:33,909
in the talk and you'll see me

00:08:31,780 --> 00:08:35,890
referencing it lots because I really

00:08:33,909 --> 00:08:37,780
can't talk about get without also

00:08:35,890 --> 00:08:38,050
talking about github one of the things

00:08:37,780 --> 00:08:40,029
that

00:08:38,050 --> 00:08:41,709
makes learning get tricky is that you

00:08:40,029 --> 00:08:43,690
not only have to learn to use this tool

00:08:41,709 --> 00:08:46,540
but you have to learn all of the social

00:08:43,690 --> 00:08:48,250
and workflows that the communities use

00:08:46,540 --> 00:08:50,470
in order to work with it so it's quite a

00:08:48,250 --> 00:08:52,690
mean there's quite a large learning

00:08:50,470 --> 00:08:54,519
curve I find I've taught get too many

00:08:52,690 --> 00:08:56,920
students and it takes about two weeks to

00:08:54,519 --> 00:08:58,480
teach it so I've asked them to lock the

00:08:56,920 --> 00:08:59,800
doors we're going to spend the next two

00:08:58,480 --> 00:09:01,510
weeks actually we're just going to do a

00:08:59,800 --> 00:09:03,160
short injection today but it takes a

00:09:01,510 --> 00:09:06,160
while to learn this thing really well

00:09:03,160 --> 00:09:07,810
and I'm going to give you some examples

00:09:06,160 --> 00:09:08,860
of what this looks like so I'm going to

00:09:07,810 --> 00:09:12,310
come back to these different

00:09:08,860 --> 00:09:13,450
repositories here as we as we we work so

00:09:12,310 --> 00:09:14,529
I'm going to I'm going to start off by

00:09:13,450 --> 00:09:19,089
showing you how I would clone a

00:09:14,529 --> 00:09:23,589
repository so over here is I'm looking

00:09:19,089 --> 00:09:27,700
at github here and I'm going to clone

00:09:23,589 --> 00:09:30,070
the adobe brackets repository and to do

00:09:27,700 --> 00:09:31,839
that I need to have a URL so over here

00:09:30,070 --> 00:09:33,579
on the right I have a URL there's

00:09:31,839 --> 00:09:36,010
actually a URL for this web page but

00:09:33,579 --> 00:09:38,860
that's not the URL i need i need a URL

00:09:36,010 --> 00:09:40,360
to their git repository so I'll talk

00:09:38,860 --> 00:09:43,810
about this later but what github really

00:09:40,360 --> 00:09:46,510
does is it allows you to host a version

00:09:43,810 --> 00:09:48,550
of your repository on the web and that's

00:09:46,510 --> 00:09:50,470
handy because I don't want to give you

00:09:48,550 --> 00:09:51,640
access to my local computer it's not

00:09:50,470 --> 00:09:53,260
that I don't trust you it's actually

00:09:51,640 --> 00:09:55,329
that I don't trust you I don't want you

00:09:53,260 --> 00:09:57,700
in my network but I will put it up on

00:09:55,329 --> 00:10:00,070
some third-party site where that we can

00:09:57,700 --> 00:10:03,910
both reach using the web so I'm going to

00:10:00,070 --> 00:10:09,899
take this URL and I'll copy it and if I

00:10:03,910 --> 00:10:12,399
hop into an editor you see that okay bye

00:10:09,899 --> 00:10:14,440
I'm going to tell get that I want to

00:10:12,399 --> 00:10:17,709
clone this repository it was going to

00:10:14,440 --> 00:10:19,870
give it the URL and press ENTER and it's

00:10:17,709 --> 00:10:22,149
going to start doing its thing so what

00:10:19,870 --> 00:10:25,709
it's doing right now is it's downloading

00:10:22,149 --> 00:10:28,420
that repository and that repository has

00:10:25,709 --> 00:10:31,000
everything that has ever happened in

00:10:28,420 --> 00:10:32,860
that software project inside it every

00:10:31,000 --> 00:10:35,290
change that was ever made every version

00:10:32,860 --> 00:10:37,060
of every file all of the commits whether

00:10:35,290 --> 00:10:39,220
they were the ones that made it in or

00:10:37,060 --> 00:10:40,449
not they're all in there you can see

00:10:39,220 --> 00:10:42,490
it's taking a little bit of time to

00:10:40,449 --> 00:10:44,050
download this this projects been being

00:10:42,490 --> 00:10:46,630
in development by hundreds of developers

00:10:44,050 --> 00:10:48,490
for quite a number of years so the first

00:10:46,630 --> 00:10:51,020
thing to note about get one of the

00:10:48,490 --> 00:10:52,610
things that you're

00:10:51,020 --> 00:10:54,440
the things you're taking on as a result

00:10:52,610 --> 00:10:57,410
of choosing yet is that you need a lot

00:10:54,440 --> 00:10:58,670
of bandwidth in order to do a clone and

00:10:57,410 --> 00:11:00,260
you need a lot of hard drive space

00:10:58,670 --> 00:11:02,720
because you're going to store everything

00:11:00,260 --> 00:11:05,330
on your computer there are serious

00:11:02,720 --> 00:11:07,790
advantages for me having everything on

00:11:05,330 --> 00:11:10,130
my computer once I own all of this data

00:11:07,790 --> 00:11:12,290
on my computer because I can unplug from

00:11:10,130 --> 00:11:15,080
the network I can walk away and I have

00:11:12,290 --> 00:11:17,360
everything that adobe has like all of it

00:11:15,080 --> 00:11:20,690
which didn't used to be the case if you

00:11:17,360 --> 00:11:24,470
used to use CVS or subversion somebody

00:11:20,690 --> 00:11:26,000
would host a CBS server and you would be

00:11:24,470 --> 00:11:28,040
able to check out a version or a

00:11:26,000 --> 00:11:30,530
revision of that code and I might have

00:11:28,040 --> 00:11:32,630
revision whatever the latest revision of

00:11:30,530 --> 00:11:34,340
that code but all of the rest of that

00:11:32,630 --> 00:11:36,050
history lived somewhere else somebody

00:11:34,340 --> 00:11:37,490
else owned it somebody else they might

00:11:36,050 --> 00:11:39,620
have given me access to it but I didn't

00:11:37,490 --> 00:11:41,780
have I didn't have access to it that's a

00:11:39,620 --> 00:11:44,690
very different thing with yet every

00:11:41,780 --> 00:11:48,170
repository in get is equal to every

00:11:44,690 --> 00:11:49,070
other repository to get so and we're

00:11:48,170 --> 00:11:52,580
also going to find that there really

00:11:49,070 --> 00:11:54,800
isn't a central repository all of them

00:11:52,580 --> 00:11:56,690
are peers so you have this weird

00:11:54,800 --> 00:11:58,520
distributed world where we can all

00:11:56,690 --> 00:12:00,500
duplicate everything that everyone does

00:11:58,520 --> 00:12:03,560
and it seems very chaotic at the

00:12:00,500 --> 00:12:06,140
beginning well it is chaotic even when

00:12:03,560 --> 00:12:10,070
you're in the middle of it so I now have

00:12:06,140 --> 00:12:14,540
a directory a brackets directory and I

00:12:10,070 --> 00:12:16,550
have a git repo inside here I've got a

00:12:14,540 --> 00:12:18,440
bunch of stuff like this dot get

00:12:16,550 --> 00:12:19,730
directory and you never have to do

00:12:18,440 --> 00:12:21,650
anything with this directory in fact

00:12:19,730 --> 00:12:23,360
don't ever touch this directory your

00:12:21,650 --> 00:12:25,610
life will be infinitely better if you

00:12:23,360 --> 00:12:27,860
never go into that get directory because

00:12:25,610 --> 00:12:29,750
the git command line tools will manage

00:12:27,860 --> 00:12:32,570
it for you essentially it's a database

00:12:29,750 --> 00:12:34,610
of all the information about the what's

00:12:32,570 --> 00:12:36,230
happened with this file system and I

00:12:34,610 --> 00:12:38,090
have a particular version of the file

00:12:36,230 --> 00:12:40,310
system checked out right now so two

00:12:38,090 --> 00:12:43,130
things happened when i cloned it i gotta

00:12:40,310 --> 00:12:45,560
download i downloaded a complete copy of

00:12:43,130 --> 00:12:47,810
the database it got put in that dot get

00:12:45,560 --> 00:12:51,530
directory and it also automatically

00:12:47,810 --> 00:12:53,450
checked out a snapshot of the files the

00:12:51,530 --> 00:12:54,770
inside that directory and it gave them

00:12:53,450 --> 00:12:58,010
to me here which is what i'm seeing when

00:12:54,770 --> 00:13:01,190
i look at this now this particular

00:12:58,010 --> 00:13:04,520
directory or this particular repository

00:13:01,190 --> 00:13:11,510
also does something which get allows

00:13:04,520 --> 00:13:15,290
let me clear this get allows you to have

00:13:11,510 --> 00:13:19,310
other repositories inside of a

00:13:15,290 --> 00:13:21,710
repository so if I want to in this case

00:13:19,310 --> 00:13:24,560
I want to use some other piece of code

00:13:21,710 --> 00:13:28,130
that somebody else is maintaining I can

00:13:24,560 --> 00:13:30,320
link to somebody else's repository and I

00:13:28,130 --> 00:13:32,270
can have that entire repository inside

00:13:30,320 --> 00:13:34,580
my repository why would you want to do

00:13:32,270 --> 00:13:37,160
that the reason that get allows you to

00:13:34,580 --> 00:13:38,960
do this is so you can track and up they

00:13:37,160 --> 00:13:40,850
call it an upstream project I can track

00:13:38,960 --> 00:13:43,190
a project which is rapidly iterating

00:13:40,850 --> 00:13:45,590
without having to constantly copy and

00:13:43,190 --> 00:13:47,780
paste or Sri save that data into my own

00:13:45,590 --> 00:13:51,860
so I'm going to do one last step here

00:13:47,780 --> 00:13:53,480
and I'm going to tell all of those sub

00:13:51,860 --> 00:13:57,380
modules to update and what you're seeing

00:13:53,480 --> 00:14:00,650
here is that it is cloning all of these

00:13:57,380 --> 00:14:04,910
other repositories inside my current

00:14:00,650 --> 00:14:06,890
repository one by one by one so when I

00:14:04,910 --> 00:14:08,750
talk about get needing lots of disk

00:14:06,890 --> 00:14:10,670
space I don't just have the entire

00:14:08,750 --> 00:14:13,400
history of one project I have the entire

00:14:10,670 --> 00:14:15,110
history of all of these projects so I

00:14:13,400 --> 00:14:17,930
was talking to a contributor in Pakistan

00:14:15,110 --> 00:14:20,480
this week and he was saying that he's on

00:14:17,930 --> 00:14:23,060
a very very low bandwidth and he said

00:14:20,480 --> 00:14:24,710
how do I clone this thing I can't clone

00:14:23,060 --> 00:14:26,630
it because I don't it takes forever like

00:14:24,710 --> 00:14:28,370
I just don't have the bandwidth so it's

00:14:26,630 --> 00:14:30,020
a real it's something to be aware of

00:14:28,370 --> 00:14:32,300
above get we take for granted the fact

00:14:30,020 --> 00:14:34,220
that we have large hard drives that we

00:14:32,300 --> 00:14:37,100
have fast networks most of the time and

00:14:34,220 --> 00:14:39,080
that we can clone and copy huge amounts

00:14:37,100 --> 00:14:40,940
of data back and forth when I work on

00:14:39,080 --> 00:14:43,400
something like Firefox you have the

00:14:40,940 --> 00:14:45,440
entire history of the Firefox project

00:14:43,400 --> 00:14:47,330
every commit all inside one or if you

00:14:45,440 --> 00:14:49,730
work on get every single version of

00:14:47,330 --> 00:14:52,790
every file is in there all in this one

00:14:49,730 --> 00:14:54,710
directory it's crazy it's still cloning

00:14:52,790 --> 00:14:59,420
so we'll leave that to clone and go on

00:14:54,710 --> 00:15:03,610
its way that get directory stores in it

00:14:59,420 --> 00:15:05,960
a bunch of information so it stores

00:15:03,610 --> 00:15:08,600
files I'm going to simplify it but it

00:15:05,960 --> 00:15:12,020
stores files directories and commits and

00:15:08,600 --> 00:15:15,350
so a file is a file its binary or text

00:15:12,020 --> 00:15:17,810
data and what get does for every one of

00:15:15,350 --> 00:15:18,259
the objects that it stores it stores it

00:15:17,810 --> 00:15:20,779
with a

00:15:18,259 --> 00:15:23,899
version but we can't use a version like

00:15:20,779 --> 00:15:25,669
1 2 3 4 if you use subversion you know

00:15:23,899 --> 00:15:27,379
that subversion revisions used to be

00:15:25,669 --> 00:15:29,509
literally one two three four you would

00:15:27,379 --> 00:15:32,660
check out version 56 of the code and

00:15:29,509 --> 00:15:35,539
there was only one version 56 but if I

00:15:32,660 --> 00:15:37,699
have all of Adobe's code and you have

00:15:35,539 --> 00:15:40,459
all of Adobe's coat and soda 300 other

00:15:37,699 --> 00:15:43,579
people we can't say that this is version

00:15:40,459 --> 00:15:45,499
1234 we need them we need a version

00:15:43,579 --> 00:15:47,389
exists immed at will work anywhere in

00:15:45,499 --> 00:15:50,179
the world we need a global numbering

00:15:47,389 --> 00:15:52,489
system and I told you that linis was

00:15:50,179 --> 00:15:54,529
worried about data integrity so if I put

00:15:52,489 --> 00:15:57,529
data into get I want to be able to get

00:15:54,529 --> 00:16:03,249
that exact same data out so what happens

00:15:57,529 --> 00:16:03,249
in get is that it uses a hash so every

00:16:03,910 --> 00:16:12,979
so I can take a file in here like the

00:16:08,149 --> 00:16:16,329
readme file and I can ask my computer to

00:16:12,979 --> 00:16:19,339
generate a hash for me I can ask it to

00:16:16,329 --> 00:16:21,679
give me a unique string that says given

00:16:19,339 --> 00:16:24,410
the contents of a file i want it i want

00:16:21,679 --> 00:16:26,419
a number which is always the same and if

00:16:24,410 --> 00:16:30,079
the contents of that file change I want

00:16:26,419 --> 00:16:33,619
a new number get stores everything at

00:16:30,079 --> 00:16:35,509
stores using these long shaw's or hash

00:16:33,619 --> 00:16:37,579
hash numbers and you're going to see

00:16:35,509 --> 00:16:39,410
them all over the place and it's one of

00:16:37,579 --> 00:16:41,509
the things that allows us to work in a

00:16:39,410 --> 00:16:43,970
distributed way so you and I can have

00:16:41,509 --> 00:16:45,889
the same version of the file IE the same

00:16:43,970 --> 00:16:49,189
contents and get won't get confused

00:16:45,889 --> 00:16:51,259
because get uses a hash which is

00:16:49,189 --> 00:16:53,869
generated from the contents of a file in

00:16:51,259 --> 00:16:55,519
order to identify things things aren't

00:16:53,869 --> 00:16:57,169
identified by names they're not

00:16:55,519 --> 00:17:00,999
identified by Virgil numbers they're

00:16:57,169 --> 00:17:05,179
identified according to their contents

00:17:00,999 --> 00:17:08,269
so we store all of the files in that get

00:17:05,179 --> 00:17:11,299
directory literally so when I put my

00:17:08,269 --> 00:17:13,429
files in to get it take it generates a

00:17:11,299 --> 00:17:14,899
hash for the file and it takes the

00:17:13,429 --> 00:17:16,519
contents of the file and it compresses

00:17:14,899 --> 00:17:18,799
it and it sticks it into that get

00:17:16,519 --> 00:17:20,449
directory and it's in there so it's

00:17:18,799 --> 00:17:22,490
always in there and when I download it

00:17:20,449 --> 00:17:24,260
or clone that repository I downloaded

00:17:22,490 --> 00:17:26,329
all of those versions of the file every

00:17:24,260 --> 00:17:29,919
time someone added a character and save

00:17:26,329 --> 00:17:29,919
their file and committed it that happen

00:17:30,500 --> 00:17:36,170
so we'll talk about commits and it

00:17:33,410 --> 00:17:38,840
commits has a bunch of metadata

00:17:36,170 --> 00:17:41,750
associated with whatever version of the

00:17:38,840 --> 00:17:44,030
files that you have so every commit has

00:17:41,750 --> 00:17:47,000
a number that looks like that some kind

00:17:44,030 --> 00:17:49,520
of a hash it has an author it has a date

00:17:47,000 --> 00:17:51,740
it has a series of commits that came

00:17:49,520 --> 00:17:53,960
before it so it has one or more parent

00:17:51,740 --> 00:17:58,070
commits and that tell us where these

00:17:53,960 --> 00:18:02,270
things are so in the case of I'm going

00:17:58,070 --> 00:18:06,830
to use a command called get show get

00:18:02,270 --> 00:18:08,780
show allows me to ask a repository to

00:18:06,830 --> 00:18:10,970
show me the latest commit that it has

00:18:08,780 --> 00:18:14,870
and so here you can see that i'm on

00:18:10,970 --> 00:18:16,820
commit bf2 to be f right nobody used

00:18:14,870 --> 00:18:19,640
this for a computer not for humans but

00:18:16,820 --> 00:18:22,250
that's what commit we're on and you can

00:18:19,640 --> 00:18:24,140
see that there's an author for this you

00:18:22,250 --> 00:18:26,990
can see the date it was done and you can

00:18:24,140 --> 00:18:28,580
see that they're merging in code there

00:18:26,990 --> 00:18:30,290
was a typo in one of the files and

00:18:28,580 --> 00:18:32,420
they're merging in code to do this and

00:18:30,290 --> 00:18:34,730
so that all that metadata is stored for

00:18:32,420 --> 00:18:38,360
that commit we have interest information

00:18:34,730 --> 00:18:40,310
about that if I ask it for a log get

00:18:38,360 --> 00:18:43,340
will happily give me a log that goes

00:18:40,310 --> 00:18:46,340
back forever I have all of these

00:18:43,340 --> 00:18:48,140
different commits they're all here on

00:18:46,340 --> 00:18:49,460
this computer so I'm not talking over

00:18:48,140 --> 00:18:51,650
the network when I'm asking for this

00:18:49,460 --> 00:18:55,390
information I'm just asking my local

00:18:51,650 --> 00:18:55,390
computer to tell me what have you got

00:18:57,790 --> 00:19:02,540
the thing that is the most hurdle that

00:19:01,280 --> 00:19:04,910
people have when they're trying to get

00:19:02,540 --> 00:19:07,310
used to get is the way that you put

00:19:04,910 --> 00:19:11,510
commits together so I told you before

00:19:07,310 --> 00:19:13,940
that get is a file system and the way

00:19:11,510 --> 00:19:15,530
that get thinks about your data is it

00:19:13,940 --> 00:19:17,030
wants you to I'm going to use the word

00:19:15,530 --> 00:19:20,630
assemble but it wants you to put

00:19:17,030 --> 00:19:22,760
together assemble a snapshot of files at

00:19:20,630 --> 00:19:26,120
a given point in time and then it'll

00:19:22,760 --> 00:19:28,790
take that snapshot and freeze it and put

00:19:26,120 --> 00:19:32,930
it into the database so get doesn't have

00:19:28,790 --> 00:19:34,340
an idea of deltas or changes that start

00:19:32,930 --> 00:19:35,870
at the beginning of a file and you

00:19:34,340 --> 00:19:37,490
change this and you change this and you

00:19:35,870 --> 00:19:39,230
change this and you keep going on and

00:19:37,490 --> 00:19:41,510
it's there's some sort of linear change

00:19:39,230 --> 00:19:42,770
set that goes back because the reason

00:19:41,510 --> 00:19:43,140
that he didn't do that was because it

00:19:42,770 --> 00:19:45,540
would be too

00:19:43,140 --> 00:19:47,040
too slow because to calculate the

00:19:45,540 --> 00:19:48,570
current version of a file i have to go

00:19:47,040 --> 00:19:51,090
and look up all these deltas across

00:19:48,570 --> 00:19:54,360
history soget has a different way of

00:19:51,090 --> 00:19:56,760
doing it get asks you to take a series

00:19:54,360 --> 00:19:59,820
of files put them in whatever order you

00:19:56,760 --> 00:20:02,670
want and then snap shot them or commit

00:19:59,820 --> 00:20:03,900
them and then it stores them into its

00:20:02,670 --> 00:20:05,840
system so I'm going to come back to what

00:20:03,900 --> 00:20:09,870
this looks like and I'll show you a demo

00:20:05,840 --> 00:20:12,600
in order to do this get ads this new

00:20:09,870 --> 00:20:14,940
thing that none of the other subversion

00:20:12,600 --> 00:20:16,440
or CVS they never had so this is one of

00:20:14,940 --> 00:20:18,780
the things that when I started learning

00:20:16,440 --> 00:20:21,930
yet I found very different and hard to

00:20:18,780 --> 00:20:23,520
understand so they have this thing which

00:20:21,930 --> 00:20:25,320
of course it goes by three different

00:20:23,520 --> 00:20:26,940
names which if you're building software

00:20:25,320 --> 00:20:28,470
that's just what you do right you give

00:20:26,940 --> 00:20:31,050
everything three different names so some

00:20:28,470 --> 00:20:33,720
people call it the index some people

00:20:31,050 --> 00:20:37,350
call it the cash some people call it the

00:20:33,720 --> 00:20:38,820
staging area i'm going to call it the

00:20:37,350 --> 00:20:40,830
staging area and i want you to have that

00:20:38,820 --> 00:20:42,960
picture in your mind so i want you to

00:20:40,830 --> 00:20:46,020
imagine we're putting on a play and in

00:20:42,960 --> 00:20:47,610
this play we've got actors and the

00:20:46,020 --> 00:20:48,540
actors are dressed appropriately or in

00:20:47,610 --> 00:20:50,130
this case they're almost dressed

00:20:48,540 --> 00:20:51,990
appropriately that's a rehearsal they're

00:20:50,130 --> 00:20:53,910
all set up on stage and they're being

00:20:51,990 --> 00:20:55,050
blocked out so you're going to be here

00:20:53,910 --> 00:20:57,180
you're going to be here this is your

00:20:55,050 --> 00:20:59,220
line this is your line there are some

00:20:57,180 --> 00:21:00,960
people in this scene who aren't actually

00:20:59,220 --> 00:21:03,030
going to be part of the play they're

00:21:00,960 --> 00:21:05,070
there but they're not part of what we're

00:21:03,030 --> 00:21:07,770
trying to stage so you have to imagine

00:21:05,070 --> 00:21:09,390
that you're setting up a stage you're

00:21:07,770 --> 00:21:10,560
putting things exactly the way you want

00:21:09,390 --> 00:21:13,530
them and then you can take a picture of

00:21:10,560 --> 00:21:15,630
it and that is a commit so I'm going to

00:21:13,530 --> 00:21:17,730
have a series of files I'm going to have

00:21:15,630 --> 00:21:19,500
the files in exactly the state that I

00:21:17,730 --> 00:21:21,120
want them in with these changes this

00:21:19,500 --> 00:21:23,400
version of this and I'm going to then

00:21:21,120 --> 00:21:24,960
tell get to commit that and that commit

00:21:23,400 --> 00:21:27,180
is going to be what gets put into the

00:21:24,960 --> 00:21:31,080
database so before I can commit

00:21:27,180 --> 00:21:35,280
something I have to assemble a commit

00:21:31,080 --> 00:21:42,330
inside the staging area soget has this

00:21:35,280 --> 00:21:45,630
command called get ad and get RM so you

00:21:42,330 --> 00:21:47,250
add files when you add a file to get

00:21:45,630 --> 00:21:49,200
what you're doing is you're putting it

00:21:47,250 --> 00:21:50,940
in the staging area you're putting it on

00:21:49,200 --> 00:21:52,830
the stage exactly the way you want it

00:21:50,940 --> 00:21:55,380
you're saying this file I want it to

00:21:52,830 --> 00:21:56,490
look just like this when you get RM

00:21:55,380 --> 00:21:58,380
you're taking something out

00:21:56,490 --> 00:22:00,210
the staging area but you are committing

00:21:58,380 --> 00:22:02,040
it yet you're just putting it on the

00:22:00,210 --> 00:22:03,450
stage and getting ready for that moment

00:22:02,040 --> 00:22:05,400
when you're going to actually commit it

00:22:03,450 --> 00:22:07,260
and then once you commit you take what's

00:22:05,400 --> 00:22:09,720
in the staging area and you put that

00:22:07,260 --> 00:22:12,030
into the database so that's a major

00:22:09,720 --> 00:22:14,940
difference from subversion or CBS or

00:22:12,030 --> 00:22:16,440
other systems where you whatever is in

00:22:14,940 --> 00:22:19,590
your working directory you're going to

00:22:16,440 --> 00:22:21,920
commit that into next commit those files

00:22:19,590 --> 00:22:26,220
we're all going to get changed together

00:22:21,920 --> 00:22:28,020
here we don't work like that so get has

00:22:26,220 --> 00:22:31,290
a whole bunch of different files it

00:22:28,020 --> 00:22:33,510
treats files differently some files it

00:22:31,290 --> 00:22:35,010
tracks and some files it doesn't track

00:22:33,510 --> 00:22:37,020
so when you think about the staging area

00:22:35,010 --> 00:22:38,070
that guy in green is not going to be

00:22:37,020 --> 00:22:40,500
there on the night of the production

00:22:38,070 --> 00:22:41,580
he's the producer the director I don't

00:22:40,500 --> 00:22:43,110
know what he's doing but he's got some

00:22:41,580 --> 00:22:46,260
job helping the actors do what they're

00:22:43,110 --> 00:22:47,880
gonna do he's an untracked file then you

00:22:46,260 --> 00:22:50,460
have other people the main characters

00:22:47,880 --> 00:22:52,650
who will be there on the night and those

00:22:50,460 --> 00:22:54,660
are tracked files and get is watching

00:22:52,650 --> 00:22:57,300
those files and it's going to know if

00:22:54,660 --> 00:22:59,610
something happens to those files so we

00:22:57,300 --> 00:23:03,360
have both of those things happening we

00:22:59,610 --> 00:23:05,130
also have of the files that we're

00:23:03,360 --> 00:23:07,200
tracking get will know whether or not

00:23:05,130 --> 00:23:09,690
they've been changed and we can stage

00:23:07,200 --> 00:23:10,980
those changes or not i'm going to show

00:23:09,690 --> 00:23:13,530
you examples of all this because it's

00:23:10,980 --> 00:23:15,300
hard hard to understand exactly what i'm

00:23:13,530 --> 00:23:18,410
talking about in fact why don't I do

00:23:15,300 --> 00:23:18,410
that right now before I go any further

00:23:19,040 --> 00:23:26,190
so right now I have a snapshot of the

00:23:24,179 --> 00:23:27,780
file system checked out that's what my

00:23:26,190 --> 00:23:30,150
working directory is I have these

00:23:27,780 --> 00:23:37,320
versions of my files and I have a file

00:23:30,150 --> 00:23:40,850
they're called read neyo md this is the

00:23:37,320 --> 00:23:40,850
readme file and

00:23:47,180 --> 00:23:50,700
this is hilarious my keyboard isn't

00:23:49,200 --> 00:23:52,080
mapped properly well you know what I'll

00:23:50,700 --> 00:23:53,820
do I'm just going to delete a line of

00:23:52,080 --> 00:23:55,200
code does the change doesn't make any

00:23:53,820 --> 00:23:57,090
difference right now but I'm going to

00:23:55,200 --> 00:23:59,930
make a change to this file I'm going to

00:23:57,090 --> 00:24:02,250
save that file and I'm going to exit out

00:23:59,930 --> 00:24:04,080
and I'm going to use a commanded get

00:24:02,250 --> 00:24:05,400
called status you'll notice that all of

00:24:04,080 --> 00:24:06,810
the commands I'm giving yet are

00:24:05,400 --> 00:24:08,880
something that comes after the keyword

00:24:06,810 --> 00:24:10,080
get so you say get and then you give

00:24:08,880 --> 00:24:13,160
whatever command you're going to give

00:24:10,080 --> 00:24:18,200
get in this case the status command and

00:24:13,160 --> 00:24:22,260
get tells me that there are changes that

00:24:18,200 --> 00:24:25,280
have not been staged for commit so it

00:24:22,260 --> 00:24:28,500
says the readme file has been modified

00:24:25,280 --> 00:24:32,700
but it has not been changed or has not

00:24:28,500 --> 00:24:34,980
been staged so in other words gets aware

00:24:32,700 --> 00:24:37,290
of that change but it hasn't assembled

00:24:34,980 --> 00:24:41,280
it as part of a commit yet so I could do

00:24:37,290 --> 00:24:42,600
another one I could remove the license

00:24:41,280 --> 00:24:43,830
file which you should never do in an

00:24:42,600 --> 00:24:45,300
open source project this is an open

00:24:43,830 --> 00:24:50,430
source conference don't do this but here

00:24:45,300 --> 00:24:53,610
we are so I'm removing that file and it

00:24:50,430 --> 00:24:56,250
says well there's a problem here you

00:24:53,610 --> 00:25:00,240
deleted the license file and you modify

00:24:56,250 --> 00:25:03,570
the readme file so what I'd like to do

00:25:00,240 --> 00:25:05,130
now is I'd like to stage my commit I'd

00:25:03,570 --> 00:25:06,750
like to take some of the things that

00:25:05,130 --> 00:25:08,280
have changed in my working directory and

00:25:06,750 --> 00:25:10,650
I'd like to assemble it so I'm going to

00:25:08,280 --> 00:25:15,990
say to get I'd like to add the readme

00:25:10,650 --> 00:25:19,250
file and so now I have a

00:25:15,990 --> 00:25:23,430
different-looking status message it says

00:25:19,250 --> 00:25:24,990
some changes have been added to the

00:25:23,430 --> 00:25:26,910
staging it doesn't use the word staging

00:25:24,990 --> 00:25:28,800
but it says some changes are ready to be

00:25:26,910 --> 00:25:31,950
committed and other changes are not

00:25:28,800 --> 00:25:34,470
staged at all so get is quite happy for

00:25:31,950 --> 00:25:36,450
you to have a version of the code the

00:25:34,470 --> 00:25:38,670
current version of the code and some

00:25:36,450 --> 00:25:39,960
things have changed and some things you

00:25:38,670 --> 00:25:42,120
want to commit in some things you don't

00:25:39,960 --> 00:25:44,640
for example I don't actually want to

00:25:42,120 --> 00:25:46,500
delete that license file I did it but I

00:25:44,640 --> 00:25:49,830
want to undo it I don't want to commit

00:25:46,500 --> 00:25:52,140
that change so I'm putting together I'm

00:25:49,830 --> 00:25:55,470
assembling this commit I have this

00:25:52,140 --> 00:25:56,970
change to the readme file but down here

00:25:55,470 --> 00:25:58,080
i'm not going to do i'm not going to do

00:25:56,970 --> 00:26:05,190
this second part of it

00:25:58,080 --> 00:26:10,049
I talked about working with these hashes

00:26:05,190 --> 00:26:12,510
these Shaw's and I'm going to show you a

00:26:10,049 --> 00:26:13,500
workflow that most people use forget and

00:26:12,510 --> 00:26:17,760
you'll hear people talking about

00:26:13,500 --> 00:26:19,980
branches it's not possible for us to

00:26:17,760 --> 00:26:22,320
work with hashes or at least it's not

00:26:19,980 --> 00:26:23,700
possible for me to work with hashes when

00:26:22,320 --> 00:26:26,929
I'm trying to deal with something like

00:26:23,700 --> 00:26:31,409
code version and so what we do is we

00:26:26,929 --> 00:26:33,630
give commits names we give commits names

00:26:31,409 --> 00:26:36,350
in order that we can refer to them

00:26:33,630 --> 00:26:41,010
easily rather than having to deal with

00:26:36,350 --> 00:26:46,049
hashes and so on this is a technical

00:26:41,010 --> 00:26:47,070
diagram of branching and get and here's

00:26:46,049 --> 00:26:51,840
what I want you to understand about

00:26:47,070 --> 00:26:53,789
branching branches in other version

00:26:51,840 --> 00:26:56,610
control systems are often very

00:26:53,789 --> 00:26:59,279
heavy-handed affairs so in order to make

00:26:56,610 --> 00:27:00,840
a branch in a system like CVS I have to

00:26:59,279 --> 00:27:03,210
do that on the server I have to do that

00:27:00,840 --> 00:27:05,279
for everybody in the system making a

00:27:03,210 --> 00:27:07,169
branch becomes a political thing the

00:27:05,279 --> 00:27:08,789
company has to decide the group has the

00:27:07,169 --> 00:27:10,649
people have to make a decision because

00:27:08,789 --> 00:27:14,750
we have to maintain that branch over the

00:27:10,649 --> 00:27:18,809
long term well we're talking about get

00:27:14,750 --> 00:27:21,269
branches are super lightweight all they

00:27:18,809 --> 00:27:23,130
are is a name that I can give to a

00:27:21,269 --> 00:27:24,960
particular commit and it travels along

00:27:23,130 --> 00:27:26,820
with a commit so I'm trying to give you

00:27:24,960 --> 00:27:28,399
some pictures here because get it it

00:27:26,820 --> 00:27:30,450
doesn't lend itself to being there's

00:27:28,399 --> 00:27:33,059
75,000 commands and every one of them

00:27:30,450 --> 00:27:36,330
has 16 switches it's tricky but if you

00:27:33,059 --> 00:27:38,220
can remember Thomas the Tank Engine what

00:27:36,330 --> 00:27:40,799
you're doing when you branch is you're

00:27:38,220 --> 00:27:42,090
hooking an engine on to a set of cars

00:27:40,799 --> 00:27:44,370
and you're saying I wanted to go

00:27:42,090 --> 00:27:46,529
somewhere with these cars you can move a

00:27:44,370 --> 00:27:48,450
branch around because a branch is a name

00:27:46,529 --> 00:27:54,260
that is currently attached to a

00:27:48,450 --> 00:27:54,260
particular commit inside your repository

00:27:56,760 --> 00:28:06,460
so let me show you what I mean I'm

00:28:03,940 --> 00:28:08,710
currently on a branch called master so

00:28:06,460 --> 00:28:11,680
if you don't do anything else you are

00:28:08,710 --> 00:28:13,240
always on the master branch get has to

00:28:11,680 --> 00:28:15,070
be on a branch in order to do its work

00:28:13,240 --> 00:28:16,360
in the same way that a train needs a

00:28:15,070 --> 00:28:19,510
locomotive in order to move down the

00:28:16,360 --> 00:28:21,940
tracks so we have to have some kind of a

00:28:19,510 --> 00:28:24,490
branch and we start out on master but

00:28:21,940 --> 00:28:26,860
typically people don't want to make

00:28:24,490 --> 00:28:29,200
their changes on master people work on

00:28:26,860 --> 00:28:31,270
what we call topic branches or they work

00:28:29,200 --> 00:28:33,430
on a branch they go off on a sidetrack

00:28:31,270 --> 00:28:34,690
they do some work and then later on we

00:28:33,430 --> 00:28:37,810
decide whether or not we want to merge

00:28:34,690 --> 00:28:41,950
it in so there's a couple of different

00:28:37,810 --> 00:28:43,990
ways to make branches I'm just going to

00:28:41,950 --> 00:28:46,450
show you the one that most people use

00:28:43,990 --> 00:28:48,750
which is they check out with a branch

00:28:46,450 --> 00:28:48,750
name

00:28:53,690 --> 00:28:59,990
so what I just did was I asked it to

00:28:56,990 --> 00:29:01,549
check out a branch and I said dash B

00:28:59,990 --> 00:29:04,309
which means create a branch called

00:29:01,549 --> 00:29:05,659
experiment and what it does it said it

00:29:04,309 --> 00:29:09,590
switched to a new branch called

00:29:05,659 --> 00:29:11,750
experiment and if I say get branch right

00:29:09,590 --> 00:29:13,610
now it shows me that I have two branches

00:29:11,750 --> 00:29:15,889
one of them is called experiment and one

00:29:13,610 --> 00:29:18,169
of them call it is called master and I

00:29:15,889 --> 00:29:19,940
have that asterisk beside experiment and

00:29:18,169 --> 00:29:22,399
it's lit up in green and it's saying to

00:29:19,940 --> 00:29:23,990
me whatever you do right now the

00:29:22,399 --> 00:29:26,750
locomotive that's going to go forward is

00:29:23,990 --> 00:29:30,649
experiment not master master continues

00:29:26,750 --> 00:29:32,840
to be where it's at so if I ask it to if

00:29:30,649 --> 00:29:39,279
I say please get show me where my

00:29:32,840 --> 00:29:39,279
committees be 42 to be let me do this

00:29:43,210 --> 00:29:49,909
what I want you to see is that both of

00:29:45,830 --> 00:29:52,580
those branches are currently pointed at

00:29:49,909 --> 00:29:56,330
the exact same commit the same version

00:29:52,580 --> 00:29:57,860
of the code same the same commit two

00:29:56,330 --> 00:30:00,409
different names they both point to the

00:29:57,860 --> 00:30:02,029
same thing but in the same way that i

00:30:00,409 --> 00:30:04,220
can connect one locomotive or another

00:30:02,029 --> 00:30:05,600
local work to a train I can move it off

00:30:04,220 --> 00:30:08,659
in different directions so right now I'm

00:30:05,600 --> 00:30:10,610
on the experiment branch and I've got

00:30:08,659 --> 00:30:13,580
one change that's ready to be committed

00:30:10,610 --> 00:30:19,340
that's been staged that read me so I'm

00:30:13,580 --> 00:30:20,509
going to commit that change so this is a

00:30:19,340 --> 00:30:22,399
change of the review that I actually

00:30:20,509 --> 00:30:25,250
don't want to do but I'm going to do it

00:30:22,399 --> 00:30:26,659
so I'm going to take this set of changes

00:30:25,250 --> 00:30:28,580
and I'm going to commit it now notice

00:30:26,659 --> 00:30:31,059
that I'm not specifying which files I

00:30:28,580 --> 00:30:33,200
want to commit so I'm not saying to get

00:30:31,059 --> 00:30:35,179
take this change this change in this

00:30:33,200 --> 00:30:37,490
change and commit it I've already done

00:30:35,179 --> 00:30:40,610
that I did that with my staging area so

00:30:37,490 --> 00:30:43,220
my staging area is going to take the

00:30:40,610 --> 00:30:45,379
files in their current state or if I

00:30:43,220 --> 00:30:46,879
want to put a change in there I have to

00:30:45,379 --> 00:30:48,710
stage that change i have to add that

00:30:46,879 --> 00:30:50,090
change to the state of the world and i

00:30:48,710 --> 00:30:52,450
have a snapshot that i'm going to put in

00:30:50,090 --> 00:30:52,450
there now

00:30:56,259 --> 00:31:00,470
I've created a new commit so let me do

00:30:59,239 --> 00:31:06,470
the same thing again that I did a moment

00:31:00,470 --> 00:31:13,009
ago the master branch still points to be

00:31:06,470 --> 00:31:15,200
to FF v and i have a new commit my

00:31:13,009 --> 00:31:21,080
experiment branch points to something

00:31:15,200 --> 00:31:25,090
else it points to 2d 970 6 was written

00:31:21,080 --> 00:31:27,710
by me this is the change that I made

00:31:25,090 --> 00:31:31,519
it's an inspired change which I'm sure

00:31:27,710 --> 00:31:34,720
Adobe will happily accept you can look

00:31:31,519 --> 00:31:38,779
forward in the release 1.6 of brackets

00:31:34,720 --> 00:31:41,269
but notice that if I do so remember this

00:31:38,779 --> 00:31:47,210
number B to FB you've memorized it

00:31:41,269 --> 00:31:50,450
already what do we see you see that be

00:31:47,210 --> 00:31:53,659
too sorry bf2 to be is the second commit

00:31:50,450 --> 00:31:54,950
and there's one commit on top of that so

00:31:53,659 --> 00:31:56,509
what I've been able to do with my branch

00:31:54,950 --> 00:31:58,549
is I've been able to go off in a

00:31:56,509 --> 00:32:04,090
different direction and start building

00:31:58,549 --> 00:32:04,090
on that code so if I were to draw this

00:32:21,440 --> 00:32:28,799
it allowed me to put a new commit in and

00:32:24,600 --> 00:32:30,899
then it advanced my pointer forward to

00:32:28,799 --> 00:32:33,419
this new commit so the only thing that a

00:32:30,899 --> 00:32:35,700
branch is and get is a name that's

00:32:33,419 --> 00:32:37,860
attached to a particular commit and if

00:32:35,700 --> 00:32:40,110
you commit on a branch it moves that

00:32:37,860 --> 00:32:45,779
branch forward let's do another let's

00:32:40,110 --> 00:32:53,100
let me show you an let's make another

00:32:45,779 --> 00:32:54,960
change to the readme you can see the

00:32:53,100 --> 00:32:57,210
change to the readme is there I'm going

00:32:54,960 --> 00:33:07,500
to I'm going to stage that change i'm

00:32:57,210 --> 00:33:10,070
going to say add read me and i'm going

00:33:07,500 --> 00:33:10,070
to commit that

00:33:15,919 --> 00:33:23,220
and what's happening here is that every

00:33:18,359 --> 00:33:25,139
time I commit it's advancing that Thomas

00:33:23,220 --> 00:33:26,909
the tranq imagine it just pulling along

00:33:25,139 --> 00:33:29,279
forward it's getting further and further

00:33:26,909 --> 00:33:31,619
away from the master branch master

00:33:29,279 --> 00:33:33,239
branch is still back here that was the

00:33:31,619 --> 00:33:34,619
original one that's what the code where

00:33:33,239 --> 00:33:36,690
it was before I started doing all of

00:33:34,619 --> 00:33:40,139
this work but I now have a bunch of

00:33:36,690 --> 00:33:43,499
commits here which I'm calling

00:33:40,139 --> 00:33:45,600
experiment and there some other thing

00:33:43,499 --> 00:33:50,970
that nobody else has they only currently

00:33:45,600 --> 00:33:52,350
exist in my repository here so you're

00:33:50,970 --> 00:33:55,350
always on a branch are on the master

00:33:52,350 --> 00:33:56,909
branch unless you jump off and decide I

00:33:55,350 --> 00:33:59,159
want to do some other experimental work

00:33:56,909 --> 00:34:03,179
most people do their work on other

00:33:59,159 --> 00:34:10,349
branches and then merge them back in

00:34:03,179 --> 00:34:11,549
later so there's like again get-get is

00:34:10,349 --> 00:34:13,980
tricky because it has to be learned

00:34:11,549 --> 00:34:15,720
there are so many different commands and

00:34:13,980 --> 00:34:18,059
so many different workflows it doesn't

00:34:15,720 --> 00:34:19,770
impose one particular way of working and

00:34:18,059 --> 00:34:21,569
my goal today isn't to try and teach all

00:34:19,770 --> 00:34:23,159
of them to you I want a more give you an

00:34:21,569 --> 00:34:24,359
awareness that they exist so when you're

00:34:23,159 --> 00:34:28,470
going to learn them you have you have

00:34:24,359 --> 00:34:30,960
some sense of it the names are

00:34:28,470 --> 00:34:33,929
completely arbitrary so I can call my

00:34:30,960 --> 00:34:36,599
branches whatever I want I typically

00:34:33,929 --> 00:34:38,819
refer to my branches using the name of a

00:34:36,599 --> 00:34:41,280
bug so if I'm fixing bug number one two

00:34:38,819 --> 00:34:43,679
three I call my branch bug one two three

00:34:41,280 --> 00:34:46,230
or anything else that makes sense to me

00:34:43,679 --> 00:34:47,700
the branch that I'm making is only here

00:34:46,230 --> 00:34:49,799
on this computer it's on this laptop

00:34:47,700 --> 00:34:51,659
it's not anywhere else so I have

00:34:49,799 --> 00:34:53,669
complete freedom to name my branches

00:34:51,659 --> 00:34:55,559
however I would like I'm not limited in

00:34:53,669 --> 00:34:58,020
any way because all I'm doing is I'm

00:34:55,559 --> 00:34:59,430
making a name that makes sense to me so

00:34:58,020 --> 00:35:03,680
that it's attached to these commits and

00:34:59,430 --> 00:35:08,160
I can jump around between them it has

00:35:03,680 --> 00:35:11,970
ways for us to be able to merge other

00:35:08,160 --> 00:35:14,040
commits together so for example if I

00:35:11,970 --> 00:35:16,230
wanted to take my work that I've been

00:35:14,040 --> 00:35:22,049
doing here and I wanted to merge it into

00:35:16,230 --> 00:35:24,930
the master branch I could do that what

00:35:22,049 --> 00:35:27,960
what it will look like is the following

00:35:24,930 --> 00:35:30,839
I will make a new commit that links

00:35:27,960 --> 00:35:41,940
these two branches together so if i were

00:35:30,839 --> 00:35:45,680
to check out the master branch it merges

00:35:41,940 --> 00:35:47,490
it merges those together and now

00:35:45,680 --> 00:35:48,960
actually it didn't do this it did a

00:35:47,490 --> 00:35:51,030
fast-forward mirchi just moved the

00:35:48,960 --> 00:35:52,980
master pointer over here so master is

00:35:51,030 --> 00:35:55,470
now pointing at this so when you're

00:35:52,980 --> 00:35:57,150
working with branches inside get all

00:35:55,470 --> 00:35:58,920
you're doing is you're shuffling around

00:35:57,150 --> 00:36:01,230
these names and you're having the names

00:35:58,920 --> 00:36:02,700
point to different commits and so

00:36:01,230 --> 00:36:05,339
they're branching is very lightweight

00:36:02,700 --> 00:36:16,710
you branch all the time and get because

00:36:05,339 --> 00:36:18,690
it's so cheap to do it I want to talk

00:36:16,710 --> 00:36:22,080
about the distributed nature of get and

00:36:18,690 --> 00:36:23,190
again I want to leave you with some I

00:36:22,080 --> 00:36:27,060
want to leave you with an image as

00:36:23,190 --> 00:36:29,490
opposed to a set of commands so I want

00:36:27,060 --> 00:36:30,990
you to imagine the right way to think

00:36:29,490 --> 00:36:35,430
about this is as some sort of Star Trek

00:36:30,990 --> 00:36:39,890
plot so you're you're going out into

00:36:35,430 --> 00:36:41,970
space this vast unknowable universe and

00:36:39,890 --> 00:36:44,310
there's four of you working on this

00:36:41,970 --> 00:36:45,780
project and you're all going to work

00:36:44,310 --> 00:36:48,119
together but you're going to go off in

00:36:45,780 --> 00:36:49,140
different directions each one of these

00:36:48,119 --> 00:36:51,150
ships is going to go off in a different

00:36:49,140 --> 00:36:54,589
direction and each one of these ships is

00:36:51,150 --> 00:36:58,500
going to map some portion of the galaxy

00:36:54,589 --> 00:37:00,420
there you are working away mapping your

00:36:58,500 --> 00:37:02,730
area of the Delta Quadrant or whatever

00:37:00,420 --> 00:37:05,220
it is you're doing and imagine that

00:37:02,730 --> 00:37:06,300
every one of those little star points is

00:37:05,220 --> 00:37:09,000
a version of the code that you've

00:37:06,300 --> 00:37:10,530
written you fix a bug you fix a bug you

00:37:09,000 --> 00:37:12,420
write this you do an experiment you

00:37:10,530 --> 00:37:15,480
write a test every one of those is some

00:37:12,420 --> 00:37:17,490
piece of code that you are snapshotting

00:37:15,480 --> 00:37:20,130
in to get but every one of those

00:37:17,490 --> 00:37:24,089
snapshots that map that you're building

00:37:20,130 --> 00:37:27,930
that star map it's all local to your

00:37:24,089 --> 00:37:29,820
ship you don't currently have a complete

00:37:27,930 --> 00:37:31,650
picture of the whole universe this ship

00:37:29,820 --> 00:37:34,050
knows about this area your ship knows

00:37:31,650 --> 00:37:36,869
about some other area and you develop

00:37:34,050 --> 00:37:39,630
this map that says okay here's all the

00:37:36,869 --> 00:37:43,070
stars that we have we visited these are

00:37:39,630 --> 00:37:43,070
the places that we've been

00:37:43,650 --> 00:37:46,930
eventually what you want to be able to

00:37:45,430 --> 00:37:48,700
do is you want to be able to come back

00:37:46,930 --> 00:37:50,680
together what I don't know where

00:37:48,700 --> 00:37:53,410
starships meet but when those starships

00:37:50,680 --> 00:37:55,630
need when the stars align if you will

00:37:53,410 --> 00:37:58,270
you want to come back together and you

00:37:55,630 --> 00:38:00,460
want to be able to share that map that

00:37:58,270 --> 00:38:03,099
you have gathered with the others in

00:38:00,460 --> 00:38:04,450
your group in your my metaphors break

00:38:03,099 --> 00:38:06,099
down but you want to be able to share

00:38:04,450 --> 00:38:07,720
your portion of the map with everyone

00:38:06,099 --> 00:38:10,390
else and eventually you're going to have

00:38:07,720 --> 00:38:13,210
some larger set of a map of the whole

00:38:10,390 --> 00:38:16,359
world of what's going on get is very

00:38:13,210 --> 00:38:19,240
much like that nobody has a complete map

00:38:16,359 --> 00:38:21,280
of everything that's going on you have a

00:38:19,240 --> 00:38:22,829
bit of what this person has given you

00:38:21,280 --> 00:38:25,240
the changes they've made in their

00:38:22,829 --> 00:38:28,000
repository and they have a bit of what

00:38:25,240 --> 00:38:31,210
you've made and so on so when I clone a

00:38:28,000 --> 00:38:33,430
repository from someone that clone is

00:38:31,210 --> 00:38:34,960
completely disconnected there's no

00:38:33,430 --> 00:38:37,690
communication back and forth between

00:38:34,960 --> 00:38:41,319
those repositories I downloaded

00:38:37,690 --> 00:38:43,270
everything Adobe had as of today but

00:38:41,319 --> 00:38:45,460
whatever they do from today forward I

00:38:43,270 --> 00:38:49,059
don't have it in my repository anymore

00:38:45,460 --> 00:38:51,040
it's disconnected so we need a way to be

00:38:49,059 --> 00:38:52,869
able to work without a network because I

00:38:51,040 --> 00:38:55,390
told you you don't need a network I make

00:38:52,869 --> 00:38:57,069
changes i fix bugs and I do my own work

00:38:55,390 --> 00:38:58,480
but eventually what I want to be able to

00:38:57,069 --> 00:39:02,950
do is I want to be able to share that

00:38:58,480 --> 00:39:08,200
back with another repository so I didn't

00:39:02,950 --> 00:39:11,260
get we have a concept of remotes and a

00:39:08,200 --> 00:39:14,770
remote is another repository that lives

00:39:11,260 --> 00:39:16,869
somewhere on the network in the olden

00:39:14,770 --> 00:39:19,359
days when you use subversion or CVS

00:39:16,869 --> 00:39:21,339
there was one server and everybody who

00:39:19,359 --> 00:39:24,400
would check out the code would talk back

00:39:21,339 --> 00:39:26,049
to that central server and you would it

00:39:24,400 --> 00:39:28,240
would is hierarchical you went back and

00:39:26,049 --> 00:39:30,520
forth like this today it doesn't work

00:39:28,240 --> 00:39:32,380
like that you can have a huge team and

00:39:30,520 --> 00:39:34,000
you might only interact with three or

00:39:32,380 --> 00:39:35,680
four of the people and the rest of the

00:39:34,000 --> 00:39:37,420
people work off somewhere else and you

00:39:35,680 --> 00:39:39,670
don't have to have all of the code that

00:39:37,420 --> 00:39:42,640
they do you just need to have the code

00:39:39,670 --> 00:39:46,569
for the parts that you're working on so

00:39:42,640 --> 00:39:48,280
it gives us I actually missed one come

00:39:46,569 --> 00:39:51,339
in here there's push so there's three

00:39:48,280 --> 00:39:54,960
commands that we use in order to share

00:39:51,339 --> 00:39:58,020
commits in a network one of them is

00:39:54,960 --> 00:40:01,830
fetch one of them is pull and the other

00:39:58,020 --> 00:40:04,740
one is push push sends the commits that

00:40:01,830 --> 00:40:07,109
I have on my repository to the other

00:40:04,740 --> 00:40:09,810
repository and fetch and pull do the

00:40:07,109 --> 00:40:17,130
opposite so let me let me show you an

00:40:09,810 --> 00:40:25,020
example I'll come back to that so here

00:40:17,130 --> 00:40:28,650
is my fork of the my fork of the

00:40:25,020 --> 00:40:31,080
brackets code base and Gideon's here

00:40:28,650 --> 00:40:32,580
skid ians one of my former students

00:40:31,080 --> 00:40:34,770
who's working on the project with me and

00:40:32,580 --> 00:40:39,000
he's been working on this too so Gideon

00:40:34,770 --> 00:40:42,650
has a fork of the brackets repository so

00:40:39,000 --> 00:40:45,690
I'm going to grab his a URL to his

00:40:42,650 --> 00:40:49,950
version of this repository and I'm going

00:40:45,690 --> 00:40:59,220
to attach it to mine so I'm going to

00:40:49,950 --> 00:41:01,140
tell get that I want to add a remote I'm

00:40:59,220 --> 00:41:03,540
going to give it the URL to this far

00:41:01,140 --> 00:41:06,330
away remote repository on the internet

00:41:03,540 --> 00:41:11,700
and I'd like to refer to it as Gideon

00:41:06,330 --> 00:41:18,750
and it says fine and then i'm going to

00:41:11,700 --> 00:41:21,420
ask get to fetch from Gideon and how

00:41:18,750 --> 00:41:24,990
busy is Gideon been very busy so there

00:41:21,420 --> 00:41:26,849
I've just pulled down a whole bunch of

00:41:24,990 --> 00:41:29,339
I've pulled down if you if you want to

00:41:26,849 --> 00:41:31,200
continue with my metaphor his version of

00:41:29,339 --> 00:41:33,480
the star map so there's more out there

00:41:31,200 --> 00:41:35,910
than what I knew about before and I've

00:41:33,480 --> 00:41:38,099
just been able to download all of it to

00:41:35,910 --> 00:41:42,359
this repository and then disconnect from

00:41:38,099 --> 00:41:46,349
it and so get uses a synchronization

00:41:42,359 --> 00:41:49,770
model like this you pull and fetch pull

00:41:46,349 --> 00:41:51,720
and push commits or snapshots of the way

00:41:49,770 --> 00:41:54,210
the code looked at a particular point in

00:41:51,720 --> 00:41:57,630
time and you share them now you can see

00:41:54,210 --> 00:41:59,820
that here it has not only downloaded all

00:41:57,630 --> 00:42:01,890
of these different commits but it's also

00:41:59,820 --> 00:42:03,990
downloaded some of the branches of

00:42:01,890 --> 00:42:07,230
things that Gideon you are working on

00:42:03,990 --> 00:42:08,049
and so I now have exactly what Gideon

00:42:07,230 --> 00:42:11,499
has

00:42:08,049 --> 00:42:14,559
on his machine and I can grab a version

00:42:11,499 --> 00:42:17,729
of the code for something that he might

00:42:14,559 --> 00:42:21,279
be working on which is a very powerful

00:42:17,729 --> 00:42:23,619
very powerful for me because I can get

00:42:21,279 --> 00:42:25,599
my computer to the same state that one

00:42:23,619 --> 00:42:27,369
of my other colleagues is working in I

00:42:25,599 --> 00:42:29,469
can say to them let me just pull in

00:42:27,369 --> 00:42:32,229
exactly what you have on your computer

00:42:29,469 --> 00:42:34,599
and I now have that same version on mine

00:42:32,229 --> 00:42:38,319
but it means that we can work sideways

00:42:34,599 --> 00:42:40,269
so I don't have to have the permission

00:42:38,319 --> 00:42:42,609
of a particular I don't have Adobe's

00:42:40,269 --> 00:42:45,069
permission for example to be able to

00:42:42,609 --> 00:42:47,019
share something with Gideon he and I can

00:42:45,069 --> 00:42:49,390
work without Gideon's / without Adobe's

00:42:47,019 --> 00:42:51,400
permission as it were we cloned that

00:42:49,390 --> 00:42:52,929
repository make changes and then share

00:42:51,400 --> 00:43:02,109
things back and forth between one

00:42:52,929 --> 00:43:05,650
another there are complexities to this

00:43:02,109 --> 00:43:11,199
because fetching and pulling mean two

00:43:05,650 --> 00:43:14,499
different things a fetch downloads those

00:43:11,199 --> 00:43:16,959
commits and it's very much like if you

00:43:14,499 --> 00:43:18,670
think of get as a database of snapshots

00:43:16,959 --> 00:43:21,339
all you're doing is downloading all of

00:43:18,670 --> 00:43:23,920
those snapshots so a fetch is always a

00:43:21,339 --> 00:43:26,380
safe command to run because all it will

00:43:23,920 --> 00:43:30,339
do is download and store those objects

00:43:26,380 --> 00:43:32,469
in your database a poll is different

00:43:30,339 --> 00:43:34,809
than a fetch because it does an

00:43:32,469 --> 00:43:37,059
additional step and I would caution you

00:43:34,809 --> 00:43:39,789
against doing polls because you will get

00:43:37,059 --> 00:43:45,130
yourself into trouble and not mean to a

00:43:39,789 --> 00:43:46,989
poll does a fetch and emerge so it's

00:43:45,130 --> 00:43:49,119
basically like saying I'd like to take

00:43:46,989 --> 00:43:51,069
the version of code that Gideon's on I'd

00:43:49,119 --> 00:43:53,769
like to pull down all of his commits and

00:43:51,069 --> 00:43:55,779
I'd like to move my branch pointer

00:43:53,769 --> 00:43:58,779
forward to wherever he is I want to

00:43:55,779 --> 00:44:01,359
combine my code in his code which can be

00:43:58,779 --> 00:44:02,769
what you want but often isn't what you

00:44:01,359 --> 00:44:05,859
want if all you want to do is download

00:44:02,769 --> 00:44:08,709
other people's code into yours so it's

00:44:05,859 --> 00:44:10,539
very common as a workflow to fetch from

00:44:08,709 --> 00:44:13,359
other repositories or fetch from other

00:44:10,539 --> 00:44:15,579
people and then if I want to go to a

00:44:13,359 --> 00:44:17,920
particular commit so for example let's

00:44:15,579 --> 00:44:21,130
say I was interested in this branch that

00:44:17,920 --> 00:44:22,869
Gideon was working on issue 121

00:44:21,130 --> 00:44:26,349
what it's telling me here is that it has

00:44:22,869 --> 00:44:29,140
created a branch in my repository called

00:44:26,349 --> 00:44:32,200
issue 1 21 which points to the same

00:44:29,140 --> 00:44:34,650
commit as Gideon's issue 1 21 so I can

00:44:32,200 --> 00:44:40,000
tell get that I want to check out issue

00:44:34,650 --> 00:44:40,990
1 21 and now I'm on I don't even know

00:44:40,000 --> 00:44:47,259
where I am I don't know what you were

00:44:40,990 --> 00:44:48,519
doing on issue 1 21 nope because it

00:44:47,259 --> 00:44:51,150
already points to it so it set up a

00:44:48,519 --> 00:44:56,319
tracking branch so this local branch

00:44:51,150 --> 00:44:59,529
points to I could do you yeah I can do

00:44:56,319 --> 00:45:01,119
get show here's what you were doing so

00:44:59,529 --> 00:45:05,019
the last thing that Gideon was doing on

00:45:01,119 --> 00:45:07,690
this branch is that which looks

00:45:05,019 --> 00:45:09,730
important you were doing something and

00:45:07,690 --> 00:45:11,680
we could we could go and look at the

00:45:09,730 --> 00:45:13,660
code we can see that he's adding lots of

00:45:11,680 --> 00:45:16,329
lines of code and deleting some lines of

00:45:13,660 --> 00:45:18,640
code and so on but the important part is

00:45:16,329 --> 00:45:21,220
that I've been able to get my file

00:45:18,640 --> 00:45:23,170
system in the exact same state that his

00:45:21,220 --> 00:45:25,690
file system was in when he was working

00:45:23,170 --> 00:45:27,609
it on his computer because he took a

00:45:25,690 --> 00:45:29,230
snapshot of his file system at that

00:45:27,609 --> 00:45:33,009
point in time and put it into his

00:45:29,230 --> 00:45:34,539
machine some of you use use max I see a

00:45:33,009 --> 00:45:38,140
few of you using max here did anyone use

00:45:34,539 --> 00:45:40,230
time machine on there macking what so

00:45:38,140 --> 00:45:42,910
time machine is this great feature where

00:45:40,230 --> 00:45:45,460
every hour or whatever it is it takes

00:45:42,910 --> 00:45:47,289
your hard drive and it just saves it so

00:45:45,460 --> 00:45:50,109
you have this version of your hard drive

00:45:47,289 --> 00:45:50,890
from an hour ago a day ago a month ago

00:45:50,109 --> 00:45:54,369
and you have all these different

00:45:50,890 --> 00:45:56,799
versions get is exactly like that but

00:45:54,369 --> 00:45:58,420
you're in control of when it happens so

00:45:56,799 --> 00:46:00,460
you're saying i'd like to snapshot this

00:45:58,420 --> 00:46:02,829
version of it this version of it this

00:46:00,460 --> 00:46:07,380
version of it and then you can jump back

00:46:02,829 --> 00:46:07,380
and forth between all of these in theory

00:46:10,650 --> 00:46:18,930
here's the initial commit from december

00:46:15,160 --> 00:46:18,930
seven 2011

00:46:25,810 --> 00:46:32,180
that's all there was was a readme in a

00:46:28,850 --> 00:46:34,670
source directory back in 2011 for this

00:46:32,180 --> 00:46:37,370
particular repository like every single

00:46:34,670 --> 00:46:40,720
snapshot adverse of this code I have it

00:46:37,370 --> 00:46:43,730
I don't know what the readme looked like

00:46:40,720 --> 00:46:45,170
there it was a tiny little file this was

00:46:43,730 --> 00:46:47,600
the very first commit that they made

00:46:45,170 --> 00:46:49,250
when they started up this repository and

00:46:47,600 --> 00:46:58,820
I can go back and forth or i can say to

00:46:49,250 --> 00:47:00,230
get go back to master and it's now

00:46:58,820 --> 00:47:02,090
brought back all of those files

00:47:00,230 --> 00:47:04,310
seemingly they were gone now they're

00:47:02,090 --> 00:47:07,130
back again so really what get is doing

00:47:04,310 --> 00:47:08,810
its storing a complete database of all

00:47:07,130 --> 00:47:11,090
those versions and then it's letting me

00:47:08,810 --> 00:47:13,550
selectively pull them out of storage and

00:47:11,090 --> 00:47:15,200
re you know pour water on them and

00:47:13,550 --> 00:47:17,720
reconstitute them and now I have them

00:47:15,200 --> 00:47:20,090
sitting in that directory or add a new

00:47:17,720 --> 00:47:22,550
one to the mix and then be able to share

00:47:20,090 --> 00:47:24,860
it with my colleagues send that off so

00:47:22,550 --> 00:47:27,590
that other people can can make use of

00:47:24,860 --> 00:47:29,060
this I put this in partly because it's

00:47:27,590 --> 00:47:31,010
Halloween tomorrow I'm so happy

00:47:29,060 --> 00:47:35,390
Halloween you're all dressed up for

00:47:31,010 --> 00:47:38,330
Halloween as I can see this is the

00:47:35,390 --> 00:47:40,820
scariest command didn't get and that is

00:47:38,330 --> 00:47:42,860
get pushed Jeff because what it does is

00:47:40,820 --> 00:47:45,560
it overwrites whatever is on the remote

00:47:42,860 --> 00:47:47,390
commit it forces whatever you're trying

00:47:45,560 --> 00:47:49,460
to do so one of the things when you're

00:47:47,390 --> 00:47:51,920
learning about get be very wary of

00:47:49,460 --> 00:47:55,070
commands that end in dash F because you

00:47:51,920 --> 00:47:57,230
can force get to do things and get will

00:47:55,070 --> 00:47:59,060
allow you to force it to do things but

00:47:57,230 --> 00:48:01,700
you often don't want to do that kid is

00:47:59,060 --> 00:48:04,010
very good at protecting you from hurting

00:48:01,700 --> 00:48:05,900
yourself by refusing to complete lots of

00:48:04,010 --> 00:48:07,460
commands in ways that seem very

00:48:05,900 --> 00:48:09,290
frustrating you're like kid I know what

00:48:07,460 --> 00:48:11,450
I'm doing and then an hour later I

00:48:09,290 --> 00:48:16,010
didn't know what I was doing and I wish

00:48:11,450 --> 00:48:18,950
I hadn't I wish I hadn't forced that I'm

00:48:16,010 --> 00:48:20,000
going to skip ahead here and just for

00:48:18,950 --> 00:48:21,170
sake of times I'm going to run there's

00:48:20,000 --> 00:48:23,920
so many things we could talk about but

00:48:21,170 --> 00:48:28,250
we've been talking about github and

00:48:23,920 --> 00:48:30,560
github almost exists in parallel with

00:48:28,250 --> 00:48:33,110
get the difference between git and

00:48:30,560 --> 00:48:34,099
github get is a command line tool and

00:48:33,110 --> 00:48:37,819
github is base

00:48:34,099 --> 00:48:40,069
likely hosting for git repositories so

00:48:37,819 --> 00:48:45,470
if I'm working on an open source project

00:48:40,069 --> 00:48:47,569
I can store my open source project on

00:48:45,470 --> 00:48:49,729
get for free so get is really giving you

00:48:47,569 --> 00:48:51,499
hard drive space and they're adding a

00:48:49,729 --> 00:48:53,900
few extra niceties they're adding things

00:48:51,499 --> 00:48:56,869
like wiki's the ability to do issue

00:48:53,900 --> 00:48:58,880
tracking and some social features so

00:48:56,869 --> 00:49:01,549
lots of developers use it because it's

00:48:58,880 --> 00:49:04,400
it's it's Facebook for developers if you

00:49:01,549 --> 00:49:06,529
will and being able to instead of share

00:49:04,400 --> 00:49:08,150
pictures of whatever they were doing on

00:49:06,529 --> 00:49:10,729
the weekend they share commits from the

00:49:08,150 --> 00:49:12,680
code bases they're working in it also

00:49:10,729 --> 00:49:14,839
has the ability for us to host websites

00:49:12,680 --> 00:49:16,099
so lots of people use it to host there

00:49:14,839 --> 00:49:19,609
but how many people are hosting their

00:49:16,099 --> 00:49:21,739
blog from github right now only one hand

00:49:19,609 --> 00:49:23,269
goes up while all of you could be and

00:49:21,739 --> 00:49:25,910
you could be saving all kinds of money

00:49:23,269 --> 00:49:28,039
by using their infrastructure so that's

00:49:25,910 --> 00:49:31,430
been one of the things that github has

00:49:28,039 --> 00:49:33,589
been important for this has come up as a

00:49:31,430 --> 00:49:35,479
meme lots of times and some people in

00:49:33,589 --> 00:49:37,819
the early days of github said they

00:49:35,479 --> 00:49:41,329
thought of github as your resume being

00:49:37,819 --> 00:49:43,640
able to share all the work you did on

00:49:41,329 --> 00:49:45,739
projects and so on and this has really

00:49:43,640 --> 00:49:48,259
fallen out of favor this idea of github

00:49:45,739 --> 00:49:50,900
as your resume I think I would challenge

00:49:48,259 --> 00:49:52,069
you and I would say that github and get

00:49:50,900 --> 00:49:54,319
I would think of them more as your

00:49:52,069 --> 00:49:57,319
license it's almost the way that you

00:49:54,319 --> 00:49:59,749
participate in development work these

00:49:57,319 --> 00:50:01,670
days because so many people are putting

00:49:59,749 --> 00:50:03,440
their code on get and github it's the

00:50:01,670 --> 00:50:06,410
bar you have to be able to get over in

00:50:03,440 --> 00:50:07,519
order to participate it used to be once

00:50:06,410 --> 00:50:09,440
upon a time if we were holding this

00:50:07,519 --> 00:50:11,779
conference back you know ten years ago I

00:50:09,440 --> 00:50:14,809
might have told you to go to some cake

00:50:11,779 --> 00:50:16,400
oh I can't even think what it's called

00:50:14,809 --> 00:50:18,410
now where did we used to sourceforge

00:50:16,400 --> 00:50:20,660
remember sourceforge don't download

00:50:18,410 --> 00:50:23,329
anything resource words today but there

00:50:20,660 --> 00:50:25,249
was a time where other places would host

00:50:23,329 --> 00:50:27,950
your code for you and it had bug

00:50:25,249 --> 00:50:30,529
trackers and wikis and so on but today

00:50:27,950 --> 00:50:32,930
in order to be able to participate on

00:50:30,529 --> 00:50:34,969
the web your license as you will is

00:50:32,930 --> 00:50:37,519
having an awareness or having an ability

00:50:34,969 --> 00:50:40,999
to be able to work with this this

00:50:37,519 --> 00:50:44,089
project I want to wrap up with just one

00:50:40,999 --> 00:50:46,140
teaser to show you why get is so

00:50:44,089 --> 00:50:49,589
powerful so

00:50:46,140 --> 00:50:51,660
I want to tell you the story of a bug

00:50:49,589 --> 00:50:52,980
and this happens all the time we were

00:50:51,660 --> 00:50:55,640
just talking about about it at lunch

00:50:52,980 --> 00:50:58,260
actually about doing regression testing

00:50:55,640 --> 00:51:01,440
typical thing in an open in any large

00:50:58,260 --> 00:51:04,349
software project somebody introduces a

00:51:01,440 --> 00:51:06,510
bug and it goes unnoticed for some

00:51:04,349 --> 00:51:08,309
period of time until somebody notices it

00:51:06,510 --> 00:51:12,450
and discovers okay this this has to be

00:51:08,309 --> 00:51:15,289
fixed so in the olden days what it would

00:51:12,450 --> 00:51:18,180
mean is that you would have to download

00:51:15,289 --> 00:51:22,170
various released versions of a project

00:51:18,180 --> 00:51:25,799
and try and find the window of time in

00:51:22,170 --> 00:51:27,539
which that bug got introduced so there's

00:51:25,799 --> 00:51:28,769
a bug you go back a bit further there's

00:51:27,539 --> 00:51:30,089
the bug you go back a bit further

00:51:28,769 --> 00:51:32,099
there's the bug and eventually oh

00:51:30,089 --> 00:51:34,799
there's no bug you try and find that

00:51:32,099 --> 00:51:37,559
smallest window that you can find in

00:51:34,799 --> 00:51:39,779
order to tell the developers it happened

00:51:37,559 --> 00:51:41,819
sometime in May and you're like I know

00:51:39,779 --> 00:51:43,380
that because we used to ship once a

00:51:41,819 --> 00:51:47,010
month and we would have all of this

00:51:43,380 --> 00:51:57,329
working so let me see if I can show you

00:51:47,010 --> 00:52:02,009
this no here's the bug we hit Auto

00:51:57,329 --> 00:52:04,650
completing as you type in the URL for a

00:52:02,009 --> 00:52:07,170
particular image it should give you the

00:52:04,650 --> 00:52:08,730
file name of that image and it doesn't

00:52:07,170 --> 00:52:11,369
give you the file name of that image it

00:52:08,730 --> 00:52:13,559
gives you other possible things that you

00:52:11,369 --> 00:52:15,029
could use for background image somebody

00:52:13,559 --> 00:52:20,579
introduced this bug we have a really

00:52:15,029 --> 00:52:23,910
easy way we can test for it so we if we

00:52:20,579 --> 00:52:25,680
went the old way I did some manual

00:52:23,910 --> 00:52:27,809
testing and i downloaded released

00:52:25,680 --> 00:52:31,230
versions of brackets and i found that

00:52:27,809 --> 00:52:34,410
all of these versions were bad all the

00:52:31,230 --> 00:52:35,579
way back to october for 2013 was the

00:52:34,410 --> 00:52:37,529
first one that i could find that was

00:52:35,579 --> 00:52:40,500
good so you're talking about a

00:52:37,529 --> 00:52:43,829
regression range of one year and six

00:52:40,500 --> 00:52:48,240
thousand different commits between that

00:52:43,829 --> 00:52:51,450
time one of them is bad which one it's

00:52:48,240 --> 00:52:53,819
really hard problem because I have the

00:52:51,450 --> 00:52:55,049
entire history of every version of

00:52:53,819 --> 00:52:57,779
everything that's ever happened in the

00:52:55,049 --> 00:52:58,210
project in here get is able to help me

00:52:57,779 --> 00:53:01,060
solve

00:52:58,210 --> 00:53:04,599
problem and it uses this thing called

00:53:01,060 --> 00:53:06,880
git bisect so when you bisect a project

00:53:04,599 --> 00:53:09,220
what you do is you tell get that you

00:53:06,880 --> 00:53:10,930
would like to start bisecting and get

00:53:09,220 --> 00:53:13,480
says okay I'm going to start at this

00:53:10,930 --> 00:53:15,970
particular commit right here and you say

00:53:13,480 --> 00:53:17,800
is this commit good or bad so you run

00:53:15,970 --> 00:53:20,820
your tests and you say no this commit is

00:53:17,800 --> 00:53:23,380
bad this is bad and then you go back to

00:53:20,820 --> 00:53:24,970
october 2014 and you check out that

00:53:23,380 --> 00:53:28,540
version of the code and you run it you

00:53:24,970 --> 00:53:31,780
say to get this version is good and so

00:53:28,540 --> 00:53:35,380
now get has a range of 6,000 commits and

00:53:31,780 --> 00:53:39,250
so what it does is it drops you right in

00:53:35,380 --> 00:53:42,430
the middle it checks out a version of

00:53:39,250 --> 00:53:44,770
the code and there are 3000 revisions

00:53:42,430 --> 00:53:47,859
left so it splits it in half and it says

00:53:44,770 --> 00:53:49,359
is the bug there if the bugs there then

00:53:47,859 --> 00:53:51,550
we go this way if the bug is not there

00:53:49,359 --> 00:53:53,440
then we go this way and so you tell it

00:53:51,550 --> 00:53:55,420
is it good or is it bad get check out

00:53:53,440 --> 00:53:56,920
good good check out bad and you'll see

00:53:55,420 --> 00:53:59,170
that it tells you how many steps it's

00:53:56,920 --> 00:54:01,359
going to take so in this case it's going

00:53:59,170 --> 00:54:04,060
to take 12 steps so I tell it it's good

00:54:01,359 --> 00:54:06,760
or it's bad and then it chops that in

00:54:04,060 --> 00:54:09,520
half and I have 1500 commits does it

00:54:06,760 --> 00:54:11,619
again 11 steps to go and eventually you

00:54:09,520 --> 00:54:13,839
get to this spot right here and it says

00:54:11,619 --> 00:54:16,359
the commits that cause this is this one

00:54:13,839 --> 00:54:18,670
right here so you go from having six

00:54:16,359 --> 00:54:21,790
thousand commits down to it telling you

00:54:18,670 --> 00:54:25,000
that this is the commit that did it it

00:54:21,790 --> 00:54:26,890
doesn't know JavaScript or C++ or

00:54:25,000 --> 00:54:30,430
whatever programming language you're in

00:54:26,890 --> 00:54:32,410
all it knows is that you've been able to

00:54:30,430 --> 00:54:34,060
narrow it down to this spot and now you

00:54:32,410 --> 00:54:36,490
can take this information and give it to

00:54:34,060 --> 00:54:38,500
whatever developer would want to be

00:54:36,490 --> 00:54:39,970
working with it it's an example of one

00:54:38,500 --> 00:54:43,150
of the things that working with get

00:54:39,970 --> 00:54:45,280
gives us and I'm out of time so i can't

00:54:43,150 --> 00:54:48,490
i can't go on and show you more but the

00:54:45,280 --> 00:54:54,460
thing that I wanted to I wanted to get

00:54:48,490 --> 00:54:56,770
you thinking about was first of all that

00:54:54,460 --> 00:54:58,839
get has to be learned the thing that I

00:54:56,770 --> 00:55:00,880
find frustrates most people is that they

00:54:58,839 --> 00:55:03,070
they think they can guess their way

00:55:00,880 --> 00:55:06,130
through it and on and unfortunately you

00:55:03,070 --> 00:55:08,170
can't it's it needs you to sit down and

00:55:06,130 --> 00:55:10,210
spend a little bit of time learning to

00:55:08,170 --> 00:55:11,620
love it the second thing is that it's

00:55:10,210 --> 00:55:14,950
not easy to love at the begin

00:55:11,620 --> 00:55:16,750
you will find it very frustrating but if

00:55:14,950 --> 00:55:19,270
you're willing if you're willing to do

00:55:16,750 --> 00:55:20,950
some work the power of these sorts of

00:55:19,270 --> 00:55:23,530
tools being able to do things like

00:55:20,950 --> 00:55:25,240
regression bisecting regressions being

00:55:23,530 --> 00:55:27,460
able to go and have a complete history

00:55:25,240 --> 00:55:29,500
on your machine being able to work in a

00:55:27,460 --> 00:55:31,480
distributed manner the power of it is

00:55:29,500 --> 00:55:33,100
unbelievable which is why it's taken

00:55:31,480 --> 00:55:35,020
over a software development you know why

00:55:33,100 --> 00:55:37,690
everyone is using it anyway all pause

00:55:35,020 --> 00:55:40,920
there and encourage you to go deeper

00:55:37,690 --> 00:55:40,920

YouTube URL: https://www.youtube.com/watch?v=VKArpO69cIw


