Title: FSOSS 2015 - Hong Zhan Huang & Glaser King San Lo - LEAP
Publication date: 2015-11-12
Playlist: FSOSS 2015
Description: 
	FSOSS 2015 - Hong Zhan Huang & Glaser King San Lo - LEAP
Captions: 
	00:00:00,000 --> 00:00:06,899
two presenters we have Michael time and

00:00:03,540 --> 00:00:09,179
blazer low at the pleasure of working

00:00:06,899 --> 00:00:11,639
with these gentlemen on a on a daily

00:00:09,179 --> 00:00:13,950
basis they're here to talk about early

00:00:11,639 --> 00:00:24,600
communiquÃ©s for enterprise on platforms

00:00:13,950 --> 00:00:27,660
thank you so a tree before we are

00:00:24,600 --> 00:00:31,730
talking about leap we want you to talk a

00:00:27,660 --> 00:00:31,730
little bit where where do we come from

00:00:31,850 --> 00:00:40,410
is it okay slideshow okay yes next next

00:00:37,739 --> 00:00:43,379
time okay yeah so we are come from

00:00:40,410 --> 00:00:46,559
seedot seedot actually is a department

00:00:43,379 --> 00:00:50,370
center in Seneca we are doing a bunch of

00:00:46,559 --> 00:00:52,500
different project in that center so that

00:00:50,370 --> 00:00:55,739
there's a several different project

00:00:52,500 --> 00:00:58,070
there's a lot of different teams they

00:00:55,739 --> 00:01:03,199
are working on something like web app

00:00:58,070 --> 00:01:09,510
image processing online education

00:01:03,199 --> 00:01:17,670
platform and also another some other

00:01:09,510 --> 00:01:20,430
stuff so and here is our team so we we

00:01:17,670 --> 00:01:23,009
are the oh snap team all step stand for

00:01:20,430 --> 00:01:27,210
open source technology for emerging

00:01:23,009 --> 00:01:31,590
platforms so so you can see actually we

00:01:27,210 --> 00:01:35,189
have pec team here Chris marketa is

00:01:31,590 --> 00:01:39,200
working on the infrastructure for the

00:01:35,189 --> 00:01:44,280
public server Andrew Smith is at Andrew

00:01:39,200 --> 00:01:47,880
all the wheels is our senior member of

00:01:44,280 --> 00:01:52,579
our team which he teaches a lot of stuff

00:01:47,880 --> 00:01:56,880
and also he's a part-time teacher here

00:01:52,579 --> 00:02:00,719
autumn autumn is our member who is

00:01:56,880 --> 00:02:05,509
working on the GCC compiler with I

00:02:00,719 --> 00:02:12,599
prefer to compare compatibilities

00:02:05,509 --> 00:02:13,740
hayneedle other right corner is a really

00:02:12,599 --> 00:02:18,780
nice hot

00:02:13,740 --> 00:02:22,950
working guy from a university which is

00:02:18,780 --> 00:02:27,270
in Brazil so and also a twin and Justin

00:02:22,950 --> 00:02:31,820
flowers are a separate team working on

00:02:27,270 --> 00:02:34,610
that offs in most cases they are doing

00:02:31,820 --> 00:02:40,140
improvements for the infrastructure for

00:02:34,610 --> 00:02:45,180
our business partner and also at the end

00:02:40,140 --> 00:02:52,050
we have our really nice intelligent boss

00:02:45,180 --> 00:02:59,250
and also our mentor Chris tariff solo

00:02:52,050 --> 00:03:03,570
asleep and widely so so many of us might

00:02:59,250 --> 00:03:06,990
know that arm platform is getting more

00:03:03,570 --> 00:03:13,830
and more popular because of smartphone

00:03:06,990 --> 00:03:16,380
so the people in enterprise circle they

00:03:13,830 --> 00:03:18,600
are looking for something similar so

00:03:16,380 --> 00:03:22,680
right now the server they are looking

00:03:18,600 --> 00:03:27,090
for is more power efficient smaller and

00:03:22,680 --> 00:03:29,520
also low cost so what happened is right

00:03:27,090 --> 00:03:35,150
now there's several different different

00:03:29,520 --> 00:03:40,710
ports got developed but not yet relisted

00:03:35,150 --> 00:03:43,340
so but also if there's a hover we need

00:03:40,710 --> 00:03:47,820
software as well so one of the software

00:03:43,340 --> 00:03:54,300
which is the OS available ossa is Santos

00:03:47,820 --> 00:03:58,560
but Santos is like yep they're dead cow

00:03:54,300 --> 00:04:02,310
in a experiment stage so that they don't

00:03:58,560 --> 00:04:06,360
want to focus too much on the hardware

00:04:02,310 --> 00:04:10,980
support so here's here's our chance to

00:04:06,360 --> 00:04:14,910
step forward we use whatever available

00:04:10,980 --> 00:04:19,350
in Santos and then bill a operating

00:04:14,910 --> 00:04:22,530
system based on it we also so what we

00:04:19,350 --> 00:04:25,300
are doing is we have the basic system

00:04:22,530 --> 00:04:29,849
plus supporting

00:04:25,300 --> 00:04:35,500
much on 64-bit hardware as we can and

00:04:29,849 --> 00:04:39,520
also we can put some other tools like

00:04:35,500 --> 00:04:44,110
benchmarking or other darker and also

00:04:39,520 --> 00:04:49,210
some other useful tools as well so what

00:04:44,110 --> 00:04:51,849
leap can do so at least at the first one

00:04:49,210 --> 00:04:55,090
just what I said we got all the updates

00:04:51,849 --> 00:04:58,469
got all the software from Santos which

00:04:55,090 --> 00:05:02,740
is really really stable fully tested and

00:04:58,469 --> 00:05:05,590
we also get a different kernel as what

00:05:02,740 --> 00:05:10,659
sent us using Sanders is using the free

00:05:05,590 --> 00:05:15,729
porn 19 colonel but that one is a bit

00:05:10,659 --> 00:05:20,190
older so we we want to use the really

00:05:15,729 --> 00:05:23,250
reason up 2day and also including

00:05:20,190 --> 00:05:29,229
different patches for new hardware and

00:05:23,250 --> 00:05:32,529
some software automatic and also we have

00:05:29,229 --> 00:05:35,919
of course the part benchmarking tools

00:05:32,529 --> 00:05:41,529
which is the main course of the of the

00:05:35,919 --> 00:05:43,990
system also add the stalker which is

00:05:41,529 --> 00:05:47,979
quite popular nowadays because every

00:05:43,990 --> 00:05:51,250
wise like image called a container

00:05:47,979 --> 00:05:54,490
everything isolated from the system and

00:05:51,250 --> 00:05:58,870
also we as we build infrastructure we

00:05:54,490 --> 00:06:04,449
also include the Wikipedia pasilla & Co

00:05:58,870 --> 00:06:08,710
GPU system and also the iop free to

00:06:04,449 --> 00:06:15,360
capabilities we include is for improving

00:06:08,710 --> 00:06:22,060
the bench marking result so yes so how

00:06:15,360 --> 00:06:25,509
it was made we actually have nothing to

00:06:22,060 --> 00:06:28,719
start with because the CentOS 7 is not

00:06:25,509 --> 00:06:33,009
released at that time so we have to pick

00:06:28,719 --> 00:06:35,680
something to work to use it as a base so

00:06:33,009 --> 00:06:38,750
we what we are using is fedora 19

00:06:35,680 --> 00:06:42,480
packages to be a

00:06:38,750 --> 00:06:47,760
like the whole system based in order to

00:06:42,480 --> 00:06:53,580
build the testing centers packages so we

00:06:47,760 --> 00:06:56,070
move forward to alpha alpha release at

00:06:53,580 --> 00:06:58,050
that time actually only Andrew and Chris

00:06:56,070 --> 00:07:01,430
Tyler is working on it so they're

00:06:58,050 --> 00:07:06,330
working really really hard for that

00:07:01,430 --> 00:07:10,140
until after release and after that we

00:07:06,330 --> 00:07:13,650
start forming our deal league team which

00:07:10,140 --> 00:07:19,040
increase which is those people you saw

00:07:13,650 --> 00:07:23,330
in the picture so so we start surfing in

00:07:19,040 --> 00:07:28,440
at the same time we doing package

00:07:23,330 --> 00:07:31,400
signing installer investigation and some

00:07:28,440 --> 00:07:35,820
package building and also I prefer it to

00:07:31,400 --> 00:07:38,340
also after that we also have to fix some

00:07:35,820 --> 00:07:42,120
back issues which is basically the

00:07:38,340 --> 00:07:44,880
effort of Andrew as well we fixed it the

00:07:42,120 --> 00:07:48,330
pearl and Java packages issue which is

00:07:44,880 --> 00:07:51,980
kind of screw-up most after most of

00:07:48,330 --> 00:07:57,750
other packages as well so after that we

00:07:51,980 --> 00:08:02,040
are able to do the clean make a really

00:07:57,750 --> 00:08:06,510
clean bleep package set so for the rest

00:08:02,040 --> 00:08:09,420
I will pass it to Michael to talk about

00:08:06,510 --> 00:08:11,760
it right so as you can see this is our

00:08:09,420 --> 00:08:14,640
timeline of how elite began to the point

00:08:11,760 --> 00:08:16,560
of release our team really formed

00:08:14,640 --> 00:08:18,060
together around what places spoke about

00:08:16,560 --> 00:08:20,550
earlier during the package signing

00:08:18,060 --> 00:08:22,260
installer setup and etc so after we had

00:08:20,550 --> 00:08:23,580
the very clean package set what I was

00:08:22,260 --> 00:08:25,980
doing on the team mostly was working on

00:08:23,580 --> 00:08:28,830
the Installer so we couldn't really

00:08:25,980 --> 00:08:30,750
release any kind of fish / they bought a

00:08:28,830 --> 00:08:32,490
proper installer to the system so that

00:08:30,750 --> 00:08:34,590
from that point on from the clean

00:08:32,490 --> 00:08:36,270
package set set up until the release day

00:08:34,590 --> 00:08:39,270
I was working on the Installer almost

00:08:36,270 --> 00:08:41,580
entirely during the same time line

00:08:39,270 --> 00:08:43,950
though our former coworker artem was

00:08:41,580 --> 00:08:47,880
also working intel with the alpi 32

00:08:43,950 --> 00:08:50,010
compatibility support for our tool chain

00:08:47,880 --> 00:08:52,020
and after that point that we finally I

00:08:50,010 --> 00:08:53,640
finally fix the installer issues we got

00:08:52,020 --> 00:08:55,650
closer and closer to release and so we

00:08:53,640 --> 00:08:58,680
could finally make the final images that

00:08:55,650 --> 00:09:00,690
we could use to install our system our

00:08:58,680 --> 00:09:02,640
operating system on various hardware and

00:09:00,690 --> 00:09:05,820
we started adding some more features and

00:09:02,640 --> 00:09:07,440
fixing more packages that had bugs and

00:09:05,820 --> 00:09:09,840
do some rebranding so it's all leap

00:09:07,440 --> 00:09:11,760
related and as we got even closer to the

00:09:09,840 --> 00:09:13,680
release date we start setting with some

00:09:11,760 --> 00:09:17,280
of our infrastructure so our wiki page

00:09:13,680 --> 00:09:20,490
are bugzilla our koji build system and

00:09:17,280 --> 00:09:22,710
such our mailing lists are methods of

00:09:20,490 --> 00:09:24,840
contact to the public and then at some

00:09:22,710 --> 00:09:27,120
point we got to the release date and we

00:09:24,840 --> 00:09:28,950
released on july seventeenth of the

00:09:27,120 --> 00:09:31,470
summer and that more or less concludes

00:09:28,950 --> 00:09:32,910
up everything up to the least it and now

00:09:31,470 --> 00:09:35,370
glaziers going to do a little bit more

00:09:32,910 --> 00:09:44,240
of history about the package part of the

00:09:35,370 --> 00:09:47,730
timeline as we move forward laser yes so

00:09:44,240 --> 00:09:51,510
so actually I think some of you is not

00:09:47,730 --> 00:09:55,260
really in familiar with software

00:09:51,510 --> 00:09:58,800
packaging so I I want you like briefly

00:09:55,260 --> 00:10:02,460
talk about how the packaging is going to

00:09:58,800 --> 00:10:04,860
looks like so you can see we actually

00:10:02,460 --> 00:10:08,360
get all the sources from the Santos

00:10:04,860 --> 00:10:11,460
first and the source package means

00:10:08,360 --> 00:10:15,690
including the source code patch patches

00:10:11,460 --> 00:10:17,970
and a a file called spec file spectra is

00:10:15,690 --> 00:10:22,980
actually a bunch of interrupt

00:10:17,970 --> 00:10:26,760
instruction and information about how do

00:10:22,980 --> 00:10:28,980
you install it how to compile the

00:10:26,760 --> 00:10:33,990
software and then how to install it and

00:10:28,980 --> 00:10:37,290
also some after installation process you

00:10:33,990 --> 00:10:43,130
want to run and also a bunch of metadata

00:10:37,290 --> 00:10:48,510
that talk about the dependency the name

00:10:43,130 --> 00:10:52,320
version release so on and so forth so

00:10:48,510 --> 00:10:56,370
after we builder sauce package we will

00:10:52,320 --> 00:10:58,230
get a binary package which is we usually

00:10:56,370 --> 00:11:01,440
holds that to the

00:10:58,230 --> 00:11:03,350
to the user so that user can just

00:11:01,440 --> 00:11:08,990
install it and then it will works

00:11:03,350 --> 00:11:14,940
without compilation so after we got

00:11:08,990 --> 00:11:18,210
enough connection of the binary packages

00:11:14,940 --> 00:11:22,740
we will call it just call it a package

00:11:18,210 --> 00:11:28,700
set package set is a system set of

00:11:22,740 --> 00:11:37,740
package that you can use those to make a

00:11:28,700 --> 00:11:42,000
real OS so so actually package building

00:11:37,740 --> 00:11:44,700
is you cannot do it one by one on your

00:11:42,000 --> 00:11:47,610
machine at that will be so slow so what

00:11:44,700 --> 00:11:51,780
we are doing the tools called Koji co

00:11:47,610 --> 00:11:54,180
GPU system is a SI server connect to a

00:11:51,780 --> 00:11:57,270
bunch of builders and also the storage

00:11:54,180 --> 00:12:00,660
and database so that every time you use

00:11:57,270 --> 00:12:04,380
the Koji client command line you can

00:12:00,660 --> 00:12:05,910
just send the packages to the goji hub

00:12:04,380 --> 00:12:08,670
and then cut you up we'll handle that

00:12:05,910 --> 00:12:13,470
and then it will send all the packages

00:12:08,670 --> 00:12:16,590
to different builders and then after the

00:12:13,470 --> 00:12:19,110
pivot they will automatically send it

00:12:16,590 --> 00:12:25,380
back to the storage and then it will

00:12:19,110 --> 00:12:32,150
store it inside the koji and of course

00:12:25,380 --> 00:12:32,150
all the server is running leave yep

00:12:32,499 --> 00:12:39,849
so after we build a package set there's

00:12:36,459 --> 00:12:43,719
one more step we have to do so which is

00:12:39,849 --> 00:12:46,859
the package signing the package lining

00:12:43,719 --> 00:12:51,219
means we have to like put a signature

00:12:46,859 --> 00:12:53,679
attached it with the package so that

00:12:51,219 --> 00:12:58,359
people will know that oh this signature

00:12:53,679 --> 00:13:02,829
is represent the package come from

00:12:58,359 --> 00:13:05,469
si.com from lip team so we have to do

00:13:02,829 --> 00:13:08,969
that because we can make sure that user

00:13:05,469 --> 00:13:12,249
can is downloading the right package

00:13:08,969 --> 00:13:15,639
from our repository but not some

00:13:12,249 --> 00:13:21,429
something that is got hat or some

00:13:15,639 --> 00:13:25,149
unknown source so we have a tool called

00:13:21,429 --> 00:13:30,939
sicko sigo is also a server structure

00:13:25,149 --> 00:13:34,379
that at salsa is including to server

00:13:30,939 --> 00:13:37,209
which is psycho bridge as a go server

00:13:34,379 --> 00:13:40,179
usually when we when we try to sign the

00:13:37,209 --> 00:13:44,799
packages we just tell psycho bridge and

00:13:40,179 --> 00:13:49,749
then secure bridge tell Koji to grab all

00:13:44,799 --> 00:13:52,629
the packages it wants and then sign them

00:13:49,749 --> 00:13:56,859
and then say it back to the Koji which

00:13:52,629 --> 00:13:59,439
is how simple but it the biggest of the

00:13:56,859 --> 00:14:03,849
software is kind of old it's not updated

00:13:59,439 --> 00:14:10,439
too much so it it got a lot of problems

00:14:03,849 --> 00:14:15,099
when we setting this up all right so

00:14:10,439 --> 00:14:18,970
over or we are building building

00:14:15,099 --> 00:14:22,899
packages from having a base of fedora 19

00:14:18,970 --> 00:14:26,919
package set and then we start building

00:14:22,899 --> 00:14:29,379
some party show centers package set and

00:14:26,919 --> 00:14:32,529
they also keep fixing the problems

00:14:29,379 --> 00:14:35,979
fixing some major problems and until at

00:14:32,529 --> 00:14:39,549
the end we can repeal the host package

00:14:35,979 --> 00:14:42,989
it with our own package set which is

00:14:39,549 --> 00:14:42,989
called buffeting

00:14:44,510 --> 00:15:06,510
yeah okay so what the Knicks will be a

00:14:52,339 --> 00:15:10,649
yes no because Santos one is 5.6 teen so

00:15:06,510 --> 00:15:15,389
yeah so we got tons of like dependency

00:15:10,649 --> 00:15:18,060
issues so for some reason we used five

00:15:15,389 --> 00:15:19,769
pound 18 but we didn't know that and

00:15:18,060 --> 00:15:22,320
then after we realized the problem

00:15:19,769 --> 00:15:25,170
that's actually a tons of tons of

00:15:22,320 --> 00:15:29,540
problem is depends on the parable

00:15:25,170 --> 00:15:34,589
packages so we have to like concrete

00:15:29,540 --> 00:15:37,589
which takes a lot of time we had to

00:15:34,589 --> 00:15:44,100
downgrade to to use the proper version

00:15:37,589 --> 00:15:48,899
that sent us supposed to use so so I'm

00:15:44,100 --> 00:15:50,399
going to pass the next thing to Michael

00:15:48,899 --> 00:15:55,980
he will be talking about a leap

00:15:50,399 --> 00:15:57,600
installation part and yep right so as I

00:15:55,980 --> 00:15:59,040
said earlier I'm was mostly freelance

00:15:57,600 --> 00:16:00,750
before he on the Installer freely and

00:15:59,040 --> 00:16:02,160
you can't really have a proper

00:16:00,750 --> 00:16:04,199
distribution really studying point I'm

00:16:02,160 --> 00:16:05,310
with what installer right so most of my

00:16:04,199 --> 00:16:06,899
efforts are focused on this at the time

00:16:05,310 --> 00:16:08,069
but just to give you an overview of how

00:16:06,899 --> 00:16:10,709
the installers work if you're not

00:16:08,069 --> 00:16:12,029
familiar with it yeah so we have two

00:16:10,709 --> 00:16:14,760
installation methods which are preferred

00:16:12,029 --> 00:16:17,790
at this time which is pxe pre execution

00:16:14,760 --> 00:16:19,529
environment and network installations so

00:16:17,790 --> 00:16:21,000
you can just let up point it to the

00:16:19,529 --> 00:16:22,889
place where you want download the images

00:16:21,000 --> 00:16:24,839
from and it will install from there so

00:16:22,889 --> 00:16:26,250
txt is what we mostly use for ourselves

00:16:24,839 --> 00:16:28,490
so because we have a bit of

00:16:26,250 --> 00:16:30,930
infrastructure down at cedra DHL the

00:16:28,490 --> 00:16:32,339
enterprise hyperscale lab so that

00:16:30,930 --> 00:16:33,810
infrastructure we can set up the PFC

00:16:32,339 --> 00:16:35,459
booting pretty easily and that's what we

00:16:33,810 --> 00:16:37,800
use to install leap onto our own systems

00:16:35,459 --> 00:16:39,240
and to give you an idea what the

00:16:37,800 --> 00:16:41,970
installation balls are like we have VNC

00:16:39,240 --> 00:16:44,519
which is a kind of emulated graphical

00:16:41,970 --> 00:16:45,870
interface for the for the installation

00:16:44,519 --> 00:16:47,430
and i'll be showing that a little bit

00:16:45,870 --> 00:16:49,079
later and then we also the plain old

00:16:47,430 --> 00:16:51,209
text mode which is just a terminal and

00:16:49,079 --> 00:16:53,020
some taxes and you import your inputs to

00:16:51,209 --> 00:16:55,030
data to install however you like

00:16:53,020 --> 00:16:56,440
and the other feature that we have in

00:16:55,030 --> 00:16:58,270
our installations is kick-start versus

00:16:56,440 --> 00:16:59,740
non kick-start so a kickstart is just a

00:16:58,270 --> 00:17:02,200
configuration file with some text in it

00:16:59,740 --> 00:17:03,880
and it states how you want it to be

00:17:02,200 --> 00:17:06,130
installed do I want this user to be made

00:17:03,880 --> 00:17:08,080
this password do I want to use this kind

00:17:06,130 --> 00:17:09,760
partitioning and so forth so if you

00:17:08,080 --> 00:17:11,320
don't want to kick start you don't have

00:17:09,760 --> 00:17:13,120
to but if you do you can automate your

00:17:11,320 --> 00:17:14,980
your installations based on your

00:17:13,120 --> 00:17:16,720
configurations that you have which makes

00:17:14,980 --> 00:17:18,880
kick-starts very useful and that comes

00:17:16,720 --> 00:17:20,380
to a point when you'll see why that

00:17:18,880 --> 00:17:23,890
comes becomes important during the later

00:17:20,380 --> 00:17:25,150
part of this slide so talking about

00:17:23,890 --> 00:17:27,160
about the installation time where you

00:17:25,150 --> 00:17:28,720
can what you install from so the

00:17:27,160 --> 00:17:31,810
installation point is called an install

00:17:28,720 --> 00:17:35,140
tree the install tree has all the ISO

00:17:31,810 --> 00:17:39,880
images and the boot loaders and the

00:17:35,140 --> 00:17:41,950
package set and the colonel and the

00:17:39,880 --> 00:17:43,960
initial ramdisk so a temporary file

00:17:41,950 --> 00:17:46,750
system that you use to install your

00:17:43,960 --> 00:17:49,360
actual system so what composes this

00:17:46,750 --> 00:17:51,430
install tree is called Lorax it's the

00:17:49,360 --> 00:17:52,750
tool that we use we need to compose this

00:17:51,430 --> 00:17:54,790
install tree so we can actually have a

00:17:52,750 --> 00:17:57,040
point of installation to start with

00:17:54,790 --> 00:17:58,630
Lorax creates a few of these parts of

00:17:57,040 --> 00:18:00,430
the install tree as you can see so it

00:17:58,630 --> 00:18:01,780
creates the efi don't create the live OS

00:18:00,430 --> 00:18:04,180
and the image directory which contains

00:18:01,780 --> 00:18:05,560
on the side as you can see the efi

00:18:04,180 --> 00:18:08,760
contains all the bootloader stuff and

00:18:05,560 --> 00:18:11,500
some fonts the live OS is a temporary

00:18:08,760 --> 00:18:13,180
where it creates the squash FS image

00:18:11,500 --> 00:18:15,100
which is a temporary file system that

00:18:13,180 --> 00:18:16,630
you can use to load a live OS and then

00:18:15,100 --> 00:18:18,550
your the actual images on the bottom and

00:18:16,630 --> 00:18:20,700
as well as the colonel and an intro ram

00:18:18,550 --> 00:18:23,170
disk to load the actual file system into

00:18:20,700 --> 00:18:25,150
so we use lower actually create this

00:18:23,170 --> 00:18:26,710
install tree using the package set and

00:18:25,150 --> 00:18:28,300
that's the tool that we've been using

00:18:26,710 --> 00:18:30,250
throughout the course of working with

00:18:28,300 --> 00:18:32,200
the Installer so now that you know

00:18:30,250 --> 00:18:35,350
generally when install tree looks like

00:18:32,200 --> 00:18:36,430
and what it might be so this is one

00:18:35,350 --> 00:18:39,580
thing that we did a lot when we were

00:18:36,430 --> 00:18:40,900
doing the install trees initially the

00:18:39,580 --> 00:18:42,900
Installer wasn't working very well and

00:18:40,900 --> 00:18:45,070
we needed to find a way to make it work

00:18:42,900 --> 00:18:46,630
till the package set that we have is

00:18:45,070 --> 00:18:48,280
what the in sultry is based on is also

00:18:46,630 --> 00:18:51,970
what the Installer eventually is based

00:18:48,280 --> 00:18:55,240
on as well so this thing called override

00:18:51,970 --> 00:18:56,620
is essentially just literally overriding

00:18:55,240 --> 00:18:58,780
packages that are already in the package

00:18:56,620 --> 00:19:00,460
set so packages with a newer named

00:18:58,780 --> 00:19:03,250
version and release will overwrite older

00:19:00,460 --> 00:19:04,990
one so 1.01 will be

00:19:03,250 --> 00:19:07,180
written by a newer version one or two

00:19:04,990 --> 00:19:08,560
like subversion to for example so by

00:19:07,180 --> 00:19:10,510
using this property and using the power

00:19:08,560 --> 00:19:12,430
of Lorax which is the pop the capability

00:19:10,510 --> 00:19:16,150
to use multiple repositories as a basis

00:19:12,430 --> 00:19:18,490
for your images you can essentially do a

00:19:16,150 --> 00:19:20,770
one by one overriding of certain package

00:19:18,490 --> 00:19:23,140
sets to test the effect of it on the

00:19:20,770 --> 00:19:25,600
overall packages that you have for

00:19:23,140 --> 00:19:27,760
making your composure images so by using

00:19:25,600 --> 00:19:28,990
Lorax with your base package set which

00:19:27,760 --> 00:19:30,520
was the completed one that Glaser was

00:19:28,990 --> 00:19:32,590
talking about for the clean package set

00:19:30,520 --> 00:19:35,320
we could then add more packages to

00:19:32,590 --> 00:19:36,850
override existing packages or additional

00:19:35,320 --> 00:19:39,040
package start denied for and see what

00:19:36,850 --> 00:19:42,370
effect they would have on the installer

00:19:39,040 --> 00:19:44,320
package set so the certain packages that

00:19:42,370 --> 00:19:46,240
we were using the two-test installer or

00:19:44,320 --> 00:19:47,920
mostly anaconda and the dependency of

00:19:46,240 --> 00:19:50,410
anaconda we were trying to leverage

00:19:47,920 --> 00:19:53,230
anaconda to be our installer for leap

00:19:50,410 --> 00:19:54,610
but we ran some issues in that it didn't

00:19:53,230 --> 00:19:56,350
seem to work correctly with the current

00:19:54,610 --> 00:19:58,210
package that we have so we had to create

00:19:56,350 --> 00:19:59,860
an override repository to individually

00:19:58,210 --> 00:20:01,870
test what packages that we need to fill

00:19:59,860 --> 00:20:04,420
in the missing dependencies or just to

00:20:01,870 --> 00:20:05,950
make it fit together individually maybe

00:20:04,420 --> 00:20:07,780
I'm certain version anaconda when work

00:20:05,950 --> 00:20:09,850
for us oh maybe a certain version of

00:20:07,780 --> 00:20:11,970
something that depends on anaconda one

00:20:09,850 --> 00:20:13,960
work for us and such and so forth and so

00:20:11,970 --> 00:20:15,310
moving on with that we have a little bit

00:20:13,960 --> 00:20:18,520
of a story which I would like to call

00:20:15,310 --> 00:20:20,500
the Anaconda galaxy there's a bunch of

00:20:18,520 --> 00:20:22,810
planets so they have a bunch of version

00:20:20,500 --> 00:20:24,970
names and it kind of details my space

00:20:22,810 --> 00:20:26,860
adventure through working with the

00:20:24,970 --> 00:20:29,770
Installer there's some stars and some

00:20:26,860 --> 00:20:31,510
moons and such so the starting point of

00:20:29,770 --> 00:20:33,790
anaconda the Installer that we worked

00:20:31,510 --> 00:20:36,820
with the version was nineteen point 31 /

00:20:33,790 --> 00:20:39,610
123 that's the one we got from Santos so

00:20:36,820 --> 00:20:41,800
II we would try to use this one to

00:20:39,610 --> 00:20:44,020
install leap but it wouldn't quite work

00:20:41,800 --> 00:20:47,350
for us at the time it would try to

00:20:44,020 --> 00:20:49,560
install graphically or even through text

00:20:47,350 --> 00:20:54,040
mode and at some point it would just

00:20:49,560 --> 00:20:56,020
fail its era but andreoli Willis from

00:20:54,040 --> 00:20:58,210
our team he was able to get to work in

00:20:56,020 --> 00:21:00,310
text mode with kick-starts so we were

00:20:58,210 --> 00:21:01,990
able to install it for the Alpha the

00:21:00,310 --> 00:21:04,240
alpha release and that was all good but

00:21:01,990 --> 00:21:06,130
for a real release we probably want the

00:21:04,240 --> 00:21:07,540
full functionality with VNC s if people

00:21:06,130 --> 00:21:10,570
like to use graphics to install with

00:21:07,540 --> 00:21:11,980
which is nice to see so that's how I

00:21:10,570 --> 00:21:13,660
started my journey I picked up off where

00:21:11,980 --> 00:21:15,130
Andrew left off and started my own

00:21:13,660 --> 00:21:15,450
adventure to see how we can make it all

00:21:15,130 --> 00:21:18,659
fit

00:21:15,450 --> 00:21:20,250
together um so knowing what android done

00:21:18,659 --> 00:21:22,980
before it seemed as though i couldn't

00:21:20,250 --> 00:21:25,260
use 1931 123 because we were hitting

00:21:22,980 --> 00:21:28,230
those errors so i decided to move on to

00:21:25,260 --> 00:21:30,299
21 and further it seemed as though my

00:21:28,230 --> 00:21:31,620
first stopping point 2115 the kickstarts

00:21:30,299 --> 00:21:33,690
were not supported so the work and 2 i'd

00:21:31,620 --> 00:21:35,130
done before was not existent here so i

00:21:33,690 --> 00:21:37,350
could not use this version because he

00:21:35,130 --> 00:21:39,330
starts would be nice to use so ice kept

00:21:37,350 --> 00:21:43,260
moving on the line and i went to point

00:21:39,330 --> 00:21:45,090
35 so here i could not get it to work at

00:21:43,260 --> 00:21:47,279
all really i kept hitting this meta City

00:21:45,090 --> 00:21:49,860
error which was an error in regards to

00:21:47,279 --> 00:21:51,210
some window themes that we have so I

00:21:49,860 --> 00:21:52,860
wasn't quite sure what's happening here

00:21:51,210 --> 00:21:54,779
at this point so I was kind of stuck on

00:21:52,860 --> 00:21:57,840
this for quite some time but in between

00:21:54,779 --> 00:21:59,100
35 and point four of 22 we got most of

00:21:57,840 --> 00:22:00,659
our package set to be built at that

00:21:59,100 --> 00:22:02,039
point and the meda City error actually

00:22:00,659 --> 00:22:03,149
can fix that stuff because our meta city

00:22:02,039 --> 00:22:04,769
was not built yet in our package sent

00:22:03,149 --> 00:22:07,710
that's why we kept getting medicine ears

00:22:04,769 --> 00:22:09,450
that's all that little mystery so twenty

00:22:07,710 --> 00:22:10,830
two point four hour hike reset see more

00:22:09,450 --> 00:22:15,299
complete it seemed like thanks for

00:22:10,830 --> 00:22:16,980
working um sort of kind of but the

00:22:15,299 --> 00:22:18,779
problem with going here was that i did

00:22:16,980 --> 00:22:20,159
not realize that in earlier on in

00:22:18,779 --> 00:22:23,250
nineteen point 31 we had a little

00:22:20,159 --> 00:22:24,690
bootloader patch that would install the

00:22:23,250 --> 00:22:26,700
bootloader stuff to the right directory

00:22:24,690 --> 00:22:28,169
without that patch it would seem as

00:22:26,700 --> 00:22:29,880
though our bootloader part of the

00:22:28,169 --> 00:22:31,529
installer would not work it was the it

00:22:29,880 --> 00:22:33,570
would try to install your bootloader

00:22:31,529 --> 00:22:35,519
stuff and it would be like it's not

00:22:33,570 --> 00:22:37,590
theirs it's just not there so it would

00:22:35,519 --> 00:22:38,730
air out that way but after discovering

00:22:37,590 --> 00:22:40,110
that we actually had a patch for this i

00:22:38,730 --> 00:22:43,649
applied the patch and things started

00:22:40,110 --> 00:22:44,909
working it was pretty good but we only

00:22:43,649 --> 00:22:46,350
got the kick starts working which means

00:22:44,909 --> 00:22:48,059
we only had the text mode part of the

00:22:46,350 --> 00:22:50,220
installer working at the time which

00:22:48,059 --> 00:22:51,600
conda's led us back to nineteen point 31

00:22:50,220 --> 00:22:55,380
that doesn't really take us anywhere

00:22:51,600 --> 00:22:57,240
right so I cracked at it for a long time

00:22:55,380 --> 00:22:58,710
try to fix this package try to override

00:22:57,240 --> 00:23:00,899
that package with another graphical

00:22:58,710 --> 00:23:02,549
package and the dependency line just

00:23:00,899 --> 00:23:04,380
kept going on and on it just seemed not

00:23:02,549 --> 00:23:06,299
never into end but after a certain point

00:23:04,380 --> 00:23:08,490
I got the crafts at work but it would

00:23:06,299 --> 00:23:10,200
not install so you could see in a lovely

00:23:08,490 --> 00:23:11,850
window but you couldn't repress the

00:23:10,200 --> 00:23:14,610
install button which was very

00:23:11,850 --> 00:23:17,130
disappointing so moving on after that we

00:23:14,610 --> 00:23:19,919
go to 22 point XX I just kept exploring

00:23:17,130 --> 00:23:21,720
more and more versions of 22 and it

00:23:19,919 --> 00:23:24,960
still let me know where and then I hit

00:23:21,720 --> 00:23:27,480
this mystery planet the green one so I

00:23:24,960 --> 00:23:29,039
was at the end my ends we're running a

00:23:27,480 --> 00:23:30,480
slightly long time I guess we're getting

00:23:29,039 --> 00:23:35,100
close to the supposed a release date and

00:23:30,480 --> 00:23:37,710
I was getting getting pretty antsy so I

00:23:35,100 --> 00:23:39,120
thought you know let's see what the

00:23:37,710 --> 00:23:40,950
other distributions are doing at this

00:23:39,120 --> 00:23:44,190
point in time it was about mid summer

00:23:40,950 --> 00:23:46,289
and sent to a seven I'd made their

00:23:44,190 --> 00:23:48,179
official release and their installer

00:23:46,289 --> 00:23:50,429
seem to work and their installer was

00:23:48,179 --> 00:23:52,139
unsurprisingly using 19-point 30 1 point

00:23:50,429 --> 00:23:53,990
1 2 3 but they had both kick-starts and

00:23:52,139 --> 00:23:56,610
graphical stuff working at the same time

00:23:53,990 --> 00:23:58,139
so I was like mmm I think we need to

00:23:56,610 --> 00:24:00,510
take this back to the roots the root of

00:23:58,139 --> 00:24:02,490
the problem so from the green planet i

00:24:00,510 --> 00:24:04,889
went back to nineteen point 31 41 23 and

00:24:02,490 --> 00:24:07,730
i try to do a graphical installation

00:24:04,889 --> 00:24:11,519
with our fully complete package set and

00:24:07,730 --> 00:24:12,870
it didn't work well I wonder why but the

00:24:11,519 --> 00:24:15,210
kick starts working the text mode was

00:24:12,870 --> 00:24:18,480
working so in all regards it should be

00:24:15,210 --> 00:24:20,039
totally working I would think but it

00:24:18,480 --> 00:24:22,200
wasn't actually it turned out that the

00:24:20,039 --> 00:24:25,649
kicks arse were we gather as I later

00:24:22,200 --> 00:24:26,549
expected a bit closer so what the

00:24:25,649 --> 00:24:29,370
problem actually have turned out to be

00:24:26,549 --> 00:24:30,750
with that earlier on we didn't have the

00:24:29,370 --> 00:24:33,179
full package set so we had different

00:24:30,750 --> 00:24:34,409
errors of dependencies later on it

00:24:33,179 --> 00:24:36,360
seemed that I found a patch for the boot

00:24:34,409 --> 00:24:38,370
loader so the reason why I wasn't

00:24:36,360 --> 00:24:39,779
working in 1921 initially is because we

00:24:38,370 --> 00:24:41,970
didn't have the full package set but it

00:24:39,779 --> 00:24:43,529
had the bootloader patch so looking back

00:24:41,970 --> 00:24:44,639
on it we just need to reapply the

00:24:43,529 --> 00:24:46,470
bootloader patch to what I was working

00:24:44,639 --> 00:24:49,379
on currently and it would totally work

00:24:46,470 --> 00:24:51,659
it would just totally work so 19-point

00:24:49,379 --> 00:24:53,549
31.3 was the right place to be but we

00:24:51,659 --> 00:24:55,799
went in this whole Gallic lactic trip

00:24:53,549 --> 00:24:57,690
around the universe to go back to where

00:24:55,799 --> 00:25:00,570
we started kind of a full circle kind of

00:24:57,690 --> 00:25:02,490
thing huh but in any case so finding out

00:25:00,570 --> 00:25:04,830
that the bootloader patch from my

00:25:02,490 --> 00:25:07,200
adventures in 22.4 was totally relevant

00:25:04,830 --> 00:25:08,610
to coming back to nineteen 431 was

00:25:07,200 --> 00:25:10,590
totally worth it as it was a very

00:25:08,610 --> 00:25:12,870
educational trip to know exactly how

00:25:10,590 --> 00:25:15,240
these pieces fit together in terms of

00:25:12,870 --> 00:25:16,679
what package is depend of what may be

00:25:15,240 --> 00:25:17,820
some work you did later on we'll come

00:25:16,679 --> 00:25:20,460
back to haunt you and it will be the

00:25:17,820 --> 00:25:23,070
real solution and from all this effort

00:25:20,460 --> 00:25:25,740
we now have a fully working text mode

00:25:23,070 --> 00:25:27,450
and graphical mode installer which is

00:25:25,740 --> 00:25:28,710
really important I think that's the main

00:25:27,450 --> 00:25:31,049
result of all these efforts that we put

00:25:28,710 --> 00:25:33,799
in and to give you a brief showing of

00:25:31,049 --> 00:25:33,799
what it actually looks like

00:25:34,930 --> 00:25:40,430
this lovely little thing is our leap

00:25:37,820 --> 00:25:42,800
installer window you can install eat

00:25:40,430 --> 00:25:44,900
just like how it looks like on fedora or

00:25:42,800 --> 00:25:47,780
any other installation that relies on to

00:25:44,900 --> 00:25:51,020
the Anaconda installer so we can throw

00:25:47,780 --> 00:25:54,140
in English it's a little bit slow as is

00:25:51,020 --> 00:26:00,770
using X forwarding but you can kind of

00:25:54,140 --> 00:26:02,690
see the results as it loads trust me it

00:26:00,770 --> 00:26:05,360
works it works it actually really it

00:26:02,690 --> 00:26:07,100
actually really works it actually really

00:26:05,360 --> 00:26:10,730
well there we go there there there there

00:26:07,100 --> 00:26:11,900
we go there we go so I won't run for the

00:26:10,730 --> 00:26:13,040
actual installation a few because on

00:26:11,900 --> 00:26:16,100
this particular machine it takes a very

00:26:13,040 --> 00:26:19,940
long time but trust me it does work it

00:26:16,100 --> 00:26:21,230
does hurt but that this is the visual

00:26:19,940 --> 00:26:23,270
presentation of the efforts that we put

00:26:21,230 --> 00:26:24,650
in during that time in the summer and to

00:26:23,270 --> 00:26:32,110
get installed working for our

00:26:24,650 --> 00:26:32,110
distribution now passing it back to that

00:26:32,710 --> 00:26:41,360
was the exporting yeah yep

00:26:37,670 --> 00:26:43,460
yep and so the Installer was done and

00:26:41,360 --> 00:26:45,680
we're really glad for that because what

00:26:43,460 --> 00:26:48,530
happened next was the release day

00:26:45,680 --> 00:26:51,470
releasing so it says July seventeenth

00:26:48,530 --> 00:26:53,660
which is kind of accurate it's also kind

00:26:51,470 --> 00:26:55,610
of my current we originally planned to

00:26:53,660 --> 00:26:56,900
release during and candidate but do we

00:26:55,610 --> 00:26:58,070
do certain marketing issues and so it

00:26:56,900 --> 00:26:59,630
seemed like it wasn't such a good time

00:26:58,070 --> 00:27:02,540
to release so we pushed it back a little

00:26:59,630 --> 00:27:05,030
bit to around July fifteenth was our

00:27:02,540 --> 00:27:06,290
expected day of release but as a

00:27:05,030 --> 00:27:07,940
first-timer I didn't know what a release

00:27:06,290 --> 00:27:09,230
date would be like so I will tell you

00:27:07,940 --> 00:27:10,820
about the experiences that we had during

00:27:09,230 --> 00:27:13,730
that time hopefully you'll find it a

00:27:10,820 --> 00:27:14,960
little interesting so July fifteenth we

00:27:13,730 --> 00:27:16,460
look like we were ready to go the

00:27:14,960 --> 00:27:19,070
Installer was working I did multiple

00:27:16,460 --> 00:27:21,200
composing of images to install with we

00:27:19,070 --> 00:27:22,790
tested on multi machines it seemed like

00:27:21,200 --> 00:27:25,130
everything is good to go the package set

00:27:22,790 --> 00:27:26,870
was not quite done we had a few single

00:27:25,130 --> 00:27:29,480
handful of packages still finish with

00:27:26,870 --> 00:27:31,550
rebranding and such so we don't have any

00:27:29,480 --> 00:27:34,610
traces of Santos or otherwise writing

00:27:31,550 --> 00:27:37,090
that get us in trouble and so we're

00:27:34,610 --> 00:27:39,620
working on those in the last day and

00:27:37,090 --> 00:27:41,900
what happened was the literal eleventh

00:27:39,620 --> 00:27:44,510
hour of that day 11 p.m. or so we hit an

00:27:41,900 --> 00:27:46,370
error with the installer and it was

00:27:44,510 --> 00:27:48,740
nightmarish we did not know what's going

00:27:46,370 --> 00:27:51,050
on we didn't know what was causing it

00:27:48,740 --> 00:27:53,360
initially but we were in a bit of a

00:27:51,050 --> 00:27:54,980
flurry it turns out the very last

00:27:53,360 --> 00:27:56,690
package that we were trying to fix that

00:27:54,980 --> 00:27:57,950
night what's the one causing the issue

00:27:56,690 --> 00:28:00,650
you in the Installer it would just break

00:27:57,950 --> 00:28:02,390
the graph of insulation entirely entire

00:28:00,650 --> 00:28:05,510
it would just not seem to work it was

00:28:02,390 --> 00:28:08,690
just a long Trey stack of tough stuff

00:28:05,510 --> 00:28:10,430
that we were laying to gtk so we had a

00:28:08,690 --> 00:28:12,170
really long night that night suffice to

00:28:10,430 --> 00:28:13,850
say it was mid-morning by time people

00:28:12,170 --> 00:28:17,990
got home and we realized this could not

00:28:13,850 --> 00:28:19,130
be finished today so today after we me

00:28:17,990 --> 00:28:20,480
and glazier over here we were just

00:28:19,130 --> 00:28:22,970
fixing that last package that very last

00:28:20,480 --> 00:28:24,710
package just to get it done we stayed

00:28:22,970 --> 00:28:28,520
the whole day more or less but we got it

00:28:24,710 --> 00:28:29,750
done it was pretty troublesome to get

00:28:28,520 --> 00:28:32,180
all that rebranding done but it was done

00:28:29,750 --> 00:28:34,280
and then I tested multiple times again

00:28:32,180 --> 00:28:36,260
several smoke tests the Installer was

00:28:34,280 --> 00:28:38,180
working again I was pretty pleased so

00:28:36,260 --> 00:28:40,550
the day after that the Friday July

00:28:38,180 --> 00:28:42,110
seventeenth we were all ready to go all

00:28:40,550 --> 00:28:43,820
of us in the office where we're done

00:28:42,110 --> 00:28:45,770
we're ready we'll do some documentation

00:28:43,820 --> 00:28:48,290
fix some stuff some grammar

00:28:45,770 --> 00:28:49,700
and we'll release so on the count of

00:28:48,290 --> 00:28:52,010
five chris tyler would like we'll all

00:28:49,700 --> 00:28:53,630
press ENTER on this keyboard and what's

00:28:52,010 --> 00:28:57,140
that we do that leap is released and

00:28:53,630 --> 00:28:58,880
it's real and so we survive this day not

00:28:57,140 --> 00:29:01,730
exactly according to plan but it got out

00:28:58,880 --> 00:29:03,290
there more or less on time and that's

00:29:01,730 --> 00:29:06,140
kind of the quick and dirty of the

00:29:03,290 --> 00:29:07,490
release day experiences that we had if

00:29:06,140 --> 00:29:09,290
you like toss this later about it where

00:29:07,490 --> 00:29:11,060
you can share with the entire experience

00:29:09,290 --> 00:29:12,830
with you at some point but we'll leave

00:29:11,060 --> 00:29:14,210
that for another time as I'm gonna pass

00:29:12,830 --> 00:29:18,280
it back to Glaser and he'll do a little

00:29:14,210 --> 00:29:18,280
bit demonstration of what leap can do

00:29:19,540 --> 00:29:29,530
before I demonstrate leap oops so I want

00:29:26,690 --> 00:29:33,050
to show that actually this picture this

00:29:29,530 --> 00:29:37,070
this thing called leap top it is a side

00:29:33,050 --> 00:29:40,610
project that crystal is doing so he's

00:29:37,070 --> 00:29:43,690
actually using a a am 64 board called

00:29:40,610 --> 00:29:49,420
high key which is above the size of a a

00:29:43,690 --> 00:29:52,850
cart he attached the high keyboard and

00:29:49,420 --> 00:29:58,220
also the battery and also caused the pry

00:29:52,850 --> 00:30:03,370
at the back of a portable monitor so he

00:29:58,220 --> 00:30:08,840
also run leap on the high key which is

00:30:03,370 --> 00:30:15,440
not supposed to be a graphical OS but it

00:30:08,840 --> 00:30:17,560
works and it works but we really have

00:30:15,440 --> 00:30:21,100
some a little bit of crashing but

00:30:17,560 --> 00:30:25,370
overall is really good we are surprising

00:30:21,100 --> 00:30:29,300
so so after this I I would like to

00:30:25,370 --> 00:30:33,260
demonstrate some tools we have on lib

00:30:29,300 --> 00:30:37,700
just come in line but I hope you get the

00:30:33,260 --> 00:30:40,810
idea how late looks like you're easier

00:30:37,700 --> 00:30:40,810
than you can you hold it

00:30:42,290 --> 00:30:45,290
so

00:30:46,060 --> 00:30:54,370
so here's what I'm using is love our

00:30:49,210 --> 00:31:01,730
exchange exchange is wealthy server

00:30:54,370 --> 00:31:04,940
server I'm 64 port we can see the name

00:31:01,730 --> 00:31:14,530
gay we have a kernel that hasn't the

00:31:04,940 --> 00:31:14,530
leap names so we also can so the release

00:31:15,910 --> 00:31:27,110
it release yes yep so here is a liquid

00:31:20,900 --> 00:31:32,240
list 7.1 on all 13 okay so let's

00:31:27,110 --> 00:31:34,690
demonstrate some tools we so on this

00:31:32,240 --> 00:31:39,080
machine are already installed our

00:31:34,690 --> 00:31:41,840
benchmarking tools here's I can show a

00:31:39,080 --> 00:31:47,290
little bit of benchmarking tools but I'm

00:31:41,840 --> 00:31:47,290
not going to wait until it's finished so

00:31:47,770 --> 00:31:55,390
this is running some kalpesh marking and

00:31:56,620 --> 00:32:04,090
also add that's also feel which

00:32:05,930 --> 00:32:12,710
sorry ok feel

00:32:15,360 --> 00:32:17,929
all

00:32:19,099 --> 00:32:27,989
okay so all right I'm going to

00:32:23,129 --> 00:32:31,200
demonstrate darker so right now I have a

00:32:27,989 --> 00:32:35,129
darker image here already we recreated

00:32:31,200 --> 00:32:38,609
from a base top row that contains all

00:32:35,129 --> 00:32:43,409
the system file of lip so you can see

00:32:38,609 --> 00:32:45,989
here we have we have a target images

00:32:43,409 --> 00:32:52,799
call dr. tests which is contains all the

00:32:45,989 --> 00:32:58,339
lip stuff so right now we are at a root

00:32:52,799 --> 00:32:58,339
folder we have this kind of stuff so and

00:32:58,639 --> 00:33:06,619
then right now I try to run a bath

00:33:01,229 --> 00:33:12,329
script inside container so let you see

00:33:06,619 --> 00:33:15,049
how the difference is so here is a the

00:33:12,329 --> 00:33:19,469
system inside the doc doc a container

00:33:15,049 --> 00:33:22,109
let's go to / route so you can see this

00:33:19,469 --> 00:33:26,339
is quite different I can also run some

00:33:22,109 --> 00:33:33,859
basic command like this and then when i

00:33:26,339 --> 00:33:37,889
exit it goes back to exchange alright so

00:33:33,859 --> 00:33:42,139
also there's some other prime

00:33:37,889 --> 00:33:48,509
but uh and austria if i can run that

00:33:42,139 --> 00:33:52,799
we're still reading the menu so yeah so

00:33:48,509 --> 00:33:55,369
there is a demo there's a short demo so

00:33:52,799 --> 00:33:55,369
how did

00:34:00,149 --> 00:34:09,849
so yeah that's right / how awkward Oh

00:34:05,759 --> 00:34:15,099
next makes it okay okay post real is so

00:34:09,849 --> 00:34:18,789
post really is what we are doing after

00:34:15,099 --> 00:34:23,549
to release all about is updating the

00:34:18,789 --> 00:34:27,309
broad after updating the wiki and also

00:34:23,549 --> 00:34:30,429
releasing the ecology building system so

00:34:27,309 --> 00:34:34,210
that the public can use the co JP system

00:34:30,429 --> 00:34:37,270
to build I'm 64 packages using our

00:34:34,210 --> 00:34:47,770
infrastructure let me show you a little

00:34:37,270 --> 00:34:52,720
bit as well oh so you can see here is

00:34:47,770 --> 00:34:55,659
our home page we have some pages here

00:34:52,720 --> 00:35:00,369
talking about the details of lip some

00:34:55,659 --> 00:35:03,809
freakin ass answers and some interests

00:35:00,369 --> 00:35:12,329
of all pages again lip with key account

00:35:03,809 --> 00:35:12,329
and didn't block

00:35:14,840 --> 00:35:19,090
yeah yep so

00:35:20,470 --> 00:35:28,210
so this one is also our one of our

00:35:24,609 --> 00:35:30,070
websites which is a have some blocks

00:35:28,210 --> 00:35:35,320
that talking about some of the details

00:35:30,070 --> 00:35:40,540
we are working on also the story we we

00:35:35,320 --> 00:35:45,609
how we have to dealing with late

00:35:40,540 --> 00:35:50,410
building and also we have a pope word

00:35:45,609 --> 00:35:52,630
cozy few systems so you can see it it's

00:35:50,410 --> 00:35:57,940
actually building some packages I will

00:35:52,630 --> 00:36:00,250
talk about that later as well are you

00:35:57,940 --> 00:36:03,359
going back inside yeah you taught the

00:36:00,250 --> 00:36:03,359
first exit instead

00:36:08,000 --> 00:36:16,910
who the prison dates so last two months

00:36:12,440 --> 00:36:21,110
I usually focus on building the updates

00:36:16,910 --> 00:36:24,190
and apple so Apple stand for extra

00:36:21,110 --> 00:36:28,880
packages for Enterprise Linux which

00:36:24,190 --> 00:36:33,680
contains a bunch of bunch of like 4500

00:36:28,880 --> 00:36:38,710
packages for especially for Santos and

00:36:33,680 --> 00:36:44,540
leap so we are building a personal leap

00:36:38,710 --> 00:36:46,820
because there's no apple for arm 64 yet

00:36:44,540 --> 00:36:50,120
so we are building her a whole rip

00:36:46,820 --> 00:36:53,020
repository for that which might be

00:36:50,120 --> 00:36:56,260
useful for other tips for espero and

00:36:53,020 --> 00:37:01,390
also about the updates we are going to

00:36:56,260 --> 00:37:07,130
push the updates within one week after

00:37:01,390 --> 00:37:10,090
Santos released updates so Michael will

00:37:07,130 --> 00:37:12,650
talk about the ayah prefer to process

00:37:10,090 --> 00:37:13,670
all right so as place was leading to

00:37:12,650 --> 00:37:15,830
this is what we've been up to in the

00:37:13,670 --> 00:37:17,720
last couple months or so so pretty much

00:37:15,830 --> 00:37:20,300
the semesters worth of work that we've

00:37:17,720 --> 00:37:23,300
been doing so after finishing the

00:37:20,300 --> 00:37:25,460
installer portion of the release I was

00:37:23,300 --> 00:37:27,830
put on some various tasks after that

00:37:25,460 --> 00:37:29,810
post release but one of the things that

00:37:27,830 --> 00:37:31,250
our previous co worker Artem was working

00:37:29,810 --> 00:37:33,770
on majority throughout his entire term

00:37:31,250 --> 00:37:36,860
last semester was I will be 32 so just

00:37:33,770 --> 00:37:38,510
describe what it is first so I'll be 32

00:37:36,860 --> 00:37:41,000
it's a see language data model where

00:37:38,510 --> 00:37:44,900
integers long and pointers are all 32

00:37:41,000 --> 00:37:48,380
bit so the data model for Eric 64

00:37:44,900 --> 00:37:51,110
normally is LP 64 so that's or 64 bit so

00:37:48,380 --> 00:37:53,690
what is having I'll be 32 on a rc4 mean

00:37:51,110 --> 00:37:56,210
so it means that you can use the 64-bit

00:37:53,690 --> 00:37:58,460
instruction set in AR 64 and you'll be

00:37:56,210 --> 00:38:00,560
able to produce 32-bit code so you can

00:37:58,460 --> 00:38:02,360
do 32 bit on your seams for only machine

00:38:00,560 --> 00:38:04,360
but the other thing is that you can also

00:38:02,360 --> 00:38:06,470
run existing 32-bit code bases

00:38:04,360 --> 00:38:07,640
preparatory or otherwise code that

00:38:06,470 --> 00:38:10,250
people don't want to change any more on

00:38:07,640 --> 00:38:11,930
the 64-bit only hardware so having this

00:38:10,250 --> 00:38:14,690
kind of functionality is actually pretty

00:38:11,930 --> 00:38:17,620
useful for making things more portable

00:38:14,690 --> 00:38:19,820
and usable on they are 64 in general

00:38:17,620 --> 00:38:21,230
currently at this point in time there

00:38:19,820 --> 00:38:21,690
really isn't a public tool chain for

00:38:21,230 --> 00:38:24,810
this

00:38:21,690 --> 00:38:27,510
so it's mostly kept privately in

00:38:24,810 --> 00:38:29,820
wherever where it might be but the

00:38:27,510 --> 00:38:31,740
source code for the patches to make it

00:38:29,820 --> 00:38:33,090
available are out there but there is

00:38:31,740 --> 00:38:35,220
really no platform they can just say

00:38:33,090 --> 00:38:38,010
it's download and use it and see if it

00:38:35,220 --> 00:38:39,240
works and tested for yourself so this is

00:38:38,010 --> 00:38:41,280
the part that Arden was working on and

00:38:39,240 --> 00:38:43,140
after his his departure from our team I

00:38:41,280 --> 00:38:44,820
started picking up on it at the end of

00:38:43,140 --> 00:38:47,370
last semester up until this point in

00:38:44,820 --> 00:38:49,020
time so what are the tools are aware of

00:38:47,370 --> 00:38:50,490
the pieces that are involved in

00:38:49,020 --> 00:38:53,990
achieving this particular capability

00:38:50,490 --> 00:38:57,570
there are four things in in particular

00:38:53,990 --> 00:38:59,700
binutils which has the linker in it GCC

00:38:57,570 --> 00:39:01,920
the actual compiler do you leave see the

00:38:59,700 --> 00:39:03,420
libraries that you need and the kernel

00:39:01,920 --> 00:39:06,870
itself so we can understand that 32-bit

00:39:03,420 --> 00:39:08,820
code so from myself in particular I was

00:39:06,870 --> 00:39:11,040
working on bin utilice of artem in the

00:39:08,820 --> 00:39:13,110
in the end of last semester and we were

00:39:11,040 --> 00:39:15,510
to get that done but after his departure

00:39:13,110 --> 00:39:17,460
he was working a resource / torture

00:39:15,510 --> 00:39:19,350
rather he was working on the GCC and g

00:39:17,460 --> 00:39:20,810
lipsy portions to get those patch so

00:39:19,350 --> 00:39:22,440
that they have this capability

00:39:20,810 --> 00:39:24,540
unfortunately he wasn't able to finish

00:39:22,440 --> 00:39:26,670
all of it at the time so I picked up on

00:39:24,540 --> 00:39:29,550
it after his departure this semester so

00:39:26,670 --> 00:39:31,740
to give a visual example on how this all

00:39:29,550 --> 00:39:33,450
relates together the linker the compiler

00:39:31,740 --> 00:39:35,730
in the libraries and the colonel we have

00:39:33,450 --> 00:39:37,710
this lovely little image a different

00:39:35,730 --> 00:39:39,750
kind of travel maybe a certain set of

00:39:37,710 --> 00:39:41,520
tunnels that we went through so let's

00:39:39,750 --> 00:39:43,920
say we have our source code hello see a

00:39:41,520 --> 00:39:45,390
hollow world thing and what we want to

00:39:43,920 --> 00:39:47,700
do is we want to get 32 bit version of

00:39:45,390 --> 00:39:49,830
it on our 64-bit platform what we would

00:39:47,700 --> 00:39:53,400
need is we will need to compile it with

00:39:49,830 --> 00:39:55,020
an ILP 32 patched compiler GCC and also

00:39:53,400 --> 00:39:58,140
feed it the flags that would need to say

00:39:55,020 --> 00:40:00,540
build isn't 32-bit and or I'll be 32

00:39:58,140 --> 00:40:03,150
brother and so it does that it'll give

00:40:00,540 --> 00:40:04,710
you the hello object file and with that

00:40:03,150 --> 00:40:06,780
object file you need a linker that can

00:40:04,710 --> 00:40:09,690
link it properly to understand that

00:40:06,780 --> 00:40:11,850
you're linking for iop 32 but you need

00:40:09,690 --> 00:40:15,570
libraries that link it with so you need

00:40:11,850 --> 00:40:17,190
an ILP 32 patch GFC as well and then it

00:40:15,570 --> 00:40:21,120
can link to you an executable which will

00:40:17,190 --> 00:40:22,890
be 32 bit in essence but you also need a

00:40:21,120 --> 00:40:24,270
kernel that can also process that so you

00:40:22,890 --> 00:40:26,280
can actually see your hello world at the

00:40:24,270 --> 00:40:27,330
end of the day so these are the pieces

00:40:26,280 --> 00:40:28,740
that we're working on and this is the

00:40:27,330 --> 00:40:31,590
kind of flow that it needs to go to

00:40:28,740 --> 00:40:33,630
actually get even do this hello world so

00:40:31,590 --> 00:40:34,360
the pieces that we finished binutils me

00:40:33,630 --> 00:40:37,180
and artem we fin

00:40:34,360 --> 00:40:38,440
and it was pretty good but we were

00:40:37,180 --> 00:40:42,310
having a lot of struggles doing the

00:40:38,440 --> 00:40:44,620
patching for GCC and G lipsy what it

00:40:42,310 --> 00:40:47,560
turned out is that there were a very

00:40:44,620 --> 00:40:49,030
public set of patches for GCC ng let's

00:40:47,560 --> 00:40:50,740
see that we could apply by one Andrew

00:40:49,030 --> 00:40:52,480
Pinsky who is the main spearhead on

00:40:50,740 --> 00:40:54,820
making the patches for this

00:40:52,480 --> 00:40:56,500
functionality for ecstasy for since

00:40:54,820 --> 00:40:57,910
there isn't any publicly released too

00:40:56,500 --> 00:41:00,250
ashamed for it you kind of have to patch

00:40:57,910 --> 00:41:03,130
it yourself and get to go we wanted to

00:41:00,250 --> 00:41:05,020
have this functionality for leap because

00:41:03,130 --> 00:41:07,330
of the space plus I reason stuff before

00:41:05,020 --> 00:41:09,130
we want to be able to compile 32-bit

00:41:07,330 --> 00:41:13,180
code on 64-bit only system and to run

00:41:09,130 --> 00:41:14,920
32-bit code on 64 only system so about

00:41:13,180 --> 00:41:17,110
two weeks into this semester I was able

00:41:14,920 --> 00:41:19,420
to get the GCC patched and it seemed to

00:41:17,110 --> 00:41:21,820
work the struggle after that was to get

00:41:19,420 --> 00:41:24,550
G lipsy patched and it took about a

00:41:21,820 --> 00:41:26,950
month and a half almost to get it done

00:41:24,550 --> 00:41:29,860
but as of two Thursday's ago we actually

00:41:26,950 --> 00:41:31,480
have a fully working I think a fully

00:41:29,860 --> 00:41:34,570
working a tool chains and actually

00:41:31,480 --> 00:41:36,520
produced 32-bit code so we are almost

00:41:34,570 --> 00:41:37,810
there but we just need the piece that

00:41:36,520 --> 00:41:40,180
we're missing right now is the colonel

00:41:37,810 --> 00:41:42,160
so we can produce the AL file it's 32

00:41:40,180 --> 00:41:43,510
bit but we still can't run it yet so you

00:41:42,160 --> 00:41:44,710
can't tell the world yet but we should

00:41:43,510 --> 00:41:47,260
have this functionality done by the end

00:41:44,710 --> 00:41:48,550
of the year that is the goal and that is

00:41:47,260 --> 00:41:51,190
the plan and it will be done I am

00:41:48,550 --> 00:41:53,170
certain i am totally certain so but

00:41:51,190 --> 00:41:54,880
we're doing this for particular reasons

00:41:53,170 --> 00:41:56,680
but before I should tell you of those

00:41:54,880 --> 00:42:00,160
reasons exactly let's just have a little

00:41:56,680 --> 00:42:02,800
quick very very quick demonstration on

00:42:00,160 --> 00:42:04,870
on where to show you that info copy that

00:42:02,800 --> 00:42:07,930
we showed you so please rape you like to

00:42:04,870 --> 00:42:10,570
hold a microwave all right yep so over

00:42:07,930 --> 00:42:13,570
here on the left side of screen is a

00:42:10,570 --> 00:42:15,570
mock route it's every system that's not

00:42:13,570 --> 00:42:17,410
the actual root system of that system

00:42:15,570 --> 00:42:18,610
we're doing this because I don't really

00:42:17,410 --> 00:42:20,650
want to screw up the actual system

00:42:18,610 --> 00:42:22,810
because it's a lab testing but as you

00:42:20,650 --> 00:42:24,970
can see there is a hollow see file and

00:42:22,810 --> 00:42:26,680
it's just cat what's inside it's as you

00:42:24,970 --> 00:42:29,620
would expect it's just a hello world

00:42:26,680 --> 00:42:32,260
program but even this requires the

00:42:29,620 --> 00:42:33,190
proper libraries to be linked and the

00:42:32,260 --> 00:42:34,630
compiler to understand why I hope either

00:42:33,190 --> 00:42:37,270
do is to actually make that eight out of

00:42:34,630 --> 00:42:40,570
file that we talked about so just to

00:42:37,270 --> 00:42:42,589
quickly show you this is the GCC command

00:42:40,570 --> 00:42:47,059
that you would want to use to curry

00:42:42,589 --> 00:42:49,430
this lead out without p32 you specify

00:42:47,059 --> 00:42:57,640
that the na VI is i'll be there too so

00:42:49,430 --> 00:43:01,549
the oh no I'm lose my mind area the

00:42:57,640 --> 00:43:05,029
application binary interface interface

00:43:01,549 --> 00:43:06,200
yeah okay and then after that when you

00:43:05,029 --> 00:43:08,299
specify that it will know that you want

00:43:06,200 --> 00:43:09,499
you want to compile file be 32 but then

00:43:08,299 --> 00:43:10,880
after that you eat also help you tell

00:43:09,499 --> 00:43:12,859
the linker that you need to link this

00:43:10,880 --> 00:43:13,999
without Peter 2 i'll be there to solo

00:43:12,859 --> 00:43:16,069
for the exact weight libraries you want

00:43:13,999 --> 00:43:17,719
so we use the ex linker argument and we

00:43:16,069 --> 00:43:20,869
pass in the emulation mode that we want

00:43:17,719 --> 00:43:22,849
which is AFC 4 lf32 and also the hello

00:43:20,869 --> 00:43:25,700
see file and what this will do is that

00:43:22,849 --> 00:43:28,519
it will do as you expect we have a 80

00:43:25,700 --> 00:43:32,059
file which is normal but when you do a

00:43:28,519 --> 00:43:33,319
file on it it's not a 64-bit executable

00:43:32,059 --> 00:43:35,809
you expect it's actually a 32-bit

00:43:33,319 --> 00:43:37,759
executable so this is showing me that

00:43:35,809 --> 00:43:38,779
it's producing what I want I would love

00:43:37,759 --> 00:43:39,950
to show you what after you say hello

00:43:38,779 --> 00:43:41,809
world but we're not quite there yet but

00:43:39,950 --> 00:43:43,880
hopefully that will be there very very

00:43:41,809 --> 00:43:45,349
soon and that's kind of the work that

00:43:43,880 --> 00:43:46,670
I've been doing on I'll be 32 it's

00:43:45,349 --> 00:43:48,529
getting pretty close to completion and

00:43:46,670 --> 00:43:50,749
it's one of the features that it's gonna

00:43:48,529 --> 00:43:52,759
be a main point for what's different

00:43:50,749 --> 00:43:56,420
from leaked from any other distribution

00:43:52,759 --> 00:43:59,749
for XP for at this time so moving back

00:43:56,420 --> 00:44:02,450
to the slides I will talk a bit about

00:43:59,749 --> 00:44:04,400
the hardware so we've talked a bit about

00:44:02,450 --> 00:44:06,140
the distribution what it can do what it

00:44:04,400 --> 00:44:08,089
has what's different from it and other

00:44:06,140 --> 00:44:10,130
and other instruments let's talk a

00:44:08,089 --> 00:44:11,239
little about the hardware so in the

00:44:10,130 --> 00:44:13,369
front of the table here we have some the

00:44:11,239 --> 00:44:14,839
hardware that we use here I'll describe

00:44:13,369 --> 00:44:16,249
the little bit more later but let's talk

00:44:14,839 --> 00:44:19,729
about a little bit about some of the

00:44:16,249 --> 00:44:21,499
standards so prior to these two

00:44:19,729 --> 00:44:23,539
specifications and we talked about the

00:44:21,499 --> 00:44:25,849
world of arm was kind of a real Wild

00:44:23,539 --> 00:44:27,499
West world not to sit in your throat no

00:44:25,849 --> 00:44:29,210
two systems were necessarily exactly the

00:44:27,499 --> 00:44:30,920
same if you're trying to install this

00:44:29,210 --> 00:44:32,089
software on one system it might not

00:44:30,920 --> 00:44:34,869
necessarily work because it has less

00:44:32,089 --> 00:44:38,329
silicon so it does not those features or

00:44:34,869 --> 00:44:40,519
the software in general is not is not

00:44:38,329 --> 00:44:41,989
there's no real constraints on the

00:44:40,519 --> 00:44:44,599
bootloader for example so you can't

00:44:41,989 --> 00:44:46,819
necessarily install correctly under that

00:44:44,599 --> 00:44:49,309
system which you would expect so what

00:44:46,819 --> 00:44:51,349
the device was to specific

00:44:49,309 --> 00:44:53,119
specifications one of which was the

00:44:51,349 --> 00:44:53,430
server based system architecture at the

00:44:53,119 --> 00:44:55,980
S

00:44:53,430 --> 00:44:58,200
ESA so it develop my arm and the various

00:44:55,980 --> 00:45:00,329
partners that is working with and it

00:44:58,200 --> 00:45:02,849
wanted to do a specification to make

00:45:00,329 --> 00:45:06,540
certain constraints about what it means

00:45:02,849 --> 00:45:09,030
to be an AR x64 arm v8 server so the

00:45:06,540 --> 00:45:11,220
hardware specification so it want to

00:45:09,030 --> 00:45:12,990
make something that's controllable to a

00:45:11,220 --> 00:45:16,530
degree so is that if you have one image

00:45:12,990 --> 00:45:18,240
let's say send toss or fedora or even

00:45:16,530 --> 00:45:19,950
lead that it was install properly onto

00:45:18,240 --> 00:45:22,200
that hardware without any issue on the

00:45:19,950 --> 00:45:23,849
very base level anything else you can

00:45:22,200 --> 00:45:25,980
you know leave it to the vendors to

00:45:23,849 --> 00:45:27,599
customize for additional feature sets

00:45:25,980 --> 00:45:32,579
and such but the bigger base level we

00:45:27,599 --> 00:45:34,859
want this to be real and so as I said

00:45:32,579 --> 00:45:36,630
before before it specification it could

00:45:34,859 --> 00:45:39,180
have been anything your arm processor

00:45:36,630 --> 00:45:41,160
could be missing this or that because of

00:45:39,180 --> 00:45:43,740
their cost sensitive situations for

00:45:41,160 --> 00:45:45,150
their their use cases or otherwise but

00:45:43,740 --> 00:45:47,309
in a server case where you're running

00:45:45,150 --> 00:45:48,420
very complex operations likely you want

00:45:47,309 --> 00:45:50,790
something that's stable and let's

00:45:48,420 --> 00:45:54,030
confirm to work with what you would

00:45:50,790 --> 00:45:57,230
expect all the time not just sometimes

00:45:54,030 --> 00:46:00,000
so this fits if the specific

00:45:57,230 --> 00:46:02,250
specification it's not it's not

00:46:00,000 --> 00:46:04,260
necessary to comply to this but arm

00:46:02,250 --> 00:46:07,079
itself expects that following it will be

00:46:04,260 --> 00:46:08,790
required to maximize your capability and

00:46:07,079 --> 00:46:10,410
reliability of your software so they

00:46:08,790 --> 00:46:11,760
want to make the hardware at least have

00:46:10,410 --> 00:46:15,030
a very base level that everything should

00:46:11,760 --> 00:46:18,569
work this way on it and so the other

00:46:15,030 --> 00:46:21,030
side of this is the system based boot

00:46:18,569 --> 00:46:22,319
requirements the SBB are which is kind

00:46:21,030 --> 00:46:25,010
of the software side of this kind of

00:46:22,319 --> 00:46:26,970
specification these compliance ease that

00:46:25,010 --> 00:46:28,710
certain things need to work this way

00:46:26,970 --> 00:46:30,960
otherwise we can't really have a real

00:46:28,710 --> 00:46:33,720
platform to do really anything with

00:46:30,960 --> 00:46:35,010
because it could vary so much so what

00:46:33,720 --> 00:46:37,230
they want to do with that they want to

00:46:35,010 --> 00:46:38,430
specify certain standards for some of

00:46:37,230 --> 00:46:40,319
the firmware such as for booting

00:46:38,430 --> 00:46:41,670
although it says system based boo

00:46:40,319 --> 00:46:42,809
requirement it doesn't just necessarily

00:46:41,670 --> 00:46:45,690
relate to the boot process and what

00:46:42,809 --> 00:46:47,849
supports also things such as discovering

00:46:45,690 --> 00:46:51,270
information about this delta system need

00:46:47,849 --> 00:46:53,390
to be very certain and defined so there

00:46:51,270 --> 00:46:55,770
are three pieces to it there's the UEFI

00:46:53,390 --> 00:46:57,240
which is the unified sensible firmware

00:46:55,770 --> 00:47:00,690
interface the replacements for bios

00:46:57,240 --> 00:47:02,190
essentially the acpi which is the

00:47:00,690 --> 00:47:04,120
advanced configuration of power to face

00:47:02,190 --> 00:47:06,430
it will be able to

00:47:04,120 --> 00:47:08,680
hardware for you and do power management

00:47:06,430 --> 00:47:11,890
and monitoring and such and so forth and

00:47:08,680 --> 00:47:13,390
the symbiosis which will also pick up

00:47:11,890 --> 00:47:15,760
information that is not normally picked

00:47:13,390 --> 00:47:17,740
up by a CPI as I understand it but in

00:47:15,760 --> 00:47:18,820
any case these specifications are out

00:47:17,740 --> 00:47:20,260
there for you read if you would like to

00:47:18,820 --> 00:47:21,760
read more about them but the main point

00:47:20,260 --> 00:47:23,680
of these locations are such that they

00:47:21,760 --> 00:47:25,900
want to create a real platform that you

00:47:23,680 --> 00:47:29,080
can really use and depend on one image

00:47:25,900 --> 00:47:31,750
for this system should work on another

00:47:29,080 --> 00:47:34,540
system just like that so it's comparing

00:47:31,750 --> 00:47:37,060
this to X 2 X 8 64 where that is the

00:47:34,540 --> 00:47:38,860
case they really need to do something to

00:47:37,060 --> 00:47:41,470
make it such as an even ground for all

00:47:38,860 --> 00:47:43,090
developers and for one thing to work on

00:47:41,470 --> 00:47:45,370
everything essentially that's what a

00:47:43,090 --> 00:47:46,300
platform really means I would say so now

00:47:45,370 --> 00:47:48,370
that we've gone through a little bit of

00:47:46,300 --> 00:47:50,740
specifications of the these compliance

00:47:48,370 --> 00:47:54,070
ease we can talk a little bit about what

00:47:50,740 --> 00:47:55,900
we actually support for leap so please I

00:47:54,070 --> 00:47:57,970
mentioned the APM X jeans before it's a

00:47:55,900 --> 00:47:59,710
development kit made by APM we have a

00:47:57,970 --> 00:48:02,740
few of them in the lab downstairs I

00:47:59,710 --> 00:48:04,390
didn't bring one to show you but you can

00:48:02,740 --> 00:48:06,550
definitely put up online and the next

00:48:04,390 --> 00:48:08,950
one in our supported hardware is the AMD

00:48:06,550 --> 00:48:10,660
opteron or the Seattle so the Seattle is

00:48:08,950 --> 00:48:12,280
this machine over here the one in this

00:48:10,660 --> 00:48:15,840
case if you like take a look afterwards

00:48:12,280 --> 00:48:18,760
more closely your feel free to do so and

00:48:15,840 --> 00:48:20,920
the so those are not commercially

00:48:18,760 --> 00:48:22,480
available kits they're under NDA s and

00:48:20,920 --> 00:48:24,400
you have to apply for them with the

00:48:22,480 --> 00:48:25,210
company's specified but there are some

00:48:24,400 --> 00:48:28,060
things are commercially available

00:48:25,210 --> 00:48:30,310
actually so the Heike that plays were

00:48:28,060 --> 00:48:31,990
mentioned before that was running chris

00:48:30,310 --> 00:48:33,880
tyler sleep top his little laptop is

00:48:31,990 --> 00:48:37,000
actually this guy so it's a very small

00:48:33,880 --> 00:48:38,440
card or a small card like board it's

00:48:37,000 --> 00:48:40,030
about the size of a credit card but it's

00:48:38,440 --> 00:48:41,860
a fully working system actually we've up

00:48:40,030 --> 00:48:44,710
we've installed leap on this and it does

00:48:41,860 --> 00:48:47,140
work pretty well so there are a few

00:48:44,710 --> 00:48:48,220
variants of the Heike there's the

00:48:47,140 --> 00:48:49,660
original one which is this one and

00:48:48,220 --> 00:48:51,910
there's a few that are being made by a

00:48:49,660 --> 00:48:53,470
company called a maker and there are

00:48:51,910 --> 00:48:55,960
more boards to come in that size in

00:48:53,470 --> 00:48:58,990
enterprise and commercial contacts a--'s

00:48:55,960 --> 00:49:01,030
but we do support them very likely and

00:48:58,990 --> 00:49:03,220
the sapphire and overdrive is a

00:49:01,030 --> 00:49:05,740
commercially available version of the

00:49:03,220 --> 00:49:07,750
seattle over here so you can probably

00:49:05,740 --> 00:49:10,080
purchase it very soon I believe they're

00:49:07,750 --> 00:49:12,460
on pre-order if not until already and

00:49:10,080 --> 00:49:13,630
this just a small list of this hardware

00:49:12,460 --> 00:49:14,830
that we're supporting at this time but

00:49:13,630 --> 00:49:15,380
we're looking to support more and more

00:49:14,830 --> 00:49:17,240
as time to

00:49:15,380 --> 00:49:19,130
on and if any partners would like to

00:49:17,240 --> 00:49:20,960
partner with us so that's just a brief

00:49:19,130 --> 00:49:23,269
take on what the hardware that we

00:49:20,960 --> 00:49:26,119
support is and I will leave it up the

00:49:23,269 --> 00:49:30,230
Glaser to do a bit of a conclusion for

00:49:26,119 --> 00:49:32,450
our presentation here oh yeah I'm doing

00:49:30,230 --> 00:49:34,609
it right yeah she never mind actually

00:49:32,450 --> 00:49:36,859
i'm doing the collision or sorry about

00:49:34,609 --> 00:49:39,109
that that was a last-minute switch up so

00:49:36,859 --> 00:49:40,880
our presentation today was mainly to

00:49:39,109 --> 00:49:42,829
show you a bit of the process of what we

00:49:40,880 --> 00:49:44,089
did to achieve what we have but mostly

00:49:42,829 --> 00:49:46,490
show you the achievements what we have

00:49:44,089 --> 00:49:49,309
so we were able to create an installer

00:49:46,490 --> 00:49:50,750
to distribute our distribution we are

00:49:49,309 --> 00:49:52,549
supporting these real boards that you

00:49:50,750 --> 00:49:54,049
can see before us we're adding real

00:49:52,549 --> 00:49:56,180
features that we hope to be very

00:49:54,049 --> 00:49:57,890
important in the future and our that are

00:49:56,180 --> 00:49:59,990
hopefully really desired by people users

00:49:57,890 --> 00:50:01,250
like yourself and we want to showcase a

00:49:59,990 --> 00:50:03,230
little bit about what it's all about

00:50:01,250 --> 00:50:06,410
working in in this kind of team at CDOT

00:50:03,230 --> 00:50:08,089
the open-source nature of it everything

00:50:06,410 --> 00:50:10,220
that we've done here today you can

00:50:08,089 --> 00:50:11,720
actually we can actually access our wiki

00:50:10,220 --> 00:50:12,920
our build system you can actually build

00:50:11,720 --> 00:50:15,170
your own sorry software on our build

00:50:12,920 --> 00:50:17,420
system you can see the RPM the actual

00:50:15,170 --> 00:50:20,660
spec files and we're also contact about

00:50:17,420 --> 00:50:22,579
anytime I mean about our project we want

00:50:20,660 --> 00:50:23,990
to show you the process the experiences

00:50:22,579 --> 00:50:25,490
that we've gained and the kind of

00:50:23,990 --> 00:50:27,920
enrichment that there can be in working

00:50:25,490 --> 00:50:29,509
an open source on a very probably a

00:50:27,920 --> 00:50:31,910
little strange project developing your

00:50:29,509 --> 00:50:33,890
own little linux OS for a particular

00:50:31,910 --> 00:50:36,140
hardware system and what comes with it

00:50:33,890 --> 00:50:38,509
so we hope you've enjoyed the

00:50:36,140 --> 00:50:40,490
presentation so far and now we will do a

00:50:38,509 --> 00:50:42,559
little bit of promotion so if you'd like

00:50:40,490 --> 00:50:44,930
to contact us you can find us on our

00:50:42,559 --> 00:50:47,869
wiki at lee product at CA we have an IRC

00:50:44,930 --> 00:50:49,819
channel on freenode leap technically we

00:50:47,869 --> 00:50:51,890
have a blog that you saw before we try

00:50:49,819 --> 00:50:53,180
to make as many foes as we can we have a

00:50:51,890 --> 00:50:54,769
bugzilla in case you actually do find

00:50:53,180 --> 00:50:56,809
any bugs with our stuff we're glad to

00:50:54,769 --> 00:50:57,920
know about it and fix it and we have our

00:50:56,809 --> 00:50:59,269
koji bill system which should be

00:50:57,920 --> 00:51:00,680
released to the public very soon so you

00:50:59,269 --> 00:51:03,950
can also use our system to build

00:51:00,680 --> 00:51:07,339
software for our distribution we're a

00:51:03,950 --> 00:51:08,960
mailing list and lastly you can actually

00:51:07,339 --> 00:51:11,150
contact me and glazier individual if

00:51:08,960 --> 00:51:13,640
you'd like to I am Michael Hong at hong

00:51:11,150 --> 00:51:17,920
kong at Seneca Lodge dossier and this is

00:51:13,640 --> 00:51:20,660
glazier at blazer klo @ gmail.com and

00:51:17,920 --> 00:51:21,940
that more or less concludes the majority

00:51:20,660 --> 00:51:24,790
of the presentation

00:51:21,940 --> 00:51:29,410
just one more thing so talking about

00:51:24,790 --> 00:51:32,380
Koji if you are you want to build a some

00:51:29,410 --> 00:51:35,740
64 package but you're not familiar with

00:51:32,380 --> 00:51:40,450
Koji you can check out fedora wiki and

00:51:35,740 --> 00:51:43,329
also our CEO wiki so that will give you

00:51:40,450 --> 00:51:48,220
enough emotion information for you to

00:51:43,329 --> 00:51:49,660
run kochi client come online yeah and I

00:51:48,220 --> 00:51:53,160
think we open up to some question

00:51:49,660 --> 00:51:53,160
answers if you would have any for us

00:51:55,170 --> 00:52:02,380
show the filter service built packages

00:51:58,329 --> 00:52:06,970
directly to the data storage just go

00:52:02,380 --> 00:52:13,569
back to really go back I would say it is

00:52:06,970 --> 00:52:16,450
actually going back to help but it

00:52:13,569 --> 00:52:19,839
depends on on on the settings actually

00:52:16,450 --> 00:52:25,390
the Builder has a option that you can

00:52:19,839 --> 00:52:30,720
bond n na s on the koji builder so that

00:52:25,390 --> 00:52:36,280
the computer can get the package from

00:52:30,720 --> 00:52:39,210
dolly from the nos and then Finn after

00:52:36,280 --> 00:52:41,470
finish it send may be sending some

00:52:39,210 --> 00:52:45,849
information back to the cozy up and then

00:52:41,470 --> 00:52:51,869
also directly store the file to the to

00:52:45,849 --> 00:52:51,869
mass storage yes and back

00:52:56,020 --> 00:52:58,830
yes

00:53:05,460 --> 00:53:15,060
oh yeah because we are going to make it

00:53:11,160 --> 00:53:19,380
CentOS 7 comparable ray so CentOS 7 is

00:53:15,060 --> 00:53:25,020
actually based on fedora 19 so we try to

00:53:19,380 --> 00:53:27,930
make the base as compatible as as we can

00:53:25,020 --> 00:53:32,970
so we packed fedora 19 package that

00:53:27,930 --> 00:53:42,619
instead of any newer percocet are there

00:53:32,970 --> 00:53:42,619

YouTube URL: https://www.youtube.com/watch?v=U9AorL4JCgI


