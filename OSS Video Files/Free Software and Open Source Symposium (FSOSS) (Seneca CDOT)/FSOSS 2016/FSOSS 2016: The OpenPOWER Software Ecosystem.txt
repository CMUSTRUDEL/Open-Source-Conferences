Title: FSOSS 2016: The OpenPOWER Software Ecosystem
Publication date: 2016-11-24
Playlist: FSOSS 2016
Description: 
	Speaker: Billy Phu, Software Performance Analyst for IBM Canada

The OpenPower Foundation was established in 2013 to enable members to rethink their approach to technology. The platform is open from processor design right up to the end-user applications. This talk will give an introduction to the Open Power system, but will focus on the software ecosystem around it, as well as a survey of where OpenPower is used today and in the near future.
Captions: 
	00:00:04,580 --> 00:00:10,219
I am a top performance analyst with IBM

00:00:08,180 --> 00:00:12,950
canada previously what was a software

00:00:10,219 --> 00:00:15,980
developer with db2 database systems and

00:00:12,950 --> 00:00:18,500
for past six years or so I'm looking at

00:00:15,980 --> 00:00:22,670
how software works on IBM power systems

00:00:18,500 --> 00:00:25,119
power is one of the yes everyone knows

00:00:22,670 --> 00:00:27,849
intel intel the predominant processor

00:00:25,119 --> 00:00:30,470
architecture out there from low-end

00:00:27,849 --> 00:00:33,199
small system well yes medium small

00:00:30,470 --> 00:00:35,269
systems to the high-end large high

00:00:33,199 --> 00:00:39,350
performance systems so power is the

00:00:35,269 --> 00:00:42,979
alternative architectures for the medium

00:00:39,350 --> 00:00:48,290
high range systems and with latest

00:00:42,979 --> 00:00:51,379
iteration IBM power8 processor in 2013

00:00:48,290 --> 00:00:54,019
they open source essentially everything

00:00:51,379 --> 00:00:56,059
about the processor from the chip

00:00:54,019 --> 00:00:58,760
architecture of the supporting chips to

00:00:56,059 --> 00:01:02,629
the process architecture and even made

00:00:58,760 --> 00:01:04,939
firmware available so for those people

00:01:02,629 --> 00:01:08,690
with enough interest or enough money and

00:01:04,939 --> 00:01:11,960
enough time they can license every bit

00:01:08,690 --> 00:01:14,510
of chip design dodo fab will modify go

00:01:11,960 --> 00:01:17,870
to fab produce their own chip download

00:01:14,510 --> 00:01:19,940
the firmware directly from github modify

00:01:17,870 --> 00:01:21,350
whatever they need to modify suppose

00:01:19,940 --> 00:01:25,370
there is very specialized application

00:01:21,350 --> 00:01:28,010
and build it and go on up so that is

00:01:25,370 --> 00:01:29,990
what open power is open power is a

00:01:28,010 --> 00:01:32,390
foundation with a large number of

00:01:29,990 --> 00:01:34,580
technical partners and they all

00:01:32,390 --> 00:01:39,280
contribute to the design of it so it's a

00:01:34,580 --> 00:01:41,630
hardware technical foundation so whereas

00:01:39,280 --> 00:01:44,480
you'll hear about apache in the keynote

00:01:41,630 --> 00:01:46,510
next it's about software foundation this

00:01:44,480 --> 00:01:49,400
is what empowers a hardware foundation

00:01:46,510 --> 00:01:56,000
so sorry well hardware technical aspects

00:01:49,400 --> 00:01:58,520
and that is and because it's hardware

00:01:56,000 --> 00:02:00,260
however by itself without very useful so

00:01:58,520 --> 00:02:01,760
on top of that you ask make software

00:02:00,260 --> 00:02:04,940
available for that's what I've been

00:02:01,760 --> 00:02:10,269
spent IBM and partners spend a fair

00:02:04,940 --> 00:02:12,650
amount of time enabling that so oh also

00:02:10,269 --> 00:02:14,959
without in addition to the open power

00:02:12,650 --> 00:02:17,209
which is open source aspect there's also

00:02:14,959 --> 00:02:17,900
the IBM branded power systems which runs

00:02:17,209 --> 00:02:22,159
ax or

00:02:17,900 --> 00:02:25,250
or whatever and that is not open source

00:02:22,159 --> 00:02:26,989
so there is the open source firmware

00:02:25,250 --> 00:02:29,840
bootloader I'll go up to the Opera

00:02:26,989 --> 00:02:31,730
system and then there's a close from

00:02:29,840 --> 00:02:33,709
where we were all the way up so for

00:02:31,730 --> 00:02:36,079
enterprise customers who require a bit

00:02:33,709 --> 00:02:39,049
more control over it there's the lock

00:02:36,079 --> 00:02:41,930
down version but with when you buy open

00:02:39,049 --> 00:02:44,209
power system from IBM or any of the

00:02:41,930 --> 00:02:48,470
vendors out there I think there's half

00:02:44,209 --> 00:02:50,329
dozen companies producing use the open

00:02:48,470 --> 00:02:52,639
powersoft were like oak entire systems

00:02:50,329 --> 00:02:54,680
that complete independent IVM for

00:02:52,639 --> 00:02:57,530
example red power in China has zone fab

00:02:54,680 --> 00:02:59,329
they license the chip designs they made

00:02:57,530 --> 00:03:01,879
some modifications to it they produce it

00:02:59,329 --> 00:03:03,680
they're selling it within China so I

00:03:01,879 --> 00:03:04,879
think the market is predominantly within

00:03:03,680 --> 00:03:07,549
the Chinese market so you won't see them

00:03:04,879 --> 00:03:10,549
here but they are available and they've

00:03:07,549 --> 00:03:13,340
essentially done there modifications

00:03:10,549 --> 00:03:18,799
wherever the need to do so for open

00:03:13,340 --> 00:03:20,209
power unlike the IBM closed systems open

00:03:18,799 --> 00:03:21,889
power systems essentially right now only

00:03:20,209 --> 00:03:26,930
has one operating system and that is

00:03:21,889 --> 00:03:29,359
Linux so Linux has the top nut says is

00:03:26,930 --> 00:03:34,040
the next is Linux is linux and the goal

00:03:29,359 --> 00:03:36,680
is to enable people to develop software

00:03:34,040 --> 00:03:38,299
more easily on open power but they want

00:03:36,680 --> 00:03:42,889
the next look and feel the same way on

00:03:38,299 --> 00:03:47,209
intel arm power Z is IBM mainframe

00:03:42,889 --> 00:03:50,299
systems the old nip systems etc so the

00:03:47,209 --> 00:03:52,459
main linux distros have all been support

00:03:50,299 --> 00:03:58,010
on power and the ones that we've used

00:03:52,459 --> 00:04:00,019
our fedora redhack keep on to and Debian

00:03:58,010 --> 00:04:04,340
slashed and center west so I guess three

00:04:00,019 --> 00:04:08,889
of them are based on redhat but pretty

00:04:04,340 --> 00:04:11,299
much everything is available this is

00:04:08,889 --> 00:04:15,139
interesting enough during the during the

00:04:11,299 --> 00:04:18,109
design the the pre-release part of the

00:04:15,139 --> 00:04:21,349
woman power systems red has asked about

00:04:18,109 --> 00:04:24,020
providing operating systems port a port

00:04:21,349 --> 00:04:25,909
of Linux for little endian for open

00:04:24,020 --> 00:04:29,370
power systems and based on what their

00:04:25,909 --> 00:04:30,990
experience appearance was porting to

00:04:29,370 --> 00:04:34,650
to the priests version Linux for IBM

00:04:30,990 --> 00:04:36,060
they figure a couple years so in 2014 a

00:04:34,650 --> 00:04:39,030
couple years will bring us to present

00:04:36,060 --> 00:04:40,320
day we're we're there was a lot of panic

00:04:39,030 --> 00:04:41,610
going on like we don't have enough we

00:04:40,320 --> 00:04:43,949
have a system with the operating system

00:04:41,610 --> 00:04:46,020
which is pretty much useless but you

00:04:43,949 --> 00:04:48,030
Bunty so that was their design their

00:04:46,020 --> 00:04:50,150
power scaling but you Bunty came along

00:04:48,030 --> 00:04:53,460
but canonical came along and decided to

00:04:50,150 --> 00:04:58,250
attempt to port it so there was love

00:04:53,460 --> 00:05:01,199
people manpower spent on just the basic

00:04:58,250 --> 00:05:03,360
operating systems basic patches you

00:05:01,199 --> 00:05:05,910
Bunty was able port roughly 40,000

00:05:03,360 --> 00:05:09,060
packages for Linux in five months time

00:05:05,910 --> 00:05:11,520
and shortly thereafter red hat came when

00:05:09,060 --> 00:05:13,550
they realized whoa Ubuntu did it with

00:05:11,520 --> 00:05:18,090
very very little manpower we were

00:05:13,550 --> 00:05:19,590
essentially port Linux from Intel

00:05:18,090 --> 00:05:22,080
assistance of power systems in a few

00:05:19,590 --> 00:05:25,050
months time so and also other companies

00:05:22,080 --> 00:05:27,690
such as Google reported most almost

00:05:25,050 --> 00:05:31,080
centrally all of their software to open

00:05:27,690 --> 00:05:33,690
power systems Google head attempted to

00:05:31,080 --> 00:05:36,320
port their software to the previous

00:05:33,690 --> 00:05:38,460
versions of power linux on power and

00:05:36,320 --> 00:05:41,039
they were having a huge amount of time

00:05:38,460 --> 00:05:43,470
difficulty with it was because Indians

00:05:41,039 --> 00:05:45,570
have changed the software all soft

00:05:43,470 --> 00:05:46,800
patches are available so they had to use

00:05:45,570 --> 00:05:48,599
different versions and software packages

00:05:46,800 --> 00:05:49,710
different names the functionality was

00:05:48,599 --> 00:05:51,810
there but the package names were

00:05:49,710 --> 00:05:53,520
different and it was just a lot of

00:05:51,810 --> 00:05:56,400
effort to go through and find and fix

00:05:53,520 --> 00:05:58,860
all these errors but with the advent to

00:05:56,400 --> 00:06:01,470
open power and the fact that everything

00:05:58,860 --> 00:06:04,949
that you see on Intel Linux is available

00:06:01,470 --> 00:06:06,960
on powerline iqbal story linux on open

00:06:04,949 --> 00:06:09,360
power systems they were able to port

00:06:06,960 --> 00:06:11,039
very easily so but Google's main goal

00:06:09,360 --> 00:06:12,930
although they've demonstrated everything

00:06:11,039 --> 00:06:15,150
works on power 8 the waiting for a

00:06:12,930 --> 00:06:18,000
particular the next iteration power line

00:06:15,150 --> 00:06:20,970
which is developed I think next year so

00:06:18,000 --> 00:06:24,720
some examples of open source packages

00:06:20,970 --> 00:06:28,220
are available on open power like all the

00:06:24,720 --> 00:06:31,020
main no SQL databases some SQL databases

00:06:28,220 --> 00:06:33,150
if you have for stock of Webster web

00:06:31,020 --> 00:06:35,010
servers app servers and basically

00:06:33,150 --> 00:06:39,320
cluster management as well so

00:06:35,010 --> 00:06:39,320
essentially open power systems as it is

00:06:40,660 --> 00:06:45,830
you can buy it they set up and use it as

00:06:43,639 --> 00:06:49,580
a cluster using completely free

00:06:45,830 --> 00:06:51,650
open-source software i think that the

00:06:49,580 --> 00:06:53,569
cheapest system i've heard of if when I

00:06:51,650 --> 00:06:55,520
get into open power is like to nine

00:06:53,569 --> 00:06:58,130
thousand dollars us so it's definitely

00:06:55,520 --> 00:07:01,069
cheaper than the 27 thousand dollar us

00:06:58,130 --> 00:07:03,530
I've been power system so it's entirely

00:07:01,069 --> 00:07:07,849
possible with price of well essentially

00:07:03,530 --> 00:07:10,520
seen prices an intel server to get to

00:07:07,849 --> 00:07:11,800
use open power source open power some of

00:07:10,520 --> 00:07:14,650
the other software patches that have

00:07:11,800 --> 00:07:17,750
been ported and people are running on

00:07:14,650 --> 00:07:20,270
open power here's this fairly broad

00:07:17,750 --> 00:07:22,060
example we have the high performance

00:07:20,270 --> 00:07:24,889
computing examples on the left side from

00:07:22,060 --> 00:07:27,650
i'm not sure where how those are both

00:07:24,889 --> 00:07:30,259
cloud my role is predominantly in big

00:07:27,650 --> 00:07:33,229
data machine learning so after I worked

00:07:30,259 --> 00:07:35,659
with Hadoop and brightest and really be

00:07:33,229 --> 00:07:38,539
and other people are doing work in the

00:07:35,659 --> 00:07:43,759
other systems as well except GP 0 DB i

00:07:38,539 --> 00:07:48,259
think has something that's been tested

00:07:43,759 --> 00:07:49,820
lately and that is basically using for

00:07:48,259 --> 00:07:51,680
GPU accelerators or gate debates

00:07:49,820 --> 00:07:54,349
operations that's not something that's

00:07:51,680 --> 00:07:56,360
something has been tried db2 is trying

00:07:54,349 --> 00:07:59,050
to pass they found that it wasn't really

00:07:56,360 --> 00:08:01,880
performance event performance

00:07:59,050 --> 00:08:04,509
enhancement but with powerade se me para

00:08:01,880 --> 00:08:07,159
9 that's going to be simply different

00:08:04,509 --> 00:08:09,979
since park so my day job essentially

00:08:07,159 --> 00:08:12,620
looked at optimizing looking how spark

00:08:09,979 --> 00:08:16,219
and Hadoop and the whole software stack

00:08:12,620 --> 00:08:18,080
works on power and try to analyze

00:08:16,219 --> 00:08:20,389
indeterminate the characteristics of it

00:08:18,080 --> 00:08:24,349
so but we have mobile enterprise as well

00:08:20,389 --> 00:08:26,270
a larger packages there so again you

00:08:24,349 --> 00:08:29,530
know Dupin spark so I've been Tron lab

00:08:26,270 --> 00:08:32,539
is volved a lot with the performance and

00:08:29,530 --> 00:08:35,709
for example perforce analysis an

00:08:32,539 --> 00:08:38,599
authorization for every new release of

00:08:35,709 --> 00:08:42,409
patches this majority development

00:08:38,599 --> 00:08:44,390
currently is on Intel systems it runs

00:08:42,409 --> 00:08:46,279
fairly fast or fairly well on impact on

00:08:44,390 --> 00:08:47,720
the Intel systems so we look at on power

00:08:46,279 --> 00:08:51,410
and look at the unique advantages of

00:08:47,720 --> 00:08:52,990
power and well what's going on how to

00:08:51,410 --> 00:08:56,560
make it work faster

00:08:52,990 --> 00:09:00,640
an example would be I guess what spark

00:08:56,560 --> 00:09:04,060
1.6 or 16 and two we look at the

00:09:00,640 --> 00:09:05,800
processing set we run it it's about 1.5

00:09:04,060 --> 00:09:08,709
we run the same workload and we're

00:09:05,800 --> 00:09:10,480
roughly twice as fast run on 1.6 were

00:09:08,709 --> 00:09:13,420
like one port wine and we're like what's

00:09:10,480 --> 00:09:15,550
going on and it turns out that there's a

00:09:13,420 --> 00:09:18,250
bunch of simply instructions that are in

00:09:15,550 --> 00:09:20,770
the newest versions that are not that

00:09:18,250 --> 00:09:23,170
when you run in power punjab versions so

00:09:20,770 --> 00:09:24,880
we run vector instructions versus java

00:09:23,170 --> 00:09:25,930
the performance that's where the

00:09:24,880 --> 00:09:29,320
performance differences are so we've

00:09:25,930 --> 00:09:33,430
identified those and it goes into our

00:09:29,320 --> 00:09:35,649
JDK so that fish is fed into the JDK so

00:09:33,430 --> 00:09:38,490
the next release JDK comes out we

00:09:35,649 --> 00:09:40,440
intercept that and runs it faster and

00:09:38,490 --> 00:09:46,120
their sparklier is for machine learning

00:09:40,440 --> 00:09:49,120
graph SQL etc and that's also what what

00:09:46,120 --> 00:09:51,580
we do try to defy exactly how to make

00:09:49,120 --> 00:09:54,640
how make all these existing applications

00:09:51,580 --> 00:09:56,730
that customers use work better on on on

00:09:54,640 --> 00:09:59,110
power systems so same with a dupe I

00:09:56,730 --> 00:10:01,870
don't think we've gotten around we're

00:09:59,110 --> 00:10:03,579
using hive now and pig but we haven't

00:10:01,870 --> 00:10:06,250
really gotten back to almost all of us

00:10:03,579 --> 00:10:09,430
yet also schedules we spent a lot of

00:10:06,250 --> 00:10:13,000
time our schedules the IBM power system

00:10:09,430 --> 00:10:16,180
defers differs a bit on Intel systems

00:10:13,000 --> 00:10:17,910
because well the newest interpreters

00:10:16,180 --> 00:10:21,100
that have a large number of course and

00:10:17,910 --> 00:10:23,410
think way more cores and some of the

00:10:21,100 --> 00:10:26,250
power systems have so I think some our

00:10:23,410 --> 00:10:28,600
systems would have 40 physical cores and

00:10:26,250 --> 00:10:31,270
I think something new is eons we have

00:10:28,600 --> 00:10:34,300
like 40 for physical cores per chip so

00:10:31,270 --> 00:10:36,490
it's huge I'm of course large caches but

00:10:34,300 --> 00:10:38,649
coordinating all the effort the runtime

00:10:36,490 --> 00:10:40,690
is fairly complex so in order to get

00:10:38,649 --> 00:10:42,399
fairly decent performance you need a

00:10:40,690 --> 00:10:47,709
good schedule to maintain your workload

00:10:42,399 --> 00:10:50,200
and we look at how best to configure the

00:10:47,709 --> 00:10:52,180
schedulers on the different systems so

00:10:50,200 --> 00:10:54,579
and it's mentioned before earlier

00:10:52,180 --> 00:10:55,750
machine learning deep learning there's

00:10:54,579 --> 00:10:58,990
something like Google is down a lot of

00:10:55,750 --> 00:11:02,010
and this particular for companies like

00:10:58,990 --> 00:11:08,670
Nvidia so power 8

00:11:02,010 --> 00:11:10,440
has a number of i guess i SPECT I'll

00:11:08,670 --> 00:11:13,260
capabilities which you don't find on

00:11:10,440 --> 00:11:16,410
Intel so on Intel systems and that is

00:11:13,260 --> 00:11:19,230
I'll mention that more later and so

00:11:16,410 --> 00:11:21,480
there's a lot of work put it towards

00:11:19,230 --> 00:11:25,110
machine learning deep learning libraries

00:11:21,480 --> 00:11:27,720
touches siano torching cafe and they're

00:11:25,110 --> 00:11:29,550
all these packages available so people

00:11:27,720 --> 00:11:33,330
who are looking into that type of

00:11:29,550 --> 00:11:35,160
application the you can google the name

00:11:33,330 --> 00:11:39,150
in google and download it and make use

00:11:35,160 --> 00:11:41,910
of it so now you can decode using deal

00:11:39,150 --> 00:11:43,680
for j on intel and for example you want

00:11:41,910 --> 00:11:46,980
to test your application on the open

00:11:43,680 --> 00:11:48,360
power system you can just download the

00:11:46,980 --> 00:11:49,800
deal for Jade libraries for booking

00:11:48,360 --> 00:11:54,960
power and see your performance

00:11:49,800 --> 00:11:57,630
differences there so it so giving that

00:11:54,960 --> 00:11:59,040
about testing I'm not sure where it is

00:11:57,630 --> 00:12:03,390
now because I'm not in the mcneese ID

00:11:59,040 --> 00:12:05,100
but it always seems to be some Avenue in

00:12:03,390 --> 00:12:07,950
order your free accounts on some public

00:12:05,100 --> 00:12:11,670
cloud somewhere on to use open power

00:12:07,950 --> 00:12:13,710
system so it's entirely possible that if

00:12:11,670 --> 00:12:15,780
you don't even have to if don't have

00:12:13,710 --> 00:12:19,200
access to an open power system on campus

00:12:15,780 --> 00:12:22,980
or through a business partner to get a

00:12:19,200 --> 00:12:27,150
free cloud-based instance of one power

00:12:22,980 --> 00:12:28,650
so thank you right here it support for

00:12:27,150 --> 00:12:31,680
upcoming open power systems it's the

00:12:28,650 --> 00:12:33,270
open power machine will talk about is I

00:12:31,680 --> 00:12:35,970
things been released and that's

00:12:33,270 --> 00:12:39,960
something that I think a few hundred

00:12:35,970 --> 00:12:46,050
have been shipped to some some

00:12:39,960 --> 00:12:48,180
laboratory in the US and it's a the

00:12:46,050 --> 00:12:49,890
technology here is something called envy

00:12:48,180 --> 00:12:52,080
link and that's something that if it is

00:12:49,890 --> 00:12:54,450
developed I think nvidia went around and

00:12:52,080 --> 00:12:57,390
asked Intel and IBM if they were willing

00:12:54,450 --> 00:12:59,900
to support it until bits intel has their

00:12:57,390 --> 00:13:02,520
own things going on so they to know so

00:12:59,900 --> 00:13:05,880
Ivan power systems support this nvidia

00:13:02,520 --> 00:13:09,360
defined protocol specific and that it's

00:13:05,880 --> 00:13:12,550
basically a new Chet new channel to

00:13:09,360 --> 00:13:15,920
communicate with the GPUs

00:13:12,550 --> 00:13:19,190
in the processor and the idea is it

00:13:15,920 --> 00:13:22,730
super hot damn with so the proof the

00:13:19,190 --> 00:13:27,410
these gpus these days are incredibly

00:13:22,730 --> 00:13:30,649
fast incredibly fast I mean I think when

00:13:27,410 --> 00:13:32,810
we when I mentioned earlier what db2 the

00:13:30,649 --> 00:13:35,029
proofs but even five years ago the GPU

00:13:32,810 --> 00:13:37,699
is back there were we're being starved

00:13:35,029 --> 00:13:40,880
you can program what you need me to do

00:13:37,699 --> 00:13:45,199
but it can't supply data fast enough to

00:13:40,880 --> 00:13:46,759
them so they sit around idle and so one

00:13:45,199 --> 00:13:49,160
alternative approaches just get more ram

00:13:46,759 --> 00:13:51,410
stuff on ram into them so i think some

00:13:49,160 --> 00:13:53,810
of the cards we had in house were 16

00:13:51,410 --> 00:13:55,759
gigs of ram but that would be but when

00:13:53,810 --> 00:13:58,579
you put dpu is posting 300 bites a

00:13:55,759 --> 00:14:01,550
second that's no time at all so with

00:13:58,579 --> 00:14:04,310
envy link I assume the env link version

00:14:01,550 --> 00:14:05,720
2 and but such the pathways have been

00:14:04,310 --> 00:14:07,399
increased I think Envy link is couple

00:14:05,720 --> 00:14:10,040
hard gigabytes per second so it allows

00:14:07,399 --> 00:14:12,350
GPUs become more efficient so you think

00:14:10,040 --> 00:14:16,009
process need more faster faster so these

00:14:12,350 --> 00:14:18,230
so the this particular system has four

00:14:16,009 --> 00:14:21,110
past my higher GPAs Pascal one hundreds

00:14:18,230 --> 00:14:24,620
I think our current top line I've got my

00:14:21,110 --> 00:14:26,870
specs on the more but I think each one

00:14:24,620 --> 00:14:28,730
of those faster than like though the

00:14:26,870 --> 00:14:30,410
first earth similar supercomputer that

00:14:28,730 --> 00:14:33,589
used to be number one on the top on our

00:14:30,410 --> 00:14:36,620
list so we have four of these in one

00:14:33,589 --> 00:14:38,839
server and we can reasonably supply data

00:14:36,620 --> 00:14:42,110
to them fast enough rate so they can

00:14:38,839 --> 00:14:45,079
become useful I prior to this then you

00:14:42,110 --> 00:14:46,940
put that much computing power but please

00:14:45,079 --> 00:14:50,690
the GP Justice Idol or you can't do

00:14:46,940 --> 00:14:51,620
anything with it so ok as I mentioned

00:14:50,690 --> 00:14:53,269
before there's infrastructure

00:14:51,620 --> 00:14:56,329
infrastructure software from the

00:14:53,269 --> 00:15:00,430
bootloader OS hypervisor containers and

00:14:56,329 --> 00:15:03,260
everything and OpenStack so that's

00:15:00,430 --> 00:15:06,250
that's been it can support for quite a

00:15:03,260 --> 00:15:09,970
while so as far as everyone's concerned

00:15:06,250 --> 00:15:12,529
the whole software stack from the

00:15:09,970 --> 00:15:15,769
firmware right up to the operating

00:15:12,529 --> 00:15:20,529
system management layer is worth whole

00:15:15,769 --> 00:15:20,529
applications they are it's

00:15:20,779 --> 00:15:24,660
it's fully supported so we'll anything

00:15:23,190 --> 00:15:27,420
you can do on inter Linux essentially

00:15:24,660 --> 00:15:31,170
can do on on open systems open power

00:15:27,420 --> 00:15:34,890
systems of course why bother with open

00:15:31,170 --> 00:15:37,170
power I mean if if if Intel can do

00:15:34,890 --> 00:15:40,290
everything in a park and essentially do

00:15:37,170 --> 00:15:41,700
the same thing it's like me to look so

00:15:40,290 --> 00:15:44,820
why bother supporting two different

00:15:41,700 --> 00:15:47,160
platforms if you don't have to write so

00:15:44,820 --> 00:15:49,110
that's why it tells crease everybody out

00:15:47,160 --> 00:15:52,350
because Intel can do what they need to

00:15:49,110 --> 00:15:54,990
do and ones happy with it but there's

00:15:52,350 --> 00:15:59,910
probably two reasons I'll give example

00:15:54,990 --> 00:16:02,640
Google Google probably one reason like

00:15:59,910 --> 00:16:05,850
Google supports open power and something

00:16:02,640 --> 00:16:07,800
that analyst appointed to is one they

00:16:05,850 --> 00:16:09,870
have a its use of the hedge they can't

00:16:07,800 --> 00:16:12,390
give until all the business because

00:16:09,870 --> 00:16:14,070
until would you squeeze them out and if

00:16:12,390 --> 00:16:16,410
intel has a monopoly that can dictate

00:16:14,070 --> 00:16:17,940
the terms they want pricing availability

00:16:16,410 --> 00:16:20,520
there's no competition with features

00:16:17,940 --> 00:16:23,010
things with stagnate so that's what a

00:16:20,520 --> 00:16:25,080
mess up said but being on the software

00:16:23,010 --> 00:16:27,570
performance side all I think there's

00:16:25,080 --> 00:16:28,800
another reason why Google prefers to use

00:16:27,570 --> 00:16:31,230
open power systems and that is

00:16:28,800 --> 00:16:34,020
performance performance is fairly

00:16:31,230 --> 00:16:35,820
competitive and we've done a lot of work

00:16:34,020 --> 00:16:38,880
just check to make sure things run very

00:16:35,820 --> 00:16:43,050
fast on the open power systems for

00:16:38,880 --> 00:16:45,710
example all MongoDB really be database

00:16:43,050 --> 00:16:51,270
applications your analytics workloads

00:16:45,710 --> 00:16:53,400
and above synthetic benchmarks so so

00:16:51,270 --> 00:16:55,560
oakridge is not National Laboratory and

00:16:53,400 --> 00:16:58,410
no one's Livermore Laboratory they've

00:16:55,560 --> 00:17:00,540
used their they're taking delivery they

00:16:58,410 --> 00:17:01,740
took delivery courtesy delivery and will

00:17:00,540 --> 00:17:04,290
be taking more delivery of new systems

00:17:01,740 --> 00:17:08,929
and that's precisely for all their

00:17:04,290 --> 00:17:12,750
high-end hpc software doing whether

00:17:08,929 --> 00:17:15,750
nuclear simulations such and mention

00:17:12,750 --> 00:17:17,459
with Google before and Tencent I think

00:17:15,750 --> 00:17:21,600
what people here may have heard of ten

00:17:17,459 --> 00:17:24,720
cent there are chinese osv and i think

00:17:21,600 --> 00:17:26,010
last year they've i'm not sure how much

00:17:24,720 --> 00:17:27,900
prefer mention there should be a press

00:17:26,010 --> 00:17:29,460
release soon argument n set if there's

00:17:27,900 --> 00:17:31,850
already about some of the high

00:17:29,460 --> 00:17:35,210
performance work that they've been doing

00:17:31,850 --> 00:17:38,990
and so some someone's ten cents

00:17:35,210 --> 00:17:41,450
workloads I think they have eight

00:17:38,990 --> 00:17:43,100
thousand plus Intel servers in their

00:17:41,450 --> 00:17:44,660
spark cluster alone I'm not sure how

00:17:43,100 --> 00:17:49,280
many servers i have but there's bark

00:17:44,660 --> 00:17:52,010
cluster is 8,000 servers so so they've

00:17:49,280 --> 00:17:57,010
ordered a fair number of aachen power

00:17:52,010 --> 00:17:59,059
systems to augment some of that work and

00:17:57,010 --> 00:18:02,299
again the main reason for that is

00:17:59,059 --> 00:18:05,539
performance and to get performance on

00:18:02,299 --> 00:18:07,010
systems well there's a lot of because

00:18:05,539 --> 00:18:08,659
its architecture is different that's not

00:18:07,010 --> 00:18:10,640
know acknowledged in terms of

00:18:08,659 --> 00:18:12,200
performance tuning for example there's

00:18:10,640 --> 00:18:15,710
with multiple Sokka systems whether

00:18:12,200 --> 00:18:17,780
Intel or power systems it was multiple

00:18:15,710 --> 00:18:21,039
sockets that's worried about Numa effect

00:18:17,780 --> 00:18:23,929
since everything but on the easy side

00:18:21,039 --> 00:18:26,720
when you're just taking compiler

00:18:23,929 --> 00:18:28,460
software from open source communities

00:18:26,720 --> 00:18:31,280
and want to compile it we have a number

00:18:28,460 --> 00:18:34,220
of like how to do that so there's an IBM

00:18:31,280 --> 00:18:36,289
XL compiler which is if you were to

00:18:34,220 --> 00:18:38,720
license it it's a thing thousands of

00:18:36,289 --> 00:18:40,669
dollars per seat per year so the

00:18:38,720 --> 00:18:44,150
flagship seat for plus the flagship

00:18:40,669 --> 00:18:45,500
compiler support CC plus Fortran and I

00:18:44,150 --> 00:18:47,990
believe this cobalt kicking around as

00:18:45,500 --> 00:18:50,900
well and depending on the application

00:18:47,990 --> 00:18:53,380
and how many how easy it is for the

00:18:50,900 --> 00:18:56,900
specific oxidation there is on their

00:18:53,380 --> 00:19:00,020
code to be recognized look at the 15 to

00:18:56,900 --> 00:19:02,600
50 percent faster for high-performance

00:19:00,020 --> 00:19:06,080
peeling your applications and that is it

00:19:02,600 --> 00:19:09,830
was really math heavy right so I also

00:19:06,080 --> 00:19:13,610
supports cuda Fortran openmp for people

00:19:09,830 --> 00:19:16,730
that are used to coding in for large

00:19:13,610 --> 00:19:20,570
systems of course there's a mass math

00:19:16,730 --> 00:19:22,580
library that's mass is math acelera

00:19:20,570 --> 00:19:29,570
subsystem intel has their own math

00:19:22,580 --> 00:19:31,940
toolkit as well so i love so yeah the

00:19:29,570 --> 00:19:34,780
it's so a lot of hard for computing

00:19:31,940 --> 00:19:37,700
systems applications if you need it

00:19:34,780 --> 00:19:39,950
linked directly in so you don't have to

00:19:37,700 --> 00:19:42,440
make mass directly so once you have your

00:19:39,950 --> 00:19:44,490
apt e application or math heavy

00:19:42,440 --> 00:19:47,580
application it will

00:19:44,490 --> 00:19:51,780
compile further quickly so and of course

00:19:47,580 --> 00:19:53,429
oh the communication is free so you

00:19:51,780 --> 00:19:54,750
don't have to pay for that it's free

00:19:53,429 --> 00:19:57,360
software but it's open source software

00:19:54,750 --> 00:20:00,929
and I'll also develop that the IP

00:19:57,360 --> 00:20:03,690
internal lab GCT is optimized at the

00:20:00,929 --> 00:20:06,179
either in Toronto lab so it's that don't

00:20:03,690 --> 00:20:09,030
Joshi not Ron laughs I think it's it's a

00:20:06,179 --> 00:20:11,640
different lab that optimizes it and it

00:20:09,030 --> 00:20:16,410
might be in Austin Austin or California

00:20:11,640 --> 00:20:18,000
so they look they also look at the

00:20:16,410 --> 00:20:20,370
performance characteristics and try to

00:20:18,000 --> 00:20:23,929
make so if want to compile software on

00:20:20,370 --> 00:20:27,929
power it will also compile as well and

00:20:23,929 --> 00:20:29,730
supports that essentially what I've done

00:20:27,929 --> 00:20:31,830
with with GCC in the past because it

00:20:29,730 --> 00:20:34,380
comes to the operating system comes with

00:20:31,830 --> 00:20:36,570
a basic compiler I download GCC and I

00:20:34,380 --> 00:20:40,280
just compiled it without any changes so

00:20:36,570 --> 00:20:44,340
it works really well and let's mentioned

00:20:40,280 --> 00:20:47,790
because the patch cycle comes from IBM

00:20:44,340 --> 00:20:50,130
through kids does funer the number of

00:20:47,790 --> 00:20:51,179
commuters the IBM permits is fair

00:20:50,130 --> 00:20:53,940
limited you have to be security

00:20:51,179 --> 00:20:57,210
clearance after the open-source lawsuits

00:20:53,940 --> 00:20:59,070
in everything people who can book an

00:20:57,210 --> 00:21:02,460
open source and develop it's very

00:20:59,070 --> 00:21:04,380
limited so anyone finds issues role

00:21:02,460 --> 00:21:06,720
performance enhancements as we vetted

00:21:04,380 --> 00:21:09,090
through and I've only go through and

00:21:06,720 --> 00:21:13,370
only certain people can leak can commit

00:21:09,090 --> 00:21:15,600
things to open source so that's why

00:21:13,370 --> 00:21:17,490
having fun for once it has make it takes

00:21:15,600 --> 00:21:20,790
six to 12 months to get up to get out

00:21:17,490 --> 00:21:25,320
into the community so GC it's a bit

00:21:20,790 --> 00:21:28,320
slower than I've Excel for youth changes

00:21:25,320 --> 00:21:31,830
but it's available and IBM advanced to a

00:21:28,320 --> 00:21:34,140
chain which is a kit the sawhorse offer

00:21:31,830 --> 00:21:37,160
development kits is freely available so

00:21:34,140 --> 00:21:41,760
it's for red hat and you bought two and

00:21:37,160 --> 00:21:44,340
just I'm not sure what this is so ACC

00:21:41,760 --> 00:21:45,809
compiler and that's important group ok

00:21:44,340 --> 00:21:47,850
so my video NVIDIA has their own

00:21:45,809 --> 00:21:52,140
compiler and that's aimed specifically

00:21:47,850 --> 00:21:54,360
towards their GPU applications so so all

00:21:52,140 --> 00:21:55,800
the multi processing applications

00:21:54,360 --> 00:21:58,200
and as mentioned earlier there's the

00:21:55,800 --> 00:22:01,860
mass lot math libraries for a lot hpc

00:21:58,200 --> 00:22:04,680
slings because with the US government

00:22:01,860 --> 00:22:07,490
ordering so many systems we have support

00:22:04,680 --> 00:22:11,090
the applications and all the math

00:22:07,490 --> 00:22:14,250
libraries is very heavily optimized for

00:22:11,090 --> 00:22:15,720
for open power systems and I'm until

00:22:14,250 --> 00:22:18,780
invest a lot of money as well into their

00:22:15,720 --> 00:22:23,240
math libraries so both systems have very

00:22:18,780 --> 00:22:27,990
accelerated math systems so also FPGA

00:22:23,240 --> 00:22:29,940
took Kathy attached cathy is something i

00:22:27,990 --> 00:22:34,800
mentioned i haven't mentioned that is

00:22:29,940 --> 00:22:37,260
the icon alluded to with envy link but

00:22:34,800 --> 00:22:39,420
cathy is a what everyone here has heard

00:22:37,260 --> 00:22:43,050
of pci express which is maintained link

00:22:39,420 --> 00:22:47,520
for expansions within most most computer

00:22:43,050 --> 00:22:50,450
systems now so i think with power 9i BM

00:22:47,520 --> 00:22:53,760
is moving with pci express version for

00:22:50,450 --> 00:22:55,200
generation for intel decided very

00:22:53,760 --> 00:22:56,790
conscientious latest take a generation

00:22:55,200 --> 00:22:59,910
three even though they have these

00:22:56,790 --> 00:23:03,690
massive 44 core or larger processors

00:22:59,910 --> 00:23:06,150
which require a lot of data so so IBM is

00:23:03,690 --> 00:23:08,160
first and presently I think I don't know

00:23:06,150 --> 00:23:12,810
right in tell has any plans to support p

00:23:08,160 --> 00:23:15,630
gen 4 but so this pci gen 4 also

00:23:12,810 --> 00:23:18,390
something called copy which cuts a

00:23:15,630 --> 00:23:21,630
couple layers off of the whole cappy

00:23:18,390 --> 00:23:23,640
stack sorry software stack to reduce

00:23:21,630 --> 00:23:26,520
latency essentially we do reduce latency

00:23:23,640 --> 00:23:30,120
and increase throughput so this makes

00:23:26,520 --> 00:23:34,770
things generally possible such as how to

00:23:30,120 --> 00:23:37,530
give you it network cards is faster GPUs

00:23:34,770 --> 00:23:40,680
and their software vomit kits available

00:23:37,530 --> 00:23:45,060
for it is that links missionaries are

00:23:40,680 --> 00:23:46,650
links is open open open power member

00:23:45,060 --> 00:23:48,840
which is really doing a lot of driving

00:23:46,650 --> 00:23:51,780
for this so mentioned open powers large

00:23:48,840 --> 00:23:54,620
check organization different companies

00:23:51,780 --> 00:23:58,680
push different things towards into this

00:23:54,620 --> 00:24:01,980
this hardware sack xilinx does fpga part

00:23:58,680 --> 00:24:04,620
as well as on the capi part nvidia

00:24:01,980 --> 00:24:06,540
included as GPU and every link companies

00:24:04,620 --> 00:24:07,920
like micron is pushing you memory

00:24:06,540 --> 00:24:10,520
technologies so phase change

00:24:07,920 --> 00:24:14,490
memory will be available on open power

00:24:10,520 --> 00:24:17,490
as this plug-in and I don't eventually

00:24:14,490 --> 00:24:19,140
be available Intel but Intel hasn't made

00:24:17,490 --> 00:24:22,500
out of leaves maybe as much commitment

00:24:19,140 --> 00:24:24,660
towards it as microphone to open system

00:24:22,500 --> 00:24:27,770
open power systems so for those you who

00:24:24,660 --> 00:24:30,030
are not aware phase change memory is

00:24:27,770 --> 00:24:31,950
non-volatile memory simians plugged into

00:24:30,030 --> 00:24:35,030
your system it would power on and off

00:24:31,950 --> 00:24:37,710
the data still there so the goal that is

00:24:35,030 --> 00:24:40,080
reduce boot times or whatever if your

00:24:37,710 --> 00:24:43,800
system goes down Andrews power

00:24:40,080 --> 00:24:46,700
requirements as well so also this large

00:24:43,800 --> 00:24:50,010
IBM SDK from the next to on power as

00:24:46,700 --> 00:24:53,930
again it's free I guess a lot of people

00:24:50,010 --> 00:24:57,000
use Eclipse before it's a clip space and

00:24:53,930 --> 00:24:58,590
supports essentially all the tooling

00:24:57,000 --> 00:25:02,100
everything I've mentioned before out of

00:24:58,590 --> 00:25:03,270
the box so the goal is if there's

00:25:02,100 --> 00:25:06,300
something you want to do on open power

00:25:03,270 --> 00:25:08,460
we I've been making a lot of effort to

00:25:06,300 --> 00:25:11,550
make it work on open power systems and

00:25:08,460 --> 00:25:15,380
make it work as fast as possible because

00:25:11,550 --> 00:25:20,700
aside from the functionality there's

00:25:15,380 --> 00:25:24,210
performance and the goal essentially is

00:25:20,700 --> 00:25:26,390
whatever the benchmark number is vs

00:25:24,210 --> 00:25:29,670
intel we want to be two times so if it's

00:25:26,390 --> 00:25:31,980
throughput of whatever number won't be

00:25:29,670 --> 00:25:36,300
twice that if its price performance you

00:25:31,980 --> 00:25:38,460
want be twice that and that is that's

00:25:36,300 --> 00:25:40,260
drilled into us every single time we go

00:25:38,460 --> 00:25:43,050
outside your project well this is what

00:25:40,260 --> 00:25:47,220
we know that it compares reporting on

00:25:43,050 --> 00:25:49,500
intel right Allie's AWS instances with

00:25:47,220 --> 00:25:55,350
these certain characteristics we need be

00:25:49,500 --> 00:25:58,830
twice that so and we look our job is

00:25:55,350 --> 00:26:01,860
basically my team's job is to for

00:25:58,830 --> 00:26:04,220
analytic software well where we spend

00:26:01,860 --> 00:26:07,800
our time how can you leave e8 it and

00:26:04,220 --> 00:26:10,800
move from there so in general out of the

00:26:07,800 --> 00:26:13,410
box depending on which how much awesome

00:26:10,800 --> 00:26:15,930
station is done it was a pure java

00:26:13,410 --> 00:26:18,480
application we do pretty well if there's

00:26:15,930 --> 00:26:20,840
lost sim vector optimizations it gets a

00:26:18,480 --> 00:26:23,059
bit more effort but

00:26:20,840 --> 00:26:25,490
it's a usually not too difficult or to

00:26:23,059 --> 00:26:28,070
get the 11 and a half times performance

00:26:25,490 --> 00:26:30,770
benchmark one half times X is usually

00:26:28,070 --> 00:26:32,299
not too difficult to x 1 because it's a

00:26:30,770 --> 00:26:33,950
lot more allocations now on Intel side

00:26:32,299 --> 00:26:36,080
is a bit more effort but it's a

00:26:33,950 --> 00:26:39,529
definitely possible and once you get to

00:26:36,080 --> 00:26:44,840
which he learning deep learning with the

00:26:39,529 --> 00:26:47,480
GPUs and every link then until it's not

00:26:44,840 --> 00:26:50,150
even there because their processors the

00:26:47,480 --> 00:26:53,860
GPU is just can't get data that fast to

00:26:50,150 --> 00:26:58,100
process like so essentially that's

00:26:53,860 --> 00:27:01,669
that's it so I guess the main caution is

00:26:58,100 --> 00:27:03,500
if you download binaries on the internet

00:27:01,669 --> 00:27:05,120
and try run open power systems they may

00:27:03,500 --> 00:27:08,659
be a little endian but they're not going

00:27:05,120 --> 00:27:11,750
to work so they have you need source

00:27:08,659 --> 00:27:14,179
code to recompile and mentioned IBM

00:27:11,750 --> 00:27:18,320
spends a lot of effort putting source

00:27:14,179 --> 00:27:20,740
code to compile easily and prior to open

00:27:18,320 --> 00:27:23,360
power systems for power 7 and earlier

00:27:20,740 --> 00:27:27,799
there's a virtual and it's called big

00:27:23,360 --> 00:27:30,409
endian linux and for power trading power

00:27:27,799 --> 00:27:32,210
and newer power a power line and so

00:27:30,409 --> 00:27:34,909
forth the version lyrics is little

00:27:32,210 --> 00:27:37,789
endian and indianness refers to how data

00:27:34,909 --> 00:27:40,309
is ordered a memory so power power

00:27:37,789 --> 00:27:42,620
processors since power of four runs in

00:27:40,309 --> 00:27:46,640
little-endian and big endian modes but

00:27:42,620 --> 00:27:47,870
until power age no one can do this no

00:27:46,640 --> 00:27:49,789
one has bothered to write a little

00:27:47,870 --> 00:27:52,549
endian operation for so its

00:27:49,789 --> 00:27:55,520
functionality that was built the caravan

00:27:52,549 --> 00:27:57,710
of silicon for last 10 years but no

00:27:55,520 --> 00:27:59,539
one's done anything with it and now

00:27:57,710 --> 00:28:01,460
people are now as companies actually

00:27:59,539 --> 00:28:04,610
getting around to using the silicon

00:28:01,460 --> 00:28:08,980
that's been built into it so I think

00:28:04,610 --> 00:28:12,980
that's it so in summary there's a vast

00:28:08,980 --> 00:28:16,010
software system that's flap on linux

00:28:12,980 --> 00:28:20,510
tons of software open source software

00:28:16,010 --> 00:28:22,520
packages available they are fully well

00:28:20,510 --> 00:28:28,580
essentially now fully supported on power

00:28:22,520 --> 00:28:30,289
and for packages that aren't supported

00:28:28,580 --> 00:28:31,669
I can't think of anything right now

00:28:30,289 --> 00:28:34,690
right well I can't think of any right

00:28:31,669 --> 00:28:36,830
now but don't compile a run on power

00:28:34,690 --> 00:28:40,130
there's lots of forms developerworks

00:28:36,830 --> 00:28:41,510
second contact and we're fairly

00:28:40,130 --> 00:28:45,470
proactive about addressing those issues

00:28:41,510 --> 00:28:48,100
so yeah that's about it and the same

00:28:45,470 --> 00:28:48,100
have any questions

00:28:53,610 --> 00:29:05,080
bloomix yes so oh but the question is is

00:29:00,460 --> 00:29:08,110
open power systems available on the IBM

00:29:05,080 --> 00:29:11,590
public cloud and the answer is yes I

00:29:08,110 --> 00:29:12,880
believe that cloud the cloud providers

00:29:11,590 --> 00:29:16,210
are being purchased number years ago

00:29:12,880 --> 00:29:18,520
with software and I believe just this

00:29:16,210 --> 00:29:23,429
month they got rebranded as part of

00:29:18,520 --> 00:29:27,059
bluemix so lingo software com or

00:29:23,429 --> 00:29:31,780
software com or IBM com / bluemix and

00:29:27,059 --> 00:29:34,990
when you we can get a vm then used to be

00:29:31,780 --> 00:29:38,890
free when ice when it first came out I

00:29:34,990 --> 00:29:40,720
got free vm on to use to test it out

00:29:38,890 --> 00:29:42,820
essentially because people need to test

00:29:40,720 --> 00:29:44,020
it out but and went through marketing

00:29:42,820 --> 00:29:46,240
channels you approve and everything

00:29:44,020 --> 00:29:49,030
that's like a summer external would I'm

00:29:46,240 --> 00:29:54,700
not quite sure what the case is now but

00:29:49,030 --> 00:30:01,380
so I'm is available black space you have

00:29:54,700 --> 00:30:03,820
available they've stopped there is 22

00:30:01,380 --> 00:30:08,140
kilometers I know if that's at currently

00:30:03,820 --> 00:30:10,030
have open power on the cloud big vessel

00:30:08,140 --> 00:30:12,750
which super investor was one and I can't

00:30:10,030 --> 00:30:12,750
remember the other one

00:30:14,509 --> 00:30:28,369
Oh spark yes yes yeah so yet again in

00:30:24,139 --> 00:30:30,709
the software system well it runs out any

00:30:28,369 --> 00:30:33,729
open power system so whether it's

00:30:30,709 --> 00:30:39,559
on-premise or public cloud it will run

00:30:33,729 --> 00:30:40,789
okay see in the questions yes earlier

00:30:39,559 --> 00:30:42,349
you mentioned that you said when I

00:30:40,789 --> 00:30:47,959
suppose the who lower the OS and thus

00:30:42,349 --> 00:30:49,639
back okay I guess linux is probably not

00:30:47,959 --> 00:30:56,059
Victor I think the bootloader name is

00:30:49,639 --> 00:31:01,729
opal or something and opl obal OPA oh

00:30:56,059 --> 00:31:04,099
and I I no doubt i looked at github

00:31:01,729 --> 00:31:07,039
length before by Ashley with interested

00:31:04,099 --> 00:31:09,379
in compiling it it's the last girl yeah

00:31:07,039 --> 00:31:13,779
it's a nice journal okay it's yes

00:31:09,379 --> 00:31:23,949
colonel used k exact into another girl

00:31:13,779 --> 00:31:26,029
yep so unloved tensley okay but yes I

00:31:23,949 --> 00:31:28,299
was involved in testing performance

00:31:26,029 --> 00:31:31,909
testing the initial bring up but after

00:31:28,299 --> 00:31:35,229
the DD 12.1 chips chips I got put on to

00:31:31,909 --> 00:31:40,190
spark so never actually saw that the ga

00:31:35,229 --> 00:31:43,579
but yeah as far as I'm of everything is

00:31:40,190 --> 00:31:46,190
open source the entire stack so you just

00:31:43,579 --> 00:31:48,620
install the opal to the beginning of the

00:31:46,190 --> 00:31:50,750
hard drive within like five feet

00:31:48,620 --> 00:31:53,750
I have to see I do I'm not kind of me

00:31:50,750 --> 00:31:57,250
with that oval is firmer sir winston

00:31:53,750 --> 00:32:02,000
solid board okay mother / files yes oh

00:31:57,250 --> 00:32:04,580
it's a crime families yeah yeah we've

00:32:02,000 --> 00:32:07,490
been been changes had be done at this

00:32:04,580 --> 00:32:08,900
point you to bring up all the cyst lab

00:32:07,490 --> 00:32:10,220
engineers did all the work since i'm in

00:32:08,900 --> 00:32:13,220
toronto on the machines were all in

00:32:10,220 --> 00:32:16,040
austin i just call what the engineers

00:32:13,220 --> 00:32:21,100
and they did software upgrades so i'm

00:32:16,040 --> 00:32:21,100
not entirely sure how that's done yes

00:32:22,059 --> 00:32:27,440
okay so the question was within canada

00:32:24,470 --> 00:32:30,710
who sells open power systems that's an

00:32:27,440 --> 00:32:35,000
SN question and i'm not knocking sighs i

00:32:30,710 --> 00:32:36,830
know you know I IBM com and I believe it

00:32:35,000 --> 00:32:40,309
last time I checked the cheapest open

00:32:36,830 --> 00:32:46,280
power system on IBM com was roughly

00:32:40,309 --> 00:32:47,960
5,000 us but there was ty Ann had a

00:32:46,280 --> 00:32:53,780
two-thousand-dollar system available for

00:32:47,960 --> 00:32:56,600
a while and again those are that's fo be

00:32:53,780 --> 00:33:01,280
from Hong Kong or Singapore so shipping

00:32:56,600 --> 00:33:04,100
is extra on top of that but i'm not sure

00:33:01,280 --> 00:33:08,240
i've been to calm cells I've been

00:33:04,100 --> 00:33:10,550
branded volcom power systems but I would

00:33:08,240 --> 00:33:14,290
have to look see wealth sells it Red

00:33:10,550 --> 00:33:16,550
Power Cells it ty Intel's it supermicro

00:33:14,290 --> 00:33:20,510
but I'm not sure whether in the canada

00:33:16,550 --> 00:33:25,520
or with the boredom online that's any

00:33:20,510 --> 00:33:29,480
other questions yep yeah in terms of

00:33:25,520 --> 00:33:31,580
alternate architectures to x86 obviously

00:33:29,480 --> 00:33:33,890
there's arm which is her grant the small

00:33:31,580 --> 00:33:36,530
end to dip the larger space and power

00:33:33,890 --> 00:33:39,500
which seems to be going a little bit

00:33:36,530 --> 00:33:41,780
down from a higher little bit lower yep

00:33:39,500 --> 00:33:44,590
are there any projects in the works that

00:33:41,780 --> 00:33:44,590
would need to

00:33:44,760 --> 00:33:51,780
a less expensive more basic development

00:33:49,050 --> 00:33:54,060
system or board that could be used for

00:33:51,780 --> 00:33:56,010
example for teaching or for an

00:33:54,060 --> 00:33:59,310
individual developer that wanted to get

00:33:56,010 --> 00:34:02,870
smooth power that was the tie in system

00:33:59,310 --> 00:34:08,669
I think time the 2000s in was their

00:34:02,870 --> 00:34:09,659
education learning platform so I just

00:34:08,669 --> 00:34:11,580
thought up recipes when I came out I

00:34:09,659 --> 00:34:14,940
checked it was there but I haven't done

00:34:11,580 --> 00:34:17,820
anything with the sense you know ninety

00:34:14,940 --> 00:34:20,340
six boards Raspberry Pi Oh released oh

00:34:17,820 --> 00:34:22,380
so that a student could buy that instead

00:34:20,340 --> 00:34:25,669
of a textbook and of course dealing with

00:34:22,380 --> 00:34:28,320
of it i no i don't think so i think the

00:34:25,669 --> 00:34:31,830
aim is really more towards mid and high

00:34:28,320 --> 00:34:33,960
range because the distinguishing

00:34:31,830 --> 00:34:35,159
features from open power is fact that

00:34:33,960 --> 00:34:37,440
all the high-end performance io

00:34:35,159 --> 00:34:40,080
essentially google's primarily

00:34:37,440 --> 00:34:42,780
interested in power 9 systems because

00:34:40,080 --> 00:34:44,790
the i/o capabilities the processing

00:34:42,780 --> 00:34:49,169
capabilities they can tune in telling by

00:34:44,790 --> 00:34:51,780
more Intel boards I mean doesn't really

00:34:49,169 --> 00:34:54,090
need no real need to buy the power 9

00:34:51,780 --> 00:34:55,950
system if the claim is twice as fast as

00:34:54,090 --> 00:34:59,040
Intel linz by twice minto systems and

00:34:55,950 --> 00:35:02,100
also for one platform is m2 but with

00:34:59,040 --> 00:35:03,690
open power system they can run these GPU

00:35:02,100 --> 00:35:06,500
applications which they can't an Intel

00:35:03,690 --> 00:35:09,330
as effectively right and they can't run

00:35:06,500 --> 00:35:11,550
for faster example all these cappy

00:35:09,330 --> 00:35:13,770
systems with lower lower latency and

00:35:11,550 --> 00:35:18,210
such they can't run that on Intel

00:35:13,770 --> 00:35:21,320
systems so those even though they're

00:35:18,210 --> 00:35:24,930
open the technologies open source the

00:35:21,320 --> 00:35:29,700
the cards is supported are not very

00:35:24,930 --> 00:35:31,260
cheap I think the HP 100 board I see OEM

00:35:29,700 --> 00:35:33,140
prices are about nine and a half

00:35:31,260 --> 00:35:38,640
thousand twelve thousand dollars us each

00:35:33,140 --> 00:35:41,550
so those servers with 4gp with four p100

00:35:38,640 --> 00:35:43,710
systems it's sixty thousand dollars but

00:35:41,550 --> 00:35:48,240
I think 45 thousand dollars that go see

00:35:43,710 --> 00:35:50,940
nvidia right so IBM gets a hundred

00:35:48,240 --> 00:35:53,700
dollars a soph licensing and the rest

00:35:50,940 --> 00:35:56,040
goes to manufacturers in asia so

00:35:53,700 --> 00:35:57,290
majority the money made for that system

00:35:56,040 --> 00:36:02,870
goes invidia

00:35:57,290 --> 00:36:05,120
and we can buy a small small board but

00:36:02,870 --> 00:36:07,760
you can't get those capabilities so you

00:36:05,120 --> 00:36:09,560
can learn how to program on Intel but if

00:36:07,760 --> 00:36:12,050
you need scale up your system whatever

00:36:09,560 --> 00:36:14,180
software developing on Intel you can

00:36:12,050 --> 00:36:19,760
bring it once you're ready to a high-end

00:36:14,180 --> 00:36:21,620
system and run it there so so that's

00:36:19,760 --> 00:36:25,430
essentially them like the angle that I

00:36:21,620 --> 00:36:27,170
think the IBM is in towards so if you're

00:36:25,430 --> 00:36:32,440
throwing some Intel you want to run in a

00:36:27,170 --> 00:36:38,380
higher platform leaving brain power so

00:36:32,440 --> 00:36:43,090
and we've got any other questions ok

00:36:38,380 --> 00:36:43,090
thank you thank you

00:36:50,630 --> 00:36:52,690

YouTube URL: https://www.youtube.com/watch?v=r0IbVGMsyu8


