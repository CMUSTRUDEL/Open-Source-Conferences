Title: FSOSS 2016: Moving Towards RTC Video
Publication date: 2016-11-25
Playlist: FSOSS 2016
Description: 
	Speaker: Daniel Perrone, Research Assistant with Seneca CDOT

This presentation will describe in depth what goes into a major technology change in a widely used application.
Captions: 
	00:00:04,530 --> 00:00:10,680
hello everyone my name is Daniel Peron

00:00:07,470 --> 00:00:14,400
and I am going to be talking about

00:00:10,680 --> 00:00:18,450
planning a major change in a software

00:00:14,400 --> 00:00:22,230
system so a bit of background about me

00:00:18,450 --> 00:00:24,630
former Seneca student I'm an employee at

00:00:22,230 --> 00:00:27,840
blindside networks and I'm a big blue

00:00:24,630 --> 00:00:30,690
button developer and my presentation is

00:00:27,840 --> 00:00:32,520
about planning a major change in the

00:00:30,690 --> 00:00:35,640
software and I'm going to be speaking

00:00:32,520 --> 00:00:37,739
from experience the major change that I

00:00:35,640 --> 00:00:40,920
made was changing the video streaming

00:00:37,739 --> 00:00:44,879
service inside bigbluebutton it's been a

00:00:40,920 --> 00:00:47,550
year long task and I poked offer some

00:00:44,879 --> 00:00:51,239
insight to people to other people who

00:00:47,550 --> 00:00:54,989
are making a large change so for those

00:00:51,239 --> 00:00:57,749
on the where this is big blue bun it's

00:00:54,989 --> 00:01:01,469
meant to replicate a classroom it's

00:00:57,749 --> 00:01:04,080
meant to be a virtual classroom so we

00:01:01,469 --> 00:01:05,880
are an open source project is a web

00:01:04,080 --> 00:01:11,689
conferencing system for distance

00:01:05,880 --> 00:01:15,270
education it is java and flash based and

00:01:11,689 --> 00:01:16,979
as I says meant to replicate a virtual

00:01:15,270 --> 00:01:19,020
classroom in the middle we have a

00:01:16,979 --> 00:01:21,420
whiteboard on the right side we have a

00:01:19,020 --> 00:01:23,850
chat for students and professor

00:01:21,420 --> 00:01:27,210
communication have a list of users you

00:01:23,850 --> 00:01:30,210
have the ability to share webcams and

00:01:27,210 --> 00:01:32,490
share a desktop share your computer

00:01:30,210 --> 00:01:36,990
screen and that is the change that I

00:01:32,490 --> 00:01:38,909
made that video streaming service so we

00:01:36,990 --> 00:01:42,320
are taking part in the html5 revolution

00:01:38,909 --> 00:01:46,680
html5 technologies are everywhere

00:01:42,320 --> 00:01:50,700
everything is moving toward html5 and so

00:01:46,680 --> 00:01:53,549
are we we are adopting web RTC video to

00:01:50,700 --> 00:01:58,679
replace our older video standards older

00:01:53,549 --> 00:02:00,299
video codecs everything web RTC video

00:01:58,679 --> 00:02:02,579
just a little bit about it there's a

00:02:00,299 --> 00:02:06,689
fast Pierre the pure streaming video

00:02:02,579 --> 00:02:10,170
service and inside the glue bond video

00:02:06,689 --> 00:02:14,340
services integrate very deeply into our

00:02:10,170 --> 00:02:15,930
system we have multiple clients we have

00:02:14,340 --> 00:02:18,090
messaging systems we have multiple

00:02:15,930 --> 00:02:22,230
databases multiple servers media

00:02:18,090 --> 00:02:25,560
servers so video integrates very deeply

00:02:22,230 --> 00:02:27,390
into this system and less I've been

00:02:25,560 --> 00:02:30,599
working on this for just over a year now

00:02:27,390 --> 00:02:32,970
so i hope that kind of shows the scale

00:02:30,599 --> 00:02:37,400
and the magnitude of how deeply this

00:02:32,970 --> 00:02:39,629
integrates so i may the very simple

00:02:37,400 --> 00:02:42,810
diagram of how you make a software

00:02:39,629 --> 00:02:45,150
change go into your favor that other you

00:02:42,810 --> 00:02:49,200
make your change you save it and you the

00:02:45,150 --> 00:02:54,470
plate unfortunately it isn't as simple

00:02:49,200 --> 00:02:59,269
as that buttwipe hope to explain is that

00:02:54,470 --> 00:03:03,329
it can be somewhat similar to this you

00:02:59,269 --> 00:03:06,510
you want to plan your software change

00:03:03,329 --> 00:03:10,160
out in various steps and you don't want

00:03:06,510 --> 00:03:13,019
to leave any stone unturned you want to

00:03:10,160 --> 00:03:16,230
by the time you get to your development

00:03:13,019 --> 00:03:18,690
you want everything to be known so that

00:03:16,230 --> 00:03:22,470
way you can just go right into your

00:03:18,690 --> 00:03:28,650
development and hopefully you'll be good

00:03:22,470 --> 00:03:31,340
to go very very soon so when you're

00:03:28,650 --> 00:03:38,069
planning a major change there are

00:03:31,340 --> 00:03:41,099
multiple steps and a good breakdown is

00:03:38,069 --> 00:03:43,260
is why i have on the screen here so the

00:03:41,099 --> 00:03:46,739
first one would be requirements

00:03:43,260 --> 00:03:48,239
gathering you this is one of the most

00:03:46,739 --> 00:03:50,910
important steps you want to make sure

00:03:48,239 --> 00:03:53,489
that lice out by the time you get to

00:03:50,910 --> 00:03:55,560
your development you've gathered

00:03:53,489 --> 00:03:58,709
everything that you need to know about

00:03:55,560 --> 00:04:01,349
your project you want to know all about

00:03:58,709 --> 00:04:04,470
your resources all about how your

00:04:01,349 --> 00:04:08,940
current system works how about how your

00:04:04,470 --> 00:04:11,340
new feature or edition is going to work

00:04:08,940 --> 00:04:15,510
you want to know everything so you can

00:04:11,340 --> 00:04:17,789
just get right into your development the

00:04:15,510 --> 00:04:20,039
next step would be surveying your

00:04:17,789 --> 00:04:23,220
software so requirements gathering would

00:04:20,039 --> 00:04:25,289
be learning about your current or

00:04:23,220 --> 00:04:27,900
learning about what it is you are going

00:04:25,289 --> 00:04:31,210
to be doing but you also need to know

00:04:27,900 --> 00:04:33,370
what you are going to do it too

00:04:31,210 --> 00:04:36,340
this comes into play if you were

00:04:33,370 --> 00:04:38,410
swapping out a software feature or if

00:04:36,340 --> 00:04:41,470
you're adding a feature if you're

00:04:38,410 --> 00:04:45,520
swapping out component it's very

00:04:41,470 --> 00:04:49,000
important to know what relies on what

00:04:45,520 --> 00:04:52,240
you're swapping out so for me replacing

00:04:49,000 --> 00:04:56,050
our video system required a lot of

00:04:52,240 --> 00:04:59,590
analysis of the video system currently

00:04:56,050 --> 00:05:03,280
because it touches just about every

00:04:59,590 --> 00:05:06,940
feature and component of our software

00:05:03,280 --> 00:05:10,630
and so you can't just go ripping that

00:05:06,940 --> 00:05:14,490
out and putting in something new and

00:05:10,630 --> 00:05:17,830
hoping that it'll it'll work just fine

00:05:14,490 --> 00:05:20,919
the next step would be designing so

00:05:17,830 --> 00:05:24,669
after you know what it is you're going

00:05:20,919 --> 00:05:27,720
to be doing and where you're going to be

00:05:24,669 --> 00:05:31,960
implementing it you want to know how

00:05:27,720 --> 00:05:33,880
this includes how it's going to look how

00:05:31,960 --> 00:05:35,860
it's going to behave how it's going to

00:05:33,880 --> 00:05:37,990
behave to the user I was going to

00:05:35,860 --> 00:05:41,349
interact with the rest of your system

00:05:37,990 --> 00:05:44,229
just about everything aside from the

00:05:41,349 --> 00:05:48,639
code should be handled in your design

00:05:44,229 --> 00:05:50,800
phase and one very important step is

00:05:48,639 --> 00:05:54,009
taking the necessary time to learn

00:05:50,800 --> 00:05:56,460
because you won't always just be given

00:05:54,009 --> 00:05:59,969
the task that you know how to do

00:05:56,460 --> 00:06:03,960
speaking from experience I did not know

00:05:59,969 --> 00:06:06,870
almost anything about WebRTC video or

00:06:03,960 --> 00:06:10,539
video in the project that I worked for

00:06:06,870 --> 00:06:13,060
it's a very large project and not

00:06:10,539 --> 00:06:14,229
everyone knows every component that's

00:06:13,060 --> 00:06:17,349
why there's different teams you have

00:06:14,229 --> 00:06:19,289
marketing teams development teams you

00:06:17,349 --> 00:06:22,750
have so many different people working on

00:06:19,289 --> 00:06:26,740
such large projects that you don't

00:06:22,750 --> 00:06:29,229
always know what you work with every day

00:06:26,740 --> 00:06:33,449
and when you are implementing something

00:06:29,229 --> 00:06:36,270
new you might discover is best to do it

00:06:33,449 --> 00:06:40,240
using sign you don't actually know and

00:06:36,270 --> 00:06:44,569
for me I was using different frameworks

00:06:40,240 --> 00:06:48,499
different languages different softwares

00:06:44,569 --> 00:06:50,629
had to become familiar with and I can

00:06:48,499 --> 00:06:53,080
say that taking the necessary time to

00:06:50,629 --> 00:06:56,809
learn how you are going to implement

00:06:53,080 --> 00:07:00,259
something is probably one of the best

00:06:56,809 --> 00:07:02,330
stages to take your time on because you

00:07:00,259 --> 00:07:05,389
don't want to get two weeks into the

00:07:02,330 --> 00:07:09,499
development and have to say to your boss

00:07:05,389 --> 00:07:12,860
I need to go take two weeks to go learn

00:07:09,499 --> 00:07:15,649
what I'm using because I didn't bother

00:07:12,860 --> 00:07:18,740
to learn it before you want to make sure

00:07:15,649 --> 00:07:22,129
that when you get to your development

00:07:18,740 --> 00:07:24,709
phase you are sure of everything you

00:07:22,129 --> 00:07:27,289
know how everything works you know what

00:07:24,709 --> 00:07:30,770
it is you decide to use or you were told

00:07:27,289 --> 00:07:33,860
to use so you can get right into it it's

00:07:30,770 --> 00:07:36,860
fine to say to take two weeks for

00:07:33,860 --> 00:07:38,689
example to learn something new but you

00:07:36,860 --> 00:07:40,759
don't want to have to do that after

00:07:38,689 --> 00:07:44,389
you've already started because that can

00:07:40,759 --> 00:07:47,979
reflect very poorly on you the next step

00:07:44,389 --> 00:07:50,689
would be development and development

00:07:47,979 --> 00:07:53,240
should hopefully be a very easy step it

00:07:50,689 --> 00:07:57,199
might be the longest step there is it

00:07:53,240 --> 00:07:59,719
could be a couple days a couple weeks

00:07:57,199 --> 00:08:02,740
couple years but you want to make sure

00:07:59,719 --> 00:08:07,219
when you get to this development stage

00:08:02,740 --> 00:08:09,559
you are good to go so if you gather all

00:08:07,219 --> 00:08:12,169
your requirements you know everything

00:08:09,559 --> 00:08:14,089
about what you're going to be doing you

00:08:12,169 --> 00:08:16,819
know how it will look you know how it

00:08:14,089 --> 00:08:19,309
will behave you take the time to learn

00:08:16,819 --> 00:08:23,269
how you're going to do it development

00:08:19,309 --> 00:08:29,709
can be easy yes you will have to go back

00:08:23,269 --> 00:08:29,709
to some of these different stages but

00:08:29,979 --> 00:08:35,209
that's that's fine but you want to make

00:08:33,169 --> 00:08:37,729
sure your development can be a

00:08:35,209 --> 00:08:41,180
streamlined as possible because you are

00:08:37,729 --> 00:08:46,160
just helping yourself the next step is

00:08:41,180 --> 00:08:48,259
testing which hopefully goes good if

00:08:46,160 --> 00:08:50,389
you've planned everything properly and

00:08:48,259 --> 00:08:53,089
you've taken the time to learn

00:08:50,389 --> 00:08:55,220
everything you're testing should be very

00:08:53,089 --> 00:08:57,150
simple shouldn't always be something

00:08:55,220 --> 00:09:02,400
scary shouldn't be something that

00:08:57,150 --> 00:09:07,650
will set you back it should be nice to

00:09:02,400 --> 00:09:09,570
know that what you did works so with

00:09:07,650 --> 00:09:12,720
requirements gathering it's almost like

00:09:09,570 --> 00:09:15,050
writing a story you have the 5 w's you

00:09:12,720 --> 00:09:19,260
have how who what when where why how and

00:09:15,050 --> 00:09:20,580
you know hopefully it is you but the who

00:09:19,260 --> 00:09:25,530
could be you're working with someone

00:09:20,580 --> 00:09:31,200
else the one very important to know

00:09:25,530 --> 00:09:34,620
because you might have a week or half a

00:09:31,200 --> 00:09:36,930
year or two years and that helps with

00:09:34,620 --> 00:09:39,120
your when you were got in your

00:09:36,930 --> 00:09:42,150
requirements you want to know if your

00:09:39,120 --> 00:09:44,130
client needs something done by the end

00:09:42,150 --> 00:09:46,140
of the week or if they need something by

00:09:44,130 --> 00:09:49,200
the end of the year what they need part

00:09:46,140 --> 00:09:52,110
of it on one date the rest of it can

00:09:49,200 --> 00:09:55,110
come later so you need to know what your

00:09:52,110 --> 00:09:59,280
timeline is so you can plan that major

00:09:55,110 --> 00:10:04,830
features releases milestones and how

00:09:59,280 --> 00:10:07,680
much time you will give yourself why and

00:10:04,830 --> 00:10:10,740
how in my opinion speaking from my

00:10:07,680 --> 00:10:15,890
experience the why and how are the most

00:10:10,740 --> 00:10:19,200
important steps the how can determine

00:10:15,890 --> 00:10:21,720
that's your learning phase how you're

00:10:19,200 --> 00:10:24,330
going to do it you might discover is

00:10:21,720 --> 00:10:28,140
best to use a completely different

00:10:24,330 --> 00:10:34,980
language to implement a feature or a

00:10:28,140 --> 00:10:38,100
system that you don't know about but how

00:10:34,980 --> 00:10:40,560
you do it can be better or it can be

00:10:38,100 --> 00:10:44,910
more important than just though anything

00:10:40,560 --> 00:10:47,450
else the why certainly speaking from

00:10:44,910 --> 00:10:51,810
experience the why is something to

00:10:47,450 --> 00:10:55,680
always remember if in my case with our

00:10:51,810 --> 00:11:01,770
new video streaming service we want to

00:10:55,680 --> 00:11:04,230
adopt html5 video why well it's faster

00:11:01,770 --> 00:11:08,230
it's more efficient it's more future

00:11:04,230 --> 00:11:13,110
proof it will in the great better

00:11:08,230 --> 00:11:15,820
and it's required for us going forward

00:11:13,110 --> 00:11:18,370
so that right there is something that

00:11:15,820 --> 00:11:20,260
should always be in the back of your

00:11:18,370 --> 00:11:21,340
mind why you were doing this it was

00:11:20,260 --> 00:11:24,520
something that was always in the back of

00:11:21,340 --> 00:11:27,100
my mind why am I doing this in the first

00:11:24,520 --> 00:11:32,140
place it's meant to be more efficient

00:11:27,100 --> 00:11:35,890
and so I know if I get to any stage over

00:11:32,140 --> 00:11:38,590
the course of my year of development if

00:11:35,890 --> 00:11:42,880
that Y becomes compromised if it is no

00:11:38,590 --> 00:11:44,950
longer as efficient as I knew it was

00:11:42,880 --> 00:11:46,990
supposed to be I knew that something

00:11:44,950 --> 00:11:49,120
went wrong something went wrong with the

00:11:46,990 --> 00:11:51,580
design or something we run wrong with

00:11:49,120 --> 00:11:55,020
the development or gathering my

00:11:51,580 --> 00:11:58,930
requirements and I know that I need to

00:11:55,020 --> 00:12:04,060
somewhat backtrack so why you are doing

00:11:58,930 --> 00:12:07,030
this is just something to always

00:12:04,060 --> 00:12:13,240
remember because you want to exam that

00:12:07,030 --> 00:12:17,080
at every step of the way surveying your

00:12:13,240 --> 00:12:19,900
system this becomes very important

00:12:17,080 --> 00:12:22,990
especially if you're doing a swap or in

00:12:19,900 --> 00:12:25,990
addition in your software if you are

00:12:22,990 --> 00:12:30,700
starting a system up from the ground up

00:12:25,990 --> 00:12:32,560
for a client you might not have to you

00:12:30,700 --> 00:12:35,350
might not have anything to survey but

00:12:32,560 --> 00:12:37,780
generally no system just appears up in

00:12:35,350 --> 00:12:39,960
there you will integrate with something

00:12:37,780 --> 00:12:43,870
you will communicate with something else

00:12:39,960 --> 00:12:46,960
but in the case of swapping a feature in

00:12:43,870 --> 00:12:51,130
my case completely swapping all our

00:12:46,960 --> 00:12:56,230
video communication you have to learn

00:12:51,130 --> 00:12:59,770
how it currently works because if you

00:12:56,230 --> 00:13:02,400
put in something new you something else

00:12:59,770 --> 00:13:07,060
could break that you did not even know

00:13:02,400 --> 00:13:09,430
touched it in my case our video system

00:13:07,060 --> 00:13:12,040
they touch clients it touched our

00:13:09,430 --> 00:13:14,830
servers it touched our database our

00:13:12,040 --> 00:13:18,010
communication it touched everything so

00:13:14,830 --> 00:13:20,019
before you go taking out something very

00:13:18,010 --> 00:13:22,779
important or very large

00:13:20,019 --> 00:13:26,019
you need to know the extent of it where

00:13:22,779 --> 00:13:28,360
does it go it's like if you try to take

00:13:26,019 --> 00:13:32,230
out a tree you see the tree but it has

00:13:28,360 --> 00:13:35,970
many roots that go very deep and you

00:13:32,230 --> 00:13:40,299
need to know before you can replace it

00:13:35,970 --> 00:13:43,809
what is it in my case I spent a lot of

00:13:40,299 --> 00:13:47,589
time surveying our video system I spent

00:13:43,809 --> 00:13:50,470
a lot of time learning what interacts

00:13:47,589 --> 00:13:53,290
with it because the last thing I want to

00:13:50,470 --> 00:13:55,989
happen is to take out the very important

00:13:53,290 --> 00:13:58,720
part of our system and something else

00:13:55,989 --> 00:14:01,679
breaks that I didn't check because i

00:13:58,720 --> 00:14:05,499
figured it's not related a tradition

00:14:01,679 --> 00:14:07,720
interact with it at all and just as I

00:14:05,499 --> 00:14:10,660
said what relies on your current system

00:14:07,720 --> 00:14:15,009
and what will need to be adapted with me

00:14:10,660 --> 00:14:17,619
and my task of introducing new video

00:14:15,009 --> 00:14:20,999
what will need to be adopted that was

00:14:17,619 --> 00:14:23,470
just about everything our clients are

00:14:20,999 --> 00:14:27,309
existing client yet to be adapted our

00:14:23,470 --> 00:14:33,369
new client needed to have room to put

00:14:27,309 --> 00:14:35,980
this in so surveying is a step that is

00:14:33,369 --> 00:14:37,839
sometimes overlooked but in my

00:14:35,980 --> 00:14:43,689
experience is one of the most important

00:14:37,839 --> 00:14:45,970
things design this is a somewhat fun

00:14:43,689 --> 00:14:48,879
part of software development but you

00:14:45,970 --> 00:14:50,379
software developers might not always do

00:14:48,879 --> 00:14:53,110
this this might be handed off to a

00:14:50,379 --> 00:14:54,970
different team but at the end of the day

00:14:53,110 --> 00:14:58,779
is the programmers who are going to be

00:14:54,970 --> 00:15:04,980
doing it so the UI and the UX so user

00:14:58,779 --> 00:15:04,980
interface your user interaction your

00:15:05,399 --> 00:15:12,910
that this is where you can actually show

00:15:08,379 --> 00:15:16,149
off what you've done if you design the

00:15:12,910 --> 00:15:18,639
feature you designed the software if no

00:15:16,149 --> 00:15:22,540
one knows how to use it it doesn't

00:15:18,639 --> 00:15:25,720
really serve a purpose and with a lot of

00:15:22,540 --> 00:15:29,559
technologies today companies spend a lot

00:15:25,720 --> 00:15:33,139
of time on UI and UX to make sure that

00:15:29,559 --> 00:15:36,619
their software is usable and sometimes

00:15:33,139 --> 00:15:40,639
usable but basic software can be way

00:15:36,619 --> 00:15:45,859
more popular than complex feature load

00:15:40,639 --> 00:15:48,049
software so this is a very important

00:15:45,859 --> 00:15:51,589
step that could be handed over to your

00:15:48,049 --> 00:15:54,439
UI team or your user experience team but

00:15:51,589 --> 00:15:58,040
as the person who would be implementing

00:15:54,439 --> 00:16:00,079
this it's very important to know when

00:15:58,040 --> 00:16:02,839
you're designing your business rules

00:16:00,079 --> 00:16:07,339
gold wire business rules business rules

00:16:02,839 --> 00:16:09,769
would be what can your software do what

00:16:07,339 --> 00:16:14,389
can it not do was it supposed to do if

00:16:09,769 --> 00:16:18,499
you are working on a banking system can

00:16:14,389 --> 00:16:23,319
this system store information in its own

00:16:18,499 --> 00:16:23,319
database or is that against the rules

00:16:23,589 --> 00:16:28,519
programming this is the part about

00:16:26,359 --> 00:16:32,449
learning when you're designing your

00:16:28,519 --> 00:16:36,049
system you should examine all your

00:16:32,449 --> 00:16:38,149
options should you design it in a new

00:16:36,049 --> 00:16:43,489
language should you use a new framework

00:16:38,149 --> 00:16:47,509
in my case I was using new languages new

00:16:43,489 --> 00:16:50,540
frameworks new media servers new things

00:16:47,509 --> 00:16:54,549
I did not previously know about but

00:16:50,540 --> 00:16:59,839
during the design phase I realized that

00:16:54,549 --> 00:17:02,179
this would be in the long run superior

00:16:59,839 --> 00:17:04,490
to anything else we have and so it is

00:17:02,179 --> 00:17:09,309
worth the time to investigate these new

00:17:04,490 --> 00:17:09,309
languages investigate new frameworks and

00:17:09,490 --> 00:17:13,720
don't always just stick to what you know

00:17:14,079 --> 00:17:20,600
resources this comes into play when

00:17:17,779 --> 00:17:24,769
you're doing your requirements gathering

00:17:20,600 --> 00:17:28,419
and then when you're designing again you

00:17:24,769 --> 00:17:28,419
need to reference your resources and

00:17:29,650 --> 00:17:36,070
if you're designing a new system you

00:17:32,590 --> 00:17:38,470
need to know how much memory will it use

00:17:36,070 --> 00:17:40,630
when your design the system will it

00:17:38,470 --> 00:17:44,460
require more hard drive space will it

00:17:40,630 --> 00:17:47,230
require any type of new resources and

00:17:44,460 --> 00:17:50,230
design security are you going to have

00:17:47,230 --> 00:17:51,730
security in this system is this just a

00:17:50,230 --> 00:17:55,030
feature is that's just adding a small

00:17:51,730 --> 00:17:56,170
feature that doesn't actually need

00:17:55,030 --> 00:17:58,240
security because it's all right

00:17:56,170 --> 00:18:01,210
surrounded by secure components or are

00:17:58,240 --> 00:18:03,570
you inserting something new that needs

00:18:01,210 --> 00:18:05,940
to have security all the way through and

00:18:03,570 --> 00:18:08,320
again this is the place you want to

00:18:05,940 --> 00:18:11,610
worry about this you want to plan this

00:18:08,320 --> 00:18:15,070
out so that way when you get to your

00:18:11,610 --> 00:18:20,400
implementation stage you don't have any

00:18:15,070 --> 00:18:23,200
questions so avella ping or learning

00:18:20,400 --> 00:18:26,910
this is something I've referenced a few

00:18:23,200 --> 00:18:30,270
times and this is all from experience

00:18:26,910 --> 00:18:33,760
you need to learn your current system

00:18:30,270 --> 00:18:35,980
but should once you've finished planning

00:18:33,760 --> 00:18:39,240
everything should you get right into

00:18:35,980 --> 00:18:43,570
development or should you take the time

00:18:39,240 --> 00:18:46,350
to learn in my case I took several

00:18:43,570 --> 00:18:49,900
several months of learning something new

00:18:46,350 --> 00:18:53,530
learning how to use a new server how to

00:18:49,900 --> 00:18:56,710
use new languages new frameworks because

00:18:53,530 --> 00:18:58,300
I want to prepare myself I want to make

00:18:56,710 --> 00:19:03,190
sure that when i get to my development

00:18:58,300 --> 00:19:08,920
stage i can go full steam ahead I don't

00:19:03,190 --> 00:19:11,590
have to backtrack or stop to learn

00:19:08,920 --> 00:19:14,770
something I spent several several months

00:19:11,590 --> 00:19:21,210
learning so that way I could drastically

00:19:14,770 --> 00:19:21,210
reduce the time of development

00:19:22,080 --> 00:19:30,539
now you should hopefully be on your way

00:19:25,830 --> 00:19:34,679
to developing and again through swap

00:19:30,539 --> 00:19:40,380
verse addition if you are adding

00:19:34,679 --> 00:19:43,140
software or building software versus

00:19:40,380 --> 00:19:46,460
swapping software I swapped out software

00:19:43,140 --> 00:19:49,100
i swapped a very large component and

00:19:46,460 --> 00:19:52,470
it's always important to remember to

00:19:49,100 --> 00:19:56,639
build structured and build piece by

00:19:52,470 --> 00:20:00,149
piece because i know many people myself

00:19:56,639 --> 00:20:04,230
included have a tendency to start very

00:20:00,149 --> 00:20:07,320
small just inject a file or change a

00:20:04,230 --> 00:20:10,919
function call or change something to get

00:20:07,320 --> 00:20:13,529
your results and you continue on you

00:20:10,919 --> 00:20:17,399
just continue on and then sometime down

00:20:13,529 --> 00:20:20,299
the road it's impossible to do something

00:20:17,399 --> 00:20:23,669
else because of the way it was built and

00:20:20,299 --> 00:20:27,419
when you start small like that or when

00:20:23,669 --> 00:20:30,299
you start small but messy and you build

00:20:27,419 --> 00:20:35,010
on it it just becomes like a house of

00:20:30,299 --> 00:20:37,080
cards you one day you'll run into a

00:20:35,010 --> 00:20:40,769
situation where you need to change

00:20:37,080 --> 00:20:42,539
everything because you didn't you didn't

00:20:40,769 --> 00:20:48,299
plan it out properly from the beginning

00:20:42,539 --> 00:20:52,590
I encountered this somewhat when I first

00:20:48,299 --> 00:20:56,360
started ziyad I couldn't simply change

00:20:52,590 --> 00:21:00,840
out this gigantic feature I had to

00:20:56,360 --> 00:21:03,330
design it separately and try to bring it

00:21:00,840 --> 00:21:07,889
back over and I tried to bring it back

00:21:03,330 --> 00:21:12,179
over piece by piece as simple as I could

00:21:07,889 --> 00:21:16,710
without affecting anything else but that

00:21:12,179 --> 00:21:21,230
involved a few messy tricks and growing

00:21:16,710 --> 00:21:24,539
from there it I had to take the time to

00:21:21,230 --> 00:21:28,139
basically rewrite everything into a very

00:21:24,539 --> 00:21:31,230
neat way which in the end was very

00:21:28,139 --> 00:21:33,240
beneficial I wish I would have started

00:21:31,230 --> 00:21:35,250
like that you want to start small a

00:21:33,240 --> 00:21:38,400
start structured

00:21:35,250 --> 00:21:41,790
and modularity is key you want to be

00:21:38,400 --> 00:21:44,790
able to swap out if you're doing a spot

00:21:41,790 --> 00:21:48,990
swap out between old and new if you were

00:21:44,790 --> 00:21:51,900
adding you want to be able to add some

00:21:48,990 --> 00:21:54,660
feature without affecting anything else

00:21:51,900 --> 00:21:57,750
if you were building a house you don't

00:21:54,660 --> 00:22:01,290
just build it and then someone comes and

00:21:57,750 --> 00:22:05,280
tells you you need to add a new room but

00:22:01,290 --> 00:22:07,230
you didn't leave any room you you want

00:22:05,280 --> 00:22:11,580
to make sure that the framework and the

00:22:07,230 --> 00:22:14,010
foundation that you laid down will allow

00:22:11,580 --> 00:22:20,730
for expansion and just allow for

00:22:14,010 --> 00:22:25,860
continued development now you should be

00:22:20,730 --> 00:22:28,700
on your way to testing and testing can

00:22:25,860 --> 00:22:33,780
be scary because if you just spent

00:22:28,700 --> 00:22:37,200
several months of developing time you

00:22:33,780 --> 00:22:42,450
don't want to see what you created not

00:22:37,200 --> 00:22:46,610
work and that can be scary but at the

00:22:42,450 --> 00:22:50,970
same time all those previous steps are

00:22:46,610 --> 00:22:53,700
to prepare yourself for this step when

00:22:50,970 --> 00:22:57,780
you gather all your requirements that is

00:22:53,700 --> 00:23:00,120
to prepare you for your design and when

00:22:57,780 --> 00:23:02,250
you are designing you are preparing

00:23:00,120 --> 00:23:03,630
yourself your development and your

00:23:02,250 --> 00:23:05,460
development should prepare you for your

00:23:03,630 --> 00:23:07,770
testing so if you start from the

00:23:05,460 --> 00:23:12,470
beginning preparing yourself all the way

00:23:07,770 --> 00:23:18,260
through your testing should hopefully be

00:23:12,470 --> 00:23:18,260
very simple very straightforward and

00:23:19,280 --> 00:23:28,200
testing involves multiple things testing

00:23:24,300 --> 00:23:31,260
your existing system testing the new

00:23:28,200 --> 00:23:34,170
software you have and then testing full

00:23:31,260 --> 00:23:37,520
loop your system should hopefully

00:23:34,170 --> 00:23:40,950
already work and then test your new

00:23:37,520 --> 00:23:44,280
software and then test them together is

00:23:40,950 --> 00:23:47,240
there anything different do they behave

00:23:44,280 --> 00:23:50,540
differently together do they

00:23:47,240 --> 00:23:54,320
interact is there anything different are

00:23:50,540 --> 00:23:58,100
there any faults and this is where you

00:23:54,320 --> 00:24:01,000
review requirements are your

00:23:58,100 --> 00:24:03,350
requirements still valid do you need

00:24:01,000 --> 00:24:05,840
when you're testing do you realize you

00:24:03,350 --> 00:24:08,210
need more resources than before do you

00:24:05,840 --> 00:24:14,390
need more RAM them before does your

00:24:08,210 --> 00:24:17,510
software introduce any additional user

00:24:14,390 --> 00:24:22,429
interaction and the additional security

00:24:17,510 --> 00:24:26,870
information than previously thought and

00:24:22,429 --> 00:24:29,480
so the results of your test will be the

00:24:26,870 --> 00:24:33,590
integrity of your application does it

00:24:29,480 --> 00:24:37,750
still work as intended is it still the

00:24:33,590 --> 00:24:40,640
software that you were planning on and

00:24:37,750 --> 00:24:47,270
the sesang stage is where you can get

00:24:40,640 --> 00:24:50,179
all your feedback and I know again

00:24:47,270 --> 00:24:54,440
speaking from experience testing can be

00:24:50,179 --> 00:24:57,220
scary I'm in the testing phase of my web

00:24:54,440 --> 00:25:01,160
RTC video I spent several months of

00:24:57,220 --> 00:25:05,270
development and before that even more

00:25:01,160 --> 00:25:07,870
time of learning and planning and now

00:25:05,270 --> 00:25:10,790
I'm at the testing phase which is a

00:25:07,870 --> 00:25:14,630
happy phase because I can send it off to

00:25:10,790 --> 00:25:16,160
people for testing and I got to hear

00:25:14,630 --> 00:25:19,640
back from people have they seen

00:25:16,160 --> 00:25:23,510
something that I didn't see I miss

00:25:19,640 --> 00:25:28,480
something does it work exactly as they

00:25:23,510 --> 00:25:28,480
expected is it missing something and

00:25:29,170 --> 00:25:34,490
feedback not everyone always likes to

00:25:32,030 --> 00:25:36,910
hear feedback but it's the most

00:25:34,490 --> 00:25:40,490
important things if you just spent a

00:25:36,910 --> 00:25:42,559
long time creating something you want to

00:25:40,490 --> 00:25:48,190
be happy with it you want to be proud of

00:25:42,559 --> 00:25:53,980
that you want your work to be used and

00:25:48,190 --> 00:25:53,980
so after testing you're done right

00:25:54,350 --> 00:26:04,590
well not exactly yes you are somewhat

00:25:58,410 --> 00:26:06,720
done but you're never completely done

00:26:04,590 --> 00:26:11,250
you never just finished something and

00:26:06,720 --> 00:26:14,340
ship it off and just forget it after

00:26:11,250 --> 00:26:16,620
testing you have your maintenance you

00:26:14,340 --> 00:26:21,090
maintain your software for the lifetime

00:26:16,620 --> 00:26:24,000
if you're testing 11 excellent and your

00:26:21,090 --> 00:26:27,960
code your software your feature is now

00:26:24,000 --> 00:26:31,080
going to be used and from your clients

00:26:27,960 --> 00:26:33,750
are now going to be using this you will

00:26:31,080 --> 00:26:35,370
have to maintain it because over the

00:26:33,750 --> 00:26:38,940
course of years of people using your

00:26:35,370 --> 00:26:43,560
software they'll find the shoes users

00:26:38,940 --> 00:26:47,220
always find certain issues and you need

00:26:43,560 --> 00:26:52,320
to maintain your software and as you see

00:26:47,220 --> 00:26:54,720
this diagram full loop because as soon

00:26:52,320 --> 00:26:56,370
as you finish your testing and you move

00:26:54,720 --> 00:26:58,080
on to your maintenance you begin

00:26:56,370 --> 00:27:00,330
developing again whether you're

00:26:58,080 --> 00:27:05,520
developing the same thing or you're

00:27:00,330 --> 00:27:10,680
developing something else but this loop

00:27:05,520 --> 00:27:12,600
never ends and the hope is that you

00:27:10,680 --> 00:27:16,680
spend more time at each of the beginning

00:27:12,600 --> 00:27:18,420
phases so when you get toward the end

00:27:16,680 --> 00:27:20,370
when you get toward your implementation

00:27:18,420 --> 00:27:23,220
you're testing the integration your

00:27:20,370 --> 00:27:28,350
maintenance they go as smoothly as

00:27:23,220 --> 00:27:31,650
quickly as possible and one other

00:27:28,350 --> 00:27:35,160
important thing that you learn while

00:27:31,650 --> 00:27:40,370
developing software is that every single

00:27:35,160 --> 00:27:44,220
phase is not on its own every phase

00:27:40,370 --> 00:27:46,230
leads into the next one but when you

00:27:44,220 --> 00:27:48,390
were toward the end you still sometimes

00:27:46,230 --> 00:27:53,690
need to go back because when you're

00:27:48,390 --> 00:27:57,060
implementing you may see you need to

00:27:53,690 --> 00:27:59,100
plan out something new what if you got

00:27:57,060 --> 00:28:03,360
told of a new feature you need or you

00:27:59,100 --> 00:28:06,240
were implementing something and it can

00:28:03,360 --> 00:28:07,410
just it just can't be done or you are

00:28:06,240 --> 00:28:10,860
testing

00:28:07,410 --> 00:28:13,260
and you have an issue well then you need

00:28:10,860 --> 00:28:18,540
to go back to your planning phase you

00:28:13,260 --> 00:28:21,120
don't just go back and try to fix your

00:28:18,540 --> 00:28:24,420
code you want to realize what happened

00:28:21,120 --> 00:28:28,800
where this issue come up why did it come

00:28:24,420 --> 00:28:31,230
up and so you hope to go forward but at

00:28:28,800 --> 00:28:35,550
the same time is perfectly fine to go

00:28:31,230 --> 00:28:37,980
back and I have realized this with my

00:28:35,550 --> 00:28:40,950
work where I'm now on my testing phase

00:28:37,980 --> 00:28:42,900
and hopefully we'll move on to

00:28:40,950 --> 00:28:45,630
maintenance soon where this will be in

00:28:42,900 --> 00:28:48,690
the hands of our users in the hands of

00:28:45,630 --> 00:28:51,600
professors and students using this video

00:28:48,690 --> 00:28:56,940
streaming and this is a complex system

00:28:51,600 --> 00:29:00,450
and if become found it's good to go back

00:28:56,940 --> 00:29:03,630
right to the planning stage because if

00:29:00,450 --> 00:29:06,650
something goes wrong yes you can just go

00:29:03,630 --> 00:29:11,730
find out find out your bug and fix it

00:29:06,650 --> 00:29:15,390
but you'd like to know where did this

00:29:11,730 --> 00:29:19,650
come up because like I said each stage

00:29:15,390 --> 00:29:21,750
should prepare you for the rest and if

00:29:19,650 --> 00:29:24,120
something went wrong you want prepare

00:29:21,750 --> 00:29:27,630
yourself for the future you want to make

00:29:24,120 --> 00:29:30,840
sure that this will not happen again you

00:29:27,630 --> 00:29:33,840
want to make sure that each step of the

00:29:30,840 --> 00:29:35,850
way is not just preparing you for the

00:29:33,840 --> 00:29:37,680
next step is preparing you for your next

00:29:35,850 --> 00:29:40,830
time the next time you implement

00:29:37,680 --> 00:29:43,740
software you will be able to do it

00:29:40,830 --> 00:29:47,820
faster because you know you're planning

00:29:43,740 --> 00:29:51,300
stage can come back to bite you if you

00:29:47,820 --> 00:29:56,160
skip it or cute at if you skip over your

00:29:51,300 --> 00:29:57,690
testing your maintenance might not even

00:29:56,160 --> 00:29:59,610
be existing because it might not be

00:29:57,690 --> 00:30:05,990
possible to maintain that you have might

00:29:59,610 --> 00:30:05,990
have to start right over again and I

00:30:06,020 --> 00:30:11,880
learnt this is the first time I did a

00:30:09,000 --> 00:30:15,650
very large change in software changing

00:30:11,880 --> 00:30:19,050
this video streaming service and I i

00:30:15,650 --> 00:30:20,550
learned that every single stage here is

00:30:19,050 --> 00:30:24,030
just as important

00:30:20,550 --> 00:30:25,710
as the one before it and some of these

00:30:24,030 --> 00:30:29,010
things you might think you can skip over

00:30:25,710 --> 00:30:31,980
if you are making a quick little feature

00:30:29,010 --> 00:30:33,990
you might think just do the design get

00:30:31,980 --> 00:30:36,930
right into the implementation and test

00:30:33,990 --> 00:30:40,290
it but especially if you're working with

00:30:36,930 --> 00:30:43,890
a client who requests a feature or a

00:30:40,290 --> 00:30:48,060
client who is paying money over a

00:30:43,890 --> 00:30:51,240
contract requesting something you don't

00:30:48,060 --> 00:30:54,420
want to over skip or skip over your

00:30:51,240 --> 00:30:57,800
requirements over your planning because

00:30:54,420 --> 00:31:02,520
it's not just your users who could be

00:30:57,800 --> 00:31:06,090
upset it could be your client and at the

00:31:02,520 --> 00:31:09,450
end the whole point is to make good

00:31:06,090 --> 00:31:12,060
software and your maintenance should

00:31:09,450 --> 00:31:15,630
hopefully be your easiest and it should

00:31:12,060 --> 00:31:19,920
be the most rewarding step one you've

00:31:15,630 --> 00:31:21,660
been able to flow through this float

00:31:19,920 --> 00:31:24,350
flow through all these steps and people

00:31:21,660 --> 00:31:30,170
are using your software that should be

00:31:24,350 --> 00:31:30,170
the happiest time so

00:31:32,659 --> 00:31:38,149
for me I hope to get onto maintenance

00:31:35,749 --> 00:31:40,729
soon so people can start using my

00:31:38,149 --> 00:31:43,820
software I hope that people can start

00:31:40,729 --> 00:31:47,989
using our video because we are launching

00:31:43,820 --> 00:31:52,249
a new client and that can't be made that

00:31:47,989 --> 00:31:54,320
can't be done without the web RTC video

00:31:52,249 --> 00:31:57,859
that I did and so maintenance I'll be

00:31:54,320 --> 00:32:00,729
able to see people who were not able to

00:31:57,859 --> 00:32:04,580
receive in the online education before

00:32:00,729 --> 00:32:07,009
due to network limitations they may be

00:32:04,580 --> 00:32:09,820
able to see their professor for the

00:32:07,009 --> 00:32:09,820
first time and

00:32:22,830 --> 00:32:30,700
that's that's pretty much it just I

00:32:27,929 --> 00:32:33,520
learned so much over the course of a

00:32:30,700 --> 00:32:37,210
year and this was something that I

00:32:33,520 --> 00:32:40,179
always referenced and I know for sure I

00:32:37,210 --> 00:32:43,770
will reference it every time for now on

00:32:40,179 --> 00:32:46,530
and I hope that when other people are

00:32:43,770 --> 00:32:49,600
creating software especially something

00:32:46,530 --> 00:32:54,220
very important that will be used from by

00:32:49,600 --> 00:32:57,040
other people they do not overlook

00:32:54,220 --> 00:33:03,250
anything because I have learned that you

00:32:57,040 --> 00:33:07,090
do not want to skip over anything you

00:33:03,250 --> 00:33:09,790
want your software to be used and I hope

00:33:07,090 --> 00:33:13,000
it will be and I hope that for any

00:33:09,790 --> 00:33:19,290
programmers who study something like

00:33:13,000 --> 00:33:23,280
this they have a very good time doing it

00:33:19,290 --> 00:33:23,280
that's it thank you

00:33:34,110 --> 00:33:42,510
in which that you've gotten probably

00:33:36,150 --> 00:33:46,470
five a salary which parts with you Percy

00:33:42,510 --> 00:33:50,160
the longest on this personally though

00:33:46,470 --> 00:33:53,130
what took me the longest was my learning

00:33:50,160 --> 00:33:57,330
stage because I was assigned a new

00:33:53,130 --> 00:34:00,650
feature replacing video which is very

00:33:57,330 --> 00:34:03,900
complex and I was using I had to use

00:34:00,650 --> 00:34:06,480
languages I didn't know I had to use a

00:34:03,900 --> 00:34:09,350
brand new media server called free

00:34:06,480 --> 00:34:12,659
switch they implement did video

00:34:09,350 --> 00:34:18,200
transmission which I'd never used before

00:34:12,659 --> 00:34:21,869
I had to use brand new libraries I

00:34:18,200 --> 00:34:24,780
develop a blue bun I work on our html5

00:34:21,869 --> 00:34:30,260
client I also need to implement this in

00:34:24,780 --> 00:34:36,260
our older flash based system and I spent

00:34:30,260 --> 00:34:40,230
so much time learning as well as this

00:34:36,260 --> 00:34:41,760
the nature of open source is it's always

00:34:40,230 --> 00:34:44,820
being developed there's always people

00:34:41,760 --> 00:34:48,210
adding to it while I was trying to study

00:34:44,820 --> 00:34:50,460
the software to before I could even use

00:34:48,210 --> 00:34:53,340
it in our system I need to study the

00:34:50,460 --> 00:34:55,350
software to replicate it and then try

00:34:53,340 --> 00:34:57,960
put into our software and while I'm

00:34:55,350 --> 00:35:02,730
doing that over the course of the year

00:34:57,960 --> 00:35:05,040
it underwent many major changes and I

00:35:02,730 --> 00:35:12,410
spent so much time just learning so much

00:35:05,040 --> 00:35:16,320
time testing how it works on its own but

00:35:12,410 --> 00:35:20,670
that was sort of i was trying to my main

00:35:16,320 --> 00:35:23,760
point here was i I'd learn the boats on

00:35:20,670 --> 00:35:27,780
that these steps in school at that chart

00:35:23,760 --> 00:35:31,560
but the learning phase was typically

00:35:27,780 --> 00:35:34,560
overlooked because you typically will

00:35:31,560 --> 00:35:37,410
not be assigned the contract to develop

00:35:34,560 --> 00:35:39,960
software or your boss might not tell you

00:35:37,410 --> 00:35:42,240
do sign that you don't know but it

00:35:39,960 --> 00:35:44,369
happens it happened to me I'm sure it

00:35:42,240 --> 00:35:47,160
happens to a bunch of Peel who may they

00:35:44,369 --> 00:35:51,090
they move teams they launch a brand new

00:35:47,160 --> 00:35:52,829
app and they need to learn and you might

00:35:51,090 --> 00:35:56,789
think you can

00:35:52,829 --> 00:36:01,619
over it but in the end you're just

00:35:56,789 --> 00:36:04,099
punishing yourself really and the

00:36:01,619 --> 00:36:07,229
question but took me the longest it was

00:36:04,099 --> 00:36:09,569
learning but that's sort of why I want

00:36:07,229 --> 00:36:11,729
to talk about which was learning is

00:36:09,569 --> 00:36:14,789
actually one of the most important steps

00:36:11,729 --> 00:36:17,809
you can do because any programmer

00:36:14,789 --> 00:36:19,890
regardless of what language they know

00:36:17,809 --> 00:36:23,009
there is so much more about that

00:36:19,890 --> 00:36:25,079
language they don't know every person

00:36:23,009 --> 00:36:30,839
this room can name a hundred JavaScript

00:36:25,079 --> 00:36:34,219
packages and there's thousands more so

00:36:30,839 --> 00:36:34,219
learning definitely

00:36:38,470 --> 00:36:47,859
[Music]

00:36:40,770 --> 00:36:52,780
there were many I would say it was also

00:36:47,859 --> 00:36:55,660
the learning because I learned so many

00:36:52,780 --> 00:36:58,589
things I never looked at before so many

00:36:55,660 --> 00:37:02,260
things I general even know existed and

00:36:58,589 --> 00:37:05,680
the biggest challenge was trying to take

00:37:02,260 --> 00:37:08,710
in so many different software's that a

00:37:05,680 --> 00:37:12,040
lot of these softwares and technologies

00:37:08,710 --> 00:37:16,329
I used they are only used by a handful

00:37:12,040 --> 00:37:19,420
of people in the world they serve a

00:37:16,329 --> 00:37:23,079
specific task and they are excellent at

00:37:19,420 --> 00:37:27,520
completing that but very few people use

00:37:23,079 --> 00:37:30,880
them so the resources were very scarce

00:37:27,520 --> 00:37:33,130
if I want something there's no google

00:37:30,880 --> 00:37:35,680
there's no stack overflow you need to

00:37:33,130 --> 00:37:37,089
directly contact the person who did it

00:37:35,680 --> 00:37:41,230
because they're the only person that

00:37:37,089 --> 00:37:43,960
knows it and that's the role that I'm

00:37:41,230 --> 00:37:47,890
taking on now where I've taken those

00:37:43,960 --> 00:37:51,130
softwares and put them together and I'm

00:37:47,890 --> 00:37:55,270
now one of the few people who knows how

00:37:51,130 --> 00:37:57,220
these things interact and when I try

00:37:55,270 --> 00:38:01,410
google for help I just find myself

00:37:57,220 --> 00:38:01,410
asking questions on Google because

00:38:03,810 --> 00:38:09,980
that was the most difficult part I think

00:38:05,940 --> 00:38:09,980
just just try to learn everything

00:38:14,570 --> 00:38:21,390
yeah actually the design was fairly

00:38:17,610 --> 00:38:26,610
simple we have a user in their face guy

00:38:21,390 --> 00:38:29,340
and my boss knew what we wanted so our

00:38:26,610 --> 00:38:31,350
design was actually pretty simple we

00:38:29,340 --> 00:38:34,860
knew we were going to use a language use

00:38:31,350 --> 00:38:36,900
a server use a framework design was

00:38:34,860 --> 00:38:41,610
probably the easiest step before that

00:38:36,900 --> 00:38:45,600
there was the planning which was very

00:38:41,610 --> 00:38:50,390
long there was the development which was

00:38:45,600 --> 00:38:53,700
fairly long but planning our design was

00:38:50,390 --> 00:38:56,370
quick and very fun designs one of the

00:38:53,700 --> 00:38:58,520
most interesting parts of developing

00:38:56,370 --> 00:38:58,520
software

00:39:00,190 --> 00:39:04,980
any other questions yeah

00:39:05,150 --> 00:39:10,710
like was there alone market

00:39:06,690 --> 00:39:13,450
design work industry implementation

00:39:10,710 --> 00:39:20,260
video art and putting in

00:39:13,450 --> 00:39:25,310
both so we're implementing html5 and

00:39:20,260 --> 00:39:29,000
JavaScript video which putting it into

00:39:25,310 --> 00:39:31,700
our we have a video system which was

00:39:29,000 --> 00:39:33,760
designed and implemented over the course

00:39:31,700 --> 00:39:37,010
of multiple years it was very sturdy and

00:39:33,760 --> 00:39:40,730
the plan was to mimic and recreate that

00:39:37,010 --> 00:39:45,530
structure but at the same time being so

00:39:40,730 --> 00:39:48,410
different it involved a lot of new

00:39:45,530 --> 00:39:52,580
engineering and solving new issues that

00:39:48,410 --> 00:39:57,040
did not exist before and so when you're

00:39:52,580 --> 00:40:02,600
making a swap if you can keep structure

00:39:57,040 --> 00:40:05,270
that makes it very easy but you just you

00:40:02,600 --> 00:40:07,550
can't always do it which is I said that

00:40:05,270 --> 00:40:11,110
learning phase if you are using lay a

00:40:07,550 --> 00:40:14,510
new language like Iowa's new framework

00:40:11,110 --> 00:40:17,630
you spend the time to learn how you

00:40:14,510 --> 00:40:19,640
might not think you can do something but

00:40:17,630 --> 00:40:25,340
if you spend the time learning you might

00:40:19,640 --> 00:40:27,760
realize you can I hope I answered your

00:40:25,340 --> 00:40:27,760
question

00:40:30,380 --> 00:40:33,530
thank you

00:40:40,120 --> 00:40:42,180

YouTube URL: https://www.youtube.com/watch?v=_ECd-CEomoY


