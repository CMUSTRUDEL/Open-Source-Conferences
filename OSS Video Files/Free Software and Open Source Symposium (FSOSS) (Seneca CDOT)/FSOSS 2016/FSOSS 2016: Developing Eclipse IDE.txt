Title: FSOSS 2016: Developing Eclipse IDE
Publication date: 2016-11-24
Playlist: FSOSS 2016
Description: 
	Speaker: Ian Pun, Software Engineering Intern for RedHat

Discussions of what it's like to work with an enormous IDE platform and focusing on what the community wants. We will be going through workflow enhancements, Gerrit reviews, automated tests, Bugzilla and others.
Captions: 
	00:00:04,700 --> 00:00:09,470
good afternoon so my name is Ian and I'm

00:00:07,730 --> 00:00:12,290
gonna be talking a little bit about the

00:00:09,470 --> 00:00:15,410
Eclipse platform and mainly focusing on

00:00:12,290 --> 00:00:17,660
the UI development section of it so

00:00:15,410 --> 00:00:19,460
today's agenda will just have a brief

00:00:17,660 --> 00:00:21,860
introduction about myself and why I'm

00:00:19,460 --> 00:00:24,140
merely qualified to be here what the

00:00:21,860 --> 00:00:27,340
Eclipse Foundation is a bit about the

00:00:24,140 --> 00:00:31,130
SWT so simple widget toolkit and GDK and

00:00:27,340 --> 00:00:32,720
understanding SWT and with snippets and

00:00:31,130 --> 00:00:35,750
also an application called control

00:00:32,720 --> 00:00:37,489
example next we'll also get into how to

00:00:35,750 --> 00:00:38,780
get started with Eclipse development so

00:00:37,489 --> 00:00:40,280
I'll go through some kind of first steps

00:00:38,780 --> 00:00:42,710
if you are interested in doing something

00:00:40,280 --> 00:00:44,719
like that some general debugging tips

00:00:42,710 --> 00:00:47,030
that I've come across and come from

00:00:44,719 --> 00:00:48,500
experience and learn from that and my

00:00:47,030 --> 00:00:50,719
experience with developing eclipse and

00:00:48,500 --> 00:00:54,949
it's in its own community and lastly

00:00:50,719 --> 00:00:56,510
just some closing remarks so I'm a

00:00:54,949 --> 00:00:58,219
fourth year computer science student at

00:00:56,510 --> 00:00:59,719
Simon Fraser University in the beautiful

00:00:58,219 --> 00:01:01,999
city of Vancouver British Columbia

00:00:59,719 --> 00:01:03,440
that is not Vancouver that's actually

00:01:01,999 --> 00:01:07,130
New York so it doesn't have any

00:01:03,440 --> 00:01:08,930
correlation so I've been a software

00:01:07,130 --> 00:01:11,330
engineering intern at Red Hat since May

00:01:08,930 --> 00:01:14,030
2016 so it's about six months now and

00:01:11,330 --> 00:01:15,950
I've been working on the Eclipse fund

00:01:14,030 --> 00:01:17,030
with the Eclipse Foundation since so

00:01:15,950 --> 00:01:19,460
some of the open source contributions

00:01:17,030 --> 00:01:22,430
I've done I explained earlier I've done

00:01:19,460 --> 00:01:24,860
some hub resume chrome extensions a chat

00:01:22,430 --> 00:01:26,390
IRC BOTS and a city talk local complaint

00:01:24,860 --> 00:01:28,070
notifier for one of the hackathons I did

00:01:26,390 --> 00:01:31,580
a couple years back which is a web

00:01:28,070 --> 00:01:33,170
application so my main objective today

00:01:31,580 --> 00:01:35,030
is kind of give you guys an insight of

00:01:33,170 --> 00:01:36,740
what the eclipse foundation is and then

00:01:35,030 --> 00:01:38,120
how relates to the Eclipse platform and

00:01:36,740 --> 00:01:39,560
provided developers an easier approach

00:01:38,120 --> 00:01:44,570
and getting involved with the open

00:01:39,560 --> 00:01:45,650
source development of clips so we're

00:01:44,570 --> 00:01:47,780
gonna talk a little bit about the

00:01:45,650 --> 00:01:50,210
Eclipse Foundation just a quick

00:01:47,780 --> 00:01:52,070
disclaimer I basically some air is

00:01:50,210 --> 00:01:53,560
simply because I'm you know I'm just a

00:01:52,070 --> 00:01:55,610
student like some of you guys are and

00:01:53,560 --> 00:01:56,870
please don't hold me accountable if I do

00:01:55,610 --> 00:01:58,370
see something wrong but let me know by

00:01:56,870 --> 00:01:59,630
if you guys know something that's right

00:01:58,370 --> 00:02:03,530
and I'm saying it wrong please let me

00:01:59,630 --> 00:02:05,000
know so the Eclipse Foundation so

00:02:03,530 --> 00:02:06,980
basically it's a community of

00:02:05,000 --> 00:02:08,539
individuals and organizations wishing to

00:02:06,980 --> 00:02:10,700
collaborate in a commercially friendly

00:02:08,539 --> 00:02:12,890
open-source software so they clips

00:02:10,700 --> 00:02:16,340
platform which you guys may have known

00:02:12,890 --> 00:02:17,430
as the Eclipse IDE originated from IBM

00:02:16,340 --> 00:02:19,650
in 2001

00:02:17,430 --> 00:02:22,560
and was later kind of built from that

00:02:19,650 --> 00:02:26,069
and maintained by the Eclipse Foundation

00:02:22,560 --> 00:02:28,079
so from a recent study I've looked at

00:02:26,069 --> 00:02:30,269
it's still the most recently most widely

00:02:28,079 --> 00:02:31,260
used IDE for Java development and the

00:02:30,269 --> 00:02:33,090
best part about the Eclipse Foundation

00:02:31,260 --> 00:02:38,220
and it promotes open source software and

00:02:33,090 --> 00:02:40,739
promotes freedom so here is a tiny graph

00:02:38,220 --> 00:02:43,260
I found that kind of describes what I

00:02:40,739 --> 00:02:44,819
just said earlier so the IDS you use

00:02:43,260 --> 00:02:46,109
most often this was done two years ago

00:02:44,819 --> 00:02:48,689
so I don't think there's been that huge

00:02:46,109 --> 00:02:50,310
of an influx of change Eclipse has been

00:02:48,689 --> 00:02:52,799
one of the most widely used ones for

00:02:50,310 --> 00:02:55,500
Java development exclusively and then

00:02:52,799 --> 00:03:00,540
you have trailing ones like a Tele J and

00:02:55,500 --> 00:03:03,629
NetBeans and etc so the Eclipse platform

00:03:00,540 --> 00:03:06,209
itself has the IDE it composed of mainly

00:03:03,629 --> 00:03:09,900
five large components and its platform

00:03:06,209 --> 00:03:11,099
UI SWT rail and debug and resources so

00:03:09,900 --> 00:03:13,590
I'll kind of go through a little bit of

00:03:11,099 --> 00:03:15,989
each one for you so in terms of Eclipse

00:03:13,590 --> 00:03:17,400
it tries to be very modular and that's

00:03:15,989 --> 00:03:18,810
why it's kind of split up into these

00:03:17,400 --> 00:03:21,000
five second sections and you'll

00:03:18,810 --> 00:03:23,489
continuously see that within the Eclipse

00:03:21,000 --> 00:03:24,840
development kind of just overall

00:03:23,489 --> 00:03:28,019
development things people want to be

00:03:24,840 --> 00:03:29,940
very modular about it so for example

00:03:28,019 --> 00:03:32,099
plus we'll talk about real end real n

00:03:29,940 --> 00:03:34,769
jiz basically release engineering so

00:03:32,099 --> 00:03:36,569
that deals with and built cycles and

00:03:34,769 --> 00:03:38,220
release basically the release

00:03:36,569 --> 00:03:41,790
engineering so going from source to

00:03:38,220 --> 00:03:44,909
download debug is handling the debugs

00:03:41,790 --> 00:03:46,590
system of eclipse resources is kind of

00:03:44,909 --> 00:03:49,680
the very very main model of how eclipse

00:03:46,590 --> 00:03:52,709
works so prop projects handling file

00:03:49,680 --> 00:03:54,599
handling etc and lastly what I'm mainly

00:03:52,709 --> 00:03:56,699
going to be talking about would be swg a

00:03:54,599 --> 00:03:58,019
platform UI so these two are kind of the

00:03:56,699 --> 00:03:59,069
things that I've touched upon and maybe

00:03:58,019 --> 00:04:02,129
you've been working on for these past

00:03:59,069 --> 00:04:05,459
six months so next we'll start with

00:04:02,129 --> 00:04:06,989
standard widget toolkit so the standard

00:04:05,459 --> 00:04:08,970
widget toolkit is a graphical widget

00:04:06,989 --> 00:04:11,069
toolkit with the Java platform so it's

00:04:08,970 --> 00:04:12,840
written in Java it was originally

00:04:11,069 --> 00:04:14,940
developed in by IBM as well but it's

00:04:12,840 --> 00:04:17,609
currently retained by Red Hat IBM the

00:04:14,940 --> 00:04:20,010
community and other kind of others as

00:04:17,609 --> 00:04:22,949
well so what this is is that the main

00:04:20,010 --> 00:04:25,050
main goal for SWT was to create a widget

00:04:22,949 --> 00:04:26,849
library that is native to the operating

00:04:25,050 --> 00:04:28,169
system so as you can see in the

00:04:26,849 --> 00:04:29,070
screenshots this kind of tries to

00:04:28,169 --> 00:04:30,630
express it I know they're kind of

00:04:29,070 --> 00:04:32,460
outdated because they're older

00:04:30,630 --> 00:04:34,890
versions of things but bear with me it

00:04:32,460 --> 00:04:37,530
kind of still gives the same concept as

00:04:34,890 --> 00:04:41,250
you can see this kind of quick app that

00:04:37,530 --> 00:04:44,190
was made in SWT in Mac OS X it kind of

00:04:41,250 --> 00:04:45,690
relates to how Mac OSX looks at like

00:04:44,190 --> 00:04:47,790
when it turned in terms of how the

00:04:45,690 --> 00:04:49,740
widgets look so you can see that it

00:04:47,790 --> 00:04:52,320
differs with Linux and Windows and

00:04:49,740 --> 00:04:54,750
Windows Vista and what it does is

00:04:52,320 --> 00:04:56,100
basically grabs the native native

00:04:54,750 --> 00:04:58,470
widgets from the operating system

00:04:56,100 --> 00:05:00,720
instead of creating its own so such

00:04:58,470 --> 00:05:02,970
things like alternatives besides SWT

00:05:00,720 --> 00:05:05,130
being like swing swing kind of composers

00:05:02,970 --> 00:05:08,340
or more customizable widgets and it

00:05:05,130 --> 00:05:10,500
gives more like a like a same kind of

00:05:08,340 --> 00:05:13,050
feeling of widgets across all platforms

00:05:10,500 --> 00:05:14,550
whereas s2p kind of focuses more about

00:05:13,050 --> 00:05:15,780
the operating system level things and

00:05:14,550 --> 00:05:19,440
trying to keep it so much of how the

00:05:15,780 --> 00:05:21,990
operating system wants it to look so if

00:05:19,440 --> 00:05:24,000
you guys are aware of toolkits it's

00:05:21,990 --> 00:05:26,370
pretty similar to how AWT works which is

00:05:24,000 --> 00:05:27,930
Javas but it extends that so it's offer

00:05:26,370 --> 00:05:31,710
more additional which is like tree in

00:05:27,930 --> 00:05:34,710
table so next I'm going to talk a little

00:05:31,710 --> 00:05:36,750
bit about GDK GDK itself is another

00:05:34,710 --> 00:05:37,800
library but this was written in C and it

00:05:36,750 --> 00:05:40,830
developed by and maintained by the

00:05:37,800 --> 00:05:43,260
genome project now the difference is is

00:05:40,830 --> 00:05:46,010
that GDK has realistically no

00:05:43,260 --> 00:05:48,810
affiliation with eclipse foundation but

00:05:46,010 --> 00:05:52,260
swt bases most of its widget library

00:05:48,810 --> 00:05:54,120
with GDK so the primary target for GDK

00:05:52,260 --> 00:05:56,220
is at the windowing systems based on X

00:05:54,120 --> 00:05:58,110
11 and Wayland so this is we all be like

00:05:56,220 --> 00:05:59,460
your new Linux operating systems so you

00:05:58,110 --> 00:06:02,490
can see kind of the divide here because

00:05:59,460 --> 00:06:04,080
with with SWT we're trying to maintain a

00:06:02,490 --> 00:06:06,150
native widget with across multiple

00:06:04,080 --> 00:06:08,780
platforms like Windows Mac OS X Linux

00:06:06,150 --> 00:06:11,490
whereas TDK is more main focus is Linux

00:06:08,780 --> 00:06:14,520
it uses GDK as an underlying a library

00:06:11,490 --> 00:06:15,810
for graphics representation so on the

00:06:14,520 --> 00:06:18,570
right this is kind of just a very very

00:06:15,810 --> 00:06:21,420
general app I think it's the you know

00:06:18,570 --> 00:06:23,490
calculator so it may kind of give you

00:06:21,420 --> 00:06:28,440
that Linux II feel of how widget toolkit

00:06:23,490 --> 00:06:29,640
looks so how does the FCW T communicate

00:06:28,440 --> 00:06:31,350
with gtk and why does it do that in

00:06:29,640 --> 00:06:33,930
first place so let's talk about the very

00:06:31,350 --> 00:06:38,550
very top so platform UI is the very

00:06:33,930 --> 00:06:40,710
basis of the UI of an app so in this

00:06:38,550 --> 00:06:42,870
scenario we're gonna talk about Eclipse

00:06:40,710 --> 00:06:43,860
so Eclipse actually use this SWT as a

00:06:42,870 --> 00:06:45,719
library

00:06:43,860 --> 00:06:48,900
so let's listen to that platform you

00:06:45,719 --> 00:06:51,330
eyes eclipse now what Eclipse does its

00:06:48,900 --> 00:06:53,159
talks to the swt library in order to get

00:06:51,330 --> 00:06:55,919
its widgets and provide the application

00:06:53,159 --> 00:06:58,319
next what swt does is it talks to a file

00:06:55,919 --> 00:07:00,360
called OS java now what OS Java does is

00:06:58,319 --> 00:07:02,280
that because SWT is written in Java it

00:07:00,360 --> 00:07:03,689
needs to be able to communicate with GDK

00:07:02,280 --> 00:07:04,770
which is written in C so there needs to

00:07:03,689 --> 00:07:06,750
be kind of some kind of cross

00:07:04,770 --> 00:07:08,340
communication between the tool I'm too

00:07:06,750 --> 00:07:11,280
low to libraries and into programming

00:07:08,340 --> 00:07:13,080
languages so with there we have static

00:07:11,280 --> 00:07:15,030
calls that are called to GDK that are

00:07:13,080 --> 00:07:16,979
more important and also we also have a

00:07:15,030 --> 00:07:18,840
header file called OS h which is

00:07:16,979 --> 00:07:20,599
important because there are dynamic

00:07:18,840 --> 00:07:23,039
calls as well that we need to handle

00:07:20,599 --> 00:07:25,650
next there is an environmental variable

00:07:23,039 --> 00:07:28,319
called swt underscore t TK 3 and that

00:07:25,650 --> 00:07:29,729
will either set with the 1 or 0

00:07:28,319 --> 00:07:31,979
depending on if you want to use the GT

00:07:29,729 --> 00:07:35,099
k1 or GT like g2 k - or g 2 k 3

00:07:31,979 --> 00:07:38,279
libraries and either way using G 2 G 2 G

00:07:35,099 --> 00:07:41,490
2 k 2 or 3 it's gonna use the GDK back

00:07:38,279 --> 00:07:44,779
end library so on the right if you guys

00:07:41,490 --> 00:07:47,639
aren't too familiar with how widgets and

00:07:44,779 --> 00:07:49,229
widget toolkits work this is a general

00:07:47,639 --> 00:07:51,779
hierarchy of things and these two are

00:07:49,229 --> 00:07:54,150
these two kind of diagrams were made by

00:07:51,779 --> 00:07:55,800
my colleague and friend Leo he's very

00:07:54,150 --> 00:07:58,259
very malicious with this and he's very

00:07:55,800 --> 00:08:00,690
good in details about it so in the right

00:07:58,259 --> 00:08:03,479
we have the very very highest being the

00:08:00,690 --> 00:08:06,360
widget so everything below it inherits

00:08:03,479 --> 00:08:08,039
the widget and as you go down you starts

00:08:06,360 --> 00:08:09,810
to see more familiar things that are

00:08:08,039 --> 00:08:12,810
related to widgets for example toolbars

00:08:09,810 --> 00:08:18,779
trees table items etc but it always

00:08:12,810 --> 00:08:20,310
bases off itself as a widget so let's

00:08:18,779 --> 00:08:21,930
just go through a real-world example of

00:08:20,310 --> 00:08:23,339
kind of like snippets and I my

00:08:21,930 --> 00:08:24,629
preference I like to learn from snippets

00:08:23,339 --> 00:08:26,520
in order to kind of build my application

00:08:24,629 --> 00:08:28,500
from there and if you're gonna do any

00:08:26,520 --> 00:08:31,020
kind of Eclipse development it's really

00:08:28,500 --> 00:08:33,300
important to understand how s WT works

00:08:31,020 --> 00:08:36,060
so then you can start changing things

00:08:33,300 --> 00:08:37,589
within the UI as well right so here we

00:08:36,060 --> 00:08:39,149
have a quick snippet and I'm just kind

00:08:37,589 --> 00:08:42,269
of going to go through line by line how

00:08:39,149 --> 00:08:44,760
it works so in the very beginning we

00:08:42,269 --> 00:08:46,500
have a instance called display so this

00:08:44,760 --> 00:08:48,390
is important because what display does

00:08:46,500 --> 00:08:50,820
is is responsible for handling

00:08:48,390 --> 00:08:52,410
communication between the user interface

00:08:50,820 --> 00:08:54,240
threads and other threads within the

00:08:52,410 --> 00:08:56,649
opera system so this needs to be

00:08:54,240 --> 00:08:59,319
instantiated right away and only

00:08:56,649 --> 00:09:02,050
one per application after that we have a

00:08:59,319 --> 00:09:03,970
call called shell and the shells

00:09:02,050 --> 00:09:05,649
parameter is display so what a shell is

00:09:03,970 --> 00:09:08,079
easy enough to explain it's just a

00:09:05,649 --> 00:09:09,819
window so if you're any app pretty much

00:09:08,079 --> 00:09:12,399
has a window if you wanted a graphical

00:09:09,819 --> 00:09:14,709
user interface kind of like a window

00:09:12,399 --> 00:09:17,199
you're gonna need to call a shell so the

00:09:14,709 --> 00:09:20,439
show is created and then it uses the

00:09:17,199 --> 00:09:23,470
parent as display next we're gonna need

00:09:20,439 --> 00:09:25,119
to call a shell open which is required

00:09:23,470 --> 00:09:26,889
in order for the window to even show up

00:09:25,119 --> 00:09:28,959
onto the monitor or on to the display

00:09:26,889 --> 00:09:30,459
and something a little bit more

00:09:28,959 --> 00:09:33,129
interesting is this wall to appear so

00:09:30,459 --> 00:09:35,499
what this wall loop does is that it

00:09:33,129 --> 00:09:37,660
checks to see if the shell or window is

00:09:35,499 --> 00:09:39,519
disposed meaning if the shell even

00:09:37,660 --> 00:09:41,170
exists at the moment or is displayed or

00:09:39,519 --> 00:09:42,850
closed or anything like that if it it's

00:09:41,170 --> 00:09:45,490
not closed it goes into this while loop

00:09:42,850 --> 00:09:49,600
and within here we have displayed up

00:09:45,490 --> 00:09:52,869
read and dispatch so with display within

00:09:49,600 --> 00:09:55,119
display it handles user interface

00:09:52,869 --> 00:09:57,220
threads like I said earlier so with what

00:09:55,119 --> 00:09:58,929
reading dispatch has a method it will

00:09:57,220 --> 00:10:00,550
check and see if there's any new events

00:09:58,929 --> 00:10:02,230
that are occurring within the operating

00:10:00,550 --> 00:10:05,439
system and that throw it down into these

00:10:02,230 --> 00:10:07,569
SWT libraries for it to event handle so

00:10:05,439 --> 00:10:09,249
once it does that and checks to see if

00:10:07,569 --> 00:10:11,079
there's any new events and once it

00:10:09,249 --> 00:10:13,240
finishes all the events it will leave

00:10:11,079 --> 00:10:15,249
the if loop and go into display sleep

00:10:13,240 --> 00:10:17,050
which basically tells it to kind of lay

00:10:15,249 --> 00:10:18,459
off for a second and then it'll go back

00:10:17,050 --> 00:10:20,079
to the while loop and do this over and

00:10:18,459 --> 00:10:22,059
over again until all events are done and

00:10:20,079 --> 00:10:23,620
even when they're done they'll continue

00:10:22,059 --> 00:10:25,240
running it until the shell is closed

00:10:23,620 --> 00:10:27,579
so once the shell is closed so if you

00:10:25,240 --> 00:10:29,379
close the application just a bit of

00:10:27,579 --> 00:10:31,149
cleanup that this display will call a

00:10:29,379 --> 00:10:32,709
method called dispose and make sure

00:10:31,149 --> 00:10:36,220
anything tagged on to the display will

00:10:32,709 --> 00:10:38,529
be disposed properly so I can just show

00:10:36,220 --> 00:10:43,410
you a quick example of that I think that

00:10:38,529 --> 00:10:43,410
snippet what okay

00:10:46,970 --> 00:10:52,520
so this is just a very very simple app

00:10:49,280 --> 00:10:54,620
or application that just shows the shell

00:10:52,520 --> 00:10:57,620
so what I described earlier are you guys

00:10:54,620 --> 00:10:59,240
seeing it yeah okay so all it is is just

00:10:57,620 --> 00:11:10,990
a shell window it has nothing on it not

00:10:59,240 --> 00:11:10,990
very exciting at all so you see oh no

00:11:17,180 --> 00:11:20,089
I'll just show it from here like this

00:11:18,710 --> 00:11:22,970
for now because then I do have to switch

00:11:20,089 --> 00:11:24,529
back to by eclipse here so next we'll

00:11:22,970 --> 00:11:27,440
talk a little bit about a little more

00:11:24,529 --> 00:11:29,000
advanced usage of SWT and in this way

00:11:27,440 --> 00:11:30,710
we're gonna run through the similar

00:11:29,000 --> 00:11:33,500
methods as before but it's gonna get a

00:11:30,710 --> 00:11:35,420
little bit more interesting so in the

00:11:33,500 --> 00:11:37,220
beginning we do have a display setup

00:11:35,420 --> 00:11:38,960
just like I said earlier and next we

00:11:37,220 --> 00:11:41,120
have a class called image and where a

00:11:38,960 --> 00:11:43,160
will go is into it just into the display

00:11:41,120 --> 00:11:45,860
and into a method called get system

00:11:43,160 --> 00:11:47,600
image within this method we host a large

00:11:45,860 --> 00:11:50,330
amount of system images that you can

00:11:47,600 --> 00:11:52,100
call and use with an SWT library and in

00:11:50,330 --> 00:11:54,800
this very scenario we're just going to

00:11:52,100 --> 00:11:57,500
be using an icon question next we're

00:11:54,800 --> 00:12:00,920
gonna call the shell windows and this is

00:11:57,500 --> 00:12:03,080
something new so set layout so with most

00:12:00,920 --> 00:12:03,740
widget toolkits they offer some kind of

00:12:03,080 --> 00:12:07,250
layout system

00:12:03,740 --> 00:12:10,670
so obviously swe is gonna do the same as

00:12:07,250 --> 00:12:12,980
well we have a few available so we have

00:12:10,670 --> 00:12:15,830
grid layout fill layout world layout and

00:12:12,980 --> 00:12:17,510
others as well and in this very scenario

00:12:15,830 --> 00:12:19,490
we're going to use grid layout on what

00:12:17,510 --> 00:12:22,540
grid layout allows you to do is set the

00:12:19,490 --> 00:12:24,740
amount of columns and rows available and

00:12:22,540 --> 00:12:26,720
basically from there you're able to tell

00:12:24,740 --> 00:12:28,310
exactly which row and column you want to

00:12:26,720 --> 00:12:31,070
put your widget in so it gives you a lot

00:12:28,310 --> 00:12:34,040
of ability to place your widgets where

00:12:31,070 --> 00:12:35,660
you want to put them without doing that

00:12:34,040 --> 00:12:37,010
you also have the default grid layout

00:12:35,660 --> 00:12:38,600
which is what's happening here so

00:12:37,010 --> 00:12:41,510
there's no additional settings it's just

00:12:38,600 --> 00:12:43,520
calling grid layout so next we have

00:12:41,510 --> 00:12:46,850
something we have something called a

00:12:43,520 --> 00:12:48,470
button so from within the swt library we

00:12:46,850 --> 00:12:50,000
have a widget called button and we're

00:12:48,470 --> 00:12:54,320
gonna create a new instance of it here

00:12:50,000 --> 00:12:55,490
with a parent being shell so that's the

00:12:54,320 --> 00:12:58,839
second parameter we have a thing called

00:12:55,490 --> 00:13:01,100
SWT push so what does that mean

00:12:58,839 --> 00:13:03,020
obviously there's more than one type of

00:13:01,100 --> 00:13:04,580
button available in this kind of world I

00:13:03,020 --> 00:13:07,610
mean there's like radial buttons push

00:13:04,580 --> 00:13:09,140
buttons you name it right so with that

00:13:07,610 --> 00:13:11,330
second parameter you're able to kind of

00:13:09,140 --> 00:13:13,670
choose which type of button you want to

00:13:11,330 --> 00:13:16,400
display and in this very scenario we're

00:13:13,670 --> 00:13:17,959
going to use a push button so the next

00:13:16,400 --> 00:13:20,150
couple of lines are pretty intuitive so

00:13:17,959 --> 00:13:22,520
you can use a button to set the image of

00:13:20,150 --> 00:13:24,470
the button set the text and also set the

00:13:22,520 --> 00:13:26,860
size of the window itself in this very

00:13:24,470 --> 00:13:29,420
case we're doing a 300 by 300 pixel size

00:13:26,860 --> 00:13:30,949
and obviously at the very end which you

00:13:29,420 --> 00:13:32,689
do which is much preferred as

00:13:30,949 --> 00:13:34,549
after you set all these settings onto

00:13:32,689 --> 00:13:36,649
the window then you open it as a final

00:13:34,549 --> 00:13:37,999
step once you open it then we'll go into

00:13:36,649 --> 00:13:41,389
the wild loop I subscribed earlier and

00:13:37,999 --> 00:13:43,959
some clean up at the end so I can just

00:13:41,389 --> 00:13:43,959
show you here

00:13:49,500 --> 00:13:53,640
right so a little bit more interesting

00:13:51,780 --> 00:13:55,880
so now we actually have a widget button

00:13:53,640 --> 00:13:55,880
here

00:14:01,970 --> 00:14:05,479
so moving along from the same kind of

00:14:03,949 --> 00:14:07,279
snippet I do want to introduce something

00:14:05,479 --> 00:14:09,139
a little more dynamic so you're not

00:14:07,279 --> 00:14:10,849
gonna want to make an app simply with

00:14:09,139 --> 00:14:12,739
just the button and that does nothing

00:14:10,849 --> 00:14:14,659
you want to make it do something right

00:14:12,739 --> 00:14:15,349
and in this case we're gonna add a

00:14:14,659 --> 00:14:17,419
listener

00:14:15,349 --> 00:14:18,919
so what listeners do is that it's going

00:14:17,419 --> 00:14:20,839
to continue listening for any kind of

00:14:18,919 --> 00:14:22,579
new events and in this case we have a

00:14:20,839 --> 00:14:25,339
button we're using the button to add a

00:14:22,579 --> 00:14:27,739
listener and one of the parameters is SW

00:14:25,339 --> 00:14:29,269
selection what this means is that it's

00:14:27,739 --> 00:14:31,789
going to check to see if this button was

00:14:29,269 --> 00:14:33,399
selected at any time and once it is the

00:14:31,789 --> 00:14:35,809
event will be sent to this function

00:14:33,399 --> 00:14:37,339
right over here and from that function

00:14:35,809 --> 00:14:40,220
we're going to run it a little quick

00:14:37,339 --> 00:14:41,720
snippet of code it can be a method and

00:14:40,220 --> 00:14:44,179
give the open display it can be anything

00:14:41,720 --> 00:14:47,299
really so in this particular case I'm

00:14:44,179 --> 00:14:48,889
just telling it to print hello I'm going

00:14:47,299 --> 00:14:54,829
to demonstrate that but it pretty well

00:14:48,889 --> 00:14:56,119
just basically print this out so next

00:14:54,829 --> 00:15:00,349
I'm going to show you you guys control

00:14:56,119 --> 00:15:02,449
example what I showed earlier we're just

00:15:00,349 --> 00:15:04,399
very small snippets of code and I do

00:15:02,449 --> 00:15:07,819
want to let you guys know within the swt

00:15:04,399 --> 00:15:10,069
library we have a very very useful tool

00:15:07,819 --> 00:15:12,439
for any developer that wants to work

00:15:10,069 --> 00:15:16,089
with can swt that kind of gives you a

00:15:12,439 --> 00:15:16,089
visual guide of how everything looks

00:15:23,600 --> 00:15:28,280
great so within here

00:15:26,690 --> 00:15:30,170
it's basically collaborative effort to

00:15:28,280 --> 00:15:32,990
show all the available options all

00:15:30,170 --> 00:15:34,760
available settings for every widget

00:15:32,990 --> 00:15:37,070
that's available at SWT so we have a

00:15:34,760 --> 00:15:39,350
whole toolbar that displays everything

00:15:37,070 --> 00:15:41,540
it's just a quick Tibbett i built this

00:15:39,350 --> 00:15:44,180
over here during a couple weeks into my

00:15:41,540 --> 00:15:46,550
internship and it just displays all the

00:15:44,180 --> 00:15:48,470
system colors that are available for swt

00:15:46,550 --> 00:15:50,690
obviously you won't want to just call a

00:15:48,470 --> 00:15:52,220
random RGB value for some certain

00:15:50,690 --> 00:15:53,690
widgets' and you want to use something

00:15:52,220 --> 00:15:56,300
more static so these are all the ones

00:15:53,690 --> 00:15:59,780
available in the GDK library as well as

00:15:56,300 --> 00:16:01,490
the swt library here so for example you

00:15:59,780 --> 00:16:03,320
wanted a widget in this type of color

00:16:01,490 --> 00:16:04,790
you'll know that this is the call you

00:16:03,320 --> 00:16:08,540
want to make instead of just doing the

00:16:04,790 --> 00:16:10,010
RGB values we also yeah every tab cut

00:16:08,540 --> 00:16:11,960
out shows off a little different of a

00:16:10,010 --> 00:16:14,180
widget that is available and these are

00:16:11,960 --> 00:16:22,220
all findable within the source code

00:16:14,180 --> 00:16:23,600
itself great so if this piqued any of

00:16:22,220 --> 00:16:24,950
you guys is interest and you want to

00:16:23,600 --> 00:16:26,720
start doing eclipse development it's

00:16:24,950 --> 00:16:28,220
very easy so one of the main things

00:16:26,720 --> 00:16:30,860
obviously is to download the Eclipse

00:16:28,220 --> 00:16:32,180
binary right if you're going to do any

00:16:30,860 --> 00:16:33,950
kind of development I highly recommend

00:16:32,180 --> 00:16:36,710
doing the development within Eclipse so

00:16:33,950 --> 00:16:39,080
then you can find new bugs etc so this

00:16:36,710 --> 00:16:41,360
website over here or you can do a quick

00:16:39,080 --> 00:16:44,720
google search of eclipse will let you

00:16:41,360 --> 00:16:46,610
download the new close binaries so what

00:16:44,720 --> 00:16:48,410
I recommend as a developer is to not

00:16:46,610 --> 00:16:50,120
only download this most stable build but

00:16:48,410 --> 00:16:52,010
also try to push and download the

00:16:50,120 --> 00:16:56,930
nightly builds the reason being is that

00:16:52,010 --> 00:16:58,970
currently Eclipse is at new neon and we

00:16:56,930 --> 00:17:02,930
are going forward with pushing into

00:16:58,970 --> 00:17:04,430
Eclipse oxygen so being oxygen we have

00:17:02,930 --> 00:17:06,939
all the newest patch updates all the

00:17:04,430 --> 00:17:09,740
newest features and within that it's

00:17:06,939 --> 00:17:12,350
probable it's better to use that and

00:17:09,740 --> 00:17:15,530
play with that to develop Eclipse then

00:17:12,350 --> 00:17:18,020
to use a more stable version so once

00:17:15,530 --> 00:17:20,150
you've got yourself an eclipse copy you

00:17:18,020 --> 00:17:24,890
got to register yourself as a Eclipse

00:17:20,150 --> 00:17:26,089
mender Eclipse member so you just go on

00:17:24,890 --> 00:17:28,070
to the cliff's website and there is a

00:17:26,089 --> 00:17:29,510
creative calendar right and from here

00:17:28,070 --> 00:17:32,720
you can create yourself a new account so

00:17:29,510 --> 00:17:34,760
once that is created you're able to log

00:17:32,720 --> 00:17:36,020
in and take a look into all the bugs

00:17:34,760 --> 00:17:38,570
available

00:17:36,020 --> 00:17:40,070
and consider once your also once you've

00:17:38,570 --> 00:17:40,520
created the account you have to sign at

00:17:40,070 --> 00:17:43,850
ECA

00:17:40,520 --> 00:17:46,490
which is the Eclipse commit or at least

00:17:43,850 --> 00:17:48,020
the Eclipse contribution agreement which

00:17:46,490 --> 00:17:50,390
basically says every one of your commits

00:17:48,020 --> 00:17:58,670
are going to be open and available and

00:17:50,390 --> 00:18:01,700
transparent so next I'm going to talk a

00:17:58,670 --> 00:18:03,410
little bit about Costa bugzilla so this

00:18:01,700 --> 00:18:05,450
is where you kind of get most of the

00:18:03,410 --> 00:18:09,350
jobs done and seeing what is available

00:18:05,450 --> 00:18:10,910
for you to work on SWT and platform UI

00:18:09,350 --> 00:18:13,310
are just kind of small things that you

00:18:10,910 --> 00:18:14,630
can work on I subscribed earlier its

00:18:13,310 --> 00:18:16,520
kind of split to five different sections

00:18:14,630 --> 00:18:18,830
so there's a lot of stuff available to

00:18:16,520 --> 00:18:20,270
you as a developer to work on if you

00:18:18,830 --> 00:18:22,880
want if you are interested we're working

00:18:20,270 --> 00:18:24,530
on such a large project here you can

00:18:22,880 --> 00:18:28,130
find new bugs for example you can do

00:18:24,530 --> 00:18:29,720
searches there's a whole I think yeah

00:18:28,130 --> 00:18:31,460
you can do simple searches advanced

00:18:29,720 --> 00:18:33,320
searches it's the simple use of filters

00:18:31,460 --> 00:18:34,790
illa and you can also file new bugs if

00:18:33,320 --> 00:18:36,970
you find anything related to eclipses as

00:18:34,790 --> 00:18:36,970
well

00:18:41,800 --> 00:18:47,380
so if you guys are interested in SWT

00:18:45,460 --> 00:18:50,200
development so development of the widget

00:18:47,380 --> 00:18:52,480
library itself my colleague Leo has

00:18:50,200 --> 00:18:55,390
written a beautiful guide that expands a

00:18:52,480 --> 00:18:57,880
very large amount and here is some of

00:18:55,390 --> 00:19:00,520
the pictures I've used earlier it really

00:18:57,880 --> 00:19:03,730
really goes into depth of how SWT works

00:19:00,520 --> 00:19:05,950
and what you can do about it and how to

00:19:03,730 --> 00:19:08,440
realistic debug it and do everything

00:19:05,950 --> 00:19:12,490
with it and how it kind of ties in with

00:19:08,440 --> 00:19:15,790
Eclipse platform and also helps you out

00:19:12,490 --> 00:19:17,890
giving you ideas and tips of how to do

00:19:15,790 --> 00:19:23,740
this more progressively and also

00:19:17,890 --> 00:19:27,370
optimally so within that we also have a

00:19:23,740 --> 00:19:29,710
thing called platform UI so platform UI

00:19:27,370 --> 00:19:32,620
is kind of separate with SWT being that

00:19:29,710 --> 00:19:34,930
platform UI is how Eclipse communicates

00:19:32,620 --> 00:19:38,080
with SWT in order for the witches to

00:19:34,930 --> 00:19:40,270
appear as an app so this wouldn't be

00:19:38,080 --> 00:19:42,580
working on the SWT library per se it's

00:19:40,270 --> 00:19:44,440
more about developing where certain

00:19:42,580 --> 00:19:45,940
things go in Eclipse and if any kind of

00:19:44,440 --> 00:19:48,010
graphical issues are happening with them

00:19:45,940 --> 00:19:50,440
there so this is also a really well

00:19:48,010 --> 00:19:52,030
written guide from eclipse to help you

00:19:50,440 --> 00:19:55,720
as a developer if you are interested in

00:19:52,030 --> 00:19:57,220
doing that as well all these links are

00:19:55,720 --> 00:20:00,210
available to you if you guys are

00:19:57,220 --> 00:20:00,210
interested can send you the PowerPoint

00:20:00,540 --> 00:20:05,740
ok so one thing about Eclipse

00:20:03,250 --> 00:20:06,940
development is that I in the eclipse

00:20:05,740 --> 00:20:08,500
foundation we do use a thing called

00:20:06,940 --> 00:20:09,640
Garrett review I don't know if you guys

00:20:08,500 --> 00:20:11,110
have used it before but I'll show you

00:20:09,640 --> 00:20:13,270
kind of small demonstration but it's

00:20:11,110 --> 00:20:16,000
very powerful and the way that if

00:20:13,270 --> 00:20:20,620
there's any new commits to it its easy

00:20:16,000 --> 00:20:23,070
to view your code and review it so let's

00:20:20,620 --> 00:20:23,070
take an example

00:20:26,250 --> 00:20:30,260
okay so within the here we have a small

00:20:28,740 --> 00:20:32,659
bug called regression

00:20:30,260 --> 00:20:34,919
progress view looks ugly right and

00:20:32,659 --> 00:20:37,230
perhaps you wanted you to change this

00:20:34,919 --> 00:20:39,299
and kind of amend to it and fix the bug

00:20:37,230 --> 00:20:42,150
yourself so once you've got your ECA and

00:20:39,299 --> 00:20:44,070
got yourself clips membership I signed

00:20:42,150 --> 00:20:46,350
that and got yourself an account you can

00:20:44,070 --> 00:20:51,679
actually work on it so consider that you

00:20:46,350 --> 00:20:51,679
were working on it now and see

00:20:57,750 --> 00:21:04,320
it doesn't matter or say that this will

00:20:59,550 --> 00:21:06,710
break but we save this and go to get

00:21:04,320 --> 00:21:06,710
staging

00:21:09,860 --> 00:21:18,220
and within here you copy and paste your

00:21:12,409 --> 00:21:18,220
bug so given some kind of commit message

00:21:19,360 --> 00:21:25,340
and add your sign-off and change ID so

00:21:23,690 --> 00:21:28,399
as you can see here the change ID is

00:21:25,340 --> 00:21:33,529
zero and it's a default change ID but

00:21:28,399 --> 00:21:36,260
once you commit it it creates a jet

00:21:33,529 --> 00:21:38,779
basically generates a unique one so I

00:21:36,260 --> 00:21:40,340
haven't pushed this because this is an

00:21:38,779 --> 00:21:43,450
actual fix but once it's pushed

00:21:40,340 --> 00:21:43,450
is there something pretty cool

00:21:53,760 --> 00:21:58,380
so I'm going to find you a bug report

00:21:56,130 --> 00:22:01,290
that basically has a push with a

00:21:58,380 --> 00:22:09,150
committed message already that shows how

00:22:01,290 --> 00:22:10,920
this works yeah so after you've pushed

00:22:09,150 --> 00:22:14,610
it it will show up over here as a

00:22:10,920 --> 00:22:16,260
Garrett change so within here you see

00:22:14,610 --> 00:22:20,130
all the files that have been changed and

00:22:16,260 --> 00:22:21,420
also a lock so we use Hudson CI so every

00:22:20,130 --> 00:22:23,040
kind of push you've done will go through

00:22:21,420 --> 00:22:25,200
the Hudson CI and rebuild it to make

00:22:23,040 --> 00:22:28,250
sure if it's success or fail weather

00:22:25,200 --> 00:22:31,740
that you any kind of committers can make

00:22:28,250 --> 00:22:34,260
comments your change and from there you

00:22:31,740 --> 00:22:38,060
can make new patch changes and all be

00:22:34,260 --> 00:22:38,060
logged in this really nice display

00:22:45,580 --> 00:22:49,269
so here are some of the mailing lists I

00:22:47,950 --> 00:22:51,700
should be aware of here if you're

00:22:49,269 --> 00:22:54,489
interested WT has one o'clock for you is

00:22:51,700 --> 00:22:57,039
one GDK as one and also anything kind of

00:22:54,489 --> 00:22:59,110
Eclipse related we have just the main

00:22:57,039 --> 00:23:00,429
mailing list page so if you're

00:22:59,110 --> 00:23:02,769
interested in working at anything else

00:23:00,429 --> 00:23:04,210
besides UI it's available to you as well

00:23:02,769 --> 00:23:08,320
just kind of see what's going on within

00:23:04,210 --> 00:23:09,159
the new developments of Eclipse so I'm

00:23:08,320 --> 00:23:12,249
just going to talk a little bit about

00:23:09,159 --> 00:23:14,320
debugging tips for the UI one main thing

00:23:12,249 --> 00:23:14,919
that I've come across is that it's hard

00:23:14,320 --> 00:23:16,179
to differ

00:23:14,919 --> 00:23:17,799
it's hard to have kind of debug it if

00:23:16,179 --> 00:23:20,230
you don't know if it's an SWT or key

00:23:17,799 --> 00:23:22,899
decay related issue so simply because

00:23:20,230 --> 00:23:26,230
SWT talks to GDK a lot and if there is a

00:23:22,899 --> 00:23:28,450
bug within UI that happens with an SWT

00:23:26,230 --> 00:23:30,929
it might not be an SWT bug it might be

00:23:28,450 --> 00:23:33,639
all the way back into the GDK realm and

00:23:30,929 --> 00:23:36,549
if that's the case we have to talk to

00:23:33,639 --> 00:23:39,609
GDK about it so what i use is the thing

00:23:36,549 --> 00:23:42,970
called JH build and J's build is tool

00:23:39,609 --> 00:23:44,889
written by the genome Foundation which

00:23:42,970 --> 00:23:48,700
is really nice because you're able to

00:23:44,889 --> 00:23:49,570
download and I'll show you the

00:23:48,700 --> 00:23:50,859
introduction you're basically you're

00:23:49,570 --> 00:23:53,139
allowed to download the newest version

00:23:50,859 --> 00:23:55,419
of GDK that's available a master or any

00:23:53,139 --> 00:23:57,399
type of version of GDK and from there

00:23:55,419 --> 00:23:59,470
you're able to make a shell interactive

00:23:57,399 --> 00:24:01,899
mode and from there you can basically

00:23:59,470 --> 00:24:04,470
open any genome related app or GTA

00:24:01,899 --> 00:24:07,509
related app which is SWT as well and

00:24:04,470 --> 00:24:09,009
from that version so you can really

00:24:07,509 --> 00:24:12,820
really diagnose that and see which

00:24:09,009 --> 00:24:19,059
version of GDK is breaking or if it's GE

00:24:12,820 --> 00:24:22,029
decay related at all so also with

00:24:19,059 --> 00:24:24,789
environmental variables are useful like

00:24:22,029 --> 00:24:26,980
I said earlier SWT under GD k underscore

00:24:24,789 --> 00:24:30,609
GD k will help you to decipher if it's a

00:24:26,980 --> 00:24:32,200
G to get two or three issue and LD

00:24:30,609 --> 00:24:34,749
library path is also something so much

00:24:32,200 --> 00:24:36,399
of what JH built does so you can tell it

00:24:34,749 --> 00:24:37,509
which library path for GD k it's

00:24:36,399 --> 00:24:40,509
available so if you already have

00:24:37,509 --> 00:24:42,820
pre-compiled GD k versions you can set

00:24:40,509 --> 00:24:44,769
the library path to which wherever the

00:24:42,820 --> 00:24:47,739
binaries are and your application will

00:24:44,769 --> 00:24:49,840
run using that binary and lastly we have

00:24:47,739 --> 00:24:51,580
GD k backend so this is useful from

00:24:49,840 --> 00:24:55,330
debugging any issues if it's whether

00:24:51,580 --> 00:24:58,090
it's an X 11 issue or a Wayland issue so

00:24:55,330 --> 00:24:58,570
next you can also use the swt automated

00:24:58,090 --> 00:25:00,310
tests

00:24:58,570 --> 00:25:03,280
this is available within the swt

00:25:00,310 --> 00:25:05,290
repository so those are useful to see if

00:25:03,280 --> 00:25:08,320
there's any regression problems within

00:25:05,290 --> 00:25:11,200
your commit and lastly don't be scared

00:25:08,320 --> 00:25:12,670
to ask questions on Bugzilla or IRC the

00:25:11,200 --> 00:25:14,890
community is very very friendly and

00:25:12,670 --> 00:25:16,360
everyone seems to help a lot and even if

00:25:14,890 --> 00:25:17,980
you don't know or if they don't know the

00:25:16,360 --> 00:25:19,180
answer they tend to help you kind of

00:25:17,980 --> 00:25:23,710
give you a good direction to where it's

00:25:19,180 --> 00:25:28,450
going where you can find the answer so

00:25:23,710 --> 00:25:31,240
the feature as the EFT swt because we

00:25:28,450 --> 00:25:32,800
mainly use a lot of GDK stuff we have to

00:25:31,240 --> 00:25:36,250
follow along with their release cycles

00:25:32,800 --> 00:25:38,530
and our swt developers don't really have

00:25:36,250 --> 00:25:40,840
any kind of influence within GD k mainly

00:25:38,530 --> 00:25:42,910
so they have their own set of genome

00:25:40,840 --> 00:25:45,220
foundation people and we haven't eclipse

00:25:42,910 --> 00:25:47,410
foundation people so whenever they

00:25:45,220 --> 00:25:48,970
release a new version of GD k would have

00:25:47,410 --> 00:25:50,530
to make sure it's backwards compatible

00:25:48,970 --> 00:25:52,900
as well and also it works with their new

00:25:50,530 --> 00:25:54,640
features that means any kind of

00:25:52,900 --> 00:25:56,410
deprecated methods deprecated by the

00:25:54,640 --> 00:25:58,960
calls of within widgets have to be

00:25:56,410 --> 00:26:00,550
changed lastly there's no not lastly uh

00:25:58,960 --> 00:26:03,100
there's also discontinuing custom

00:26:00,550 --> 00:26:09,910
widgets so when GD k was created back in

00:26:03,100 --> 00:26:12,070
nineteen I think it was 1995 there was a

00:26:09,910 --> 00:26:15,790
lot of widgets that are not available

00:26:12,070 --> 00:26:19,060
within the GD k library so one example

00:26:15,790 --> 00:26:21,010
would be tabs and within that so what

00:26:19,060 --> 00:26:24,510
happened with that is that has to be TV

00:26:21,010 --> 00:26:28,660
decided to create its own widget and

00:26:24,510 --> 00:26:30,550
there are a lot of them so those kind of

00:26:28,660 --> 00:26:32,080
are deprecated now because GD k has

00:26:30,550 --> 00:26:34,690
their own library which has those

00:26:32,080 --> 00:26:36,280
functionalities now so one main thing is

00:26:34,690 --> 00:26:39,000
that we got to start merging custom

00:26:36,280 --> 00:26:41,770
widgets with GD k ported widgets instead

00:26:39,000 --> 00:26:44,470
and one Mangan issue is the C tab folder

00:26:41,770 --> 00:26:46,240
which is the custom tab folder they have

00:26:44,470 --> 00:26:48,640
a rendering engine that is separate from

00:26:46,240 --> 00:26:51,390
the Eclipse platform rendering engine so

00:26:48,640 --> 00:26:53,800
we're trying to merge that together next

00:26:51,390 --> 00:26:55,690
we're going to try to pour eclipse over

00:26:53,800 --> 00:26:57,190
to Wayland from x11 so if you guys are

00:26:55,690 --> 00:27:00,130
uncertain what the difference is is that

00:26:57,190 --> 00:27:01,930
a lot of Linux distributions now are

00:27:00,130 --> 00:27:04,180
using it or most of them are now are

00:27:01,930 --> 00:27:06,940
using x11 and they've decided to maybe

00:27:04,180 --> 00:27:08,950
move on from x11 to Waylon Fedora 25 the

00:27:06,940 --> 00:27:12,740
newest version of adore will be adapting

00:27:08,950 --> 00:27:15,020
Whalen as its default and what x11 is

00:27:12,740 --> 00:27:17,960
basically it's a display server

00:27:15,020 --> 00:27:20,030
architecture that was used way way out

00:27:17,960 --> 00:27:21,830
way way long ago and it has a lot of

00:27:20,030 --> 00:27:24,080
outdated calls meaning that like for

00:27:21,830 --> 00:27:25,940
example font rendering is done in the

00:27:24,080 --> 00:27:28,280
objects operating system for x11

00:27:25,940 --> 00:27:30,169
whereas Whalen has decided no these are

00:27:28,280 --> 00:27:31,580
not really necessary anymore because

00:27:30,169 --> 00:27:33,169
most of this stuff should be done in the

00:27:31,580 --> 00:27:35,030
client side as in the application side

00:27:33,169 --> 00:27:37,460
so when link has simplifies it for our

00:27:35,030 --> 00:27:38,870
new app developers so this is something

00:27:37,460 --> 00:27:41,809
that's going to be looking for into the

00:27:38,870 --> 00:27:43,159
cutting edge technology like I said

00:27:41,809 --> 00:27:45,890
earlier kind of removing deprecated

00:27:43,159 --> 00:27:48,409
methods out calls and lastly one thing

00:27:45,890 --> 00:27:51,260
that is pretty awesome is the multi tap

00:27:48,409 --> 00:27:54,049
support this one's kind of funny because

00:27:51,260 --> 00:27:55,760
it's it's one of these books that have

00:27:54,049 --> 00:27:58,780
been out there for a very long time

00:27:55,760 --> 00:28:02,630
it has 88 votes as those top rated bug

00:27:58,780 --> 00:28:05,990
related to SWT in Eclipse it spans from

00:28:02,630 --> 00:28:07,909
2004 so it's been about almost 13 years

00:28:05,990 --> 00:28:10,669
now and there hasn't been much progress

00:28:07,909 --> 00:28:13,010
so one tip it is that I have them

00:28:10,669 --> 00:28:14,809
actually working on this so I just

00:28:13,010 --> 00:28:16,429
haven't touched it yet because I feel

00:28:14,809 --> 00:28:18,110
like there's a lot of people see seed on

00:28:16,429 --> 00:28:20,179
this list so have I do any changes to

00:28:18,110 --> 00:28:21,710
say I'm working on it I don't want to

00:28:20,179 --> 00:28:27,200
alarm too many people yet before I kind

00:28:21,710 --> 00:28:28,490
of get a good working product so what do

00:28:27,200 --> 00:28:30,890
I enjoy most about working on the

00:28:28,490 --> 00:28:32,570
Eclipse platform mainly the changes

00:28:30,890 --> 00:28:33,710
affect a large population of users so

00:28:32,570 --> 00:28:35,419
like I said earlier there's a lot of

00:28:33,710 --> 00:28:37,429
people using Eclipse and being able to

00:28:35,419 --> 00:28:39,230
kind of make changes to that and seeing

00:28:37,429 --> 00:28:40,760
people use it maybe even walking by and

00:28:39,230 --> 00:28:42,530
seeing someone use Eclipse and seeing my

00:28:40,760 --> 00:28:43,970
change there is really rewarding and

00:28:42,530 --> 00:28:46,429
it's pretty awesome to be part of this

00:28:43,970 --> 00:28:48,679
kind of community the community is super

00:28:46,429 --> 00:28:49,280
friendly everyone seems to be helping

00:28:48,679 --> 00:28:51,230
each other out

00:28:49,280 --> 00:28:54,530
they're super supportive the open source

00:28:51,230 --> 00:28:56,750
and large projects are challenging

00:28:54,530 --> 00:28:59,090
because Eclipse is a very very large

00:28:56,750 --> 00:29:01,390
code base and there's so many parts to

00:28:59,090 --> 00:29:03,620
it that sometimes fixing new

00:29:01,390 --> 00:29:05,510
enhancements or fixing new bugs takes a

00:29:03,620 --> 00:29:07,549
lot of time and effort because you have

00:29:05,510 --> 00:29:09,380
to relearn everything and start kind of

00:29:07,549 --> 00:29:11,480
like in the very beginnings of how this

00:29:09,380 --> 00:29:13,070
bug even came out and there's a lot of

00:29:11,480 --> 00:29:16,220
stuff behind it and a lot of back-end

00:29:13,070 --> 00:29:17,630
stuff so it could take a lot of time but

00:29:16,220 --> 00:29:20,179
I think it's very rewarding in the end

00:29:17,630 --> 00:29:22,010
because I've had times where I fixed

00:29:20,179 --> 00:29:24,080
really old bugs that span from five six

00:29:22,010 --> 00:29:26,299
years and no one would seems to want to

00:29:24,080 --> 00:29:27,919
fix it or want to do it because

00:29:26,299 --> 00:29:30,409
it's a lot of research to do and once

00:29:27,919 --> 00:29:31,969
it's done I get I get comments from all

00:29:30,409 --> 00:29:34,339
around the world sometimes from on

00:29:31,969 --> 00:29:35,809
bugzilla just thanking me and it's an

00:29:34,339 --> 00:29:37,849
awesome kind of feeling to know that

00:29:35,809 --> 00:29:41,799
someone out there has appreciated what

00:29:37,849 --> 00:29:44,119
I've done so cutting edge development UI

00:29:41,799 --> 00:29:49,279
this is kind of relates to what Wayland

00:29:44,119 --> 00:29:51,289
is you know like there we also have to

00:29:49,279 --> 00:29:52,399
be majorly especially working in Linux

00:29:51,289 --> 00:29:54,830
there's a lot of new stuff that's

00:29:52,399 --> 00:29:57,200
happening with the UI so we have to make

00:29:54,830 --> 00:29:58,669
sure that we support that and lastly

00:29:57,200 --> 00:30:01,339
kind of get an experience with advanced

00:29:58,669 --> 00:30:02,419
Java concepts so as a student a lot of

00:30:01,339 --> 00:30:03,919
projects that I've been working on

00:30:02,419 --> 00:30:05,450
previously to this having been very

00:30:03,919 --> 00:30:07,779
advanced we do account our own calls and

00:30:05,450 --> 00:30:09,799
they're very small snippets of code so

00:30:07,779 --> 00:30:11,450
once you kind of get into the industry

00:30:09,799 --> 00:30:13,999
and see a lot of people working on large

00:30:11,450 --> 00:30:15,589
larger scale offerings larger scale

00:30:13,999 --> 00:30:18,679
open-source projects you see a lot of

00:30:15,589 --> 00:30:20,179
uses of concepts that are kind of you

00:30:18,679 --> 00:30:22,999
kind of hear about it in school but you

00:30:20,179 --> 00:30:24,499
never actually get to use it and being

00:30:22,999 --> 00:30:26,419
able to kind of work in this large

00:30:24,499 --> 00:30:30,339
project and seeing it used and getting

00:30:26,419 --> 00:30:33,079
experience with it is really valuable so

00:30:30,339 --> 00:30:41,619
that ends my talk and are there any

00:30:33,079 --> 00:30:41,619
questions cool no that's it thank you

00:30:49,340 --> 00:30:51,400

YouTube URL: https://www.youtube.com/watch?v=s7JWOy3vxkk


