Title: FSOSS 2014 Day 1 Neil Watson Make CFEngine Simple with EFL and Delta Reporting
Publication date: 2014-10-30
Playlist: FSOSS 2014
Description: 
	
Captions: 
	00:00:17,210 --> 00:00:25,110
more interest in Watson uses your

00:00:21,960 --> 00:00:27,390
partner and he both Lincoln and his

00:00:25,110 --> 00:00:31,260
penis is that mean in our site for over

00:00:27,390 --> 00:00:34,470
20 years finance is Menifee Ranch self

00:00:31,260 --> 00:00:37,500
development is among your wife in cash

00:00:34,470 --> 00:00:39,989
who is about see a huge part alter the

00:00:37,500 --> 00:00:45,510
governor and is a recognized expert in

00:00:39,989 --> 00:00:51,420
CF CF a song from interpretation of

00:00:45,510 --> 00:00:51,420
agency opml and other important

00:00:57,210 --> 00:01:03,450
quick poll how many you use the Avenger

00:01:05,850 --> 00:01:19,260
version 32 how many of you puppet

00:01:12,600 --> 00:01:19,260
shuffle chat anything else

00:01:19,530 --> 00:01:33,900
I know what it is somebody's don't how

00:01:30,360 --> 00:01:36,080
many don't go and see if engineer all

00:01:33,900 --> 00:01:36,080
right

00:01:40,070 --> 00:01:46,270
welcome to ID on right so glad

00:01:50,510 --> 00:01:56,230
when you join I teen wasn't what you

00:01:52,520 --> 00:02:00,200
expected when I first started I was

00:01:56,230 --> 00:02:05,180
excited and that's off the dark alone

00:02:00,200 --> 00:02:08,020
stop calling me I ran into a lot of

00:02:05,180 --> 00:02:10,940
recitation and Emmanuel to repeat things

00:02:08,020 --> 00:02:12,380
even sub I scripted I still ended up

00:02:10,940 --> 00:02:17,350
having the data static one way or

00:02:12,380 --> 00:02:17,350
another and then finally emerged

00:02:20,100 --> 00:02:24,470
real enemy was uncontrolled chain

00:02:25,040 --> 00:02:32,400
provision our server is nicely built

00:02:28,110 --> 00:02:36,360
just so and what happens somehow or

00:02:32,400 --> 00:02:39,060
other to change I have worked at one

00:02:36,360 --> 00:02:41,340
financial institution has this great

00:02:39,060 --> 00:02:44,670
customer facing web application that was

00:02:41,340 --> 00:02:47,730
giving them elephant so they asked me to

00:02:44,670 --> 00:02:50,400
help them out they gave me this giant

00:02:47,730 --> 00:02:52,380
book prepared by the original vendor who

00:02:50,400 --> 00:02:55,200
built in Portland which was very

00:02:52,380 --> 00:02:57,180
well-documented problem was it was six

00:02:55,200 --> 00:03:00,080
years old and no one knew what happened

00:02:57,180 --> 00:03:00,080
between then now

00:03:02,920 --> 00:03:04,980
Oh

00:03:11,010 --> 00:03:18,480
thatÃ­s configuration management which is

00:03:14,860 --> 00:03:22,650
essentially infrastructure is totally

00:03:18,480 --> 00:03:22,650
everyone can hear me back there yes

00:03:23,020 --> 00:03:28,240
so configuration management allows you

00:03:26,000 --> 00:03:31,310
to express your infrastructure as code

00:03:28,240 --> 00:03:32,510
how you want your servers to be

00:03:31,310 --> 00:03:36,070
configured how you want your

00:03:32,510 --> 00:03:39,680
configuration files what processes run

00:03:36,070 --> 00:03:43,220
what commands to run when what packages

00:03:39,680 --> 00:03:46,070
are installed how much disk space you

00:03:43,220 --> 00:03:51,170
have all these things can be expressed

00:03:46,070 --> 00:03:53,800
as code and then if your system is

00:03:51,170 --> 00:03:55,850
different from working expressed

00:03:53,800 --> 00:04:00,530
configuration management will change the

00:03:55,850 --> 00:04:03,230
system back to what you want so instead

00:04:00,530 --> 00:04:04,820
of wondering what those 6,000 servers

00:04:03,230 --> 00:04:07,640
are doing is really don't have time to

00:04:04,820 --> 00:04:09,500
go check them all configuration

00:04:07,640 --> 00:04:13,940
management attica check them all for

00:04:09,500 --> 00:04:16,180
your regular intervals without human

00:04:13,940 --> 00:04:16,180
intervention

00:04:18,840 --> 00:04:24,980
some snow another would see of Engineers

00:04:21,030 --> 00:04:31,050
I'll stop for a minute 42 and discuss it

00:04:24,980 --> 00:04:34,410
CF engine is a declarative language it's

00:04:31,050 --> 00:04:38,130
a client-server application where the

00:04:34,410 --> 00:04:40,440
Asian sits on your servers and it reads

00:04:38,130 --> 00:04:45,380
a declarative language similar to what

00:04:40,440 --> 00:04:47,550
you see here Nathan reads a language and

00:04:45,380 --> 00:04:50,729
determined whether or not the system is

00:04:47,550 --> 00:04:54,270
in compliance if it's out of compliance

00:04:50,729 --> 00:04:59,040
it uses its own internal already known

00:04:54,270 --> 00:05:00,900
libraries of functions and procedures

00:04:59,040 --> 00:05:03,389
that it has to do in order to find out

00:05:00,900 --> 00:05:05,760
the order change your system back to the

00:05:03,389 --> 00:05:10,860
desired state so if you look at our

00:05:05,760 --> 00:05:13,289
example here it's relatively simple it's

00:05:10,860 --> 00:05:17,160
called the CF engine parlance is called

00:05:13,289 --> 00:05:20,610
a promise so we're promising that the

00:05:17,160 --> 00:05:24,690
shadow file has the permissions for

00:05:20,610 --> 00:05:28,050
under the owner is group in the group is

00:05:24,690 --> 00:05:30,780
room the handle is merely another

00:05:28,050 --> 00:05:33,090
attribute that's just a documentary one

00:05:30,780 --> 00:05:33,720
as well as the infosec gardening is

00:05:33,090 --> 00:05:35,610
another

00:05:33,720 --> 00:05:37,830
documentation I'm learning which we need

00:05:35,610 --> 00:05:42,080
consent act so you get the idea of how

00:05:37,830 --> 00:05:44,550
it works so what we have there is a

00:05:42,080 --> 00:05:47,790
shadow file what's called the promise

00:05:44,550 --> 00:05:49,320
err on the right hand of that which

00:05:47,790 --> 00:05:51,210
called the promisee that's who they're

00:05:49,320 --> 00:05:53,280
making the promise to so in this case

00:05:51,210 --> 00:05:55,860
we're making an interview information

00:05:53,280 --> 00:05:58,410
security team and everything below that

00:05:55,860 --> 00:06:01,710
are attributes attributes about the

00:05:58,410 --> 00:06:04,290
promise sir for instance the handling

00:06:01,710 --> 00:06:09,030
used to identify this promise from all

00:06:04,290 --> 00:06:13,400
others and permissions attribute each

00:06:09,030 --> 00:06:13,400
type of promise those different things

00:06:14,729 --> 00:06:19,710
notice that it's not a scripted

00:06:16,979 --> 00:06:22,620
procedure it's an end state for

00:06:19,710 --> 00:06:24,569
describing CF engine knows the

00:06:22,620 --> 00:06:27,650
procedures it needs to reset and state

00:06:24,569 --> 00:06:29,879
by itself it doesn't mean your help

00:06:27,650 --> 00:06:31,830
that's probably the biggest hurdle of

00:06:29,879 --> 00:06:34,909
people have with most consideration

00:06:31,830 --> 00:06:37,610
management's that not just CF engine is

00:06:34,909 --> 00:06:40,469
you're not doing scripting anyone

00:06:37,610 --> 00:06:43,740
declaring what you want just your n

00:06:40,469 --> 00:06:45,839
state it's common when you first start

00:06:43,740 --> 00:06:47,189
your configuration management you don't

00:06:45,839 --> 00:06:48,899
realize it's called configuration

00:06:47,189 --> 00:06:52,139
management you're essentially writing

00:06:48,899 --> 00:06:55,020
scripts experience that put things in

00:06:52,139 --> 00:06:57,360
order how you want them usually at the

00:06:55,020 --> 00:06:59,039
beginning all that is is that's when

00:06:57,360 --> 00:07:01,620
you're originally provision machine when

00:06:59,039 --> 00:07:05,759
you first install a kickstart file you

00:07:01,620 --> 00:07:09,749
have a precede a jumpstart whatever your

00:07:05,759 --> 00:07:11,370
system is and you have all these little

00:07:09,749 --> 00:07:13,490
custom scripts you out on the end to

00:07:11,370 --> 00:07:15,569
make your machine just the way you want

00:07:13,490 --> 00:07:18,830
the problem is that's a one-off

00:07:15,569 --> 00:07:21,330
operation never happens again later on

00:07:18,830 --> 00:07:24,959
you end up writing a bunch of taking

00:07:21,330 --> 00:07:26,669
those original scripts and you transfer

00:07:24,959 --> 00:07:28,949
them to the machines and brunch butcher

00:07:26,669 --> 00:07:32,610
put a bunch of cron jobs in for a

00:07:28,949 --> 00:07:36,719
complex command and control SSH system

00:07:32,610 --> 00:07:38,069
that applies them regularly the problem

00:07:36,719 --> 00:07:39,389
with that is of course itself a little

00:07:38,069 --> 00:07:41,459
bunch of custom code that no one

00:07:39,389 --> 00:07:44,009
understands with you and the other

00:07:41,459 --> 00:07:45,719
problem is it doesn't scale very well is

00:07:44,009 --> 00:07:47,879
now you're trying to command and control

00:07:45,719 --> 00:07:50,999
whole bunch of things and you're also

00:07:47,879 --> 00:07:54,779
stressing the server a lot because most

00:07:50,999 --> 00:07:56,879
strips do stuffs no matter what you're

00:07:54,779 --> 00:07:58,879
always writing to that file is no one

00:07:56,879 --> 00:08:02,309
ever writes it sort of checks the bottom

00:07:58,879 --> 00:08:05,159
think about CF engine is that it tests

00:08:02,309 --> 00:08:08,279
before it changes so we'll look at that

00:08:05,159 --> 00:08:14,459
file and I'll say is that file current

00:08:08,279 --> 00:08:18,300
mode 0400 yes no if yes do nothing if no

00:08:14,459 --> 00:08:21,240
then corrected most scripting I've seen

00:08:18,300 --> 00:08:24,289
and it first started and just like we do

00:08:21,240 --> 00:08:24,289
a change model all the time

00:08:32,849 --> 00:08:40,849
so unix you can express things most

00:08:37,380 --> 00:08:44,730
things are expressed in terms of files

00:08:40,849 --> 00:08:47,399
processes and canal I was there a need

00:08:44,730 --> 00:08:50,250
to imagine in a unix system express even

00:08:47,399 --> 00:08:53,690
those three things even something like

00:08:50,250 --> 00:08:56,910
an installed package you essentially

00:08:53,690 --> 00:08:59,670
commands promise promising to run a

00:08:56,910 --> 00:09:02,670
command packet manager that will put

00:08:59,670 --> 00:09:04,440
that package it for checking to see if

00:09:02,670 --> 00:09:07,940
the package is installed which is

00:09:04,440 --> 00:09:07,940
checking the file / house Brian

00:09:08,130 --> 00:09:15,630
if you can express your configuration of

00:09:10,980 --> 00:09:18,590
your system and all these things is

00:09:15,630 --> 00:09:22,350
really nothing in it you can't be

00:09:18,590 --> 00:09:26,360
prepared for you can't configure and

00:09:22,350 --> 00:09:26,360
even do types of self-healing

00:09:35,889 --> 00:09:42,309
so it's all promised briefly so as you

00:09:39,699 --> 00:09:44,369
imagine have a lot of those a lot but

00:09:42,309 --> 00:09:48,100
you're promising file permissions

00:09:44,369 --> 00:09:50,829
promising to be filed promising contents

00:09:48,100 --> 00:09:53,110
and certain files in promising to start

00:09:50,829 --> 00:09:57,640
processes and promising built

00:09:53,110 --> 00:10:00,130
Adam commands disabled or x all these

00:09:57,640 --> 00:10:04,930
things together make up a lot of proxy a

00:10:00,130 --> 00:10:06,880
lot of all together in cfnm borrowings

00:10:04,930 --> 00:10:09,459
and I think in the others do they call

00:10:06,880 --> 00:10:11,670
this policy configuration man in the

00:10:09,459 --> 00:10:11,670
falls

00:10:16,370 --> 00:10:22,250
even distributing your promises your

00:10:18,830 --> 00:10:24,880
policy it's just another promise but CF

00:10:22,250 --> 00:10:27,140
engine sets a client-server application

00:10:24,880 --> 00:10:29,690
server doesn't actually make any

00:10:27,140 --> 00:10:31,820
decisions for the agents the agent does

00:10:29,690 --> 00:10:36,650
it all of its own the server is a file

00:10:31,820 --> 00:10:39,290
server what happens is the agents are

00:10:36,650 --> 00:10:41,690
told to check with the server do you

00:10:39,290 --> 00:10:44,300
have new policy for me it's so that

00:10:41,690 --> 00:10:47,870
download it runs it if not it continues

00:10:44,300 --> 00:10:51,110
to work on the existing policy at one of

00:10:47,870 --> 00:10:54,140
the major event is this your systems can

00:10:51,110 --> 00:10:56,720
repair themselves eponymously as network

00:10:54,140 --> 00:10:58,490
problems the server is down if it's

00:10:56,720 --> 00:10:59,930
broken so that it can't communicate with

00:10:58,490 --> 00:11:02,540
the server any of these things can be

00:10:59,930 --> 00:11:06,190
repaired because it served the agent has

00:11:02,540 --> 00:11:06,190
all the policy it means locally

00:11:14,329 --> 00:11:19,929
no system is perfect cf engine is

00:11:17,329 --> 00:11:19,929
certainly no exception

00:11:30,200 --> 00:11:36,210
the most common complaint can see of

00:11:32,820 --> 00:11:38,540
engine is it's hard very hard to learn

00:11:36,210 --> 00:11:41,670
first as a new syntax you have to learn

00:11:38,540 --> 00:11:44,550
coming from two to three have to learn

00:11:41,670 --> 00:11:47,490
almost in text entirely firm and the

00:11:44,550 --> 00:11:49,110
idea of going from procedural languages

00:11:47,490 --> 00:11:51,600
that everyone knows loves to something

00:11:49,110 --> 00:11:53,910
declarative for many people especially

00:11:51,600 --> 00:11:57,120
system administrators don't do a lot of

00:11:53,910 --> 00:11:58,830
development really hurt your brain it

00:11:57,120 --> 00:12:00,930
kind of reminds me you want to

00:11:58,830 --> 00:12:02,970
chocolates in school first your brain

00:12:00,930 --> 00:12:05,120
explodes but eventually you kind of get

00:12:02,970 --> 00:12:05,120
it

00:12:09,110 --> 00:12:15,630
didn't turn out quite right

00:12:11,720 --> 00:12:18,750
the other problem is these impacts as I

00:12:15,630 --> 00:12:20,160
mentioned this quite complex what I

00:12:18,750 --> 00:12:22,050
showed you there was a very small

00:12:20,160 --> 00:12:24,720
promise with only a couple of attributes

00:12:22,050 --> 00:12:28,520
I can show you much larger ones you have

00:12:24,720 --> 00:12:35,580
promises for files processes commands

00:12:28,520 --> 00:12:38,720
packages classes variables something

00:12:35,580 --> 00:12:41,580
very strangely called methods

00:12:38,720 --> 00:12:47,610
environments or setting up virtual

00:12:41,580 --> 00:12:51,270
machines databases probably a few others

00:12:47,610 --> 00:12:54,089
that I've ever used you can get quite

00:12:51,270 --> 00:12:55,620
complicated and many people we see if

00:12:54,089 --> 00:12:58,800
engine early because they just can't

00:12:55,620 --> 00:13:02,010
figure it out for us is that a CF engine

00:12:58,800 --> 00:13:05,060
sputtering know that decks are opposed

00:13:02,010 --> 00:13:08,550
to be it was actually supposed to be a

00:13:05,060 --> 00:13:11,990
pearl obfuscation contest as a funny

00:13:08,550 --> 00:13:17,370
example but I'm raising this container

00:13:11,990 --> 00:13:22,790
okay but I have some CF engine facebook

00:13:17,370 --> 00:13:22,790
and look similar to that line noise yeah

00:13:23,670 --> 00:13:30,120
so the involved pre pre promised

00:13:27,100 --> 00:13:33,250
libraries throughout of me being lazy I

00:13:30,120 --> 00:13:35,080
got sick of writing the same see app

00:13:33,250 --> 00:13:36,250
engine code over and over again just

00:13:35,080 --> 00:13:39,640
slightly different a few different

00:13:36,250 --> 00:13:41,590
things I began to see much greater

00:13:39,640 --> 00:13:43,980
patterns and the code that people are

00:13:41,590 --> 00:13:46,950
written that

00:13:43,980 --> 00:13:49,100
instead of raining one block of code

00:13:46,950 --> 00:13:52,850
drums the dns server another

00:13:49,100 --> 00:13:55,520
promise an HTTP server another block

00:13:52,850 --> 00:13:58,550
include protection p service are

00:13:55,520 --> 00:14:01,250
actually all the same all I have the

00:13:58,550 --> 00:14:03,440
configuration file or two I have a

00:14:01,250 --> 00:14:05,690
process that should be running and have

00:14:03,440 --> 00:14:07,250
a command that restarts the process that

00:14:05,690 --> 00:14:10,160
is not running warcraft change the

00:14:07,250 --> 00:14:12,470
configuration tracker right one level to

00:14:10,160 --> 00:14:17,030
do all those things all i have to do is

00:14:12,470 --> 00:14:19,430
change the parameters that's what efl is

00:14:17,030 --> 00:14:22,810
it's a large collection of pre-written

00:14:19,430 --> 00:14:28,180
CF engine promises and it takes

00:14:22,810 --> 00:14:28,180
separated plaintext parameter file

00:14:30,400 --> 00:14:37,240
the agent reads of parameter files

00:14:32,440 --> 00:14:39,220
applies them to the DFL policy Rick's

00:14:37,240 --> 00:14:42,490
the ministry offended policy the inner

00:14:39,220 --> 00:14:45,570
runs them all for you nice things about

00:14:42,490 --> 00:14:48,340
this is you actually don't have to be

00:14:45,570 --> 00:14:50,890
the right skip engine policy very much

00:14:48,340 --> 00:14:54,100
you end up just reading and writing

00:14:50,890 --> 00:14:57,300
friends a problem which makes your

00:14:54,100 --> 00:14:57,300
learning curve blah

00:15:03,589 --> 00:15:06,589
what

00:15:08,660 --> 00:15:11,660
pollution

00:15:14,630 --> 00:15:19,520
is cookies

00:15:19,860 --> 00:15:22,860
00:15:25,470 --> 00:15:28,010
/

00:15:28,060 --> 00:15:31,620
but with a little redheaded

00:15:32,190 --> 00:15:38,090
the question is it doesn't the system

00:15:34,110 --> 00:15:44,120
already know that shadow file is loaded

00:15:38,090 --> 00:15:47,250
400 if systems always stayed in one

00:15:44,120 --> 00:15:50,580
condition probably none of us would be

00:15:47,250 --> 00:15:52,860
here systems direct a drift because

00:15:50,580 --> 00:15:54,840
people go in and do things sometimes for

00:15:52,860 --> 00:15:57,210
good intentions sometimes naive

00:15:54,840 --> 00:16:00,030
intentions sometimes there are software

00:15:57,210 --> 00:16:02,570
all these things can make your system

00:16:00,030 --> 00:16:02,570
change unexpectedly

00:16:02,960 --> 00:16:09,380
also if you work in a place that

00:16:05,290 --> 00:16:12,320
involves security audits it's not enough

00:16:09,380 --> 00:16:15,080
to say that this file when I was

00:16:12,320 --> 00:16:18,140
installed with this permissions periodic

00:16:15,080 --> 00:16:20,240
I'll say prove it is now how do you know

00:16:18,140 --> 00:16:22,280
it is now you know what install it you

00:16:20,240 --> 00:16:25,700
don't know what it is now you have to

00:16:22,280 --> 00:16:27,880
know these things this is where coming

00:16:25,700 --> 00:16:31,700
like configuration management health

00:16:27,880 --> 00:16:34,400
because it doesn't just apply it once

00:16:31,700 --> 00:16:36,590
every time it runs see App Engine update

00:16:34,400 --> 00:16:38,990
every five minutes every five minutes

00:16:36,590 --> 00:16:41,950
I'll check from check that box a in the

00:16:38,990 --> 00:16:44,430
permissions for a yes or no not fixing

00:16:41,950 --> 00:16:47,160
you know continuously the system

00:16:44,430 --> 00:16:50,930
is exactly what you expected date of the

00:16:47,160 --> 00:16:50,930
present owner of the file

00:16:55,900 --> 00:17:00,910
that's correct if the system changes

00:16:59,140 --> 00:17:04,000
because an owner does for some reason

00:17:00,910 --> 00:17:06,160
and it's worth folks do on control

00:17:04,000 --> 00:17:08,850
change and the system will came to

00:17:06,160 --> 00:17:08,850
national butcher

00:17:11,490 --> 00:17:19,380
what they call repairing the system over

00:17:15,030 --> 00:17:21,059
the avenging call it is a repair is it

00:17:19,380 --> 00:17:25,470
do any modern you discover how the

00:17:21,059 --> 00:17:28,380
damage cup created out of a box you can

00:17:25,470 --> 00:17:32,010
probably configure it do it but not sure

00:17:28,380 --> 00:17:34,110
how well it will work that way so these

00:17:32,010 --> 00:17:36,179
promises run like like you say every

00:17:34,110 --> 00:17:40,140
five minutes a uh you know I can imagine

00:17:36,179 --> 00:17:41,670
business system lots of names so they

00:17:40,140 --> 00:17:43,200
all percolate through and check

00:17:41,670 --> 00:17:47,220
everything all the Commission's of right

00:17:43,200 --> 00:17:49,740
file teachers they can do the freshman's

00:17:47,220 --> 00:17:52,530
do the promises run to all the promises

00:17:49,740 --> 00:17:54,750
run every five minutes potentially a hat

00:17:52,530 --> 00:17:56,820
loading the system so that were you

00:17:54,750 --> 00:17:58,200
worried about well justjust in a

00:17:56,820 --> 00:18:00,510
wandering like they're all trivial no

00:17:58,200 --> 00:18:03,929
problem they doing a lot of work and

00:18:00,510 --> 00:18:09,210
yeah some promises and hand load the

00:18:03,929 --> 00:18:10,950
system quite a lot there's a concept

00:18:09,210 --> 00:18:13,860
called locking in statement which means

00:18:10,950 --> 00:18:14,980
every promise by default camera and more

00:18:13,860 --> 00:18:20,530
than one

00:18:14,980 --> 00:18:23,500
so go ahead okay so you're impatient

00:18:20,530 --> 00:18:26,320
person and Randy agent by hand like a

00:18:23,500 --> 00:18:27,820
man right after another if we check the

00:18:26,320 --> 00:18:30,010
same problems over an all-round so I

00:18:27,820 --> 00:18:32,140
checked this prompts 30 seconds ago

00:18:30,010 --> 00:18:34,059
investigative Norman actually so Kennedy

00:18:32,140 --> 00:18:36,220
intelligent like let's say you are

00:18:34,059 --> 00:18:38,980
looking at permissions on your etc

00:18:36,220 --> 00:18:41,740
shadow file and you maybe got a whole

00:18:38,980 --> 00:18:44,140
bunch of other things password who knows

00:18:41,740 --> 00:18:46,630
all says whether stuff in the center so

00:18:44,140 --> 00:18:50,049
it can't be intelligent and look at the

00:18:46,630 --> 00:18:53,470
the modification date and time on the

00:18:50,049 --> 00:18:55,510
UTC directory and then say oh that's

00:18:53,470 --> 00:18:57,370
changed so I better execute all these

00:18:55,510 --> 00:19:01,630
promises to check all the contents of

00:18:57,370 --> 00:19:03,610
atc boulder or disap- you have to go

00:19:01,630 --> 00:19:06,250
through and check all the hundreds of

00:19:03,610 --> 00:19:08,679
files you have there you could rank a

00:19:06,250 --> 00:19:11,790
policy to do that but i'm not sure that

00:19:08,679 --> 00:19:11,790
i would trust a time stamp

00:19:12,960 --> 00:19:17,279
the factor original question of load

00:19:14,789 --> 00:19:19,320
every promise has a lock on it you can

00:19:17,279 --> 00:19:20,880
change that lock to wherever you want so

00:19:19,320 --> 00:19:22,140
you can say certain promises they don't

00:19:20,880 --> 00:19:25,620
want you to check on more than once now

00:19:22,140 --> 00:19:27,779
for once a day which means you can take

00:19:25,620 --> 00:19:31,289
your heavy stuff like package management

00:19:27,779 --> 00:19:33,270
what I set them all so they only do and

00:19:31,289 --> 00:19:37,760
your simple stuff like checking

00:19:33,270 --> 00:19:37,760
compensation to New York I pencil

00:19:39,549 --> 00:19:48,250
it once this what time of a sister

00:19:43,990 --> 00:19:50,140
like when liquid yes you can do simple

00:19:48,250 --> 00:19:54,490
as to run it as a sign what's up so you

00:19:50,140 --> 00:19:58,110
can say you know between five and

00:19:54,490 --> 00:20:02,490
five-thirty check this

00:19:58,110 --> 00:20:04,260
I not to use time windows too much I

00:20:02,490 --> 00:20:06,900
don't want I don't want to work like a

00:20:04,260 --> 00:20:10,410
crop because prom has its disadvantages

00:20:06,900 --> 00:20:15,570
in that you run it this minute and this

00:20:10,410 --> 00:20:19,100
minute only and if it fails where to see

00:20:15,570 --> 00:20:22,740
if engine we say I want you to run it

00:20:19,100 --> 00:20:26,250
when you can and give it time we do and

00:20:22,740 --> 00:20:29,160
then we did in time window and one of

00:20:26,250 --> 00:20:30,840
the things if any does is it knows when

00:20:29,160 --> 00:20:33,720
the last time I ran a promise and those

00:20:30,840 --> 00:20:37,799
with vision was so we can say well I ran

00:20:33,720 --> 00:20:39,690
this problem successfully so I know that

00:20:37,799 --> 00:20:41,840
I don't need to rent gettin in this time

00:20:39,690 --> 00:20:44,570
ago because it's already been done

00:20:41,840 --> 00:20:46,480
he fails one time some time ago right

00:20:44,570 --> 00:20:51,350
now

00:20:46,480 --> 00:20:53,480
which makes it more resilient so

00:20:51,350 --> 00:20:57,370
fact is we felt we talked about

00:20:53,480 --> 00:21:01,669
parameters we go back to our shadow

00:20:57,370 --> 00:21:05,270
promise we had you have here at

00:21:01,669 --> 00:21:10,690
parameter file that works with file

00:21:05,270 --> 00:21:13,580
permissions it's a similar to a CSV file

00:21:10,690 --> 00:21:16,880
we have a few columns there that define

00:21:13,580 --> 00:21:19,100
what it does so we find a class which

00:21:16,880 --> 00:21:22,669
I'll get into later there's our promise

00:21:19,100 --> 00:21:26,210
or file the next three columns recurse

00:21:22,669 --> 00:21:29,419
meet regex in the gate have to do with I

00:21:26,210 --> 00:21:32,330
could I could do some sort of search or

00:21:29,419 --> 00:21:35,120
blogging to choose whole selection of

00:21:32,330 --> 00:21:39,260
file I want to go every file in this

00:21:35,120 --> 00:21:41,090
subdirectory apply these permissions and

00:21:39,260 --> 00:21:43,809
then after that is a mode the owner of

00:21:41,090 --> 00:21:45,070
the group and last is the promising

00:21:43,809 --> 00:21:48,370
which

00:21:45,070 --> 00:21:50,789
a documentation of compromises for these

00:21:48,370 --> 00:21:54,279
particular ones are referencing a

00:21:50,789 --> 00:21:56,789
hardening document from the NSA redhead

00:21:54,279 --> 00:21:56,789
arteaga

00:21:59,200 --> 00:22:06,570
here's another one this one enables

00:22:02,139 --> 00:22:06,570
systems using checking things

00:22:07,590 --> 00:22:12,330
similar except this time no I have three

00:22:10,080 --> 00:22:16,080
columns so first we have the class for

00:22:12,330 --> 00:22:18,990
the context which is randy's when these

00:22:16,080 --> 00:22:20,700
promises are applied second one is the

00:22:18,990 --> 00:22:22,890
service that will promising available

00:22:20,700 --> 00:22:25,110
and the last one is again the prophecy

00:22:22,890 --> 00:22:27,539
is at you I'm making it too again this

00:22:25,110 --> 00:22:30,470
is from a hardening policy so this has

00:22:27,539 --> 00:22:30,470
to do with the heart

00:22:36,240 --> 00:22:45,170
now one more here and this promise is

00:22:40,670 --> 00:22:47,580
this CTL Colonel things not just

00:22:45,170 --> 00:22:50,880
configuration file tits in UTC but

00:22:47,580 --> 00:22:51,970
actual live settings will check both the

00:22:50,880 --> 00:22:54,870
same

00:22:51,970 --> 00:22:57,490
no family has context left-hand column

00:22:54,870 --> 00:22:59,770
then we have our variable than the value

00:22:57,490 --> 00:23:01,180
we're saying and lastly Oh again we have

00:22:59,770 --> 00:23:03,750
the promisee it tells us who we're

00:23:01,180 --> 00:23:03,750
setting it to work

00:23:11,210 --> 00:23:15,429
and you're in here

00:23:16,400 --> 00:23:27,590
so that's saying it up it's just a large

00:23:23,060 --> 00:23:32,990
list of the types of bundles that efo

00:23:27,590 --> 00:23:37,240
library handle so angles saying classes

00:23:32,990 --> 00:23:37,240
which I thump rotator saying variables

00:23:37,450 --> 00:23:42,950
promising running services disabling

00:23:40,310 --> 00:23:46,640
enabling services promising the contents

00:23:42,950 --> 00:23:51,140
of files permission to files killing

00:23:46,640 --> 00:23:54,980
unwanted processes startle processes at

00:23:51,140 --> 00:23:59,050
or moving packages setting kernels that

00:23:54,980 --> 00:24:01,760
setting Colonel things deleting files

00:23:59,050 --> 00:24:06,910
all these such things we do in everyday

00:24:01,760 --> 00:24:06,910
system and then job this can do

00:24:10,220 --> 00:24:13,549
questions over

00:24:14,230 --> 00:24:16,860
right

00:24:19,700 --> 00:24:25,149
never talked about to cry on 40 10 mar 3

00:24:22,730 --> 00:24:27,919
weeks it's called delta hardening and

00:24:25,149 --> 00:24:29,840
we're going to be itself what he did is

00:24:27,919 --> 00:24:31,730
a bunch of pre-written grammar file of

00:24:29,840 --> 00:24:36,950
like the ones that show back the ones I

00:24:31,730 --> 00:24:40,330
showed you awesome let's just focus on

00:24:36,950 --> 00:24:40,330
I'm sorry you can take those

00:25:01,410 --> 00:25:08,980
so those parameter publishers you before

00:25:04,960 --> 00:25:12,640
a part of delta hurting was just a large

00:25:08,980 --> 00:25:15,880
collection of pre-written promises

00:25:12,640 --> 00:25:18,370
chronic data that you can use and based

00:25:15,880 --> 00:25:20,170
on that mist and NSA server army guys

00:25:18,370 --> 00:25:22,180
and they're more than a hundred

00:25:20,170 --> 00:25:28,170
different areas where you can harden

00:25:22,180 --> 00:25:32,020
your servers include disabling handling

00:25:28,170 --> 00:25:34,660
services file permissions Colonel

00:25:32,020 --> 00:25:37,840
settings serves configurations adding

00:25:34,660 --> 00:25:40,690
over the packages a lot of things that

00:25:37,840 --> 00:25:43,590
will get your servers and much better

00:25:40,690 --> 00:25:43,590
hardening position

00:25:44,880 --> 00:25:50,990
all open source all these three are on

00:25:47,340 --> 00:25:50,990
GPL three

00:25:55,930 --> 00:26:03,590
so CF engine is nice knit take care of

00:26:00,920 --> 00:26:05,750
our servers one of the things CF engine

00:26:03,590 --> 00:26:08,570
doesn't do out of box is now you've

00:26:05,750 --> 00:26:12,470
applied at all your servers how you

00:26:08,570 --> 00:26:14,570
wonder is it working you think it's

00:26:12,470 --> 00:26:16,220
working I suppose you could spend a lot

00:26:14,570 --> 00:26:18,530
of time going out each machine and

00:26:16,220 --> 00:26:22,190
auditing them periodically doing some

00:26:18,530 --> 00:26:24,860
random samplings either works you're

00:26:22,190 --> 00:26:28,480
waiting for that it's just picking up

00:26:24,860 --> 00:26:32,420
the PA so we created something called

00:26:28,480 --> 00:26:35,840
felt the reporting which is essentially

00:26:32,420 --> 00:26:39,440
a compliance law of total promises we

00:26:35,840 --> 00:26:42,740
see if anything does what it does is as

00:26:39,440 --> 00:26:46,550
the agent runs it clogs and collects all

00:26:42,740 --> 00:26:48,140
the promise outcomes that performs dr.

00:26:46,550 --> 00:26:50,750
boring collects all those logs from

00:26:48,140 --> 00:26:54,140
wired systems which the new database

00:26:50,750 --> 00:26:57,530
research them you're looking at the

00:26:54,140 --> 00:26:59,270
landing page there and you can see it's

00:26:57,530 --> 00:27:01,640
a quick dashboard you see it's beginning

00:26:59,270 --> 00:27:05,210
tells you my house count gives me a

00:27:01,640 --> 00:27:08,390
ratio of promises that are kept prepared

00:27:05,210 --> 00:27:12,190
me for found in Java and fixed and not

00:27:08,390 --> 00:27:12,190
jack which means that try to repair them

00:27:13,560 --> 00:27:17,430
and then the bottom earrings in the date

00:27:15,570 --> 00:27:20,130
shows me a lot time i had a day

00:27:17,430 --> 00:27:23,270
attachment of my data calculate

00:27:20,130 --> 00:27:23,270
something about

00:27:26,400 --> 00:27:33,600
one of the reports is a promise promise

00:27:31,230 --> 00:27:36,510
% summary and that gives us the shot

00:27:33,600 --> 00:27:39,680
over time where promises are doing how

00:27:36,510 --> 00:27:43,610
many are kept repaired or not kept

00:27:39,680 --> 00:27:43,610
seeing certain trends

00:27:50,440 --> 00:27:59,139
one person here knows what CF engine is

00:27:54,450 --> 00:28:04,509
too can you tell me what's the event in

00:27:59,139 --> 00:28:07,090
class is probably one of the hardest

00:28:04,509 --> 00:28:10,379
concepts of CF engine that's because

00:28:07,090 --> 00:28:13,389
when i say class everyone thinks objects

00:28:10,379 --> 00:28:17,470
it's not what it is when i ask your

00:28:13,389 --> 00:28:19,990
wives named this way some people try to

00:28:17,470 --> 00:28:23,110
call in the context which sometimes

00:28:19,990 --> 00:28:27,190
makes more sense of certainty that what

00:28:23,110 --> 00:28:31,539
it is a class is a criteria the system

00:28:27,190 --> 00:28:36,509
to their needs or doesn't meet so a

00:28:31,539 --> 00:28:40,960
criteria might be running a legs grown

00:28:36,509 --> 00:28:43,470
within certain subnet a type of lemmings

00:28:40,960 --> 00:28:43,470
judge me

00:28:45,520 --> 00:28:51,860
as a mac address matching this we were

00:28:49,340 --> 00:28:57,169
all classes that system is for invite

00:28:51,860 --> 00:29:01,870
member of you also define your own

00:28:57,169 --> 00:29:04,279
classes so you can say all these servers

00:29:01,870 --> 00:29:06,440
some sort of criteria like maybe a

00:29:04,279 --> 00:29:10,190
subnet maybe this small range of IP

00:29:06,440 --> 00:29:15,320
addresses our DNS servers or all these

00:29:10,190 --> 00:29:18,529
other servers are TMZ servers when you

00:29:15,320 --> 00:29:19,940
have these this classification be able

00:29:18,529 --> 00:29:21,919
to learn a lot more things about your

00:29:19,940 --> 00:29:24,049
environment it also means that you can

00:29:21,919 --> 00:29:25,789
determine which promises are applied to

00:29:24,049 --> 00:29:27,919
which machines you don't want to apply

00:29:25,789 --> 00:29:31,250
everything all your machines you want to

00:29:27,919 --> 00:29:33,590
apply just stuff that is relevant to

00:29:31,250 --> 00:29:36,190
that particular machine and classes are

00:29:33,590 --> 00:29:36,190
how you do that

00:29:39,410 --> 00:29:45,350
one of the things you can do with Delta

00:29:41,390 --> 00:29:47,810
recording is you can query classes these

00:29:45,350 --> 00:29:49,520
are all our classes which it stuff that

00:29:47,810 --> 00:29:53,150
the agent figures out automatically on

00:29:49,520 --> 00:29:56,330
troan whenever it runs on system so i

00:29:53,150 --> 00:29:58,370
can do an inventory report so i know how

00:29:56,330 --> 00:30:02,860
many systems i have a hominid or give

00:29:58,370 --> 00:30:02,860
Ian a nominee or in a particular subnet

00:30:03,900 --> 00:30:09,740
I can even search that list for longer

00:30:05,970 --> 00:30:13,010
than one page can even export it for

00:30:09,740 --> 00:30:13,010
normal reporting

00:30:16,620 --> 00:30:22,320
the new custom search is provided so

00:30:19,320 --> 00:30:26,280
let's say I have a class says a canister

00:30:22,320 --> 00:30:29,300
of class on my poster yes I can do a

00:30:26,280 --> 00:30:33,270
search what seeing here is data from

00:30:29,300 --> 00:30:37,920
Tyrone environment our own oppression of

00:30:33,270 --> 00:30:41,220
our exactly so here's a class report for

00:30:37,920 --> 00:30:44,190
March there's time enough to eat 20 to

00:30:41,220 --> 00:30:46,200
25 degrees from query weapon systems

00:30:44,190 --> 00:30:50,670
were members of the answer requests I

00:30:46,200 --> 00:30:53,940
have free time stamp of when that closet

00:30:50,670 --> 00:30:55,770
last no mature Notre IP address post

00:30:53,940 --> 00:30:58,250
name I even know what policy server to

00:30:55,770 --> 00:30:58,250
ryan from

00:31:05,190 --> 00:31:09,150
here's a promise report problems a

00:31:07,500 --> 00:31:12,750
little different classes we've already

00:31:09,150 --> 00:31:16,800
discussed promises this one I'm query

00:31:12,750 --> 00:31:21,620
about SSH configurations so I'm checking

00:31:16,800 --> 00:31:21,620
the sshd configuration file

00:31:22,169 --> 00:31:25,159
either directory

00:31:26,019 --> 00:31:33,049
meanwhile i can see that our promises

00:31:29,330 --> 00:31:34,879
were kept I see when never kept Thomas

00:31:33,049 --> 00:31:36,559
handle tells me exactly what promised

00:31:34,879 --> 00:31:40,850
their work that I can look for inside

00:31:36,559 --> 00:31:44,409
the code and that tells me the host ya

00:31:40,850 --> 00:31:44,409
address and also server

00:31:55,680 --> 00:32:03,539
another one there

00:31:57,690 --> 00:32:05,220
similar for asus ET sa same thing those

00:32:03,539 --> 00:32:09,120
are the prompter that i wanted i want to

00:32:05,220 --> 00:32:12,000
go sista Cpl settings just so that's my

00:32:09,120 --> 00:32:16,289
prophecy for tucking six auto assignment

00:32:12,000 --> 00:32:19,190
and go to the other either there i know

00:32:16,289 --> 00:32:19,190
that i'm in compliance

00:32:23,570 --> 00:32:30,020
and one more or I can just say show me

00:32:26,990 --> 00:32:32,300
stuff it's not that could be a big west

00:32:30,020 --> 00:32:36,130
month too small in this case it's a

00:32:32,300 --> 00:32:36,130
pretty small s not a problem

00:32:42,460 --> 00:32:45,570
star I live down

00:32:50,060 --> 00:32:53,060
so

00:32:54,050 --> 00:32:57,100
because all

00:32:58,850 --> 00:33:01,390
home

00:33:06,419 --> 00:33:09,710
anyone can drive it

00:33:13,320 --> 00:33:23,639
google tyler and after those count seven

00:33:19,190 --> 00:33:27,980
past my neck so we have 2247 promises

00:33:23,639 --> 00:33:27,980
kept 77 repairs

00:33:31,030 --> 00:33:43,170
training raft was the count of promises

00:33:34,390 --> 00:33:46,170
kept since back in late September now

00:33:43,170 --> 00:33:46,170
yesterday

00:33:47,220 --> 00:33:52,180
full count which is Ben's day except in

00:33:50,080 --> 00:33:55,150
the whole time we see we have a trend

00:33:52,180 --> 00:33:57,850
line map so we can know that hi November

00:33:55,150 --> 00:34:00,550
we're going to be able to hire so maybe

00:33:57,850 --> 00:34:06,250
that's a big trend Graham more problems

00:34:00,550 --> 00:34:07,710
of kept we also have 14 promises not

00:34:06,250 --> 00:34:09,690
kept

00:34:07,710 --> 00:34:13,980
comes around a bit you see that's right

00:34:09,690 --> 00:34:16,770
link that might be a concern another one

00:34:13,980 --> 00:34:19,140
for repair that one's really rare

00:34:16,770 --> 00:34:23,700
how's that test day on here drive this

00:34:19,140 --> 00:34:27,559
one jumps around one in Saudi a mentor

00:34:23,700 --> 00:34:31,179
would work really big

00:34:27,559 --> 00:34:31,179
even on stuff about the Colonel's

00:34:33,859 --> 00:34:39,889
it shows me any hosts that I haven't

00:34:35,839 --> 00:34:40,999
seen in the past 24 hours I won't give

00:34:39,889 --> 00:34:43,279
me any of your trying to track down

00:34:40,999 --> 00:34:44,690
servers you want to know whether or not

00:34:43,279 --> 00:34:47,749
they're all checking in like this cover

00:34:44,690 --> 00:34:50,989
and we have thousands servers that can

00:34:47,749 --> 00:34:53,259
sometimes be jogging this all through a

00:34:50,989 --> 00:34:53,259
lot

00:34:58,790 --> 00:35:01,570
freshman

00:35:03,780 --> 00:35:10,480
I'm just learning what poster

00:35:07,430 --> 00:35:10,480
and you know

00:35:15,200 --> 00:35:20,890
promises can fail because well sometimes

00:35:19,010 --> 00:35:23,390
easier air is broke the promise wrong

00:35:20,890 --> 00:35:25,750
sometimes because the system is in bad

00:35:23,390 --> 00:35:30,530
shape so let's say I have promised

00:35:25,750 --> 00:35:31,790
configuration about certain honest but

00:35:30,530 --> 00:35:33,510
this was

00:35:31,790 --> 00:35:36,120
correctly

00:35:33,510 --> 00:35:38,000
that promise or the state's promise that

00:35:36,120 --> 00:35:40,440
a battery was supposed to install

00:35:38,000 --> 00:35:43,620
package managers or interacts with the

00:35:40,440 --> 00:35:47,340
server to operate the central package a

00:35:43,620 --> 00:35:49,660
road manager or maybe

00:35:47,340 --> 00:35:52,510
subscriber manager can't determine

00:35:49,660 --> 00:35:55,680
whether or not the average is installed

00:35:52,510 --> 00:35:55,680
a fail

00:36:02,830 --> 00:36:08,450
check something

00:36:05,160 --> 00:36:08,450
I could give

00:36:09,520 --> 00:36:13,410
travelon promise and we

00:36:16,100 --> 00:36:23,760
can you both you can configure the agent

00:36:20,460 --> 00:36:26,400
to run several parallel but some

00:36:23,760 --> 00:36:30,240
promises depend upon which was it would

00:36:26,400 --> 00:36:32,610
have to be in series sometimes it can

00:36:30,240 --> 00:36:34,410
spit up and save this one dog this set

00:36:32,610 --> 00:36:37,860
of problems nothing to do with this set

00:36:34,410 --> 00:36:39,270
so we can run them in parallel the agent

00:36:37,860 --> 00:36:43,110
also has a timeout which you can

00:36:39,270 --> 00:36:45,630
configure it says if you have been able

00:36:43,110 --> 00:36:50,330
to verify this promise with insert 30

00:36:45,630 --> 00:36:50,330
pounds go to next one the Federation

00:36:52,320 --> 00:36:54,920
right

00:37:01,060 --> 00:37:07,270
any questions other questions they

00:37:04,750 --> 00:37:11,230
always run is root is it always runs

00:37:07,270 --> 00:37:13,450
rich typically yes because has to be

00:37:11,230 --> 00:37:16,510
able to make promises to things that

00:37:13,450 --> 00:37:18,930
usually requirement it's one of those

00:37:16,510 --> 00:37:21,850
few services that really have to run

00:37:18,930 --> 00:37:25,090
theoretically you can run the server as

00:37:21,850 --> 00:37:27,160
a non-root historically hasn't been done

00:37:25,090 --> 00:37:29,440
that way I don't really know why

00:37:27,160 --> 00:37:31,360
actually a good point of service the

00:37:29,440 --> 00:37:34,060
file server I probably should run

00:37:31,360 --> 00:37:39,510
property it could just hop in the back

00:37:34,060 --> 00:37:39,510
so you can write the Indian agent

00:37:39,630 --> 00:37:45,520
separately as your own user to do

00:37:42,790 --> 00:37:48,460
certain things have student where they

00:37:45,520 --> 00:37:51,270
have two sets of policies of Pharaoh now

00:37:48,460 --> 00:37:56,040
one Santa group stuff and another one

00:37:51,270 --> 00:37:59,990
entirely separate set of policies run by

00:37:56,040 --> 00:38:01,940
drum by like an applications team

00:37:59,990 --> 00:38:03,950
like to apache tomcat or something like

00:38:01,940 --> 00:38:05,030
that they can run their own policies do

00:38:03,950 --> 00:38:09,250
with everything long because they're

00:38:05,030 --> 00:38:09,250
ancient bronze is there need not root

00:38:09,730 --> 00:38:14,859
the other precious

00:38:12,160 --> 00:38:17,289
yes how does it get along with selinux

00:38:14,859 --> 00:38:20,319
how does it get along the best night how

00:38:17,289 --> 00:38:25,720
does anything get along with this not

00:38:20,319 --> 00:38:28,960
well I can tell you that CF engine south

00:38:25,720 --> 00:38:31,720
bus bar hasn't had a lot of work done to

00:38:28,960 --> 00:38:34,000
make it work well in essence in the

00:38:31,720 --> 00:38:36,549
community given community a lot of

00:38:34,000 --> 00:38:42,010
people do have a few sets of promises

00:38:36,549 --> 00:38:45,549
that will you things like fix the files

00:38:42,010 --> 00:38:48,280
Patrick modifies its focus within as you

00:38:45,549 --> 00:38:50,700
linux promise per se language

00:38:48,280 --> 00:38:55,390
requirements the name is capable context

00:38:50,700 --> 00:38:58,070
yes conduct threatened so there are

00:38:55,390 --> 00:39:01,460
promises that will do that to pull it

00:38:58,070 --> 00:39:04,840
do it doesn't do it at a box but it's

00:39:01,460 --> 00:39:04,840
not too difficult to make themselves

00:39:05,230 --> 00:39:08,220
the other passion

00:39:09,490 --> 00:39:14,850
yes what do you think your library's

00:39:12,310 --> 00:39:19,390
name value is it is it distilled lower

00:39:14,850 --> 00:39:21,160
or is it back breaking work you've done

00:39:19,390 --> 00:39:26,740
for somebody else or what how would you

00:39:21,160 --> 00:39:28,480
characterize what you've done or

00:39:26,740 --> 00:39:32,980
systematize something people didn't

00:39:28,480 --> 00:39:36,369
understand very well in one way it's its

00:39:32,980 --> 00:39:38,170
terms in my way it's kind of turned

00:39:36,369 --> 00:39:39,760
letting your own and see if any policy

00:39:38,170 --> 00:39:43,300
before like anything I will you just

00:39:39,760 --> 00:39:44,820
give it grammar files you know you know

00:39:43,300 --> 00:39:48,390
what you expect a book about

00:39:44,820 --> 00:39:50,440
historically everybody wrote their own

00:39:48,390 --> 00:39:52,740
policy if it's something we get

00:39:50,440 --> 00:39:56,710
basically the face of a month whenever

00:39:52,740 --> 00:39:58,420
policy to do everything then several

00:39:56,710 --> 00:40:01,210
people would he try to start writing

00:39:58,420 --> 00:40:02,950
things that would make it easier so we

00:40:01,210 --> 00:40:04,300
didn't have to you know reinvent the

00:40:02,950 --> 00:40:06,850
wheel every time you install the

00:40:04,300 --> 00:40:09,750
attention of the long as a so that's

00:40:06,850 --> 00:40:13,270
what he had felt represents is a way to

00:40:09,750 --> 00:40:16,990
take your knowledge that you know that

00:40:13,270 --> 00:40:18,610
your system should be and put it into an

00:40:16,990 --> 00:40:21,520
engine that will already promised

00:40:18,610 --> 00:40:24,460
authority you just proved in a question

00:40:21,520 --> 00:40:26,260
of dolt hardening that as I said

00:40:24,460 --> 00:40:28,600
pre-existing Lord that you can also use

00:40:26,260 --> 00:40:32,100
plugs into the engine makes a champion

00:40:28,600 --> 00:40:35,080
sporting to the answer Prussian

00:40:32,100 --> 00:40:36,910
perfectly as well as can be so it helps

00:40:35,080 --> 00:40:39,850
make it a little more modular that yes

00:40:36,910 --> 00:40:46,170
it makes it a lot easier to decline to

00:40:39,850 --> 00:40:46,170

YouTube URL: https://www.youtube.com/watch?v=dL6OuIvBVD8


