Title: Ohio Linux 2015 Kurbernetes Orchestration containers 2of2
Publication date: 2015-10-13
Playlist: 2015 Videos
Description: 
	Ohio Linux 2015 Kurbernetes Orchestration containers 2of2
Captions: 
	00:00:00,000 --> 00:00:08,400
and we can see and we can sleep you know

00:00:03,750 --> 00:00:10,230
what yeah this gives us a lot of good

00:00:08,400 --> 00:00:12,090
information about our pond we can see

00:00:10,230 --> 00:00:14,639
the name we can see the image we can see

00:00:12,090 --> 00:00:15,900
that note that it's running on we can

00:00:14,639 --> 00:00:18,150
see its status and replication

00:00:15,900 --> 00:00:20,850
controllers they're watching over this

00:00:18,150 --> 00:00:22,590
thing like little if guardians or

00:00:20,850 --> 00:00:24,269
something there's also a really cool

00:00:22,590 --> 00:00:26,070
event stream which normally would be

00:00:24,269 --> 00:00:28,230
really boring except for the fact that I

00:00:26,070 --> 00:00:30,179
had that little that little snafu

00:00:28,230 --> 00:00:34,500
earlier so in fact this all worked out

00:00:30,179 --> 00:00:38,129
perfectly seriously I'm just really

00:00:34,500 --> 00:00:40,860
lucky somebody here had a phone so so

00:00:38,129 --> 00:00:47,039
that's great cool it looks like i have

00:00:40,860 --> 00:00:51,960
plenty assigned web so actually let's do

00:00:47,039 --> 00:00:55,219
this q CTO get pods thereupon so like i

00:00:51,960 --> 00:00:59,250
said we can label we can label things so

00:00:55,219 --> 00:01:01,859
we can label things are actually let me

00:00:59,250 --> 00:01:03,270
take a step back begin we can get the

00:01:01,859 --> 00:01:04,589
nodes that are running like i said i

00:01:03,270 --> 00:01:07,080
noticed a cute brunette each resource

00:01:04,589 --> 00:01:09,210
the cool thing is that we can also

00:01:07,080 --> 00:01:12,330
describe them it we can also describe

00:01:09,210 --> 00:01:15,720
the meds and that gives us some pretty

00:01:12,330 --> 00:01:18,150
cool information we can see the last

00:01:15,720 --> 00:01:20,340
time we can see things like the we see

00:01:18,150 --> 00:01:23,070
the name of the box we can see the last

00:01:20,340 --> 00:01:25,680
time the box said hey I'm alive to

00:01:23,070 --> 00:01:27,180
Cooper daddy's we see that we can see

00:01:25,680 --> 00:01:29,340
the address of the box we can see the

00:01:27,180 --> 00:01:33,119
capacity that this thing that this thing

00:01:29,340 --> 00:01:35,189
can do some of it is configuration

00:01:33,119 --> 00:01:39,060
because I really doubt this vm on my box

00:01:35,189 --> 00:01:41,759
can do 40 pots but it does pre

00:01:39,060 --> 00:01:44,009
intelligent about everything else we can

00:01:41,759 --> 00:01:46,409
also see cool information like the

00:01:44,009 --> 00:01:48,299
kernel version in the OS version and the

00:01:46,409 --> 00:01:51,390
container runtime that's actually being

00:01:48,299 --> 00:01:54,119
used on these boxes and trust me i love

00:01:51,390 --> 00:01:56,219
docker but it's not always bug free

00:01:54,119 --> 00:01:57,840
experience so if you're trying to

00:01:56,219 --> 00:02:00,270
troubleshoot something that you think

00:01:57,840 --> 00:02:01,020
may be specific to a version that's a

00:02:00,270 --> 00:02:03,790
pretty killer

00:02:01,020 --> 00:02:05,320
you can find out in a heartbeat if maybe

00:02:03,790 --> 00:02:07,570
you need to do some upgrading or

00:02:05,320 --> 00:02:12,390
something like that you can also see the

00:02:07,570 --> 00:02:15,400
pods that are used on the box itself

00:02:12,390 --> 00:02:18,850
okay so now we're going to now let's

00:02:15,400 --> 00:02:36,730
let's label something we can use the

00:02:18,850 --> 00:02:49,959
label yeah backlit keyboard so yeah what

00:02:36,730 --> 00:02:58,630
is going on am i doing that's the most

00:02:49,959 --> 00:03:02,680
amazing thing ever okay so let's label

00:02:58,630 --> 00:03:06,700
so let's label something um so let's

00:03:02,680 --> 00:03:08,500
label something on let's see what's your

00:03:06,700 --> 00:03:17,190
favorite food since you gave me your

00:03:08,500 --> 00:03:17,190
phone curry okay yeah

00:03:19,120 --> 00:03:25,720
okay like I said I can label like I said

00:03:22,720 --> 00:03:28,470
I can label things if I do is keep CTL

00:03:25,720 --> 00:03:33,190
get nodes we can see that we now have a

00:03:28,470 --> 00:03:35,409
favorite food of Curie a note that is

00:03:33,190 --> 00:03:45,129
decided not to be running over then

00:03:35,409 --> 00:03:47,530
there's back welcome back like so kuber

00:03:45,129 --> 00:03:49,180
Denny's has a concept called a service

00:03:47,530 --> 00:03:52,480
account in which you can communicate

00:03:49,180 --> 00:03:56,140
back the API so I would suspect that it

00:03:52,480 --> 00:03:58,000
would be available through that so here

00:03:56,140 --> 00:04:01,230
we go so if we want to do so if we want

00:03:58,000 --> 00:04:05,799
to do a selector query we do get node

00:04:01,230 --> 00:04:10,329
dash L let me guess a food hurry we get

00:04:05,799 --> 00:04:12,010
the one back so that's pretty cool like

00:04:10,329 --> 00:04:14,170
I said this is really helpful if you

00:04:12,010 --> 00:04:16,449
have say nodes that are in different

00:04:14,170 --> 00:04:18,100
regions or indifferent rats inside a

00:04:16,449 --> 00:04:21,010
particular data center that's really the

00:04:18,100 --> 00:04:22,720
information but say there's a

00:04:21,010 --> 00:04:26,710
possibility that at some point we really

00:04:22,720 --> 00:04:28,450
don't want that label anymore sorry we

00:04:26,710 --> 00:04:31,410
can just throw in the key name the label

00:04:28,450 --> 00:04:34,300
key name and a dash and it pops it off

00:04:31,410 --> 00:04:38,950
so if I do my search again I get nothing

00:04:34,300 --> 00:04:44,380
back but it's still there hopefully

00:04:38,950 --> 00:04:45,910
working okay so a little bit of

00:04:44,380 --> 00:04:49,840
administrative but now let's get into

00:04:45,910 --> 00:04:51,400
some more interesting things one of the

00:04:49,840 --> 00:04:53,949
nice things about docker containers is

00:04:51,400 --> 00:04:56,530
we can scale and it's pretty it's pretty

00:04:53,949 --> 00:05:01,560
straightforward to scale in Cooper

00:04:56,530 --> 00:05:04,900
daddy's for cube CTL is incredibly easy

00:05:01,560 --> 00:05:09,010
it's incurable easy to scale using the

00:05:04,900 --> 00:05:11,110
scale using the scale firm and so you

00:05:09,010 --> 00:05:13,449
see there I have two ponds I'm going to

00:05:11,110 --> 00:05:14,740
do for replicas and I'm going to scale

00:05:13,449 --> 00:05:16,380
off my replication control learning

00:05:14,740 --> 00:05:20,880
block controller which was

00:05:16,380 --> 00:05:25,530
folder that created earlier and I spell

00:05:20,880 --> 00:05:31,110
rough this wrong it's about right yeah

00:05:25,530 --> 00:05:32,550
that's a trick so so now we scaled up we

00:05:31,110 --> 00:05:34,020
can with our pods again we can see that

00:05:32,550 --> 00:05:37,430
we have two new ones that are seven

00:05:34,020 --> 00:05:37,430
seconds old instead of seven hours

00:05:38,960 --> 00:05:47,700
they're up and ready to go so that's

00:05:42,240 --> 00:05:49,320
pretty cool we can i'm going to scale

00:05:47,700 --> 00:05:51,780
these back down because i'm going to do

00:05:49,320 --> 00:05:57,240
a demonstration shortly that's going to

00:05:51,780 --> 00:06:00,630
take a lot longer if I don't so scale

00:05:57,240 --> 00:06:09,720
back to to get pods and there we go it

00:06:00,630 --> 00:06:12,240
kept you that's pretty cool so I think

00:06:09,720 --> 00:06:14,610
so this is the first time I've never

00:06:12,240 --> 00:06:16,290
seen it do that and it's also doing

00:06:14,610 --> 00:06:19,740
things like telling me I have a seven

00:06:16,290 --> 00:06:23,040
hour old pod I think that I'm hitting

00:06:19,740 --> 00:06:25,920
some sort of weird I think I'm hitting

00:06:23,040 --> 00:06:28,020
some sort of weirdness because once i

00:06:25,920 --> 00:06:30,540
had my cluster working once i was here

00:06:28,020 --> 00:06:32,100
in ohio I didn't mess with it because I

00:06:30,540 --> 00:06:35,910
felt like that was just dancing with

00:06:32,100 --> 00:06:38,520
disaster so tip every other time I've

00:06:35,910 --> 00:06:40,140
seen it do that every other time I've

00:06:38,520 --> 00:06:43,110
done this it's kept the tube youngest

00:06:40,140 --> 00:06:44,550
I'm not sure that I'm not going to make

00:06:43,110 --> 00:06:46,500
the claim that that's what it's supposed

00:06:44,550 --> 00:06:48,770
to do but I think this is just some

00:06:46,500 --> 00:06:48,770
weirdness

00:06:50,900 --> 00:06:54,410
not particularly

00:07:23,590 --> 00:07:33,420
so Cooper Nettie's itself my knowledge

00:07:26,020 --> 00:07:33,420
does not provide that um I would suspect

00:07:43,479 --> 00:07:47,449
to your question on triggering any

00:07:45,979 --> 00:07:49,400
substance to my knowledge doesn't

00:07:47,449 --> 00:07:52,190
support something like that you could

00:07:49,400 --> 00:07:55,729
theoretically you could theoretically do

00:07:52,190 --> 00:07:57,199
that yourself one of the one of the

00:07:55,729 --> 00:08:00,139
things about Cooper Nettie's is that it

00:07:57,199 --> 00:08:02,240
takes strides to not to do its best off

00:08:00,139 --> 00:08:05,900
of force an application lifecycle on you

00:08:02,240 --> 00:08:09,320
if it can't it can if it can if it can

00:08:05,900 --> 00:08:10,669
get away with it um but the API I would

00:08:09,320 --> 00:08:12,199
think would be robust enough that you

00:08:10,669 --> 00:08:18,680
could probably do something like that

00:08:12,199 --> 00:08:20,030
yourself so I am running I'm running a

00:08:18,680 --> 00:08:21,440
long time so let me get through these

00:08:20,030 --> 00:08:27,020
last few demonstrations and I'll take

00:08:21,440 --> 00:08:28,880
questions um okay so now we've got

00:08:27,020 --> 00:08:30,380
controllers so let's look at some

00:08:28,880 --> 00:08:32,479
debugging let's look at the some

00:08:30,380 --> 00:08:34,370
debugging stuff that we can do one of

00:08:32,479 --> 00:08:38,680
the things that we can do is we can get

00:08:34,370 --> 00:08:41,539
logs is awaking it logs or a particular

00:08:38,680 --> 00:08:43,459
pod similarly to how we would with

00:08:41,539 --> 00:08:46,610
docker similarly to how we would with

00:08:43,459 --> 00:08:48,830
dr. Bacher lawns so if you do that

00:08:46,610 --> 00:08:51,709
that's the that is the log that's coming

00:08:48,830 --> 00:08:53,120
back from the container within my this

00:08:51,709 --> 00:08:55,520
coming back from the container within my

00:08:53,120 --> 00:08:57,380
pot if I have more than one container I

00:08:55,520 --> 00:08:59,600
have to specify the container by name

00:08:57,380 --> 00:09:01,540
but for a situation where I have a pod

00:08:59,600 --> 00:09:04,010
only one container in it I can just say

00:09:01,540 --> 00:09:06,440
give me the loss for the pod and then

00:09:04,010 --> 00:09:07,880
there it is it gives me that the other

00:09:06,440 --> 00:09:09,650
nice thing that you can do is if you're

00:09:07,880 --> 00:09:11,480
got something funky going on you can

00:09:09,650 --> 00:09:14,690
actually follow the logs by slapping

00:09:11,480 --> 00:09:16,310
adapt their chef in there and anything

00:09:14,690 --> 00:09:18,650
that this thing does it's going to

00:09:16,310 --> 00:09:20,660
follow there is a current there is a

00:09:18,650 --> 00:09:23,870
current log out there that this times

00:09:20,660 --> 00:09:26,360
out pretty quickly so if you use this

00:09:23,870 --> 00:09:29,029
you might have to follow a couple times

00:09:26,360 --> 00:09:33,740
if it disconnects it's an active github

00:09:29,029 --> 00:09:37,250
ticket they're talking about it okay so

00:09:33,740 --> 00:09:39,350
that's so that's cool we can also do as

00:09:37,250 --> 00:09:41,930
we can and dr. we can actually do is

00:09:39,350 --> 00:09:44,600
Zack you can actually execute things

00:09:41,930 --> 00:09:48,740
inside the pod and find out information

00:09:44,600 --> 00:09:50,690
about it and so here I can executed PS

00:09:48,740 --> 00:09:51,920
inside of one inside of one of my pods

00:09:50,690 --> 00:09:54,440
and shows me

00:09:51,920 --> 00:09:57,800
I in genetics process the worker process

00:09:54,440 --> 00:09:59,570
and then the fact that our MPs can also

00:09:57,800 --> 00:10:02,180
do enter if you can also go in there and

00:09:59,570 --> 00:10:05,889
interact with it do interactive things

00:10:02,180 --> 00:10:10,430
with it so here I've opened up a shell

00:10:05,889 --> 00:10:12,829
here's that I can see into my web

00:10:10,430 --> 00:10:15,560
directory I can type things right

00:10:12,829 --> 00:10:17,449
there's my files so you can do things

00:10:15,560 --> 00:10:18,709
like that if the situation gets Guyer

00:10:17,449 --> 00:10:24,050
and you want to start mucking about

00:10:18,709 --> 00:10:26,269
inside of the container so now let's

00:10:24,050 --> 00:10:32,149
create a service now it's a knowledge

00:10:26,269 --> 00:10:34,250
crear service just looking to see how

00:10:32,149 --> 00:10:37,550
much time I've got okay so here's our

00:10:34,250 --> 00:10:38,839
service it works similar some things are

00:10:37,550 --> 00:10:40,339
similar to the replication controller

00:10:38,839 --> 00:10:42,680
we've got our metadata which gives us a

00:10:40,339 --> 00:10:45,380
blah the name and our labels we have a

00:10:42,680 --> 00:10:47,240
spec we have a type there and what the

00:10:45,380 --> 00:10:48,949
type is by default services in Coober

00:10:47,240 --> 00:10:51,560
Nettie's are only available to other

00:10:48,949 --> 00:10:55,940
things in Coober Nettie's by specifying

00:10:51,560 --> 00:10:59,120
type node port cuba cuba proxy is going

00:10:55,940 --> 00:11:02,990
to open a port on a box running the cube

00:10:59,120 --> 00:11:06,320
on any no gran coupe roxy and it's going

00:11:02,990 --> 00:11:07,550
to forward my traffic inside a vm it's

00:11:06,320 --> 00:11:09,350
going to board my traveler to the proper

00:11:07,550 --> 00:11:11,420
place inside there the other type that

00:11:09,350 --> 00:11:12,529
you can use is load balancer which if

00:11:11,420 --> 00:11:14,209
you're usually if you're running in a

00:11:12,529 --> 00:11:16,370
supported and a supportive cloud

00:11:14,209 --> 00:11:18,589
provider this will actually create a

00:11:16,370 --> 00:11:21,440
load balancer for you it works in Amazon

00:11:18,589 --> 00:11:24,170
Web Services it works in google cloud

00:11:21,440 --> 00:11:28,579
engine I think it works in rackspace and

00:11:24,170 --> 00:11:29,899
can't remember the port is the ports

00:11:28,579 --> 00:11:31,730
there that's just the port that the

00:11:29,899 --> 00:11:33,350
container is the application of serving

00:11:31,730 --> 00:11:36,110
on the side of the container and then we

00:11:33,350 --> 00:11:37,819
have the selector is the blog pot so

00:11:36,110 --> 00:11:41,510
that we know where the traffic needs to

00:11:37,819 --> 00:11:43,990
go from our service to the cause so I

00:11:41,510 --> 00:11:43,990
will do

00:11:45,139 --> 00:11:51,230
service okay so we see right here so we

00:11:49,759 --> 00:11:54,139
see right here in the weeds with gives

00:11:51,230 --> 00:11:55,670
us a warning we've exposed a court we

00:11:54,139 --> 00:11:58,160
have exposed the service on external

00:11:55,670 --> 00:12:01,790
port we probably need to do some

00:11:58,160 --> 00:12:04,519
firewall stuff so at this point I'm

00:12:01,790 --> 00:12:06,519
going to pop over here and demonstrate

00:12:04,519 --> 00:12:10,089
that i'm not completely full of it oh

00:12:06,519 --> 00:12:10,089
that's cool

00:12:14,190 --> 00:12:20,920
open a new window and i'm going to open

00:12:18,010 --> 00:12:23,220
dev tools because chrome if I don't cram

00:12:20,920 --> 00:12:28,720
will awesomely cash this page for me and

00:12:23,220 --> 00:12:29,920
make me a liar so okay so we're going to

00:12:28,720 --> 00:12:33,370
hit one a bar so we're going to hit one

00:12:29,920 --> 00:12:38,040
of our lumber nodes running inside of my

00:12:33,370 --> 00:12:38,040
cluster on that port

00:12:42,699 --> 00:12:51,699
come on really slow

00:12:58,590 --> 00:13:04,710
Oh listening on that one okay okay so

00:13:02,280 --> 00:13:06,150
there is there's probably something

00:13:04,710 --> 00:13:08,490
wrong with my note that was the note

00:13:06,150 --> 00:13:10,680
that flash not ready so I should have

00:13:08,490 --> 00:13:12,920
known better didn't pick that one so

00:13:10,680 --> 00:13:17,010
anyway so here's my net so here's my own

00:13:12,920 --> 00:13:18,210
so here's my blog running inside of

00:13:17,010 --> 00:13:22,080
different endings inside of my container

00:13:18,210 --> 00:13:26,880
I like to do go development so I don't

00:13:22,080 --> 00:13:29,370
worry much not a good blogger my talks

00:13:26,880 --> 00:13:32,030
page is pretty bad and I'm here giving a

00:13:29,370 --> 00:13:36,170
talk now pleasure probably update that

00:13:32,030 --> 00:13:40,320
so now I'm going to do the Kuti grass

00:13:36,170 --> 00:13:42,440
and I'm going to do a rolling update to

00:13:40,320 --> 00:13:46,650
a deploy the inversion of my blog and

00:13:42,440 --> 00:13:52,320
hope that it works because the demo her

00:13:46,650 --> 00:13:54,770
gone swimmingly so far the verb for

00:13:52,320 --> 00:13:57,570
keeps etiology that is rolling update

00:13:54,770 --> 00:14:01,700
I'm going to provide an image and the

00:13:57,570 --> 00:14:05,580
image is quite I oh hell Cecil Cal Cecil

00:14:01,700 --> 00:14:07,320
Fox and I'm going to specify the

00:14:05,580 --> 00:14:08,430
controller that I want to control the

00:14:07,320 --> 00:14:13,920
replication controller that I want to

00:14:08,430 --> 00:14:15,510
update so what's happening at this point

00:14:13,920 --> 00:14:17,700
is it Cooper Nettie's at this exact

00:14:15,510 --> 00:14:19,380
moment is creating a new clock is

00:14:17,700 --> 00:14:21,960
creating a new controller and it's

00:14:19,380 --> 00:14:24,300
spinning up a replica inside of the new

00:14:21,960 --> 00:14:27,240
replication controller at the same time

00:14:24,300 --> 00:14:28,710
it's spinning down replicas inside of

00:14:27,240 --> 00:14:31,380
the other side of the other controller

00:14:28,710 --> 00:14:34,200
it's attempting to do this it's doing

00:14:31,380 --> 00:14:36,840
this in an attempt to make sure that you

00:14:34,200 --> 00:14:39,470
that things are stay up and that things

00:14:36,840 --> 00:14:45,950
are still there and alignment responding

00:14:39,470 --> 00:14:47,600
so if we pop back over here

00:14:45,950 --> 00:14:49,430
he's that you had a bunch of stuff that

00:14:47,600 --> 00:14:56,270
basically make sure that the service is

00:14:49,430 --> 00:14:58,790
always yes yes and in fact you can

00:14:56,270 --> 00:15:01,460
actually pass in members here that's not

00:14:58,790 --> 00:15:03,980
that you can actually you can actually

00:15:01,460 --> 00:15:07,550
pass in parameters to make it take its

00:15:03,980 --> 00:15:08,720
time it goes slower to make sure that if

00:15:07,550 --> 00:15:10,610
you want to be less aggressive about

00:15:08,720 --> 00:15:13,160
rolling things over it can take longer

00:15:10,610 --> 00:15:16,520
the default here the default i think is

00:15:13,160 --> 00:15:20,050
a minute but that's why i reduce from

00:15:16,520 --> 00:15:20,050
four to two or this would be really long

00:15:26,230 --> 00:15:31,190
so Cooper nutty is going to make a check

00:15:29,000 --> 00:15:32,630
it's going to do it's difficult help

00:15:31,190 --> 00:15:35,900
check the trimmer netting we're going to

00:15:32,630 --> 00:15:37,160
make the health check such that it's

00:15:35,900 --> 00:15:39,710
going to make checks to make sure the

00:15:37,160 --> 00:15:41,420
container is alive and then it can also

00:15:39,710 --> 00:15:44,450
do an HTTP check to make sure

00:15:41,420 --> 00:15:47,240
application is running however as things

00:15:44,450 --> 00:15:49,280
currently stand kuber name is can't you

00:15:47,240 --> 00:15:52,280
know won't do a roll back to an old

00:15:49,280 --> 00:15:54,590
version however that is I believe that

00:15:52,280 --> 00:15:56,000
being talked about so that's something

00:15:54,590 --> 00:15:58,640
that that's something that people have

00:15:56,000 --> 00:16:01,370
said we'd like to sound of that you know

00:15:58,640 --> 00:16:07,130
we would love to see that please give it

00:16:01,370 --> 00:16:08,600
to us so you can you can config you can

00:16:07,130 --> 00:16:11,150
configure within I think the pod

00:16:08,600 --> 00:16:15,920
specification I think cool so if you see

00:16:11,150 --> 00:16:18,520
here our website look at that I still

00:16:15,920 --> 00:16:22,340
didn't really put anything there but ok

00:16:18,520 --> 00:16:28,720
so it finish it's still finishing on the

00:16:22,340 --> 00:16:28,720
other node yeah service with a smile

00:16:30,110 --> 00:16:40,530
that node may just be hope yeah but hey

00:16:35,940 --> 00:16:43,650
most of it worked I think that's

00:16:40,530 --> 00:16:44,700
probably just weirdness with my I think

00:16:43,650 --> 00:16:49,400
that should weirdness with that

00:16:44,700 --> 00:16:49,400
particular favorite may current host a

00:16:49,580 --> 00:16:55,350
little bit shut down huh is that one of

00:16:52,770 --> 00:16:57,000
them to shut down when you that was the

00:16:55,350 --> 00:16:59,250
know that whenever I made the comment

00:16:57,000 --> 00:17:00,270
that it was popping up as not ready that

00:16:59,250 --> 00:17:02,820
was the one that was being a little

00:17:00,270 --> 00:17:04,829
weird so I think it's just something

00:17:02,820 --> 00:17:06,900
where I've been coming in and out of

00:17:04,829 --> 00:17:09,959
sleep and stuff like that and I think

00:17:06,900 --> 00:17:15,079
I've just put it a bad state but it

00:17:09,959 --> 00:17:20,400
works most of the time so so anyway that

00:17:15,079 --> 00:17:22,050
is all I have it is 449 now i think i

00:17:20,400 --> 00:17:25,230
have probably a couple minutes for

00:17:22,050 --> 00:17:27,180
questions and then i'll be here i will

00:17:25,230 --> 00:17:28,740
be here through the after party who I

00:17:27,180 --> 00:17:30,900
hang out talk about tree benetti's about

00:17:28,740 --> 00:17:32,880
to talk about it and I would like to

00:17:30,900 --> 00:17:35,610
while I'm up here I would like to be on

00:17:32,880 --> 00:17:37,800
the safe box per second and say this is

00:17:35,610 --> 00:17:39,810
the most exciting time that I think

00:17:37,800 --> 00:17:42,180
we've been in a long time for

00:17:39,810 --> 00:17:44,640
infrastructure and things like that but

00:17:42,180 --> 00:17:46,470
the concept of with the concept of

00:17:44,640 --> 00:17:51,080
containers and unit kernels and things

00:17:46,470 --> 00:17:53,460
like that it's an amazing time for us I

00:17:51,080 --> 00:17:55,410
want to encourage every person in this

00:17:53,460 --> 00:17:59,010
room to go out and contribute to this

00:17:55,410 --> 00:18:01,530
conversation blog blog about it do some

00:17:59,010 --> 00:18:03,900
do some pull requests just play and

00:18:01,530 --> 00:18:05,640
learn and share what you learn and if

00:18:03,900 --> 00:18:07,560
you're looking for a place to contribute

00:18:05,640 --> 00:18:10,140
open an open source and you want to get

00:18:07,560 --> 00:18:11,640
started I personally think you can't do

00:18:10,140 --> 00:18:13,950
wrong with the Cooper Nettie's community

00:18:11,640 --> 00:18:16,290
they're incredibly welcome incredibly

00:18:13,950 --> 00:18:19,010
helpful and they're willing and they're

00:18:16,290 --> 00:18:21,030
willing to pair with you to help you out

00:18:19,010 --> 00:18:23,400
to make sure that you can meet your

00:18:21,030 --> 00:18:25,290
goals you want to start it in a

00:18:23,400 --> 00:18:27,060
community I think human it is

00:18:25,290 --> 00:18:29,220
way to go that no matter what what's

00:18:27,060 --> 00:18:32,430
important to me is it we're all part of

00:18:29,220 --> 00:18:35,220
this conversation so step out my soapbox

00:18:32,430 --> 00:18:37,320
let's hear some questions one of the

00:18:35,220 --> 00:18:53,280
storage backends timeless providers for

00:18:37,320 --> 00:18:55,260
example so the question so the question

00:18:53,280 --> 00:18:58,530
is is our data volumes tied to the

00:18:55,260 --> 00:19:01,260
provider um so I don't know so I'm going

00:18:58,530 --> 00:19:05,460
to WS engineer by day and I guess by

00:19:01,260 --> 00:19:07,590
nine I don't know the thing about some

00:19:05,460 --> 00:19:09,060
of the thing in AWS is that you have the

00:19:07,590 --> 00:19:10,980
concept of iron roles that provide

00:19:09,060 --> 00:19:12,660
credentials to your boxes and so then

00:19:10,980 --> 00:19:14,310
you don't have to provide configuration

00:19:12,660 --> 00:19:17,900
your daddy's will get that out of that

00:19:14,310 --> 00:19:20,160
information you I would suspect

00:19:17,900 --> 00:19:22,620
disclaimer i have no idea that i do

00:19:20,160 --> 00:19:25,560
think what you could probably do is you

00:19:22,620 --> 00:19:27,300
can probably provide AWS API keys well

00:19:25,560 --> 00:19:28,770
actually no they BBS fine you couldn't

00:19:27,300 --> 00:19:32,220
do that because they wouldn't let you

00:19:28,770 --> 00:19:34,230
mount that outside of so okay so let me

00:19:32,220 --> 00:19:37,620
back up and take the BS out of what i

00:19:34,230 --> 00:19:39,990
just said i don't think so however what

00:19:37,620 --> 00:19:42,120
I do think you could probably do is you

00:19:39,990 --> 00:19:44,100
could probably use some kind of NFS

00:19:42,120 --> 00:19:46,800
solution that's hosted in AWS would be

00:19:44,100 --> 00:19:49,710
with peering into the cloud to be able

00:19:46,800 --> 00:19:51,840
to get something like the same thing so

00:19:49,710 --> 00:19:54,330
let me so let me back that up unless the

00:19:51,840 --> 00:19:57,030
cloud provider would support mounting a

00:19:54,330 --> 00:19:59,790
volume to some external to some external

00:19:57,030 --> 00:20:03,140
device it would not but I think you

00:19:59,790 --> 00:20:03,140
could find a way around it if you were

00:20:08,919 --> 00:20:15,559
work yeah I mean s3 you can write pretty

00:20:13,820 --> 00:20:18,740
much as long as you have a proper API

00:20:15,559 --> 00:20:20,240
key so that you can do it just it

00:20:18,740 --> 00:20:22,840
depends on the item depends on the

00:20:20,240 --> 00:20:28,879
surface I think if the real answer here

00:20:22,840 --> 00:20:31,700
or questions hey the master server goes

00:20:28,879 --> 00:20:35,600
down because they're a failover run as a

00:20:31,700 --> 00:20:36,740
normal backer so so there's okay so the

00:20:35,600 --> 00:20:39,169
question I think there were two

00:20:36,740 --> 00:20:41,090
questions there number one what about

00:20:39,169 --> 00:20:43,249
high availability and dock in urban

00:20:41,090 --> 00:20:45,379
Eddie's right and the second is can you

00:20:43,249 --> 00:20:47,629
run inside a docker container the first

00:20:45,379 --> 00:20:49,759
the first answer is currently there is

00:20:47,629 --> 00:20:52,399
there's not really a high availability

00:20:49,759 --> 00:20:57,619
setup but their work but there's a

00:20:52,399 --> 00:21:02,749
special interest group or comment in my

00:20:57,619 --> 00:21:06,649
in my experience in my experience in AWS

00:21:02,749 --> 00:21:08,990
your master going down if your master

00:21:06,649 --> 00:21:10,639
goes down if your pods reconnect it's

00:21:08,990 --> 00:21:13,940
probably going to wipe out a lot of your

00:21:10,639 --> 00:21:15,230
containers and come back and so that's

00:21:13,940 --> 00:21:18,440
an area that needs work but they're

00:21:15,230 --> 00:21:21,169
actively working on the second question

00:21:18,440 --> 00:21:25,309
is about containers to my knowledge i

00:21:21,169 --> 00:21:26,960
think that the only thing thus far there

00:21:25,309 --> 00:21:28,490
was one component that they stuck in a

00:21:26,960 --> 00:21:30,499
docker container but they were dealing

00:21:28,490 --> 00:21:32,269
with challenges they were dealing with

00:21:30,499 --> 00:21:35,899
challenges around container izing some

00:21:32,269 --> 00:21:38,659
of these things currently so currently I

00:21:35,899 --> 00:21:43,070
think the best thing to do is to run it

00:21:38,659 --> 00:21:45,499
on on bare metal but again work in

00:21:43,070 --> 00:21:49,600
progress does that answer the that

00:21:45,499 --> 00:21:49,600
answer your question is though

00:21:50,000 --> 00:21:56,490
in my in my experience if it comes back

00:21:53,010 --> 00:22:01,260
up I've seen it wipe out my I've seen it

00:21:56,490 --> 00:22:03,120
wipe out my containers I this was with

00:22:01,260 --> 00:22:04,800
an older version I haven't seen what it

00:22:03,120 --> 00:22:06,420
would do recently and I know that high

00:22:04,800 --> 00:22:18,870
availability is in the work because that

00:22:06,420 --> 00:22:21,240
is a concern fell over the server that's

00:22:18,870 --> 00:22:30,150
not currently but that's part of what's

00:22:21,240 --> 00:22:32,670
being discussed and designed sir yes we

00:22:30,150 --> 00:22:37,440
are um actually yes I would love to tell

00:22:32,670 --> 00:22:40,080
you about that so so we've so in a so

00:22:37,440 --> 00:22:42,540
realtor calm Morgantown we've got to

00:22:40,080 --> 00:22:44,910
Cooper Nettie's clusters we have the

00:22:42,540 --> 00:22:46,560
cluster that I maintain it was the first

00:22:44,910 --> 00:22:49,230
cluster that we had in production

00:22:46,560 --> 00:22:52,590
currently it runs about 400 pods that

00:22:49,230 --> 00:22:56,220
deal primarily with running processes

00:22:52,590 --> 00:22:58,790
that sinicae data the second thing that

00:22:56,220 --> 00:23:03,630
we have the second cluster that we have

00:22:58,790 --> 00:23:05,220
is actually i think is it Leon is it

00:23:03,630 --> 00:23:09,000
running danced you know it's running

00:23:05,220 --> 00:23:10,500
okay it's a second it's a secondary it's

00:23:09,000 --> 00:23:13,080
dance on top of queue pernetti's and

00:23:10,500 --> 00:23:18,450
it's tasked with the infrastructure for

00:23:13,080 --> 00:23:22,230
example if ozar gabbana grip on setup it

00:23:18,450 --> 00:23:25,700
does song yeah we could we put a job

00:23:22,230 --> 00:23:29,820
system in there well I didn't they did

00:23:25,700 --> 00:23:33,210
yeah run since ooh ok though there since

00:23:29,820 --> 00:23:35,640
you stuff some examples but yeah we have

00:23:33,210 --> 00:23:37,380
to one of the powers infrastructure but

00:23:35,640 --> 00:23:40,850
then ours is at seduction and we're

00:23:37,380 --> 00:23:40,850
looking at putting more into production

00:23:42,020 --> 00:23:48,470
hey any container distribution options

00:23:56,880 --> 00:24:00,270
not that I know of it you've asked a

00:23:58,800 --> 00:24:04,020
very interesting question that I'm going

00:24:00,270 --> 00:24:05,460
to go Google later so i don't know if

00:24:04,020 --> 00:24:09,120
that's it that's interesting i'm going

00:24:05,460 --> 00:24:20,580
to google that later um yeah I don't

00:24:09,120 --> 00:24:23,850
know sorry ok oh the containers how we

00:24:20,580 --> 00:24:27,570
monitor the containers ok um coo burning

00:24:23,850 --> 00:24:32,040
stoves bare-bones making how much ok I'm

00:24:27,570 --> 00:24:36,090
going to read the next time here ok I'll

00:24:32,040 --> 00:24:38,430
do this one of them done um so pretty

00:24:36,090 --> 00:24:40,470
much to Bernie's will be basic checks

00:24:38,430 --> 00:24:41,640
like I said it'll check to the dr gamer

00:24:40,470 --> 00:24:44,960
to make sure the entertainer is healthy

00:24:41,640 --> 00:24:49,230
and then you can do HTTP checks we have

00:24:44,960 --> 00:24:53,550
we have we have systems in place using

00:24:49,230 --> 00:24:54,870
sensu that monitors and our cluster one

00:24:53,550 --> 00:24:56,670
of the things that they've been really

00:24:54,870 --> 00:24:59,880
looking at is using Prometheus which is

00:24:56,670 --> 00:25:02,250
a golang which is it going solution that

00:24:59,880 --> 00:25:04,440
I think does something similar and

00:25:02,250 --> 00:25:06,470
they're talking about doing that more

00:25:04,440 --> 00:25:09,080
but I think ultimately what

00:25:06,470 --> 00:25:10,970
two is if you're going to want to do

00:25:09,080 --> 00:25:14,480
something yourself to make sure you're

00:25:10,970 --> 00:25:18,980
healthy everybody's will only do so much

00:25:14,480 --> 00:25:23,960
for you have my contact information oh I

00:25:18,980 --> 00:25:28,880
had that um I had selected so I love

00:25:23,960 --> 00:25:30,650
getting right there I love getting email

00:25:28,880 --> 00:25:33,500
follow me on Twitter a talk about video

00:25:30,650 --> 00:25:35,750
games text off whatever a little talk

00:25:33,500 --> 00:25:40,330
with people that's my website I blog

00:25:35,750 --> 00:25:40,330

YouTube URL: https://www.youtube.com/watch?v=hwA6W_N7nrg


