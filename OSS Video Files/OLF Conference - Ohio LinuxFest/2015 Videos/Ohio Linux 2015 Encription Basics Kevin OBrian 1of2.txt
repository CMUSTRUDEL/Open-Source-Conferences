Title: Ohio Linux 2015 Encription Basics Kevin OBrian 1of2
Publication date: 2016-01-12
Playlist: 2015 Videos
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:07,109
welcome it's a just about one o'clock

00:00:03,120 --> 00:00:09,960
i'm kevin o'brien and i'm going to do a

00:00:07,109 --> 00:00:13,830
presentation on the fundamentals of

00:00:09,960 --> 00:00:17,490
encryption i'm hoping that i can get

00:00:13,830 --> 00:00:20,340
through all of this if not i have a

00:00:17,490 --> 00:00:25,619
website i don't know if you can read

00:00:20,340 --> 00:00:30,390
that up there z wi l and I k.com is the

00:00:25,619 --> 00:00:33,500
site and all of my slide shows are up

00:00:30,390 --> 00:00:38,430
there everything is creative commons

00:00:33,500 --> 00:00:41,700
attribution share-alike licensed so if

00:00:38,430 --> 00:00:50,730
you download it reuse it whatever ohio

00:00:41,700 --> 00:00:52,440
links 2015 ok also i might as well

00:00:50,730 --> 00:00:54,570
mention because someone asked me about

00:00:52,440 --> 00:00:58,770
it a few minutes ago I record shows for

00:00:54,570 --> 00:01:01,079
hacker public radio and I have shows

00:00:58,770 --> 00:01:03,600
there on security as well as on

00:01:01,079 --> 00:01:06,600
LibreOffice which are two of the things

00:01:03,600 --> 00:01:12,600
that I've been involved with so there's

00:01:06,600 --> 00:01:16,580
a lot of material there as well enough

00:01:12,600 --> 00:01:16,580
of this shameless self-promotion

00:01:25,110 --> 00:01:29,280
so as I said I was a little bit worried

00:01:28,080 --> 00:01:31,800
about whether I could get through

00:01:29,280 --> 00:01:34,080
everything so I dropped a few of the

00:01:31,800 --> 00:01:37,920
initial slides that went through the

00:01:34,080 --> 00:01:41,880
history of this if you really want to

00:01:37,920 --> 00:01:44,310
know about the history of hidden writing

00:01:41,880 --> 00:01:48,979
which is literally what cryptography

00:01:44,310 --> 00:01:52,200
needs cryptos is hidden graafian is

00:01:48,979 --> 00:01:56,130
greek for writing you know you get the

00:01:52,200 --> 00:01:57,509
whole slide deck and see it you know

00:01:56,130 --> 00:01:59,910
we've been doing this stuff for a long

00:01:57,509 --> 00:02:02,009
time that you know Julius Caesar used

00:01:59,910 --> 00:02:05,400
something called a Caesar cipher which

00:02:02,009 --> 00:02:07,410
is if you've ever used rot13 that's a

00:02:05,400 --> 00:02:12,390
Caesar cipher you know everything gets

00:02:07,410 --> 00:02:16,140
moved the same amount slightly better is

00:02:12,390 --> 00:02:17,970
a substitution cipher and you may have

00:02:16,140 --> 00:02:21,590
seen in the newspaper those kind of

00:02:17,970 --> 00:02:24,530
brain teasers to decode something

00:02:21,590 --> 00:02:26,340
obviously they're not that hard

00:02:24,530 --> 00:02:30,930
otherwise it would be in the newspaper

00:02:26,340 --> 00:02:32,459
for everyone to do and the reason is

00:02:30,930 --> 00:02:39,150
there something are subject to

00:02:32,459 --> 00:02:42,000
statistical analysis so you may this was

00:02:39,150 --> 00:02:44,070
actually shown in the ninth century so

00:02:42,000 --> 00:02:46,019
it's been known for quite a long time so

00:02:44,070 --> 00:02:48,120
in English we know that certain letters

00:02:46,019 --> 00:02:52,769
are more frequent than others there are

00:02:48,120 --> 00:02:56,850
certain combinations that happen and so

00:02:52,769 --> 00:02:58,200
in the 19th century Frenchman came up

00:02:56,850 --> 00:03:01,200
with something called the Visionaire

00:02:58,200 --> 00:03:03,860
square and this was a technique that

00:03:01,200 --> 00:03:09,450
would allow you to do a substitution

00:03:03,860 --> 00:03:14,269
where the letter substituted changed

00:03:09,450 --> 00:03:19,110
every time you did a another character

00:03:14,269 --> 00:03:21,570
and it's it's not bad if it's reused

00:03:19,110 --> 00:03:23,310
however it can also be statistically

00:03:21,570 --> 00:03:26,250
analyzed as we've shown by Charles

00:03:23,310 --> 00:03:30,019
Babbage and yes it is that Charles

00:03:26,250 --> 00:03:30,019
Babbage computer guy

00:03:31,700 --> 00:03:39,530
so one-time pads is an application of

00:03:35,989 --> 00:03:43,069
the Visionaire square whereby you would

00:03:39,530 --> 00:03:45,980
have pads made up and you would use you

00:03:43,069 --> 00:03:48,440
take the top sheet you use it to encrypt

00:03:45,980 --> 00:03:50,030
a message and take that sheet off and

00:03:48,440 --> 00:03:55,880
throw it away you would never reuse it

00:03:50,030 --> 00:03:58,250
again that's actually pretty secure but

00:03:55,880 --> 00:04:05,510
there's a problem here which is how do

00:03:58,250 --> 00:04:07,069
you distribute this pad so if you're

00:04:05,510 --> 00:04:08,720
going to use it among a number of

00:04:07,069 --> 00:04:10,430
different correspondents you have to

00:04:08,720 --> 00:04:12,470
distribute a number of different copies

00:04:10,430 --> 00:04:16,400
of the same pad all it takes is for one

00:04:12,470 --> 00:04:19,970
of them to be looked at by an enemy and

00:04:16,400 --> 00:04:22,190
you have no security so this question of

00:04:19,970 --> 00:04:26,450
how you can distribute these things is

00:04:22,190 --> 00:04:30,229
really key now there have also been some

00:04:26,450 --> 00:04:32,090
mechanical things like the captain

00:04:30,229 --> 00:04:34,190
midnight decoder ring which is really

00:04:32,090 --> 00:04:38,330
just another Caesar cipher everything is

00:04:34,190 --> 00:04:42,169
rotated the same amount then there's the

00:04:38,330 --> 00:04:44,900
Enigma machine now we've got a movie

00:04:42,169 --> 00:04:47,840
about all of that recently very

00:04:44,900 --> 00:04:49,250
interesting movie about touring and the

00:04:47,840 --> 00:04:53,120
people in England's trying to figure

00:04:49,250 --> 00:04:55,850
that out basically the Enigma was just a

00:04:53,120 --> 00:04:59,389
really really complicated mechanical

00:04:55,850 --> 00:05:02,030
device you would have a number of

00:04:59,389 --> 00:05:05,300
different disks each disk would be

00:05:02,030 --> 00:05:09,910
rotated after encrypting after changing

00:05:05,300 --> 00:05:12,350
one letter but a group of Polish

00:05:09,910 --> 00:05:15,050
scientists figured out how to analyze

00:05:12,350 --> 00:05:18,620
this stuff passed it along to the

00:05:15,050 --> 00:05:20,830
British and in Bletchley Park they set

00:05:18,620 --> 00:05:25,099
up an operation to decode these things

00:05:20,830 --> 00:05:28,729
and what we're dealing with here is the

00:05:25,099 --> 00:05:31,039
whole question of randomness and random

00:05:28,729 --> 00:05:33,080
is something that I think a lot of

00:05:31,039 --> 00:05:36,370
people don't entirely understand what it

00:05:33,080 --> 00:05:42,050
means to be random it is really the key

00:05:36,370 --> 00:05:44,500
to all of this stuff enigma was flawed

00:05:42,050 --> 00:05:46,990
in a couple of ways first of all

00:05:44,500 --> 00:05:50,920
generally speaking if it's a mechanical

00:05:46,990 --> 00:05:54,560
way of changing one letter to another

00:05:50,920 --> 00:05:59,480
it's not random there is no way you can

00:05:54,560 --> 00:06:01,370
mechanically create randomness and as it

00:05:59,480 --> 00:06:03,590
turns out one of the conditions with the

00:06:01,370 --> 00:06:07,400
Enigma machine that they made use of no

00:06:03,590 --> 00:06:08,870
letter could be encrypted as itself you

00:06:07,400 --> 00:06:11,990
might think well that that's not a big

00:06:08,870 --> 00:06:13,790
clue really but it turns out it's very

00:06:11,990 --> 00:06:16,130
important that you know that you know

00:06:13,790 --> 00:06:18,290
anything that gets you away from one

00:06:16,130 --> 00:06:20,630
hundred percent pure randomness is a

00:06:18,290 --> 00:06:25,220
thread that a good cryptographer can

00:06:20,630 --> 00:06:27,530
grab and do something with so with

00:06:25,220 --> 00:06:29,750
Bletchley Park what you were seeing was

00:06:27,530 --> 00:06:34,070
the first application of computers to

00:06:29,750 --> 00:06:37,040
break codes and you've not only had the

00:06:34,070 --> 00:06:40,130
bomb machines that were used against the

00:06:37,040 --> 00:06:42,350
Enigma but then a computer called

00:06:40,130 --> 00:06:45,050
Colossus that was used for the Lorenz

00:06:42,350 --> 00:06:51,320
cipher which was actually even more

00:06:45,050 --> 00:06:53,000
secure than the Enigma machine but one

00:06:51,320 --> 00:06:55,370
the way they started to realize wait a

00:06:53,000 --> 00:06:57,650
minute if computers can break codes can

00:06:55,370 --> 00:07:01,370
they create them and they started to

00:06:57,650 --> 00:07:03,140
realize yeah that is and so one of the

00:07:01,370 --> 00:07:05,360
things that is very important in

00:07:03,140 --> 00:07:08,890
understanding this technology is to

00:07:05,360 --> 00:07:13,940
understand that it's an arms race so

00:07:08,890 --> 00:07:16,610
nothing is ever secure for all time one

00:07:13,940 --> 00:07:19,010
of the things that I started hearing a

00:07:16,610 --> 00:07:20,960
few years ago was you know quantum

00:07:19,010 --> 00:07:22,280
computing is going to come along and

00:07:20,960 --> 00:07:25,970
once we have quantum computing

00:07:22,280 --> 00:07:28,610
photography is absolutely dead I'm

00:07:25,970 --> 00:07:35,080
seeing people coming up with quantum

00:07:28,610 --> 00:07:35,080
encryption all right so

00:07:35,950 --> 00:07:41,970
the main thing is you've got to stay on

00:07:38,200 --> 00:07:48,370
top of it this stuff is always changing

00:07:41,970 --> 00:07:51,250
but if you don't make a mistake it is

00:07:48,370 --> 00:07:53,820
theoretically possible to create

00:07:51,250 --> 00:07:58,630
something that is going to be pretty

00:07:53,820 --> 00:08:00,160
unbreakable for some period of time you

00:07:58,630 --> 00:08:03,070
take a look at a number of the

00:08:00,160 --> 00:08:06,670
encryption schemes and use today ni st

00:08:03,070 --> 00:08:09,220
will typically say we expect this to be

00:08:06,670 --> 00:08:12,610
unbreakable up through about the year

00:08:09,220 --> 00:08:14,910
2030 based on their estimate of how fast

00:08:12,610 --> 00:08:17,260
computing technology is going to evolve

00:08:14,910 --> 00:08:25,120
but you always want to stay on top of

00:08:17,260 --> 00:08:28,780
that now T distribution is still the big

00:08:25,120 --> 00:08:34,210
problem how how do we exchange keys with

00:08:28,780 --> 00:08:35,530
each other right so my friend Tom over

00:08:34,210 --> 00:08:37,990
there I want to send him an encrypted

00:08:35,530 --> 00:08:42,340
message and you know pay attention time

00:08:37,990 --> 00:08:44,440
is smart guy I want to send a message I

00:08:42,340 --> 00:08:46,090
kind of get a key so well he's sitting

00:08:44,440 --> 00:08:48,400
there I can just walk over and say Tom

00:08:46,090 --> 00:08:50,290
here's the key invidious well that's

00:08:48,400 --> 00:08:53,410
great if we're in the same room and no

00:08:50,290 --> 00:08:57,520
one is listening in and a few things

00:08:53,410 --> 00:09:00,490
like that but you know what if tom is at

00:08:57,520 --> 00:09:02,380
his office and I'm at my office and

00:09:00,490 --> 00:09:07,810
we're miles apart and I want to send him

00:09:02,380 --> 00:09:11,260
a message how do we do that well three

00:09:07,810 --> 00:09:14,490
people whitfield diffie martin hellman

00:09:11,260 --> 00:09:17,770
and ralph merkle solve that problem and

00:09:14,490 --> 00:09:19,420
came up with diffie-hellman merkel neat

00:09:17,770 --> 00:09:22,120
exchange now you probably heard it

00:09:19,420 --> 00:09:24,070
referred to as diffie-hellman well

00:09:22,120 --> 00:09:26,950
martin hellman said no Ralph Merkle

00:09:24,070 --> 00:09:30,070
deserves to be there so I'm going to go

00:09:26,950 --> 00:09:33,400
with that and then whitfield diffie

00:09:30,070 --> 00:09:40,300
realized oh we could do something that

00:09:33,400 --> 00:09:42,510
is a symmetric and the people who solved

00:09:40,300 --> 00:09:47,710
that problem initially

00:09:42,510 --> 00:09:51,520
ron rivest adi shamir and leonard

00:09:47,710 --> 00:09:53,530
Adelman they figured out a way to do

00:09:51,520 --> 00:09:56,440
that and it's based on the idea of a

00:09:53,530 --> 00:10:00,870
one-way function and when we say one way

00:09:56,440 --> 00:10:05,560
what we're saying is computing it is

00:10:00,870 --> 00:10:07,660
simple and easy but undoing it going in

00:10:05,560 --> 00:10:10,120
the other direction we don't say

00:10:07,660 --> 00:10:15,700
impossible we say computationally

00:10:10,120 --> 00:10:18,900
infeasible and you can do some

00:10:15,700 --> 00:10:23,830
calculations on this and I've done them

00:10:18,900 --> 00:10:25,930
and even if you are looking at Bitcoin

00:10:23,830 --> 00:10:28,450
mining rigs that can do a billion hashes

00:10:25,930 --> 00:10:29,890
per second well you know that's got to

00:10:28,450 --> 00:10:32,790
be able to do allow just make your

00:10:29,890 --> 00:10:35,410
password long and complicated enough and

00:10:32,790 --> 00:10:36,850
you can do a calculation that says well

00:10:35,410 --> 00:10:39,340
it would take longer the age of the

00:10:36,850 --> 00:10:43,600
universe to crack that with present

00:10:39,340 --> 00:10:47,050
computing technology so the RSA approach

00:10:43,600 --> 00:10:51,250
was to take a look at large prime

00:10:47,050 --> 00:10:52,810
numbers and i'll tell you right now i'm

00:10:51,250 --> 00:10:55,840
not going to get in any detailed

00:10:52,810 --> 00:10:59,620
mathematics if you want to learn modular

00:10:55,840 --> 00:11:03,780
mathematics it's interesting i don't

00:10:59,620 --> 00:11:03,780
understand it but it's very interesting

00:11:05,910 --> 00:11:12,790
so but there is a mathematical basis to

00:11:09,280 --> 00:11:16,150
all of this the idea is that you take

00:11:12,790 --> 00:11:21,730
two large prime numbers and they should

00:11:16,150 --> 00:11:25,930
be relatively near each other multiply

00:11:21,730 --> 00:11:29,640
them together and get a very large

00:11:25,930 --> 00:11:31,950
number and the reason that is

00:11:29,640 --> 00:11:35,620
computationally infeasible is

00:11:31,950 --> 00:11:39,430
discovering the prime factors of this

00:11:35,620 --> 00:11:40,900
really long number is one of those

00:11:39,430 --> 00:11:43,240
things that takes a whole lot of

00:11:40,900 --> 00:11:44,200
computing cycles and that's why we call

00:11:43,240 --> 00:11:50,920
it computation

00:11:44,200 --> 00:11:55,120
feasible the RSA procedure what they do

00:11:50,920 --> 00:11:57,610
is multiply these together do a little

00:11:55,120 --> 00:12:02,560
complicated math and then create two

00:11:57,610 --> 00:12:06,390
keys he's probably heard these referred

00:12:02,560 --> 00:12:08,980
to as the public key in the private key

00:12:06,390 --> 00:12:13,900
technically really doesn't matter which

00:12:08,980 --> 00:12:17,590
is which it's two keys and the idea here

00:12:13,900 --> 00:12:22,570
is that each key can decrypt what the

00:12:17,590 --> 00:12:28,560
other key encrypted but it cannot

00:12:22,570 --> 00:12:32,920
decrypt what it itself encrypted and

00:12:28,560 --> 00:12:34,750
that's the key and by the way we'd be

00:12:32,920 --> 00:12:36,460
very careful here you notice that I'm

00:12:34,750 --> 00:12:39,100
always talking about decrypting and

00:12:36,460 --> 00:12:41,950
encrypting if you hear someone talking

00:12:39,100 --> 00:12:45,630
about encoding and decoding those are

00:12:41,950 --> 00:12:49,750
two different things entirely all right

00:12:45,630 --> 00:12:52,750
encoding think of worse code you're not

00:12:49,750 --> 00:12:54,940
hiding anything ascii code you're not

00:12:52,750 --> 00:12:56,500
hiding it those are coding schemes we're

00:12:54,940 --> 00:13:04,900
talking encryption so they're two

00:12:56,500 --> 00:13:09,760
different concepts entirely now the RSA

00:13:04,900 --> 00:13:16,330
is not the only one out there discrete

00:13:09,760 --> 00:13:20,860
logarithm right if you are creating a a

00:13:16,330 --> 00:13:22,810
key pair in Linux at a certain point

00:13:20,860 --> 00:13:24,400
you'll be asked what kind of keep here

00:13:22,810 --> 00:13:26,560
you want to create and you'll see

00:13:24,400 --> 00:13:28,930
several choices and one of them is our

00:13:26,560 --> 00:13:32,380
essay we just talked about you might see

00:13:28,930 --> 00:13:38,500
el-gamal el-gamal is an application of

00:13:32,380 --> 00:13:43,300
the discrete logarithm then there's

00:13:38,500 --> 00:13:47,650
elliptical curve a somewhat more recent

00:13:43,300 --> 00:13:49,990
one with all of these this the basic

00:13:47,650 --> 00:13:54,130
idea that they all share is that they

00:13:49,990 --> 00:13:55,750
are easy to compute computationally

00:13:54,130 --> 00:14:01,330
infeasible to UM

00:13:55,750 --> 00:14:04,090
compute now the next thing you want to

00:14:01,330 --> 00:14:05,530
understand is symmetric vs asymmetric

00:14:04,090 --> 00:14:09,220
because when we talk about key pairs

00:14:05,530 --> 00:14:11,080
we're talking about asymmetric the key

00:14:09,220 --> 00:14:13,060
that n Crips is different from the key

00:14:11,080 --> 00:14:16,120
the decrypt that's what makes it a

00:14:13,060 --> 00:14:18,850
symmetric there's also symmetric and

00:14:16,120 --> 00:14:22,210
that's when the same key and Crips and

00:14:18,850 --> 00:14:26,740
encrypts now the thing that we want to

00:14:22,210 --> 00:14:29,920
understand is that actually symmetric is

00:14:26,740 --> 00:14:33,330
a whole lot more efficient so if you're

00:14:29,920 --> 00:14:36,040
going to do any significant amount of

00:14:33,330 --> 00:14:41,050
encrypting and decrypting you probably

00:14:36,040 --> 00:14:47,050
want to be able to do symmetric lot less

00:14:41,050 --> 00:14:49,660
CPU cycles are involved well now we've

00:14:47,050 --> 00:14:54,820
got the key distribution problem how do

00:14:49,660 --> 00:14:59,550
we distribute the key so if you take a

00:14:54,820 --> 00:15:02,050
look at and in the cryptography area

00:14:59,550 --> 00:15:04,800
there are certain canonical names for

00:15:02,050 --> 00:15:09,430
all of these it's always Alice and Bob

00:15:04,800 --> 00:15:14,410
who are trying to talk to each other Eve

00:15:09,430 --> 00:15:17,020
is the eavesdropper and then you know

00:15:14,410 --> 00:15:18,820
Mallory is the delicious person and so

00:15:17,020 --> 00:15:21,720
on so you start seeing these names

00:15:18,820 --> 00:15:31,030
that's just a little bit of

00:15:21,720 --> 00:15:33,310
cryptanalytic humor so public key which

00:15:31,030 --> 00:15:36,339
is asymmetric is where the key pair is

00:15:33,310 --> 00:15:39,460
generated and arbitrarily one of the

00:15:36,339 --> 00:15:41,050
keys is designated as private and the

00:15:39,460 --> 00:15:45,730
other as public now the thing about

00:15:41,050 --> 00:15:50,350
public is of course you can give the

00:15:45,730 --> 00:15:53,710
public key out to anyone all right my

00:15:50,350 --> 00:15:56,670
public key is printed on my webpage no

00:15:53,710 --> 00:15:56,670
reason it shouldn't be

00:15:56,750 --> 00:16:00,620
and a lot of people smarter than me do

00:15:59,420 --> 00:16:02,630
that you know you go to Bruce

00:16:00,620 --> 00:16:04,250
Schneider's webpage if you're interested

00:16:02,630 --> 00:16:08,120
in this stuff Bruce is someone you

00:16:04,250 --> 00:16:10,190
really want to follow and he's got a

00:16:08,120 --> 00:16:13,760
blog in a newsletter and all of that

00:16:10,190 --> 00:16:16,330
that I follow religiously so the public

00:16:13,760 --> 00:16:19,370
key you know you can just hand that out

00:16:16,330 --> 00:16:26,480
what you don't want to do is give out

00:16:19,370 --> 00:16:29,080
the private key and I was just it was

00:16:26,480 --> 00:16:31,490
just a story this past week about a

00:16:29,080 --> 00:16:33,500
company that made the mistake of putting

00:16:31,490 --> 00:16:35,150
their private key on a publicly

00:16:33,500 --> 00:16:41,390
accessible website where it's at for

00:16:35,150 --> 00:16:50,840
about six months so you know this stuff

00:16:41,390 --> 00:16:53,720
can work if you don't screw up now there

00:16:50,840 --> 00:16:57,020
are some standards that have been used

00:16:53,720 --> 00:17:01,300
over the years you might have heard of

00:16:57,020 --> 00:17:03,680
the data encryption standard des IBM

00:17:01,300 --> 00:17:07,579
developed that under a contract for the

00:17:03,680 --> 00:17:12,589
federal government employs several

00:17:07,579 --> 00:17:16,130
techniques block cipher and what a black

00:17:12,589 --> 00:17:20,900
cipher is is you you have a key of a

00:17:16,130 --> 00:17:23,140
certain let's say a 256-bit key and you

00:17:20,900 --> 00:17:25,819
take blocks that match that and

00:17:23,140 --> 00:17:29,360
encrypted one block at a time rather

00:17:25,819 --> 00:17:36,440
than say a letter at a time and then X

00:17:29,360 --> 00:17:38,600
or is a mathematical technique that you

00:17:36,440 --> 00:17:45,790
can think of it various ways exclusive

00:17:38,600 --> 00:17:49,880
or if the bits are both one or both zero

00:17:45,790 --> 00:17:52,220
the result is a zero I remember

00:17:49,880 --> 00:17:53,960
correctly and then if one is a zero and

00:17:52,220 --> 00:17:56,660
the other is a one then the result is a

00:17:53,960 --> 00:18:00,790
one so it's sort of like doing addition

00:17:56,660 --> 00:18:04,690
when throwing away to carry in binary

00:18:00,790 --> 00:18:04,690
but it's an interesting technique

00:18:05,820 --> 00:18:13,950
so you know what a block cipher is doing

00:18:10,120 --> 00:18:16,180
is using a technique like exclusive or

00:18:13,950 --> 00:18:20,260
operating on a fixed length block of

00:18:16,180 --> 00:18:23,400
bits and in doing this some number of

00:18:20,260 --> 00:18:26,770
times and that's the number of rounds

00:18:23,400 --> 00:18:32,370
that could be a large number for

00:18:26,770 --> 00:18:38,740
instance anyone here use lastpass I do

00:18:32,370 --> 00:18:42,310
and last pass by default does 5,000

00:18:38,740 --> 00:18:43,780
rounds of this on your local machine and

00:18:42,310 --> 00:18:47,670
then when you upload it to the server

00:18:43,780 --> 00:18:47,670
they do a hundred thousand rounds more

00:18:49,980 --> 00:19:01,600
so you can do a lot of use so in

00:18:58,450 --> 00:19:03,160
cryptography you know we're looking at

00:19:01,600 --> 00:19:05,500
computerized stuff so everything is

00:19:03,160 --> 00:19:10,780
binary it's just a series of ones and

00:19:05,500 --> 00:19:16,570
zeros and if you do x or and xor by the

00:19:10,780 --> 00:19:18,790
way is a reversible operation so yeah if

00:19:16,570 --> 00:19:23,050
they're if they're both the same the

00:19:18,790 --> 00:19:28,260
result is 0 and if they're different the

00:19:23,050 --> 00:19:30,580
result is one and as I said yeah its

00:19:28,260 --> 00:19:36,220
coding and encrypting or two different

00:19:30,580 --> 00:19:38,020
things so here's an example I want to

00:19:36,220 --> 00:19:41,620
send a message let the message I want to

00:19:38,020 --> 00:19:45,340
send his cat now the coding scheme i'm

00:19:41,620 --> 00:19:51,910
using is asking so look up the asking

00:19:45,340 --> 00:19:55,150
codes for CA NT nothing hidden here at

00:19:51,910 --> 00:19:57,700
all this is just a way of sending things

00:19:55,150 --> 00:20:00,040
using zeros and ones that the computer

00:19:57,700 --> 00:20:02,650
will understand and your computer would

00:20:00,040 --> 00:20:08,740
receive it and turn it back into CA T no

00:20:02,650 --> 00:20:12,430
big deal then I have a key and I've

00:20:08,740 --> 00:20:16,570
decided to use as a key dog

00:20:12,430 --> 00:20:18,800
now this key is the secret part right

00:20:16,570 --> 00:20:21,980
this is the thing that I'd have to agree

00:20:18,800 --> 00:20:28,400
so you know I could go to Tom and seven

00:20:21,980 --> 00:20:32,809
to send you a message the key is gone so

00:20:28,400 --> 00:20:35,330
how does X or work I write my message in

00:20:32,809 --> 00:20:42,680
binary and then under it I've got my key

00:20:35,330 --> 00:20:49,040
and what's the result well both ones 0

00:20:42,680 --> 00:20:52,070
both 10 both 0 0 and then oh ok a 0 1 0

00:20:49,040 --> 00:20:54,559
1 that gives me a 1 a 1 and 0 that gives

00:20:52,070 --> 00:21:01,240
me a one that's how exclusive or

00:20:54,559 --> 00:21:01,240
quarters not I'm terribly difficult so

00:21:01,960 --> 00:21:10,850
and if you XOR the result you would get

00:21:07,070 --> 00:21:12,890
back the same message I'll leave that as

00:21:10,850 --> 00:21:20,059
an exercise for you to improve yourself

00:21:12,890 --> 00:21:25,250
that that is the case so an encryption

00:21:20,059 --> 00:21:28,250
algorithm algorithm is a procedure that

00:21:25,250 --> 00:21:31,640
can incorporate any number of steps so

00:21:28,250 --> 00:21:34,340
encryption algorithm has to be something

00:21:31,640 --> 00:21:39,500
that is combining a number of these

00:21:34,340 --> 00:21:41,450
operations and in cryptography XOR is

00:21:39,500 --> 00:21:44,780
almost always a major part of all of

00:21:41,450 --> 00:21:47,690
this now symmetric encryption it has to

00:21:44,780 --> 00:21:50,980
be completely reversible well X war is

00:21:47,690 --> 00:21:53,540
completely reversible so if if I

00:21:50,980 --> 00:21:57,050
encrypted using five thousand rounds of

00:21:53,540 --> 00:22:01,340
extra I can decrypt using five thousand

00:21:57,050 --> 00:22:02,929
rounds of X or if I know the key I don't

00:22:01,340 --> 00:22:08,360
know the key I've still got a problem

00:22:02,929 --> 00:22:10,820
and that's that key is the part where

00:22:08,360 --> 00:22:15,080
you really need to start thinking ok

00:22:10,820 --> 00:22:17,210
it's like a password really right if

00:22:15,080 --> 00:22:19,250
your password is insecure if your key is

00:22:17,210 --> 00:22:21,530
insecure it doesn't matter how much of

00:22:19,250 --> 00:22:24,040
this other stuff you did it's not going

00:22:21,530 --> 00:22:24,040
to get you anywhere

00:22:26,129 --> 00:22:33,639
now the data encryption standard was one

00:22:30,700 --> 00:22:41,859
of the initial ones block size was set

00:22:33,639 --> 00:22:44,889
at 64 bits and you will not be surprised

00:22:41,859 --> 00:22:46,570
to hear although IBM was doing this for

00:22:44,889 --> 00:22:48,519
the government the government another

00:22:46,570 --> 00:22:52,239
part of the government they three-letter

00:22:48,519 --> 00:23:00,279
agency saying oh could you make it a

00:22:52,239 --> 00:23:02,440
little bit weaker and so they kind of

00:23:00,279 --> 00:23:05,679
compromised I mean I think the NSA was

00:23:02,440 --> 00:23:07,720
looking for 48 bits that's like you know

00:23:05,679 --> 00:23:12,639
yeah we kissed him we can decrypt that

00:23:07,720 --> 00:23:15,489
easy they came up with basically well

00:23:12,639 --> 00:23:18,879
let's devote one bit for each bite and

00:23:15,489 --> 00:23:21,129
it's a parody checking and so

00:23:18,879 --> 00:23:26,619
effectively what you had was 56 bits

00:23:21,129 --> 00:23:30,399
that was des now how long was that good

00:23:26,619 --> 00:23:35,049
for not terribly long but it was an

00:23:30,399 --> 00:23:37,570
important step so Bruce Schneier I said

00:23:35,049 --> 00:23:39,940
is kind of my girl about all of this had

00:23:37,570 --> 00:23:42,429
des did more to galvanize the field of

00:23:39,940 --> 00:23:46,239
crypt analysis than anything else now

00:23:42,429 --> 00:23:52,899
there was an algorithm to study so that

00:23:46,239 --> 00:23:57,210
was an important step so by 1999 you

00:23:52,899 --> 00:24:05,769
could brute-force des in about 22 hours

00:23:57,210 --> 00:24:13,090
so not that secure well let's just do

00:24:05,769 --> 00:24:17,859
more of it Triple DES so the same 56-bit

00:24:13,090 --> 00:24:21,789
keys but now there's three of them so

00:24:17,859 --> 00:24:26,409
that added enough that right now it's

00:24:21,789 --> 00:24:31,739
kind of sort of still safe so if you see

00:24:26,409 --> 00:24:31,739
three des probably all right

00:24:32,580 --> 00:24:38,909
but n is T that's the National Institute

00:24:36,960 --> 00:24:44,070
for Standards and Technology here in the

00:24:38,909 --> 00:24:46,320
United States they said you know we need

00:24:44,070 --> 00:24:49,320
to do a little bit better so they went

00:24:46,320 --> 00:25:00,029
for Advanced Encryption standard so

00:24:49,320 --> 00:25:01,649
you've probably seen abs and that of the

00:25:00,029 --> 00:25:06,240
things commonly available now is

00:25:01,649 --> 00:25:08,820
probably the best there is a new

00:25:06,240 --> 00:25:12,570
standard that they just finished the

00:25:08,820 --> 00:25:18,029
competition a few months back for a new

00:25:12,570 --> 00:25:21,419
encryption standard but it's not in

00:25:18,029 --> 00:25:27,750
widespread use and probably won't be for

00:25:21,419 --> 00:25:29,940
a while now then there's Ryan doll I'm

00:25:27,750 --> 00:25:32,010
told that's the pronunciation and it's

00:25:29,940 --> 00:25:35,610
based on the names of these people from

00:25:32,010 --> 00:25:40,340
the Netherlands and that's the basis of

00:25:35,610 --> 00:25:44,730
AES so the block size here is 128 bits

00:25:40,340 --> 00:25:49,529
the key size could be any any of these

00:25:44,730 --> 00:25:51,929
three and so if you see aes-256 what

00:25:49,529 --> 00:25:58,100
you're seeing is that the key size is

00:25:51,929 --> 00:26:04,529
256 bits the block size is still 128 and

00:25:58,100 --> 00:26:09,840
again you do all the repeated rounds so

00:26:04,529 --> 00:26:14,240
all of these are symmetric so there's a

00:26:09,840 --> 00:26:19,169
lot of X or blacks and all of that

00:26:14,240 --> 00:26:21,779
single shared p note that we have not

00:26:19,169 --> 00:26:24,679
had to talk about randomness and entropy

00:26:21,779 --> 00:26:29,190
is the technical term for randomness

00:26:24,679 --> 00:26:30,779
more entropy the more random and you

00:26:29,190 --> 00:26:32,490
don't need it here because it their

00:26:30,779 --> 00:26:34,789
question is simply do we agree on what

00:26:32,490 --> 00:26:34,789
the key is

00:26:40,170 --> 00:26:48,040
now asymmetric gets around the key

00:26:44,860 --> 00:26:50,380
distribution problem but to do that

00:26:48,040 --> 00:26:53,170
you've got to have not just the one-way

00:26:50,380 --> 00:26:57,210
functions you've got to have a pretty

00:26:53,170 --> 00:27:00,520
good amount of entropy or randomness and

00:26:57,210 --> 00:27:03,280
I say these are the three approaches

00:27:00,520 --> 00:27:05,970
that have been used para saving the

00:27:03,280 --> 00:27:17,350
large prime number multiplication

00:27:05,970 --> 00:27:20,550
approach now factorization this is when

00:27:17,350 --> 00:27:20,550
we talk about the arms race

00:27:22,590 --> 00:27:29,400
computationally infeasible with current

00:27:24,910 --> 00:27:32,050
technology assuming you do it properly

00:27:29,400 --> 00:27:38,140
but this is one of those things there

00:27:32,050 --> 00:27:41,500
was a famous example of a quote Bill

00:27:38,140 --> 00:27:44,110
Gates years ago someone had asked him

00:27:41,500 --> 00:27:46,390
you know what do you think are some of

00:27:44,110 --> 00:27:48,280
the key problems in computing and we're

00:27:46,390 --> 00:27:50,680
going to be able to deal with and his

00:27:48,280 --> 00:27:54,550
answer was we need to find ways to

00:27:50,680 --> 00:27:56,530
factor large prime numbers well everyone

00:27:54,550 --> 00:27:59,410
laughed because a prime number doesn't

00:27:56,530 --> 00:28:04,270
have factors but what he was talking

00:27:59,410 --> 00:28:06,550
about was this problem you know research

00:28:04,270 --> 00:28:10,840
is is going on all the time with this

00:28:06,550 --> 00:28:12,670
stuff and you know you probably want to

00:28:10,840 --> 00:28:20,380
keep up with it if you're at all

00:28:12,670 --> 00:28:24,600
interested in security so the numbers

00:28:20,380 --> 00:28:29,950
that we're looking at are generally

00:28:24,600 --> 00:28:31,930
thousand twenty four digits not too

00:28:29,950 --> 00:28:38,110
close to each other but there should

00:28:31,930 --> 00:28:40,600
both be good sized and then that product

00:28:38,110 --> 00:28:43,360
is used to generate other prime numbers

00:28:40,600 --> 00:28:46,810
which form the key pair one is public

00:28:43,360 --> 00:28:49,780
the other is private the street

00:28:46,810 --> 00:28:50,090
logarithm is finding an integer that's

00:28:49,780 --> 00:28:52,970
all

00:28:50,090 --> 00:28:55,490
the logarithmic equation used in El

00:28:52,970 --> 00:28:59,630
Gamal and in diffie-hellman merkel key

00:28:55,490 --> 00:29:02,570
exchange and the particular numbers

00:28:59,630 --> 00:29:04,220
that's where the entropy comes in and if

00:29:02,570 --> 00:29:06,020
you ever see a reference to perfect

00:29:04,220 --> 00:29:07,250
forward secrecy and I don't really have

00:29:06,020 --> 00:29:10,880
time to get into it but it's a

00:29:07,250 --> 00:29:15,919
fascinating topic 50 helmet Merkel is

00:29:10,880 --> 00:29:17,779
key to perfect forward secrecy if you're

00:29:15,919 --> 00:29:25,399
paranoid you want to take a look at the

00:29:17,779 --> 00:29:28,130
perfect now elliptic curve is a new one

00:29:25,399 --> 00:29:30,850
and it's an evolution of the discrete

00:29:28,130 --> 00:29:33,620
logarithm you choose a curve with

00:29:30,850 --> 00:29:35,450
certain properties and then appoint on

00:29:33,620 --> 00:29:38,059
that curve and then find the discrete

00:29:35,450 --> 00:29:40,940
logarithm at that point and then the

00:29:38,059 --> 00:29:46,760
entropy comes in and choosing where that

00:29:40,940 --> 00:29:49,450
point is going to be on the curve now

00:29:46,760 --> 00:29:51,710
there have been some issues here

00:29:49,450 --> 00:29:55,510
National Institute for Standards and

00:29:51,710 --> 00:30:03,049
Technology recommended 15 curves as

00:29:55,510 --> 00:30:04,880
suitable unfortunately NSA was involved

00:30:03,049 --> 00:30:10,070
in this process of selecting these

00:30:04,880 --> 00:30:11,990
curves and they push one that even at

00:30:10,070 --> 00:30:14,120
the time people were going why on earth

00:30:11,990 --> 00:30:17,320
that they picked that one it's the most

00:30:14,120 --> 00:30:17,320

YouTube URL: https://www.youtube.com/watch?v=ba9aByIX8yc


