Title: OLF 2018 - Compliance Automation with SIMP
Publication date: 2018-10-21
Playlist: 2018 Videos
Description: 
	SIMP is an Open Source project based on Puppet that automates compliance with various standards (including NIST 800-53, FIPS 140-2, and DISA STIG). This talk will introduce SIMPâ€™s capabilities and explain how to get started with SIMP in your environment.

Speaker: Steven Pritchard
Videographer: Ernest Parke
Captions: 
	00:00:00,030 --> 00:00:05,660
my name is Steven Pritchard I work for a

00:00:01,829 --> 00:00:09,000
company called onyx point onyx point

00:00:05,660 --> 00:00:12,860
does a lot of things but we specialize

00:00:09,000 --> 00:00:17,250
in in consulting and contracting we

00:00:12,860 --> 00:00:20,760
we're big on puppet and rel and get lab

00:00:17,250 --> 00:00:24,269
and lots and lots of other things but

00:00:20,760 --> 00:00:30,349
especially in the federal space and we

00:00:24,269 --> 00:00:32,759
are also the maintainer zuv sim so

00:00:30,349 --> 00:00:34,110
apparently the clicker that was working

00:00:32,759 --> 00:00:38,219
a moment ago is now that we're gonna

00:00:34,110 --> 00:00:40,170
work alright so compliance standards

00:00:38,219 --> 00:00:43,260
compliance standards are like all other

00:00:40,170 --> 00:00:46,700
standards if you haven't seen this xkcd

00:00:43,260 --> 00:00:49,860
I think it sums it up very nicely

00:00:46,700 --> 00:00:51,840
yeah so yeah there are fourteen

00:00:49,860 --> 00:00:53,129
competing standards we need one standard

00:00:51,840 --> 00:00:54,870
to rule them all now there are 15

00:00:53,129 --> 00:00:57,649
competing standards right so that's

00:00:54,870 --> 00:00:57,649
that's how that works

00:00:57,890 --> 00:01:03,320
with compliance specifically though the

00:01:03,799 --> 00:01:08,760
there we go got it work part of the

00:01:07,530 --> 00:01:10,380
reason for it is that there are

00:01:08,760 --> 00:01:14,310
different compliance standards depending

00:01:10,380 --> 00:01:16,409
on what space you live in right so how

00:01:14,310 --> 00:01:18,470
many people in here have to deal with

00:01:16,409 --> 00:01:21,810
federal compliance of some sort and it

00:01:18,470 --> 00:01:23,340
853 DISA stig that sort of thing all

00:01:21,810 --> 00:01:24,930
right how many of you are in commercial

00:01:23,340 --> 00:01:31,740
space where you have to deal with PCI

00:01:24,930 --> 00:01:33,720
DSS maybe Sox medical HIPAA anyone yeah

00:01:31,740 --> 00:01:38,009
anyone here from Europe have to deal

00:01:33,720 --> 00:01:40,320
with gdpr or anything like that not from

00:01:38,009 --> 00:01:44,280
you still have to deal with even though

00:01:40,320 --> 00:01:48,590
you're in the US yeah yeah so all of you

00:01:44,280 --> 00:01:48,590
are very aware of the pain this brings

00:01:49,310 --> 00:01:55,979
so from a system standpoint if you're

00:01:53,670 --> 00:01:57,930
dealing with compliance it really

00:01:55,979 --> 00:02:00,149
honestly I'm dealing with auditors right

00:01:57,930 --> 00:02:04,680
what you end up needing to do to get

00:02:00,149 --> 00:02:07,290
your systems compliant is is one of

00:02:04,680 --> 00:02:09,599
really three ways first of all to have a

00:02:07,290 --> 00:02:12,629
golden image right so you've probably

00:02:09,599 --> 00:02:12,980
all had you know an instance template or

00:02:12,629 --> 00:02:16,250
a

00:02:12,980 --> 00:02:18,349
M template or a you know a kickstart

00:02:16,250 --> 00:02:22,420
configuration or whatever that when it's

00:02:18,349 --> 00:02:24,980
done you have a compliant system right

00:02:22,420 --> 00:02:28,849
the problem with that is it was

00:02:24,980 --> 00:02:32,299
compliant when you started it up based

00:02:28,849 --> 00:02:34,129
on when it was built okay so these

00:02:32,299 --> 00:02:36,200
things drift over time if you've had

00:02:34,129 --> 00:02:37,280
systems that are long running you know

00:02:36,200 --> 00:02:38,269
just because they were compliant when

00:02:37,280 --> 00:02:40,640
they were started doesn't mean they're

00:02:38,269 --> 00:02:43,400
compliant later if the rules change like

00:02:40,640 --> 00:02:46,670
anyone who's had to deal with PCI if you

00:02:43,400 --> 00:02:48,590
went from you know PCI 2.0 to PCI 3.0 or

00:02:46,670 --> 00:02:51,500
whatever you know the rules just change

00:02:48,590 --> 00:02:54,160
out from under you right so the what the

00:02:51,500 --> 00:02:56,629
system's need to have to be compliant

00:02:54,160 --> 00:02:58,640
evolves and you know you're stuck with a

00:02:56,629 --> 00:03:01,190
golden image of fixing the golden image

00:02:58,640 --> 00:03:06,500
and then redeploying the world you know

00:03:01,190 --> 00:03:08,840
which is not fun so another way to do it

00:03:06,500 --> 00:03:10,519
is to have some scripts or maybe you

00:03:08,840 --> 00:03:11,900
know an ansible playbook or something

00:03:10,519 --> 00:03:13,849
like that or it's like you know I'm

00:03:11,900 --> 00:03:17,299
gonna apply this to all my hosts and

00:03:13,849 --> 00:03:20,209
they are going to magically be compliant

00:03:17,299 --> 00:03:21,560
well the problem with that is if you

00:03:20,209 --> 00:03:24,260
don't know what the baseline looked like

00:03:21,560 --> 00:03:27,319
then it's really hard to get that right

00:03:24,260 --> 00:03:28,489
and not break things right you end up

00:03:27,319 --> 00:03:30,380
with the same problem that you had with

00:03:28,489 --> 00:03:32,120
the golden image also that over time

00:03:30,380 --> 00:03:33,739
then it's just going to drift right so

00:03:32,120 --> 00:03:35,419
if you didn't break stuff when you when

00:03:33,739 --> 00:03:37,040
you initially deployed it six months

00:03:35,419 --> 00:03:38,870
later a year later you know when the

00:03:37,040 --> 00:03:42,910
next audit rolls around it's not

00:03:38,870 --> 00:03:45,530
necessarily going to be compliant so

00:03:42,910 --> 00:03:48,500
another way to do this is repeated

00:03:45,530 --> 00:03:50,750
application right having a having a

00:03:48,500 --> 00:03:53,169
compliance baseline that you apply on a

00:03:50,750 --> 00:03:59,810
regular basis

00:03:53,169 --> 00:04:02,209
so that is honestly the hardest way to

00:03:59,810 --> 00:04:03,889
do it because you've got to handle all

00:04:02,209 --> 00:04:06,079
the variables right and it's got it it's

00:04:03,889 --> 00:04:11,510
got a you know it's got to evolve as the

00:04:06,079 --> 00:04:13,760
system's of all but the the good news is

00:04:11,510 --> 00:04:15,199
you know if you're compliant now you can

00:04:13,760 --> 00:04:16,760
still be compliant in six months you can

00:04:15,199 --> 00:04:18,109
still be compliant a year the system

00:04:16,760 --> 00:04:19,729
that you just spun up will be just as

00:04:18,109 --> 00:04:26,660
compliant as the system that you spun up

00:04:19,729 --> 00:04:30,080
five years ago right so intercept simp

00:04:26,660 --> 00:04:37,100
is is a puppet based compliance

00:04:30,080 --> 00:04:37,940
framework it was designed for government

00:04:37,100 --> 00:04:40,970
enclaves

00:04:37,940 --> 00:04:43,970
you know like in skiffs so it actually

00:04:40,970 --> 00:04:48,490
provides everything that you need to

00:04:43,970 --> 00:04:50,840
build a compliant infrastructure I

00:04:48,490 --> 00:04:53,510
forget how I forgot already how many of

00:04:50,840 --> 00:04:59,810
you I deal in government you kind of

00:04:53,510 --> 00:05:01,280
just a few right so if if you if you can

00:04:59,810 --> 00:05:03,680
imagine one of these areas that's you

00:05:01,280 --> 00:05:06,560
know off network that you know you can

00:05:03,680 --> 00:05:10,820
just walk in with with a CD image or DVD

00:05:06,560 --> 00:05:14,540
image right simp on a disc will let you

00:05:10,820 --> 00:05:15,880
build everything right so it's kind of

00:05:14,540 --> 00:05:20,510
cool

00:05:15,880 --> 00:05:26,750
it has mapping to the various industry

00:05:20,510 --> 00:05:29,150
standard compliance rules whatever and

00:05:26,750 --> 00:05:35,360
it has reporting mechanism as well built

00:05:29,150 --> 00:05:40,730
in so and it is 100% free and open

00:05:35,360 --> 00:05:46,010
source software so it has full support

00:05:40,730 --> 00:05:50,300
for Red Hat and Sint OS the it uses

00:05:46,010 --> 00:05:52,370
puppet for automation but it doesn't

00:05:50,300 --> 00:05:57,919
preclude using other systems for other

00:05:52,370 --> 00:06:01,400
things so simple OTT of the complexity

00:05:57,919 --> 00:06:06,230
of technical compliance right so it

00:06:01,400 --> 00:06:08,180
implements those rules in encode that

00:06:06,230 --> 00:06:10,190
these various compliance standards

00:06:08,180 --> 00:06:13,130
require you to do you know everything

00:06:10,190 --> 00:06:15,710
from you know you must have a log in

00:06:13,130 --> 00:06:18,200
banner that says these words you know

00:06:15,710 --> 00:06:21,290
and and you know you you have to set

00:06:18,200 --> 00:06:24,080
automatic log out times to this you know

00:06:21,290 --> 00:06:25,910
or whatever right there's a there's a

00:06:24,080 --> 00:06:28,370
million of these things and simple e

00:06:25,910 --> 00:06:30,560
handles all of them so you get to focus

00:06:28,370 --> 00:06:31,190
on your mission or your business as the

00:06:30,560 --> 00:06:35,630
case may be

00:06:31,190 --> 00:06:39,180
and you you know you can you can worry

00:06:35,630 --> 00:06:42,900
about you know your security and your

00:06:39,180 --> 00:06:45,410
your applications and so on and so forth

00:06:42,900 --> 00:06:45,410
right

00:06:47,600 --> 00:06:53,759
anyway simp actually came out of the

00:06:50,400 --> 00:06:56,400
National Security Agency so if you go to

00:06:53,759 --> 00:06:59,789
github.com slash national security

00:06:56,400 --> 00:07:03,270
agency camelcase like that such sympathy

00:06:59,789 --> 00:07:05,970
have there is a page on simp there that

00:07:03,270 --> 00:07:10,889
has some information about it but like I

00:07:05,970 --> 00:07:13,259
say my company onyx point is the the

00:07:10,889 --> 00:07:16,800
maintainer of simp and we've actually

00:07:13,259 --> 00:07:21,419
grown the the product out of out of what

00:07:16,800 --> 00:07:24,570
the NSA released a few years ago so if

00:07:21,419 --> 00:07:27,330
you go to github.com slash simp you can

00:07:24,570 --> 00:07:31,320
see all the code so everything's there a

00:07:27,330 --> 00:07:41,160
lot of puppet a lot of other random bits

00:07:31,320 --> 00:07:43,500
so you might wonder why puppet I happen

00:07:41,160 --> 00:07:45,840
to be a big fan of puppet and and by the

00:07:43,500 --> 00:07:47,669
way if you are interested in why I'm

00:07:45,840 --> 00:07:50,280
having a puppet birds of a feather

00:07:47,669 --> 00:07:51,960
session later on this evening if you

00:07:50,280 --> 00:07:53,550
look at the board out out by the the

00:07:51,960 --> 00:07:55,740
check ins they've got the rooms those

00:07:53,550 --> 00:07:56,820
around also have a vim talk FM birds of

00:07:55,740 --> 00:07:58,169
a feather session if any of you are

00:07:56,820 --> 00:08:03,180
crazy enough to be into that kind of

00:07:58,169 --> 00:08:05,580
thing but I actually have talk tomorrow

00:08:03,180 --> 00:08:08,820
on puppet - so like really interested

00:08:05,580 --> 00:08:10,770
then you can come to that but the the

00:08:08,820 --> 00:08:12,900
the thing about puppet is in a normal

00:08:10,770 --> 00:08:13,380
configuration puppet runs every half

00:08:12,900 --> 00:08:16,680
hour

00:08:13,380 --> 00:08:19,259
so the if you have all of your

00:08:16,680 --> 00:08:21,750
compliance built out with puppet code

00:08:19,259 --> 00:08:23,310
any system that drifts for whatever

00:08:21,750 --> 00:08:24,599
reason somebody logged in and did

00:08:23,310 --> 00:08:26,849
something somebody apply to patch

00:08:24,599 --> 00:08:31,909
somebody did whatever it will get fixed

00:08:26,849 --> 00:08:35,610
within a half an hour so so that's great

00:08:31,909 --> 00:08:38,760
puppet if it is able to compile like if

00:08:35,610 --> 00:08:40,380
they if the if the code is you know

00:08:38,760 --> 00:08:41,820
intact you know you don't have any

00:08:40,380 --> 00:08:44,099
syntax errors or anything like that if

00:08:41,820 --> 00:08:46,589
it's able to compile a catalog it will

00:08:44,099 --> 00:08:48,839
apply the catalog in whatever order it

00:08:46,589 --> 00:08:50,160
can if you have a dependency that's

00:08:48,839 --> 00:08:51,810
messed up for some reason you know it's

00:08:50,160 --> 00:08:52,949
like unable to install a package it may

00:08:51,810 --> 00:08:55,739
fail that

00:08:52,949 --> 00:08:58,350
branch of the dependency tree but it'll

00:08:55,739 --> 00:08:59,970
do everything else right so it won't

00:08:58,350 --> 00:09:02,699
just it won't just give up at the moment

00:08:59,970 --> 00:09:04,529
that it hits an error and so you know

00:09:02,699 --> 00:09:06,749
that's important for security and you

00:09:04,529 --> 00:09:08,819
know for compliance as well you know

00:09:06,749 --> 00:09:12,379
it's you know better to be 98 percent

00:09:08,819 --> 00:09:16,379
compliant than you know not at all right

00:09:12,379 --> 00:09:19,109
so the puppet DSL is generally

00:09:16,379 --> 00:09:21,720
considered pretty easy to understand by

00:09:19,109 --> 00:09:23,489
people who don't necessarily program it

00:09:21,720 --> 00:09:25,799
does give you a lot of flexibility to do

00:09:23,489 --> 00:09:29,939
programming things in it you can do

00:09:25,799 --> 00:09:32,429
conditionals you can do you can do it

00:09:29,939 --> 00:09:33,779
eration you can do lots of things in the

00:09:32,429 --> 00:09:36,989
puppet language but you don't

00:09:33,779 --> 00:09:39,629
necessarily have to the default with

00:09:36,989 --> 00:09:42,869
puppet code is to just you know kind of

00:09:39,629 --> 00:09:44,970
just describe resources you know

00:09:42,869 --> 00:09:50,160
packages and files and and things like

00:09:44,970 --> 00:09:51,329
that there is a Ruby back end for puppet

00:09:50,160 --> 00:09:52,649
so if you really need to do something

00:09:51,329 --> 00:10:02,989
fancy you have that option

00:09:52,649 --> 00:10:06,779
oops I talk too long I apologize anyway

00:10:02,989 --> 00:10:09,720
so for like say for people who want it

00:10:06,779 --> 00:10:12,749
there is the Ruby back-end and although

00:10:09,720 --> 00:10:13,949
it's a it does kind of restrict people

00:10:12,749 --> 00:10:21,029
can't you just go completely nuts with

00:10:13,949 --> 00:10:23,579
the Ruby code and with scent being based

00:10:21,029 --> 00:10:24,720
on puppet you have all of the resources

00:10:23,579 --> 00:10:27,660
that you would have with any other

00:10:24,720 --> 00:10:29,999
puppet installation so all the random

00:10:27,660 --> 00:10:30,569
modules on the puppet Forge and things

00:10:29,999 --> 00:10:35,309
like that

00:10:30,569 --> 00:10:39,329
so speaking of random modules on the

00:10:35,309 --> 00:10:42,660
puppet Forge the core of symp is a bunch

00:10:39,329 --> 00:10:44,999
of puppet modules as of the time I took

00:10:42,660 --> 00:10:48,779
this screenshot there were 90 modules on

00:10:44,999 --> 00:10:53,459
the forge under this under simp so if

00:10:48,779 --> 00:10:56,639
you're into puppet the you actually can

00:10:53,459 --> 00:11:01,410
consume the individual puppet modules

00:10:56,639 --> 00:11:06,510
that constitute sim and and and just go

00:11:01,410 --> 00:11:09,510
nuts with it and there's simp is managed

00:11:06,510 --> 00:11:11,510
lots and lots of things so there are

00:11:09,510 --> 00:11:18,230
modules on the Forge for you know

00:11:11,510 --> 00:11:18,230
everything from at two clamavi to NFS

00:11:18,470 --> 00:11:23,790
this isn't even a complete list right so

00:11:21,000 --> 00:11:27,510
like say there's 90 modules you know but

00:11:23,790 --> 00:11:34,769
you know CTL settings and TPM and you

00:11:27,510 --> 00:11:39,660
know tons and tons of stuff right one of

00:11:34,769 --> 00:11:43,320
the pieces of of sorry that's really

00:11:39,660 --> 00:11:45,990
interesting is the compliance engine so

00:11:43,320 --> 00:11:48,510
the way pup the way simp was originally

00:11:45,990 --> 00:11:50,130
designed it was it was designed around

00:11:48,510 --> 00:11:52,260
all these puppet modules and it just

00:11:50,130 --> 00:11:55,639
kind of encode had implemented all of

00:11:52,260 --> 00:11:59,310
these compliance standards right well

00:11:55,639 --> 00:12:00,630
encode they implemented NIST 853 well

00:11:59,310 --> 00:12:02,040
when they want to implement DISA stig

00:12:00,630 --> 00:12:03,060
well that maybe has slightly different

00:12:02,040 --> 00:12:04,560
rules and then when they want to

00:12:03,060 --> 00:12:05,850
implement you know another standard and

00:12:04,560 --> 00:12:08,310
understand and understand these all have

00:12:05,850 --> 00:12:10,709
slightly different rules you know some

00:12:08,310 --> 00:12:12,750
of them are have some one-to-one

00:12:10,709 --> 00:12:16,319
mappings but not all of them so what

00:12:12,750 --> 00:12:21,360
they've started to do is build this this

00:12:16,319 --> 00:12:24,899
data layer that will map the compliance

00:12:21,360 --> 00:12:29,610
standards to a set of puppet parameters

00:12:24,899 --> 00:12:32,370
so it can supply you know if you say I

00:12:29,610 --> 00:12:34,769
need DISA stig well that implies a set

00:12:32,370 --> 00:12:37,260
of parameters to the various puppet

00:12:34,769 --> 00:12:42,420
modules if you need this 853 that's a

00:12:37,260 --> 00:12:46,560
different set the the cool thing about

00:12:42,420 --> 00:12:48,420
this though is that it's a generic it's

00:12:46,560 --> 00:12:52,620
a generic thing you can you can use the

00:12:48,420 --> 00:12:54,540
compliance markup module which is

00:12:52,620 --> 00:12:57,269
actually where this is at the compliance

00:12:54,540 --> 00:12:59,279
markup you can use that in third in any

00:12:57,269 --> 00:13:01,199
third-party module so if you do any

00:12:59,279 --> 00:13:03,269
puppet code or if you've got homegrown

00:13:01,199 --> 00:13:05,730
puppet code and you want to implement

00:13:03,269 --> 00:13:07,829
compliance you actually can do that in a

00:13:05,730 --> 00:13:09,480
way that will work with sim or work

00:13:07,829 --> 00:13:12,389
without it you know you can you can just

00:13:09,480 --> 00:13:19,890
provide the data in your modules to do

00:13:12,389 --> 00:13:20,600
everything the in compliant in the

00:13:19,890 --> 00:13:23,010
compliant

00:13:20,600 --> 00:13:24,420
the modules called compliance markup I

00:13:23,010 --> 00:13:26,760
think we're renaming it to compliance

00:13:24,420 --> 00:13:28,050
engine which so my I have to watch

00:13:26,760 --> 00:13:32,340
myself because I stumble over that

00:13:28,050 --> 00:13:34,740
apologize but the way the way it works

00:13:32,340 --> 00:13:38,970
you build out profiles and you list the

00:13:34,740 --> 00:13:42,990
various controls those controls are then

00:13:38,970 --> 00:13:46,850
mapped to checks and and if you look

00:13:42,990 --> 00:13:51,540
it's a tight puppet class parameter and

00:13:46,850 --> 00:13:54,000
Louie lists the module name and what the

00:13:51,540 --> 00:13:58,710
parameter and value are right so it's

00:13:54,000 --> 00:14:02,220
just it's just a bunch of data and we've

00:13:58,710 --> 00:14:06,210
already done this again for NIST 853 and

00:14:02,220 --> 00:14:08,970
DISA stig and the company that I work

00:14:06,210 --> 00:14:11,089
for does have some a commercial product

00:14:08,970 --> 00:14:12,960
based around this that adds ads on

00:14:11,089 --> 00:14:17,310
Windows support and some other

00:14:12,960 --> 00:14:19,170
compliance profiles so you know but but

00:14:17,310 --> 00:14:23,760
we do like say we do open open source

00:14:19,170 --> 00:14:25,290
all the core pieces so anyway then the

00:14:23,760 --> 00:14:28,620
last part of the compliance market thing

00:14:25,290 --> 00:14:35,570
is reporting so what compliance markup

00:14:28,620 --> 00:14:38,730
lets you do is basically have with the

00:14:35,570 --> 00:14:40,140
with the checks it that tells you you

00:14:38,730 --> 00:14:42,930
know like what parameters things should

00:14:40,140 --> 00:14:44,700
have and what we'll do then is it can

00:14:42,930 --> 00:14:49,020
generate a report to tell you anything

00:14:44,700 --> 00:14:51,240
that wasn't in spec with those with

00:14:49,020 --> 00:14:55,589
those parameters that you previously

00:14:51,240 --> 00:14:56,640
defined so anyway it's a it's kind of

00:14:55,589 --> 00:14:58,339
cool because like say you not only get

00:14:56,640 --> 00:15:00,839
the compliance but you also get the

00:14:58,339 --> 00:15:07,020
reporting out of the same out of the

00:15:00,839 --> 00:15:09,810
same module okay so you know all that's

00:15:07,020 --> 00:15:11,040
great if you're into puppet but if

00:15:09,810 --> 00:15:13,680
you're if you're not you just want to

00:15:11,040 --> 00:15:15,990
get started with the product with you

00:15:13,680 --> 00:15:20,660
know with the project there are really

00:15:15,990 --> 00:15:26,029
four ways of installing simp right now

00:15:20,660 --> 00:15:30,150
the the easiest and you know kind of

00:15:26,029 --> 00:15:33,180
blessed way of doing it is via ISO

00:15:30,150 --> 00:15:34,480
because again originally simp was built

00:15:33,180 --> 00:15:37,040
for

00:15:34,480 --> 00:15:39,830
for these Enclave environments that are

00:15:37,040 --> 00:15:42,260
you know off network right so you know

00:15:39,830 --> 00:15:44,890
you walk in you drop in you drop in the

00:15:42,260 --> 00:15:48,080
CD you boot up it builds a whole entire

00:15:44,890 --> 00:15:53,780
puppet server with yum repos for all the

00:15:48,080 --> 00:15:55,850
packages with with a puppet server and

00:15:53,780 --> 00:15:57,980
so on and so forth there's a whole bunch

00:15:55,850 --> 00:16:02,240
of components and it actually builds it

00:15:57,980 --> 00:16:03,710
actually includes DHCP and TFTP and all

00:16:02,240 --> 00:16:06,290
the bits that gene order to kickstart

00:16:03,710 --> 00:16:07,760
other systems in a compliant way so all

00:16:06,290 --> 00:16:09,320
the systems that you kick start off of

00:16:07,760 --> 00:16:12,110
that will have the disk layout that's

00:16:09,320 --> 00:16:16,520
required by the DISA stig you know so on

00:16:12,110 --> 00:16:19,190
and so forth right of course that's

00:16:16,520 --> 00:16:21,740
great if you're in a absolute greenfield

00:16:19,190 --> 00:16:23,300
environment right but if you are like me

00:16:21,740 --> 00:16:26,150
and you've never actually worked in one

00:16:23,300 --> 00:16:27,860
of those environments you might be

00:16:26,150 --> 00:16:31,610
interested in one of the other ways of

00:16:27,860 --> 00:16:35,360
installing so the way the way symp is

00:16:31,610 --> 00:16:37,910
built you know on the ISO it's it's a

00:16:35,360 --> 00:16:39,380
it's a collection of packages and in

00:16:37,910 --> 00:16:41,150
some scripts and things like that and

00:16:39,380 --> 00:16:44,050
you can actually install the packages on

00:16:41,150 --> 00:16:50,540
an existing system in order to get

00:16:44,050 --> 00:16:52,870
essentially the same effect so if you

00:16:50,540 --> 00:16:55,130
are like me though and you are

00:16:52,870 --> 00:16:58,640
accustomed to having a puppet

00:16:55,130 --> 00:17:01,970
environment that is pre-built there is a

00:16:58,640 --> 00:17:05,090
way to install using our 10k or code

00:17:01,970 --> 00:17:09,740
manager and for those of you don't know

00:17:05,090 --> 00:17:14,140
puppet that's a tool that will do code

00:17:09,740 --> 00:17:16,610
deployments based on git repositories so

00:17:14,140 --> 00:17:19,700
and it's kind of the standard way to do

00:17:16,610 --> 00:17:21,560
things in puppet so that's that's an

00:17:19,700 --> 00:17:24,110
option

00:17:21,560 --> 00:17:26,300
it does require some knowledge of puppet

00:17:24,110 --> 00:17:27,620
to do it that way but if you've already

00:17:26,300 --> 00:17:30,860
got a puppet environment I would assume

00:17:27,620 --> 00:17:34,130
you probably have that so the last way

00:17:30,860 --> 00:17:38,540
to do is with the cloud instance and if

00:17:34,130 --> 00:17:41,300
right now there is a there's an ami in

00:17:38,540 --> 00:17:43,490
the AWS marketplace you can spin up and

00:17:41,300 --> 00:17:45,290
you can get a simp server which you know

00:17:43,490 --> 00:17:47,120
again the same thing you'd get off of

00:17:45,290 --> 00:17:47,930
the ISO basically but it's already

00:17:47,120 --> 00:17:53,150
pre-built for

00:17:47,930 --> 00:17:55,850
and ready to be configured I know we

00:17:53,150 --> 00:17:59,990
have guys who are working on building an

00:17:55,850 --> 00:18:01,610
image for a sure right now and I think

00:17:59,990 --> 00:18:05,420
the eventual goal is to get something in

00:18:01,610 --> 00:18:06,950
GCE as well so whichever cloud platform

00:18:05,420 --> 00:18:09,309
you like will hopefully have something

00:18:06,950 --> 00:18:09,309
there for you

00:18:11,380 --> 00:18:17,300
so some gotchas if you do decide to jump

00:18:15,020 --> 00:18:21,080
in with this I want everybody to be

00:18:17,300 --> 00:18:23,330
aware of by default we have SELinux

00:18:21,080 --> 00:18:25,240
enabled and enforcing in targeted mode

00:18:23,330 --> 00:18:27,500
okay

00:18:25,240 --> 00:18:31,070
mandatory access control is a wonderful

00:18:27,500 --> 00:18:33,710
thing for compliance reasons as well

00:18:31,070 --> 00:18:39,350
FIPS on the other hand I don't know

00:18:33,710 --> 00:18:43,630
anyone who's a fan of FIPS but yeah but

00:18:39,350 --> 00:18:47,150
it it can be enabled

00:18:43,630 --> 00:18:49,370
it's FIPS is awkward if you're not

00:18:47,150 --> 00:18:51,110
familiar with FIPS it's it is a

00:18:49,370 --> 00:18:56,110
requirement for a lot of the government

00:18:51,110 --> 00:19:01,309
compliance but basically it sets a flag

00:18:56,110 --> 00:19:03,890
on the kernel command line and basically

00:19:01,309 --> 00:19:06,140
all of your crypto libraries are then

00:19:03,890 --> 00:19:08,900
supposed to call into kernel code for

00:19:06,140 --> 00:19:11,990
for the for the crypto algorithms so you

00:19:08,900 --> 00:19:20,170
have to have support for this in open

00:19:11,990 --> 00:19:22,490
SSL TLS etc etc etc and in in like rl5

00:19:20,170 --> 00:19:25,490
system with FIPS mode turned on often

00:19:22,490 --> 00:19:30,260
would barely work rl6 was a little bit

00:19:25,490 --> 00:19:33,950
better well seven is actually remarkably

00:19:30,260 --> 00:19:37,520
functional it's yeah it's kind of

00:19:33,950 --> 00:19:39,470
shocking but but yeah so that's a thing

00:19:37,520 --> 00:19:41,090
you just need to be aware of it if you

00:19:39,470 --> 00:19:43,190
know and it's real easy to turn off if

00:19:41,090 --> 00:19:45,260
you just don't have time for all that

00:19:43,190 --> 00:19:47,740
noise and you just want to just tell the

00:19:45,260 --> 00:19:51,110
auditors that you're not going to bother

00:19:47,740 --> 00:19:53,390
but but yeah so that's the thing

00:19:51,110 --> 00:19:56,840
IP tables host-based firewalls turned on

00:19:53,390 --> 00:20:01,029
by default only for inbound connections

00:19:56,840 --> 00:20:04,179
not for outbound al bounds just allowed

00:20:01,029 --> 00:20:06,969
I've seen notes that the intention was

00:20:04,179 --> 00:20:12,039
to turn on outbound hyper tables as well

00:20:06,969 --> 00:20:13,989
I don't know where that's gone I did I

00:20:12,039 --> 00:20:15,819
think I forgot to mention I've been with

00:20:13,989 --> 00:20:17,499
onyx point for about a year and I've

00:20:15,819 --> 00:20:20,499
been working off and on with some for

00:20:17,499 --> 00:20:23,109
that time so I'm kind of a junior guy on

00:20:20,499 --> 00:20:25,839
the team early at this point so I don't

00:20:23,109 --> 00:20:27,399
have I don't quite have the the deep

00:20:25,839 --> 00:20:31,089
historical background on some of the

00:20:27,399 --> 00:20:32,979
nuances but if anybody's got any

00:20:31,089 --> 00:20:36,399
questions or anything I'd be happy to go

00:20:32,979 --> 00:20:40,179
ask people who know more than I do so

00:20:36,399 --> 00:20:42,149
then the last thing that that simple

00:20:40,179 --> 00:20:46,409
implements is a thing called SVC kill

00:20:42,149 --> 00:20:49,359
and what SVC kill does is basically

00:20:46,409 --> 00:20:54,489
stops any service that isn't being

00:20:49,359 --> 00:20:58,059
managed by puppet or white listed in the

00:20:54,489 --> 00:21:00,279
SVC kill configuration right so again

00:20:58,059 --> 00:21:01,209
for compliance can have maybe anything

00:21:00,279 --> 00:21:04,359
running that's not supposed to be

00:21:01,209 --> 00:21:08,609
running right so there's a there is a

00:21:04,359 --> 00:21:08,609
mechanism instant for for handling that

00:21:09,509 --> 00:21:16,389
so I got a little example here talking

00:21:14,859 --> 00:21:18,189
about how to you know once you've got

00:21:16,389 --> 00:21:19,989
simp you know you it's things are pretty

00:21:18,189 --> 00:21:24,039
locked down right so but you still need

00:21:19,989 --> 00:21:26,339
to be able to run applications so you

00:21:24,039 --> 00:21:29,699
need to ask what services need to run

00:21:26,339 --> 00:21:33,429
what users need to be able to log in so

00:21:29,699 --> 00:21:34,929
you know that's not not for just like

00:21:33,429 --> 00:21:38,859
run user where or you know where things

00:21:34,929 --> 00:21:40,929
just run as another user ID but

00:21:38,859 --> 00:21:42,429
specifically for where somebody needs to

00:21:40,929 --> 00:21:45,489
be able to SSH in or somebody needs to

00:21:42,429 --> 00:21:50,769
be able run sudo right and then what

00:21:45,489 --> 00:21:56,319
inbound ports need to be open so like I

00:21:50,769 --> 00:21:58,059
was saying with SVC kill that won't kill

00:21:56,319 --> 00:22:00,099
any service managed by puppet or in the

00:21:58,059 --> 00:22:01,539
ignore list so it's probably it's

00:22:00,099 --> 00:22:03,549
probably impossible to see but I have an

00:22:01,539 --> 00:22:07,029
example over here there's a SVC kill

00:22:03,549 --> 00:22:08,949
ignore you can list services there or

00:22:07,029 --> 00:22:11,319
you can just manage the service with

00:22:08,949 --> 00:22:14,919
puppet and and it will it will be

00:22:11,319 --> 00:22:17,529
allowed and that does it doesn't go rain

00:22:14,919 --> 00:22:20,259
killing processes on the system it just

00:22:17,529 --> 00:22:28,619
stops services that are running that

00:22:20,259 --> 00:22:34,080
aren't explicitly enabled and then for

00:22:28,619 --> 00:22:37,450
account access the way simp works is all

00:22:34,080 --> 00:22:39,820
user logins are disabled by default

00:22:37,450 --> 00:22:44,889
you have to whitelist any user that you

00:22:39,820 --> 00:22:47,940
want to allow you can do it and this is

00:22:44,889 --> 00:22:51,789
there it'll actually add Pam access

00:22:47,940 --> 00:22:55,080
rules on the system okay now you can do

00:22:51,789 --> 00:22:58,239
it with you can manage those lists using

00:22:55,080 --> 00:23:00,159
groups that are in a de or whatever if

00:22:58,239 --> 00:23:01,690
the system is configured to use Active

00:23:00,159 --> 00:23:05,200
Directory you know that's fine

00:23:01,690 --> 00:23:08,440
LDAP you know you can use LDAP groups or

00:23:05,200 --> 00:23:12,210
you can use local users or groups but

00:23:08,440 --> 00:23:15,429
you do have to whitelist everything so

00:23:12,210 --> 00:23:18,850
so that's that's a little different than

00:23:15,429 --> 00:23:25,980
probably what you're used to and then

00:23:18,850 --> 00:23:30,759
iptables it does allow SSH by default

00:23:25,980 --> 00:23:35,019
and in ping but everything else is

00:23:30,759 --> 00:23:37,539
blocked I think they would love to block

00:23:35,019 --> 00:23:40,869
SSH and ping out of the box but I think

00:23:37,539 --> 00:23:42,669
it just breaks so many assumptions and

00:23:40,869 --> 00:23:44,759
you know the ability to manage things

00:23:42,669 --> 00:23:49,899
remotely once they've come up you know

00:23:44,759 --> 00:23:51,309
so it just yeah like say by default

00:23:49,899 --> 00:23:53,379
those are those are those are allowed

00:23:51,309 --> 00:23:54,940
and then like say there's no outbound

00:23:53,379 --> 00:23:56,590
blocking because again that that just

00:23:54,940 --> 00:23:58,269
breaks so many assumptions that's a

00:23:56,590 --> 00:24:01,090
little that's that's a tough pill to

00:23:58,269 --> 00:24:04,090
swallow for most people and there's

00:24:01,090 --> 00:24:11,320
already quite a few of those in sim so

00:24:04,090 --> 00:24:14,529
they left that one alone so the complete

00:24:11,320 --> 00:24:16,749
example you you'd end up for you know

00:24:14,529 --> 00:24:18,190
this is this random application

00:24:16,749 --> 00:24:22,119
you know you'd basically say where you

00:24:18,190 --> 00:24:24,039
wanted to allow connections from you you

00:24:22,119 --> 00:24:28,690
know you do your normal package service

00:24:24,039 --> 00:24:34,360
kind of stuff you'd allow an app user

00:24:28,690 --> 00:24:37,360
and then iptables set what ports you

00:24:34,360 --> 00:24:39,639
want to allow and where from and and

00:24:37,360 --> 00:24:43,090
then in your data you'd list you know

00:24:39,639 --> 00:24:45,220
any any network she wanted and just make

00:24:43,090 --> 00:24:48,630
sure you were classifying with your you

00:24:45,220 --> 00:24:55,659
know this profile class that you built

00:24:48,630 --> 00:24:59,380
so I blew through that way faster than I

00:24:55,659 --> 00:25:01,779
intended to so I have lots and lots of

00:24:59,380 --> 00:25:03,519
time to answer questions but if you're

00:25:01,779 --> 00:25:06,730
interested you can just go to sim

00:25:03,519 --> 00:25:09,220
projects if - project comm there's

00:25:06,730 --> 00:25:11,559
documentation at sentry the docs that IO

00:25:09,220 --> 00:25:16,590
and then the company I work for is onyx

00:25:11,559 --> 00:25:16,590
point and it's at onyx point comm so

00:25:17,309 --> 00:25:23,100
questions absolutely

00:25:33,780 --> 00:26:00,490
anyway questions anybody somebody's got

00:25:37,180 --> 00:26:05,710
to have questions yes I in in any place

00:26:00,490 --> 00:26:09,520
I've worked so the places that are in

00:26:05,710 --> 00:26:12,480
real strict compliance environments they

00:26:09,520 --> 00:26:16,720
completely accept that they need to have

00:26:12,480 --> 00:26:20,380
host firewalls right that's not even you

00:26:16,720 --> 00:26:24,250
know no but nobody argues with that well

00:26:20,380 --> 00:26:25,810
I can at my previous job I had trouble

00:26:24,250 --> 00:26:26,140
convincing people that we should even do

00:26:25,810 --> 00:26:28,720
that

00:26:26,140 --> 00:26:33,220
right and you know we were we were bound

00:26:28,720 --> 00:26:38,050
by PCI DSS and Sox and Wow what else

00:26:33,220 --> 00:26:40,900
but the everybody wanted to say you know

00:26:38,050 --> 00:26:42,670
firewalls are the security teams problem

00:26:40,900 --> 00:26:44,050
they're not our problem so we're not

00:26:42,670 --> 00:26:47,470
gonna we're not gonna have firewalls

00:26:44,050 --> 00:26:49,060
right and I'm like that that that's dumb

00:26:47,470 --> 00:26:50,620
because that's you know that's not the

00:26:49,060 --> 00:26:52,240
reason you have host-based firewalls I

00:26:50,620 --> 00:26:54,010
mean yeah sure it protects you from

00:26:52,240 --> 00:26:55,390
stuff coming in from the outside but it

00:26:54,010 --> 00:26:57,400
also protects you from other things on

00:26:55,390 --> 00:26:58,750
that network and it means that you know

00:26:57,400 --> 00:27:03,960
what's actually running on the systems

00:26:58,750 --> 00:27:06,790
right that's more important to me so

00:27:03,960 --> 00:27:08,680
anyway the host-based firewalls really

00:27:06,790 --> 00:27:10,510
aren't that big of an argument and I and

00:27:08,680 --> 00:27:12,040
I know and and every place I've worked

00:27:10,510 --> 00:27:14,490
they're perfectly fine with the

00:27:12,040 --> 00:27:16,660
perimeter firewalls doing you know

00:27:14,490 --> 00:27:18,310
egress filtering right there they're

00:27:16,660 --> 00:27:19,840
perfectly fine blocking all outgoing

00:27:18,310 --> 00:27:22,900
traffic unless it's whitelisted right

00:27:19,840 --> 00:27:25,690
but I have yet to see anyone who is

00:27:22,900 --> 00:27:27,820
totally cool with the idea of of just

00:27:25,690 --> 00:27:31,350
blocking by default outgoing traffic

00:27:27,820 --> 00:27:37,780
from the system you know I

00:27:31,350 --> 00:27:40,630
yeah and and and I will admit that one

00:27:37,780 --> 00:27:42,100
would be hard for me even you know just

00:27:40,630 --> 00:27:45,490
because there are so many considerations

00:27:42,100 --> 00:27:47,169
involved you know it but

00:27:45,490 --> 00:27:49,200
it's probably not a bad thing you know

00:27:47,169 --> 00:27:54,370
you know again if you're trying to be

00:27:49,200 --> 00:27:55,570
secure and actually that's the the funny

00:27:54,370 --> 00:27:57,159
thing is I forgot to work it into the

00:27:55,570 --> 00:27:59,710
slides but I do always like to point out

00:27:57,159 --> 00:28:04,270
that compliance is not the same thing as

00:27:59,710 --> 00:28:06,070
security often yeah so a highly

00:28:04,270 --> 00:28:09,159
compliant system is not necessarily a

00:28:06,070 --> 00:28:13,179
highly secure system and vice versa in

00:28:09,159 --> 00:28:15,549
fact I know one of the rants that Trevor

00:28:13,179 --> 00:28:17,740
one of the guys that the guy who built

00:28:15,549 --> 00:28:21,010
most of this who's one of the owners of

00:28:17,740 --> 00:28:26,260
onyx point Trevor goes on a rant

00:28:21,010 --> 00:28:29,110
periodically that there were what were

00:28:26,260 --> 00:28:30,789
at the time considered insecure crypto

00:28:29,110 --> 00:28:33,340
algorithms that they were forced to

00:28:30,789 --> 00:28:35,250
configure things to use because that's

00:28:33,340 --> 00:28:37,630
what the come that's what the standards

00:28:35,250 --> 00:28:40,450
specifically listed even though everyone

00:28:37,630 --> 00:28:42,220
else had moved on the standards hadn't

00:28:40,450 --> 00:28:43,750
caught up right so in order to be

00:28:42,220 --> 00:28:46,299
compliant you actually had to make the

00:28:43,750 --> 00:28:48,940
system slightly less secure by by

00:28:46,299 --> 00:28:50,860
allowing older older crypto algorithms

00:28:48,940 --> 00:28:55,000
actually by forcing older crypto

00:28:50,860 --> 00:28:58,570
algorithms which is kind of crazy so

00:28:55,000 --> 00:29:00,220
anyway yeah but long-winded way of

00:28:58,570 --> 00:29:02,169
saying no I don't know of anyone who's

00:29:00,220 --> 00:29:03,909
like totally gung-ho about the idea of

00:29:02,169 --> 00:29:10,830
blocking all outgoing traffic on all

00:29:03,909 --> 00:29:10,830
systems and you know yes sir

00:29:15,490 --> 00:29:26,720
by the way yeah so uh here I'll give you

00:29:21,290 --> 00:29:36,280
one of these two so let me go back to

00:29:26,720 --> 00:29:39,170
that slide see here I gotta find it so

00:29:36,280 --> 00:29:44,210
like I said this is specifically around

00:29:39,170 --> 00:29:48,200
the compliance markup module when you

00:29:44,210 --> 00:29:51,640
implement these parameters as you know

00:29:48,200 --> 00:29:55,910
when you map pram puppet parameters to

00:29:51,640 --> 00:29:57,650
individual compliance controls then what

00:29:55,910 --> 00:29:59,840
it will do and again this is terrible

00:29:57,650 --> 00:30:03,290
because you can't see this what this

00:29:59,840 --> 00:30:06,590
does is it will actually list the

00:30:03,290 --> 00:30:08,360
compliance profile name and a summary of

00:30:06,590 --> 00:30:11,510
you know how many things are compliant

00:30:08,360 --> 00:30:13,610
how many things are non-compliant etc

00:30:11,510 --> 00:30:15,950
etc and then it will tell you the class

00:30:13,610 --> 00:30:18,440
name the parameters and you know like

00:30:15,950 --> 00:30:20,120
which things are actually compliant

00:30:18,440 --> 00:30:21,740
which things are non-compliant and it

00:30:20,120 --> 00:30:25,630
will actually generate that system or

00:30:21,740 --> 00:30:28,550
that that report on every single system

00:30:25,630 --> 00:30:34,700
and that's all built in to that

00:30:28,550 --> 00:30:37,790
compliance markup module so it just

00:30:34,700 --> 00:30:39,830
works now again it does rip it is it

00:30:37,790 --> 00:30:41,900
does build the reports on every system

00:30:39,830 --> 00:30:44,510
so you know you'd need to fab a way of

00:30:41,900 --> 00:30:46,030
collecting those up you know so on and

00:30:44,510 --> 00:30:53,840
so forth

00:30:46,030 --> 00:30:57,440
we also have a puppet module for

00:30:53,840 --> 00:31:01,670
managing like open s cap opens gap

00:30:57,440 --> 00:31:03,290
whatever you want to call it and and we

00:31:01,670 --> 00:31:05,870
have some stuff for building like

00:31:03,290 --> 00:31:07,760
dashboards around SCAP scans and things

00:31:05,870 --> 00:31:09,590
like that you know so there's a there's

00:31:07,760 --> 00:31:12,380
other reporting pieces that you can add

00:31:09,590 --> 00:31:14,600
on but like say out of the box you get

00:31:12,380 --> 00:31:19,670
this kind of for free this is just with

00:31:14,600 --> 00:31:21,320
no effort basically just by enabling the

00:31:19,670 --> 00:31:24,760
compliance markup thing in the puppet

00:31:21,320 --> 00:31:26,540
and in the Huayra hierarchy and then

00:31:24,760 --> 00:31:29,270
applying the class

00:31:26,540 --> 00:31:33,370
to all the systems this justjust just

00:31:29,270 --> 00:31:36,370
happens any more questions

00:31:33,370 --> 00:31:36,370
yes

00:31:41,590 --> 00:31:48,370
yes actually that's something that the

00:31:44,620 --> 00:31:51,160
the guys on contract are really proud of

00:31:48,370 --> 00:31:55,240
they have every single thing that goes

00:31:51,160 --> 00:31:58,540
in goes through some fairly rigorous

00:31:55,240 --> 00:32:00,960
testing and and and you know gets

00:31:58,540 --> 00:32:06,720
deployed out of this yeah the CI system

00:32:00,960 --> 00:32:06,720
so there you go yeah

00:32:07,020 --> 00:32:10,930
that one of the nice things is that's

00:32:08,920 --> 00:32:12,460
all built in to puppet right so that

00:32:10,930 --> 00:32:14,680
that's a you know common thing with

00:32:12,460 --> 00:32:16,270
puppet is to do you know there's there's

00:32:14,680 --> 00:32:18,400
a unit testing framework that's based on

00:32:16,270 --> 00:32:19,030
r-spec which is a you know came out of

00:32:18,400 --> 00:32:23,280
Ruby on Rails

00:32:19,030 --> 00:32:26,500
there's a there's an acceptance test

00:32:23,280 --> 00:32:28,150
thing called beaker that's used to

00:32:26,500 --> 00:32:30,550
actually like spin up vm's and apply a

00:32:28,150 --> 00:32:33,340
class and and do testing that that then

00:32:30,550 --> 00:32:35,260
uses server spec which is a chef thing

00:32:33,340 --> 00:32:36,880
actually in order to test that

00:32:35,260 --> 00:32:39,610
everything it works the way that you

00:32:36,880 --> 00:32:42,400
intend and and and actually all of the

00:32:39,610 --> 00:32:44,980
all of those modules that I was listing

00:32:42,400 --> 00:32:48,010
all have pretty extensive testing Suites

00:32:44,980 --> 00:32:49,660
so it's actually pretty you know

00:32:48,010 --> 00:32:51,700
relatively speaking it's pretty easy to

00:32:49,660 --> 00:32:53,500
get to do that you know on you know if

00:32:51,700 --> 00:32:55,690
you wanted to set up some you can do it

00:32:53,500 --> 00:32:59,950
and actually build it into a CIA CD

00:32:55,690 --> 00:33:03,120
pipeline so yeah anyway I saw their hand

00:32:59,950 --> 00:33:06,120
up over here yes sir

00:33:03,120 --> 00:33:06,120
yes

00:33:09,240 --> 00:33:19,360
sort of your have a dart sorry the so

00:33:18,010 --> 00:33:22,809
Trevor's actually spent quite a bit of

00:33:19,360 --> 00:33:29,260
time trying to understand the tasks and

00:33:22,809 --> 00:33:30,940
plans and the the initial implementation

00:33:29,260 --> 00:33:32,679
that was they they announced bolt about

00:33:30,940 --> 00:33:34,770
a year ago really honestly let's let's

00:33:32,679 --> 00:33:37,210
be realistic the idea was to have

00:33:34,770 --> 00:33:40,799
ansible for for people who are doing

00:33:37,210 --> 00:33:40,799
puppet right that's I mean you know

00:33:41,520 --> 00:33:45,700
again I'll talk more about this at my

00:33:43,840 --> 00:33:48,940
birds of a feather session tonight and

00:33:45,700 --> 00:33:51,100
the talk tomorrow but honestly what

00:33:48,940 --> 00:33:52,270
puppet does with maintaining state you

00:33:51,100 --> 00:33:53,470
know like say running every half hour

00:33:52,270 --> 00:33:56,380
whatever it's great for laying down a

00:33:53,470 --> 00:34:01,900
baseline but things like ansible and

00:33:56,380 --> 00:34:03,370
bolt are great for the you know periodic

00:34:01,900 --> 00:34:04,840
like one-off tests or things that have

00:34:03,370 --> 00:34:11,100
to affect multiple systems in a certain

00:34:04,840 --> 00:34:15,010
order or whatever right so the likes a

00:34:11,100 --> 00:34:17,500
puppet announced bolt a year ago and

00:34:15,010 --> 00:34:20,139
other tasks you know they built it into

00:34:17,500 --> 00:34:22,060
the puppet enterprise console it's

00:34:20,139 --> 00:34:28,060
actually pretty slick for doing little

00:34:22,060 --> 00:34:30,580
one-off things but the initial release

00:34:28,060 --> 00:34:32,169
of it they had plans which would let you

00:34:30,580 --> 00:34:35,230
just assemble tasks in a certain order

00:34:32,169 --> 00:34:37,510
or whatever and the tasks were scripts

00:34:35,230 --> 00:34:40,149
that would just were written in any

00:34:37,510 --> 00:34:43,149
language that could take JSON as in

00:34:40,149 --> 00:34:44,889
putting out and and and and spit it out

00:34:43,149 --> 00:34:51,750
as output that way all that could be

00:34:44,889 --> 00:34:54,159
plugged into the console yeah the the

00:34:51,750 --> 00:34:58,710
thing was you couldn't actually do

00:34:54,159 --> 00:35:01,270
puppet with puppet tasks and plans and

00:34:58,710 --> 00:35:04,750
and relatively recently they added the

00:35:01,270 --> 00:35:09,700
ability to to actually apply a puppet

00:35:04,750 --> 00:35:12,790
manifest directly from a plan right so

00:35:09,700 --> 00:35:14,740
now it you you have a way of doing the

00:35:12,790 --> 00:35:16,630
one-off stuff that also integrates some

00:35:14,740 --> 00:35:18,340
of the code that you're using for laying

00:35:16,630 --> 00:35:22,279
down that baseline which would be great

00:35:18,340 --> 00:35:23,749
for getting bootstrapped or you know

00:35:22,279 --> 00:35:25,549
you know for when you want to just

00:35:23,749 --> 00:35:28,640
trigger part of your you know your whole

00:35:25,549 --> 00:35:30,859
puppet stack like on a you know like

00:35:28,640 --> 00:35:32,930
you're doing patching or you know a

00:35:30,859 --> 00:35:36,789
deployment or something like that right

00:35:32,930 --> 00:35:39,950
so that is now technically possible

00:35:36,789 --> 00:35:45,890
whereas it wasn't you know six months

00:35:39,950 --> 00:35:48,349
ago three months ago actually so again

00:35:45,890 --> 00:35:51,799
very long-winded way of saying no not

00:35:48,349 --> 00:35:59,619
really but I expect that to be a thing

00:35:51,799 --> 00:35:59,619
in the near future so go with you first

00:36:04,830 --> 00:36:11,340
so you get that for free with puppet

00:36:07,650 --> 00:36:13,560
puppet has a no op mode so you can put

00:36:11,340 --> 00:36:15,120
nodes in and no op and it just it we

00:36:13,560 --> 00:36:16,710
will run it will report what it would do

00:36:15,120 --> 00:36:20,460
but it doesn't actually do anything

00:36:16,710 --> 00:36:26,100
so sip to do anything special to support

00:36:20,460 --> 00:36:32,160
that there you go

00:36:26,100 --> 00:36:33,690
I miss slightly sorry um so no you

00:36:32,160 --> 00:36:35,220
wouldn't have to do anything now the

00:36:33,690 --> 00:36:38,400
thing the thing about doing like

00:36:35,220 --> 00:36:39,810
applying everything in no op is that it

00:36:38,400 --> 00:36:41,910
can get a little weird when you've got

00:36:39,810 --> 00:36:43,290
dependencies so you know like this has

00:36:41,910 --> 00:36:45,210
to happen before this thing could happen

00:36:43,290 --> 00:36:47,160
before this thing could happen it may

00:36:45,210 --> 00:36:48,960
only report the first thing in that

00:36:47,160 --> 00:36:51,440
chain it may not necessarily report

00:36:48,960 --> 00:36:53,610
everything else depending on how the

00:36:51,440 --> 00:36:57,210
everything ends up getting laid out in

00:36:53,610 --> 00:36:59,490
the catalog but but yeah like say for

00:36:57,210 --> 00:37:01,500
the most part though you know you I mean

00:36:59,490 --> 00:37:02,850
this is the standard way to bring in

00:37:01,500 --> 00:37:06,480
something like if you're brown fielding

00:37:02,850 --> 00:37:08,610
this would be you know set up the

00:37:06,480 --> 00:37:12,000
simpler which you know puppet server

00:37:08,610 --> 00:37:14,670
with all the simple and and then take an

00:37:12,000 --> 00:37:19,500
agent node get to get the puppet agent

00:37:14,670 --> 00:37:23,280
installed set it to no op and classify

00:37:19,500 --> 00:37:26,670
it with the simp class and and then run

00:37:23,280 --> 00:37:28,560
the agent in in no op mode and just you

00:37:26,670 --> 00:37:30,510
know see how badly it blows up and then

00:37:28,560 --> 00:37:32,460
iteratively fix things until you get it

00:37:30,510 --> 00:37:33,810
right you know and then usually what

00:37:32,460 --> 00:37:35,040
ends up happening is you take it out of

00:37:33,810 --> 00:37:37,260
no op mode and still a couple things

00:37:35,040 --> 00:37:38,850
break and and then you figure out that

00:37:37,260 --> 00:37:42,060
oh for your environment you need this or

00:37:38,850 --> 00:37:44,280
this you know but yeah brown fielding

00:37:42,060 --> 00:37:46,320
simp I'm not gonna lie is not the most

00:37:44,280 --> 00:37:48,060
fun thing in the world brown fielding

00:37:46,320 --> 00:37:51,110
puppet in general taking systems that

00:37:48,060 --> 00:37:54,300
exist and getting them all consistent is

00:37:51,110 --> 00:37:56,850
is is a minor nightmare now you take

00:37:54,300 --> 00:37:58,740
that like up a degree of magnitude you

00:37:56,850 --> 00:38:00,360
know when you start talking about making

00:37:58,740 --> 00:38:08,840
you know like every last little thing

00:38:00,360 --> 00:38:08,840
compliant so anyway your question

00:38:10,640 --> 00:38:16,819
if you go full-bore with simp yes you

00:38:14,480 --> 00:38:20,420
get you get a whole entire kick-start

00:38:16,819 --> 00:38:23,619
environment and yeah it's it's

00:38:20,420 --> 00:38:26,239
everything cuz again the idea with simp

00:38:23,619 --> 00:38:30,200
originally was you know you plopped down

00:38:26,239 --> 00:38:31,789
a disk on a server in a skiff and you

00:38:30,200 --> 00:38:33,319
fire it up and then you know you have

00:38:31,789 --> 00:38:36,440
everything else connect to that and it

00:38:33,319 --> 00:38:40,279
does it does DNS it does DHCP it does

00:38:36,440 --> 00:38:42,710
TFTP it does LDAP it does

00:38:40,279 --> 00:38:47,269
I forget what all else too many things

00:38:42,710 --> 00:38:48,619
right that's actually you know that's

00:38:47,269 --> 00:38:50,630
that's a thing that's had to evolve over

00:38:48,619 --> 00:38:54,349
time is actually being able to not turn

00:38:50,630 --> 00:38:55,489
on all those things right is simply been

00:38:54,349 --> 00:38:59,779
open source for a few years I think

00:38:55,489 --> 00:39:04,880
since 2015 so it's still fairly rapidly

00:38:59,779 --> 00:39:09,380
evolving but but yeah it's it is totally

00:39:04,880 --> 00:39:11,930
possible now I actually just was working

00:39:09,380 --> 00:39:14,299
with a customer and got symp up and

00:39:11,930 --> 00:39:15,980
running with basically the server not

00:39:14,299 --> 00:39:17,690
knowing anything about sim this is a

00:39:15,980 --> 00:39:20,210
puppet the puppet master and this they

00:39:17,690 --> 00:39:22,249
were running puppet enterprise we made

00:39:20,210 --> 00:39:24,410
no modifications to the puppet master

00:39:22,249 --> 00:39:27,049
other than just dropping the you know

00:39:24,410 --> 00:39:28,369
the the the the sent modules on there

00:39:27,049 --> 00:39:32,299
and we were able to get everything

00:39:28,369 --> 00:39:33,650
working took a little bit of work and we

00:39:32,299 --> 00:39:37,430
had to disable a couple of things that

00:39:33,650 --> 00:39:38,269
would normally be turned on but because

00:39:37,430 --> 00:39:41,349
there's a few things that need

00:39:38,269 --> 00:39:46,789
server-side help to happen

00:39:41,349 --> 00:39:48,049
simp includes a really simple CA so you

00:39:46,789 --> 00:39:50,150
can actually like generate search for

00:39:48,049 --> 00:39:51,380
like if you've got like you know web

00:39:50,150 --> 00:39:53,599
servers and things like that it can

00:39:51,380 --> 00:39:55,910
generate the search for those so rather

00:39:53,599 --> 00:39:58,519
than just having you know self-signed

00:39:55,910 --> 00:40:01,640
cert on the box you have a you have a CA

00:39:58,519 --> 00:40:03,470
you know that's a you know private CA on

00:40:01,640 --> 00:40:06,619
the server and it generates the search

00:40:03,470 --> 00:40:08,359
for for all the agents and pushes them

00:40:06,619 --> 00:40:09,829
out so they get the same cert for all

00:40:08,359 --> 00:40:12,410
the different services and whatnot on

00:40:09,829 --> 00:40:15,200
the system but like but that requires

00:40:12,410 --> 00:40:18,650
server-side support right so I had to

00:40:15,200 --> 00:40:20,450
turn all that stuff off but again that

00:40:18,650 --> 00:40:22,789
was coming at it from the complete

00:40:20,450 --> 00:40:24,450
opposite direction like total brownfield

00:40:22,789 --> 00:40:26,730
you know trying to work it into a

00:40:24,450 --> 00:40:32,640
you know some place that I already had

00:40:26,730 --> 00:40:40,140
puppet enterprise so anyway throw one of

00:40:32,640 --> 00:40:41,310
these at you - oh man oh yeah I'm just

00:40:40,140 --> 00:40:44,099
not just not very accurate with these

00:40:41,310 --> 00:40:55,829
things luckily they're soft nobody's

00:40:44,099 --> 00:40:58,440
gonna get hurt yes yes so actually the

00:40:55,829 --> 00:40:59,760
cover the the windows implementation is

00:40:58,440 --> 00:41:01,349
actually pretty awesome because it was

00:40:59,760 --> 00:41:08,579
built from the ground up to use the

00:41:01,349 --> 00:41:13,400
compliance engine so it is mostly just

00:41:08,579 --> 00:41:18,150
the the compliance data mapped to

00:41:13,400 --> 00:41:20,970
pre-existing puppet forge modules so it

00:41:18,150 --> 00:41:22,650
uses the the windows feature there's a

00:41:20,970 --> 00:41:28,170
windows feature module on the forge

00:41:22,650 --> 00:41:29,520
there's a there's a registry module on

00:41:28,170 --> 00:41:30,839
the floors and there's there so there's

00:41:29,520 --> 00:41:34,560
various of these things that are you

00:41:30,839 --> 00:41:35,970
know mmm anyone who does window who does

00:41:34,560 --> 00:41:40,109
puppet on windows ends up using these

00:41:35,970 --> 00:41:42,480
modules and that's actually what the the

00:41:40,109 --> 00:41:48,980
windows simply knows is actually using

00:41:42,480 --> 00:41:48,980
on the back end so anybody else yes sir

00:41:54,329 --> 00:42:04,630
so so what so so HIPAA is one of the

00:42:02,640 --> 00:42:07,599
profiles that's included in the

00:42:04,630 --> 00:42:10,270
commercial product but ultimately what

00:42:07,599 --> 00:42:13,569
that just does is it there's another

00:42:10,270 --> 00:42:16,390
compliance profile that map's the the

00:42:13,569 --> 00:42:19,089
things that are required by HIPAA to you

00:42:16,390 --> 00:42:20,200
know again actually in most cases the

00:42:19,089 --> 00:42:22,059
things that are required by HIPAA

00:42:20,200 --> 00:42:24,220
actually mapped to an estate hundred

00:42:22,059 --> 00:42:28,210
fifty three control so it actually Maps

00:42:24,220 --> 00:42:32,230
the various controls in in HIPAA to NIST

00:42:28,210 --> 00:42:34,359
800-53 controls which then have they

00:42:32,230 --> 00:42:36,309
have have the puppet parameters and

00:42:34,359 --> 00:42:38,559
things associated with them so what it

00:42:36,309 --> 00:42:40,869
what it ends up doing honestly is it

00:42:38,559 --> 00:42:46,020
turns on a subset of what you would get

00:42:40,869 --> 00:42:49,569
if you turned on NIST 853 compliance so

00:42:46,020 --> 00:42:53,500
it just doesn't manage as much for the

00:42:49,569 --> 00:42:56,020
most part so if you if you were to put

00:42:53,500 --> 00:42:57,760
this in and go full-bore NIST 853 you'd

00:42:56,020 --> 00:42:59,710
probably be fine

00:42:57,760 --> 00:43:01,150
it's just it's gonna it's gonna be more

00:42:59,710 --> 00:43:04,599
intrusive than it would be if you just

00:43:01,150 --> 00:43:06,660
turned on HIPAA so does that makes any

00:43:04,599 --> 00:43:06,660
sense

00:43:23,950 --> 00:43:35,380
you go but yeah right yeah if you've got

00:43:33,850 --> 00:43:37,060
so you know this might be one of those

00:43:35,380 --> 00:43:39,310
things you have to you know you have to

00:43:37,060 --> 00:43:44,560
get security team and systems guys to

00:43:39,310 --> 00:43:46,600
talk together and you know but again if

00:43:44,560 --> 00:43:49,930
you have to deal with compliance it I

00:43:46,600 --> 00:43:52,270
mean so friend of mine okay actually a

00:43:49,930 --> 00:43:54,250
guy used to work with at my last job we

00:43:52,270 --> 00:43:56,590
you know we did a lot of homegrown stuff

00:43:54,250 --> 00:43:58,810
for Sox and PCI but we didn't have

00:43:56,590 --> 00:44:01,120
anything like simp in place and I

00:43:58,810 --> 00:44:03,580
started working for onyx point right

00:44:01,120 --> 00:44:06,820
after he had gotten we both left the

00:44:03,580 --> 00:44:09,280
last job within a few months of each

00:44:06,820 --> 00:44:11,410
other and he the place he went to work

00:44:09,280 --> 00:44:13,120
for they were starting to work with

00:44:11,410 --> 00:44:15,640
government and so he had to implement in

00:44:13,120 --> 00:44:18,100
this 800-53 so he ended up going and

00:44:15,640 --> 00:44:19,390
doing all of the work to figure out like

00:44:18,100 --> 00:44:21,040
you know okay what do we have to manage

00:44:19,390 --> 00:44:22,900
what you know what what do we have to

00:44:21,040 --> 00:44:25,000
supply you know you know they were doing

00:44:22,900 --> 00:44:26,710
puppet and he went through all at

00:44:25,000 --> 00:44:29,230
himself and then I got the job was on a

00:44:26,710 --> 00:44:30,730
point and found out about simp and and

00:44:29,230 --> 00:44:33,190
told him that he could have saved

00:44:30,730 --> 00:44:37,000
himself like weeks and weeks and weeks

00:44:33,190 --> 00:44:39,010
of work and still simp manages like ten

00:44:37,000 --> 00:44:43,890
times as much as what he did in order to

00:44:39,010 --> 00:44:45,090
in order to get past his his audit so

00:44:43,890 --> 00:44:58,450
anyway

00:44:45,090 --> 00:45:00,280
any more questions yes so I I can't I

00:44:58,450 --> 00:45:02,860
can't rattle off what the individual

00:45:00,280 --> 00:45:05,710
controls are but I'm reasonably sure

00:45:02,860 --> 00:45:09,310
that either we have a mapping for gdpr

00:45:05,710 --> 00:45:11,050
or somebody's working on it that's I

00:45:09,310 --> 00:45:15,220
mean it's actually a big part of our

00:45:11,050 --> 00:45:18,010
jobs or by our I mean people at my

00:45:15,220 --> 00:45:22,620
company a big part of our jobs is is

00:45:18,010 --> 00:45:25,810
going through all those the compliance

00:45:22,620 --> 00:45:27,370
standards and going through and finding

00:45:25,810 --> 00:45:28,960
all those mappings and figuring out

00:45:27,370 --> 00:45:31,480
everything that has to be managed and

00:45:28,960 --> 00:45:33,010
and so on and so forth and yeah it's

00:45:31,480 --> 00:45:36,079
actually a pretty big part of several

00:45:33,010 --> 00:45:38,460
people's jobs not mine thank God

00:45:36,079 --> 00:45:42,240
let's go cross when I start staring at

00:45:38,460 --> 00:45:43,680
this for any good time but so anyway I

00:45:42,240 --> 00:45:47,369
can't answer that because I just don't

00:45:43,680 --> 00:45:50,339
know personally but but you know

00:45:47,369 --> 00:45:52,380
somebody will and and like say if you're

00:45:50,339 --> 00:45:56,390
if you were stuck implementing that and

00:45:52,380 --> 00:46:00,480
all you had was you know open-source

00:45:56,390 --> 00:46:04,020
simplest 800-53 and and disis dig you

00:46:00,480 --> 00:46:05,369
probably could get 90 plus percent of

00:46:04,020 --> 00:46:07,020
the way there I'd almost be willing to

00:46:05,369 --> 00:46:09,240
bet you could get 90 plus percent of the

00:46:07,020 --> 00:46:12,630
way they're building a compliance

00:46:09,240 --> 00:46:14,670
profile that just turned on individual

00:46:12,630 --> 00:46:17,190
pieces of the of the disis dig into

00:46:14,670 --> 00:46:19,289
state hundred fifty-three things which

00:46:17,190 --> 00:46:21,000
is like really trivial to do you just

00:46:19,289 --> 00:46:22,950
basically have to map okay this this

00:46:21,000 --> 00:46:24,930
control match to this control and then

00:46:22,950 --> 00:46:36,210
that control has has something behind it

00:46:24,930 --> 00:46:38,069
right so I forget the exact list but I

00:46:36,210 --> 00:46:39,900
know in the in the commercial the

00:46:38,069 --> 00:46:41,549
commercial product honestly is less

00:46:39,900 --> 00:46:44,819
about the extra profiles and more about

00:46:41,549 --> 00:46:46,799
the the windows support and and some of

00:46:44,819 --> 00:46:50,029
the dashboards and visualizations around

00:46:46,799 --> 00:46:53,520
it and we're working on a really cool

00:46:50,029 --> 00:46:55,230
console that's gonna let you actually

00:46:53,520 --> 00:46:58,339
see what things are non-compliant and

00:46:55,230 --> 00:47:00,690
actually fix them from the from the GUI

00:46:58,339 --> 00:47:02,309
which is Ritchie's honestly what a lot

00:47:00,690 --> 00:47:03,750
of people want right they don't they

00:47:02,309 --> 00:47:05,190
don't want to have to ever go in and

00:47:03,750 --> 00:47:06,960
edit a file they just want to you know

00:47:05,190 --> 00:47:09,930
need to click and see things that are

00:47:06,960 --> 00:47:11,309
red and you know whatever right and so

00:47:09,930 --> 00:47:13,740
we've got a lot of development effort

00:47:11,309 --> 00:47:15,539
going into that and it's looking really

00:47:13,740 --> 00:47:19,349
cool and that'll be released sometime in

00:47:15,539 --> 00:47:21,480
the relatively near future but the extra

00:47:19,349 --> 00:47:26,700
profiles are you know like say I think I

00:47:21,480 --> 00:47:30,450
know pci-dss and socks and what else and

00:47:26,700 --> 00:47:33,240
HIPAA are in that list but I don't

00:47:30,450 --> 00:47:36,809
remember what all else but you know and

00:47:33,240 --> 00:47:40,710
again the thing is you know if it

00:47:36,809 --> 00:47:43,680
offends you to pay for you know to pay

00:47:40,710 --> 00:47:45,339
for commercial you know versions and

00:47:43,680 --> 00:47:49,989
open-source things

00:47:45,339 --> 00:47:53,859
you know you can you know most cases

00:47:49,989 --> 00:47:56,049
almost every compliance standard out

00:47:53,859 --> 00:47:59,440
there does end up devolve into some

00:47:56,049 --> 00:48:01,559
subset of NIST 853 and DISA stick so if

00:47:59,440 --> 00:48:05,140
you go in and you turn both of those on

00:48:01,559 --> 00:48:07,029
you're probably gonna cover almost

00:48:05,140 --> 00:48:08,769
everything you're gonna be managing more

00:48:07,029 --> 00:48:13,779
than you need to but you're gonna cover

00:48:08,769 --> 00:48:21,640
almost everything so yeah anyway yes sir

00:48:13,779 --> 00:48:24,700
I wasn't around for that so I can't

00:48:21,640 --> 00:48:25,809
really not to mention the fact that I

00:48:24,700 --> 00:48:31,180
don't have clearance and so I'm not

00:48:25,809 --> 00:48:33,009
allowed to know lots of things but I

00:48:31,180 --> 00:48:40,089
think you're gonna get my last one of

00:48:33,009 --> 00:48:41,319
these anyway the but yeah so the NSA's

00:48:40,089 --> 00:48:43,390
actually got several things that they've

00:48:41,319 --> 00:48:47,469
open sourced over the last number of

00:48:43,390 --> 00:48:49,059
years right and so it's kind of cool

00:48:47,469 --> 00:48:51,789
that some of the stuff that's grown up

00:48:49,059 --> 00:48:54,309
inside you know somewhere in the

00:48:51,789 --> 00:48:56,589
government has has been able to be

00:48:54,309 --> 00:49:00,670
shared with everybody else and I do know

00:48:56,589 --> 00:49:02,440
I heard a thing where the government

00:49:00,670 --> 00:49:04,569
agencies are required actually now to

00:49:02,440 --> 00:49:06,249
open-source a certain percentage of what

00:49:04,569 --> 00:49:07,630
they work on so it's kind of cool

00:49:06,249 --> 00:49:09,609
because we've still got people on the

00:49:07,630 --> 00:49:11,890
inside built working on some who and

00:49:09,609 --> 00:49:13,479
then they're open sourcing yeah so I

00:49:11,890 --> 00:49:16,839
need get wrapped up so thank you

00:49:13,479 --> 00:49:19,299
everybody and try not to knock that over

00:49:16,839 --> 00:49:20,739
if you've got any more questions feel

00:49:19,299 --> 00:49:22,329
free to grab me I'll be around floating

00:49:20,739 --> 00:49:24,130
around here and like say I do have a

00:49:22,329 --> 00:49:25,450
birds of a feather session on puppet

00:49:24,130 --> 00:49:26,829
specifically later on if you've got

00:49:25,450 --> 00:49:28,690
questions about Center welcome you show

00:49:26,829 --> 00:49:30,549
it for that and and then I've got a

00:49:28,690 --> 00:49:32,270
whole talk just on puppet tomorrow so

00:49:30,549 --> 00:49:36,119
thank you

00:49:32,270 --> 00:49:36,119

YouTube URL: https://www.youtube.com/watch?v=xjG5DYpgQQ8


