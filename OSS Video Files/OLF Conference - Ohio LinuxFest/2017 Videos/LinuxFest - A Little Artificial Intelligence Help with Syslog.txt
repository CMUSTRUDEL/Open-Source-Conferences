Title: LinuxFest - A Little Artificial Intelligence Help with Syslog
Publication date: 2017-10-18
Playlist: 2017 Videos
Description: 
	This talk is part of the Ohio LinuxFest sysadmin track. It was held in Franklin C at 11AM. Speakers include Cameron Hughes, Tracey Hughes, and Trevor Watkins.

Artificial intelligence is first mentioned 33 minutes in.
Captions: 
	00:00:00,960 --> 00:00:07,040
so i would like to thank everyone for

00:00:03,600 --> 00:00:10,320
coming to our talk on uh

00:00:07,040 --> 00:00:13,519
a little ai help for syslog

00:00:10,320 --> 00:00:15,360
uh this talk will be in three parts uh

00:00:13,519 --> 00:00:18,640
the first part

00:00:15,360 --> 00:00:22,160
will be a brief introduction of the

00:00:18,640 --> 00:00:25,199
syslog subsystem that will be presented

00:00:22,160 --> 00:00:27,760
by myself my name is tracy hughes

00:00:25,199 --> 00:00:29,359
the second part will be a talk about

00:00:27,760 --> 00:00:33,840
some of the tools

00:00:29,359 --> 00:00:37,040
that are used to analyze syslog messages

00:00:33,840 --> 00:00:40,559
and that presentation will be done by

00:00:37,040 --> 00:00:42,000
trevor watkins and the third part of our

00:00:40,559 --> 00:00:45,600
talk

00:00:42,000 --> 00:00:48,879
is when we will present our uh approach

00:00:45,600 --> 00:00:52,239
to analyzing syslog messages using

00:00:48,879 --> 00:00:52,719
some ai techniques and that will be done

00:00:52,239 --> 00:00:56,840
by

00:00:52,719 --> 00:00:59,680
cameron hughes wait wait no

00:00:56,840 --> 00:01:03,120
okay

00:00:59,680 --> 00:01:04,720
okay so log messages are constantly

00:01:03,120 --> 00:01:08,400
being generated

00:01:04,720 --> 00:01:11,760
by uh computer systems facilities

00:01:08,400 --> 00:01:13,360
and they're done every day every hour in

00:01:11,760 --> 00:01:15,759
some cases every second every

00:01:13,360 --> 00:01:17,280
millisecond these syslog messages are

00:01:15,759 --> 00:01:20,880
constantly being

00:01:17,280 --> 00:01:24,320
generated whenever an event occurs

00:01:20,880 --> 00:01:26,720
a log message is generated these events

00:01:24,320 --> 00:01:29,759
can reflect the normal operation

00:01:26,720 --> 00:01:30,560
of the facility like printing a document

00:01:29,759 --> 00:01:34,560
or

00:01:30,560 --> 00:01:37,600
sending a file or complete shutdown

00:01:34,560 --> 00:01:39,439
of your computer system a syslog message

00:01:37,600 --> 00:01:42,640
is generated

00:01:39,439 --> 00:01:43,680
and it supposed to tell you what happens

00:01:42,640 --> 00:01:46,880
it gives you

00:01:43,680 --> 00:01:49,680
some additional information

00:01:46,880 --> 00:01:51,360
those syslog messages contain as i

00:01:49,680 --> 00:01:54,720
stated before

00:01:51,360 --> 00:01:57,600
the status of the facility

00:01:54,720 --> 00:02:01,040
all the way to giving you information

00:01:57,600 --> 00:02:03,920
about some horrible event some emergency

00:02:01,040 --> 00:02:03,920
that just occurred

00:02:04,479 --> 00:02:11,039
since our messages can be cryptic

00:02:07,680 --> 00:02:15,280
and difficult to read all the way to

00:02:11,039 --> 00:02:17,840
being very readable that anyone can read

00:02:15,280 --> 00:02:19,599
uh said before there are thousands of

00:02:17,840 --> 00:02:20,319
messages that could be generated every

00:02:19,599 --> 00:02:24,080
day

00:02:20,319 --> 00:02:27,680
to tens of thousands of messages

00:02:24,080 --> 00:02:30,959
that can be generated on your computer

00:02:27,680 --> 00:02:32,480
and those messages have to be analyzed

00:02:30,959 --> 00:02:35,440
by a person

00:02:32,480 --> 00:02:36,879
or some tool that you have installed on

00:02:35,440 --> 00:02:40,160
your computer

00:02:36,879 --> 00:02:40,160
uh when some negative

00:02:40,319 --> 00:02:44,480
situation takes place

00:02:44,879 --> 00:02:48,640
so before i get any further on this

00:02:46,959 --> 00:02:49,360
discussion i want to make sure we're all

00:02:48,640 --> 00:02:52,480
on the same

00:02:49,360 --> 00:02:54,800
same page as far as what syslog is

00:02:52,480 --> 00:02:56,640
and when we refer to syslog what are we

00:02:54,800 --> 00:02:59,800
talking about

00:02:56,640 --> 00:03:03,239
we are talking about the formal

00:02:59,800 --> 00:03:07,599
specification of syslog the rfc

00:03:03,239 --> 00:03:10,159
5434 that was documented by the internet

00:03:07,599 --> 00:03:11,720
engineering task force that replaced the

00:03:10,159 --> 00:03:15,200
rfc

00:03:11,720 --> 00:03:18,879
3164 that's the one we talked about

00:03:15,200 --> 00:03:20,800
the syslog subsystem is a specification

00:03:18,879 --> 00:03:24,159
that defines

00:03:20,800 --> 00:03:27,280
the separation of the facility

00:03:24,159 --> 00:03:30,159
that generates the syslog messages

00:03:27,280 --> 00:03:30,959
or the message originators like the

00:03:30,159 --> 00:03:35,519
colonel

00:03:30,959 --> 00:03:37,920
and demons and user processors etc

00:03:35,519 --> 00:03:38,879
that is separated from the system that

00:03:37,920 --> 00:03:41,920
actually does

00:03:38,879 --> 00:03:45,120
something with those syslog messages

00:03:41,920 --> 00:03:47,200
and that's the system demon

00:03:45,120 --> 00:03:48,319
i wonder who came up with the idea of a

00:03:47,200 --> 00:03:51,360
system

00:03:48,319 --> 00:03:54,159
demon syslog demon who came up with that

00:03:51,360 --> 00:03:54,799
okay the syslog demon determines what

00:03:54,159 --> 00:03:58,080
happens

00:03:54,799 --> 00:04:00,080
to the messages uh it determines how

00:03:58,080 --> 00:04:04,000
they are processed

00:04:00,080 --> 00:04:05,120
and where they go and how they are

00:04:04,000 --> 00:04:07,200
stored

00:04:05,120 --> 00:04:08,959
and they get that information those

00:04:07,200 --> 00:04:12,560
instructions from the

00:04:08,959 --> 00:04:13,439
syslog configuration file and in that

00:04:12,560 --> 00:04:16,720
file

00:04:13,439 --> 00:04:19,919
it contains uh user-defined rules

00:04:16,720 --> 00:04:22,320
and instructions that dictate the events

00:04:19,919 --> 00:04:23,520
that the uh the demon is going to pay

00:04:22,320 --> 00:04:25,440
attention to

00:04:23,520 --> 00:04:30,639
and what it's going to do when that

00:04:25,440 --> 00:04:35,280
event takes place the destination

00:04:30,639 --> 00:04:37,280
oops the destination

00:04:35,280 --> 00:04:39,360
is where the syslogs are going to be

00:04:37,280 --> 00:04:42,080
routed or where they're going to be

00:04:39,360 --> 00:04:45,440
stored they can be stored in log files

00:04:42,080 --> 00:04:46,160
they could be stored on some central log

00:04:45,440 --> 00:04:50,639
hole

00:04:46,160 --> 00:04:50,639
a host excuse me there it goes here

00:04:51,280 --> 00:04:57,600
or it could be routed to a user or

00:04:54,479 --> 00:05:00,960
a console

00:04:57,600 --> 00:05:03,840
here's example of a syslog message

00:05:00,960 --> 00:05:05,520
layout this doesn't have all the

00:05:03,840 --> 00:05:08,639
components

00:05:05,520 --> 00:05:11,919
that is possible for a syslog

00:05:08,639 --> 00:05:13,440
message to contain but it has is showing

00:05:11,919 --> 00:05:17,039
the

00:05:13,440 --> 00:05:20,320
timestamp host name facility

00:05:17,039 --> 00:05:22,560
and an actual syslog message no such

00:05:20,320 --> 00:05:25,840
file or directory

00:05:22,560 --> 00:05:25,840
that's not too good

00:05:27,280 --> 00:05:34,240
okay now here is a list of the various

00:05:30,560 --> 00:05:35,919
syslog components these are all of them

00:05:34,240 --> 00:05:37,520
here's a list of some of them i'm going

00:05:35,919 --> 00:05:43,199
to review

00:05:37,520 --> 00:05:45,440
quickly the priority value

00:05:43,199 --> 00:05:47,919
is a single number that's contained in

00:05:45,440 --> 00:05:51,919
angle brackets and it represents

00:05:47,919 --> 00:05:54,479
the severity and the facility of the

00:05:51,919 --> 00:05:54,479
message

00:05:54,720 --> 00:06:01,919
the purpose of the priority value is to

00:05:59,120 --> 00:06:03,199
categorize the priority of that syslog

00:06:01,919 --> 00:06:08,880
message

00:06:03,199 --> 00:06:12,960
the value is between 100 and 0 and 191

00:06:08,880 --> 00:06:16,000
again it represents the facility

00:06:12,960 --> 00:06:19,759
level those values are between 0

00:06:16,000 --> 00:06:23,199
and 23 and the severity level

00:06:19,759 --> 00:06:26,319
and those values are between zero and

00:06:23,199 --> 00:06:29,840
seven here a list

00:06:26,319 --> 00:06:34,240
of the facility numbers

00:06:29,840 --> 00:06:37,440
uh 16 predefined

00:06:34,240 --> 00:06:37,440
facility numbers

00:06:38,560 --> 00:06:42,479
current is is

00:06:43,039 --> 00:06:46,400
the kernel messages that are generated

00:06:46,000 --> 00:06:48,880
by

00:06:46,400 --> 00:06:50,000
kernel processes and we're all familiar

00:06:48,880 --> 00:06:53,360
with

00:06:50,000 --> 00:06:58,000
the kernel the colonel is

00:06:53,360 --> 00:06:58,000
in charge of the ipc

00:06:58,560 --> 00:07:06,240
file management memory

00:07:02,800 --> 00:07:08,319
of those processes if

00:07:06,240 --> 00:07:11,039
something happened in the kernel and

00:07:08,319 --> 00:07:15,280
you're generating kernel messages

00:07:11,039 --> 00:07:18,880
you got a problem serious problem um

00:07:15,280 --> 00:07:20,240
user level messages uh those are the

00:07:18,880 --> 00:07:22,160
processes that you

00:07:20,240 --> 00:07:23,360
use all the time the applications that

00:07:22,160 --> 00:07:26,000
you use

00:07:23,360 --> 00:07:27,360
your word processor or whatever else

00:07:26,000 --> 00:07:30,400
you're using

00:07:27,360 --> 00:07:31,759
uh whatever hardware you're using those

00:07:30,400 --> 00:07:35,120
going to generate

00:07:31,759 --> 00:07:35,759
user level messages and if something

00:07:35,120 --> 00:07:39,360
happens

00:07:35,759 --> 00:07:43,440
there you got a problem

00:07:39,360 --> 00:07:46,960
okay demons those are system

00:07:43,440 --> 00:07:49,280
of demons like crime jobs

00:07:46,960 --> 00:07:50,240
those are very important and something

00:07:49,280 --> 00:07:55,520
happens there

00:07:50,240 --> 00:07:55,520
you got a problem okay some of these

00:07:55,599 --> 00:08:01,440
aren't used much anymore by

00:07:58,879 --> 00:08:04,000
users if i'm wrong you can raise your

00:08:01,440 --> 00:08:07,199
hand and say i still use that

00:08:04,000 --> 00:08:08,960
line printer subsystems those are those

00:08:07,199 --> 00:08:10,479
old line printers that would print a

00:08:08,960 --> 00:08:14,800
whole line of text

00:08:10,479 --> 00:08:18,080
one impact um actually there are some

00:08:14,800 --> 00:08:21,039
companies that still use that so

00:08:18,080 --> 00:08:21,759
that's still out there for some users

00:08:21,039 --> 00:08:25,280
news

00:08:21,759 --> 00:08:28,000
that's using that any usernet

00:08:25,280 --> 00:08:29,599
people out there no i'm sure there are

00:08:28,000 --> 00:08:33,680
some pockets somewhere but

00:08:29,599 --> 00:08:36,240
it's not generally used uh uucp

00:08:33,680 --> 00:08:37,919
that's the unix unix copy for

00:08:36,240 --> 00:08:41,680
transferring files

00:08:37,919 --> 00:08:44,720
we normally use ftp and dropbox and

00:08:41,680 --> 00:08:48,800
stuff like that the other

00:08:44,720 --> 00:08:53,040
facilities 16 to 23

00:08:48,800 --> 00:08:56,800
those are open to be defined by

00:08:53,040 --> 00:08:56,800
anything that's not in this list

00:08:57,920 --> 00:09:03,920
this table is the list of severity

00:09:01,440 --> 00:09:03,920
numbers

00:09:04,320 --> 00:09:08,240
this is a serious stuff it's going to

00:09:06,000 --> 00:09:11,279
tell you how serious

00:09:08,240 --> 00:09:12,480
the syslog message as far as what

00:09:11,279 --> 00:09:14,640
happened

00:09:12,480 --> 00:09:15,920
the severity number is going to tell you

00:09:14,640 --> 00:09:19,600
how severe

00:09:15,920 --> 00:09:19,600
how serious that message is

00:09:19,680 --> 00:09:26,000
the first three emergency alert critical

00:09:23,440 --> 00:09:28,080
those are the most important and those

00:09:26,000 --> 00:09:32,080
are the ones that should be responded to

00:09:28,080 --> 00:09:36,160
immediately are close to immediately

00:09:32,080 --> 00:09:36,160
eventually something has to be done

00:09:36,320 --> 00:09:40,640
air or air conditions

00:09:41,279 --> 00:09:47,360
they don't have to be respond to in any

00:09:43,519 --> 00:09:51,680
urgent fashion but they are serious

00:09:47,360 --> 00:09:55,440
warning and notice those messages

00:09:51,680 --> 00:09:58,399
are like a pre-warning to

00:09:55,440 --> 00:10:00,240
air condition that might take place so

00:09:58,399 --> 00:10:03,519
they shouldn't be ignored

00:10:00,240 --> 00:10:04,640
i know a lot of people will not want to

00:10:03,519 --> 00:10:07,360
see those

00:10:04,640 --> 00:10:08,000
those messages warning notice info debug

00:10:07,360 --> 00:10:11,519
but

00:10:08,000 --> 00:10:14,880
they could be very useful info

00:10:11,519 --> 00:10:18,320
is status messages

00:10:14,880 --> 00:10:19,200
and debug is used for debugging programs

00:10:18,320 --> 00:10:23,519
or

00:10:19,200 --> 00:10:23,519
any other kind of diagnosis

00:10:25,120 --> 00:10:31,600
okay okay next we have version

00:10:29,200 --> 00:10:33,839
that's the version field that's the

00:10:31,600 --> 00:10:35,920
version of the syslog

00:10:33,839 --> 00:10:37,120
specification that is used for that

00:10:35,920 --> 00:10:41,120
system

00:10:37,120 --> 00:10:44,079
time stamp tells you when the

00:10:41,120 --> 00:10:45,760
message was generated and the time it

00:10:44,079 --> 00:10:48,000
was generated

00:10:45,760 --> 00:10:49,600
by a time stamp there's a number of time

00:10:48,000 --> 00:10:52,640
stamp formats

00:10:49,600 --> 00:10:53,279
here's some example of a few of them is

00:10:52,640 --> 00:10:56,160
very

00:10:53,279 --> 00:10:57,600
versatile it's a number of different

00:10:56,160 --> 00:11:01,200
formats you can use

00:10:57,600 --> 00:11:05,040
to represent the

00:11:01,200 --> 00:11:08,079
fine-tuned information that you want

00:11:05,040 --> 00:11:14,880
express as far as when a message

00:11:08,079 --> 00:11:16,720
occurs next is the host name

00:11:14,880 --> 00:11:18,880
the host name is the name of the

00:11:16,720 --> 00:11:22,160
computer that the

00:11:18,880 --> 00:11:25,279
syslog message was generated from

00:11:22,160 --> 00:11:28,000
uh the app name is the name of the

00:11:25,279 --> 00:11:31,200
device or the application that generated

00:11:28,000 --> 00:11:34,959
the message the proc

00:11:31,200 --> 00:11:39,440
id number is the process name

00:11:34,959 --> 00:11:42,640
or the process id for the

00:11:39,440 --> 00:11:44,560
syslog specification syslog system that

00:11:42,640 --> 00:11:47,680
is in use

00:11:44,560 --> 00:11:48,480
if the host name the app name and the

00:11:47,680 --> 00:11:52,959
proc

00:11:48,480 --> 00:11:52,959
id number if that information is not

00:11:53,200 --> 00:11:57,360
accessible if it's not available to the

00:11:55,760 --> 00:12:00,959
syslog demon

00:11:57,360 --> 00:12:03,680
then a nil value would be put

00:12:00,959 --> 00:12:03,680
in its place

00:12:04,240 --> 00:12:10,800
the message id number is a generated

00:12:07,279 --> 00:12:13,920
number that identifies the uh

00:12:10,800 --> 00:12:17,519
the message and that's an example of

00:12:13,920 --> 00:12:22,959
a generated message number

00:12:17,519 --> 00:12:25,760
structured data this is very useful

00:12:22,959 --> 00:12:26,800
i don't know how much information is out

00:12:25,760 --> 00:12:30,240
there as far

00:12:26,800 --> 00:12:32,399
as uh how it should be used but

00:12:30,240 --> 00:12:35,120
it's useful from the standpoint of when

00:12:32,399 --> 00:12:38,079
you have messages that are very cryptic

00:12:35,120 --> 00:12:39,760
using a structured data can help as far

00:12:38,079 --> 00:12:40,800
as parsing and getting a little more

00:12:39,760 --> 00:12:45,360
understanding

00:12:40,800 --> 00:12:49,200
of that message they are data blocks

00:12:45,360 --> 00:12:51,440
the data blocks are are enclosed in

00:12:49,200 --> 00:12:54,560
these square brackets

00:12:51,440 --> 00:12:58,320
the data block has a sd number or

00:12:54,560 --> 00:13:02,240
structured data id number

00:12:58,320 --> 00:13:02,240
it has parameters

00:13:02,399 --> 00:13:06,959
and those parameters are are structured

00:13:05,680 --> 00:13:09,760
in a name

00:13:06,959 --> 00:13:09,760
value pair

00:13:10,160 --> 00:13:16,720
here's some examples of

00:13:13,360 --> 00:13:20,000
these data blocks there are also called

00:13:16,720 --> 00:13:23,120
structured data elements this

00:13:20,000 --> 00:13:24,320
first one you see this is the structured

00:13:23,120 --> 00:13:27,440
data id

00:13:24,320 --> 00:13:28,800
it has three parameters structured data

00:13:27,440 --> 00:13:32,959
parameters here

00:13:28,800 --> 00:13:34,800
you can also have multiple

00:13:32,959 --> 00:13:36,959
structured data elements here's the

00:13:34,800 --> 00:13:38,079
first one that has three parameters with

00:13:36,959 --> 00:13:41,519
the id

00:13:38,079 --> 00:13:43,839
here the the second one has id

00:13:41,519 --> 00:13:44,800
and only has one parameter so you could

00:13:43,839 --> 00:13:48,240
have multiple

00:13:44,800 --> 00:13:49,680
of multiple number of these structured

00:13:48,240 --> 00:13:53,839
data elements

00:13:49,680 --> 00:13:56,399
and again this will help in

00:13:53,839 --> 00:14:00,000
determining what the message is about

00:13:56,399 --> 00:14:00,000
using those value pairs

00:14:00,959 --> 00:14:06,800
okay then you have the message the

00:14:04,160 --> 00:14:08,959
message is free form

00:14:06,800 --> 00:14:10,800
uh that provides information about the

00:14:08,959 --> 00:14:13,920
event that takes place

00:14:10,800 --> 00:14:15,440
but because it's free form anything

00:14:13,920 --> 00:14:18,480
could be in it it could be

00:14:15,440 --> 00:14:21,680
clear and readable or it could be

00:14:18,480 --> 00:14:24,639
cryptic and completely not

00:14:21,680 --> 00:14:27,760
understandable by the average user here

00:14:24,639 --> 00:14:30,240
are some examples of

00:14:27,760 --> 00:14:31,839
some messages that are readable and

00:14:30,240 --> 00:14:34,800
understandable

00:14:31,839 --> 00:14:34,800
okay so

00:14:35,920 --> 00:14:39,920
this law has been around for a long time

00:14:38,240 --> 00:14:43,360
it was

00:14:39,920 --> 00:14:47,120
developed in the 1980s

00:14:43,360 --> 00:14:50,399
it was uh and what i found out is

00:14:47,120 --> 00:14:54,160
that it's it's a voluntary

00:14:50,399 --> 00:14:57,199
um uh specification uh there isn't

00:14:54,160 --> 00:15:00,639
a formal specification that

00:14:57,199 --> 00:15:03,199
uh exists the um

00:15:00,639 --> 00:15:04,079
internet engineering task force they

00:15:03,199 --> 00:15:06,000
adopted it

00:15:04,079 --> 00:15:08,240
and and documented it but they didn't

00:15:06,000 --> 00:15:11,040
develop it they just document it

00:15:08,240 --> 00:15:12,160
and suggest that people use it and it's

00:15:11,040 --> 00:15:15,360
been uh

00:15:12,160 --> 00:15:18,639
pretty much uh the standard

00:15:15,360 --> 00:15:21,760
for assist law messages uh syslog

00:15:18,639 --> 00:15:25,519
ng that was developed in 1998

00:15:21,760 --> 00:15:28,560
and our syslog those are

00:15:25,519 --> 00:15:30,560
iterations of the syslog

00:15:28,560 --> 00:15:32,880
and each one kind of improves on the

00:15:30,560 --> 00:15:36,399
previous one giving you

00:15:32,880 --> 00:15:40,959
more flexibility giving you ability to

00:15:36,399 --> 00:15:44,000
do a better job parsing those uh

00:15:40,959 --> 00:15:48,240
messages and trevor is going to get

00:15:44,000 --> 00:15:55,839
more into that aspect and i'm going to

00:15:48,240 --> 00:15:55,839
leave that up to him

00:16:06,839 --> 00:16:09,839
uh

00:16:12,399 --> 00:16:16,560
okay good afternoon everybody how's

00:16:14,880 --> 00:16:18,880
everybody doing

00:16:16,560 --> 00:16:18,880
all right

00:16:20,720 --> 00:16:24,320
so today from my portion of the

00:16:23,120 --> 00:16:26,240
presentation

00:16:24,320 --> 00:16:28,560
i'm going to talk a little bit abroad

00:16:26,240 --> 00:16:32,320
about or briefly a little bit about

00:16:28,560 --> 00:16:34,720
syslog tools um features of those tools

00:16:32,320 --> 00:16:36,160
the importance of log management and in

00:16:34,720 --> 00:16:38,959
log analysis

00:16:36,160 --> 00:16:40,160
um i just came here today from another

00:16:38,959 --> 00:16:42,959
conference

00:16:40,160 --> 00:16:43,680
and i got here about 9 a.m so i did two

00:16:42,959 --> 00:16:45,600
things

00:16:43,680 --> 00:16:47,600
the second i'll tell you um a little bit

00:16:45,600 --> 00:16:49,040
later in my last slide

00:16:47,600 --> 00:16:51,040
but the first thing i did was sort of

00:16:49,040 --> 00:16:53,839
did a walk around to see

00:16:51,040 --> 00:16:55,440
what systems you were all using all

00:16:53,839 --> 00:16:56,480
right that's all i'm always curious

00:16:55,440 --> 00:16:58,880
about that

00:16:56,480 --> 00:17:00,320
and so i saw some people with macbooks i

00:16:58,880 --> 00:17:01,759
saw some people

00:17:00,320 --> 00:17:04,000
that were actually running linux some

00:17:01,759 --> 00:17:07,679
people are actually running linux and a

00:17:04,000 --> 00:17:09,679
virtual machine okay i think everybody

00:17:07,679 --> 00:17:11,919
here has a smartphone

00:17:09,679 --> 00:17:13,600
okay i've i've thought about reverting

00:17:11,919 --> 00:17:15,679
back to flip

00:17:13,600 --> 00:17:16,880
but everyone here has a smartphone

00:17:15,679 --> 00:17:20,160
whether it's

00:17:16,880 --> 00:17:21,439
ios or android android obviously is

00:17:20,160 --> 00:17:24,880
linux and ios

00:17:21,439 --> 00:17:28,640
obviously is built on berkeley unix okay

00:17:24,880 --> 00:17:32,880
the reason why i state that is because

00:17:28,640 --> 00:17:36,000
we are all system administrators okay

00:17:32,880 --> 00:17:37,600
so i want to ask you guys this question

00:17:36,000 --> 00:17:39,039
when is the last time you looked under

00:17:37,600 --> 00:17:41,440
the hood

00:17:39,039 --> 00:17:44,160
of your machine so by showing hands how

00:17:41,440 --> 00:17:46,480
many of you have actually

00:17:44,160 --> 00:17:47,440
looked at any of your logs on your

00:17:46,480 --> 00:17:51,039
devices

00:17:47,440 --> 00:17:54,240
in the last 24 hours okay

00:17:51,039 --> 00:17:57,039
wow so i guess that eliminates the other

00:17:54,240 --> 00:17:58,880
week month year or ever so so you guys

00:17:57,039 --> 00:18:00,559
look at your so you guys constantly look

00:17:58,880 --> 00:18:03,120
at your logs

00:18:00,559 --> 00:18:04,320
on your on your personal devices okay so

00:18:03,120 --> 00:18:07,679
that's good

00:18:04,320 --> 00:18:10,960
um the average person does not

00:18:07,679 --> 00:18:14,799
and that's typically because

00:18:10,960 --> 00:18:17,360
they just don't know in regards to

00:18:14,799 --> 00:18:18,880
education it's really not embedded in

00:18:17,360 --> 00:18:20,640
the curriculum

00:18:18,880 --> 00:18:22,559
i actually teach two cyber security

00:18:20,640 --> 00:18:24,480
courses and

00:18:22,559 --> 00:18:26,240
usually on the first day i talk about

00:18:24,480 --> 00:18:28,480
log management

00:18:26,240 --> 00:18:30,240
and i actually show them syslog and i

00:18:28,480 --> 00:18:31,039
may lose two or three students the next

00:18:30,240 --> 00:18:34,559
day

00:18:31,039 --> 00:18:38,000
um it's it's difficult all right and so

00:18:34,559 --> 00:18:41,520
the average person does not do do syslog

00:18:38,000 --> 00:18:45,200
management now companies okay

00:18:41,520 --> 00:18:45,200
that's another whole another animal

00:18:45,280 --> 00:18:50,720
so proactive versus reactive

00:18:48,400 --> 00:18:52,080
all right so i've worked at places i

00:18:50,720 --> 00:18:55,120
worked at institutions

00:18:52,080 --> 00:18:58,080
where there was no log management policy

00:18:55,120 --> 00:18:59,280
there was no log management at all right

00:18:58,080 --> 00:19:01,840
and so

00:18:59,280 --> 00:19:03,039
that could be a part of not having the

00:19:01,840 --> 00:19:06,960
staff

00:19:03,039 --> 00:19:08,000
um not having the infrastructure to do

00:19:06,960 --> 00:19:12,559
it

00:19:08,000 --> 00:19:14,640
and also um it's very time consuming

00:19:12,559 --> 00:19:16,559
let's say you're a system administrator

00:19:14,640 --> 00:19:20,080
and you're responsible for

00:19:16,559 --> 00:19:21,919
um server uh administration

00:19:20,080 --> 00:19:24,400
all right and you might get called to

00:19:21,919 --> 00:19:26,480
put out other fires right

00:19:24,400 --> 00:19:27,760
and so your time is taken away from you

00:19:26,480 --> 00:19:30,000
know let's say

00:19:27,760 --> 00:19:31,039
your job or maybe one of your jobs is

00:19:30,000 --> 00:19:33,360
log management

00:19:31,039 --> 00:19:34,320
but you're pulled to other things and so

00:19:33,360 --> 00:19:37,679
you can't really

00:19:34,320 --> 00:19:40,080
accurately or effectively conduct log

00:19:37,679 --> 00:19:43,760
management or log analysis as you should

00:19:40,080 --> 00:19:43,760
all right uh and so

00:19:44,000 --> 00:19:47,039
what you have to do is be a little bit

00:19:45,840 --> 00:19:49,280
more proactive

00:19:47,039 --> 00:19:50,160
so proactive log management and this is

00:19:49,280 --> 00:19:52,760
actually

00:19:50,160 --> 00:19:54,559
talked about in nist special publication

00:19:52,760 --> 00:19:56,799
800-95

00:19:54,559 --> 00:19:58,720
is you need to prioritize log management

00:19:56,799 --> 00:19:59,919
and it's you know not in any one of

00:19:58,720 --> 00:20:02,640
these orders

00:19:59,919 --> 00:20:04,159
prioritize log management so that means

00:20:02,640 --> 00:20:07,600
making sure that

00:20:04,159 --> 00:20:08,960
if you have a staff um and some of you

00:20:07,600 --> 00:20:10,880
you know obviously work for some

00:20:08,960 --> 00:20:12,640
companies if you guys don't have this

00:20:10,880 --> 00:20:14,559
currently in place

00:20:12,640 --> 00:20:16,320
make sure that that becomes actually the

00:20:14,559 --> 00:20:18,720
priority i'm pretty sure

00:20:16,320 --> 00:20:21,120
um if you've been up on what's happened

00:20:18,720 --> 00:20:21,679
to equifax it'll be interesting to learn

00:20:21,120 --> 00:20:23,440
if

00:20:21,679 --> 00:20:24,880
they've done if they did any log

00:20:23,440 --> 00:20:27,840
management on their end

00:20:24,880 --> 00:20:28,720
allegedly there was a server that had

00:20:27,840 --> 00:20:31,360
you know username

00:20:28,720 --> 00:20:33,280
admin password admin so there are

00:20:31,360 --> 00:20:36,480
different tools that you can use

00:20:33,280 --> 00:20:37,760
um obviously to to you know to you know

00:20:36,480 --> 00:20:40,720
kind of highlight those

00:20:37,760 --> 00:20:43,440
those errors or those issues next thing

00:20:40,720 --> 00:20:45,840
is to establish policies and procedures

00:20:43,440 --> 00:20:46,559
uh it's important to have that policy

00:20:45,840 --> 00:20:49,600
obviously

00:20:46,559 --> 00:20:52,640
to ensure that log management

00:20:49,600 --> 00:20:54,880
is conducted every single day as tracy

00:20:52,640 --> 00:20:56,320
articulated okay that's very important

00:20:54,880 --> 00:20:58,799
you have to

00:20:56,320 --> 00:20:59,679
look at your logs every day and of

00:20:58,799 --> 00:21:02,400
course provide

00:20:59,679 --> 00:21:02,960
adequate support and then of course

00:21:02,400 --> 00:21:05,760
create

00:21:02,960 --> 00:21:06,640
and maintain infrastructure so you have

00:21:05,760 --> 00:21:09,760
to have

00:21:06,640 --> 00:21:13,039
a log management infrastructure and that

00:21:09,760 --> 00:21:14,480
infrastructure is composed of log

00:21:13,039 --> 00:21:16,000
analysis

00:21:14,480 --> 00:21:18,000
log storage where are you going to

00:21:16,000 --> 00:21:20,320
actually store these logs because again

00:21:18,000 --> 00:21:21,919
there's a high volume of those all right

00:21:20,320 --> 00:21:23,200
and then of course you have to rotate

00:21:21,919 --> 00:21:25,919
those logs

00:21:23,200 --> 00:21:27,039
all right so all of that is included in

00:21:25,919 --> 00:21:29,600
the

00:21:27,039 --> 00:21:30,320
maintaining that infrastructure and of

00:21:29,600 --> 00:21:32,799
course we have

00:21:30,320 --> 00:21:33,679
infrastructure within the infrastructure

00:21:32,799 --> 00:21:36,240
so

00:21:33,679 --> 00:21:38,880
it's important to know your entire

00:21:36,240 --> 00:21:41,440
information technology ecosystem

00:21:38,880 --> 00:21:43,840
okay so that includes if you have

00:21:41,440 --> 00:21:45,440
on-premise servers or workstations

00:21:43,840 --> 00:21:47,520
desktops

00:21:45,440 --> 00:21:49,200
if you have laptops in the

00:21:47,520 --> 00:21:52,640
infrastructure

00:21:49,200 --> 00:21:53,919
if you have a cloud so let's say you

00:21:52,640 --> 00:21:56,640
have some third-party

00:21:53,919 --> 00:21:57,919
provider who's providing a service to

00:21:56,640 --> 00:22:00,000
you

00:21:57,919 --> 00:22:01,840
how often do they allow or do they allow

00:22:00,000 --> 00:22:04,400
you to have access to the logs

00:22:01,840 --> 00:22:05,760
how often will you you know how often

00:22:04,400 --> 00:22:06,720
are you actually going to view that you

00:22:05,760 --> 00:22:08,960
have to be

00:22:06,720 --> 00:22:12,000
proactive in doing that and then of

00:22:08,960 --> 00:22:15,360
course you're running virtual machines

00:22:12,000 --> 00:22:17,760
and then of course we now have byod

00:22:15,360 --> 00:22:19,360
right and so in a lot of organizations

00:22:17,760 --> 00:22:21,600
they allow

00:22:19,360 --> 00:22:23,120
employees to bring their own devices and

00:22:21,600 --> 00:22:25,440
then they manage those devices

00:22:23,120 --> 00:22:28,559
in mobile device management so in mobile

00:22:25,440 --> 00:22:30,240
device management you can actually route

00:22:28,559 --> 00:22:32,240
the logs that are actually in your in

00:22:30,240 --> 00:22:35,280
your phones

00:22:32,240 --> 00:22:36,720
and of course your laptop um being you

00:22:35,280 --> 00:22:38,880
know you'll actually obviously have to

00:22:36,720 --> 00:22:41,440
install down here on those systems

00:22:38,880 --> 00:22:42,240
um to actually keep track of what's you

00:22:41,440 --> 00:22:44,720
know going on

00:22:42,240 --> 00:22:46,320
in your in your in your infrastructure

00:22:44,720 --> 00:22:46,960
and then of course we have internet of

00:22:46,320 --> 00:22:50,320
things

00:22:46,960 --> 00:22:53,520
okay we are now in the day and age

00:22:50,320 --> 00:22:56,720
of toasters being connected your

00:22:53,520 --> 00:22:59,200
is connected right and so we've now

00:22:56,720 --> 00:23:00,400
opened this up to billions upon billions

00:22:59,200 --> 00:23:02,000
of devices

00:23:00,400 --> 00:23:03,840
that are going to have sensors that are

00:23:02,000 --> 00:23:04,400
going to have embedded devices which is

00:23:03,840 --> 00:23:07,120
obviously

00:23:04,400 --> 00:23:07,760
obviously going to be linux based right

00:23:07,120 --> 00:23:09,679
and so

00:23:07,760 --> 00:23:10,880
those devices those sensors are going to

00:23:09,679 --> 00:23:12,720
talk to each other

00:23:10,880 --> 00:23:14,240
without with little to no human

00:23:12,720 --> 00:23:16,880
interaction so

00:23:14,240 --> 00:23:18,240
how do we know when or if those systems

00:23:16,880 --> 00:23:21,120
are going to fail

00:23:18,240 --> 00:23:22,559
okay let's say you have a smart home and

00:23:21,120 --> 00:23:25,039
in your smart home you have your

00:23:22,559 --> 00:23:26,240
thermostat tied to that you have your

00:23:25,039 --> 00:23:29,679
garage door

00:23:26,240 --> 00:23:32,720
opener tied to that um and you

00:23:29,679 --> 00:23:34,640
set it to you know let's say it's it's

00:23:32,720 --> 00:23:35,280
20 below and you and you decide to go

00:23:34,640 --> 00:23:38,640
out to

00:23:35,280 --> 00:23:41,120
the grocery store and you come back

00:23:38,640 --> 00:23:42,480
and for some reason you can't get into

00:23:41,120 --> 00:23:44,400
the house

00:23:42,480 --> 00:23:45,840
because you know because that failed or

00:23:44,400 --> 00:23:46,720
let's say you got into the house and

00:23:45,840 --> 00:23:48,480
your

00:23:46,720 --> 00:23:50,000
your air conditioning is on rather than

00:23:48,480 --> 00:23:53,679
your heat all right so

00:23:50,000 --> 00:23:54,240
there's a need to proactively be able to

00:23:53,679 --> 00:23:56,880
monitor

00:23:54,240 --> 00:23:57,760
all of these devices that are now going

00:23:56,880 --> 00:24:00,880
to be included

00:23:57,760 --> 00:24:04,240
in the infrastructure

00:24:00,880 --> 00:24:06,480
okay so you do that by using tools so

00:24:04,240 --> 00:24:07,679
there are a plethora of of tools that

00:24:06,480 --> 00:24:09,440
are out there i'm only going to talk

00:24:07,679 --> 00:24:11,120
about a few of them

00:24:09,440 --> 00:24:13,039
so i'm going to talk start with our

00:24:11,120 --> 00:24:16,000
syslog and syslog ng

00:24:13,039 --> 00:24:17,120
and tracely tracy briefly introduced

00:24:16,000 --> 00:24:20,720
that

00:24:17,120 --> 00:24:21,840
but with syslog ng and r syslog you can

00:24:20,720 --> 00:24:24,480
actually

00:24:21,840 --> 00:24:27,440
install it if it doesn't already come

00:24:24,480 --> 00:24:29,840
installed natively on your system

00:24:27,440 --> 00:24:31,039
you can have a you can create a

00:24:29,840 --> 00:24:33,520
centralized

00:24:31,039 --> 00:24:35,120
log management server syslog ng is

00:24:33,520 --> 00:24:38,080
really good for that

00:24:35,120 --> 00:24:39,679
right and so there's sort of a client

00:24:38,080 --> 00:24:42,559
server configuration

00:24:39,679 --> 00:24:44,480
so you basically configure syslog ng as

00:24:42,559 --> 00:24:46,320
a server a centralized server and then

00:24:44,480 --> 00:24:47,039
you install it on your clients and then

00:24:46,320 --> 00:24:50,080
of course

00:24:47,039 --> 00:24:52,400
you can route those uh logs directly to

00:24:50,080 --> 00:24:53,679
that's that's that server uh in your

00:24:52,400 --> 00:24:55,840
enterprise or in your

00:24:53,679 --> 00:24:57,520
in your infrastructure with switches

00:24:55,840 --> 00:24:59,440
with routers

00:24:57,520 --> 00:25:01,039
all of those devices you can route that

00:24:59,440 --> 00:25:02,320
to a centralized server you can use

00:25:01,039 --> 00:25:04,799
syslog ng for that

00:25:02,320 --> 00:25:06,000
in fact some of the other tools i'm

00:25:04,799 --> 00:25:08,880
going to talk about

00:25:06,000 --> 00:25:10,480
you can actually use syslog ng as a

00:25:08,880 --> 00:25:14,240
centralized server you can

00:25:10,480 --> 00:25:17,200
integrate that with other tools okay

00:25:14,240 --> 00:25:18,400
some of the features is it's secure and

00:25:17,200 --> 00:25:21,440
it allows reliable

00:25:18,400 --> 00:25:23,919
log transfer one of the important things

00:25:21,440 --> 00:25:27,679
of having a centralized log server

00:25:23,919 --> 00:25:30,159
is for cyber security that's one um

00:25:27,679 --> 00:25:31,360
potential good thing for having it

00:25:30,159 --> 00:25:33,360
because

00:25:31,360 --> 00:25:35,120
if i were to have or break into one of

00:25:33,360 --> 00:25:36,480
your systems

00:25:35,120 --> 00:25:38,640
the first thing i'm going to want to do

00:25:36,480 --> 00:25:40,480
is erase my tracks and that would

00:25:38,640 --> 00:25:41,360
involve erasing the logs but if you have

00:25:40,480 --> 00:25:43,440
that or you have

00:25:41,360 --> 00:25:45,919
all of those machines routed to one

00:25:43,440 --> 00:25:47,919
central location

00:25:45,919 --> 00:25:49,360
i wouldn't be able to do that all right

00:25:47,919 --> 00:25:52,480
and then of course you can

00:25:49,360 --> 00:25:55,039
more effectively manage

00:25:52,480 --> 00:25:56,559
the infrastructure by having all of that

00:25:55,039 --> 00:25:58,640
going to one place

00:25:56,559 --> 00:26:00,159
all right so it allows for data extra

00:25:58,640 --> 00:26:02,400
extraction so you can parse through

00:26:00,159 --> 00:26:04,640
those logs parse through those messages

00:26:02,400 --> 00:26:06,400
uh to interpret them and find meaning in

00:26:04,640 --> 00:26:09,039
what's actually going on

00:26:06,400 --> 00:26:10,559
uh and then of course process those uh

00:26:09,039 --> 00:26:13,520
it's interoperable

00:26:10,559 --> 00:26:15,039
meaning that if you look at your

00:26:13,520 --> 00:26:16,720
infrastructure now

00:26:15,039 --> 00:26:18,080
your technology infrastructure it is

00:26:16,720 --> 00:26:20,960
heterogeneous

00:26:18,080 --> 00:26:22,400
so you're dealing with multiple variants

00:26:20,960 --> 00:26:24,559
of linux

00:26:22,400 --> 00:26:26,320
you might have some unix in your in your

00:26:24,559 --> 00:26:29,919
infrastructure solaris

00:26:26,320 --> 00:26:32,559
oracle linux oracle solaris or bsd

00:26:29,919 --> 00:26:33,120
right and so it works well with any of

00:26:32,559 --> 00:26:36,159
those

00:26:33,120 --> 00:26:39,440
os's and then of course

00:26:36,159 --> 00:26:42,320
you can save you can format those actual

00:26:39,440 --> 00:26:43,520
you can save and format those um those

00:26:42,320 --> 00:26:46,720
messages

00:26:43,520 --> 00:26:48,960
um and you can use other um other tools

00:26:46,720 --> 00:26:50,960
like elasticsearch so elasticsearch is a

00:26:48,960 --> 00:26:54,559
nosql database

00:26:50,960 --> 00:26:56,880
sort of like a private google okay and

00:26:54,559 --> 00:26:59,039
you have sort of clusters that you can

00:26:56,880 --> 00:27:00,400
use and you can store that data there

00:26:59,039 --> 00:27:03,039
and you can kind of uh

00:27:00,400 --> 00:27:04,840
search uh and do some analysis on that

00:27:03,039 --> 00:27:07,840
so that's big data

00:27:04,840 --> 00:27:07,840
question

00:27:10,960 --> 00:27:14,640
uh in my environment we have no windows

00:27:13,039 --> 00:27:17,679
desktops

00:27:14,640 --> 00:27:17,679
a very good question

00:27:18,480 --> 00:27:24,880
um gray log in syslog

00:27:21,679 --> 00:27:27,200
okay greylock uh again

00:27:24,880 --> 00:27:29,360
centralized log management you can use a

00:27:27,200 --> 00:27:32,159
centralized log server or you can

00:27:29,360 --> 00:27:33,279
use syslog ng as a centralized log

00:27:32,159 --> 00:27:35,760
server and

00:27:33,279 --> 00:27:37,679
and integrate this into greylock and the

00:27:35,760 --> 00:27:38,320
greylock architecture is you have that

00:27:37,679 --> 00:27:40,720
core

00:27:38,320 --> 00:27:42,720
so you have that centralized um you have

00:27:40,720 --> 00:27:44,240
that centralized logging

00:27:42,720 --> 00:27:46,000
where you route all of those logs to

00:27:44,240 --> 00:27:48,559
that one location

00:27:46,000 --> 00:27:50,640
and then you can you can parse messages

00:27:48,559 --> 00:27:52,799
you can extract those messages

00:27:50,640 --> 00:27:55,120
and then you can export those to other

00:27:52,799 --> 00:27:59,279
tools that act that you can use as well

00:27:55,120 --> 00:28:00,880
um one or two of the things is mongodb

00:27:59,279 --> 00:28:02,640
which is a database and of course

00:28:00,880 --> 00:28:03,520
elasticsearch as i talked about in the

00:28:02,640 --> 00:28:05,520
last slide

00:28:03,520 --> 00:28:07,039
uh one of the things that i do actually

00:28:05,520 --> 00:28:10,880
like about greylog

00:28:07,039 --> 00:28:12,880
uh are the plugins okay

00:28:10,880 --> 00:28:15,200
so i'll go to this so here are some of

00:28:12,880 --> 00:28:18,480
the plugins that you can use

00:28:15,200 --> 00:28:20,720
so it comes with a stable api so

00:28:18,480 --> 00:28:22,880
if you wanted to create your own tools

00:28:20,720 --> 00:28:23,760
or your own plugins you can actually do

00:28:22,880 --> 00:28:28,080
that so

00:28:23,760 --> 00:28:28,080
you have a plug-in for inputs outputs

00:28:28,840 --> 00:28:33,360
services

00:28:30,000 --> 00:28:36,640
alert conditions alert notifications

00:28:33,360 --> 00:28:40,640
processors so you know when you

00:28:36,640 --> 00:28:40,640
transform or drop incoming messages

00:28:41,440 --> 00:28:47,679
filters rest api resources

00:28:45,039 --> 00:28:48,960
and one of the other things that i've

00:28:47,679 --> 00:28:50,720
read

00:28:48,960 --> 00:28:52,080
that some researchers researchers

00:28:50,720 --> 00:28:54,799
actually doing now and again

00:28:52,080 --> 00:28:55,120
one thing to point out is there's really

00:28:54,799 --> 00:28:58,640
not

00:28:55,120 --> 00:29:00,320
that much literature on log management

00:28:58,640 --> 00:29:02,720
um there are some really good books out

00:29:00,320 --> 00:29:06,240
there um but

00:29:02,720 --> 00:29:07,200
they're now trying to um use machine

00:29:06,240 --> 00:29:09,679
learning

00:29:07,200 --> 00:29:10,960
right with logs and so you can actually

00:29:09,679 --> 00:29:13,919
create your own tool

00:29:10,960 --> 00:29:15,200
or plug in uh with machine learning with

00:29:13,919 --> 00:29:17,679
with the gray lock and

00:29:15,200 --> 00:29:19,360
integrate that with great log okay here

00:29:17,679 --> 00:29:22,559
are some other plugins

00:29:19,360 --> 00:29:25,600
that you can actually use too

00:29:22,559 --> 00:29:30,159
all right so splunk

00:29:25,600 --> 00:29:32,880
and syslog splunk is another very

00:29:30,159 --> 00:29:34,320
popular tool that can be that can be

00:29:32,880 --> 00:29:37,360
used to analyze

00:29:34,320 --> 00:29:40,159
syslaw again you can use syslog

00:29:37,360 --> 00:29:40,960
ng as a centralized log server and

00:29:40,159 --> 00:29:43,440
integrate that

00:29:40,960 --> 00:29:45,440
into the splunk environment uh splunk

00:29:43,440 --> 00:29:47,039
has what's called a universal forwarder

00:29:45,440 --> 00:29:49,279
that can be installed on the syslog

00:29:47,039 --> 00:29:50,960
collector so if you're using syslog ng

00:29:49,279 --> 00:29:53,039
or if you're using another platform for

00:29:50,960 --> 00:29:53,679
that and you can forward that data to

00:29:53,039 --> 00:29:56,960
splunk

00:29:53,679 --> 00:29:58,960
indexers so the collector monitors

00:29:56,960 --> 00:30:00,799
those specific logs and it sends that

00:29:58,960 --> 00:30:01,279
data to a predetermined location and

00:30:00,799 --> 00:30:02,880
that

00:30:01,279 --> 00:30:04,480
predetermined location is going to be

00:30:02,880 --> 00:30:06,880
defined by you

00:30:04,480 --> 00:30:09,200
you can also send that let's say you

00:30:06,880 --> 00:30:11,120
have multiple people

00:30:09,200 --> 00:30:15,120
that are responsible for log management

00:30:11,120 --> 00:30:15,120
you can actually export and send that to

00:30:15,600 --> 00:30:20,640
human beings where they can actually

00:30:17,440 --> 00:30:22,720
parse parse those messages too

00:30:20,640 --> 00:30:24,399
so that's another important part of it

00:30:22,720 --> 00:30:25,520
um you can route and filter events

00:30:24,399 --> 00:30:27,679
before they index

00:30:25,520 --> 00:30:30,000
and and most importantly it scales very

00:30:27,679 --> 00:30:33,840
well so as your infrastructure

00:30:30,000 --> 00:30:36,960
as it broadens as it expands um splunk

00:30:33,840 --> 00:30:40,240
does so as well okay

00:30:36,960 --> 00:30:41,200
um the elk stack and syslog so the elk

00:30:40,240 --> 00:30:44,320
stack

00:30:41,200 --> 00:30:46,000
uh is the alternative to splunk so

00:30:44,320 --> 00:30:48,320
for those of you that are familiar with

00:30:46,000 --> 00:30:50,720
splunk there's and there's obviously the

00:30:48,320 --> 00:30:52,880
open source version but the licensing

00:30:50,720 --> 00:30:55,360
is a little different i think when you

00:30:52,880 --> 00:30:57,440
go above 500 megs

00:30:55,360 --> 00:30:58,559
then you start to get into some some

00:30:57,440 --> 00:30:59,760
cost issues and

00:30:58,559 --> 00:31:02,320
you know there are some features that

00:30:59,760 --> 00:31:04,399
you can't you can no longer use

00:31:02,320 --> 00:31:06,399
um but with with uh with with the l

00:31:04,399 --> 00:31:10,000
stack it is a combination of

00:31:06,399 --> 00:31:12,880
elasticsearch logstash and cabana

00:31:10,000 --> 00:31:14,080
okay so you can conduct log analytics

00:31:12,880 --> 00:31:17,039
elasticsearch

00:31:14,080 --> 00:31:19,200
indexes and stores that information um

00:31:17,039 --> 00:31:20,320
log stash actually collects and parses

00:31:19,200 --> 00:31:22,159
those logs

00:31:20,320 --> 00:31:23,440
and cabana presents that data and

00:31:22,159 --> 00:31:24,880
visualizations that

00:31:23,440 --> 00:31:27,360
can provide insight into your

00:31:24,880 --> 00:31:27,360
environment

00:31:29,039 --> 00:31:35,440
okay finally the second part

00:31:32,159 --> 00:31:36,080
of what i did when i got here um i sat

00:31:35,440 --> 00:31:39,840
down

00:31:36,080 --> 00:31:41,919
in uh starbucks and i opened my cali

00:31:39,840 --> 00:31:45,039
lenny's virtual machine

00:31:41,919 --> 00:31:46,480
and i did a i opened my bluetooth

00:31:45,039 --> 00:31:48,240
sniffer to see

00:31:46,480 --> 00:31:50,000
how many people actually had their

00:31:48,240 --> 00:31:52,720
bluetooth devices enabled

00:31:50,000 --> 00:31:53,120
and there were quite a few people now if

00:31:52,720 --> 00:31:56,320
i

00:31:53,120 --> 00:31:58,320
actually attempted which i did not do

00:31:56,320 --> 00:31:59,360
to break into your device i could have

00:31:58,320 --> 00:32:01,760
actually done that

00:31:59,360 --> 00:32:02,880
without you knowing the only way that

00:32:01,760 --> 00:32:05,519
you could have known

00:32:02,880 --> 00:32:06,240
is if if you've actually checked your

00:32:05,519 --> 00:32:08,880
logs

00:32:06,240 --> 00:32:10,240
so again laws can be time consuming and

00:32:08,880 --> 00:32:13,039
that is why

00:32:10,240 --> 00:32:16,559
we need a little bit of help with ai and

00:32:13,039 --> 00:32:16,559
i'm gonna turn this over to cameron

00:32:19,519 --> 00:32:22,880
okay i don't wanna i don't wanna do the

00:32:20,799 --> 00:32:26,480
mic thing so uh let's see

00:32:22,880 --> 00:32:30,480
can you guys hear me all right yeah

00:32:26,480 --> 00:32:30,480
not not good with the microphones um

00:32:30,960 --> 00:32:35,600
we presented a paper uh at uh kitcap

00:32:33,679 --> 00:32:37,600
2015. that's uh in new york

00:32:35,600 --> 00:32:39,360
um it's the knowledge capture it's

00:32:37,600 --> 00:32:42,480
artificial intelligence uh

00:32:39,360 --> 00:32:45,120
a very famous conference and

00:32:42,480 --> 00:32:46,559
i think maybe during the 20th or so

00:32:45,120 --> 00:32:48,880
rendition of that

00:32:46,559 --> 00:32:49,600
uh and the title of that paper was a

00:32:48,880 --> 00:32:51,440
partial

00:32:49,600 --> 00:32:52,720
computer homeostasis through syslog

00:32:51,440 --> 00:32:57,120
analysis

00:32:52,720 --> 00:33:00,159
uh using autonomous agents and it's a

00:32:57,120 --> 00:33:04,720
i guess a long-winded a name here

00:33:00,159 --> 00:33:04,720
and the idea is that we were trying to

00:33:04,960 --> 00:33:12,399
come up with a proposal where the

00:33:09,200 --> 00:33:15,840
where we had an a a ai agent that

00:33:12,399 --> 00:33:19,200
would do some of the syslog

00:33:15,840 --> 00:33:19,760
um analysis and possibly some of the the

00:33:19,200 --> 00:33:22,399
uh

00:33:19,760 --> 00:33:24,159
correction and and so the notion of

00:33:22,399 --> 00:33:25,760
homeostasis is to keep the thing in

00:33:24,159 --> 00:33:27,120
balance right this is normally a term

00:33:25,760 --> 00:33:30,399
that's

00:33:27,120 --> 00:33:32,720
used with respect to biological systems

00:33:30,399 --> 00:33:33,679
uh humans uh um you know we we talk

00:33:32,720 --> 00:33:36,799
about that but

00:33:33,679 --> 00:33:39,120
it's applied in other ways as well

00:33:36,799 --> 00:33:40,399
and so the point at this this uh

00:33:39,120 --> 00:33:42,880
knowledge capture

00:33:40,399 --> 00:33:44,480
conference was to take the notion of an

00:33:42,880 --> 00:33:46,080
autonomous agent

00:33:44,480 --> 00:33:48,480
um it's something that is running

00:33:46,080 --> 00:33:49,200
constantly and in our case in a linux

00:33:48,480 --> 00:33:51,600
world

00:33:49,200 --> 00:33:52,240
demons kind of have that that kind of a

00:33:51,600 --> 00:33:54,480
function

00:33:52,240 --> 00:33:56,320
where they just run in the background um

00:33:54,480 --> 00:33:58,320
and they do things for you

00:33:56,320 --> 00:34:00,399
we wanted to take that and apply that to

00:33:58,320 --> 00:34:02,720
uh syslog so we're lucky enough i think

00:34:00,399 --> 00:34:04,799
trevor pointed out that all you guys are

00:34:02,720 --> 00:34:06,080
uh managing or you look at least looked

00:34:04,799 --> 00:34:09,599
at your logs in the last 24

00:34:06,080 --> 00:34:11,599
hours right um so

00:34:09,599 --> 00:34:13,200
just another show of hands is it the

00:34:11,599 --> 00:34:13,760
case that when you look at your logs you

00:34:13,200 --> 00:34:16,800
understand

00:34:13,760 --> 00:34:18,399
every single message right right

00:34:16,800 --> 00:34:20,079
there's a lot of googling going on right

00:34:18,399 --> 00:34:24,320
what is this

00:34:20,079 --> 00:34:28,079
right um i do you have occasions where

00:34:24,320 --> 00:34:31,839
your log messages uh across 500 000

00:34:28,079 --> 00:34:35,040
in a day or a million in a day

00:34:31,839 --> 00:34:36,480
right okay um and we're we're we see

00:34:35,040 --> 00:34:38,639
we see scenarios where there are two

00:34:36,480 --> 00:34:40,320
billion five billion long messages in a

00:34:38,639 --> 00:34:42,879
day lockheed martin

00:34:40,320 --> 00:34:46,079
those kind of people um i don't care how

00:34:42,879 --> 00:34:48,800
fast of a reader you are

00:34:46,079 --> 00:34:50,159
right um it's just not gonna happen um

00:34:48,800 --> 00:34:53,440
and even if you

00:34:50,159 --> 00:34:54,079
even if you understood all of the locked

00:34:53,440 --> 00:34:57,200
messages

00:34:54,079 --> 00:34:58,560
which the average person does not you

00:34:57,200 --> 00:35:00,240
don't even have time

00:34:58,560 --> 00:35:02,560
in situations where you have more than

00:35:00,240 --> 00:35:04,320
you know a few hundred to even

00:35:02,560 --> 00:35:05,680
get to them all even if you're

00:35:04,320 --> 00:35:08,160
successful enough to

00:35:05,680 --> 00:35:09,920
filter your log messages right i only

00:35:08,160 --> 00:35:11,920
want to see emergency messages

00:35:09,920 --> 00:35:14,000
or i only want to see the emergency

00:35:11,920 --> 00:35:15,520
kernel messages

00:35:14,000 --> 00:35:17,359
you can still find yourself in a

00:35:15,520 --> 00:35:18,800
situation where you just physically

00:35:17,359 --> 00:35:22,720
don't have time to uh

00:35:18,800 --> 00:35:26,800
deal with that and so our proposal

00:35:22,720 --> 00:35:29,440
tries to find a way some way to

00:35:26,800 --> 00:35:30,000
uh offer some kind of help for those

00:35:29,440 --> 00:35:32,240
folks that

00:35:30,000 --> 00:35:34,000
are trying to make sense out of the log

00:35:32,240 --> 00:35:35,920
files

00:35:34,000 --> 00:35:38,640
and the log messages and then possibly

00:35:35,920 --> 00:35:42,560
do something about them

00:35:38,640 --> 00:35:45,040
that proposal came from two years ago

00:35:42,560 --> 00:35:46,800
two entities uh c-test laboratories a

00:35:45,040 --> 00:35:47,599
small group of researchers in youngstown

00:35:46,800 --> 00:35:49,359
ohio

00:35:47,599 --> 00:35:51,760
uh these are artificial intelligence

00:35:49,359 --> 00:35:53,119
folks i'm on that group i you know i'm

00:35:51,760 --> 00:35:55,359
i'm a software pistol

00:35:53,119 --> 00:35:56,400
software epistemologist um and in that

00:35:55,359 --> 00:35:58,560
capacity

00:35:56,400 --> 00:36:00,079
my job is to find ways to store

00:35:58,560 --> 00:36:01,920
knowledge inside of a computer as

00:36:00,079 --> 00:36:04,320
opposed to data and information

00:36:01,920 --> 00:36:04,960
and the asc these are some this is

00:36:04,320 --> 00:36:08,240
another

00:36:04,960 --> 00:36:08,640
small ragtag group of uh linux open

00:36:08,240 --> 00:36:13,520
source

00:36:08,640 --> 00:36:16,480
people that came out of a a there was a

00:36:13,520 --> 00:36:18,160
defense contractor up in youngstown ohio

00:36:16,480 --> 00:36:20,000
um that retired you know

00:36:18,160 --> 00:36:21,520
and got out of the business and and left

00:36:20,000 --> 00:36:23,040
the linux people hanging

00:36:21,520 --> 00:36:25,040
and so they needed something to do with

00:36:23,040 --> 00:36:27,280
their time and so in either case

00:36:25,040 --> 00:36:28,160
those two groups of people got together

00:36:27,280 --> 00:36:30,240
um and

00:36:28,160 --> 00:36:31,760
we're looking at trying to come up with

00:36:30,240 --> 00:36:34,800
a way to tackle

00:36:31,760 --> 00:36:37,280
uh the syslog problem

00:36:34,800 --> 00:36:37,920
um i want to make the point that uh our

00:36:37,280 --> 00:36:39,599
focus

00:36:37,920 --> 00:36:40,960
we're not trying to do a cyber security

00:36:39,599 --> 00:36:42,000
thing here there's a lot of people in

00:36:40,960 --> 00:36:44,240
that space

00:36:42,000 --> 00:36:45,280
um there are many proposals uh trying to

00:36:44,240 --> 00:36:47,200
deal with that

00:36:45,280 --> 00:36:48,640
we are really trying to adjust the

00:36:47,200 --> 00:36:50,800
normal everyday

00:36:48,640 --> 00:36:52,560
uh system administration types of things

00:36:50,800 --> 00:36:54,640
you know of things that you just don't

00:36:52,560 --> 00:36:56,400
have time to get to

00:36:54,640 --> 00:36:57,680
um you have to so many servers you know

00:36:56,400 --> 00:36:59,280
i got you know

00:36:57,680 --> 00:37:01,200
50 servers and you just don't have the

00:36:59,280 --> 00:37:01,839
time to time to do it to look at the

00:37:01,200 --> 00:37:03,280
logs

00:37:01,839 --> 00:37:05,359
we're really trying to address that

00:37:03,280 --> 00:37:08,720
space the the idea

00:37:05,359 --> 00:37:11,200
is that uh if you have a stable basic

00:37:08,720 --> 00:37:12,240
system in place uh the cyber security

00:37:11,200 --> 00:37:13,599
becomes easier

00:37:12,240 --> 00:37:15,520
right if you don't have a

00:37:13,599 --> 00:37:17,040
well-maintained system and your your

00:37:15,520 --> 00:37:19,440
system is not under control

00:37:17,040 --> 00:37:20,880
right then cyber security is impossible

00:37:19,440 --> 00:37:23,200
right don't try to

00:37:20,880 --> 00:37:25,200
to bring in any kind of machine learning

00:37:23,200 --> 00:37:27,119
or anything else to

00:37:25,200 --> 00:37:28,640
make your system secure if you don't

00:37:27,119 --> 00:37:30,640
have basic things handled

00:37:28,640 --> 00:37:31,760
right and so the basic stuff has got to

00:37:30,640 --> 00:37:33,359
be in place

00:37:31,760 --> 00:37:36,000
we let everyone else worry about the

00:37:33,359 --> 00:37:38,960
cyber security aspect of logs

00:37:36,000 --> 00:37:39,680
that's not our thing we're trying to

00:37:38,960 --> 00:37:41,680
come up with

00:37:39,680 --> 00:37:43,680
some kind of baseline that will help

00:37:41,680 --> 00:37:47,200
anyone that's using a unix or

00:37:43,680 --> 00:37:51,359
linux system to try to maintain

00:37:47,200 --> 00:37:52,880
the homeostasis for that so we we

00:37:51,359 --> 00:37:54,400
are introducing this notion of

00:37:52,880 --> 00:37:55,839
autonomous agents something that will

00:37:54,400 --> 00:37:58,400
run all of the time

00:37:55,839 --> 00:38:00,320
um the point of that agent is to do

00:37:58,400 --> 00:38:02,400
classification and categorization so

00:38:00,320 --> 00:38:05,520
what it what we want that agent to do

00:38:02,400 --> 00:38:07,520
is say first um what

00:38:05,520 --> 00:38:09,200
is this message talking about right so

00:38:07,520 --> 00:38:10,160
we see we see all of these obscure

00:38:09,200 --> 00:38:11,920
messages

00:38:10,160 --> 00:38:13,440
um and we don't necessarily even know

00:38:11,920 --> 00:38:15,119
what they're referring to referring to

00:38:13,440 --> 00:38:16,640
devices that we're not familiar with

00:38:15,119 --> 00:38:18,240
referring to address ranges that we

00:38:16,640 --> 00:38:20,960
don't have a grip on

00:38:18,240 --> 00:38:22,640
so we wanted to we want the message the

00:38:20,960 --> 00:38:25,359
the agent to be able to tell us

00:38:22,640 --> 00:38:26,079
what the message is about and then what

00:38:25,359 --> 00:38:28,960
state

00:38:26,079 --> 00:38:29,440
that device or thing or process is in

00:38:28,960 --> 00:38:31,599
right

00:38:29,440 --> 00:38:33,520
is it in some kind of field state is it

00:38:31,599 --> 00:38:35,920
in a waiting state a paul

00:38:33,520 --> 00:38:36,880
state a block state whatever it is we

00:38:35,920 --> 00:38:39,839
want it to tell us

00:38:36,880 --> 00:38:41,599
what thing is being affected and what's

00:38:39,839 --> 00:38:43,920
the status of that thing

00:38:41,599 --> 00:38:44,960
um and then what we want this agent to

00:38:43,920 --> 00:38:48,640
be able to tell us

00:38:44,960 --> 00:38:50,160
is you know is is our environment okay

00:38:48,640 --> 00:38:51,680
you know you know from from its

00:38:50,160 --> 00:38:53,760
perspective uh

00:38:51,680 --> 00:38:55,839
you know are we in a lot of trouble a

00:38:53,760 --> 00:38:58,640
little trouble is the trouble developing

00:38:55,839 --> 00:39:00,320
are we just at the precipice of it um

00:38:58,640 --> 00:39:03,040
and so we want this agent to

00:39:00,320 --> 00:39:05,119
to give us some kind of uh you know a

00:39:03,040 --> 00:39:08,000
good feeling about the system right

00:39:05,119 --> 00:39:10,160
uh or if it's bad news to to let us know

00:39:08,000 --> 00:39:12,640
what's going on there

00:39:10,160 --> 00:39:14,400
and then in in a in a if we're really

00:39:12,640 --> 00:39:15,200
lucky we want the agent to be able to do

00:39:14,400 --> 00:39:18,160
something about it

00:39:15,200 --> 00:39:19,599
right and that rbac anybody know what

00:39:18,160 --> 00:39:23,760
that is

00:39:19,599 --> 00:39:25,680
role base access control right

00:39:23,760 --> 00:39:27,520
i want to turn software loose on my

00:39:25,680 --> 00:39:29,599
computer to run automatically

00:39:27,520 --> 00:39:31,119
but i want to be able to say what kind

00:39:29,599 --> 00:39:32,480
of things it can fix

00:39:31,119 --> 00:39:34,240
you know what kind of things it can

00:39:32,480 --> 00:39:35,119
change do i want it to just go out and

00:39:34,240 --> 00:39:37,599
let's say

00:39:35,119 --> 00:39:38,400
i'm clear some cash you know

00:39:37,599 --> 00:39:40,240
automatically

00:39:38,400 --> 00:39:41,599
maybe i do maybe i don't want it to do

00:39:40,240 --> 00:39:45,119
that

00:39:41,599 --> 00:39:47,440
if if certain processes are running and

00:39:45,119 --> 00:39:48,720
they're hogging up all the cpu

00:39:47,440 --> 00:39:50,960
and that's what's causing the log

00:39:48,720 --> 00:39:53,280
messages do i want that

00:39:50,960 --> 00:39:55,280
agent to be able to change the priority

00:39:53,280 --> 00:39:56,480
uh of those processes running and maybe

00:39:55,280 --> 00:39:58,240
re-nice them or something

00:39:56,480 --> 00:40:00,160
i don't know do we automatically give it

00:39:58,240 --> 00:40:01,200
access to that or not and then if it

00:40:00,160 --> 00:40:03,920
does something

00:40:01,200 --> 00:40:04,400
how does it let me know as the person

00:40:03,920 --> 00:40:05,760
that's

00:40:04,400 --> 00:40:07,839
in charge of that system whether i'm

00:40:05,760 --> 00:40:09,440
assist administrator linux administrator

00:40:07,839 --> 00:40:11,760
rather than a regular user how does the

00:40:09,440 --> 00:40:14,800
agent tell um

00:40:11,760 --> 00:40:15,280
what has happened right and so we we are

00:40:14,800 --> 00:40:17,760
our

00:40:15,280 --> 00:40:18,880
our proposal looked at that that kind of

00:40:17,760 --> 00:40:21,920
stuff

00:40:18,880 --> 00:40:24,319
um i want to real briefly here uh

00:40:21,920 --> 00:40:25,680
wow time goes so fast when you have fun

00:40:24,319 --> 00:40:26,240
there's a couple things that we put in

00:40:25,680 --> 00:40:29,359
place

00:40:26,240 --> 00:40:32,560
a couple of processes first we are

00:40:29,359 --> 00:40:34,240
developing a a linux and unix ontology

00:40:32,560 --> 00:40:36,160
right and it's going to be a it's a

00:40:34,240 --> 00:40:37,599
digital one and it's something it's a

00:40:36,160 --> 00:40:40,800
piece of software

00:40:37,599 --> 00:40:41,520
that has background knowledge that

00:40:40,800 --> 00:40:43,680
understands

00:40:41,520 --> 00:40:44,720
linux components the directories the

00:40:43,680 --> 00:40:47,440
processes

00:40:44,720 --> 00:40:49,599
the things that makes up linux it's

00:40:47,440 --> 00:40:52,560
basically a knowledge base

00:40:49,599 --> 00:40:53,680
this is going to be an open source uh a

00:40:52,560 --> 00:40:58,640
free world

00:40:53,680 --> 00:41:01,920
a gpl2 gpl3 component that will be

00:40:58,640 --> 00:41:03,760
a part of the linux environment

00:41:01,920 --> 00:41:05,520
and so we use the tool and if i get a

00:41:03,760 --> 00:41:07,760
chance i'll show that tool here

00:41:05,520 --> 00:41:08,640
at the end we use the tool to help us

00:41:07,760 --> 00:41:11,839
develop this

00:41:08,640 --> 00:41:13,599
uh linux and unix-based ontology one of

00:41:11,839 --> 00:41:17,839
the things that it does

00:41:13,599 --> 00:41:21,280
is it has that um information about

00:41:17,839 --> 00:41:24,640
what those messages might mean right um

00:41:21,280 --> 00:41:26,640
what is efi what is uh mce log

00:41:24,640 --> 00:41:28,720
you know it it knows things it has a

00:41:26,640 --> 00:41:30,319
vocabulary it has a dictionary it has a

00:41:28,720 --> 00:41:33,680
thesaurus involved

00:41:30,319 --> 00:41:35,359
right it knows what backups are for

00:41:33,680 --> 00:41:35,920
right so it kind of has a knowledge base

00:41:35,359 --> 00:41:38,560
um

00:41:35,920 --> 00:41:40,319
and so we use co gui as as one of our

00:41:38,560 --> 00:41:42,800
baseline tools in developing

00:41:40,319 --> 00:41:43,680
a linux ontology and again at linux

00:41:42,800 --> 00:41:45,760
ontology

00:41:43,680 --> 00:41:48,000
the proposal is for it to be open source

00:41:45,760 --> 00:41:51,119
gpl2 and gpl3

00:41:48,000 --> 00:41:54,319
um the agent which would run

00:41:51,119 --> 00:41:56,160
in background at all times is something

00:41:54,319 --> 00:41:58,160
that will be launched by cron

00:41:56,160 --> 00:42:00,400
right the user will have the ability to

00:41:58,160 --> 00:42:02,240
say how often they want it to run

00:42:00,400 --> 00:42:03,760
we can go into if you all have questions

00:42:02,240 --> 00:42:06,079
about this at the end

00:42:03,760 --> 00:42:08,079
how often they want it to run how big a

00:42:06,079 --> 00:42:10,640
log messages they want it to

00:42:08,079 --> 00:42:12,000
deal with all that stuff will impact the

00:42:10,640 --> 00:42:14,480
performance of the system

00:42:12,000 --> 00:42:15,200
but what the agent basically does is it

00:42:14,480 --> 00:42:18,480
looks at

00:42:15,200 --> 00:42:21,920
um the messages um it looks at the

00:42:18,480 --> 00:42:24,400
date looks at the uh facility that's

00:42:21,920 --> 00:42:27,200
been run it looks at the severity level

00:42:24,400 --> 00:42:27,760
and it also looks at the content of the

00:42:27,200 --> 00:42:30,240
message

00:42:27,760 --> 00:42:33,280
right so it's able to understand um

00:42:30,240 --> 00:42:35,520
device not responding usb71

00:42:33,280 --> 00:42:36,640
um our ontology has defined that for the

00:42:35,520 --> 00:42:40,160
agent so

00:42:36,640 --> 00:42:43,280
it knows what those terms mean um it

00:42:40,160 --> 00:42:44,960
it uses a natural language processing so

00:42:43,280 --> 00:42:48,880
it's able to

00:42:44,960 --> 00:42:50,400
go in and try to make sense out of usb71

00:42:48,880 --> 00:42:53,359
device not spawning

00:42:50,400 --> 00:42:56,720
not responding to set address the the

00:42:53,359 --> 00:42:58,560
severity level is four at that case

00:42:56,720 --> 00:43:00,000
a little later on in the log files these

00:42:58,560 --> 00:43:03,200
are actually messages from

00:43:00,000 --> 00:43:04,880
one of my systems a little later on it's

00:43:03,200 --> 00:43:05,920
very little it gets a little bit more

00:43:04,880 --> 00:43:08,800
critical

00:43:05,920 --> 00:43:09,520
um 7-1 device not accepting address so

00:43:08,800 --> 00:43:12,960
things are

00:43:09,520 --> 00:43:13,359
getting a little worse and then we get a

00:43:12,960 --> 00:43:16,480
a

00:43:13,359 --> 00:43:18,640
a two uh severity level

00:43:16,480 --> 00:43:19,839
and a hub is unable to enumerate usb

00:43:18,640 --> 00:43:22,480
device on port one

00:43:19,839 --> 00:43:24,400
in either case what we want this

00:43:22,480 --> 00:43:27,440
autonomous agent to be able to do

00:43:24,400 --> 00:43:29,359
is read and understand those messages um

00:43:27,440 --> 00:43:30,880
understand the severity of those those

00:43:29,359 --> 00:43:32,720
messages whether it's something not to

00:43:30,880 --> 00:43:33,520
worry about right something that happens

00:43:32,720 --> 00:43:35,119
every day

00:43:33,520 --> 00:43:36,720
and just a normal message or whether

00:43:35,119 --> 00:43:40,480
it's something that you

00:43:36,720 --> 00:43:44,640
that signifies that a

00:43:40,480 --> 00:43:48,640
a negative scenario is is uh ensuing

00:43:44,640 --> 00:43:50,960
we have like one two i see three four

00:43:48,640 --> 00:43:54,000
four five basic components that are that

00:43:50,960 --> 00:43:56,240
are that we're proposing here

00:43:54,000 --> 00:43:57,440
there's a domain ontology that's going

00:43:56,240 --> 00:43:59,359
to be open source

00:43:57,440 --> 00:44:01,599
there's an application ontology that's

00:43:59,359 --> 00:44:04,000
open source there's an autonomous agent

00:44:01,599 --> 00:44:06,800
this thing runs like i said as a

00:44:04,000 --> 00:44:08,480
um it runs at the system level uh it's

00:44:06,800 --> 00:44:12,000
so that you would look at it like a

00:44:08,480 --> 00:44:15,119
an extension to syslog uh uh itself so

00:44:12,000 --> 00:44:16,400
it's a kernel level um type of demon

00:44:15,119 --> 00:44:18,560
that we'll be running

00:44:16,400 --> 00:44:19,839
we are proposing this uh we ultimately

00:44:18,560 --> 00:44:22,400
are proposing this

00:44:19,839 --> 00:44:24,160
as a possible addition for linux in

00:44:22,400 --> 00:44:28,079
general for all linux

00:44:24,160 --> 00:44:29,520
systems and the idea of coming here is

00:44:28,079 --> 00:44:32,160
to float some of this

00:44:29,520 --> 00:44:34,720
in front of people that use linux or

00:44:32,160 --> 00:44:38,160
unix some some version of unix each day

00:44:34,720 --> 00:44:41,200
the other last part is a scenario

00:44:38,160 --> 00:44:42,960
assessment where the agent

00:44:41,200 --> 00:44:44,640
the goal of the agent is to look at the

00:44:42,960 --> 00:44:46,960
system see whether

00:44:44,640 --> 00:44:48,240
uh something negative has happened or

00:44:46,960 --> 00:44:52,400
whether something negative

00:44:48,240 --> 00:44:54,800
is about to happen um to take action

00:44:52,400 --> 00:44:57,119
if you've given the agent the permission

00:44:54,800 --> 00:44:58,000
to take those actions based off the rbac

00:44:57,119 --> 00:45:00,319
standard

00:44:58,000 --> 00:45:01,680
and to somehow communicate that to

00:45:00,319 --> 00:45:03,680
whoever

00:45:01,680 --> 00:45:05,599
wants to be to know what the agent has

00:45:03,680 --> 00:45:08,319
uh done

00:45:05,599 --> 00:45:09,200
uh so our our our autonomous agent wants

00:45:08,319 --> 00:45:10,880
to

00:45:09,200 --> 00:45:12,720
uh see if there are positive negative

00:45:10,880 --> 00:45:15,280
scenarios developing

00:45:12,720 --> 00:45:17,280
see if they're um if there's possible if

00:45:15,280 --> 00:45:19,440
there's a possible negative scenario

00:45:17,280 --> 00:45:20,720
if there is actually one in progress

00:45:19,440 --> 00:45:23,440
where it is

00:45:20,720 --> 00:45:23,839
um and if there is something negative

00:45:23,440 --> 00:45:26,560
that's

00:45:23,839 --> 00:45:28,240
uh has happened this thing is this

00:45:26,560 --> 00:45:29,760
proposal at this point

00:45:28,240 --> 00:45:32,160
has been implemented with really some

00:45:29,760 --> 00:45:33,680
classic ai techniques um

00:45:32,160 --> 00:45:35,599
real old school stuff we're using

00:45:33,680 --> 00:45:38,720
something called frames oav

00:45:35,599 --> 00:45:39,280
anybody know what prologue is yeah right

00:45:38,720 --> 00:45:41,200
okay

00:45:39,280 --> 00:45:44,000
so it's the classic prologue stuff we're

00:45:41,200 --> 00:45:46,400
actually using a switch amsterdam's

00:45:44,000 --> 00:45:47,760
their prologue um we've got the stuff to

00:45:46,400 --> 00:45:50,000
be pretty small

00:45:47,760 --> 00:45:51,359
i'm gonna see standard c plus plus as

00:45:50,000 --> 00:45:54,640
well the the

00:45:51,359 --> 00:45:57,119
idea is that we're designing a modular

00:45:54,640 --> 00:45:58,880
uh ai component that could be added that

00:45:57,119 --> 00:46:01,200
others could switch things in and out

00:45:58,880 --> 00:46:02,640
you know maybe the ontology somebody

00:46:01,200 --> 00:46:03,280
doesn't like and they want a different

00:46:02,640 --> 00:46:05,040
one

00:46:03,280 --> 00:46:06,400
maybe the inference engine that we use

00:46:05,040 --> 00:46:08,960
someone doesn't like and they want a

00:46:06,400 --> 00:46:08,960
different one

00:46:09,200 --> 00:46:13,280
the considerations that we have that

00:46:11,440 --> 00:46:14,640
we're concerned about is

00:46:13,280 --> 00:46:16,640
uh you we're doing this stuff in

00:46:14,640 --> 00:46:18,960
openstack and the open shift

00:46:16,640 --> 00:46:21,119
is spinning up all these machines what

00:46:18,960 --> 00:46:23,280
scenario are we going to run into

00:46:21,119 --> 00:46:25,119
um when we have autonomous agents being

00:46:23,280 --> 00:46:28,560
assigned to all of that stuff

00:46:25,119 --> 00:46:29,599
you know um you know do you want those

00:46:28,560 --> 00:46:32,960
agents to

00:46:29,599 --> 00:46:35,359
uh uh be fully uh capable of making

00:46:32,960 --> 00:46:37,599
changes to a thousand virtual machines

00:46:35,359 --> 00:46:39,520
right or a hundred virtual machines so

00:46:37,599 --> 00:46:40,880
we have a question that we wanna send

00:46:39,520 --> 00:46:42,640
out to the community

00:46:40,880 --> 00:46:44,319
as far as how you would feel about

00:46:42,640 --> 00:46:46,560
artificial intelligence

00:46:44,319 --> 00:46:48,319
uh being put into your openstack open

00:46:46,560 --> 00:46:49,520
shift environments for those of you to

00:46:48,319 --> 00:46:50,560
have to deal with it

00:46:49,520 --> 00:46:52,960
for those of you that have to deal with

00:46:50,560 --> 00:46:56,160
distributed environments

00:46:52,960 --> 00:46:59,280
would it the notion of a a automated

00:46:56,160 --> 00:47:01,680
uh demon running and

00:46:59,280 --> 00:47:03,119
doing making corrections and those kind

00:47:01,680 --> 00:47:04,319
of things would that be attractive or

00:47:03,119 --> 00:47:06,319
unattractive

00:47:04,319 --> 00:47:07,440
um so we have those considerations that

00:47:06,319 --> 00:47:10,160
we're concerned with

00:47:07,440 --> 00:47:10,720
i want to make the point quickly here

00:47:10,160 --> 00:47:12,640
that uh

00:47:10,720 --> 00:47:14,560
this software we started we put this

00:47:12,640 --> 00:47:17,200
proposal out

00:47:14,560 --> 00:47:18,800
it started i guess the launch of 2015 at

00:47:17,200 --> 00:47:21,200
k-cap

00:47:18,800 --> 00:47:23,839
it is now at technology readiness level

00:47:21,200 --> 00:47:26,960
five anybody know what the trl

00:47:23,839 --> 00:47:29,520
definitions are those refer to

00:47:26,960 --> 00:47:30,960
um the level of readiness for

00:47:29,520 --> 00:47:32,880
technologies you know

00:47:30,960 --> 00:47:34,960
disruptive technology possibly being

00:47:32,880 --> 00:47:38,240
developed

00:47:34,960 --> 00:47:40,319
and where you're at in the the process

00:47:38,240 --> 00:47:42,319
we don't we're not interested in having

00:47:40,319 --> 00:47:43,839
a discussion where this is alpha beta

00:47:42,319 --> 00:47:45,520
those kinds of things we're for

00:47:43,839 --> 00:47:47,520
something of this nature it's a little a

00:47:45,520 --> 00:47:49,680
little bit more serious than that

00:47:47,520 --> 00:47:51,359
uh and this is a proposal that we are

00:47:49,680 --> 00:47:53,040
ultimately going to be making to for the

00:47:51,359 --> 00:47:55,760
entire linux

00:47:53,040 --> 00:47:56,559
community we're at five and so we're at

00:47:55,760 --> 00:47:59,040
the testing

00:47:56,559 --> 00:48:00,160
um we're at a testing level uh we're

00:47:59,040 --> 00:48:02,720
right at the beginning of the testing

00:48:00,160 --> 00:48:04,960
level we're starting to

00:48:02,720 --> 00:48:06,160
test this thing in a real world

00:48:04,960 --> 00:48:08,559
environment

00:48:06,160 --> 00:48:10,960
systems that we are unfamiliar with so

00:48:08,559 --> 00:48:15,280
that is part of our pitch here today

00:48:10,960 --> 00:48:15,280
of folks that i have systems um

00:48:15,359 --> 00:48:18,480
that that they might want to test some

00:48:17,920 --> 00:48:20,800
of this

00:48:18,480 --> 00:48:22,079
artificial intelligence stuff on we want

00:48:20,800 --> 00:48:22,720
you to leave if you're interested we

00:48:22,079 --> 00:48:25,280
want you to leave

00:48:22,720 --> 00:48:26,960
like uh emails and that's some way of

00:48:25,280 --> 00:48:30,000
getting contact which if you want to

00:48:26,960 --> 00:48:32,240
be one of the trl5 uh

00:48:30,000 --> 00:48:34,160
sites to help us test some of this stuff

00:48:32,240 --> 00:48:37,359
and to be involved with

00:48:34,160 --> 00:48:38,800
some of the uh decision making as far as

00:48:37,359 --> 00:48:41,440
how this will look

00:48:38,800 --> 00:48:42,480
once we get ready to release it to a lot

00:48:41,440 --> 00:48:46,000
larger

00:48:42,480 --> 00:48:47,760
a crowd um we are

00:48:46,000 --> 00:48:50,319
just briefly here i wish i had a little

00:48:47,760 --> 00:48:53,200
bit more time

00:48:50,319 --> 00:48:54,319
we are looking for trl volunteers in our

00:48:53,200 --> 00:48:56,720
proposal

00:48:54,319 --> 00:48:58,720
um also if any of you are inclined to

00:48:56,720 --> 00:49:03,119
have some c plus plus

00:48:58,720 --> 00:49:04,160
um uh you know bonafides and prologue

00:49:03,119 --> 00:49:06,000
voter fedes

00:49:04,160 --> 00:49:07,680
and might be interested in some crazy

00:49:06,000 --> 00:49:09,280
artificial intelligence stuff

00:49:07,680 --> 00:49:11,280
uh that's something that we are

00:49:09,280 --> 00:49:14,720
concerned with um

00:49:11,280 --> 00:49:18,000
and i passed out surveys earlier on

00:49:14,720 --> 00:49:19,599
and so we're doing a syslog the acm i'm

00:49:18,000 --> 00:49:22,240
working with those guys as well

00:49:19,599 --> 00:49:23,599
we're doing a a a national actually an

00:49:22,240 --> 00:49:26,720
international survey

00:49:23,599 --> 00:49:29,359
on how syslog is being used with the

00:49:26,720 --> 00:49:30,800
with our whole goal here is we really

00:49:29,359 --> 00:49:34,800
want to stop and talk

00:49:30,800 --> 00:49:36,559
to as many of uh linux users and unix

00:49:34,800 --> 00:49:39,359
users of all sites

00:49:36,559 --> 00:49:40,480
types and shape you know sizes and

00:49:39,359 --> 00:49:43,040
shapes rather

00:49:40,480 --> 00:49:44,400
to have the question about how far we

00:49:43,040 --> 00:49:47,440
should have ai go

00:49:44,400 --> 00:49:48,480
in something like syslog right and at

00:49:47,440 --> 00:49:50,480
the current level

00:49:48,480 --> 00:49:52,880
you you we are talking about something

00:49:50,480 --> 00:49:55,200
that at the end of the day

00:49:52,880 --> 00:49:56,240
will allow a computer to possibly be

00:49:55,200 --> 00:49:59,760
self

00:49:56,240 --> 00:50:02,800
repairing in some ways um uh

00:49:59,760 --> 00:50:03,680
you know uh changing the changing the

00:50:02,800 --> 00:50:06,480
environment

00:50:03,680 --> 00:50:07,040
the execution environment to fix uh what

00:50:06,480 --> 00:50:09,680
the

00:50:07,040 --> 00:50:10,480
the uh log files may be suggesting is

00:50:09,680 --> 00:50:12,800
going on

00:50:10,480 --> 00:50:14,559
so this is kind of a a proposal that's

00:50:12,800 --> 00:50:17,599
that's ongoing

00:50:14,559 --> 00:50:18,960
um and i don't know how to easily

00:50:17,599 --> 00:50:21,839
outside of saying uh

00:50:18,960 --> 00:50:23,200
uh you know the the c-test laboratories

00:50:21,839 --> 00:50:25,440
is is where this is going is

00:50:23,200 --> 00:50:26,400
kind of thing you guys can google the

00:50:25,440 --> 00:50:30,160
asc group

00:50:26,400 --> 00:50:33,200
you can google that and it's a proposal

00:50:30,160 --> 00:50:35,359
that we're putting out that is going to

00:50:33,200 --> 00:50:35,359
be

00:50:35,440 --> 00:50:38,720
hopefully something that will be

00:50:36,880 --> 00:50:41,760
considered for

00:50:38,720 --> 00:50:44,160
all variants of linux um i don't know

00:50:41,760 --> 00:50:45,359
whether uh linus would consider adding

00:50:44,160 --> 00:50:47,440
it to the colonel

00:50:45,359 --> 00:50:49,040
uh but certainly it's the kind of yeah

00:50:47,440 --> 00:50:51,520
no no it's not gonna happen

00:50:49,040 --> 00:50:53,599
uh certainly it's the kind of thing that

00:50:51,520 --> 00:50:54,079
we want the cenos people and the debian

00:50:53,599 --> 00:50:56,160
people

00:50:54,079 --> 00:50:57,200
and you know the ubuntu people and the

00:50:56,160 --> 00:50:59,359
susie people

00:50:57,200 --> 00:51:00,240
we want all of those folks to uh get on

00:50:59,359 --> 00:51:02,400
board

00:51:00,240 --> 00:51:03,760
um with this software because at the end

00:51:02,400 --> 00:51:05,280
of the day

00:51:03,760 --> 00:51:06,880
the goal is to try to help system

00:51:05,280 --> 00:51:09,040
administrators and users

00:51:06,880 --> 00:51:10,640
i know i'm virtually out of time here

00:51:09,040 --> 00:51:22,559
right um any questions i

00:51:10,640 --> 00:51:24,400
imagine there's some all right yeah

00:51:22,559 --> 00:51:25,760
so here here's what typically happens

00:51:24,400 --> 00:51:26,960
right now this thing is running as a

00:51:25,760 --> 00:51:29,440
crime process

00:51:26,960 --> 00:51:30,880
and it looks at all the log messages

00:51:29,440 --> 00:51:32,400
that's in a certain interval

00:51:30,880 --> 00:51:34,319
right so say for instance i wanted to

00:51:32,400 --> 00:51:36,640
look at everything from nine o'clock

00:51:34,319 --> 00:51:37,599
to 10 30. it looks at all those log

00:51:36,640 --> 00:51:39,599
messages

00:51:37,599 --> 00:51:42,000
um obviously it grabs the higher

00:51:39,599 --> 00:51:44,079
priorities first

00:51:42,000 --> 00:51:46,079
and it grabs the most serious facilities

00:51:44,079 --> 00:51:48,400
first but then it tries to

00:51:46,079 --> 00:51:50,079
look at that log message itself do

00:51:48,400 --> 00:51:52,720
natural language processing on it

00:51:50,079 --> 00:51:54,640
so it really doesn't matter the nature

00:51:52,720 --> 00:51:55,520
of what it is it tries to understand all

00:51:54,640 --> 00:51:58,640
of those

00:51:55,520 --> 00:52:00,240
um and makes sense as to whether

00:51:58,640 --> 00:52:02,400
the messages that are in the logs are

00:52:00,240 --> 00:52:04,800
just normal kinds of things that that

00:52:02,400 --> 00:52:06,000
ordinarily happen or is something

00:52:04,800 --> 00:52:07,920
negatively

00:52:06,000 --> 00:52:09,200
happening right like in this that in

00:52:07,920 --> 00:52:10,800
this the previous case had something

00:52:09,200 --> 00:52:13,520
going on my usb

00:52:10,800 --> 00:52:15,599
uh my host module right and it was it

00:52:13,520 --> 00:52:18,000
was progressively getting bad

00:52:15,599 --> 00:52:20,160
and so the system if i gave permission

00:52:18,000 --> 00:52:23,440
to would do something about that

00:52:20,160 --> 00:52:24,800
um if not it might just inform the user

00:52:23,440 --> 00:52:27,280
whether it's a system

00:52:24,800 --> 00:52:29,200
admin or musician or artist hey

00:52:27,280 --> 00:52:31,599
something goofy is going on

00:52:29,200 --> 00:52:32,960
with your usb drive and then give it

00:52:31,599 --> 00:52:34,000
some kind of recommendation so it's

00:52:32,960 --> 00:52:36,800
really no

00:52:34,000 --> 00:52:38,400
there's no specific start stop range as

00:52:36,800 --> 00:52:42,160
far as what kinds of events

00:52:38,400 --> 00:52:42,160
it looks at all of them right

00:52:53,280 --> 00:52:56,640
absolutely absolutely so one of the

00:52:55,200 --> 00:52:58,800
things that one of the things that we

00:52:56,640 --> 00:53:00,800
we went after was not just considering

00:52:58,800 --> 00:53:02,960
syslog messages in isolation

00:53:00,800 --> 00:53:04,880
so it is not the case that it looks at

00:53:02,960 --> 00:53:05,760
one message and tries to make sense of

00:53:04,880 --> 00:53:08,240
it right

00:53:05,760 --> 00:53:09,680
it really uh creates the whole

00:53:08,240 --> 00:53:11,280
environment so it looks at the messages

00:53:09,680 --> 00:53:14,880
as they're related to each other

00:53:11,280 --> 00:53:16,240
so it has the ability to see if messages

00:53:14,880 --> 00:53:19,040
are related

00:53:16,240 --> 00:53:20,559
if they are connected you know it tries

00:53:19,040 --> 00:53:22,720
to differentiate between cause and

00:53:20,559 --> 00:53:25,839
effect that's a very hard thing to do

00:53:22,720 --> 00:53:28,640
right very hard thing to do yeah

00:53:25,839 --> 00:53:31,200
so how does it uh integrate that with

00:53:28,640 --> 00:53:33,119
the temporal yeah

00:53:31,200 --> 00:53:35,200
um how does it integrate that with the

00:53:33,119 --> 00:53:37,520
temporal component of the relationship

00:53:35,200 --> 00:53:39,599
between messages so for example

00:53:37,520 --> 00:53:41,680
um and i'd like to particularly frame

00:53:39,599 --> 00:53:42,480
this around the boundaries of that cron

00:53:41,680 --> 00:53:44,640
job

00:53:42,480 --> 00:53:45,760
so let's say i have a message that by

00:53:44,640 --> 00:53:47,520
itself

00:53:45,760 --> 00:53:50,079
is not that big a deal i have a

00:53:47,520 --> 00:53:51,599
recoverable sector error off my drive

00:53:50,079 --> 00:53:54,400
that happens all the time that's right

00:53:51,599 --> 00:53:55,760
if it's happening 40 times a minute

00:53:54,400 --> 00:53:57,200
i've got a serious that's right that's

00:53:55,760 --> 00:53:58,319
right that's right it's happening once

00:53:57,200 --> 00:54:00,640
every three months

00:53:58,319 --> 00:54:02,160
i don't care that much that's right but

00:54:00,640 --> 00:54:03,119
in particular when you cross the

00:54:02,160 --> 00:54:06,960
boundary of those

00:54:03,119 --> 00:54:11,200
crown jobs how do you handle this

00:54:06,960 --> 00:54:11,200
i had three of those right before

00:54:15,119 --> 00:54:18,000
yeah yeah that's fair and we're doing

00:54:16,640 --> 00:54:19,040
something right now called quadrant

00:54:18,000 --> 00:54:21,040
analysis

00:54:19,040 --> 00:54:23,760
um it's two things there there's a

00:54:21,040 --> 00:54:26,160
there's a self-check component where

00:54:23,760 --> 00:54:28,319
we actually have the agent looks at the

00:54:26,160 --> 00:54:29,680
reality of that system right now before

00:54:28,319 --> 00:54:32,880
i do any analysis

00:54:29,680 --> 00:54:35,440
what is the actual state uh uh to

00:54:32,880 --> 00:54:36,480
right now um and then i it does a

00:54:35,440 --> 00:54:39,119
quadrant analysis

00:54:36,480 --> 00:54:40,160
in terms of seeing the messages in

00:54:39,119 --> 00:54:43,280
aggregate

00:54:40,160 --> 00:54:45,119
um before the interval that you talked

00:54:43,280 --> 00:54:47,359
about and it keeps the history

00:54:45,119 --> 00:54:48,880
not too long right it you know it kind

00:54:47,359 --> 00:54:50,799
of remember depending on

00:54:48,880 --> 00:54:52,319
what you set that window to be and

00:54:50,799 --> 00:54:53,119
that's the kind of thing that you can as

00:54:52,319 --> 00:54:55,200
a user

00:54:53,119 --> 00:54:56,880
you can decide how much you want it to

00:54:55,200 --> 00:54:57,680
remember how much you want it to

00:54:56,880 --> 00:55:00,960
consider

00:54:57,680 --> 00:55:02,720
it does consider the past to some degree

00:55:00,960 --> 00:55:04,400
and it considers whether multiple

00:55:02,720 --> 00:55:05,599
messages are happening

00:55:04,400 --> 00:55:08,240
say for instance you have something

00:55:05,599 --> 00:55:10,240
that's oscillating like this it was okay

00:55:08,240 --> 00:55:11,680
then it became bad then it became okay

00:55:10,240 --> 00:55:13,200
again it didn't became bad then it went

00:55:11,680 --> 00:55:13,920
through an interval and everything was

00:55:13,200 --> 00:55:15,599
okay

00:55:13,920 --> 00:55:17,680
it has the ability to do a quadrant

00:55:15,599 --> 00:55:20,000
analysis on that kind of thing

00:55:17,680 --> 00:55:22,400
yeah absolutely yeah yeah it does that

00:55:20,000 --> 00:55:25,040
but like i said this is in tro5

00:55:22,400 --> 00:55:26,079
and so what we really want to do is we

00:55:25,040 --> 00:55:29,440
want to get this

00:55:26,079 --> 00:55:32,880
uh a software in the hands of

00:55:29,440 --> 00:55:34,640
uh linux folks that will be so inclined

00:55:32,880 --> 00:55:37,680
and so interested in

00:55:34,640 --> 00:55:38,480
um helping to push this thing uh closer

00:55:37,680 --> 00:55:41,839
to the to the

00:55:38,480 --> 00:55:42,880
goal post uh there is is it this is not

00:55:41,839 --> 00:55:45,920
a business case

00:55:42,880 --> 00:55:47,280
at this point it's a we want to do it

00:55:45,920 --> 00:55:48,000
the right thing for the linux and in

00:55:47,280 --> 00:55:49,599
this community

00:55:48,000 --> 00:55:51,680
one thing we are not interested in doing

00:55:49,599 --> 00:55:54,000
is replacing system administrators

00:55:51,680 --> 00:55:56,160
and linux administrators right and

00:55:54,000 --> 00:55:58,480
technology that takes away our jobs

00:55:56,160 --> 00:55:59,680
i'm not interested in promoting that and

00:55:58,480 --> 00:56:01,599
so

00:55:59,680 --> 00:56:04,319
part of this our whole process is to

00:56:01,599 --> 00:56:07,520
work with the community to see

00:56:04,319 --> 00:56:08,640
what they want what would be useful what

00:56:07,520 --> 00:56:10,960
will not be useful

00:56:08,640 --> 00:56:12,720
and how we keep people working right we

00:56:10,960 --> 00:56:13,520
don't want to have computers that get so

00:56:12,720 --> 00:56:15,200
smart till

00:56:13,520 --> 00:56:17,599
you know none of us need to come to this

00:56:15,200 --> 00:56:21,200
this uh this festival right yeah

00:56:17,599 --> 00:56:21,200
we we don't want to go there

00:56:22,240 --> 00:56:26,240
yeah for sure um we have a we have a we

00:56:25,280 --> 00:56:28,960
have a log

00:56:26,240 --> 00:56:29,599
a book here this is old school um

00:56:28,960 --> 00:56:32,160
there's

00:56:29,599 --> 00:56:34,160
there's a a a website that'll be

00:56:32,160 --> 00:56:35,520
involved if you guys are are interested

00:56:34,160 --> 00:56:38,000
that we're going to be putting up but if

00:56:35,520 --> 00:56:39,920
you want to leave like an email address

00:56:38,000 --> 00:56:42,880
and whether you are would be interested

00:56:39,920 --> 00:56:44,240
in helping us with trl-5 testing

00:56:42,880 --> 00:56:46,000
or whether you might be interested in

00:56:44,240 --> 00:56:47,119
the development side or you would know

00:56:46,000 --> 00:56:49,920
someone

00:56:47,119 --> 00:56:51,839
i said this is a small effort we have

00:56:49,920 --> 00:56:52,960
some juice behind us in terms of people

00:56:51,839 --> 00:56:55,280
that are into

00:56:52,960 --> 00:56:56,640
software development and ai like i said

00:56:55,280 --> 00:56:58,400
the c-test folks who've been doing this

00:56:56,640 --> 00:57:00,400
for about 25 years so we know a little

00:56:58,400 --> 00:57:03,520
bit about this yeah

00:57:00,400 --> 00:57:13,839
any other questions okay thank you all

00:57:03,520 --> 00:57:13,839
you know we know we went through about

00:57:20,400 --> 00:57:26,400

YouTube URL: https://www.youtube.com/watch?v=evMz9um-7Fg


