Title: [OLF 2019] Demystifying Machine Learning
Publication date: 2019-12-28
Playlist: 2019 Videos
Description: 
	Speaker: Nikola Novakovic
Slides: https://ohiolinux.org/wp-content/uploads/2019/11/2019-Demystifying_Machine_Learning.pdf
Videographer: Ernest Parke

Machine Learning is something you’ll see referenced very frequently now in everything from marketing materials to sales pitches to job postings. With so much hype it can be hard to distinguish what people mean when they say Machine Learning. In this talk we will demystify Machine Learning by understanding its core concepts and applying that knowledge to real world examples.

We’ll explain basic concepts like linear algebra and loss functions, figure out when to use machine learning, and build an ML model that we’ll be able to use in real world apps. Here’s an in-depth list of what we’ll cover:

* What Machine Learning is and where it’s being used
* How to recognize when machine learning is necessary
* Math 101
* Linear Regression
* Live Coding Session Salary Estimator
Captions: 
	00:00:01,699 --> 00:00:09,330
hi everyone we'll be trying to demystify

00:00:06,750 --> 00:00:11,429
machine learning today and if you don't

00:00:09,330 --> 00:00:13,200
hear my mic just kind of raise your hand

00:00:11,429 --> 00:00:17,520
and I'll start talking louder or

00:00:13,200 --> 00:00:19,890
whatever readjust it but uh let's start

00:00:17,520 --> 00:00:22,439
so machine learning is one of those

00:00:19,890 --> 00:00:23,699
words I'll just keep it here machine

00:00:22,439 --> 00:00:26,699
learning is one of those words that's

00:00:23,699 --> 00:00:28,380
been really hyped up recently and and

00:00:26,699 --> 00:00:30,869
something is so hyped up it's really

00:00:28,380 --> 00:00:34,320
hard to distinguish signal from noise

00:00:30,869 --> 00:00:37,559
and my hope today is that we'll be able

00:00:34,320 --> 00:00:38,880
to demystified machine learning so in

00:00:37,559 --> 00:00:42,149
order to do that we need to answer a

00:00:38,880 --> 00:00:44,010
fundamental question of what it is so

00:00:42,149 --> 00:00:45,510
what is machine learning machine

00:00:44,010 --> 00:00:48,960
learning is a branch of artificial

00:00:45,510 --> 00:00:51,840
intelligence and cleanly put it uses

00:00:48,960 --> 00:00:55,500
math and statistics to learn about data

00:00:51,840 --> 00:00:58,710
and predict things based on that data so

00:00:55,500 --> 00:01:00,930
now that we know what it is usually I

00:00:58,710 --> 00:01:02,699
like to figure out where can I use any

00:01:00,930 --> 00:01:04,830
production before I dive deep into

00:01:02,699 --> 00:01:08,790
technology so we're gonna look in that

00:01:04,830 --> 00:01:11,580
look into that let's look at the first

00:01:08,790 --> 00:01:13,200
use case which is widely popular on the

00:01:11,580 --> 00:01:15,510
Internet and it's recommendation engine

00:01:13,200 --> 00:01:21,350
so if you ever bought a book off Amazon

00:01:15,510 --> 00:01:21,350
at the end that's a good point

00:01:25,300 --> 00:01:33,020
alright alright then okay so reputation

00:01:29,600 --> 00:01:35,630
engines if you don't want a book off

00:01:33,020 --> 00:01:36,830
Amazon and you can go to the process and

00:01:35,630 --> 00:01:39,440
at the end you'll see a paragraph that

00:01:36,830 --> 00:01:40,940
says you might also like these items and

00:01:39,440 --> 00:01:45,710
then there's going to be a list of items

00:01:40,940 --> 00:01:48,290
that are similar to the items that you

00:01:45,710 --> 00:01:52,130
just bought the way that Amazon compiles

00:01:48,290 --> 00:01:55,040
that list is the way that Amazon

00:01:52,130 --> 00:01:57,350
compiles that list is through machine

00:01:55,040 --> 00:01:59,360
learning they look at Europe search

00:01:57,350 --> 00:02:01,310
history you look at your purchasing

00:01:59,360 --> 00:02:03,590
history a whole bunch of stuff and they

00:02:01,310 --> 00:02:06,020
could buy a list and there's our little

00:02:03,590 --> 00:02:08,480
list is pretty good when I bought a book

00:02:06,020 --> 00:02:10,280
off Amazon I think it was just a general

00:02:08,480 --> 00:02:14,600
programming book this is what it came

00:02:10,280 --> 00:02:17,360
out at the end at the if you watch

00:02:14,600 --> 00:02:19,340
Netflix or YouTube or Hulu at the end

00:02:17,360 --> 00:02:20,960
you'll get recommendations about your

00:02:19,340 --> 00:02:23,960
next movie reenact shell kind of works

00:02:20,960 --> 00:02:26,690
the same principle the next really cool

00:02:23,960 --> 00:02:27,890
one is OCR or optical character

00:02:26,690 --> 00:02:30,530
recognition so if you ever took a

00:02:27,890 --> 00:02:32,720
picture of your check with your bank

00:02:30,530 --> 00:02:33,680
egapp there's a really high chance that

00:02:32,720 --> 00:02:36,920
there was a machine learning algorithm

00:02:33,680 --> 00:02:38,540
behind the scenes that read the text of

00:02:36,920 --> 00:02:41,959
the image and deposited at your bank

00:02:38,540 --> 00:02:44,540
account and next one that I'm really

00:02:41,959 --> 00:02:46,610
passionate about is cancer prevention so

00:02:44,540 --> 00:02:49,100
doctors are in the world are using

00:02:46,610 --> 00:02:51,470
machine learning to prevent cancer so it

00:02:49,100 --> 00:02:54,739
could be radiologists that look at scan

00:02:51,470 --> 00:02:57,110
images of your bones or your cells and

00:02:54,739 --> 00:03:00,350
they have algorithms to detect anomalies

00:02:57,110 --> 00:03:04,280
in those images they can also look at

00:03:00,350 --> 00:03:06,110
DNA samples and kind of see how well is

00:03:04,280 --> 00:03:08,420
your DNA structures and predict how

00:03:06,110 --> 00:03:09,890
likely are you going to have a certain

00:03:08,420 --> 00:03:11,900
type of cancer which if you just think

00:03:09,890 --> 00:03:15,080
about it for a second that's pretty

00:03:11,900 --> 00:03:17,900
amazing another cool one that's you know

00:03:15,080 --> 00:03:19,940
going around especially San Francisco or

00:03:17,900 --> 00:03:21,410
self-driving cars in the heart of a

00:03:19,940 --> 00:03:24,950
self-driving car is the machine learning

00:03:21,410 --> 00:03:27,860
algorithm it helps the car learn how to

00:03:24,950 --> 00:03:29,030
drive when to turn how to park pretty

00:03:27,860 --> 00:03:31,670
much everything about the world around

00:03:29,030 --> 00:03:32,660
it it's a pretty sophisticated algorithm

00:03:31,670 --> 00:03:33,950
but it's still machine learning

00:03:32,660 --> 00:03:34,980
algorithm what a bunch of sensors

00:03:33,950 --> 00:03:38,040
attached to it

00:03:34,980 --> 00:03:39,660
so now we know if you use cases of

00:03:38,040 --> 00:03:44,040
course there's more but I'm not gonna

00:03:39,660 --> 00:03:45,989
you know spend a lot of time on them we

00:03:44,040 --> 00:03:49,680
have to figure out when can we use it

00:03:45,989 --> 00:03:53,569
when should we use it we all heard about

00:03:49,680 --> 00:03:56,519
sequel probably so anytime you have to

00:03:53,569 --> 00:03:58,890
analyze historical data and answer

00:03:56,519 --> 00:04:01,380
questions like hey how many customers we

00:03:58,890 --> 00:04:03,900
have next month or what's our average

00:04:01,380 --> 00:04:06,180
revenue in the past year or what was our

00:04:03,900 --> 00:04:07,470
churn rate anything like that can be

00:04:06,180 --> 00:04:11,099
answered with sequel and you should use

00:04:07,470 --> 00:04:12,840
sequel it's great it's pretty amazing

00:04:11,099 --> 00:04:16,169
it's proven over the years that to be

00:04:12,840 --> 00:04:16,979
pretty scalable however if we have to

00:04:16,169 --> 00:04:19,260
predict the future

00:04:16,979 --> 00:04:21,060
that's when machine learning comes in so

00:04:19,260 --> 00:04:22,950
if you have to answer questions like

00:04:21,060 --> 00:04:26,090
what's our revenue going to be in five

00:04:22,950 --> 00:04:29,460
years or what's the price of a product

00:04:26,090 --> 00:04:30,870
in three weeks or is this a picture of a

00:04:29,460 --> 00:04:33,090
cat or a dog

00:04:30,870 --> 00:04:36,000
that's when machine learning comes in it

00:04:33,090 --> 00:04:41,220
helps you out in answering those

00:04:36,000 --> 00:04:42,870
questions so this part specifically is

00:04:41,220 --> 00:04:44,460
pretty near and dear to my heart

00:04:42,870 --> 00:04:46,020
because when I started doing machine

00:04:44,460 --> 00:04:49,229
learning I had a huge problem with

00:04:46,020 --> 00:04:50,910
figuring out how the cactus math work

00:04:49,229 --> 00:04:52,650
with machine learning and you know I

00:04:50,910 --> 00:04:56,550
heard all these dogs and people have

00:04:52,650 --> 00:04:59,220
PhDs and it's a whole who's your Sam but

00:04:56,550 --> 00:05:00,750
my hope with this section is to give you

00:04:59,220 --> 00:05:03,930
at least a little bit of intuition of

00:05:00,750 --> 00:05:05,940
how these things work on a very simple

00:05:03,930 --> 00:05:11,220
example and then you can build on top of

00:05:05,940 --> 00:05:14,940
that after this so this is a very simple

00:05:11,220 --> 00:05:17,729
high school equation we're probably all

00:05:14,940 --> 00:05:19,470
dead at some point and we have there's

00:05:17,729 --> 00:05:21,060
you know data is like weak letters but

00:05:19,470 --> 00:05:24,870
you can think of any letter that you can

00:05:21,060 --> 00:05:27,840
tell you like and me you know doing a

00:05:24,870 --> 00:05:31,470
bunch of Stanford courses Greek letters

00:05:27,840 --> 00:05:33,630
but um on the left you have H of theta

00:05:31,470 --> 00:05:36,270
on the right we have theta 0 plus theta

00:05:33,630 --> 00:05:37,560
1 times x1 so if you calculated things

00:05:36,270 --> 00:05:41,940
on the right you're going to get it up

00:05:37,560 --> 00:05:44,010
to the left next equation is a little

00:05:41,940 --> 00:05:47,150
bit simpler the previous one because we

00:05:44,010 --> 00:05:48,620
only have to figure out x1

00:05:47,150 --> 00:05:52,240
everything else is kind of fill up for

00:05:48,620 --> 00:05:54,139
us Thetas are replaced and if we have x1

00:05:52,240 --> 00:05:55,729
we're gonna happen we're gonna have

00:05:54,139 --> 00:05:57,680
answer to the age of data what's cool

00:05:55,729 --> 00:05:58,820
about this equation is that it's a back

00:05:57,680 --> 00:06:00,620
1 of an algorithm called linear

00:05:58,820 --> 00:06:03,650
regression if you dist exceed a

00:06:00,620 --> 00:06:05,419
regression and in order to kind of

00:06:03,650 --> 00:06:08,150
understand how it works let's pretend

00:06:05,419 --> 00:06:10,160
we're trying to predict someone's salary

00:06:08,150 --> 00:06:12,350
based on their years of experience of

00:06:10,160 --> 00:06:14,000
course in real life you know predict the

00:06:12,350 --> 00:06:17,900
sum of salary there's many factors but

00:06:14,000 --> 00:06:21,080
for our use case it's just use of

00:06:17,900 --> 00:06:23,510
experience so what a linear regression

00:06:21,080 --> 00:06:25,070
algorithm would do is it would go

00:06:23,510 --> 00:06:26,479
through a similar process and talk about

00:06:25,070 --> 00:06:29,449
later it will figure out these Thetas

00:06:26,479 --> 00:06:31,580
and then instead in then it would plug

00:06:29,449 --> 00:06:34,160
in years of experience instead of x1 so

00:06:31,580 --> 00:06:35,240
if you have five years of experience the

00:06:34,160 --> 00:06:38,060
equation goes something like this

00:06:35,240 --> 00:06:40,610
3 plus 0.2 times 5 and whatever the

00:06:38,060 --> 00:06:45,110
result that is would be your salary in

00:06:40,610 --> 00:06:47,479
thousands and that's about it that's all

00:06:45,110 --> 00:06:50,690
the linear regression is of course when

00:06:47,479 --> 00:06:54,050
you know as models grow more complicated

00:06:50,690 --> 00:06:56,900
that math gets more complicated but all

00:06:54,050 --> 00:07:01,190
that a model is is an equation behind

00:06:56,900 --> 00:07:04,099
the scenes it spits out numbers and yeah

00:07:01,190 --> 00:07:05,620
that's all there is to it I I found that

00:07:04,099 --> 00:07:07,669
a lot of people get turned off by

00:07:05,620 --> 00:07:10,820
machinery because they see math the

00:07:07,669 --> 00:07:12,740
numbers and while I would lie if I say

00:07:10,820 --> 00:07:15,289
that it's not hard as things get more

00:07:12,740 --> 00:07:17,150
complicated if you stick to if you stick

00:07:15,289 --> 00:07:20,780
with it I think it will click at some

00:07:17,150 --> 00:07:24,740
point we'll come back to this a little

00:07:20,780 --> 00:07:26,060
bit later but now let's talk about types

00:07:24,740 --> 00:07:28,970
of machine learning algorithms there's

00:07:26,060 --> 00:07:30,949
two types the first type is supervised

00:07:28,970 --> 00:07:32,030
machine learning algorithms and those

00:07:30,949 --> 00:07:34,849
are the algorithms that work with

00:07:32,030 --> 00:07:37,039
labeled data what is label data so

00:07:34,849 --> 00:07:39,289
imagine you have a picture of a cat and

00:07:37,039 --> 00:07:40,880
a picture of a dog and with a picture of

00:07:39,289 --> 00:07:42,800
a cat you put a label cat and if we're a

00:07:40,880 --> 00:07:44,419
picture of a dog to put a label doc you

00:07:42,800 --> 00:07:47,510
feed those two pictures in an algorithm

00:07:44,419 --> 00:07:49,280
algorithm goes ok this is a picture this

00:07:47,510 --> 00:07:52,940
is its label and that's how it learns

00:07:49,280 --> 00:07:54,530
what is what on the other hand you have

00:07:52,940 --> 00:07:56,479
unsupervised machine learning algorithms

00:07:54,530 --> 00:07:57,710
where there's no labeling and an

00:07:56,479 --> 00:08:01,400
algorithm has to figure out all that on

00:07:57,710 --> 00:08:04,889
its own so today we'll be

00:08:01,400 --> 00:08:07,529
talking about regression and regression

00:08:04,889 --> 00:08:10,439
is used do you predict continuous values

00:08:07,529 --> 00:08:12,810
all continuous values mean our numbers

00:08:10,439 --> 00:08:17,460
so if you ever need an answer to the

00:08:12,810 --> 00:08:19,409
question of for example I'll come back

00:08:17,460 --> 00:08:22,110
to this but what is the salary of my

00:08:19,409 --> 00:08:25,620
next employee or what is the mortality

00:08:22,110 --> 00:08:27,840
rate in a country X or what's the

00:08:25,620 --> 00:08:30,900
weather going to be like in five days or

00:08:27,840 --> 00:08:35,219
I just did a time series example where

00:08:30,900 --> 00:08:37,889
we have to predict a price of a certain

00:08:35,219 --> 00:08:39,750
product based on a bunch of stuff so the

00:08:37,889 --> 00:08:42,139
output is a single number in all those

00:08:39,750 --> 00:08:46,399
cases that's where regression comes in

00:08:42,139 --> 00:08:50,550
linear regression is called linear

00:08:46,399 --> 00:08:53,310
because the kind of the relationship

00:08:50,550 --> 00:08:58,829
between two variables

00:08:53,310 --> 00:09:00,420
grows linearly but it'll be it'll be a

00:08:58,829 --> 00:09:03,029
little bit clearer in a second when I

00:09:00,420 --> 00:09:07,550
show you a graph of why is it called

00:09:03,029 --> 00:09:11,839
linear so we go back to this equation

00:09:07,550 --> 00:09:13,410
again and there's this thing called

00:09:11,839 --> 00:09:15,750
dependent variable

00:09:13,410 --> 00:09:17,550
so what dependent variable is that's H

00:09:15,750 --> 00:09:20,490
of theta I don't know if you can see or

00:09:17,550 --> 00:09:23,040
you can't see but H of theta is called a

00:09:20,490 --> 00:09:24,300
dependent variable what that means is

00:09:23,040 --> 00:09:27,209
it's the thing we're trying to predict

00:09:24,300 --> 00:09:29,699
so if we go back to our salary salary

00:09:27,209 --> 00:09:31,529
example that will be the salary tailor

00:09:29,699 --> 00:09:34,350
sir is a constant theta one is a

00:09:31,529 --> 00:09:37,019
coefficient and x1 is called an

00:09:34,350 --> 00:09:38,040
independent variable in our salary

00:09:37,019 --> 00:09:40,740
example there will be years of

00:09:38,040 --> 00:09:42,149
experience so they don't want it's kind

00:09:40,740 --> 00:09:44,069
of interesting the coefficient is really

00:09:42,149 --> 00:09:47,399
interesting because it describes the

00:09:44,069 --> 00:09:49,769
relationship between independent

00:09:47,399 --> 00:09:52,860
variable also called a future and a

00:09:49,769 --> 00:09:55,140
dependent variable so if you drive a red

00:09:52,860 --> 00:09:57,029
car and we're trying to predict your

00:09:55,140 --> 00:09:58,410
salary our coefficient will be pretty

00:09:57,029 --> 00:10:00,480
low because the color of your car

00:09:58,410 --> 00:10:02,699
doesn't matter however years of

00:10:00,480 --> 00:10:04,350
experience do matter so coefficient will

00:10:02,699 --> 00:10:08,579
go up these are also called weight

00:10:04,350 --> 00:10:09,930
sometimes but um you know people use a

00:10:08,579 --> 00:10:13,769
different name different words for the

00:10:09,930 --> 00:10:14,880
same thing we also mentioned this

00:10:13,769 --> 00:10:16,860
equation which is the same

00:10:14,880 --> 00:10:20,400
with the previous one and I told you

00:10:16,860 --> 00:10:22,410
that regression goes through a certain

00:10:20,400 --> 00:10:23,990
process of figuring those out and we're

00:10:22,410 --> 00:10:26,540
gonna talk about that process right now

00:10:23,990 --> 00:10:28,980
the algorithm is called gradient descent

00:10:26,540 --> 00:10:33,120
it's a pretty famous machine learning

00:10:28,980 --> 00:10:34,620
algorithm in order to kind of get it I'm

00:10:33,120 --> 00:10:36,840
gonna show you a plot and then I'm gonna

00:10:34,620 --> 00:10:39,750
walk you through it if how it works

00:10:36,840 --> 00:10:41,970
and all this is trying to solve a

00:10:39,750 --> 00:10:45,210
problem of salary and predicting salary

00:10:41,970 --> 00:10:46,620
based on years of experience so this is

00:10:45,210 --> 00:10:47,010
a graph I'm pretty proud of I made it

00:10:46,620 --> 00:10:52,230
myself

00:10:47,010 --> 00:10:56,460
uh-huh and XO one is on the x-axis and

00:10:52,230 --> 00:11:00,150
it represents user experience H of theta

00:10:56,460 --> 00:11:04,410
is salary and it's in the y-axis we have

00:11:00,150 --> 00:11:06,600
a bunch of a dot those red dots are real

00:11:04,410 --> 00:11:09,420
data points so you ran a sequel query

00:11:06,600 --> 00:11:11,880
and you pulled out 50 employees and

00:11:09,420 --> 00:11:14,070
their user experience and salary and

00:11:11,880 --> 00:11:15,630
then you have that straight line that's

00:11:14,070 --> 00:11:20,420
why this album is called linear

00:11:15,630 --> 00:11:25,650
regression because that is linear and

00:11:20,420 --> 00:11:28,400
linearly and basically that line is

00:11:25,650 --> 00:11:33,360
drawn with those Thetas so if I go back

00:11:28,400 --> 00:11:38,220
three here is y intercept on the y axis

00:11:33,360 --> 00:11:42,510
and 0.2 whoops and 0.2 is the slope of

00:11:38,220 --> 00:11:46,260
the line so if you look at this picture

00:11:42,510 --> 00:11:49,920
for a second it makes sense

00:11:46,260 --> 00:11:52,170
you know it's pretty easy to predict

00:11:49,920 --> 00:11:56,160
someone's salary if we have that line so

00:11:52,170 --> 00:12:00,270
yeah walk over here some because I don't

00:11:56,160 --> 00:12:02,310
have a laser if we have if somebody has

00:12:00,270 --> 00:12:04,500
five years of experience right you know

00:12:02,310 --> 00:12:06,650
you will find it find five on x-axis you

00:12:04,500 --> 00:12:09,810
draw a line up and you read off of

00:12:06,650 --> 00:12:13,050
y-axis so the question really becomes

00:12:09,810 --> 00:12:15,380
how do we find this line and that's

00:12:13,050 --> 00:12:17,490
where kind of all the fun stuff comes in

00:12:15,380 --> 00:12:21,180
that's when the algorithm will drain the

00:12:17,490 --> 00:12:22,650
Sun comes in so what happens is when a

00:12:21,180 --> 00:12:25,140
machine learning algorithm starts

00:12:22,650 --> 00:12:28,470
learning they don't know anything right

00:12:25,140 --> 00:12:30,690
so they just guess so

00:12:28,470 --> 00:12:32,520
an algorithm is going to guess status or

00:12:30,690 --> 00:12:34,650
it's gonna guess this line and for

00:12:32,520 --> 00:12:38,340
example it's gonna draw a line right

00:12:34,650 --> 00:12:40,980
here and then it's gonna try to predict

00:12:38,340 --> 00:12:43,440
these red dots basically it's gonna try

00:12:40,980 --> 00:12:45,480
to predict salaries based on the given

00:12:43,440 --> 00:12:47,580
years of experience it's gonna predict

00:12:45,480 --> 00:12:51,120
those and then it's gonna ask itself

00:12:47,580 --> 00:12:52,860
okay how much am I wrong and the answer

00:12:51,120 --> 00:12:54,510
to that is something called a cost

00:12:52,860 --> 00:12:57,810
function it's going to calculate a cost

00:12:54,510 --> 00:13:01,350
function and what that number means is

00:12:57,810 --> 00:13:02,910
basically you're wrong this much just a

00:13:01,350 --> 00:13:04,980
single number that represents how wrong

00:13:02,910 --> 00:13:08,040
is you're how wrong are your predictions

00:13:04,980 --> 00:13:09,540
right and then what it's gonna do is

00:13:08,040 --> 00:13:12,240
it's gonna draw another line you know

00:13:09,540 --> 00:13:14,700
it's gonna do this and then it's gonna

00:13:12,240 --> 00:13:17,370
ask yourself again the whole process the

00:13:14,700 --> 00:13:21,030
cost function a few times and after a

00:13:17,370 --> 00:13:24,330
few times it's gonna pick a line that

00:13:21,030 --> 00:13:27,120
has the lowest cost why the line with

00:13:24,330 --> 00:13:29,340
the lowest cost well if you think about

00:13:27,120 --> 00:13:31,410
it when you draw a line here the

00:13:29,340 --> 00:13:33,480
straight line over here the cost is

00:13:31,410 --> 00:13:35,010
gonna be pretty high why because the

00:13:33,480 --> 00:13:36,780
difference between the predicted values

00:13:35,010 --> 00:13:40,500
and the actual values is pretty big

00:13:36,780 --> 00:13:43,020
however if you have this line the

00:13:40,500 --> 00:13:47,610
difference between predicted values and

00:13:43,020 --> 00:13:50,130
the actual values is pretty small so we

00:13:47,610 --> 00:13:51,570
want the you you want the line that has

00:13:50,130 --> 00:13:53,970
the lowest cost because it means that

00:13:51,570 --> 00:13:55,860
your predictions are very accurate there

00:13:53,970 --> 00:13:59,550
will never be 100% accurate if they are

00:13:55,860 --> 00:14:01,410
you're doing something wrong so given of

00:13:59,550 --> 00:14:04,590
course that data has a linear trend if

00:14:01,410 --> 00:14:07,620
your data is going you know wavy or has

00:14:04,590 --> 00:14:09,030
you know curved or whatever then you

00:14:07,620 --> 00:14:12,990
can't use linear regression because of

00:14:09,030 --> 00:14:14,190
the day it doesn't grow linearly I mean

00:14:12,990 --> 00:14:19,890
I'm having trouble with that linearly

00:14:14,190 --> 00:14:23,850
word word cool all right so that's about

00:14:19,890 --> 00:14:25,260
it it's it's all about even neural

00:14:23,850 --> 00:14:26,910
networks look like this so it's all

00:14:25,260 --> 00:14:29,100
great in this end of course you know

00:14:26,910 --> 00:14:30,510
certain there's a bunch of optimizations

00:14:29,100 --> 00:14:32,610
on top of this that can make it go

00:14:30,510 --> 00:14:35,310
faster but it's all about hey I'm gonna

00:14:32,610 --> 00:14:38,940
guess randomly what these Thetas are and

00:14:35,310 --> 00:14:41,490
then I'm gonna do it a bunch of times

00:14:38,940 --> 00:14:45,750
until I get it right

00:14:41,490 --> 00:14:49,740
and that's that's really all that it is

00:14:45,750 --> 00:14:51,330
it's a it's a simple example and it's

00:14:49,740 --> 00:14:53,310
the best one to learn on and if it

00:14:51,330 --> 00:14:55,770
didn't click immediately that's

00:14:53,310 --> 00:14:57,630
completely okay took me a few times do

00:14:55,770 --> 00:15:01,709
you kind of wrap my head around it but

00:14:57,630 --> 00:15:02,370
once you did once you do you know 80% of

00:15:01,709 --> 00:15:06,209
machine learning

00:15:02,370 --> 00:15:08,730
I mean maybe 75 but that's that's really

00:15:06,209 --> 00:15:10,800
great this n is kind of the staple and

00:15:08,730 --> 00:15:13,709
that's how all algorithm algorithms

00:15:10,800 --> 00:15:15,240
nowadays work all right so now we kind

00:15:13,709 --> 00:15:17,670
of know how to figure out those Thetas

00:15:15,240 --> 00:15:23,459
and we have our algorithm and it can

00:15:17,670 --> 00:15:25,950
predict it can predict salaries but how

00:15:23,459 --> 00:15:27,480
do we put this thing production so I'm

00:15:25,950 --> 00:15:29,820
going to talk about that a little bit

00:15:27,480 --> 00:15:31,890
that's a talk on its own but I had a

00:15:29,820 --> 00:15:33,360
really good feedback refused a few times

00:15:31,890 --> 00:15:35,040
ago when to gave this talk about that I

00:15:33,360 --> 00:15:37,260
didn't have this slide so I'm going to

00:15:35,040 --> 00:15:38,820
talk about it really quickly so there's

00:15:37,260 --> 00:15:42,080
four steps I know I have only three

00:15:38,820 --> 00:15:44,940
steps there but the first step is

00:15:42,080 --> 00:15:46,650
defining a problem so whenever you're

00:15:44,940 --> 00:15:47,760
trying to solve anything you need to

00:15:46,650 --> 00:15:50,520
make sure that everybody's on the same

00:15:47,760 --> 00:15:51,330
page of what is what it is that you're

00:15:50,520 --> 00:15:55,020
trying to solve

00:15:51,330 --> 00:15:58,080
once you are on the same page you have

00:15:55,020 --> 00:15:59,430
to get the data now getting the data can

00:15:58,080 --> 00:16:02,000
be done in multiple problem you know

00:15:59,430 --> 00:16:03,570
multiple ways you know database these

00:16:02,000 --> 00:16:05,670
excel files

00:16:03,570 --> 00:16:11,370
Kafka streams whatever works you know

00:16:05,670 --> 00:16:13,230
for you once you get the data this is

00:16:11,370 --> 00:16:15,839
kind of the same step but once you get

00:16:13,230 --> 00:16:17,520
there you have to examine the data and

00:16:15,839 --> 00:16:20,190
clean it up and make sure it's ready for

00:16:17,520 --> 00:16:22,440
the algorithm and kind of make sure it's

00:16:20,190 --> 00:16:25,589
ready for the next step which is

00:16:22,440 --> 00:16:27,209
basically picking the algorithm now a

00:16:25,589 --> 00:16:29,070
lot of machine learning is going to

00:16:27,209 --> 00:16:31,440
neural networks which we can talk about

00:16:29,070 --> 00:16:32,579
later why is that but you have to pick

00:16:31,440 --> 00:16:33,660
the algorithm if you didn't classical

00:16:32,579 --> 00:16:35,459
machine learning there's a bunch of them

00:16:33,660 --> 00:16:36,839
you have to know which one is better

00:16:35,459 --> 00:16:38,640
good for which problem sometimes you

00:16:36,839 --> 00:16:41,220
don't and you try a few of them see what

00:16:38,640 --> 00:16:42,690
works best once you pick the right

00:16:41,220 --> 00:16:46,620
algorithm you know with experimentation

00:16:42,690 --> 00:16:48,420
you have to implement implement it the

00:16:46,620 --> 00:16:51,300
demo that I'm about to do is I read that

00:16:48,420 --> 00:16:52,829
all the steps except the last one so you

00:16:51,300 --> 00:16:53,640
know when you go home or when you go to

00:16:52,829 --> 00:16:56,130
your work and

00:16:53,640 --> 00:16:58,620
these things you should kind of be aware

00:16:56,130 --> 00:17:01,500
of the whole pipeline sometimes these

00:16:58,620 --> 00:17:03,720
things are in bigger companies they have

00:17:01,500 --> 00:17:04,950
data engineering teams they have machine

00:17:03,720 --> 00:17:06,900
learning teams that have data science

00:17:04,950 --> 00:17:09,300
teams in each owns different box

00:17:06,900 --> 00:17:12,150
sometimes in smaller smaller companies

00:17:09,300 --> 00:17:16,290
one person does all of it just kind of

00:17:12,150 --> 00:17:20,010
depends and yeah let's get to coding

00:17:16,290 --> 00:17:24,930
hopefully this goes well yeah questions

00:17:20,010 --> 00:17:26,550
are at the end all right yeah sorry

00:17:24,930 --> 00:17:28,890
questions are at the end I forgot to say

00:17:26,550 --> 00:17:30,540
that so I'm using something called a dip

00:17:28,890 --> 00:17:32,550
return notebook if you've never heard

00:17:30,540 --> 00:17:35,250
about it it's just an ID in the browser

00:17:32,550 --> 00:17:38,040
it lets you run Python if you never seen

00:17:35,250 --> 00:17:40,860
Python it's the same as Ruby never seems

00:17:38,040 --> 00:17:46,340
to be the famous small talk so it's

00:17:40,860 --> 00:17:48,720
kinda you know all the same all right so

00:17:46,340 --> 00:17:53,190
can you see this

00:17:48,720 --> 00:17:55,230
oh nice okay so I didn't want to

00:17:53,190 --> 00:17:56,940
remember a bunch of imports and pretend

00:17:55,230 --> 00:17:58,950
to know about to import so I just import

00:17:56,940 --> 00:18:03,540
them in advance an idea and this last

00:17:58,950 --> 00:18:04,620
part is for plotting so I'm going to

00:18:03,540 --> 00:18:08,510
explain what these libraries do so

00:18:04,620 --> 00:18:11,490
there's not pi which is used for

00:18:08,510 --> 00:18:14,130
manipulation of a race but oh this is

00:18:11,490 --> 00:18:17,610
gonna be all on github so you can you

00:18:14,130 --> 00:18:20,730
know take a look at it MATLAB is for

00:18:17,610 --> 00:18:22,350
plotting graphs pandas is actually one

00:18:20,730 --> 00:18:28,290
of my favorite live reason what it does

00:18:22,350 --> 00:18:29,760
is it takes CSV or in Excel and it makes

00:18:28,290 --> 00:18:31,920
it into something called a data frame

00:18:29,760 --> 00:18:35,150
which is essentially excel in code so

00:18:31,920 --> 00:18:40,140
you can you know pivot tables you can

00:18:35,150 --> 00:18:41,850
you can do different things in code just

00:18:40,140 --> 00:18:42,990
as you would with Excel and that turns

00:18:41,850 --> 00:18:45,240
out to be really useful when you do

00:18:42,990 --> 00:18:48,390
machine learning there's this famous

00:18:45,240 --> 00:18:50,790
library called psychic learn in this

00:18:48,390 --> 00:18:53,640
specific line we're doing we're

00:18:50,790 --> 00:18:55,500
importing drink tests flip which we're

00:18:53,640 --> 00:18:57,180
gonna need to split test data and train

00:18:55,500 --> 00:19:00,810
it and I'll explain why that's important

00:18:57,180 --> 00:19:02,790
in a second and then there's a linear

00:19:00,810 --> 00:19:06,090
model and inputting linear regression

00:19:02,790 --> 00:19:07,539
which is instead of me doing this from

00:19:06,090 --> 00:19:09,340
scratch

00:19:07,539 --> 00:19:11,169
there's really something in it for me

00:19:09,340 --> 00:19:13,090
and basically does that thing that I

00:19:11,169 --> 00:19:15,370
just explained with the graph and

00:19:13,090 --> 00:19:17,889
finding this you know weights and stuff

00:19:15,370 --> 00:19:20,230
although however I would highly

00:19:17,889 --> 00:19:23,679
recommend building one from scratch

00:19:20,230 --> 00:19:26,620
because that's when you kind of figure

00:19:23,679 --> 00:19:28,419
out how it really works cool so the

00:19:26,620 --> 00:19:30,879
first thing we need to do is import data

00:19:28,419 --> 00:19:33,970
set will be using data set called a

00:19:30,879 --> 00:19:37,269
salary data which it has just find

00:19:33,970 --> 00:19:44,499
online it's around either set so we have

00:19:37,269 --> 00:19:46,269
to yes alright so that's because I

00:19:44,499 --> 00:19:47,889
didn't import my library so it's like a

00:19:46,269 --> 00:19:52,629
cell by cell so we have to run each

00:19:47,889 --> 00:19:53,369
cells separately so now I have it and I

00:19:52,629 --> 00:19:59,700
do

00:19:53,369 --> 00:20:03,159
they said head it basically spits out a

00:19:59,700 --> 00:20:05,619
part of that CSV because you know it's

00:20:03,159 --> 00:20:08,499
the same thing just a larger this is

00:20:05,619 --> 00:20:09,549
just a sample that's CSV you know as you

00:20:08,499 --> 00:20:13,990
can see we have years of experience

00:20:09,549 --> 00:20:16,480
which is what our next one and then we

00:20:13,990 --> 00:20:20,919
have salary which is our age of data or

00:20:16,480 --> 00:20:24,940
Y so what we need to do first you need

00:20:20,919 --> 00:20:26,950
to split out dependent and independent

00:20:24,940 --> 00:20:29,649
variables Y because if you remember the

00:20:26,950 --> 00:20:30,970
equation you know you have two parts you

00:20:29,649 --> 00:20:32,559
have two you have a part of you're

00:20:30,970 --> 00:20:35,440
trying to predict and you have a part of

00:20:32,559 --> 00:20:37,480
you calculating the prediction width so

00:20:35,440 --> 00:20:39,460
when you're using this linear regression

00:20:37,480 --> 00:20:43,690
algorithm you have to pass it you know

00:20:39,460 --> 00:20:49,330
do things because it expects X X's and

00:20:43,690 --> 00:20:51,779
Y's so the way to do that is there's not

00:20:49,330 --> 00:20:55,840
always but we're gonna do it manually so

00:20:51,779 --> 00:21:00,789
X is basically Davis said I was I'll

00:20:55,840 --> 00:21:04,049
explain what what these do in just a

00:21:00,789 --> 00:21:04,049
second so

00:21:05,480 --> 00:21:21,710
and I'm so you can you know you can call

00:21:08,960 --> 00:21:23,419
this age all right so what is X so in

00:21:21,710 --> 00:21:26,990
pandas you can do this they call I lock

00:21:23,419 --> 00:21:29,510
which selects certain I rows and columns

00:21:26,990 --> 00:21:32,029
so the first item is gross so we want

00:21:29,510 --> 00:21:34,039
all the rows and the second item is

00:21:32,029 --> 00:21:35,929
columns we want all the columns except

00:21:34,039 --> 00:21:40,700
the last one which in this case is just

00:21:35,929 --> 00:21:43,730
user experience for why we say we want

00:21:40,700 --> 00:21:45,289
all the rows and the last column the

00:21:43,730 --> 00:21:46,490
last column is salary what is the thing

00:21:45,289 --> 00:21:48,139
we're trying to predict right remember

00:21:46,490 --> 00:21:50,330
this is why does the thing we're trying

00:21:48,139 --> 00:21:54,500
to predict you know that's the age of

00:21:50,330 --> 00:21:58,159
theta from the slides so now that we

00:21:54,500 --> 00:22:00,830
have this we have to do something called

00:21:58,159 --> 00:22:02,840
up display of the data into testing and

00:22:00,830 --> 00:22:04,370
training so the reason why we do this if

00:22:02,840 --> 00:22:06,860
you think about classic software

00:22:04,370 --> 00:22:10,250
development you write tests do you back

00:22:06,860 --> 00:22:12,409
your program so you know DDD or BDD or

00:22:10,250 --> 00:22:13,490
whatever your flavor of testing is but

00:22:12,409 --> 00:22:16,039
you end up with some sort of an

00:22:13,490 --> 00:22:21,789
automated test to prove that your code

00:22:16,039 --> 00:22:24,139
is working so there'll be questions and

00:22:21,789 --> 00:22:27,710
yeah so to prove that your code is

00:22:24,139 --> 00:22:29,779
working and basically what we doing

00:22:27,710 --> 00:22:31,700
machine learning instead is we have the

00:22:29,779 --> 00:22:35,029
whole data let's say it has a hundred

00:22:31,700 --> 00:22:38,000
data points 100 rows and we take the

00:22:35,029 --> 00:22:40,429
last 20 rows and we hide it from the

00:22:38,000 --> 00:22:43,730
model and we trade the model with the

00:22:40,429 --> 00:22:46,760
first 80 and then we test the model with

00:22:43,730 --> 00:22:50,389
the last 20 to see how it does

00:22:46,760 --> 00:22:55,159
it's very common the percentage of

00:22:50,389 --> 00:22:58,870
testing data differs based on a person

00:22:55,159 --> 00:23:01,730
or company I like to use 20% because

00:22:58,870 --> 00:23:04,370
people that are with us for many years

00:23:01,730 --> 00:23:06,320
to me use 20% but you can kind of play

00:23:04,370 --> 00:23:08,960
around with that and see if you need

00:23:06,320 --> 00:23:10,909
more data you know then if you need like

00:23:08,960 --> 00:23:13,100
oh I think I need more data to train our

00:23:10,909 --> 00:23:14,779
model then you may be testing 5% but

00:23:13,100 --> 00:23:16,700
then you know run into different

00:23:14,779 --> 00:23:17,730
problems but in general and good rule of

00:23:16,700 --> 00:23:21,710
thumb 20

00:23:17,730 --> 00:23:26,730
percent of your data can go into the

00:23:21,710 --> 00:23:28,440
into the test data okay so now we have

00:23:26,730 --> 00:23:30,480
to do that and there's a one handed

00:23:28,440 --> 00:23:32,580
function called our drain that split

00:23:30,480 --> 00:23:40,350
inside keep learn and we're gonna use

00:23:32,580 --> 00:23:48,870
that but how am i doing on time nice

00:23:40,350 --> 00:23:56,970
okay good okay so x training X test I'll

00:23:48,870 --> 00:24:04,140
explain what this is y test and then you

00:23:56,970 --> 00:24:05,160
pass it this okay so let's talk about

00:24:04,140 --> 00:24:09,330
this Python has this thing called

00:24:05,160 --> 00:24:12,660
decomposition which basically that you

00:24:09,330 --> 00:24:13,560
can return multiple values out of I

00:24:12,660 --> 00:24:15,120
actually don't know it so it's called

00:24:13,560 --> 00:24:18,000
ugly composition I forgot be efficiently

00:24:15,120 --> 00:24:21,600
but I call a decomposition and what

00:24:18,000 --> 00:24:23,070
happens is when you return a value you

00:24:21,600 --> 00:24:26,330
can enter multiple values and then you

00:24:23,070 --> 00:24:29,520
can kind of accept them in that way and

00:24:26,330 --> 00:24:31,140
when you call the function so here this

00:24:29,520 --> 00:24:34,170
is this function is it to make four

00:24:31,140 --> 00:24:38,130
values in this order and we're exactly

00:24:34,170 --> 00:24:42,270
them in this way okay so you pass you

00:24:38,130 --> 00:24:45,570
know your your x and y's and i call this

00:24:42,270 --> 00:24:49,980
thing a random state 0 the reason why I

00:24:45,570 --> 00:24:52,860
call this is in linear regression

00:24:49,980 --> 00:24:55,650
there's some randomness and the data the

00:24:52,860 --> 00:24:57,330
results always come off a little bit

00:24:55,650 --> 00:24:59,820
different there's a few reasons for that

00:24:57,330 --> 00:25:03,300
but in order to get the same result

00:24:59,820 --> 00:25:04,650
every time for demo purposes I put this

00:25:03,300 --> 00:25:10,500
raining state 0 which basically means

00:25:04,650 --> 00:25:14,580
don't add the random bias to okay so we

00:25:10,500 --> 00:25:15,960
got that we're going pretty strong we

00:25:14,580 --> 00:25:19,650
have everything set up to train the

00:25:15,960 --> 00:25:23,280
model now we're gonna train the model

00:25:19,650 --> 00:25:26,210
it's it's a it's kind of amazing how

00:25:23,280 --> 00:25:26,210
simple it is

00:25:29,330 --> 00:25:35,299
so what we're doing here is we're

00:25:33,659 --> 00:25:37,559
essentially a class come into regression

00:25:35,299 --> 00:25:39,510
which is the linear regression model

00:25:37,559 --> 00:25:43,110
that we just talked about and basically

00:25:39,510 --> 00:25:46,260
we have X train and why train we're

00:25:43,110 --> 00:25:51,000
training the model with X train and why

00:25:46,260 --> 00:25:53,580
train and this is basically to fit the

00:25:51,000 --> 00:25:56,730
fit method what that does is it finds

00:25:53,580 --> 00:25:59,309
that line go back to that line it finds

00:25:56,730 --> 00:26:01,289
it or the other ways think about this

00:25:59,309 --> 00:26:04,710
fight and find those ways and refines

00:26:01,289 --> 00:26:07,289
those coefficients and Thetas its find

00:26:04,710 --> 00:26:09,929
the parameters okay let's run this and

00:26:07,289 --> 00:26:13,320
see what happens all right that was

00:26:09,929 --> 00:26:16,650
pretty pretty fast given that this data

00:26:13,320 --> 00:26:21,570
set is pretty small but it's very fast

00:26:16,650 --> 00:26:26,700
so now what we can do is we can predict

00:26:21,570 --> 00:26:29,820
things and if you remember I kind of

00:26:26,700 --> 00:26:32,309
separate the data set into training and

00:26:29,820 --> 00:26:33,809
testing and training and testings this

00:26:32,309 --> 00:26:36,480
is not for data sets it's the same data

00:26:33,809 --> 00:26:40,110
set except it goes and train train pairs

00:26:36,480 --> 00:26:43,890
and test passed pairs so what I can do

00:26:40,110 --> 00:26:47,220
now is I can give my model the data that

00:26:43,890 --> 00:26:49,650
it hasn't seen before that hides an X

00:26:47,220 --> 00:26:53,159
test and then I can tell a model hey

00:26:49,650 --> 00:26:56,850
predict age of theta or predict y and

00:26:53,159 --> 00:26:59,730
then we can compare it to Y test because

00:26:56,850 --> 00:27:10,919
those are the real values right so we're

00:26:59,730 --> 00:27:16,640
gonna do that quickly okay so let's see

00:27:10,919 --> 00:27:19,740
what Y prêt is so why pet is an array

00:27:16,640 --> 00:27:24,799
basically says these are all the

00:27:19,740 --> 00:27:37,140
predicted values based on these X's and

00:27:24,799 --> 00:27:38,450
we can see what real Y values are so the

00:27:37,140 --> 00:27:42,350
real one

00:27:38,450 --> 00:27:45,830
we predicted 41,000 not that way but not

00:27:42,350 --> 00:27:57,530
super bad the real one is you know 122

00:27:45,830 --> 00:27:59,570
391 123 597 better 5765 6363 so you can

00:27:57,530 --> 00:28:01,370
go manual and kind of expect it but one

00:27:59,570 --> 00:28:03,530
of my favorite ways to do these things

00:28:01,370 --> 00:28:08,660
is to visualize if I can sometimes the

00:28:03,530 --> 00:28:09,950
data is in 3 4 5 6 7 D space so you

00:28:08,660 --> 00:28:13,400
can't really visualize it that easily

00:28:09,950 --> 00:28:15,230
but when it's dude in 2d space it's

00:28:13,400 --> 00:28:18,770
pretty to visualize it and it you can

00:28:15,230 --> 00:28:21,610
easily see um you can easily see what's

00:28:18,770 --> 00:28:24,530
going on okay so let's do that

00:28:21,610 --> 00:28:28,870
alright so there's a few things going on

00:28:24,530 --> 00:28:32,480
so the red colors are training our

00:28:28,870 --> 00:28:34,970
training data set right so it's just the

00:28:32,480 --> 00:28:38,540
data that we use to train the model on

00:28:34,970 --> 00:28:42,230
y-axis we'd have a salary on x-axis we

00:28:38,540 --> 00:28:46,810
have years of experience right so the

00:28:42,230 --> 00:28:50,210
blue ones are the data set that's in our

00:28:46,810 --> 00:28:52,430
testing data set so the one the data set

00:28:50,210 --> 00:28:54,050
that we head from our model and we said

00:28:52,430 --> 00:28:55,760
hey we're going to test our model based

00:28:54,050 --> 00:28:57,650
on this so these are the actual values

00:28:55,760 --> 00:29:00,890
of that data

00:28:57,650 --> 00:29:03,650
the orange ones are the ones that we

00:29:00,890 --> 00:29:05,420
predicted for that testing data set so

00:29:03,650 --> 00:29:07,520
if you if you look closely if you can

00:29:05,420 --> 00:29:12,530
see I think I have to zoom in a little

00:29:07,520 --> 00:29:15,680
bit more for you to see that yeah you

00:29:12,530 --> 00:29:19,940
see it orange dots right did you see

00:29:15,680 --> 00:29:24,920
what if that's all right I can like

00:29:19,940 --> 00:29:26,600
circle around so here you have an orange

00:29:24,920 --> 00:29:28,850
dot in a blue dot so we're pretty good

00:29:26,600 --> 00:29:30,380
with predicting it here we have an

00:29:28,850 --> 00:29:32,510
orange nodding up to the top again

00:29:30,380 --> 00:29:34,670
pretty good trick to get warnings on the

00:29:32,510 --> 00:29:36,770
blue dot pretty good there's two orange

00:29:34,670 --> 00:29:40,010
dots here one is for this one one is for

00:29:36,770 --> 00:29:41,300
this also we're pretty off here we have

00:29:40,010 --> 00:29:43,400
an orange dot and a blue dot that's

00:29:41,300 --> 00:29:45,140
pretty close here we have an orange line

00:29:43,400 --> 00:29:46,600
the blue dot and then we also have two

00:29:45,140 --> 00:29:47,799
weren't dots there

00:29:46,600 --> 00:29:51,880
correlating to these two so we were

00:29:47,799 --> 00:29:56,549
pretty off on these two but overall our

00:29:51,880 --> 00:29:59,309
model is doing pretty fine I'd say so

00:29:56,549 --> 00:30:04,179
that's that's about it for the demo

00:29:59,309 --> 00:30:10,419
there's this exact code lives and github

00:30:04,179 --> 00:30:12,940
I'll share my um I'll share my um sure

00:30:10,419 --> 00:30:15,100
might get hub repo in in that minute

00:30:12,940 --> 00:30:17,590
hair as all presenters there's always

00:30:15,100 --> 00:30:19,360
you know fun stuff about me so here

00:30:17,590 --> 00:30:20,769
comes I spared for the last because it's

00:30:19,360 --> 00:30:23,940
not that's the least important thing in

00:30:20,769 --> 00:30:26,679
this talk but uh I like to train dogs

00:30:23,940 --> 00:30:29,889
specifically working dogs it's kind of

00:30:26,679 --> 00:30:32,470
thing I do on the side this is me being

00:30:29,889 --> 00:30:34,840
a helper I can talk about it later but

00:30:32,470 --> 00:30:38,740
uh basically in essence it's it's a

00:30:34,840 --> 00:30:42,009
sport and I'd say working dogs this is

00:30:38,740 --> 00:30:44,129
me this is my um so my github is is this

00:30:42,009 --> 00:30:49,120
this is my Twitter this is my website

00:30:44,129 --> 00:30:51,759
and this is the company I work for

00:30:49,120 --> 00:30:54,610
it's called script job we're hiring a

00:30:51,759 --> 00:30:57,580
bunch of people so if you want to join

00:30:54,610 --> 00:31:00,220
us go on this link and we basically do

00:30:57,580 --> 00:31:02,500
prescription delivery and we help our

00:31:00,220 --> 00:31:03,870
patients get out their medication safely

00:31:02,500 --> 00:31:06,940
and

00:31:03,870 --> 00:31:06,940
[Music]

00:31:14,710 --> 00:31:20,060
yeah so that's a good question so our

00:31:17,210 --> 00:31:23,810
mean square error is a way to evaluate

00:31:20,060 --> 00:31:26,750
it's a cost function and I didn't really

00:31:23,810 --> 00:31:27,890
want to burden people with a cost

00:31:26,750 --> 00:31:31,010
function I just kind of wanted to

00:31:27,890 --> 00:31:34,340
mention it what it is but mean square

00:31:31,010 --> 00:31:36,770
there is a way to evaluate a model I

00:31:34,340 --> 00:31:39,260
like to see things visually and show

00:31:36,770 --> 00:31:57,290
things visually but a linear regression

00:31:39,260 --> 00:31:59,240
does use me square by yeah I did I did

00:31:57,290 --> 00:32:01,370
yeah I just didn't wanna that's a good

00:31:59,240 --> 00:32:03,170
that's a good idea I did use that but

00:32:01,370 --> 00:32:16,070
not here just because I didn't want to

00:32:03,170 --> 00:32:19,040
burden people with yeah I did yeah I

00:32:16,070 --> 00:32:22,000
just didn't want to burn people my whole

00:32:19,040 --> 00:32:22,000
point was like this is

00:32:33,789 --> 00:32:39,769
yes yeah psychic learn does all that

00:32:38,529 --> 00:32:41,389
yeah

00:32:39,769 --> 00:33:17,479
psychic learn will help with that for

00:32:41,389 --> 00:33:24,679
sure yes sir correct problem yeah yeah

00:33:17,479 --> 00:33:25,999
so what I that's good question that's a

00:33:24,679 --> 00:33:28,219
good question yeah

00:33:25,999 --> 00:33:31,129
so the first thing that I personally do

00:33:28,219 --> 00:33:34,069
is I look at my data set and see what it

00:33:31,129 --> 00:33:36,199
is what am i doing even I basically

00:33:34,069 --> 00:33:37,999
visualize a bunch of things if I can I

00:33:36,199 --> 00:33:39,739
look at the graph and I see you know

00:33:37,999 --> 00:33:46,779
what are the curves what am I trying to

00:33:39,739 --> 00:33:49,069
predict how can I do this right and then

00:33:46,779 --> 00:33:51,379
really that's when kind of the answer

00:33:49,069 --> 00:33:53,569
sucks it's more of an art than a science

00:33:51,379 --> 00:33:55,669
in making the right algorithm it's kind

00:33:53,569 --> 00:33:58,609
of like people have these discussions

00:33:55,669 --> 00:34:01,339
about neural network architectures and

00:33:58,609 --> 00:34:02,899
all of the answers are right at the time

00:34:01,339 --> 00:34:05,059
of course if if your problem is

00:34:02,899 --> 00:34:06,440
multivariate and you have a linear

00:34:05,059 --> 00:34:11,419
regression you shouldn't use linear

00:34:06,440 --> 00:34:13,970
regression but what I do is I visualize

00:34:11,419 --> 00:34:16,190
the data I try to guess do my best

00:34:13,970 --> 00:34:18,919
estimate and I try there's also

00:34:16,190 --> 00:34:21,440
algorithms that will help you determine

00:34:18,919 --> 00:34:23,720
which algorithm you should use like grid

00:34:21,440 --> 00:34:26,450
search and different things a little

00:34:23,720 --> 00:34:30,980
more advanced with technique so you can

00:34:26,450 --> 00:34:35,049
look into those but I think at the end

00:34:30,980 --> 00:34:37,700
it comes down to you visualizing and

00:34:35,049 --> 00:34:39,619
making your best estimate or the

00:34:37,700 --> 00:34:41,690
information that you know one thing that

00:34:39,619 --> 00:34:43,099
I would if you're not doing neural

00:34:41,690 --> 00:34:45,809
networks even if you do know

00:34:43,099 --> 00:34:48,539
there's this thing called PCA but

00:34:45,809 --> 00:34:50,279
basically principal component alysus

00:34:48,539 --> 00:34:52,769
which basically reduces the amount of

00:34:50,279 --> 00:34:56,429
feature that you have the amount of axis

00:34:52,769 --> 00:35:00,059
and the less X's you have the easier it

00:34:56,429 --> 00:35:03,299
will be to visualize things and decide

00:35:00,059 --> 00:35:04,499
but there's also a trade-off where a lot

00:35:03,299 --> 00:35:06,539
of people that are really good at

00:35:04,499 --> 00:35:08,519
machine learning argued that you don't

00:35:06,539 --> 00:35:10,589
want to remove variables like in class

00:35:08,519 --> 00:35:14,369
classical statistics you want to keep

00:35:10,589 --> 00:35:17,849
the nonlinearities it's kind of like a

00:35:14,369 --> 00:35:20,099
long answer to your question but try you

00:35:17,849 --> 00:35:22,319
know visualizing it make it a best guess

00:35:20,099 --> 00:35:22,950
or try using an automated solution to

00:35:22,319 --> 00:35:27,049
see how it works

00:35:22,950 --> 00:35:27,049
there's not really like oh yeah do this

00:35:41,140 --> 00:35:47,320
yes so when you're doing these things

00:35:44,460 --> 00:35:50,500
like for example in regression you have

00:35:47,320 --> 00:35:52,210
to even though you have a data set and

00:35:50,500 --> 00:35:54,370
you think you know the features you

00:35:52,210 --> 00:35:55,750
you're not always right and sometimes

00:35:54,370 --> 00:35:57,340
you have to decide the future isn't this

00:35:55,750 --> 00:35:58,270
cool there's this whole section of

00:35:57,340 --> 00:36:00,850
machine learning called

00:35:58,270 --> 00:36:04,030
feature engineering which basically says

00:36:00,850 --> 00:36:08,050
let's come up with the best features for

00:36:04,030 --> 00:36:13,170
this model and sometimes that's really

00:36:08,050 --> 00:36:16,540
hard and especially complex problems and

00:36:13,170 --> 00:36:19,210
people are just bad at that like as

00:36:16,540 --> 00:36:21,670
humans so what the main event of neural

00:36:19,210 --> 00:36:27,460
networks is is they come up with all the

00:36:21,670 --> 00:36:30,370
features so it doesn't really the future

00:36:27,460 --> 00:36:33,460
engineering piece almost goes away not

00:36:30,370 --> 00:36:35,890
entirely you still have to do a little

00:36:33,460 --> 00:36:40,260
bit of it in some instances but a lot of

00:36:35,890 --> 00:36:40,260
it just goes away and that's the me

00:36:53,760 --> 00:37:03,430
do i do i do so near this elementary

00:36:59,770 --> 00:37:04,960
school website called math is fun it's

00:37:03,430 --> 00:37:12,520
one of the it sounds it sounds

00:37:04,960 --> 00:37:14,950
ridiculous but let me well this is not

00:37:12,520 --> 00:37:20,260
the main resource but I don't know how

00:37:14,950 --> 00:37:23,170
their circle is see I didn't spell that

00:37:20,260 --> 00:37:27,970
right but how to multiply matrices all

00:37:23,170 --> 00:37:30,490
right so this is one I use without any

00:37:27,970 --> 00:37:33,220
shame I have this screenshot and when I

00:37:30,490 --> 00:37:36,099
forget which one goes when I just look

00:37:33,220 --> 00:37:38,140
at this NGO none because that's the same

00:37:36,099 --> 00:37:39,970
thing so if you can do this I can do

00:37:38,140 --> 00:37:41,740
this if you don't know how and ruin guys

00:37:39,970 --> 00:37:43,240
it's he's considered one of the fathers

00:37:41,740 --> 00:37:47,680
of machine learning model machine

00:37:43,240 --> 00:37:53,710
learning amazing guy look him up so this

00:37:47,680 --> 00:37:57,960
this is one there's a course called when

00:37:53,710 --> 00:38:07,510
is it EDX EDX there's a course called

00:37:57,960 --> 00:38:09,640
mat for essential math not the art

00:38:07,510 --> 00:38:13,119
edition like well you can do but I get

00:38:09,640 --> 00:38:17,200
the Python it essentially goes over here

00:38:13,119 --> 00:38:21,369
you know linear algebra vectors and

00:38:17,200 --> 00:38:23,020
matrices statistic probability calculus

00:38:21,369 --> 00:38:25,990
and differentiation optimization

00:38:23,020 --> 00:38:29,200
equation function graphs so this gives

00:38:25,990 --> 00:38:34,059
you a really good like if you can do

00:38:29,200 --> 00:38:37,290
these things you will know enough to at

00:38:34,059 --> 00:38:42,369
least scheme Club paper which is

00:38:37,290 --> 00:38:44,829
insanely valuable and once you I think a

00:38:42,369 --> 00:38:46,240
good goal to have is I want to be able

00:38:44,829 --> 00:38:49,240
to read the paper through and through

00:38:46,240 --> 00:38:52,650
like an academic paper once you can do

00:38:49,240 --> 00:38:52,650
that you're well on your way

00:38:52,980 --> 00:39:05,400
yes sir

00:38:54,900 --> 00:39:13,170
I didn't hear half of that I just heard

00:39:05,400 --> 00:39:15,360
competing instances looking back but a

00:39:13,170 --> 00:39:39,600
later I think it's it's a different

00:39:15,360 --> 00:39:51,810
crowd so we can just offline if you last

00:39:39,600 --> 00:39:54,090
called questions yes sir yeah so there

00:39:51,810 --> 00:39:57,780
depends on a problem what are you trying

00:39:54,090 --> 00:40:01,050
to solve but you know one of the first

00:39:57,780 --> 00:40:02,910
things is okay let me look if I have you

00:40:01,050 --> 00:40:05,160
know if I'm predicting the price you

00:40:02,910 --> 00:40:07,830
know prices of a house and you know want

00:40:05,160 --> 00:40:09,330
the key thing is just square feet let's

00:40:07,830 --> 00:40:10,710
look at the rows and let's look at all

00:40:09,330 --> 00:40:13,110
the data and see if I have any missing

00:40:10,710 --> 00:40:15,080
values so if you have missing values you

00:40:13,110 --> 00:40:17,340
would want you know get rid of those

00:40:15,080 --> 00:40:18,630
then you want to see if you have you

00:40:17,340 --> 00:40:21,690
know you have to make sure the data is

00:40:18,630 --> 00:40:26,820
normalized you know standard deviation

00:40:21,690 --> 00:40:29,250
all that stuff then you can do sort of

00:40:26,820 --> 00:40:30,660
pca style principal component alice's

00:40:29,250 --> 00:40:33,270
thing where you can reduce the amount of

00:40:30,660 --> 00:40:35,880
features that work sometimes so those

00:40:33,270 --> 00:40:39,920
are the usual things I tried to do what

00:40:35,880 --> 00:40:39,920
was the data set yes sir

00:40:42,660 --> 00:40:48,170
I like your questions we can be done

00:40:45,060 --> 00:40:48,170
later I just don't want to go

00:40:51,940 --> 00:40:57,680
let's take a question so I don't see the

00:40:55,730 --> 00:41:01,160
way I usually accept all the problems

00:40:57,680 --> 00:41:03,470
that I'm solving non of them require we

00:41:01,160 --> 00:41:06,680
have to learn real-time like if you

00:41:03,470 --> 00:41:09,790
think about it really a lot of like

00:41:06,680 --> 00:41:12,800
unless you Netflix or Facebook scale

00:41:09,790 --> 00:41:16,160
you'll be fine if you learn like for

00:41:12,800 --> 00:41:19,070
example our models learn every five days

00:41:16,160 --> 00:41:21,860
right so after five days you run the

00:41:19,070 --> 00:41:24,470
model you you know your evaluate and see

00:41:21,860 --> 00:41:27,740
hey you know my model is better than the

00:41:24,470 --> 00:41:30,860
previous time and I use it so but but I

00:41:27,740 --> 00:41:34,430
you can use I haven't implemented

00:41:30,860 --> 00:41:37,010
anything real-time recently but I I like

00:41:34,430 --> 00:41:40,570
I hope people use cough cough and listen

00:41:37,010 --> 00:41:40,570
for events dreams and their train models

00:41:44,260 --> 00:41:47,260
yeah

00:41:51,010 --> 00:41:56,320
I think so I actually happen Oh Karis

00:41:54,130 --> 00:41:59,050
yes it does yes but I haven't I haven't

00:41:56,320 --> 00:42:00,640
look I didn't have anything that it's

00:41:59,050 --> 00:42:12,609
just like Oh none of my models have to

00:42:00,640 --> 00:42:15,760
be real okay so yeah

00:42:12,609 --> 00:42:19,300
so if you're if you're if you're loss

00:42:15,760 --> 00:42:21,850
function is going down down down down

00:42:19,300 --> 00:42:34,390
down and then up up

00:42:21,850 --> 00:42:37,210
you probably okay so we have we just

00:42:34,390 --> 00:42:39,940
started doing that we have I work in the

00:42:37,210 --> 00:42:41,500
security group and there's stuff and

00:42:39,940 --> 00:42:43,600
security called anomaly detection

00:42:41,500 --> 00:42:44,680
clustering a bunch of different things

00:42:43,600 --> 00:43:30,760
that we just tired

00:42:44,680 --> 00:43:34,630
slowly I can't speak we're starting to I

00:43:30,760 --> 00:43:36,609
honestly so let's take it offline I'm

00:43:34,630 --> 00:43:37,840
happy to into the question I'm trying to

00:43:36,609 --> 00:43:46,740
answer simple questions just so I don't

00:43:37,840 --> 00:43:46,740
start whoever the first person yeah

00:43:49,140 --> 00:43:58,170
I I started those I haven't finished any

00:43:55,410 --> 00:43:59,970
of those I usually start doing them and

00:43:58,170 --> 00:44:03,870
I don't finish them mostly because a lot

00:43:59,970 --> 00:44:07,410
of you know time is of the essence and I

00:44:03,870 --> 00:44:09,750
if I do do them up I'll try to do a team

00:44:07,410 --> 00:44:19,320
competition with the specific team

00:44:09,750 --> 00:44:21,530
people I did I haven't read it I heard

00:44:19,320 --> 00:44:21,530
good things

00:44:29,480 --> 00:44:35,550
yeah honestly I think that's a really

00:44:33,090 --> 00:44:38,130
good book what I would recommend if

00:44:35,550 --> 00:44:41,880
you're just starting out this first dude

00:44:38,130 --> 00:44:44,880
is this this part it's boring at certain

00:44:41,880 --> 00:44:53,850
times but it's needed and then I would

00:44:44,880 --> 00:45:01,130
do all right but there's a Stanford

00:44:53,850 --> 00:45:05,390
course from Andrew that's a while ago

00:45:01,130 --> 00:45:10,950
that uh I think it's this one no this is

00:45:05,390 --> 00:45:15,210
this one it's an old one it's a tad bit

00:45:10,950 --> 00:45:17,910
outdated but it's pretty great

00:45:15,210 --> 00:45:20,100
it does take a toll and it does take a

00:45:17,910 --> 00:45:29,970
long time but highly recommended if you

00:45:20,100 --> 00:45:33,690
want again just and then correct

00:45:29,970 --> 00:45:34,740
that's a they have one on that I don't

00:45:33,690 --> 00:45:35,940
know if maybe I don't know about them

00:45:34,740 --> 00:45:38,070
but they cause deep learning

00:45:35,940 --> 00:45:40,010
specialization yeah so that one doesn't

00:45:38,070 --> 00:45:43,740
cover all the things that this one does

00:45:40,010 --> 00:45:45,510
it's I I kind of like I think that you

00:45:43,740 --> 00:45:49,230
should do that one after this one even

00:45:45,510 --> 00:45:50,820
though this is MATLAB and it it's

00:45:49,230 --> 00:45:54,000
actually I like my lab because it does

00:45:50,820 --> 00:45:55,950
matrix multiplication as well but you

00:45:54,000 --> 00:45:58,140
can you can go the other one to you it's

00:45:55,950 --> 00:46:00,440
just the first one I think covers a

00:45:58,140 --> 00:46:02,220
decent amount of what I talked about

00:46:00,440 --> 00:46:03,000
because the second one is just deep

00:46:02,220 --> 00:46:10,740
learning

00:46:03,000 --> 00:46:15,900
all right good everyone how do we that's

00:46:10,740 --> 00:46:17,220
you can Twitter me so I am on Twitter I

00:46:15,900 --> 00:46:20,220
unfortunately have any other social

00:46:17,220 --> 00:46:23,910
media but you can Twitter me on this

00:46:20,220 --> 00:46:30,060
handle right here I'm gonna zoom in so

00:46:23,910 --> 00:46:33,000
this one and you can also email me but I

00:46:30,060 --> 00:46:41,760
am really bad at answering emails so

00:46:33,000 --> 00:46:45,810
just do Twitter it's fine no obviously I

00:46:41,760 --> 00:46:47,850
also I am really bad at like I'm not I

00:46:45,810 --> 00:46:51,000
usually answer but it takes me a long

00:46:47,850 --> 00:46:52,500
time so please ask all the questions but

00:46:51,000 --> 00:46:56,550
it might take me a week to get to them

00:46:52,500 --> 00:46:58,610
so you can catch me here if you want

00:46:56,550 --> 00:47:00,450
I'll be around

00:46:58,610 --> 00:47:01,380
alright cool thank you everyone

00:47:00,450 --> 00:47:08,369
appreciate it

00:47:01,380 --> 00:47:08,369

YouTube URL: https://www.youtube.com/watch?v=wcmdkzDrJME


