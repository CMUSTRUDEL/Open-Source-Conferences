Title: [OLF 2019] Advanced Site Reliability Engineering (SRE): Networking
Publication date: 2020-01-06
Playlist: 2019 Videos
Description: 
	Speaker: Patrick Shuff
Videographer: Ernest Parke

Site Reliability Engineering is the evolution of a role for scaling websites/infrastructure that involves the intersection of various computer science disciplines: software engineering, operating systems, distributed systems, and networking. Deploying a website in 2019 is easier than every but scaling it to a nationwide/worldwide audience is difficult and debugging problems require some level of networking knowledge. This talk goes over basic networking knowledge relevant to the SRE role operating websites and gives you tools to walk away for further debugging.

Topics to be covered include:

    Overview of Linux Networking (sockets, routing table, etc)
    Overview of LAN concepts (Ethernet, ARP, link-local)
    Overview of DNS (DNS Records, Recursive resolution, etc)
    Overview of TCP/IP (IP, TCP, 3-way handshake, flags, etc)
    Overview of Internet Security (TLS, Certs, etc)
    Overview of Linux Debugging tools
Captions: 
	00:00:01,560 --> 00:00:05,620
thank you everybody for coming I know

00:00:04,510 --> 00:00:07,779
there are a lot of really interesting

00:00:05,620 --> 00:00:11,129
talks at this time so I definitely

00:00:07,779 --> 00:00:13,539
appreciate you choosing to join this one

00:00:11,129 --> 00:00:17,320
so today I'll be talking about two

00:00:13,539 --> 00:00:19,150
topics that are that are really

00:00:17,320 --> 00:00:21,730
something I've spent a lot of time doing

00:00:19,150 --> 00:00:23,619
and are deeply deeply meaningful to me

00:00:21,730 --> 00:00:27,279
site reliability engineering and

00:00:23,619 --> 00:00:29,829
networking over the last decade or so in

00:00:27,279 --> 00:00:31,749
my professional career I've been working

00:00:29,829 --> 00:00:34,090
as a kind of a site reliability engineer

00:00:31,749 --> 00:00:36,039
and kind of following what this role has

00:00:34,090 --> 00:00:38,199
turned into so spending a lot of time

00:00:36,039 --> 00:00:41,500
coding and spending a lot of time on

00:00:38,199 --> 00:00:43,660
Linux but for the last six years I've

00:00:41,500 --> 00:00:46,440
been working at the intersection of

00:00:43,660 --> 00:00:48,640
those two principles coding and systems

00:00:46,440 --> 00:00:50,379
operating systems and working on

00:00:48,640 --> 00:00:54,429
networking teams so this means load

00:00:50,379 --> 00:00:57,699
balancing content delivery etc so with

00:00:54,429 --> 00:01:00,309
that you know today my three kind of

00:00:57,699 --> 00:01:01,960
goals for this talk are to one to share

00:01:00,309 --> 00:01:04,660
some of my experiences as a site

00:01:01,960 --> 00:01:06,820
reliability engineer to to give you guys

00:01:04,660 --> 00:01:08,500
some ammunition into some fundamental

00:01:06,820 --> 00:01:09,850
knowledge about networking that you can

00:01:08,500 --> 00:01:12,010
apply to your infrastructure and

00:01:09,850 --> 00:01:14,680
hopefully you know help things you know

00:01:12,010 --> 00:01:17,080
improve reliability from a networking

00:01:14,680 --> 00:01:19,240
perspective and three it so hopefully

00:01:17,080 --> 00:01:20,650
you know get you excited about the site

00:01:19,240 --> 00:01:22,720
reliability engineering role and

00:01:20,650 --> 00:01:24,640
networking you know as an operating so

00:01:22,720 --> 00:01:25,930
there's a sysadmin you know you kind of

00:01:24,640 --> 00:01:28,720
think of networking as this other thing

00:01:25,930 --> 00:01:31,090
but you know in 2019 so much of the

00:01:28,720 --> 00:01:32,230
things that we do rely on networks that

00:01:31,090 --> 00:01:35,440
it's really important for us to have

00:01:32,230 --> 00:01:36,820
fundamental knowledge on this space so

00:01:35,440 --> 00:01:39,610
just to give you a quick introduction

00:01:36,820 --> 00:01:42,040
about myself I start at Ohio State in

00:01:39,610 --> 00:01:43,720
2006 as an undergraduate in computer

00:01:42,040 --> 00:01:45,820
science and engineering wasn't a very

00:01:43,720 --> 00:01:47,050
good student had a very average GPA I

00:01:45,820 --> 00:01:49,240
probably wouldn't get into the

00:01:47,050 --> 00:01:51,640
engineering program today with that GPA

00:01:49,240 --> 00:01:53,350
but you know I spend a lot of time and

00:01:51,640 --> 00:01:54,700
you know the class is doing the work but

00:01:53,350 --> 00:01:56,920
it wasn't really until I found Python

00:01:54,700 --> 00:01:58,660
that I got really excited about computer

00:01:56,920 --> 00:02:01,870
science and building things and kind of

00:01:58,660 --> 00:02:04,120
my whole world expanded so in 2010 I

00:02:01,870 --> 00:02:06,160
graduated and I joined the nationwide as

00:02:04,120 --> 00:02:07,810
a Linux system administrator so we

00:02:06,160 --> 00:02:10,119
managed a few thousand Linux servers at

00:02:07,810 --> 00:02:12,189
the time I was doing a lot of sysadmin

00:02:10,119 --> 00:02:13,430
work which is great I loved it and I was

00:02:12,189 --> 00:02:15,019
writing a lot of Python

00:02:13,430 --> 00:02:17,769
a lot of the tools that we were doing so

00:02:15,019 --> 00:02:19,459
things were going really well until

00:02:17,769 --> 00:02:21,349
September 2012

00:02:19,459 --> 00:02:23,329
I got hit up by a recruiter on LinkedIn

00:02:21,349 --> 00:02:24,799
from Facebook they asked me if I wanted

00:02:23,329 --> 00:02:26,680
to interview I didn't think I had a

00:02:24,799 --> 00:02:29,719
chance in hell of getting the job and

00:02:26,680 --> 00:02:32,000
seven interviews and two flights out to

00:02:29,719 --> 00:02:34,219
Menlo Park in California I ended up

00:02:32,000 --> 00:02:35,930
accepting that role where I spent the

00:02:34,219 --> 00:02:38,840
next few years at Facebook as a

00:02:35,930 --> 00:02:40,010
production engineer so I'll go through a

00:02:38,840 --> 00:02:43,040
couple of different teams I was all in

00:02:40,010 --> 00:02:44,569
just a moment but earlier this year I

00:02:43,040 --> 00:02:46,639
wanted to make my way back to Ohio and

00:02:44,569 --> 00:02:48,950
staying with Facebook in the role that I

00:02:46,639 --> 00:02:51,500
was in was not a possibility here in in

00:02:48,950 --> 00:02:53,180
Ohio so I joined Netflix and I was

00:02:51,500 --> 00:02:55,760
working as a site reliability engineer

00:02:53,180 --> 00:02:57,859
on the CDN team so making sure videos

00:02:55,760 --> 00:02:59,120
those movies when you press play get

00:02:57,859 --> 00:03:02,389
delivered to your phone or TV really

00:02:59,120 --> 00:03:03,769
quickly up until last month I decided to

00:03:02,389 --> 00:03:05,930
make a move again

00:03:03,769 --> 00:03:08,510
and I joined a start-up here in Columbus

00:03:05,930 --> 00:03:10,969
called effuse and I'll talk about those

00:03:08,510 --> 00:03:12,590
in just a moment so just to kind of give

00:03:10,969 --> 00:03:14,120
you a really quick overview of my time

00:03:12,590 --> 00:03:15,919
at Facebook I started on the site

00:03:14,120 --> 00:03:17,449
reliability operations team so this team

00:03:15,919 --> 00:03:19,699
really didn't own anything except the

00:03:17,449 --> 00:03:21,199
general reliability of Facebook so I got

00:03:19,699 --> 00:03:23,629
to take that coding and the operating

00:03:21,199 --> 00:03:25,459
systems experience I had and work on a

00:03:23,629 --> 00:03:28,159
really big infrastructure with hundreds

00:03:25,459 --> 00:03:29,900
of thousands of servers and so that gave

00:03:28,159 --> 00:03:31,819
me a really good kind of cross-section

00:03:29,900 --> 00:03:33,260
of or the addition of working with

00:03:31,819 --> 00:03:34,699
distributed systems and in that even

00:03:33,260 --> 00:03:36,829
that time really massively distributed

00:03:34,699 --> 00:03:38,720
systems no you're gonna happen to that

00:03:36,829 --> 00:03:40,669
role we did what I think every engineer

00:03:38,720 --> 00:03:42,259
or everything I try to do on a team is

00:03:40,669 --> 00:03:43,519
automate our sell myself out of my job

00:03:42,259 --> 00:03:45,470
and that's what our team events

00:03:43,519 --> 00:03:47,000
essentially did is we automated a lot of

00:03:45,470 --> 00:03:49,430
the manual things that we were doing and

00:03:47,000 --> 00:03:50,780
I got the the decision or the choice to

00:03:49,430 --> 00:03:52,489
join a different team so I chose the

00:03:50,780 --> 00:03:54,739
traffic team and the traffic team's job

00:03:52,489 --> 00:03:56,180
at Facebook is to make sure no matter

00:03:54,739 --> 00:03:58,009
where you are in the world when you open

00:03:56,180 --> 00:03:59,840
up your phone and you're on Instagram or

00:03:58,009 --> 00:04:01,430
Facebook or whatsapp we know where you

00:03:59,840 --> 00:04:03,079
are in the world relative to all the

00:04:01,430 --> 00:04:04,729
servers that we have in the world and I

00:04:03,079 --> 00:04:06,349
don't mean this by GPS location we

00:04:04,729 --> 00:04:07,729
didn't care where you were physically we

00:04:06,349 --> 00:04:09,530
cared where you were on the Internet

00:04:07,729 --> 00:04:12,859
we wanted we need we built maps of the

00:04:09,530 --> 00:04:14,470
entire internet every two minutes of so

00:04:12,859 --> 00:04:16,729
we knew exactly where you are relative

00:04:14,470 --> 00:04:18,650
latency to everywhere else in the world

00:04:16,729 --> 00:04:20,239
so I spent about four years on that team

00:04:18,650 --> 00:04:21,859
and I focused a lot on the CDN the

00:04:20,239 --> 00:04:24,529
content delivery photos and video

00:04:21,859 --> 00:04:25,630
delivery and then last the last year at

00:04:24,529 --> 00:04:27,690
Facebook

00:04:25,630 --> 00:04:29,860
the network systems team which

00:04:27,690 --> 00:04:30,940
Facebook's infrastructure is really big

00:04:29,860 --> 00:04:32,920
they actually have over a million

00:04:30,940 --> 00:04:35,530
servers and the network is really big so

00:04:32,920 --> 00:04:37,750
they do a lot of Sdn so the nest network

00:04:35,530 --> 00:04:39,700
systems team spent time building the

00:04:37,750 --> 00:04:42,400
control plane to handle the data plane

00:04:39,700 --> 00:04:44,140
of the network so in February I joined

00:04:42,400 --> 00:04:45,970
Netflix again as a site reliability

00:04:44,140 --> 00:04:48,070
engineer on the CDN team so when you

00:04:45,970 --> 00:04:50,110
press play our job was to map you to

00:04:48,070 --> 00:04:51,640
wherever you were relative to the movie

00:04:50,110 --> 00:04:54,220
that you wanted to watch to the server

00:04:51,640 --> 00:04:55,870
so they'd be right here in Columbus

00:04:54,220 --> 00:05:00,040
so in this called the open connects

00:04:55,870 --> 00:05:03,580
appliance so cool so last month I

00:05:00,040 --> 00:05:05,860
decided to leave Netflix for a company

00:05:03,580 --> 00:05:08,830
called effuse so the premise of VP use

00:05:05,860 --> 00:05:10,750
is built around eSports and there are

00:05:08,830 --> 00:05:12,310
over 160 colleges and universities in

00:05:10,750 --> 00:05:15,970
the u.s. that are have farts the eSports

00:05:12,310 --> 00:05:17,340
teams or varsity sports programs and the

00:05:15,970 --> 00:05:19,510
kind of problem we're trying to solve is

00:05:17,340 --> 00:05:21,910
helping people have their professional

00:05:19,510 --> 00:05:23,320
digital gaming resume online and helping

00:05:21,910 --> 00:05:25,900
them get opportunities like scholarships

00:05:23,320 --> 00:05:29,650
jobs internships in the eSports industry

00:05:25,900 --> 00:05:31,330
even Ohio State has an eSports arena and

00:05:29,650 --> 00:05:33,520
they're giving full ride scholarships on

00:05:31,330 --> 00:05:36,310
for eSports for people to come play so

00:05:33,520 --> 00:05:38,200
that's uh so I joined them and there we

00:05:36,310 --> 00:05:39,880
have uh you can see the website down

00:05:38,200 --> 00:05:41,470
there so I'm pretty excited about that

00:05:39,880 --> 00:05:44,350
and it's a really really great team so

00:05:41,470 --> 00:05:46,000
far so one of the questions I get asked

00:05:44,350 --> 00:05:47,650
a lot is why did you move back to Ohio I

00:05:46,000 --> 00:05:48,460
always knew I was gonna move back at

00:05:47,650 --> 00:05:49,900
some point

00:05:48,460 --> 00:05:51,910
I didn't plan to stay out on the west

00:05:49,900 --> 00:05:54,400
coast in California for almost seven

00:05:51,910 --> 00:05:56,200
years that I did but I will say that

00:05:54,400 --> 00:05:59,020
things have changed a lot between 2012

00:05:56,200 --> 00:06:01,210
and 27 2019 when I moved back just a few

00:05:59,020 --> 00:06:03,130
months ago in June and it's really

00:06:01,210 --> 00:06:05,020
really exciting like I loved hearing all

00:06:03,130 --> 00:06:06,850
the stories of the startups who you know

00:06:05,020 --> 00:06:09,280
were really successful you know there's

00:06:06,850 --> 00:06:11,470
tons and tons of different examples that

00:06:09,280 --> 00:06:13,030
I could give but I will say that being

00:06:11,470 --> 00:06:14,680
out there it was just really amazing to

00:06:13,030 --> 00:06:16,120
see how much things have blossomed here

00:06:14,680 --> 00:06:17,770
in Columbus and just the Midwest in

00:06:16,120 --> 00:06:19,870
general I was really excited to come

00:06:17,770 --> 00:06:21,190
back and be a part of that and that's

00:06:19,870 --> 00:06:23,080
another reason why I decided to make the

00:06:21,190 --> 00:06:24,790
move I wanted to spend more of my brain

00:06:23,080 --> 00:06:26,920
cycles and energy and make an impact

00:06:24,790 --> 00:06:29,950
here in Columbus versus working in a

00:06:26,920 --> 00:06:31,990
company Elle West so what is site

00:06:29,950 --> 00:06:33,940
reliability engineering if you go and

00:06:31,990 --> 00:06:35,560
ask 12 different people what they think

00:06:33,940 --> 00:06:37,030
site reliability engineering is I

00:06:35,560 --> 00:06:38,050
imagine you're going to get probably

00:06:37,030 --> 00:06:40,810
twelve different answers

00:06:38,050 --> 00:06:42,160
but I'm gonna share with you you know my

00:06:40,810 --> 00:06:44,440
experience as a site reliability

00:06:42,160 --> 00:06:46,300
engineer and kind of my thoughts on you

00:06:44,440 --> 00:06:48,699
know what the makeup in the composition

00:06:46,300 --> 00:06:50,349
is of this role so the first and

00:06:48,699 --> 00:06:52,479
foremost the site reliability engineers

00:06:50,349 --> 00:06:53,680
a hybrid software / systems engineer you

00:06:52,479 --> 00:06:56,229
need to be able to code you need to be

00:06:53,680 --> 00:06:58,389
able to write great code well tested you

00:06:56,229 --> 00:06:59,349
know well structured code and you also

00:06:58,389 --> 00:07:00,940
need to have a pretty solid

00:06:59,349 --> 00:07:02,110
understanding of operating system so

00:07:00,940 --> 00:07:03,819
understanding as we write those

00:07:02,110 --> 00:07:05,289
applications how are they interfacing

00:07:03,819 --> 00:07:06,849
with the operating system how are you

00:07:05,289 --> 00:07:08,440
know they're using memory you know

00:07:06,849 --> 00:07:09,580
system calls you know all these

00:07:08,440 --> 00:07:11,050
different things like you need to have

00:07:09,580 --> 00:07:13,110
just a really understood understanding

00:07:11,050 --> 00:07:15,759
of application in software development

00:07:13,110 --> 00:07:17,229
so this is the second big piece as a

00:07:15,759 --> 00:07:19,240
site reliability engineers generally

00:07:17,229 --> 00:07:20,740
they have an emphasis on kind of the

00:07:19,240 --> 00:07:22,599
fundamental building blocks of

00:07:20,740 --> 00:07:24,310
infrastructure and distributed systems I

00:07:22,599 --> 00:07:26,229
think a really tangible way to think

00:07:24,310 --> 00:07:27,759
about this is they Jenner if you go to

00:07:26,229 --> 00:07:29,470
look at AWS and look at all those

00:07:27,759 --> 00:07:31,180
services that are available a second

00:07:29,470 --> 00:07:34,030
reliability engineers to generally have

00:07:31,180 --> 00:07:35,560
a good idea of given a concept how would

00:07:34,030 --> 00:07:37,750
you use those different components

00:07:35,560 --> 00:07:40,090
whether you're using AWS or building

00:07:37,750 --> 00:07:42,280
those things in you know in-house to

00:07:40,090 --> 00:07:43,870
accomplish it so really focusing on the

00:07:42,280 --> 00:07:46,659
fundamental building blocks of building

00:07:43,870 --> 00:07:48,580
out applications next is they have a

00:07:46,659 --> 00:07:50,289
focus on reliability and scalability and

00:07:48,580 --> 00:07:52,900
just really instrumentation of the

00:07:50,289 --> 00:07:55,060
application itself so you know knowing

00:07:52,900 --> 00:07:56,530
when there are issues knowing when there

00:07:55,060 --> 00:07:58,539
are regressions when new code goes out

00:07:56,530 --> 00:07:59,979
like these are all responsibilities of a

00:07:58,539 --> 00:08:02,320
site reliability engineer and ideally

00:07:59,979 --> 00:08:03,880
building tooling and scaffolding around

00:08:02,320 --> 00:08:05,320
this so you can turn these things

00:08:03,880 --> 00:08:07,840
automatically instead of just

00:08:05,320 --> 00:08:09,969
accidentally going and finding them and

00:08:07,840 --> 00:08:11,560
then lastly in this role the site

00:08:09,969 --> 00:08:13,419
reliability engineer generally goes and

00:08:11,560 --> 00:08:16,060
partners with software engineering teams

00:08:13,419 --> 00:08:18,250
to help develop highly reliable software

00:08:16,060 --> 00:08:21,340
you know many of us are you know work on

00:08:18,250 --> 00:08:23,770
websites that we have applications sres

00:08:21,340 --> 00:08:25,270
come in to help you build things the

00:08:23,770 --> 00:08:27,130
right way and make sure we're doing them

00:08:25,270 --> 00:08:28,690
in a scalable way so that we can think

00:08:27,130 --> 00:08:31,659
about we don't think about scaling

00:08:28,690 --> 00:08:33,130
issues you know a couple years off so

00:08:31,659 --> 00:08:35,020
when I think about the skill sets that I

00:08:33,130 --> 00:08:36,459
look for in a site reliability engineer

00:08:35,020 --> 00:08:38,680
it kind of comes it comes down to four

00:08:36,459 --> 00:08:40,149
things so the first is operating systems

00:08:38,680 --> 00:08:41,500
again you need to have a solid

00:08:40,149 --> 00:08:43,750
fundamental understanding of operating

00:08:41,500 --> 00:08:46,329
systems whether it's Linux Windows you

00:08:43,750 --> 00:08:47,829
know whatever secondly its coding again

00:08:46,329 --> 00:08:49,630
you have to be able to code you have to

00:08:47,829 --> 00:08:51,010
be able to build things contribute and

00:08:49,630 --> 00:08:51,640
you know build a lot of the automations

00:08:51,010 --> 00:08:53,590
around the things

00:08:51,640 --> 00:08:56,110
you're doing the third is distributed

00:08:53,590 --> 00:08:57,610
systems almost every you know many of

00:08:56,110 --> 00:08:59,500
the applications that you guys all run

00:08:57,610 --> 00:09:01,030
our distributed systems by nature

00:08:59,500 --> 00:09:03,400
there's there talking to other services

00:09:01,030 --> 00:09:05,020
micro services etc and understanding the

00:09:03,400 --> 00:09:06,700
building blocks of building distributed

00:09:05,020 --> 00:09:09,190
systems and then the fourth is

00:09:06,700 --> 00:09:11,620
networking and this is what I'm here to

00:09:09,190 --> 00:09:14,590
talk about today is everything that you

00:09:11,620 --> 00:09:15,910
guys run probably and you can correct me

00:09:14,590 --> 00:09:18,490
if I'm wrong probably depends on the

00:09:15,910 --> 00:09:20,020
network at some point so just having a

00:09:18,490 --> 00:09:21,340
really a good understanding even

00:09:20,020 --> 00:09:23,710
fundamental understanding of the network

00:09:21,340 --> 00:09:25,450
really helps you know you understand the

00:09:23,710 --> 00:09:28,240
systems as a whole and help you debug

00:09:25,450 --> 00:09:29,410
issues a lot easier so when it comes to

00:09:28,240 --> 00:09:30,370
actually like you know what people bring

00:09:29,410 --> 00:09:32,410
to the table has essary

00:09:30,370 --> 00:09:33,700
it really depends you know everybody

00:09:32,410 --> 00:09:34,870
brings different skill sets you don't

00:09:33,700 --> 00:09:36,700
want everybody to be an expert in

00:09:34,870 --> 00:09:38,680
operating systems or networking every

00:09:36,700 --> 00:09:40,060
you know just like any team everybody

00:09:38,680 --> 00:09:43,030
brings different things to the table so

00:09:40,060 --> 00:09:44,440
it really depends on you know you know

00:09:43,030 --> 00:09:45,970
everybody brings something a little bit

00:09:44,440 --> 00:09:47,340
different so you know this kind of pie

00:09:45,970 --> 00:09:52,300
can be broken up in many different ways

00:09:47,340 --> 00:09:54,430
so what is it sree sree isn't DevOps is3

00:09:52,300 --> 00:09:55,720
is an evolution of DevOps so we are a

00:09:54,430 --> 00:09:58,330
team that partners with software

00:09:55,720 --> 00:09:59,920
engineers we're not the on-call team the

00:09:58,330 --> 00:10:01,420
operations team we don't handle it

00:09:59,920 --> 00:10:03,430
managed like it doesn't get thrown over

00:10:01,420 --> 00:10:04,870
the wall to us you know we work with the

00:10:03,430 --> 00:10:06,790
software engineering teams so it is

00:10:04,870 --> 00:10:10,770
DevOps in that way is they also run call

00:10:06,790 --> 00:10:13,930
and fix code when it's broken so yeah

00:10:10,770 --> 00:10:16,390
and I get asked this a lot like are

00:10:13,930 --> 00:10:17,950
s-series unicorns and the answer is no

00:10:16,390 --> 00:10:19,120
like s are eggs aren't unicorns they

00:10:17,950 --> 00:10:21,910
aren't good at everything they do

00:10:19,120 --> 00:10:23,920
I think s3 is just a different role that

00:10:21,910 --> 00:10:25,630
we we're seeing a lot more of and we

00:10:23,920 --> 00:10:26,620
haven't seen them in the past so some of

00:10:25,630 --> 00:10:28,810
the things that they can bring to the

00:10:26,620 --> 00:10:31,750
table and do kind of looks like magic as

00:10:28,810 --> 00:10:33,790
some in some cases but if you do find a

00:10:31,750 --> 00:10:36,070
unicorn I encourage you to either hire

00:10:33,790 --> 00:10:37,840
him or her as soon as possible or shoot

00:10:36,070 --> 00:10:40,750
me an email and then I'll hire them to

00:10:37,840 --> 00:10:42,700
my team so just a really quick mention

00:10:40,750 --> 00:10:44,350
Production Engineering this is

00:10:42,700 --> 00:10:47,110
Facebook's equivalent of the site

00:10:44,350 --> 00:10:48,670
reliability engineering role before I

00:10:47,110 --> 00:10:51,550
joined Facebook I didn't know this this

00:10:48,670 --> 00:10:53,170
role existed and but going into the

00:10:51,550 --> 00:10:56,170
company is really being focused on

00:10:53,170 --> 00:10:59,310
coding and operating systems I didn't

00:10:56,170 --> 00:11:01,570
realize it really helped me kind of just

00:10:59,310 --> 00:11:03,340
accelerate in my career really rapidly

00:11:01,570 --> 00:11:04,660
and it was really one of the things

00:11:03,340 --> 00:11:05,050
really gratifying to me is when I would

00:11:04,660 --> 00:11:06,459
do it

00:11:05,050 --> 00:11:08,200
you I would tell people what I do and

00:11:06,459 --> 00:11:09,640
what my role is and they would say I

00:11:08,200 --> 00:11:11,140
didn't even know that existent like that

00:11:09,640 --> 00:11:12,850
sounds exactly like what I want to do

00:11:11,140 --> 00:11:14,200
and that's really how I felt this role

00:11:12,850 --> 00:11:16,029
is in the site reliability engineering

00:11:14,200 --> 00:11:17,050
role it's made for me like this is what

00:11:16,029 --> 00:11:18,700
I like doing I don't want to make a

00:11:17,050 --> 00:11:20,230
website pretty I want to make sure it's

00:11:18,700 --> 00:11:21,820
website scales to tens of millions of

00:11:20,230 --> 00:11:23,950
people so cool

00:11:21,820 --> 00:11:26,459
so what is networking how many of you

00:11:23,950 --> 00:11:30,190
have applications that run in the cloud

00:11:26,459 --> 00:11:31,930
okay a lot of you cool awesome how many

00:11:30,190 --> 00:11:34,870
of you have users that interact with

00:11:31,930 --> 00:11:38,740
those applications cool almost everybody

00:11:34,870 --> 00:11:39,730
so today I'm not going to talk about the

00:11:38,740 --> 00:11:41,410
things that are in the cloud the

00:11:39,730 --> 00:11:42,820
networking constructs there that's for

00:11:41,410 --> 00:11:44,050
many you can make many different talks

00:11:42,820 --> 00:11:46,540
about that and there's probably has been

00:11:44,050 --> 00:11:48,089
some even here today but this talk is

00:11:46,540 --> 00:11:52,120
gonna be about all the things between

00:11:48,089 --> 00:11:55,660
that user and the cloud when you just go

00:11:52,120 --> 00:11:57,070
to you know Google comm you are

00:11:55,660 --> 00:11:58,839
interacting with almost every single

00:11:57,070 --> 00:12:02,019
protocol and distributed system up there

00:11:58,839 --> 00:12:05,800
right now you're hitting routers you're

00:12:02,019 --> 00:12:08,440
you know using ipv4 hopefully v6

00:12:05,800 --> 00:12:09,610
probably v6 but it's just amazing that

00:12:08,440 --> 00:12:11,290
the internet actually worked there's so

00:12:09,610 --> 00:12:13,660
many distributed systems that are

00:12:11,290 --> 00:12:15,790
involved it's actually fascinating so

00:12:13,660 --> 00:12:17,079
cool and obviously this is important

00:12:15,790 --> 00:12:19,060
from a site liability engineer because

00:12:17,079 --> 00:12:20,980
you want to make sure your users can hit

00:12:19,060 --> 00:12:22,810
your site reliably where you want to

00:12:20,980 --> 00:12:23,589
have all those nines and you want to be

00:12:22,810 --> 00:12:25,660
able to be able to put that on a

00:12:23,589 --> 00:12:28,209
presentation that your site is reliable

00:12:25,660 --> 00:12:30,430
so we're gonna quickly go through a

00:12:28,209 --> 00:12:32,410
bunch of different topics today and

00:12:30,430 --> 00:12:34,329
we'll just kind of dive right in so this

00:12:32,410 --> 00:12:36,610
most of this talk is going to be around

00:12:34,329 --> 00:12:38,260
this command and everything that happens

00:12:36,610 --> 00:12:40,750
all we're gonna do is curl

00:12:38,260 --> 00:12:41,829
Patrick chef comm that's it we're gonna

00:12:40,750 --> 00:12:45,910
talk about all the pieces that are

00:12:41,829 --> 00:12:48,029
involved there awesome so the first

00:12:45,910 --> 00:12:51,430
thing that we need to do is we need to

00:12:48,029 --> 00:12:53,050
whoops went back so we need to figure

00:12:51,430 --> 00:12:54,459
out how do we resolve Patrick chef calm

00:12:53,050 --> 00:12:56,560
like that's just the name it means

00:12:54,459 --> 00:12:58,300
nothing to the computers we need to turn

00:12:56,560 --> 00:13:00,730
that into an IP address so that's a dns

00:12:58,300 --> 00:13:04,269
resolution and since it's 2019 we're

00:13:00,730 --> 00:13:05,800
always using ipv6 step 2 is we need to

00:13:04,269 --> 00:13:07,329
establish the TCP connection so we

00:13:05,800 --> 00:13:09,190
actually need to connect with that

00:13:07,329 --> 00:13:10,600
server we need to establish a connection

00:13:09,190 --> 00:13:13,930
with them we'll talk about that in

00:13:10,600 --> 00:13:15,610
detail the next it's 2019 every piece of

00:13:13,930 --> 00:13:17,560
every packet that's on the internet

00:13:15,610 --> 00:13:19,590
needs to be encrypted so we're going to

00:13:17,560 --> 00:13:21,910
talk about TLS establishment

00:13:19,590 --> 00:13:24,820
and lastly we're going to talk about

00:13:21,910 --> 00:13:28,150
HTTP really briefly it's 2019 so

00:13:24,820 --> 00:13:29,650
everybody is using HTTP - I'm sure so

00:13:28,150 --> 00:13:30,880
and then last thing we'll talk about

00:13:29,650 --> 00:13:32,920
internet routing how does the internet

00:13:30,880 --> 00:13:33,640
actually work how do the routers talk to

00:13:32,920 --> 00:13:36,100
each other what are the protocols

00:13:33,640 --> 00:13:38,470
involved there we've got a lot of things

00:13:36,100 --> 00:13:40,210
to cover so cool so what is DNS DNS is

00:13:38,470 --> 00:13:42,010
the domain name server actually do want

00:13:40,210 --> 00:13:43,650
to preface real quick I'm not expecting

00:13:42,010 --> 00:13:46,720
all this to stick I will post these

00:13:43,650 --> 00:13:48,130
these these slides later and a lot of

00:13:46,720 --> 00:13:49,960
them have commands so that you can kind

00:13:48,130 --> 00:13:51,490
of go into each layer and kind of run

00:13:49,960 --> 00:13:53,050
things on your servers to kind of see

00:13:51,490 --> 00:13:54,760
what's going on so I'll post these and

00:13:53,050 --> 00:13:57,340
they'll be they'll be hopefully useful

00:13:54,760 --> 00:14:01,060
to go back and reference later so domain

00:13:57,340 --> 00:14:04,690
DNS domain name servers really old the

00:14:01,060 --> 00:14:06,490
way that it translates coms names to IP

00:14:04,690 --> 00:14:08,710
addresses it's been around forever it's

00:14:06,490 --> 00:14:10,960
amazing its loss of the test of time a

00:14:08,710 --> 00:14:14,680
lot of different record types quad-a is

00:14:10,960 --> 00:14:17,680
ipv6 single-a is ipv4 MX records is for

00:14:14,680 --> 00:14:19,030
your mail servers etc so the first thing

00:14:17,680 --> 00:14:20,890
the curl is going to do approximately

00:14:19,030 --> 00:14:23,140
it's going to do a get a tour info so he

00:14:20,890 --> 00:14:25,060
needs to get the address from the name

00:14:23,140 --> 00:14:27,070
that you actually give it so you can use

00:14:25,060 --> 00:14:29,860
host there or I gave a quick Python

00:14:27,070 --> 00:14:32,290
example so what that's going to do I

00:14:29,860 --> 00:14:33,460
think that that function is in Lib C on

00:14:32,290 --> 00:14:35,020
the first thing one of the things it's

00:14:33,460 --> 00:14:36,310
going to do is go in to resolve comp to

00:14:35,020 --> 00:14:38,650
figure out what are your name servers

00:14:36,310 --> 00:14:40,960
who does it need to talk to to go

00:14:38,650 --> 00:14:42,970
resolve this so in this case we have

00:14:40,960 --> 00:14:44,350
localhost as our name server so that

00:14:42,970 --> 00:14:47,290
means we're running some type of local

00:14:44,350 --> 00:14:49,960
recursive DNS resolver find unbound etc

00:14:47,290 --> 00:14:52,780
so it's going to send that request to

00:14:49,960 --> 00:14:55,120
that local name server so your laptop or

00:14:52,780 --> 00:14:57,250
your server is going to actually go out

00:14:55,120 --> 00:14:59,320
and talk to one of the root name server

00:14:57,250 --> 00:15:00,550
the root DNS name servers so these are

00:14:59,320 --> 00:15:02,920
servers that are scattered around the

00:15:00,550 --> 00:15:05,140
internet they use a single IP

00:15:02,920 --> 00:15:07,030
their static so this is a file that's on

00:15:05,140 --> 00:15:08,770
your computer and they're using UDP and

00:15:07,030 --> 00:15:10,300
anycast to hit one of these servers

00:15:08,770 --> 00:15:13,060
around the internet and it's asking the

00:15:10,300 --> 00:15:15,250
question what is the quad a record for

00:15:13,060 --> 00:15:16,900
patrick chef comm it says I don't know

00:15:15,250 --> 00:15:20,380
the answer to that but I can tell you

00:15:16,900 --> 00:15:23,320
who the top-level domain is calm or calm

00:15:20,380 --> 00:15:26,410
dot and it will send me to their servers

00:15:23,320 --> 00:15:28,570
so then you gets a response gTLD servers

00:15:26,410 --> 00:15:29,800
net so the next thing that's going to do

00:15:28,570 --> 00:15:32,209
is going to go out to the com name

00:15:29,800 --> 00:15:34,579
servers that it just the

00:15:32,209 --> 00:15:37,189
they just got it says I don't know who

00:15:34,579 --> 00:15:38,779
Patrick chef calm is but I know the NS

00:15:37,189 --> 00:15:41,209
record or the name servers for Patrick

00:15:38,779 --> 00:15:43,730
chef comm so it then sends that back to

00:15:41,209 --> 00:15:46,579
my computer and finally we send the

00:15:43,730 --> 00:15:49,040
request to Patrick chef comm name

00:15:46,579 --> 00:15:52,429
servers and then we get back a quad a

00:15:49,040 --> 00:15:54,350
record so awesome we've now got back an

00:15:52,429 --> 00:15:55,790
IP address here's some different

00:15:54,350 --> 00:15:58,399
commands and again I'll send this out

00:15:55,790 --> 00:15:59,959
for you to kind of run through these on

00:15:58,399 --> 00:16:03,350
your own you're on your own time and

00:15:59,959 --> 00:16:05,389
some different configs as well so cool

00:16:03,350 --> 00:16:07,160
so now that we've actually have an IP

00:16:05,389 --> 00:16:09,920
address we need to establish a

00:16:07,160 --> 00:16:13,129
connection to it so but before we get

00:16:09,920 --> 00:16:17,149
into what TCP is let's do on a tcp/ip

00:16:13,129 --> 00:16:19,759
review so to kind of go back to school

00:16:17,149 --> 00:16:21,559
we'll go over the OSI model it's kind of

00:16:19,759 --> 00:16:23,509
broken in terms of how things map today

00:16:21,559 --> 00:16:26,149
but it's OK for the purpose of this talk

00:16:23,509 --> 00:16:28,129
so the first layer is the physical layer

00:16:26,149 --> 00:16:29,779
so this is i/o the wireless protocol the

00:16:28,129 --> 00:16:32,720
physical copper the fiber that you're

00:16:29,779 --> 00:16:35,410
using layer one protocol the second

00:16:32,720 --> 00:16:37,160
layer is the the data link layer

00:16:35,410 --> 00:16:39,470
commonly in the Internet it's pretty

00:16:37,160 --> 00:16:40,970
ubiquitous that Ethernet is is the

00:16:39,470 --> 00:16:42,230
protocol we used and this is what we

00:16:40,970 --> 00:16:44,179
mean when we talk about the local area

00:16:42,230 --> 00:16:47,839
network the land the switches are

00:16:44,179 --> 00:16:51,889
switching frames on the ethernet layer

00:16:47,839 --> 00:16:56,179
on layer 2 the third layer layer 3 is

00:16:51,889 --> 00:16:58,069
the IP layer so this is ipv6 ipv4 ICMP

00:16:56,179 --> 00:16:59,540
is also layer 3 but this is what we mean

00:16:58,069 --> 00:17:01,939
when we say the way and the wide area

00:16:59,540 --> 00:17:04,750
network this is the packet that actually

00:17:01,939 --> 00:17:08,419
traverses the internet and stays intact

00:17:04,750 --> 00:17:12,110
layer 4 is TCP so this is our control

00:17:08,419 --> 00:17:13,909
the transport protocols or in in cases

00:17:12,110 --> 00:17:16,220
of the internet today generally it's TCP

00:17:13,909 --> 00:17:18,289
or UDP so the transmission control

00:17:16,220 --> 00:17:21,709
protocol or the user Datagram protocol

00:17:18,289 --> 00:17:24,289
will talk about TCP in just a moment so

00:17:21,709 --> 00:17:26,240
layer 5 you can kind of fit TLS and

00:17:24,289 --> 00:17:28,339
sockets in there presentation kind of

00:17:26,240 --> 00:17:31,370
fits a ski but layer 7 is yall's the

00:17:28,339 --> 00:17:34,399
other important one is our application

00:17:31,370 --> 00:17:38,779
layer protocols so FTP HTTP you know DNS

00:17:34,399 --> 00:17:40,520
these live at the layer 7 layer so to

00:17:38,779 --> 00:17:42,049
quickly go through each of these on the

00:17:40,520 --> 00:17:43,610
Ethernet header on this is where you

00:17:42,049 --> 00:17:45,539
have your MAC addresses so these are the

00:17:43,610 --> 00:17:47,700
addresses assigned to your network and

00:17:45,539 --> 00:17:49,109
face your Nick and you can see some

00:17:47,700 --> 00:17:54,389
commands there to kind of check things

00:17:49,109 --> 00:17:55,919
out on layer 2 so the ipv6 header is you

00:17:54,389 --> 00:18:00,059
know very it's pretty straightforward

00:17:55,919 --> 00:18:01,440
but you have a bunch of different your

00:18:00,059 --> 00:18:04,619
source address your destination address

00:18:01,440 --> 00:18:06,149
and a couple different fields to to to

00:18:04,619 --> 00:18:07,769
make your packet just to kind of give it

00:18:06,149 --> 00:18:10,049
some context and for the routers along

00:18:07,769 --> 00:18:13,739
the way to determine where that packet

00:18:10,049 --> 00:18:16,409
goes a couple commands down there so

00:18:13,739 --> 00:18:18,869
layer four is the TCP header so again

00:18:16,409 --> 00:18:21,629
this is the connection between your

00:18:18,869 --> 00:18:22,590
device your client and your server we're

00:18:21,629 --> 00:18:24,210
gonna talk about a couple of these

00:18:22,590 --> 00:18:26,159
different things but the important ones

00:18:24,210 --> 00:18:28,229
are the source port the destination port

00:18:26,159 --> 00:18:31,049
and we'll talk about flags in just a

00:18:28,229 --> 00:18:32,340
little bit as well and then finally

00:18:31,049 --> 00:18:35,549
layer seven so this is where your

00:18:32,340 --> 00:18:37,470
application layer actually lives so once

00:18:35,549 --> 00:18:39,119
the actual get requests that curl

00:18:37,470 --> 00:18:41,249
command this is the actual thing that

00:18:39,119 --> 00:18:43,289
finally wants to get to and ask for a

00:18:41,249 --> 00:18:45,989
resource on my web server and then the

00:18:43,289 --> 00:18:47,999
server will respond so kind of putting

00:18:45,989 --> 00:18:50,849
this all together you have this ipv6

00:18:47,999 --> 00:18:53,429
packet which encapsulates a TCP segment

00:18:50,849 --> 00:18:55,529
which encapsulates your application data

00:18:53,429 --> 00:18:58,739
this is how the internet works these are

00:18:55,529 --> 00:19:01,340
how the protocols are put together any

00:18:58,739 --> 00:19:01,340
questions so far

00:19:02,119 --> 00:19:06,359
cool

00:19:03,389 --> 00:19:08,929
so what is TCP TCP is the transmission

00:19:06,359 --> 00:19:11,879
control protocol it's the common

00:19:08,929 --> 00:19:13,739
stateful protocol that we use on the

00:19:11,879 --> 00:19:15,419
Internet today and it has a couple

00:19:13,739 --> 00:19:17,609
really nice properties to it as the

00:19:15,419 --> 00:19:19,529
writer of the application it guarantees

00:19:17,609 --> 00:19:21,539
in order to in order delivery so

00:19:19,529 --> 00:19:23,549
everything in is sent in order that is

00:19:21,539 --> 00:19:25,289
set the receiver will receive that as

00:19:23,549 --> 00:19:27,479
long as there wasn't the connection

00:19:25,289 --> 00:19:28,559
didn't die so it's a really important

00:19:27,479 --> 00:19:30,629
thing you don't to think about

00:19:28,559 --> 00:19:33,210
reordering segments on or reordering

00:19:30,629 --> 00:19:35,190
data on the application side if a packet

00:19:33,210 --> 00:19:36,989
gets lost on the Internet TCP is

00:19:35,190 --> 00:19:38,549
responsible for retransmitting that data

00:19:36,989 --> 00:19:39,960
so it kind of goes back to the inorder

00:19:38,549 --> 00:19:41,999
delivery and make sure all data is

00:19:39,960 --> 00:19:44,460
actually delivered as well I mean

00:19:41,999 --> 00:19:47,099
there's a bunch of fancy algorithms to

00:19:44,460 --> 00:19:49,139
to handle that and make sure it's

00:19:47,099 --> 00:19:50,479
utilizing the Internet as officially as

00:19:49,139 --> 00:19:52,679
efficiently as possible

00:19:50,479 --> 00:19:54,570
and there's a couple other nice

00:19:52,679 --> 00:19:58,470
properties about TCP that we won't get

00:19:54,570 --> 00:19:59,460
into so one important thing about TCP is

00:19:58,470 --> 00:20:02,250
the

00:19:59,460 --> 00:20:04,200
so there's seven bits I believe correct

00:20:02,250 --> 00:20:07,380
me if I'm wrong of flags that are one

00:20:04,200 --> 00:20:09,630
bit each in the TCP header that I'll

00:20:07,380 --> 00:20:11,310
provide some more context around the

00:20:09,630 --> 00:20:12,870
connection so it allows those things

00:20:11,310 --> 00:20:14,700
like allows this client the server to

00:20:12,870 --> 00:20:16,680
synchronize data so they can establish

00:20:14,700 --> 00:20:18,870
that connection and be on the same you

00:20:16,680 --> 00:20:21,420
know page essentially it also provides

00:20:18,870 --> 00:20:25,230
additional useful context for the

00:20:21,420 --> 00:20:28,680
application sides to you know if one

00:20:25,230 --> 00:20:31,680
side needs to back off TCP can help send

00:20:28,680 --> 00:20:34,020
that to the other side so let's talk

00:20:31,680 --> 00:20:36,150
about the TCP three-way handshake so we

00:20:34,020 --> 00:20:38,130
have a client we just hit run curl we

00:20:36,150 --> 00:20:40,980
know the IP address we just opened a

00:20:38,130 --> 00:20:43,800
socket now we need to actually see what

00:20:40,980 --> 00:20:46,080
happens at the TCP layer so the first

00:20:43,800 --> 00:20:48,450
thing that happens is the sender sends a

00:20:46,080 --> 00:20:50,160
syn packet so this means synchronized

00:20:48,450 --> 00:20:52,470
and basically these are they're

00:20:50,160 --> 00:20:55,440
synchronizing a few variables like the

00:20:52,470 --> 00:20:57,720
the sequence number the MSS which is the

00:20:55,440 --> 00:21:00,990
maximum segment size which is kind of

00:20:57,720 --> 00:21:03,840
related MTU and just to kind of exchange

00:21:00,990 --> 00:21:06,480
a few variables sorry a few yeah

00:21:03,840 --> 00:21:08,730
variables is fine so the server side

00:21:06,480 --> 00:21:10,740
then sends back a sin as well and it

00:21:08,730 --> 00:21:13,230
also sends back an ACK which is an

00:21:10,740 --> 00:21:15,720
acknowledgment of the sin that came in

00:21:13,230 --> 00:21:17,640
so again it's sending its MSS it's

00:21:15,720 --> 00:21:20,700
sending its sequence number and then

00:21:17,640 --> 00:21:22,710
finally the sender sends back the last

00:21:20,700 --> 00:21:25,170
ACK and then it sends the application

00:21:22,710 --> 00:21:27,270
data so this is great you know we

00:21:25,170 --> 00:21:29,370
finally have a connection but what's

00:21:27,270 --> 00:21:30,960
interesting here is say these the client

00:21:29,370 --> 00:21:32,250
in the sender and the clients are the

00:21:30,960 --> 00:21:33,660
sender the client in the server are

00:21:32,250 --> 00:21:36,420
about twenty eight milliseconds away

00:21:33,660 --> 00:21:41,490
which is approximately the distance of

00:21:36,420 --> 00:21:44,490
the US just to make this request takes a

00:21:41,490 --> 00:21:46,890
hundred and four milliseconds so that

00:21:44,490 --> 00:21:48,360
doesn't sound like a long time for you

00:21:46,890 --> 00:21:50,670
know a single work you know a single

00:21:48,360 --> 00:21:52,200
packet but it actually no that's a tenth

00:21:50,670 --> 00:21:54,360
of a second and that's just crossing the

00:21:52,200 --> 00:21:55,920
us this isn't even crossing an ocean so

00:21:54,360 --> 00:21:58,260
this is actually when you think about

00:21:55,920 --> 00:22:00,420
you having a worldwide globally

00:21:58,260 --> 00:22:01,410
distributed infrastructure like these

00:22:00,420 --> 00:22:04,200
are things you really have to think

00:22:01,410 --> 00:22:06,240
about so cool

00:22:04,200 --> 00:22:08,400
here's a few commands to to open up

00:22:06,240 --> 00:22:09,780
sockets you know in Python or a couple

00:22:08,400 --> 00:22:12,480
ways to do it in bash on the command

00:22:09,780 --> 00:22:16,190
line I

00:22:12,480 --> 00:22:19,380
when a few TCP debugging here you TCP is

00:22:16,190 --> 00:22:21,030
it's you know it's a wire protocol so

00:22:19,380 --> 00:22:22,620
there are some really great tools you

00:22:21,030 --> 00:22:24,840
know TCP dump and tea shark to do this

00:22:22,620 --> 00:22:26,460
on the command line as well as Wireshark

00:22:24,840 --> 00:22:29,220
is a really great way to have a really

00:22:26,460 --> 00:22:30,660
beautiful graphic user interface to go

00:22:29,220 --> 00:22:32,850
through and figure out what's happening

00:22:30,660 --> 00:22:33,299
at the TCP level used this many many

00:22:32,850 --> 00:22:37,200
times

00:22:33,299 --> 00:22:39,929
SS is also the new netstat it's way

00:22:37,200 --> 00:22:41,190
better and it's also a really great way

00:22:39,929 --> 00:22:43,230
to see all the connections that are

00:22:41,190 --> 00:22:45,919
happening on your server and if you want

00:22:43,230 --> 00:22:48,570
historical data nest is really good have

00:22:45,919 --> 00:22:50,340
not historical but kind of a snapshot in

00:22:48,570 --> 00:22:54,929
time at the ton of different metrics

00:22:50,340 --> 00:22:56,400
about TCP UDP icmp and sources that is

00:22:54,929 --> 00:22:59,580
also a really great way to collect

00:22:56,400 --> 00:23:02,580
statue regularly about your system so

00:22:59,580 --> 00:23:04,980
it's talking about TCP socket States so

00:23:02,580 --> 00:23:06,720
when you open a new socket on your

00:23:04,980 --> 00:23:08,220
system it goes through a series of

00:23:06,720 --> 00:23:09,630
states and there's actually a state

00:23:08,220 --> 00:23:12,660
diagram I'll show it in just a second

00:23:09,630 --> 00:23:14,640
it's really really busy but you

00:23:12,660 --> 00:23:15,990
basically each sign of this the the

00:23:14,640 --> 00:23:19,740
sender and the receiver go through a

00:23:15,990 --> 00:23:21,900
different set of socket States and while

00:23:19,740 --> 00:23:23,280
this is kind of um you're going in the

00:23:21,900 --> 00:23:24,809
weeds a little bit this is actually

00:23:23,280 --> 00:23:26,700
really interesting for a couple of

00:23:24,809 --> 00:23:29,580
reasons this one is like when you're

00:23:26,700 --> 00:23:30,750
debugging an application issue and

00:23:29,580 --> 00:23:32,250
you're like there's got to be a

00:23:30,750 --> 00:23:34,650
networking problem like my packets are

00:23:32,250 --> 00:23:37,559
getting lost um it's really useful to

00:23:34,650 --> 00:23:40,860
understand the socket States and like if

00:23:37,559 --> 00:23:43,830
say you have a whole bunch of in you in

00:23:40,860 --> 00:23:45,510
this fin wait - and we'll go through

00:23:43,830 --> 00:23:47,309
this in just a second and I'll show you

00:23:45,510 --> 00:23:49,710
this in an all I'll mention a story so

00:23:47,309 --> 00:23:52,530
like here are our socket on the client

00:23:49,710 --> 00:23:54,270
side the spin is sent so that's the

00:23:52,530 --> 00:23:56,490
state that it's in once it's established

00:23:54,270 --> 00:23:58,020
it goes in to establish state and then

00:23:56,490 --> 00:23:59,100
once the client starts closing the

00:23:58,020 --> 00:24:01,770
connection it goes through these

00:23:59,100 --> 00:24:03,660
different states here so one issue I've

00:24:01,770 --> 00:24:04,980
ran into in the past is there's a whole

00:24:03,660 --> 00:24:05,880
bunch of connections the server just

00:24:04,980 --> 00:24:07,440
stopped working

00:24:05,880 --> 00:24:09,630
there's a whole bunch of connections in

00:24:07,440 --> 00:24:11,220
fin wait - because the server was never

00:24:09,630 --> 00:24:14,760
closing the connection it never actually

00:24:11,220 --> 00:24:16,679
did a close on that socket so it's just

00:24:14,760 --> 00:24:18,330
kind of interesting to think about you

00:24:16,679 --> 00:24:21,299
know sock estates and debugging

00:24:18,330 --> 00:24:23,730
different types of of networking issues

00:24:21,299 --> 00:24:25,080
because it can provide a lot of really

00:24:23,730 --> 00:24:26,400
great context around what

00:24:25,080 --> 00:24:30,240
happening at the network level with your

00:24:26,400 --> 00:24:32,730
application and this is the the TCP

00:24:30,240 --> 00:24:35,580
state diagram again it's really busy you

00:24:32,730 --> 00:24:37,620
know it's uh it's you know it's all it's

00:24:35,580 --> 00:24:39,150
just check out that link it's it's

00:24:37,620 --> 00:24:40,860
interesting to kind of see the

00:24:39,150 --> 00:24:42,870
progression and how everything goes but

00:24:40,860 --> 00:24:45,540
um hopefully you don't have to dive into

00:24:42,870 --> 00:24:48,980
that too much and again some more

00:24:45,540 --> 00:24:52,370
commands for debugging TCP sockets that

00:24:48,980 --> 00:24:53,640
I've used pretty regularly in the past

00:24:52,370 --> 00:25:00,350
cool

00:24:53,640 --> 00:25:03,390
any questions awesome so now that we've

00:25:00,350 --> 00:25:05,520
resolved our resolve an IP address when

00:25:03,390 --> 00:25:09,480
we establish TCP we need to establish

00:25:05,520 --> 00:25:12,270
TLS so TLS is the transport layer

00:25:09,480 --> 00:25:15,000
security which is pretty ubiquitous on

00:25:12,270 --> 00:25:18,240
the Internet today so when you type in

00:25:15,000 --> 00:25:20,940
HTTPS it's actually establishing TLS

00:25:18,240 --> 00:25:22,740
under the hood for you so it provides a

00:25:20,940 --> 00:25:26,160
couple of really nice properties that

00:25:22,740 --> 00:25:28,020
are useful when you have when anybody

00:25:26,160 --> 00:25:28,440
can you know pretty much hijack your

00:25:28,020 --> 00:25:30,420
traffic

00:25:28,440 --> 00:25:32,820
the first one is encryption so make sure

00:25:30,420 --> 00:25:36,000
every byte every bit that goes over the

00:25:32,820 --> 00:25:37,710
wire is encrypted so that nobody can you

00:25:36,000 --> 00:25:39,060
know look and see that the that your

00:25:37,710 --> 00:25:41,040
credit card information is going over

00:25:39,060 --> 00:25:43,320
that the second really important was is

00:25:41,040 --> 00:25:45,150
authentication so when you go and hit

00:25:43,320 --> 00:25:46,860
Patrick's chef comm there's a

00:25:45,150 --> 00:25:49,380
certificate there and that's signed by a

00:25:46,860 --> 00:25:51,300
certificate authority that validated

00:25:49,380 --> 00:25:53,550
that I own that site that the server

00:25:51,300 --> 00:25:54,750
that I have is behind that IP address so

00:25:53,550 --> 00:25:57,660
it allows the clients and the server's

00:25:54,750 --> 00:25:59,340
to do authentication and it can even do

00:25:57,660 --> 00:26:01,350
a mutual authentication to in your

00:25:59,340 --> 00:26:02,760
server set up if you want your server to

00:26:01,350 --> 00:26:05,250
authenticate the client you can do that

00:26:02,760 --> 00:26:07,500
as well it's all built in into TLS and

00:26:05,250 --> 00:26:09,840
then the third and last piece is

00:26:07,500 --> 00:26:11,610
integrity so and make sure that while

00:26:09,840 --> 00:26:13,140
your stuff's encrypted you verify to

00:26:11,610 --> 00:26:15,210
who's on the other side then nobody can

00:26:13,140 --> 00:26:16,710
mess with any bits in-flight and corrupt

00:26:15,210 --> 00:26:20,280
your data or inject things that

00:26:16,710 --> 00:26:22,170
shouldn't be there so again you know

00:26:20,280 --> 00:26:23,670
there's on some really great against

00:26:22,170 --> 00:26:25,800
certificate authorities you know digit

00:26:23,670 --> 00:26:28,770
cert Verisign Verisign let's encrypt

00:26:25,800 --> 00:26:31,260
really important yes I got a slide for

00:26:28,770 --> 00:26:33,090
one you guys here in just a second so

00:26:31,260 --> 00:26:34,860
alright so now let's do the TLS

00:26:33,090 --> 00:26:38,570
handshake we already know the three-way

00:26:34,860 --> 00:26:41,700
TCP handshake syn syn ACK and ACK

00:26:38,570 --> 00:26:43,710
next we'll start the the client hello so

00:26:41,700 --> 00:26:46,039
this is the client sends a client hello

00:26:43,710 --> 00:26:48,210
with a couple different TLS parameters

00:26:46,039 --> 00:26:49,440
and essentially what the client server

00:26:48,210 --> 00:26:51,720
and server will send back the server

00:26:49,440 --> 00:26:52,950
hello essentially they're just the

00:26:51,720 --> 00:26:55,200
client sending the parameters that

00:26:52,950 --> 00:26:57,660
supports the server sending back their

00:26:55,200 --> 00:26:59,880
mutually agreed-upon ciphers and

00:26:57,660 --> 00:27:01,200
encryption schemes and they're using the

00:26:59,880 --> 00:27:04,350
server will also send its its

00:27:01,200 --> 00:27:07,440
certificate as well one interesting

00:27:04,350 --> 00:27:10,620
thing you know that it's when you look

00:27:07,440 --> 00:27:12,179
at these connections as a LPN so a LPN

00:27:10,620 --> 00:27:14,789
is application layer protocol

00:27:12,179 --> 00:27:16,320
negotiation so this is something that

00:27:14,789 --> 00:27:18,360
you don't think about a lot but when you

00:27:16,320 --> 00:27:20,549
do a curl - V on Patrick chef comm

00:27:18,360 --> 00:27:23,820
you'll see that the client says hey I

00:27:20,549 --> 00:27:26,549
support HTTP 1 and HTTP 2 so you're

00:27:23,820 --> 00:27:27,780
actually negotiating your clients

00:27:26,549 --> 00:27:30,630
servers are negotiating the next

00:27:27,780 --> 00:27:32,370
protocol in the TLS header it's kind of

00:27:30,630 --> 00:27:33,960
cool and something to think about if

00:27:32,370 --> 00:27:36,750
you're trying to debug why aren't my

00:27:33,960 --> 00:27:40,650
connections HTTP to make sure a LPN is

00:27:36,750 --> 00:27:42,840
being sent by the client so cool so then

00:27:40,650 --> 00:27:44,400
the server and the the sort of the

00:27:42,840 --> 00:27:46,049
client the server then do a key exchange

00:27:44,400 --> 00:27:48,840
so they're either doing RSA or

00:27:46,049 --> 00:27:50,850
diffie-hellman key exchange at which

00:27:48,840 --> 00:27:52,650
point the client can finally send that

00:27:50,850 --> 00:27:54,510
get request finally get to what they

00:27:52,650 --> 00:27:57,539
were actually wanting to do in the first

00:27:54,510 --> 00:27:59,750
place so again thinking about this these

00:27:57,539 --> 00:28:03,230
client-server being 28 milliseconds away

00:27:59,750 --> 00:28:05,730
just to do a simple get requests takes

00:28:03,230 --> 00:28:08,039
224 milliseconds which is a quarter of a

00:28:05,730 --> 00:28:09,510
second just for a single request now

00:28:08,039 --> 00:28:12,150
when you guys are building these really

00:28:09,510 --> 00:28:13,980
massive complex websites you know with

00:28:12,150 --> 00:28:17,070
have tons of images and and all this

00:28:13,980 --> 00:28:18,570
data coming in it's it takes a long time

00:28:17,070 --> 00:28:20,669
like and especially if you think about

00:28:18,570 --> 00:28:21,990
things like head of line blocking you

00:28:20,669 --> 00:28:24,030
need to have multiple we'll talk about

00:28:21,990 --> 00:28:26,850
that in just a moment but um the point

00:28:24,030 --> 00:28:28,860
is TLS adds a lot of overhead to your

00:28:26,850 --> 00:28:33,059
connections but it's important we have

00:28:28,860 --> 00:28:34,740
to do it it's 2019 so again so again TLS

00:28:33,059 --> 00:28:37,470
adds a lot of overhead some some

00:28:34,740 --> 00:28:40,169
different things to think about with TLS

00:28:37,470 --> 00:28:42,120
is supporting ticket resumption so that

00:28:40,169 --> 00:28:43,380
the clients and the server's can have on

00:28:42,120 --> 00:28:45,750
the server will send a client a ticket

00:28:43,380 --> 00:28:48,270
so they can skip one of the the

00:28:45,750 --> 00:28:50,130
back-and-forth handshakes there's things

00:28:48,270 --> 00:28:52,240
like TCP fast opens so they can actually

00:28:50,130 --> 00:28:54,640
send data in that first

00:28:52,240 --> 00:28:55,870
the syn packet and there's different

00:28:54,640 --> 00:28:56,260
other thing I know the other things as

00:28:55,870 --> 00:28:57,790
well

00:28:56,260 --> 00:29:00,900
another thing that everybody needs to

00:28:57,790 --> 00:29:04,180
have on their website is HSTs so hyper

00:29:00,900 --> 00:29:06,850
HTTP strict Transport Security so what

00:29:04,180 --> 00:29:09,310
that does is when you go to Patrick chef

00:29:06,850 --> 00:29:11,680
comm and you just go to the port 80 that

00:29:09,310 --> 00:29:13,090
first time or you do that every time

00:29:11,680 --> 00:29:15,730
somebody can redirect you to another

00:29:13,090 --> 00:29:16,960
site and you don't realize it HSTs is a

00:29:15,730 --> 00:29:18,760
header that you can set on your web

00:29:16,960 --> 00:29:20,740
server so that every time that first

00:29:18,760 --> 00:29:23,470
time that they go there it sets a header

00:29:20,740 --> 00:29:26,680
so the server knows next time you always

00:29:23,470 --> 00:29:28,930
use HTTP you always use TLS so nobody

00:29:26,680 --> 00:29:30,820
can you know hijack your website and

00:29:28,930 --> 00:29:37,110
redirects so it's something that's super

00:29:30,820 --> 00:29:40,090
important cool any questions

00:29:37,110 --> 00:29:41,710
totally yeah so so the the comment was

00:29:40,090 --> 00:29:44,350
as long as you get to it - the first

00:29:41,710 --> 00:29:45,760
time I yeah yeah you know but it's

00:29:44,350 --> 00:29:47,920
important to it to have there but yeah

00:29:45,760 --> 00:29:50,290
if you're on a brand-new website web

00:29:47,920 --> 00:29:52,120
search browser and nobody in you've

00:29:50,290 --> 00:29:53,890
never been there then yeah it's still

00:29:52,120 --> 00:29:56,890
it's still possible that's a good point

00:29:53,890 --> 00:29:59,530
so a few commands here just to kind of

00:29:56,890 --> 00:30:00,850
debug TLS make sure the server is doing

00:29:59,530 --> 00:30:03,420
the right thing and I added a Python

00:30:00,850 --> 00:30:05,980
example there as well so a quick aside

00:30:03,420 --> 00:30:08,920
instead of doing debug on the command

00:30:05,980 --> 00:30:11,470
line SSL labs is fantastic you guys

00:30:08,920 --> 00:30:13,600
should all go any website you own go put

00:30:11,470 --> 00:30:15,580
your stuff in there and make sure you

00:30:13,600 --> 00:30:17,680
get an A+ I wouldn't have put this up

00:30:15,580 --> 00:30:19,900
here if I didn't have an A+ but um and

00:30:17,680 --> 00:30:22,900
it gives you tons of detail about your

00:30:19,900 --> 00:30:24,820
server it's fantastic it's fantastic and

00:30:22,900 --> 00:30:27,400
make sure that you guys everything you

00:30:24,820 --> 00:30:28,300
have is up to snuff security wise it's

00:30:27,400 --> 00:30:30,460
it's awesome

00:30:28,300 --> 00:30:32,680
and then for whoever yelled boo about

00:30:30,460 --> 00:30:35,140
let's encrypt if you don't have TLS

00:30:32,680 --> 00:30:36,790
sorry if you don't have SSL certs let's

00:30:35,140 --> 00:30:38,110
encrypt is amazing they allow you to

00:30:36,790 --> 00:30:40,170
have them for free you don't have to pay

00:30:38,110 --> 00:30:42,520
a buttload of money to digit cert or

00:30:40,170 --> 00:30:46,840
Verisign to get these certificates it's

00:30:42,520 --> 00:30:49,240
entirely free super easy what's that or

00:30:46,840 --> 00:30:50,560
your money back yeah yeah it's it's

00:30:49,240 --> 00:30:52,480
great it's um

00:30:50,560 --> 00:30:54,340
it's it's so easy to do certain bot is

00:30:52,480 --> 00:30:56,170
ridiculously easy even so many web

00:30:54,340 --> 00:30:56,950
servers now just do it automatically so

00:30:56,170 --> 00:31:00,280
cool

00:30:56,950 --> 00:31:02,410
so now let's we've actually we've DNS

00:31:00,280 --> 00:31:04,660
resolution TCP establish TLS now we

00:31:02,410 --> 00:31:06,040
actually need get to send the requests

00:31:04,660 --> 00:31:08,770
that we wanted to

00:31:06,040 --> 00:31:10,600
so I'm not gonna go deep into http 1 & 2

00:31:08,770 --> 00:31:14,290
I'm just gonna mention a few thing

00:31:10,600 --> 00:31:16,810
things HTTP ones been around for a while

00:31:14,290 --> 00:31:19,300
it's kind of you know HTTP you know post

00:31:16,810 --> 00:31:20,620
get puts like we have all these verbs

00:31:19,300 --> 00:31:22,960
for different things that we can do

00:31:20,620 --> 00:31:24,370
there's a mini downsides to HTTP one

00:31:22,960 --> 00:31:25,780
though the first is head-of-line

00:31:24,370 --> 00:31:28,600
blocking and what head-of-line blocking

00:31:25,780 --> 00:31:29,740
is is when you send a requests I need

00:31:28,600 --> 00:31:31,330
you to be request

00:31:29,740 --> 00:31:33,640
you can't send another one on that same

00:31:31,330 --> 00:31:36,670
TCP connection until that other one

00:31:33,640 --> 00:31:38,320
comes back so to get around this what's

00:31:36,670 --> 00:31:40,150
commonly done in browsers is the open

00:31:38,320 --> 00:31:42,010
multiple TCP connections to your server

00:31:40,150 --> 00:31:43,420
and send those requests and kind of

00:31:42,010 --> 00:31:45,220
multiplex them over the different

00:31:43,420 --> 00:31:51,010
connections but it's still a problem

00:31:45,220 --> 00:31:54,430
with HTTP 1 and but yeah so the

00:31:51,010 --> 00:31:56,770
evolution of HTTP 1 is HTTP 2 and we can

00:31:54,430 --> 00:31:58,270
thank Google for this they the previous

00:31:56,770 --> 00:32:00,580
name was speedy on what they've been

00:31:58,270 --> 00:32:01,930
working on this for a while and not to

00:32:00,580 --> 00:32:03,250
go into too many details but instead of

00:32:01,930 --> 00:32:05,350
being an ascii protocol it's now a

00:32:03,250 --> 00:32:08,470
binary protocol and it's a framed

00:32:05,350 --> 00:32:10,690
protocol meaning that you can it's no

00:32:08,470 --> 00:32:13,000
it's no longer it no longer suffers from

00:32:10,690 --> 00:32:14,560
head of line blocking with a single TCP

00:32:13,000 --> 00:32:16,480
connection you can send multiple

00:32:14,560 --> 00:32:17,770
requests and it has different channels

00:32:16,480 --> 00:32:19,540
or streams I don't know the exact

00:32:17,770 --> 00:32:22,120
terminology but it allows you to get a

00:32:19,540 --> 00:32:24,400
round head of line blocking so it's it's

00:32:22,120 --> 00:32:26,620
really nice there's a bunch of really

00:32:24,400 --> 00:32:27,400
awesome fancy features that HTTP 2 has

00:32:26,620 --> 00:32:29,010
as well

00:32:27,400 --> 00:32:32,130
you can like send things from the server

00:32:29,010 --> 00:32:36,480
you can push promises it's pretty cool

00:32:32,130 --> 00:32:40,600
so definitely look into HTTP 2 as well

00:32:36,480 --> 00:32:42,250
cool different you know debugging curl -

00:32:40,600 --> 00:32:43,690
V gives you tons of information if

00:32:42,250 --> 00:32:45,970
you're really into the gooey stuff

00:32:43,690 --> 00:32:48,670
postman is a really cool application for

00:32:45,970 --> 00:32:50,950
helping you debug HTTP requests on your

00:32:48,670 --> 00:32:52,300
you know your API server your web server

00:32:50,950 --> 00:32:53,740
whatever it gives you makes it really

00:32:52,300 --> 00:32:55,540
easy to programmatically do really

00:32:53,740 --> 00:33:00,840
complex things that you wouldn't want to

00:32:55,540 --> 00:33:00,840
do in curl cool any questions comments

00:33:02,400 --> 00:33:07,570
so next up we'll talk about Internet

00:33:05,740 --> 00:33:10,740
routing in the internet architecture so

00:33:07,570 --> 00:33:13,780
how does the internet actually work so

00:33:10,740 --> 00:33:15,790
the first when we talk about how the

00:33:13,780 --> 00:33:18,850
internet works the first topic and

00:33:15,790 --> 00:33:19,210
protocol has to be BGP BGP is the border

00:33:18,850 --> 00:33:22,570
gate

00:33:19,210 --> 00:33:25,480
a protocol and it's job is it's kind of

00:33:22,570 --> 00:33:26,440
the it's it's job is to give in to

00:33:25,480 --> 00:33:30,909
routers

00:33:26,440 --> 00:33:33,850
negotiate routes negotiate between them

00:33:30,909 --> 00:33:37,059
where they can get to and I'll show that

00:33:33,850 --> 00:33:38,950
in an example just a moment but BGP is

00:33:37,059 --> 00:33:41,080
kind of the backbone the protocol of the

00:33:38,950 --> 00:33:42,370
entire internet it's really insecure and

00:33:41,080 --> 00:33:45,220
it's amazing the internet even works

00:33:42,370 --> 00:33:46,929
because anybody can BGP BGP hijack at

00:33:45,220 --> 00:33:47,230
any point in time and it happens all the

00:33:46,929 --> 00:33:51,309
time

00:33:47,230 --> 00:33:54,490
sadly it's it's not a perfect protocol

00:33:51,309 --> 00:33:55,840
it's very eventually consistent and yeah

00:33:54,490 --> 00:33:59,320
there's a lot of problems with it but

00:33:55,840 --> 00:34:00,730
here we are so let's give an example and

00:33:59,320 --> 00:34:02,770
say we're oh hi Oh state we're the only

00:34:00,730 --> 00:34:03,940
place in the world well that we're not

00:34:02,770 --> 00:34:06,070
in one place in the world

00:34:03,940 --> 00:34:07,929
we have a bunch of researchers doing

00:34:06,070 --> 00:34:10,089
some really cool stuff and then we have

00:34:07,929 --> 00:34:11,740
a bunch of students and researchers like

00:34:10,089 --> 00:34:13,570
consuming that so we've built this

00:34:11,740 --> 00:34:15,550
really big local area network and

00:34:13,570 --> 00:34:16,629
everybody's exchanging information and

00:34:15,550 --> 00:34:19,629
likes really really good

00:34:16,629 --> 00:34:21,730
then comes along Indiana University and

00:34:19,629 --> 00:34:24,220
they have a bunch of researchers doing

00:34:21,730 --> 00:34:26,109
cool research bunch of clients consuming

00:34:24,220 --> 00:34:27,849
that within their network and life's

00:34:26,109 --> 00:34:30,339
good but then they want to collaborate

00:34:27,849 --> 00:34:32,950
they want to they want to be able to

00:34:30,339 --> 00:34:35,740
share information so how do they do this

00:34:32,950 --> 00:34:37,960
and the answer is the internet this is

00:34:35,740 --> 00:34:39,790
not why the internet was built but um

00:34:37,960 --> 00:34:42,220
you know this is just a contrived

00:34:39,790 --> 00:34:45,700
example but basically allowing different

00:34:42,220 --> 00:34:48,940
entities with diverse locations exchange

00:34:45,700 --> 00:34:51,250
information online so the first thing

00:34:48,940 --> 00:34:53,190
that they have to do to to pull this off

00:34:51,250 --> 00:34:56,020
to be able to connect their networks is

00:34:53,190 --> 00:34:59,830
acquire an ASN so an ASN is an

00:34:56,020 --> 00:35:02,260
autonomous system number and this is my

00:34:59,830 --> 00:35:06,369
shirt cover your AAS it's autonomous

00:35:02,260 --> 00:35:08,200
system pretty yeah for you lame joke but

00:35:06,369 --> 00:35:09,609
basically every big organization that is

00:35:08,200 --> 00:35:10,770
on the internet you have routers

00:35:09,609 --> 00:35:13,240
physically connecting to the internet

00:35:10,770 --> 00:35:15,990
will have an ASN does anybody here have

00:35:13,240 --> 00:35:20,500
an ASN cool what is it

00:35:15,990 --> 00:35:20,770
cool what's yours okay now that's all

00:35:20,500 --> 00:35:22,810
good

00:35:20,770 --> 00:35:24,040
there's a really awesome resource online

00:35:22,810 --> 00:35:26,440
called peering DB if you want to go

00:35:24,040 --> 00:35:30,310
check up you know somebody's ASN but

00:35:26,440 --> 00:35:32,410
it's it's pretty cool awesome so the

00:35:30,310 --> 00:35:33,000
next thing you're gonna do is so here we

00:35:32,410 --> 00:35:34,860
have

00:35:33,000 --> 00:35:38,160
each have their ASN yes I should have

00:35:34,860 --> 00:35:39,210
asked who knows Ohio State's ASM I would

00:35:38,160 --> 00:35:41,430
not have known them

00:35:39,210 --> 00:35:43,350
so why Oh state one five nine so these

00:35:41,430 --> 00:35:45,750
numbers get really big they get up into

00:35:43,350 --> 00:35:47,400
like the hundreds of thousands so I

00:35:45,750 --> 00:35:49,830
would stay in Indiana we're really early

00:35:47,400 --> 00:35:51,690
on in the internet game so acquire their

00:35:49,830 --> 00:35:53,790
essence early so that's kind of cool

00:35:51,690 --> 00:35:56,520
so the next thing they need to do is put

00:35:53,790 --> 00:35:58,590
up routers border routers on their

00:35:56,520 --> 00:36:00,300
networks and connect them up so here

00:35:58,590 --> 00:36:02,490
well hi just they just put a router here

00:36:00,300 --> 00:36:04,650
and then this is the routing table so

00:36:02,490 --> 00:36:06,660
we'll just assume right now that their

00:36:04,650 --> 00:36:08,100
routing table table is this is the only

00:36:06,660 --> 00:36:09,690
thing in their routing these are the

00:36:08,100 --> 00:36:12,960
routes that are available in their

00:36:09,690 --> 00:36:14,670
networks these 2/16 and this is their

00:36:12,960 --> 00:36:17,280
external routing table

00:36:14,670 --> 00:36:18,930
so then indiana comes in and puts a

00:36:17,280 --> 00:36:20,100
router up and they have their own

00:36:18,930 --> 00:36:24,300
routing table as well

00:36:20,100 --> 00:36:26,610
and it's empty for externally so then

00:36:24,300 --> 00:36:29,310
they physically run a cable across the

00:36:26,610 --> 00:36:31,710
u.s. across the ground across much of

00:36:29,310 --> 00:36:34,710
farmland and then they established a bgp

00:36:31,710 --> 00:36:37,770
session so bgp this entire job is to

00:36:34,710 --> 00:36:40,170
announce between these routers all these

00:36:37,770 --> 00:36:42,480
routes here are now on the routing table

00:36:40,170 --> 00:36:44,640
so if any client within Indiana's

00:36:42,480 --> 00:36:46,500
network needs to go to one of these

00:36:44,640 --> 00:36:47,790
places it knows it needs to go to this

00:36:46,500 --> 00:36:49,080
router and this it knows where this

00:36:47,790 --> 00:36:51,540
router now knows where to send that over

00:36:49,080 --> 00:36:53,100
here that's essentially all that BGP

00:36:51,540 --> 00:36:54,930
does obviously there's way more to it

00:36:53,100 --> 00:36:59,340
than that but that's really what it

00:36:54,930 --> 00:37:00,810
comes down to awesome so now I've stayed

00:36:59,340 --> 00:37:02,580
in Indiana or up and running there

00:37:00,810 --> 00:37:05,070
sharing information and now

00:37:02,580 --> 00:37:07,920
Illinois wants to come in so they run

00:37:05,070 --> 00:37:10,500
some more cables some copper fiber and

00:37:07,920 --> 00:37:13,200
they do the same thing they they

00:37:10,500 --> 00:37:16,230
establish BGP and now these routes are

00:37:13,200 --> 00:37:18,270
being shared amongst all of them then

00:37:16,230 --> 00:37:21,240
Ohio University rolls in and and and

00:37:18,270 --> 00:37:22,620
hooks up cool so then we have which of

00:37:21,240 --> 00:37:24,450
people outside like all these

00:37:22,620 --> 00:37:26,490
researchers like I want to be able to

00:37:24,450 --> 00:37:26,790
access this stuff from home how do I do

00:37:26,490 --> 00:37:28,170
that

00:37:26,790 --> 00:37:30,150
and then that's where Internet service

00:37:28,170 --> 00:37:33,240
providers come in is internet service

00:37:30,150 --> 00:37:35,100
providers are who we pay to connect up

00:37:33,240 --> 00:37:37,050
to the internet so the backbone of the

00:37:35,100 --> 00:37:40,170
internet essentially and connect up to

00:37:37,050 --> 00:37:41,430
all these different you know networks so

00:37:40,170 --> 00:37:43,380
we're paying them a bunch of money and

00:37:41,430 --> 00:37:46,230
that's great and then you know it just

00:37:43,380 --> 00:37:46,740
kind of balloons from there and like

00:37:46,230 --> 00:37:48,540
this is

00:37:46,740 --> 00:37:52,410
how the internet looks today it's just a

00:37:48,540 --> 00:37:54,570
really big distributed network again

00:37:52,410 --> 00:37:56,610
it's amazing that it even works and a

00:37:54,570 --> 00:37:58,860
lot of times it doesn't but it's really

00:37:56,610 --> 00:38:01,110
cool so you know everybody's announcing

00:37:58,860 --> 00:38:03,720
BGP routes and everybody sees the full

00:38:01,110 --> 00:38:05,130
internet generally so when you you know

00:38:03,720 --> 00:38:08,340
you say you're this client down here and

00:38:05,130 --> 00:38:10,980
you when they reach this server you know

00:38:08,340 --> 00:38:14,010
your packet is gonna travel you know

00:38:10,980 --> 00:38:15,869
whatever way BGP says BGP is not the

00:38:14,010 --> 00:38:17,280
most efficient protocol it's not going

00:38:15,869 --> 00:38:18,270
to guarantee the most efficient path and

00:38:17,280 --> 00:38:19,890
I actually guarantee you you're gonna

00:38:18,270 --> 00:38:21,180
take probably not the most efficient

00:38:19,890 --> 00:38:25,680
path but that's just the way the

00:38:21,180 --> 00:38:27,360
internet works it does work and so yeah

00:38:25,680 --> 00:38:31,140
your packet hopefully eventually gets

00:38:27,360 --> 00:38:32,940
there cool so internet exchanges so

00:38:31,140 --> 00:38:36,090
instead of everybody just running cable

00:38:32,940 --> 00:38:39,119
across the US or across oceans to other

00:38:36,090 --> 00:38:40,380
networks they we've established internet

00:38:39,119 --> 00:38:42,420
exchanges around the world

00:38:40,380 --> 00:38:45,119
so that people can just run their fiber

00:38:42,420 --> 00:38:47,460
to a centralized point and everybody can

00:38:45,119 --> 00:38:49,710
just connect up within these these

00:38:47,460 --> 00:38:50,750
internet exchanges does anybody know the

00:38:49,710 --> 00:38:55,010
internet exchanges in Ohio

00:38:50,750 --> 00:38:57,600
do we have me in Columbus what's that

00:38:55,010 --> 00:38:59,490
collage except yeah I think there's oh

00:38:57,600 --> 00:39:03,990
hi oh IX I believe is another one I

00:38:59,490 --> 00:39:07,710
think they're reasonably small what's

00:39:03,990 --> 00:39:13,500
that oh is it okay is that like a

00:39:07,710 --> 00:39:16,590
colocation facility then cool cool so

00:39:13,500 --> 00:39:18,810
you'll see there's all in the US this is

00:39:16,590 --> 00:39:20,460
not an exhaustive list but there's a lot

00:39:18,810 --> 00:39:22,800
of internet exchanges around the u.s.

00:39:20,460 --> 00:39:27,240
and this is where big organizations will

00:39:22,800 --> 00:39:29,040
run cable to or buy connectivity to to

00:39:27,240 --> 00:39:30,869
to access a whole bunch of other

00:39:29,040 --> 00:39:33,390
networks and then they'll run cables to

00:39:30,869 --> 00:39:35,850
each other and peer and there's a whole

00:39:33,390 --> 00:39:39,810
like community around peering it's kind

00:39:35,850 --> 00:39:42,390
of cool nanog is is kind of I don't know

00:39:39,810 --> 00:39:44,430
anybody even to an ant on the North

00:39:42,390 --> 00:39:46,140
American network operator group yeah

00:39:44,430 --> 00:39:48,930
people just go and talk about peering

00:39:46,140 --> 00:39:50,700
all day it's pretty cool so we've got a

00:39:48,930 --> 00:39:52,320
bunch of internet exchange in the US and

00:39:50,700 --> 00:39:54,030
then we look at it globally you know

00:39:52,320 --> 00:39:56,190
there are tons of internet exchanges all

00:39:54,030 --> 00:40:00,619
around the world you can see you know a

00:39:56,190 --> 00:40:00,619
lot here and one thing that's not

00:40:00,630 --> 00:40:04,980
it's you'll see a lot on the coast and

00:40:02,670 --> 00:40:06,150
that's not by chance the reason why we

00:40:04,980 --> 00:40:08,130
see so many internet exchanges on the

00:40:06,150 --> 00:40:10,650
coast because if we look at the global

00:40:08,130 --> 00:40:13,230
Internet backbone this is where all

00:40:10,650 --> 00:40:16,020
these undersea cables are terminating so

00:40:13,230 --> 00:40:19,350
you know from Europe you know here going

00:40:16,020 --> 00:40:20,820
to Asia etc so you'll see a lot of

00:40:19,350 --> 00:40:25,050
internet exchanges really close to the

00:40:20,820 --> 00:40:27,170
coasts to terminate this traffic excuse

00:40:25,050 --> 00:40:27,170
me

00:40:28,130 --> 00:40:31,740
so looking at some of the different

00:40:30,030 --> 00:40:36,090
times I really I hit on it a few times

00:40:31,740 --> 00:40:38,070
but New York the San Francisco the you

00:40:36,090 --> 00:40:39,540
know the internet can going only go as

00:40:38,070 --> 00:40:41,460
fast as the speed of light that's the

00:40:39,540 --> 00:40:43,110
fast as you can go it's 14 milliseconds

00:40:41,460 --> 00:40:45,420
but time and fiber you know going on a

00:40:43,110 --> 00:40:47,310
non direct path and losing a little bit

00:40:45,420 --> 00:40:49,680
of quality in the fiber it's about 21

00:40:47,310 --> 00:40:51,180
milliseconds which again isn't a long

00:40:49,680 --> 00:40:53,010
time but if you're doing hundreds of

00:40:51,180 --> 00:40:54,870
requests and transferring a lot of large

00:40:53,010 --> 00:40:58,170
objects it can actually add up really

00:40:54,870 --> 00:40:59,910
really quickly so New York to London 28

00:40:58,170 --> 00:41:02,610
milliseconds New York to Sydney you know

00:40:59,910 --> 00:41:03,900
Australia 80 milliseconds and to go all

00:41:02,610 --> 00:41:06,210
the way around the world about 200

00:41:03,900 --> 00:41:07,650
milliseconds for a packet to travel in

00:41:06,210 --> 00:41:11,460
fiber all the way around the world

00:41:07,650 --> 00:41:13,800
perfect perfect scenario so just some

00:41:11,460 --> 00:41:15,930
some internet debugging tools obviously

00:41:13,800 --> 00:41:19,260
we all probably know paying traceroute

00:41:15,930 --> 00:41:21,210
and MTR really good tools for for for

00:41:19,260 --> 00:41:24,420
mapping out the path that your path is

00:41:21,210 --> 00:41:26,220
take your packet is taking its

00:41:24,420 --> 00:41:27,930
throughput information IP traffic and

00:41:26,220 --> 00:41:31,530
topper are also pretty useful tools as

00:41:27,930 --> 00:41:33,690
well so lastly we will talk about ICMP

00:41:31,530 --> 00:41:35,820
the Internet control message protocol

00:41:33,690 --> 00:41:38,100
again this is as I mentioned before this

00:41:35,820 --> 00:41:41,820
is a layer 3 protocol and it's commonly

00:41:38,100 --> 00:41:44,460
used when there are issues on layer 3 so

00:41:41,820 --> 00:41:46,260
it's a way for all those devices all

00:41:44,460 --> 00:41:48,180
those many dozens of routers that your

00:41:46,260 --> 00:41:50,070
packets going to travel to still be able

00:41:48,180 --> 00:41:52,350
to communicate back to the client or

00:41:50,070 --> 00:41:55,350
whoever sent that packet that has an

00:41:52,350 --> 00:41:57,330
issue it's a way for them to to message

00:41:55,350 --> 00:42:00,690
back that something is wrong so these

00:41:57,330 --> 00:42:03,750
are a few of them you know we all

00:42:00,690 --> 00:42:05,010
probably know echo and reply ping like

00:42:03,750 --> 00:42:07,410
this is all it's doing is sending out an

00:42:05,010 --> 00:42:09,330
ICMP echo and then the server is

00:42:07,410 --> 00:42:13,020
replying back another one that we might

00:42:09,330 --> 00:42:14,200
see is um packet to big where along the

00:42:13,020 --> 00:42:17,079
way one of the router

00:42:14,200 --> 00:42:20,740
has a maximum transmission unit which is

00:42:17,079 --> 00:42:23,020
under the in the standard of 1500 so it

00:42:20,740 --> 00:42:25,290
will send back an ICMP packet back to

00:42:23,020 --> 00:42:27,970
the sender to say the packets too big

00:42:25,290 --> 00:42:30,010
and then we've probably seen destination

00:42:27,970 --> 00:42:32,020
unreachable again you try to connect to

00:42:30,010 --> 00:42:34,000
a server and then curl says you can't

00:42:32,020 --> 00:42:36,880
connect that's because the other side is

00:42:34,000 --> 00:42:39,520
sending back an ICMP packet to to that

00:42:36,880 --> 00:42:41,619
client um one important thing just to

00:42:39,520 --> 00:42:43,060
get on my soapbox is a lot of people for

00:42:41,619 --> 00:42:45,510
the sake of security like to disable

00:42:43,060 --> 00:42:47,980
ICMP going into or out of their network

00:42:45,510 --> 00:42:50,200
that's a really bad thing because the

00:42:47,980 --> 00:42:52,810
internet kind of ceases to function in

00:42:50,200 --> 00:42:54,099
some ways so say you're you know you

00:42:52,810 --> 00:42:55,510
haven't you know your your live

00:42:54,099 --> 00:42:57,400
stringing some video and all of a sudden

00:42:55,510 --> 00:43:00,310
your packets take a different way

00:42:57,400 --> 00:43:03,099
because BGP changes now your packets too

00:43:00,310 --> 00:43:05,440
big that's never going to be received by

00:43:03,099 --> 00:43:06,910
the client end so it doesn't know it has

00:43:05,440 --> 00:43:08,500
no idea that it's packets are being

00:43:06,910 --> 00:43:09,760
dropped it'll eventually close the

00:43:08,500 --> 00:43:12,190
connection and do something else so

00:43:09,760 --> 00:43:14,740
that's one thing I see a lot it's not

00:43:12,190 --> 00:43:15,940
security to the sample ICMP your

00:43:14,740 --> 00:43:19,349
Internet's going to work a lot better if

00:43:15,940 --> 00:43:22,210
you enabled it cool some different ICMP

00:43:19,349 --> 00:43:24,190
NASA is really great and then of course

00:43:22,210 --> 00:43:27,220
it's that as well it can collect a lot

00:43:24,190 --> 00:43:29,230
of really great stats so I have the

00:43:27,220 --> 00:43:30,700
stock reliability engineer like a lot of

00:43:29,230 --> 00:43:32,170
these things are really important but I

00:43:30,700 --> 00:43:33,730
think like one of the things that I

00:43:32,170 --> 00:43:35,500
think about when I think of an SRE and

00:43:33,730 --> 00:43:37,480
kind of the superpowers that makes them

00:43:35,500 --> 00:43:40,480
look like a magical unicorn kind of

00:43:37,480 --> 00:43:42,880
comes in is taking this data and

00:43:40,480 --> 00:43:45,250
graphing it and storing it so you can

00:43:42,880 --> 00:43:46,810
look at a thousand servers like just

00:43:45,250 --> 00:43:48,700
going onto a single server and looking

00:43:46,810 --> 00:43:49,869
at the stuff is is fine if you just you

00:43:48,700 --> 00:43:52,560
know have a really small infrastructure

00:43:49,869 --> 00:43:54,280
but as an SRE who's worked on

00:43:52,560 --> 00:43:56,109
infrastructures with thousands of

00:43:54,280 --> 00:43:58,900
servers I don't care at all about single

00:43:56,109 --> 00:44:00,730
servers at all unless well there are

00:43:58,900 --> 00:44:01,810
some cases where you will but what I

00:44:00,730 --> 00:44:03,250
care about is I want to be able to see

00:44:01,810 --> 00:44:05,770
this across a thousand servers and

00:44:03,250 --> 00:44:08,200
really dive into that one server or few

00:44:05,770 --> 00:44:09,579
servers that are having problems and so

00:44:08,200 --> 00:44:11,920
like it's really important to use like

00:44:09,579 --> 00:44:13,359
graph on out or you know different

00:44:11,920 --> 00:44:15,220
there's tons of different ways to

00:44:13,359 --> 00:44:17,020
collect this data but this should be

00:44:15,220 --> 00:44:19,000
collected periodically and regularly

00:44:17,020 --> 00:44:21,130
like less than a minute I would even

00:44:19,000 --> 00:44:21,970
recommend so you really have a good idea

00:44:21,130 --> 00:44:23,410
of what's happening on your

00:44:21,970 --> 00:44:25,599
infrastructure and building amazing

00:44:23,410 --> 00:44:28,359
dashboards so that you know what is

00:44:25,599 --> 00:44:29,829
going on and specifically this

00:44:28,359 --> 00:44:32,980
it doesn't just relate to networking

00:44:29,829 --> 00:44:35,019
like as sres you know as infrastructure

00:44:32,980 --> 00:44:38,920
experts we should know everything that's

00:44:35,019 --> 00:44:40,329
going on the CPU memory disk again like

00:44:38,920 --> 00:44:42,190
just the things that we've talked about

00:44:40,329 --> 00:44:43,809
today you should know when they're TCP

00:44:42,190 --> 00:44:45,489
retransmits like that's a really good

00:44:43,809 --> 00:44:47,529
indicator that there's something wrong

00:44:45,489 --> 00:44:50,559
either on one of the application ends or

00:44:47,529 --> 00:44:52,749
on the the internet or the network

00:44:50,559 --> 00:44:55,660
itself having a bunch of socket stats

00:44:52,749 --> 00:44:57,130
like like having being able to go in and

00:44:55,660 --> 00:44:58,630
look at every single layer all the

00:44:57,130 --> 00:45:00,730
networking layers that we talked about

00:44:58,630 --> 00:45:02,470
including instrumenting your application

00:45:00,730 --> 00:45:04,029
to know when endpoints are failing to

00:45:02,470 --> 00:45:05,980
know when you're serving you know five

00:45:04,029 --> 00:45:08,650
hundreds or for hundreds or whatever and

00:45:05,980 --> 00:45:11,289
even remote procedure calls you if your

00:45:08,650 --> 00:45:12,789
applications down you want to know like

00:45:11,289 --> 00:45:14,470
sometimes those things look like Network

00:45:12,789 --> 00:45:16,210
errors but really maybe they're just you

00:45:14,470 --> 00:45:18,519
know the caches doesn't have you're here

00:45:16,210 --> 00:45:20,890
the caches is not responding or the

00:45:18,519 --> 00:45:22,779
database is being slow a lot of these

00:45:20,890 --> 00:45:24,670
things can look like Network errors that

00:45:22,779 --> 00:45:27,339
really are and I think that's one of the

00:45:24,670 --> 00:45:29,200
you know the roles as an SRE that I

00:45:27,339 --> 00:45:31,150
really tried to bring to all the things

00:45:29,200 --> 00:45:32,559
that I work on just have really great

00:45:31,150 --> 00:45:34,119
instrumentation and data around

00:45:32,559 --> 00:45:37,239
everything that's happening so we can

00:45:34,119 --> 00:45:39,869
debug things a lot quicker so from a

00:45:37,239 --> 00:45:42,819
networking perspective the holy grail of

00:45:39,869 --> 00:45:44,289
networking is tcp/ip illustrated by far

00:45:42,819 --> 00:45:47,319
my favorite technical book of all time

00:45:44,289 --> 00:45:49,119
is as dense as it is and as dense as

00:45:47,319 --> 00:45:51,880
networking is it makes it really really

00:45:49,119 --> 00:45:54,400
approachable and for folks working on

00:45:51,880 --> 00:45:55,690
bigger infrastructures high-performance

00:45:54,400 --> 00:45:57,489
even smaller infrastructures like

00:45:55,690 --> 00:46:00,940
high-performance browser networking was

00:45:57,489 --> 00:46:03,039
written by Ilya from from Google talking

00:46:00,940 --> 00:46:04,359
about how they think about I think the

00:46:03,039 --> 00:46:05,980
title is actually kind of poor I don't

00:46:04,359 --> 00:46:08,140
think it's a great title but it talks

00:46:05,980 --> 00:46:10,569
about so many ways in which as

00:46:08,140 --> 00:46:12,249
infrastructure and web server operators

00:46:10,569 --> 00:46:13,660
you can make things you know more

00:46:12,249 --> 00:46:15,609
efficient and how they approach these

00:46:13,660 --> 00:46:18,249
types of problems and a lot of the

00:46:15,609 --> 00:46:19,660
examples that I or a lot of the content

00:46:18,249 --> 00:46:21,130
that's in this presentation is in this

00:46:19,660 --> 00:46:25,029
book so it's also really really

00:46:21,130 --> 00:46:28,019
fantastic so with that any questions

00:46:25,029 --> 00:46:28,019
yeah

00:46:32,829 --> 00:46:43,430
yeah yeah I would so I mean it happens

00:46:41,119 --> 00:46:47,900
all the time yes

00:46:43,430 --> 00:46:50,599
so yeah working at Facebook and so

00:46:47,900 --> 00:46:52,069
working these companies like - well you

00:46:50,599 --> 00:46:53,539
know and all the other companies had

00:46:52,069 --> 00:46:54,890
issues like when Google you know when

00:46:53,539 --> 00:46:57,529
traffic all of a sudden starts going

00:46:54,890 --> 00:46:59,420
into like I'm not gonna like be specific

00:46:57,529 --> 00:47:01,670
but going into countries that like

00:46:59,420 --> 00:47:03,140
taking a really big hairpin outside of

00:47:01,670 --> 00:47:06,319
you know Europe and then like coming

00:47:03,140 --> 00:47:08,180
back in like those things are those

00:47:06,319 --> 00:47:09,619
things happen and and generally like one

00:47:08,180 --> 00:47:11,240
thing is really cool is the network

00:47:09,619 --> 00:47:13,309
operators know this stuff like they're

00:47:11,240 --> 00:47:14,299
monitoring this stuff constantly I think

00:47:13,309 --> 00:47:16,519
there's even like a Twitter feed that

00:47:14,299 --> 00:47:18,890
all like say you know this is and this

00:47:16,519 --> 00:47:21,440
is might be hijacked or or whatnot but

00:47:18,890 --> 00:47:22,999
I'm it definitely happens um I would say

00:47:21,440 --> 00:47:25,160
more often than not it happens

00:47:22,999 --> 00:47:26,749
accidentally you know there is the

00:47:25,160 --> 00:47:29,749
malicious much I'm kind of alluding to

00:47:26,749 --> 00:47:31,430
but people fat-finger you know they

00:47:29,749 --> 00:47:34,339
might you know might be a small operator

00:47:31,430 --> 00:47:36,170
and then you announce to Comcast or the

00:47:34,339 --> 00:47:37,940
entire Internet and then Comcast

00:47:36,170 --> 00:47:39,289
announces that to the entire Internet

00:47:37,940 --> 00:47:41,690
and then you bring down the internet

00:47:39,289 --> 00:47:43,279
it's like things like that happen so

00:47:41,690 --> 00:47:44,690
that's the other piece - like on the

00:47:43,279 --> 00:47:46,569
networking side having really great

00:47:44,690 --> 00:47:49,940
filtering policies to make sure that

00:47:46,569 --> 00:47:51,230
you're you know both the way you

00:47:49,940 --> 00:47:52,700
announce things on the outside are

00:47:51,230 --> 00:47:55,009
saying and the people who are now

00:47:52,700 --> 00:48:03,289
singing to you you don't you know screw

00:47:55,009 --> 00:48:05,210
yourself yeah go to Patrick chef calm

00:48:03,289 --> 00:48:12,369
and like a day or two and I'll post in

00:48:05,210 --> 00:48:15,019
there so this is I think Thousand Eyes

00:48:12,369 --> 00:48:16,309
which I'm not here representing them but

00:48:15,019 --> 00:48:17,960
it's just a really cool shirt but I

00:48:16,309 --> 00:48:20,869
think if you go to a thousand eyes I

00:48:17,960 --> 00:48:22,609
don't know how I got it but yeah is a

00:48:20,869 --> 00:48:27,099
pretty cool shirt I'm in no way

00:48:22,609 --> 00:48:27,099
affiliated with them cool yeah

00:48:30,020 --> 00:48:46,590
yep yeah so when I was on well both at

00:48:42,960 --> 00:48:47,850
Netflix and Facebook when you think of

00:48:46,590 --> 00:48:49,680
those companies you think of like the

00:48:47,850 --> 00:48:51,480
big data centers that they have that run

00:48:49,680 --> 00:48:55,320
all the the networking you know all the

00:48:51,480 --> 00:48:57,690
the services right and like that's one

00:48:55,320 --> 00:49:00,300
kind of big section of the people who

00:48:57,690 --> 00:49:02,310
work there in my role at both Netflix

00:49:00,300 --> 00:49:04,080
and Facebook on the traffic teams we

00:49:02,310 --> 00:49:06,660
owned all the infrastructure outside the

00:49:04,080 --> 00:49:08,580
data center so we own the servers and

00:49:06,660 --> 00:49:11,100
the networking gear that were in those

00:49:08,580 --> 00:49:13,170
internet exchanges and specifically I

00:49:11,100 --> 00:49:16,260
worked on the CDN side of that the photo

00:49:13,170 --> 00:49:17,970
and video delivery so you know all the

00:49:16,260 --> 00:49:20,460
time like the internet breaks all the

00:49:17,970 --> 00:49:22,950
time you know people backhoe up a cable

00:49:20,460 --> 00:49:24,780
and it might break a big portion of the

00:49:22,950 --> 00:49:26,460
things that we're doing so our systems

00:49:24,780 --> 00:49:28,170
need to respond really fast so that's

00:49:26,460 --> 00:49:29,760
why Facebook builds that map of the

00:49:28,170 --> 00:49:31,500
internet like every minute or two so

00:49:29,760 --> 00:49:34,740
that we can quickly route around those

00:49:31,500 --> 00:49:35,940
types of things but in my role and the

00:49:34,740 --> 00:49:38,610
other piece to it is I worked on a

00:49:35,940 --> 00:49:41,370
project where we had embedded cashes in

00:49:38,610 --> 00:49:43,320
ISPs so you know here in Columbus like

00:49:41,370 --> 00:49:45,600
we would work with Wow right of West

00:49:43,320 --> 00:49:47,340
drop servers in their data centers and

00:49:45,600 --> 00:49:49,380
then we would serve photo and video

00:49:47,340 --> 00:49:52,860
delivery from those both at Facebook and

00:49:49,380 --> 00:49:55,440
and Netflix so dealing with those issues

00:49:52,860 --> 00:49:56,640
is a really big part of it and I think

00:49:55,440 --> 00:49:58,920
the other probably important piece of

00:49:56,640 --> 00:50:01,500
context too is like we like I keep I've

00:49:58,920 --> 00:50:02,700
used almost exclusively US examples but

00:50:01,500 --> 00:50:04,500
we're doing this I think these companies

00:50:02,700 --> 00:50:06,830
are doing this in Brazil and South

00:50:04,500 --> 00:50:09,780
America and you know in all these

00:50:06,830 --> 00:50:11,820
southern Asian countries and it's a lot

00:50:09,780 --> 00:50:13,680
of where the internet connectivity is

00:50:11,820 --> 00:50:15,810
not that great so this happens quite

00:50:13,680 --> 00:50:17,430
often and it's important to build really

00:50:15,810 --> 00:50:19,860
great tools for again the

00:50:17,430 --> 00:50:21,720
instrumentation and to make sure the the

00:50:19,860 --> 00:50:24,300
system's automatically you know route

00:50:21,720 --> 00:50:26,190
away from problem areas so it happened

00:50:24,300 --> 00:50:28,350
quite a lot I had a more distributed

00:50:26,190 --> 00:50:30,060
scale but all those commands I used like

00:50:28,350 --> 00:50:31,860
we would collect those all the time and

00:50:30,060 --> 00:50:37,190
then be able to derive insights from

00:50:31,860 --> 00:50:37,190
them so a lot yeah

00:50:38,900 --> 00:50:43,680
cool so the question is would you can

00:50:41,370 --> 00:50:44,250
you talk about SLI SLI is SL O's and

00:50:43,680 --> 00:50:51,930
alerting

00:50:44,250 --> 00:50:55,830
so that's service level indicators yeah

00:50:51,930 --> 00:50:57,780
so I think like to just to IIIi don't

00:50:55,830 --> 00:50:59,520
know like that specifically we didn't

00:50:57,780 --> 00:51:00,990
use that type of terminology but I think

00:50:59,520 --> 00:51:03,180
the question is like how do you know

00:51:00,990 --> 00:51:06,450
when your service is broken or how do

00:51:03,180 --> 00:51:08,790
you like set sane thresholds to to keep

00:51:06,450 --> 00:51:10,140
your service up and running and at both

00:51:08,790 --> 00:51:12,780
companies we used a lot of different

00:51:10,140 --> 00:51:14,730
metrics for those you know some were

00:51:12,780 --> 00:51:17,310
just straight thresholds but one of the

00:51:14,730 --> 00:51:19,530
big like one of the biggest pieces of

00:51:17,310 --> 00:51:22,130
data that I didn't have in this

00:51:19,530 --> 00:51:24,210
presentation but all these companies do

00:51:22,130 --> 00:51:26,100
when they look at networking is they

00:51:24,210 --> 00:51:27,720
look at egress so the amounts of ones

00:51:26,100 --> 00:51:29,430
and zeros that are leaving your routers

00:51:27,720 --> 00:51:31,080
at any point in time and when there's a

00:51:29,430 --> 00:51:33,120
massive drop in egress

00:51:31,080 --> 00:51:35,070
then something's broken that was

00:51:33,120 --> 00:51:36,450
actually the one really big indicator of

00:51:35,070 --> 00:51:38,880
what's actually wrong and then you can

00:51:36,450 --> 00:51:40,680
like template that thing out to you know

00:51:38,880 --> 00:51:41,970
a bunch of different areas and in

00:51:40,680 --> 00:51:44,310
different metrics that are important to

00:51:41,970 --> 00:51:46,320
you but it's not an easy question to

00:51:44,310 --> 00:51:49,290
answer I'm kind of like I'm dodging the

00:51:46,320 --> 00:51:50,460
question not intentionally but yeah like

00:51:49,290 --> 00:51:52,380
that's kind of the art of site

00:51:50,460 --> 00:51:53,910
reliability engineering is knowing your

00:51:52,380 --> 00:51:55,350
infrastructure and knowing what's gonna

00:51:53,910 --> 00:51:56,670
be high signal you don't want to get

00:51:55,350 --> 00:51:58,560
woken up in the middle of night because

00:51:56,670 --> 00:52:00,660
something dumb broke right you want to

00:51:58,560 --> 00:52:02,250
make sure one hopefully the robots can

00:52:00,660 --> 00:52:15,240
can go fix that themselves

00:52:02,250 --> 00:52:16,980
so you can get more sleep so the

00:52:15,240 --> 00:52:20,610
question is how do we deal with the fact

00:52:16,980 --> 00:52:21,840
that a lot of people block ICMP so some

00:52:20,610 --> 00:52:23,730
of there's a lot of different issues

00:52:21,840 --> 00:52:26,340
that can happen the one that I mentioned

00:52:23,730 --> 00:52:28,800
was like MTU changing there are things

00:52:26,340 --> 00:52:33,780
you can do on the server side to call it

00:52:28,800 --> 00:52:35,580
on at ppm tud path MTU detection so if

00:52:33,780 --> 00:52:36,900
one side actually thinks that the MT

00:52:35,580 --> 00:52:38,370
might have changed with our packets are

00:52:36,900 --> 00:52:40,740
being dropped it'll actually slowly

00:52:38,370 --> 00:52:43,170
decrease the MSS the maximum segment

00:52:40,740 --> 00:52:46,290
size of the TCP packet to try to get

00:52:43,170 --> 00:52:48,390
around that so yeah it can definitely

00:52:46,290 --> 00:52:50,400
happen like that's just one example but

00:52:48,390 --> 00:52:52,079
you need to think about the

00:52:50,400 --> 00:52:54,950
those types of things as you're building

00:52:52,079 --> 00:53:05,099
this out yeah

00:52:54,950 --> 00:53:07,200
any other questions yeah so when I I

00:53:05,099 --> 00:53:10,319
never took a networking class at Ohio

00:53:07,200 --> 00:53:13,200
State it's incredible I dropped out of

00:53:10,319 --> 00:53:15,440
CSE 677 which says I hated it like I

00:53:13,200 --> 00:53:18,450
didn't hate well I didn't like it I

00:53:15,440 --> 00:53:20,460
wasn't going to pass in that class but

00:53:18,450 --> 00:53:21,839
but the answer is like at when I went

00:53:20,460 --> 00:53:24,900
into Facebook i was really like coding

00:53:21,839 --> 00:53:27,599
and in an operating system heavy I

00:53:24,900 --> 00:53:28,680
joined I joined that team the traffic

00:53:27,599 --> 00:53:30,299
team with very little networking

00:53:28,680 --> 00:53:32,940
knowledge so these are all things that

00:53:30,299 --> 00:53:34,680
I've kind of built up over the years and

00:53:32,940 --> 00:53:36,029
that's like one thing that's really cool

00:53:34,680 --> 00:53:37,859
about a company like Facebook is they

00:53:36,029 --> 00:53:40,020
encourage people to go into areas that

00:53:37,859 --> 00:53:41,339
they're not experts in and you know but

00:53:40,020 --> 00:53:42,420
still bringing the things that they have

00:53:41,339 --> 00:53:44,640
to the table and building up that

00:53:42,420 --> 00:53:46,140
knowledge so I definitely don't consider

00:53:44,640 --> 00:53:47,760
myself a networking engineer even though

00:53:46,140 --> 00:53:51,270
I can't parent and talk about this stuff

00:53:47,760 --> 00:53:53,279
so yeah I but that's one of the things I

00:53:51,270 --> 00:53:55,200
love doing is just learning and in

00:53:53,279 --> 00:53:58,710
building things it's a lot of fun so

00:53:55,200 --> 00:54:05,300
cool I think that's it thank you

00:53:58,710 --> 00:54:05,300

YouTube URL: https://www.youtube.com/watch?v=XyzvNSSwkkY


