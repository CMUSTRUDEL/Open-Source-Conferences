Title: [OLF 2019] Modern Puppet
Publication date: 2020-01-06
Playlist: 2019 Videos
Description: 
	Speaker: Steven Pritchard
Videographer: Ernest Parke

Over the last several years, the Puppet language and ecosystem have evolved and matured significantly. We’ll discuss modern Puppet language features such as strong typing, native iteration, and how Puppet abstracts data from code. We will also demo the latest in Puppet development tools, and we’ll show how Puppet testing works in a CI/CD environment. Finally, we’ll discuss whether or not configuration management is still relevant in a containerized world.
Captions: 
	00:00:01,689 --> 00:00:07,689
can I get a show of hands who here has

00:00:04,180 --> 00:00:08,890
ever used puppet ever wow it's a lot

00:00:07,689 --> 00:00:12,790
more of the room that I expected to be

00:00:08,890 --> 00:00:15,370
honest how many of you have used puppet

00:00:12,790 --> 00:00:19,119
but at one point or another but stopped

00:00:15,370 --> 00:00:22,420
using it for some reason or other okay a

00:00:19,119 --> 00:00:25,330
few of you I'll be honest I'm really

00:00:22,420 --> 00:00:26,560
aiming this at you people so and so I

00:00:25,330 --> 00:00:28,630
take it the rest of the room hasn't ever

00:00:26,560 --> 00:00:35,230
tried puppet so hopefully I give you

00:00:28,630 --> 00:00:35,950
some reasons to want to try it so just

00:00:35,230 --> 00:00:39,579
to set a baseline

00:00:35,950 --> 00:00:42,520
what is puppet so puppet is first of all

00:00:39,579 --> 00:00:46,539
configuration management tool so what

00:00:42,520 --> 00:00:49,860
that means is puppet will manage things

00:00:46,539 --> 00:00:52,980
like the state of packages services

00:00:49,860 --> 00:00:56,559
other kinds of resources it's

00:00:52,980 --> 00:00:59,769
implemented as a ruby based dsl

00:00:56,559 --> 00:01:02,340
domain-specific language so it looks

00:00:59,769 --> 00:01:05,920
like a programming language and it does

00:01:02,340 --> 00:01:08,770
stuff so it's a declarative language

00:01:05,920 --> 00:01:11,470
which is one of the interesting things

00:01:08,770 --> 00:01:15,550
about it you actually you model your

00:01:11,470 --> 00:01:17,020
desired state in the puppet language so

00:01:15,550 --> 00:01:19,390
what you're doing is you're defining an

00:01:17,020 --> 00:01:20,830
in state not necessarily steps that it

00:01:19,390 --> 00:01:22,540
takes to get to that in state so you

00:01:20,830 --> 00:01:24,340
know when you think of in terms of like

00:01:22,540 --> 00:01:26,050
writing a script it's like oh I need to

00:01:24,340 --> 00:01:28,780
install this package and then I need to

00:01:26,050 --> 00:01:30,910
then I need to you know make sure the

00:01:28,780 --> 00:01:32,590
contents of this file have this line or

00:01:30,910 --> 00:01:34,180
something like that and then I need to

00:01:32,590 --> 00:01:36,070
start at this service and maybe I need

00:01:34,180 --> 00:01:38,560
to you know mark that service to come up

00:01:36,070 --> 00:01:41,290
on boot so in puppet what you're gonna

00:01:38,560 --> 00:01:42,490
do is you're gonna say I want this

00:01:41,290 --> 00:01:44,290
package to be installed

00:01:42,490 --> 00:01:46,030
I want this file to be here have these

00:01:44,290 --> 00:01:48,610
permissions and have this have these

00:01:46,030 --> 00:01:51,130
contents I need this service to be

00:01:48,610 --> 00:01:53,920
running and set to enable and set it

00:01:51,130 --> 00:01:55,690
enabled on boot right and the first time

00:01:53,920 --> 00:01:57,850
you run it if none of those things match

00:01:55,690 --> 00:01:58,960
well puppets gonna make a match the next

00:01:57,850 --> 00:02:00,160
time you run it pup it's going to make

00:01:58,960 --> 00:02:01,510
sure that those things are all there and

00:02:00,160 --> 00:02:02,980
you know make sure they all match if

00:02:01,510 --> 00:02:04,660
somebody goes in and messes up that file

00:02:02,980 --> 00:02:06,970
the next time puppet runs it's going to

00:02:04,660 --> 00:02:08,470
fix that file if somebody stops that

00:02:06,970 --> 00:02:09,700
service the next time puppet runs it's

00:02:08,470 --> 00:02:14,230
going to start that service back up

00:02:09,700 --> 00:02:15,040
right so so like say you're modeling

00:02:14,230 --> 00:02:18,450
that that does

00:02:15,040 --> 00:02:23,950
tired state puppet is also agent-based

00:02:18,450 --> 00:02:27,189
it runs every half hour by default so if

00:02:23,950 --> 00:02:30,430
you install the puppet agent and start

00:02:27,189 --> 00:02:33,340
up the puppet service that that creates

00:02:30,430 --> 00:02:35,590
on the system then every half hour it's

00:02:33,340 --> 00:02:39,670
going to wake up and and it's going to

00:02:35,590 --> 00:02:40,989
run and so that enforces your desired

00:02:39,670 --> 00:02:45,639
state okay

00:02:40,989 --> 00:02:49,359
make sense all right so but puppets

00:02:45,639 --> 00:02:51,010
weird okay so I'm not gonna lie it's

00:02:49,359 --> 00:02:53,709
there are some things about it that make

00:02:51,010 --> 00:02:55,299
it a little bit difficult to learn first

00:02:53,709 --> 00:02:58,329
of all that whole declarative language

00:02:55,299 --> 00:03:00,609
thing is a little weird because again

00:02:58,329 --> 00:03:02,919
you're not you're not writing you know

00:03:00,609 --> 00:03:06,099
do this then this then this then this

00:03:02,919 --> 00:03:08,560
you're just saying I want this now you

00:03:06,099 --> 00:03:10,389
might say in order for this to work this

00:03:08,560 --> 00:03:11,980
other thing has to be there first so you

00:03:10,389 --> 00:03:17,379
can you could put some ordering in the

00:03:11,980 --> 00:03:19,209
language but you don't have to and yeah

00:03:17,379 --> 00:03:22,269
so that's that's weird speaking of

00:03:19,209 --> 00:03:24,129
ordering it can execute out of order so

00:03:22,269 --> 00:03:26,319
just because you went top-down with with

00:03:24,129 --> 00:03:27,370
something you know it's like okay I want

00:03:26,319 --> 00:03:29,290
to do this I want to do this I want to

00:03:27,370 --> 00:03:30,870
do this that's not necessarily the way

00:03:29,290 --> 00:03:33,400
puppets gonna actually do those things

00:03:30,870 --> 00:03:35,440
it it's it's gonna figure out

00:03:33,400 --> 00:03:39,430
dependencies and it's going to rearrange

00:03:35,440 --> 00:03:43,449
things based on a directed acyclic graph

00:03:39,430 --> 00:03:45,459
I think it uses so so that's a little

00:03:43,449 --> 00:03:46,750
weird so in the language itself one of

00:03:45,459 --> 00:03:47,470
the weird things is variables are

00:03:46,750 --> 00:03:51,459
constants

00:03:47,470 --> 00:03:53,319
you can set them once so that makes that

00:03:51,459 --> 00:03:55,419
makes a lot of things weird you know

00:03:53,319 --> 00:03:56,829
when you're thinking in terms of writing

00:03:55,419 --> 00:03:58,239
language but when you think about it in

00:03:56,829 --> 00:04:00,370
terms of the fact that things can be out

00:03:58,239 --> 00:04:02,379
of order it starts to make sense

00:04:00,370 --> 00:04:05,500
you get a value for that variable once

00:04:02,379 --> 00:04:09,189
then then puppet can use that variable

00:04:05,500 --> 00:04:10,449
anywhere else in in the code right so it

00:04:09,189 --> 00:04:12,519
just has to make sure that that whatever

00:04:10,449 --> 00:04:14,919
needed to evaluate to get that variable

00:04:12,519 --> 00:04:19,930
happened before it tries to determine

00:04:14,919 --> 00:04:21,489
what to do with that variable code

00:04:19,930 --> 00:04:24,340
actually compiles to a catalog the code

00:04:21,489 --> 00:04:26,169
doesn't like executes directly the way

00:04:24,340 --> 00:04:27,669
that it works even if you if you

00:04:26,169 --> 00:04:28,139
normally if you run a master agent kind

00:04:27,669 --> 00:04:30,960
of a

00:04:28,139 --> 00:04:33,449
I thing the code lives on the master

00:04:30,960 --> 00:04:35,340
compiles on the master compiles to what

00:04:33,449 --> 00:04:38,039
they call catalogue it's basically a big

00:04:35,340 --> 00:04:40,080
blob of JSON that gets shipped over to

00:04:38,039 --> 00:04:43,039
the agent the agent then iterates over

00:04:40,080 --> 00:04:46,680
the catalog in order to actually enforce

00:04:43,039 --> 00:04:48,270
configuration if you run puppet just on

00:04:46,680 --> 00:04:51,439
a system you know just do a puppet apply

00:04:48,270 --> 00:04:53,639
blah blah blah then puppet still

00:04:51,439 --> 00:04:59,090
compiles a catalog and applies it

00:04:53,639 --> 00:04:59,090
locally right so that's a weird thing

00:04:59,990 --> 00:05:05,099
another weird thing is you don't

00:05:02,909 --> 00:05:08,069
actually run puppet code directly

00:05:05,099 --> 00:05:10,529
generally speaking what you do is you

00:05:08,069 --> 00:05:14,370
write classes and then classes get

00:05:10,529 --> 00:05:17,689
assigned to nodes which is one of the

00:05:14,370 --> 00:05:20,039
ways that puppet scales like

00:05:17,689 --> 00:05:21,599
fantastically you just basically say

00:05:20,039 --> 00:05:23,069
okay these nodes have this

00:05:21,599 --> 00:05:24,479
classification these nodes have this

00:05:23,069 --> 00:05:27,750
classification you know so on and so

00:05:24,479 --> 00:05:29,370
forth and and everything just works but

00:05:27,750 --> 00:05:34,430
it's a it's a it's a thing that takes a

00:05:29,370 --> 00:05:41,250
little bit to wrap your brain around on

00:05:34,430 --> 00:05:44,580
the the kind of tooling side of this if

00:05:41,250 --> 00:05:48,810
you run a master agent kind of thing

00:05:44,580 --> 00:05:51,659
there used to be this passenger rack

00:05:48,810 --> 00:05:54,990
thing or a web Ric based puppet master

00:05:51,659 --> 00:05:57,060
way back in the day and anymore there's

00:05:54,990 --> 00:05:59,610
a java-based puppet master ooh actually

00:05:57,060 --> 00:06:04,529
uses JRuby because again puppets all

00:05:59,610 --> 00:06:05,969
based on Ruby and so that's that's

00:06:04,529 --> 00:06:07,949
that's a little weird because you end up

00:06:05,969 --> 00:06:09,960
having to do some you know you might

00:06:07,949 --> 00:06:11,849
have to do some Java tuning stuff but

00:06:09,960 --> 00:06:13,409
yet it's actually running Ruby code so

00:06:11,849 --> 00:06:18,029
if that whole things just a little

00:06:13,409 --> 00:06:19,650
bizarre and then there's a there's

00:06:18,029 --> 00:06:23,639
another piece called puppet DB that lets

00:06:19,650 --> 00:06:27,120
lets puppets store information about

00:06:23,639 --> 00:06:30,740
runs and things it it's it's it's useful

00:06:27,120 --> 00:06:33,270
but not required it's also Java based

00:06:30,740 --> 00:06:36,010
although oddly enough not written in

00:06:33,270 --> 00:06:37,510
Ruby or in Java

00:06:36,010 --> 00:06:40,240
so that one's a that one's a little

00:06:37,510 --> 00:06:42,280
strange so anyway that's probably not a

00:06:40,240 --> 00:06:44,740
complete list of reasons why pup it's

00:06:42,280 --> 00:06:48,910
kind of weird but but I just want to

00:06:44,740 --> 00:06:53,080
throw those things out there all right

00:06:48,910 --> 00:06:57,610
so puppets been around for a pretty long

00:06:53,080 --> 00:06:59,200
time Luke by by all accounts I'm getting

00:06:57,610 --> 00:07:01,750
most of this from like you know looking

00:06:59,200 --> 00:07:05,530
at old mailing list posts and and some

00:07:01,750 --> 00:07:08,140
stuff on on Wikipedia but I wasn't

00:07:05,530 --> 00:07:11,640
around well I was around I just wasn't

00:07:08,140 --> 00:07:13,300
doing puppet at the time but

00:07:11,640 --> 00:07:16,330
development's looks like it began

00:07:13,300 --> 00:07:18,790
somewhere around 2005 somewhere around

00:07:16,330 --> 00:07:20,200
2008 was when the first public releases

00:07:18,790 --> 00:07:21,520
came out the first release and

00:07:20,200 --> 00:07:24,010
announcements that I could find were

00:07:21,520 --> 00:07:26,620
from 2009 but those were versions that I

00:07:24,010 --> 00:07:28,330
know weren't the first versions so I

00:07:26,620 --> 00:07:31,690
don't know where the release notes are

00:07:28,330 --> 00:07:33,280
for those early versions the first

00:07:31,690 --> 00:07:35,590
commercial release the first the first

00:07:33,280 --> 00:07:37,960
release that puppet did as a company of

00:07:35,590 --> 00:07:41,260
puppet enterprise or what's in a puppet

00:07:37,960 --> 00:07:43,840
enterprise anyway it was in 2011 so like

00:07:41,260 --> 00:07:46,300
say it's it's definitely been around for

00:07:43,840 --> 00:07:48,610
a bit but the part that I care about

00:07:46,300 --> 00:07:50,740
personally is what I'm gonna call the

00:07:48,610 --> 00:07:53,470
modern era of puppet okay this started

00:07:50,740 --> 00:07:54,940
with a release of puppet for puppet for

00:07:53,470 --> 00:07:57,400
was a pretty dramatic shift in the

00:07:54,940 --> 00:07:58,720
language made a lot of changes it was a

00:07:57,400 --> 00:08:02,610
pretty dramatic shift and a lot of the

00:07:58,720 --> 00:08:06,370
tooling - that happened in April of 2015

00:08:02,610 --> 00:08:09,280
and then there continued to be some

00:08:06,370 --> 00:08:11,860
shake you know things shakin out for the

00:08:09,280 --> 00:08:16,420
next couple of years until about puppet

00:08:11,860 --> 00:08:20,200
4.10 so really if you've used puppet but

00:08:16,420 --> 00:08:21,850
not but anything before 4.10 then you

00:08:20,200 --> 00:08:28,690
weren't using what I would call modern

00:08:21,850 --> 00:08:30,700
puppet okay so just to give you an idea

00:08:28,690 --> 00:08:31,870
and that was only April of 2017 so we're

00:08:30,700 --> 00:08:36,099
only talking two and a half years ago

00:08:31,870 --> 00:08:39,310
right so alright so let's talk about

00:08:36,099 --> 00:08:43,570
some things that changed with this this

00:08:39,310 --> 00:08:47,350
modern era of puppet first of all the

00:08:43,570 --> 00:08:49,870
packaging from puppet they started using

00:08:47,350 --> 00:08:51,520
what they started calling all-in-one

00:08:49,870 --> 00:08:53,470
Packaging I noticed that the AIO thing

00:08:51,520 --> 00:08:55,270
has kind of disappeared from most of the

00:08:53,470 --> 00:08:57,640
documentation these days but but the

00:08:55,270 --> 00:08:59,920
general idea hasn't changed instead of

00:08:57,640 --> 00:09:02,500
just having like a puppet package that

00:08:59,920 --> 00:09:04,900
would pull in like system Ruby and you

00:09:02,500 --> 00:09:07,690
know system open SSL and a bunch of

00:09:04,900 --> 00:09:09,190
other stuff basically puppets started

00:09:07,690 --> 00:09:13,060
building all of that into the puppet

00:09:09,190 --> 00:09:14,830
agent package so the version of Ruby

00:09:13,060 --> 00:09:16,750
that works with that version of puppet

00:09:14,830 --> 00:09:19,630
is is bundled in you don't have to have

00:09:16,750 --> 00:09:22,930
a system Ruby for it to work you know

00:09:19,630 --> 00:09:24,670
most of most not all but most of the OS

00:09:22,930 --> 00:09:26,740
dependencies are all it contained in

00:09:24,670 --> 00:09:29,680
that one package that way you know if

00:09:26,740 --> 00:09:32,650
you install a puppet agent on you know

00:09:29,680 --> 00:09:37,210
rl5 then you know it's going to work

00:09:32,650 --> 00:09:40,480
just as well as it does on rl8 because i

00:09:37,210 --> 00:09:45,490
can guarantee you that the system Ruby

00:09:40,480 --> 00:09:48,610
is way different on those two all right

00:09:45,490 --> 00:09:51,100
so speaking of Ruby when you're actually

00:09:48,610 --> 00:09:53,710
developing puppet you have to do far

00:09:51,100 --> 00:09:55,240
less Ruby now than you used to it used

00:09:53,710 --> 00:09:57,520
to be that you could do a lot of stuff

00:09:55,240 --> 00:09:59,860
you know in the puppet DSL but if you

00:09:57,520 --> 00:10:02,050
wanted to extend it pretty much at all

00:09:59,860 --> 00:10:04,600
you had to dip out to do it to writing

00:10:02,050 --> 00:10:07,839
things in Ruby which is a little bit you

00:10:04,600 --> 00:10:09,400
know it's a little bit of a shift one of

00:10:07,839 --> 00:10:13,240
the big places where you'd have to do

00:10:09,400 --> 00:10:16,779
that is templates puppet would use

00:10:13,240 --> 00:10:19,750
embedded Ruby templates okay

00:10:16,779 --> 00:10:23,200
well now there's there's a file format

00:10:19,750 --> 00:10:26,650
called EPP embedded puppet that looks an

00:10:23,200 --> 00:10:28,140
awful lot like ER B you know same kind

00:10:26,650 --> 00:10:30,250
of tags and stuff a lot of the same

00:10:28,140 --> 00:10:33,880
things actually takes parameters though

00:10:30,250 --> 00:10:35,709
which is kind of cool and in line when

00:10:33,880 --> 00:10:38,410
you put code in a template it actually

00:10:35,709 --> 00:10:39,850
uses the deep puppet DSL so you don't

00:10:38,410 --> 00:10:43,990
have to learn two languages in order to

00:10:39,850 --> 00:10:46,300
do the thing also there's native puppet

00:10:43,990 --> 00:10:47,650
functions now used to be that if you

00:10:46,300 --> 00:10:49,120
wanted to have a function that did some

00:10:47,650 --> 00:10:51,070
random thing you would have to write it

00:10:49,120 --> 00:10:56,320
in Ruby and now you can write functions

00:10:51,070 --> 00:10:58,800
in the puppet language itself which is

00:10:56,320 --> 00:10:58,800
pretty cool

00:10:59,920 --> 00:11:07,900
okay so next thing native iteration so

00:11:03,410 --> 00:11:10,580
it used to be that puppet had a from

00:11:07,900 --> 00:11:12,520
before what the modern era puppet had a

00:11:10,580 --> 00:11:15,200
concept of things like arrays and hashes

00:11:12,520 --> 00:11:16,310
but you couldn't iterate over them or

00:11:15,200 --> 00:11:18,740
you couldn't really do much of anything

00:11:16,310 --> 00:11:20,720
with them in the language itself you

00:11:18,740 --> 00:11:23,740
could pass them off to - Ruby functions

00:11:20,720 --> 00:11:26,270
or you could use them in embedded Ruby

00:11:23,740 --> 00:11:28,280
templates and you know you could iterate

00:11:26,270 --> 00:11:29,870
over them and stuff in Ruby but you

00:11:28,280 --> 00:11:33,080
couldn't do it in the puppet language

00:11:29,870 --> 00:11:37,730
itself so in puppet for that was fixed

00:11:33,080 --> 00:11:40,220
so any of you that did puppet back in

00:11:37,730 --> 00:11:41,720
the day you may have done there's a

00:11:40,220 --> 00:11:44,060
function called create resources you

00:11:41,720 --> 00:11:45,890
could basically pass it a hash of you

00:11:44,060 --> 00:11:48,320
know tell resource type pass it a hash

00:11:45,890 --> 00:11:51,620
of titles and and parameters are

00:11:48,320 --> 00:11:54,530
attributes for those for those resources

00:11:51,620 --> 00:11:56,150
and it would it would create all those

00:11:54,530 --> 00:11:59,570
in the catalog right well you can do

00:11:56,150 --> 00:12:02,180
that natively in the DSL now so if we

00:11:59,570 --> 00:12:05,450
had a if we have a hash named dollar

00:12:02,180 --> 00:12:06,920
packages we can do dot e each you'll

00:12:05,450 --> 00:12:09,350
note this looks an awful lot like how

00:12:06,920 --> 00:12:11,240
you iterate in Ruby except that instead

00:12:09,350 --> 00:12:14,180
of having do and then the pipes you have

00:12:11,240 --> 00:12:16,130
the pipes and then the curly braces so

00:12:14,180 --> 00:12:20,300
it's all the hints it's it's Ruby ish

00:12:16,130 --> 00:12:21,650
just not quite but anyway I can say okay

00:12:20,300 --> 00:12:23,840
I'm gonna I'm gonna take every string

00:12:21,650 --> 00:12:25,060
and every value I'm gonna say each one

00:12:23,840 --> 00:12:28,100
of those things is going to be a package

00:12:25,060 --> 00:12:31,040
that that's the gonna be the the package

00:12:28,100 --> 00:12:32,600
name and any attributes we're just going

00:12:31,040 --> 00:12:35,750
to expand those out like we put those in

00:12:32,600 --> 00:12:37,850
line right which but this also means

00:12:35,750 --> 00:12:40,520
that in here you could like add extra

00:12:37,850 --> 00:12:42,820
stuff or you know modify those values

00:12:40,520 --> 00:12:44,990
you know if you if you wanted to do some

00:12:42,820 --> 00:12:47,540
you know some manipulation on those

00:12:44,990 --> 00:12:53,630
things so native iteration is a good

00:12:47,540 --> 00:12:55,190
thing strong typing so in early versions

00:12:53,630 --> 00:12:57,590
of puppet everything was a string

00:12:55,190 --> 00:13:00,920
everything was a string however you used

00:12:57,590 --> 00:13:02,390
it it was still string and it would you

00:13:00,920 --> 00:13:04,190
know you could do math on strings and it

00:13:02,390 --> 00:13:06,560
would do the right thing you know things

00:13:04,190 --> 00:13:10,130
like that but but ultimately everything

00:13:06,560 --> 00:13:12,840
was a string so now

00:13:10,130 --> 00:13:14,570
puppet supports data types that are

00:13:12,840 --> 00:13:17,700
at least roughly equivalent to

00:13:14,570 --> 00:13:22,110
underlying ruby types so you know you've

00:13:17,700 --> 00:13:24,330
got things like string array hash

00:13:22,110 --> 00:13:28,200
boolean you know there's numeric types

00:13:24,330 --> 00:13:29,460
integer and and float and you know all

00:13:28,200 --> 00:13:31,350
sorts of things like that there's

00:13:29,460 --> 00:13:33,750
there's actually there's actually a

00:13:31,350 --> 00:13:34,740
whole bunch of data types and and some

00:13:33,750 --> 00:13:36,930
of the things that you can do with some

00:13:34,740 --> 00:13:39,480
of the data types are kind of fun but

00:13:36,930 --> 00:13:42,510
this completely eliminates the need for

00:13:39,480 --> 00:13:44,910
a whole class of functions that were in

00:13:42,510 --> 00:13:48,450
the the puppet labs standard Lib that

00:13:44,910 --> 00:13:49,650
that would validate inputs to classes

00:13:48,450 --> 00:13:51,330
like you know it's like I got this

00:13:49,650 --> 00:13:52,710
variable but it could be a string it

00:13:51,330 --> 00:13:54,360
could be a hash it could be a number I

00:13:52,710 --> 00:13:56,550
don't know but I need it to be an array

00:13:54,360 --> 00:13:58,890
right so you'd have to you'd have to

00:13:56,550 --> 00:14:01,380
start every class with validate

00:13:58,890 --> 00:14:03,180
underscore array validate underscore

00:14:01,380 --> 00:14:05,040
hash you know and you'd end up writing

00:14:03,180 --> 00:14:06,750
all this validation logic before you

00:14:05,040 --> 00:14:08,810
actually did anything right now you

00:14:06,750 --> 00:14:11,220
don't have to you just declare the the

00:14:08,810 --> 00:14:17,630
parameters as the appropriate data type

00:14:11,220 --> 00:14:17,630
done so it simplifies code substantially

00:14:19,940 --> 00:14:26,460
we also then have structured facts which

00:14:24,000 --> 00:14:28,710
is is kind of a cool thing so if you

00:14:26,460 --> 00:14:32,160
don't know puppet one of the one of the

00:14:28,710 --> 00:14:34,020
core things in puppet is this thing

00:14:32,160 --> 00:14:37,350
called facts and facts are just bits of

00:14:34,020 --> 00:14:40,620
information about a system right so it

00:14:37,350 --> 00:14:42,330
could be the hostname could be the you

00:14:40,620 --> 00:14:45,030
know the the architecture could be the

00:14:42,330 --> 00:14:48,560
OS name you know things like that right

00:14:45,030 --> 00:14:52,710
so it used to be all facts for Strings

00:14:48,560 --> 00:14:55,140
even if the fact contained like a list

00:14:52,710 --> 00:14:57,660
of things it would give you a string of

00:14:55,140 --> 00:15:01,140
comma separated values right and so you

00:14:57,660 --> 00:15:02,670
would have to like you would have to

00:15:01,140 --> 00:15:03,900
jump through all kinds of Hoops in order

00:15:02,670 --> 00:15:06,390
to be able to do anything useful with

00:15:03,900 --> 00:15:08,730
that right well now if a thing is

00:15:06,390 --> 00:15:11,160
supposed to you know instead of a string

00:15:08,730 --> 00:15:13,110
of comma separated values which by the

00:15:11,160 --> 00:15:14,730
way with native iteration we could just

00:15:13,110 --> 00:15:17,160
split and iterate over if we wanted to

00:15:14,730 --> 00:15:22,650
but instead we'll actually get a fact

00:15:17,160 --> 00:15:25,130
that is an array so it used to be like

00:15:22,650 --> 00:15:29,910
there was a

00:15:25,130 --> 00:15:31,860
operating system mage release fact and

00:15:29,910 --> 00:15:34,260
that you know but now we can actually

00:15:31,860 --> 00:15:38,880
say oh I want the I want the fact that

00:15:34,260 --> 00:15:41,610
is OS release major right and just use

00:15:38,880 --> 00:15:43,940
it as a hash so that's just a one

00:15:41,610 --> 00:15:43,940
example

00:15:46,580 --> 00:15:55,890
okay so Huayra is a thing that was

00:15:52,020 --> 00:15:58,680
introduced somewhere in the puppet three

00:15:55,890 --> 00:16:02,850
I think time frame don't remember

00:15:58,680 --> 00:16:06,510
exactly when but basically what it is is

00:16:02,850 --> 00:16:08,190
it's a it's a key value store kind of a

00:16:06,510 --> 00:16:11,490
thing that you can use as a data layer

00:16:08,190 --> 00:16:13,350
for your puppet code okay and the reason

00:16:11,490 --> 00:16:16,920
it's called Huayra is because the way it

00:16:13,350 --> 00:16:19,290
uses a hierarchy of values it's

00:16:16,920 --> 00:16:22,440
generally yeah mole files you can use

00:16:19,290 --> 00:16:23,520
JSON you can use you can use other

00:16:22,440 --> 00:16:26,160
things

00:16:23,520 --> 00:16:26,640
it's a has pluggable back-end and

00:16:26,160 --> 00:16:32,000
whatnot

00:16:26,640 --> 00:16:36,210
but anyway the the format of higher

00:16:32,000 --> 00:16:42,380
changed in version 5 which is the thing

00:16:36,210 --> 00:16:48,690
that came in puppet 4.10 so higher v 5

00:16:42,380 --> 00:16:51,210
lets you do you can always have a like a

00:16:48,690 --> 00:16:54,480
hierarchy for the whole system but doing

00:16:51,210 --> 00:16:57,120
like per puppet environment hierarchies

00:16:54,480 --> 00:16:59,370
was difficult so now not only can you do

00:16:57,120 --> 00:17:01,380
per environment hierarchies but you can

00:16:59,370 --> 00:17:04,709
also do higher in module so you can have

00:17:01,380 --> 00:17:06,390
per module hierarchies and so there's

00:17:04,709 --> 00:17:09,839
lots of ways to get your data plugged in

00:17:06,390 --> 00:17:12,510
and then another cool thing is there's a

00:17:09,839 --> 00:17:14,760
key reserved key called lookup

00:17:12,510 --> 00:17:18,570
underscore options that you can put in

00:17:14,760 --> 00:17:20,400
Huayra to define like merge behavior so

00:17:18,570 --> 00:17:25,980
you know if you've got all these layers

00:17:20,400 --> 00:17:27,959
of higher will win but you can turn on

00:17:25,980 --> 00:17:30,390
merge behaviors where you can say okay

00:17:27,959 --> 00:17:31,530
this is an array you know just mash all

00:17:30,390 --> 00:17:34,320
these together but give me all the

00:17:31,530 --> 00:17:36,900
unique values or you can say you know

00:17:34,320 --> 00:17:38,690
for hash for hashes i want to deep merge

00:17:36,900 --> 00:17:41,940
all of those

00:17:38,690 --> 00:17:45,539
you know any results that I get and you

00:17:41,940 --> 00:17:47,909
know and get all those results back so

00:17:45,539 --> 00:17:50,549
now you can put that in higher instead

00:17:47,909 --> 00:17:55,049
of having to explicitly call a the

00:17:50,549 --> 00:17:56,520
lookup function with with all these all

00:17:55,049 --> 00:18:00,929
these things to tell it you know emerged

00:17:56,520 --> 00:18:02,640
strategy and whatever else and the

00:18:00,929 --> 00:18:03,659
reason why that matters is because

00:18:02,640 --> 00:18:05,309
there's this thing called automatic

00:18:03,659 --> 00:18:08,309
parameter lookup now this isn't this

00:18:05,309 --> 00:18:11,909
isn't a new thing in in puppet but I

00:18:08,309 --> 00:18:13,799
honestly think that people don't well

00:18:11,909 --> 00:18:16,919
it's it's it's hard to understand and

00:18:13,799 --> 00:18:20,399
it's things that people don't use nearly

00:18:16,919 --> 00:18:23,010
to its full extent so the way this works

00:18:20,399 --> 00:18:25,169
is I've got this class named my class

00:18:23,010 --> 00:18:28,679
and I've got a parameter named dollar

00:18:25,169 --> 00:18:31,620
parameter right so puppet is gonna look

00:18:28,679 --> 00:18:34,559
in Huayra force for a key called my

00:18:31,620 --> 00:18:37,950
class colon colon parameter and and it's

00:18:34,559 --> 00:18:40,890
just gonna automatically drop that in to

00:18:37,950 --> 00:18:44,070
this class as this dollar parameter okay

00:18:40,890 --> 00:18:46,710
so if that were a hash you know

00:18:44,070 --> 00:18:49,260
somewhere in Huayra I can say you know

00:18:46,710 --> 00:18:51,360
look up options and you know merge

00:18:49,260 --> 00:18:53,820
strategy deep and tell it's a you know

00:18:51,360 --> 00:18:56,159
deep merge that and and I don't and and

00:18:53,820 --> 00:18:57,419
so the automatic parameter lookup just

00:18:56,159 --> 00:18:59,039
works

00:18:57,419 --> 00:19:01,200
in older versions of puppet you would

00:18:59,039 --> 00:19:02,610
have to do things like you'd have to set

00:19:01,200 --> 00:19:04,710
this you know you'd have to say string

00:19:02,610 --> 00:19:06,330
dollar primer equal and then you'd have

00:19:04,710 --> 00:19:08,520
to do the function call in order to get

00:19:06,330 --> 00:19:15,840
the the data back in that deep merged

00:19:08,520 --> 00:19:17,850
state okay so another thing that's cool

00:19:15,840 --> 00:19:20,789
because now we have all this cool stuff

00:19:17,850 --> 00:19:25,950
that we can do and it's so much easier

00:19:20,789 --> 00:19:29,220
to write modules that now the puppet

00:19:25,950 --> 00:19:31,110
Forge is so much better than it used to

00:19:29,220 --> 00:19:33,360
be when I got started it really wasn't

00:19:31,110 --> 00:19:36,600
that long ago most of the modules on the

00:19:33,360 --> 00:19:39,059
puppet Forge were like maybe okay

00:19:36,600 --> 00:19:40,320
examples of you know like I'd go look at

00:19:39,059 --> 00:19:43,470
somebody's code and try to figure out

00:19:40,320 --> 00:19:46,530
how they implemented a thing but I would

00:19:43,470 --> 00:19:48,390
almost never just go grab it and use the

00:19:46,530 --> 00:19:50,250
the modules they were just they just the

00:19:48,390 --> 00:19:51,260
the quality just wasn't there they

00:19:50,250 --> 00:19:53,630
weren't

00:19:51,260 --> 00:19:55,580
figure Bowl you know there were just a

00:19:53,630 --> 00:19:58,190
whole lot of reasons why the modules off

00:19:55,580 --> 00:20:00,770
the forge weren't awesome but nowadays

00:19:58,190 --> 00:20:02,150
if you go to the fortune puppet comm you

00:20:00,770 --> 00:20:05,390
can find modules to do just about

00:20:02,150 --> 00:20:07,490
anything so honestly if you want to use

00:20:05,390 --> 00:20:08,750
puppet and a lot of cases you don't

00:20:07,490 --> 00:20:10,070
really have to write a whole lot of code

00:20:08,750 --> 00:20:11,930
you can just go grab other people's

00:20:10,070 --> 00:20:13,820
modules and just make sure that you're

00:20:11,930 --> 00:20:15,560
getting your classification right and

00:20:13,820 --> 00:20:17,690
everything will you know maybe add some

00:20:15,560 --> 00:20:19,610
parameters to you know some Huayra

00:20:17,690 --> 00:20:25,910
data for some of those modules and

00:20:19,610 --> 00:20:28,760
you're set okay all right

00:20:25,910 --> 00:20:30,980
if any of you use puppet enterprise you

00:20:28,760 --> 00:20:32,510
know a few years ago you probably had

00:20:30,980 --> 00:20:37,160
some exposure to this thing called him

00:20:32,510 --> 00:20:39,470
collective personally I was a big fan of

00:20:37,160 --> 00:20:41,470
him collective em Collective would let

00:20:39,470 --> 00:20:44,510
you do things like trigger puppet runs

00:20:41,470 --> 00:20:48,080
start and stop services on things on it

00:20:44,510 --> 00:20:50,810
you know kind of an ad-hoc basis that

00:20:48,080 --> 00:20:52,700
sort of thing that actually got pulled

00:20:50,810 --> 00:20:54,940
out of puppet enterprise completely

00:20:52,700 --> 00:20:58,880
puppet enterprise now uses this thing

00:20:54,940 --> 00:21:02,600
called pxp in order to control the

00:20:58,880 --> 00:21:04,760
agents remotely it's a it's a it's a

00:21:02,600 --> 00:21:06,290
small subset of the functionality than

00:21:04,760 --> 00:21:08,720
in collective had but they completely

00:21:06,290 --> 00:21:10,960
ripped them collective out but that's

00:21:08,720 --> 00:21:13,400
okay because if you like him collective

00:21:10,960 --> 00:21:16,550
the guy that the guy that wrote it

00:21:13,400 --> 00:21:19,250
originally has started a project called

00:21:16,550 --> 00:21:21,830
quarry a quarry at IO makes it a lot

00:21:19,250 --> 00:21:24,080
easier to install him collective he's

00:21:21,830 --> 00:21:25,640
actively maintaining it and it includes

00:21:24,080 --> 00:21:27,350
pretty much all of them the oldham

00:21:25,640 --> 00:21:33,500
collective functionality plus he's added

00:21:27,350 --> 00:21:34,790
a bunch of stuff so the UNIX that you

00:21:33,500 --> 00:21:36,860
don't you don't have to use them

00:21:34,790 --> 00:21:43,850
collective if you don't want to but but

00:21:36,860 --> 00:21:48,200
it is still around all right so then the

00:21:43,850 --> 00:21:50,180
way that puppet works where you know

00:21:48,200 --> 00:21:52,960
you're you're just defining an in-state

00:21:50,180 --> 00:21:56,000
and everything is great for maintaining

00:21:52,960 --> 00:21:58,100
like a baseline OS it's really great for

00:21:56,000 --> 00:21:59,360
compliance which by the way I work for a

00:21:58,100 --> 00:22:01,340
company that does an automated

00:21:59,360 --> 00:22:03,290
compliance tool that's open-source

00:22:01,340 --> 00:22:05,650
that's based on puppet and I have

00:22:03,290 --> 00:22:12,190
t-shirts for that if anyone wants one

00:22:05,650 --> 00:22:15,470
but yeah one of those t-shirts anyway

00:22:12,190 --> 00:22:18,530
but that said there are times where what

00:22:15,470 --> 00:22:22,840
you need to do is just trigger an action

00:22:18,530 --> 00:22:25,370
right you know completely outside of the

00:22:22,840 --> 00:22:29,480
you know the normal baseline stuff that

00:22:25,370 --> 00:22:31,130
puppet does so this is actually why a

00:22:29,480 --> 00:22:32,660
few years ago I was - you know people

00:22:31,130 --> 00:22:34,460
were like you know trying to do an

00:22:32,660 --> 00:22:35,930
ansible versus puppet kind of a thing

00:22:34,460 --> 00:22:37,550
I'm like they're not really the same

00:22:35,930 --> 00:22:40,970
they don't live in the same space you

00:22:37,550 --> 00:22:42,860
know you can set up puppet for you know

00:22:40,970 --> 00:22:44,540
maintaining a baseline and use ansible

00:22:42,860 --> 00:22:45,890
in order to like you know trigger a

00:22:44,540 --> 00:22:47,090
deployment or something like that there

00:22:45,890 --> 00:22:48,920
you know things that are things that are

00:22:47,090 --> 00:22:51,890
specifically timed one-off kinds of

00:22:48,920 --> 00:22:53,540
tasks all right well puppet listen to

00:22:51,890 --> 00:22:55,040
their customers their customers wanted

00:22:53,540 --> 00:23:01,120
this right so they came up with this

00:22:55,040 --> 00:23:04,340
tool called bolt and they came up with

00:23:01,120 --> 00:23:06,860
tasks and plants so what tasks are our

00:23:04,340 --> 00:23:08,420
scripts that can be written in any

00:23:06,860 --> 00:23:09,620
language as long as it interpreters

00:23:08,420 --> 00:23:11,990
available on the system where you're

00:23:09,620 --> 00:23:14,830
trying to run it and then they have some

00:23:11,990 --> 00:23:18,470
structured metadata that defines

00:23:14,830 --> 00:23:22,250
parameters and whatnot plans are written

00:23:18,470 --> 00:23:25,540
in the puppet language and they can be

00:23:22,250 --> 00:23:28,010
used to drive other plans tasks and

00:23:25,540 --> 00:23:30,620
blocks of puppet code and various other

00:23:28,010 --> 00:23:32,870
things and then like say bolt is the

00:23:30,620 --> 00:23:38,060
tool that is used to run all these

00:23:32,870 --> 00:23:41,150
things it's it supports SSH

00:23:38,060 --> 00:23:45,260
WMI has a local transport so you can use

00:23:41,150 --> 00:23:48,200
it on a local system and it's got a

00:23:45,260 --> 00:23:51,860
whole plug-in interface thing also it

00:23:48,200 --> 00:23:56,170
can use the exp agent that I mentioned

00:23:51,860 --> 00:24:01,220
before in order to trigger tasks so

00:23:56,170 --> 00:24:02,960
anyway this has the cool side effect

00:24:01,220 --> 00:24:07,430
that because you can actually execute

00:24:02,960 --> 00:24:10,490
blocks of puppet code using a plan you

00:24:07,430 --> 00:24:13,340
can build your puppet code to maintain a

00:24:10,490 --> 00:24:15,500
baseline but if you need to like you

00:24:13,340 --> 00:24:17,030
know start up a cluster that has to come

00:24:15,500 --> 00:24:18,650
you know where nodes have to come up in

00:24:17,030 --> 00:24:20,180
a specific order we

00:24:18,650 --> 00:24:23,120
than having to write complicated logic

00:24:20,180 --> 00:24:25,970
in your puppet code to like you know

00:24:23,120 --> 00:24:27,230
only you know start a start a service if

00:24:25,970 --> 00:24:28,820
this other thing is listening or

00:24:27,230 --> 00:24:30,320
something like that that the stuff that

00:24:28,820 --> 00:24:32,570
it's all kind of crazy complicated to do

00:24:30,320 --> 00:24:35,660
in native puppet you can just write a

00:24:32,570 --> 00:24:37,520
script that does you know that as a plan

00:24:35,660 --> 00:24:38,450
that does you know this thing then this

00:24:37,520 --> 00:24:42,170
thing then this thing and you can

00:24:38,450 --> 00:24:44,059
actually have it just apply you know a

00:24:42,170 --> 00:24:46,700
specific class to a specific set of

00:24:44,059 --> 00:24:48,080
nodes when that's done apply a class to

00:24:46,700 --> 00:24:49,640
another set of notes and then you can

00:24:48,080 --> 00:24:51,260
let the puppet agent just maintain all

00:24:49,640 --> 00:24:53,059
that going forward so something that's

00:24:51,260 --> 00:24:56,330
stopped it'll gets restarted that sort

00:24:53,059 --> 00:24:58,309
of thing right so it's it's a really

00:24:56,330 --> 00:25:06,400
cool thing that works really nicely with

00:24:58,309 --> 00:25:08,660
puppet so if you're writing puppet code

00:25:06,400 --> 00:25:09,710
one of the cool things that we have now

00:25:08,660 --> 00:25:14,050
is the thing called the puppet

00:25:09,710 --> 00:25:17,540
development kit PDK so this is used to

00:25:14,050 --> 00:25:20,090
generate new modules and actually keep

00:25:17,540 --> 00:25:21,800
the modules going there to work with

00:25:20,090 --> 00:25:23,360
their whole lifecycle it includes

00:25:21,800 --> 00:25:25,640
templates for building puppet modules

00:25:23,360 --> 00:25:28,960
classes defined types a whole bunch of

00:25:25,640 --> 00:25:33,410
other things includes tools for checking

00:25:28,960 --> 00:25:36,410
syntax and style of puppet code module

00:25:33,410 --> 00:25:39,860
metadata gamal data so on and so forth

00:25:36,410 --> 00:25:43,160
and most importantly for the same reason

00:25:39,860 --> 00:25:45,770
that the puppet agent bundles its own

00:25:43,160 --> 00:25:48,200
Ruby PDK bundles its own Ruby so that

00:25:45,770 --> 00:25:50,330
and all the gems that are needed to do

00:25:48,200 --> 00:25:52,700
all that stuff so you don't have to

00:25:50,330 --> 00:25:54,260
worry about when you install PDK you

00:25:52,700 --> 00:25:56,510
don't have to worry about then having

00:25:54,260 --> 00:25:58,610
the right system Ruby version or mess

00:25:56,510 --> 00:26:06,860
with our VM or any of that kind of stuff

00:25:58,610 --> 00:26:09,880
so I'm gonna do a quick demo if the demo

00:26:06,860 --> 00:26:13,099
gods will have it

00:26:09,880 --> 00:26:13,099
[Music]

00:26:24,190 --> 00:26:35,240
everybody see that okay all right so I'm

00:26:28,550 --> 00:26:38,660
gonna do PDK new module and I'm gonna do

00:26:35,240 --> 00:26:46,340
my initials as the author and we're

00:26:38,660 --> 00:26:48,440
gonna do a PDK demo ignore some of that

00:26:46,340 --> 00:26:52,640
crap I've my Ruby environment seems to

00:26:48,440 --> 00:26:53,660
be a mess at the moment but anyway the

00:26:52,640 --> 00:26:55,910
part we care abouts down here at the

00:26:53,660 --> 00:26:58,100
bottom so you have a puppet Forge

00:26:55,910 --> 00:27:04,190
username at it here let's pretend that's

00:26:58,100 --> 00:27:10,130
true add that we're gonna say this is

00:27:04,190 --> 00:27:11,720
Apache 2.0 and then I'm I don't really

00:27:10,130 --> 00:27:14,570
like Windows so I'm not gonna support

00:27:11,720 --> 00:27:17,690
Windows but I like fedora so I'm gonna

00:27:14,570 --> 00:27:20,540
add Fedora in so these this is the the

00:27:17,690 --> 00:27:23,510
OSCE's we're gonna say are supported hit

00:27:20,540 --> 00:27:28,370
enter module metadata will be generated

00:27:23,510 --> 00:27:34,820
based on this information yes and out

00:27:28,370 --> 00:27:40,610
spits a new module called PDK demo all

00:27:34,820 --> 00:27:42,350
right so this all just gets created for

00:27:40,610 --> 00:27:45,290
you okay and so this is basically just

00:27:42,350 --> 00:27:51,380
an empty module that you can put things

00:27:45,290 --> 00:27:53,330
in if we look at the metadata JSON it's

00:27:51,380 --> 00:28:01,460
all that stuff that we just answered and

00:27:53,330 --> 00:28:07,280
it does this all for you so now if we

00:28:01,460 --> 00:28:12,680
say PDK new class and we're gonna make a

00:28:07,280 --> 00:28:15,610
class the same name as the module again

00:28:12,680 --> 00:28:19,150
please ignore all the ignoring lines I

00:28:15,610 --> 00:28:21,650
forgot to fix that before I came in here

00:28:19,150 --> 00:28:22,670
but the two lines at the bottom they're

00:28:21,650 --> 00:28:26,780
the ones that we care about

00:28:22,670 --> 00:28:27,830
it created manifest Senate PP and then

00:28:26,780 --> 00:28:34,039
it also created

00:28:27,830 --> 00:28:40,519
test for it okay so if we look at em in

00:28:34,039 --> 00:28:44,299
a fists and npp yeah it created an empty

00:28:40,519 --> 00:28:47,149
class including documentation that can

00:28:44,299 --> 00:28:49,149
get pulled out using puppet strings and

00:28:47,149 --> 00:28:53,649
you know we can just go from there so

00:28:49,149 --> 00:29:06,940
you know we do our editing and we say

00:28:53,649 --> 00:29:06,940
I'm gonna do because I'm an imaginative

00:29:11,860 --> 00:29:26,950
and I'm gonna say I'm gonna put this in

00:29:23,330 --> 00:29:33,110
here and so we do that and then we say

00:29:26,950 --> 00:29:40,159
PDK validate and it's going to do syntax

00:29:33,110 --> 00:29:42,710
checking and whatnot for us and if we

00:29:40,159 --> 00:29:45,590
look I got a warning everything passed

00:29:42,710 --> 00:29:47,389
but do you give me a warning that

00:29:45,590 --> 00:29:49,519
there's an optional parameter listed

00:29:47,389 --> 00:29:52,240
before required parameters okay

00:29:49,519 --> 00:29:56,330
did that on purpose I knew I was doing

00:29:52,240 --> 00:29:58,279
because that is so weird

00:29:56,330 --> 00:29:59,419
oh yeah and if Ida if I'd written this

00:29:58,279 --> 00:30:03,139
out then would have told me the same

00:29:59,419 --> 00:30:06,830
thing so if I change the order of those

00:30:03,139 --> 00:30:13,190
around and then PDK validate again then

00:30:06,830 --> 00:30:15,919
it'll come up clean and so all of our

00:30:13,190 --> 00:30:19,789
syntax is checked and everything else if

00:30:15,919 --> 00:30:23,419
we do PDK test unit it'll actually run

00:30:19,789 --> 00:30:25,220
the the r-spec tests which by default

00:30:23,419 --> 00:30:27,440
what gets generated is just a test that

00:30:25,220 --> 00:30:31,870
tests that the code compiles and that's

00:30:27,440 --> 00:30:34,850
it so you can certainly do more but oh

00:30:31,870 --> 00:30:37,680
look it failed okay

00:30:34,850 --> 00:30:44,560
I don't even know why

00:30:37,680 --> 00:30:45,670
but let's see here usually you'd end up

00:30:44,560 --> 00:30:49,540
having to scroll back a bit

00:30:45,670 --> 00:30:51,250
oh yeah because I because I had a

00:30:49,540 --> 00:30:54,100
required parameter and I didn't I didn't

00:30:51,250 --> 00:30:56,110
specify that as a parameter so they blew

00:30:54,100 --> 00:30:57,340
up just like I expected it to I just had

00:30:56,110 --> 00:30:59,800
already forgotten that I expected it to

00:30:57,340 --> 00:31:02,190
do that anyway so but you get the idea

00:30:59,800 --> 00:31:05,320
you can sit here a lot of rinse repeat

00:31:02,190 --> 00:31:09,670
so that's the the first big thing that

00:31:05,320 --> 00:31:13,540
we've got for development tools second

00:31:09,670 --> 00:31:16,360
big thing all right I'm gonna tell you

00:31:13,540 --> 00:31:18,730
honestly as an old-school Linux guy it

00:31:16,360 --> 00:31:22,960
hurts my soul to say nice things about

00:31:18,730 --> 00:31:26,830
Microsoft but I have to ok if you have

00:31:22,960 --> 00:31:29,920
not worked with Visual Studio code you

00:31:26,830 --> 00:31:34,120
really must it is a very nice editor I

00:31:29,920 --> 00:31:35,350
say this as a vim guy ok but but also

00:31:34,120 --> 00:31:36,760
I'll tell you there's a there's a really

00:31:35,350 --> 00:31:42,220
nice vim plug-in that makes it pretty

00:31:36,760 --> 00:31:44,010
usable for as a vem person but the

00:31:42,220 --> 00:31:48,700
reason why I'm mentioning this now is

00:31:44,010 --> 00:31:51,360
there is a puppet plug-in though the URL

00:31:48,700 --> 00:31:55,240
is down at the bottom there that

00:31:51,360 --> 00:31:57,760
actually integrates vs code with PDK so

00:31:55,240 --> 00:31:59,620
if you've got PDK installed it'll it'll

00:31:57,760 --> 00:32:01,090
let you write in vs code do all the

00:31:59,620 --> 00:32:06,130
stuff that I was just showing you from

00:32:01,090 --> 00:32:08,980
the command line and it turns V s code

00:32:06,130 --> 00:32:11,020
into a puppet IDE basically with you

00:32:08,980 --> 00:32:12,970
know things like autocomplete and you

00:32:11,020 --> 00:32:16,300
can you know hover over a thing and you

00:32:12,970 --> 00:32:18,400
can see you know information about like

00:32:16,300 --> 00:32:20,320
you know what does this you know what

00:32:18,400 --> 00:32:28,350
does this thing do you and and whatnot

00:32:20,320 --> 00:32:33,490
and then yeah what are we showing here

00:32:28,350 --> 00:32:35,230
just an example ok yeah anyway so like

00:32:33,490 --> 00:32:37,990
say you got syntax highlighting and all

00:32:35,230 --> 00:32:40,180
this kind of fun stuff right so anyway

00:32:37,990 --> 00:32:42,460
vs code very nice

00:32:40,180 --> 00:32:44,460
like say just search on the extensions

00:32:42,460 --> 00:32:47,350
for puppet I'm sure you'll find that one

00:32:44,460 --> 00:32:49,260
and while you're at it there's there's a

00:32:47,350 --> 00:32:51,780
few others that I usually recommend like

00:32:49,260 --> 00:32:53,600
Ruby and and like say that film one it's

00:32:51,780 --> 00:32:56,250
pretty good

00:32:53,600 --> 00:33:01,350
so yeah it's much much much much easier

00:32:56,250 --> 00:33:07,620
to develop puppet code than it used to

00:33:01,350 --> 00:33:10,290
be all right so now I have 15 minutes I

00:33:07,620 --> 00:33:13,230
want to show you an example of what a

00:33:10,290 --> 00:33:14,460
modern git workflow might look like this

00:33:13,230 --> 00:33:17,630
is going to be a little bit of a

00:33:14,460 --> 00:33:22,410
contrived demo and I apologize but

00:33:17,630 --> 00:33:28,740
alright so what I have here is I have

00:33:22,410 --> 00:33:31,740
puppet enterprise yeah this will work

00:33:28,740 --> 00:33:32,730
with open-source puppet a little easier

00:33:31,740 --> 00:33:37,950
to get working with puppet enterprise

00:33:32,730 --> 00:33:41,310
but the so what I have here is a really

00:33:37,950 --> 00:33:43,830
small environment I have a I have the

00:33:41,310 --> 00:33:49,650
puppet server and I also have a get lab

00:33:43,830 --> 00:33:54,960
server and I have an agent node so the

00:33:49,650 --> 00:33:59,330
agent node if I switch over to that and

00:33:54,960 --> 00:33:59,330
make that window much much much larger

00:33:59,890 --> 00:34:07,590
[Music]

00:34:02,360 --> 00:34:09,720
this has a an external fact defined for

00:34:07,590 --> 00:34:11,129
the role of this system I'm saying that

00:34:09,720 --> 00:34:14,100
this system is going to be a web server

00:34:11,129 --> 00:34:19,470
and that's that's just a string that I

00:34:14,100 --> 00:34:26,490
put in there means nothing except if we

00:34:19,470 --> 00:34:30,780
go into our higher Emmel probably you

00:34:26,490 --> 00:34:36,149
make that a little bigger - all right so

00:34:30,780 --> 00:34:37,740
my hierarchy is I'm looking at the cert

00:34:36,149 --> 00:34:39,960
name so the you know the host name of

00:34:37,740 --> 00:34:41,310
the box and then I'm going to look most

00:34:39,960 --> 00:34:42,389
specifically specific on the local host

00:34:41,310 --> 00:34:43,830
name of the box then I'm going to look

00:34:42,389 --> 00:34:48,929
at the role and then I'm going to look

00:34:43,830 --> 00:34:54,960
at this common file so in my data I have

00:34:48,929 --> 00:34:58,130
a roles web server gamal and in this I'm

00:34:54,960 --> 00:35:00,810
using the classes array to define what

00:34:58,130 --> 00:35:03,110
what classes I want to apply so I'm not

00:35:00,810 --> 00:35:05,970
adding any at this level okay

00:35:03,110 --> 00:35:11,850
but I want it to be a web server right

00:35:05,970 --> 00:35:16,680
so I want it to run Apache okay so what

00:35:11,850 --> 00:35:20,510
I'm gonna do I have what I need over

00:35:16,680 --> 00:35:20,510
here so I can copy and paste

00:35:29,030 --> 00:35:38,480
oops all right I'm going to go into this

00:35:35,360 --> 00:35:42,500
file called puppet file which lists my

00:35:38,480 --> 00:35:45,290
modules and I'm going to change that and

00:35:42,500 --> 00:35:47,990
I'm going to add puppet labs Apache and

00:35:45,290 --> 00:35:52,820
this puppet labs can cat which is which

00:35:47,990 --> 00:35:59,000
is required by the Apache module ok so

00:35:52,820 --> 00:36:01,970
this file tells the puppet enterprise

00:35:59,000 --> 00:36:06,410
code manager which is based on this tool

00:36:01,970 --> 00:36:08,240
called our 10k that that you would use

00:36:06,410 --> 00:36:10,850
if you were to using open source puppet

00:36:08,240 --> 00:36:16,790
tells it what modules that you want to

00:36:10,850 --> 00:36:18,200
install from the puppet forge you know

00:36:16,790 --> 00:36:19,990
what I did I forgot to make sure that I

00:36:18,200 --> 00:36:29,180
can actually get to the Internet I

00:36:19,990 --> 00:36:30,670
should probably double check that that's

00:36:29,180 --> 00:36:34,480
old

00:36:30,670 --> 00:36:34,480
can I get out to the Internet

00:36:38,490 --> 00:36:42,359
sorry the one thing I forgot that I

00:36:40,920 --> 00:36:50,670
needed to double-check but when I got in

00:36:42,359 --> 00:36:52,589
here yeah oh I'm on I'm on I'm on the ha

00:36:50,670 --> 00:36:57,500
I'm on high Wi-Fi say yeah I need to get

00:36:52,589 --> 00:37:00,180
I need to switch over to the Hyatt mr

00:36:57,500 --> 00:37:07,070
the the Mr one runs a little faster

00:37:00,180 --> 00:37:11,240
right yeah but I've got the code yeah

00:37:07,070 --> 00:37:11,240
hang on one second I'm so sorry

00:37:13,400 --> 00:37:18,359
so that puppet file that I was showing

00:37:15,990 --> 00:37:23,040
it's going to pull those those modules

00:37:18,359 --> 00:37:27,690
from the from the puppet Forge okay it

00:37:23,040 --> 00:37:28,230
didn't prompt me to login so I guess I'm

00:37:27,690 --> 00:37:32,460
okay

00:37:28,230 --> 00:37:33,599
all right so anyway which means that I

00:37:32,460 --> 00:37:37,230
have to be able to get to the puppet

00:37:33,599 --> 00:37:39,210
forge right so I'm running vagrant on my

00:37:37,230 --> 00:37:41,099
local box here for all these VMs

00:37:39,210 --> 00:37:42,540
so I need the vm's to be able to get out

00:37:41,099 --> 00:37:45,210
to the Internet so that's why I needed

00:37:42,540 --> 00:37:47,160
to test that so all right so now we've

00:37:45,210 --> 00:37:49,980
got we're going to have the the Apache

00:37:47,160 --> 00:37:52,970
module available so now I just need to

00:37:49,980 --> 00:38:01,470
go back to my web server yeah Mille and

00:37:52,970 --> 00:38:04,710
say I'm just going to tell it that I

00:38:01,470 --> 00:38:07,020
want the Apache class applied okay and

00:38:04,710 --> 00:38:08,040
you'd have to do some configuration and

00:38:07,020 --> 00:38:12,000
stuff but I'm just going to skip all

00:38:08,040 --> 00:38:14,099
over all that for right now and and I'm

00:38:12,000 --> 00:38:16,530
going to commit this so I've made a

00:38:14,099 --> 00:38:18,710
couple changes here whatever else but

00:38:16,530 --> 00:38:23,250
I'm going to create a new branch and

00:38:18,710 --> 00:38:28,170
we're gonna call this web server because

00:38:23,250 --> 00:38:30,510
I am unimaginative and we're going to

00:38:28,170 --> 00:38:40,230
start a merge request so we're going to

00:38:30,510 --> 00:38:43,140
commit that now what is going on in the

00:38:40,230 --> 00:38:45,930
background there is I've created a

00:38:43,140 --> 00:38:47,790
branch in in get lab that's going to

00:38:45,930 --> 00:38:49,800
trigger the puppet enterprise code

00:38:47,790 --> 00:38:52,859
manager to now deploy a new puppet

00:38:49,800 --> 00:38:57,940
environment named web server

00:38:52,859 --> 00:38:59,950
and normally if you're doing this in get

00:38:57,940 --> 00:39:01,390
lab you're going to set this up so so

00:38:59,950 --> 00:39:03,700
it'll do testing you know you're gonna

00:39:01,390 --> 00:39:05,140
have to give your get lab runners run

00:39:03,700 --> 00:39:07,900
tests and whatever else and you probably

00:39:05,140 --> 00:39:10,510
won't be able to merge this request

00:39:07,900 --> 00:39:12,160
until all those tests pass I don't have

00:39:10,510 --> 00:39:13,540
any of that setup so we're just gonna

00:39:12,160 --> 00:39:18,820
hand wave and pretend all that happened

00:39:13,540 --> 00:39:23,260
okay so I'm gonna submit this merger

00:39:18,820 --> 00:39:27,550
quest but in the meantime if I go over

00:39:23,260 --> 00:39:30,099
to my agent actually you know what let's

00:39:27,550 --> 00:39:34,060
let's not let's just double check that

00:39:30,099 --> 00:39:37,540
it's the puppet labs code environments

00:39:34,060 --> 00:39:39,849
there's a web server environment now and

00:39:37,540 --> 00:39:42,940
things are deployed there so that means

00:39:39,849 --> 00:39:48,970
that that worked so now if we go back to

00:39:42,940 --> 00:39:51,220
our agent I can do puppet agent - t - -

00:39:48,970 --> 00:39:53,829
no op because I just want to see what's

00:39:51,220 --> 00:40:05,520
gonna happen and I'm gonna say - -

00:39:53,829 --> 00:40:07,720
environment web server so now nope I

00:40:05,520 --> 00:40:09,430
didn't get agent specified environment

00:40:07,720 --> 00:40:11,099
working correctly I thought I did I

00:40:09,430 --> 00:40:14,170
thought I had that working ahead of time

00:40:11,099 --> 00:40:15,970
alright so take my word for it if you've

00:40:14,170 --> 00:40:21,880
got this setup right this is forcing it

00:40:15,970 --> 00:40:23,170
into the production environment but I'm

00:40:21,880 --> 00:40:24,190
running out of time so I have time to

00:40:23,170 --> 00:40:25,839
fix this

00:40:24,190 --> 00:40:28,060
but take my word for it what would

00:40:25,839 --> 00:40:31,630
normally happen is it would tell you I'm

00:40:28,060 --> 00:40:33,640
gonna do all this stuff and you know but

00:40:31,630 --> 00:40:37,410
you know it won't actually make any

00:40:33,640 --> 00:40:40,660
changes with that - - no op setting so

00:40:37,410 --> 00:40:42,430
anyway once you've done some canary

00:40:40,660 --> 00:40:47,680
testing maybe actually applied to some

00:40:42,430 --> 00:40:50,440
nodes right then you go back you hit

00:40:47,680 --> 00:40:53,980
merge I'm gonna hit delete source branch

00:40:50,440 --> 00:40:55,750
merge you know and again you might have

00:40:53,980 --> 00:40:57,880
this all set up so it runs a pipeline in

00:40:55,750 --> 00:40:59,020
the background does some does some tests

00:40:57,880 --> 00:41:03,369
and stuff before it actually triggers

00:40:59,020 --> 00:41:05,940
the deployment of the code but once

00:41:03,369 --> 00:41:05,940
that's done

00:41:07,030 --> 00:41:13,430
what actually happens on the puppet

00:41:09,260 --> 00:41:21,230
server is that other environment will go

00:41:13,430 --> 00:41:23,000
away so we'll give that a second yeah

00:41:21,230 --> 00:41:26,960
come on there it is

00:41:23,000 --> 00:41:29,180
all right so now that's deployed so if I

00:41:26,960 --> 00:41:31,700
go over here and I just run this against

00:41:29,180 --> 00:41:32,930
the production environment now it should

00:41:31,700 --> 00:41:35,930
do all the things that I was wanting it

00:41:32,930 --> 00:41:37,940
to do the last time and that's just it

00:41:35,930 --> 00:41:39,140
doing some file sync stuff so ignore all

00:41:37,940 --> 00:41:41,950
that I upgraded a couple of modules

00:41:39,140 --> 00:41:41,950
while I was at it

00:41:42,040 --> 00:41:54,080
bla bla bla do stuff alright so we're

00:41:51,710 --> 00:41:56,380
loading facts and the next thing you

00:41:54,080 --> 00:42:01,220
know it's going to spit out how it would

00:41:56,380 --> 00:42:02,360
install Apache and set up some files and

00:42:01,220 --> 00:42:05,000
whatever else and you notice it still

00:42:02,360 --> 00:42:07,430
sits says you know would have whatever

00:42:05,000 --> 00:42:09,440
would have you know so on and so forth

00:42:07,430 --> 00:42:14,300
so that all looks good so I'm going to

00:42:09,440 --> 00:42:15,650
do it for real you know I could wait the

00:42:14,300 --> 00:42:17,090
agent would eventually wake up on this

00:42:15,650 --> 00:42:21,440
thing and it would just do it for me

00:42:17,090 --> 00:42:24,110
right but it's way more interesting to

00:42:21,440 --> 00:42:26,420
watch it so that's why we're watching it

00:42:24,110 --> 00:42:28,040
but if I imagine I had a whole fleet of

00:42:26,420 --> 00:42:29,060
systems that you know all thought that

00:42:28,040 --> 00:42:31,160
they were supposed to be web servers

00:42:29,060 --> 00:42:32,630
right I've gone and made this change

00:42:31,160 --> 00:42:34,960
within a half-hour they're all going to

00:42:32,630 --> 00:42:34,960
be configured

00:42:43,060 --> 00:42:47,830
it may be trying to actually install a

00:42:45,010 --> 00:42:49,510
package and the internet might not be

00:42:47,830 --> 00:42:50,260
terribly fast so this may actually take

00:42:49,510 --> 00:42:53,380
a little while

00:42:50,260 --> 00:42:55,720
oh no no there it goes all right well I

00:42:53,380 --> 00:42:58,840
took 32 seconds that's not too bad so

00:42:55,720 --> 00:43:00,750
now this thing is a web server right

00:42:58,840 --> 00:43:02,860
just like that

00:43:00,750 --> 00:43:06,270
obviously that web server that doesn't

00:43:02,860 --> 00:43:06,270
do a whole lot but you get the idea

00:43:09,720 --> 00:43:16,330
okay so in our last couple of minutes

00:43:14,350 --> 00:43:19,210
here let's let's let's ask a hard

00:43:16,330 --> 00:43:20,890
question is puppet still relevant okay I

00:43:19,210 --> 00:43:23,350
have a lot of people that'll tell me oh

00:43:20,890 --> 00:43:25,150
I don't care about puppet puppet manages

00:43:23,350 --> 00:43:29,170
systems I'm doing everything with

00:43:25,150 --> 00:43:30,790
containers you know that's you know so

00:43:29,170 --> 00:43:33,160
if it's not kubernetes i don't care

00:43:30,790 --> 00:43:35,980
right and those people are not a hundred

00:43:33,160 --> 00:43:38,080
percent wrong but the thing is while

00:43:35,980 --> 00:43:40,930
containers are great full systems are

00:43:38,080 --> 00:43:43,180
not going anywhere anytime soon you know

00:43:40,930 --> 00:43:45,220
it may be that if you're doing on prim

00:43:43,180 --> 00:43:49,360
kubernetes something has to actually run

00:43:45,220 --> 00:43:53,040
that kubernetes cluster right and the

00:43:49,360 --> 00:43:56,560
thing is both containers and puppet

00:43:53,040 --> 00:43:59,830
provide a mutable infrastructure just in

00:43:56,560 --> 00:44:01,270
a different way right I am NOT trying to

00:43:59,830 --> 00:44:04,110
make a value statement on which one's

00:44:01,270 --> 00:44:08,130
better than the other but you know it's

00:44:04,110 --> 00:44:10,300
they they both are valid approaches

00:44:08,130 --> 00:44:13,240
enforcing system configuration with

00:44:10,300 --> 00:44:14,710
puppet he's great for compliance and

00:44:13,240 --> 00:44:16,450
again I work for a company that does a

00:44:14,710 --> 00:44:20,830
compliance tool there's a reason we use

00:44:16,450 --> 00:44:22,780
puppet for that and in you know highly

00:44:20,830 --> 00:44:25,510
regulated environments containers

00:44:22,780 --> 00:44:27,370
usually aren't an option yet that you

00:44:25,510 --> 00:44:28,840
know eventually the the compliance

00:44:27,370 --> 00:44:31,390
standards will catch up and you know

00:44:28,840 --> 00:44:33,220
people will be able to do containers but

00:44:31,390 --> 00:44:34,660
it's not a so that containers are not a

00:44:33,220 --> 00:44:37,930
solution for everyone for every

00:44:34,660 --> 00:44:41,890
application right so systems are just

00:44:37,930 --> 00:44:44,350
not going anywhere anytime soon and then

00:44:41,890 --> 00:44:47,080
like say the the combination of bolt and

00:44:44,350 --> 00:44:49,240
puppet can cover one-off tasks and

00:44:47,080 --> 00:44:52,050
ongoing enforcement with a common code

00:44:49,240 --> 00:44:56,890
base which is pretty awesome

00:44:52,050 --> 00:44:58,900
so why adopt a puppet now funny side

00:44:56,890 --> 00:44:59,980
story I was I was like you know I feel

00:44:58,900 --> 00:45:01,480
like I need a little bit of something to

00:44:59,980 --> 00:45:05,020
finish this off and so I threw this out

00:45:01,480 --> 00:45:06,670
on my work slack and Trevor one of the

00:45:05,020 --> 00:45:08,740
the guys that owns the company they had

00:45:06,670 --> 00:45:10,600
wrote the compliance tool and like been

00:45:08,740 --> 00:45:13,150
one of the oldest puppet people on the

00:45:10,600 --> 00:45:15,010
planet he gave me this list and I'm like

00:45:13,150 --> 00:45:18,550
I love it I'm putting it in write just

00:45:15,010 --> 00:45:22,000
verbatim so puppet puts guardrails

00:45:18,550 --> 00:45:23,560
around infrastructure as code puppet

00:45:22,000 --> 00:45:25,750
allows for full state introspection

00:45:23,560 --> 00:45:27,850
prior to application for advanced users

00:45:25,750 --> 00:45:30,220
like say in other words you can do

00:45:27,850 --> 00:45:31,570
testing you can model your environment

00:45:30,220 --> 00:45:34,360
and you can test that it's going to do

00:45:31,570 --> 00:45:35,980
the thing that you want it to do the

00:45:34,360 --> 00:45:37,660
language has hit stability it's unlikely

00:45:35,980 --> 00:45:39,130
to have major breaking changes moving

00:45:37,660 --> 00:45:43,120
forward we wrap up at six now and

00:45:39,130 --> 00:45:45,610
basically nothing of any nothing

00:45:43,120 --> 00:45:47,050
substantial has changed it's mostly it's

00:45:45,610 --> 00:45:51,610
just been additions for the most part

00:45:47,050 --> 00:45:54,280
since puppet 4.10 and the language

00:45:51,610 --> 00:45:56,380
flexes easily between users that don't

00:45:54,280 --> 00:45:58,750
want a program those people usually just

00:45:56,380 --> 00:46:01,420
going to make changes in Yama files for

00:45:58,750 --> 00:46:06,810
Huayra and those that do without

00:46:01,420 --> 00:46:09,810
alienating either one right so questions

00:46:06,810 --> 00:46:09,810
yes

00:46:16,339 --> 00:46:31,950
right resources can only be in the

00:46:27,690 --> 00:46:33,989
catalog once period so they can't be

00:46:31,950 --> 00:46:38,400
redefined so there's ways around that

00:46:33,989 --> 00:46:40,769
you know there's well generally if

00:46:38,400 --> 00:46:42,089
they'll if you've got multiple modules

00:46:40,769 --> 00:46:46,319
that all want to manage a different

00:46:42,089 --> 00:46:48,359
thing within Etsy hosts what what you do

00:46:46,319 --> 00:46:51,960
is you use there's there's a hosts

00:46:48,359 --> 00:46:54,450
resource and you and you just say I want

00:46:51,960 --> 00:46:55,559
this host and so you only manage what

00:46:54,450 --> 00:46:57,150
you end up doing is managing an

00:46:55,559 --> 00:47:00,989
individual line of the file instead of

00:46:57,150 --> 00:47:03,809
managing the whole file so there's a lot

00:47:00,989 --> 00:47:06,509
of that where you know the the unit the

00:47:03,809 --> 00:47:10,619
resource the the unit of thing that is

00:47:06,509 --> 00:47:13,710
managed by puppet might not be as it's

00:47:10,619 --> 00:47:15,119
probably more fine-grained than what you

00:47:13,710 --> 00:47:16,619
might immediately think you know it's

00:47:15,119 --> 00:47:17,819
like I want to manage Etsy host well no

00:47:16,619 --> 00:47:20,969
what you want to do is you went and

00:47:17,819 --> 00:47:30,410
manage each record an Etsy host right

00:47:20,969 --> 00:47:30,410
that makes sense okay

00:47:39,430 --> 00:47:45,110
your issue is like you said you're just

00:47:41,900 --> 00:47:47,630
calling your resource sexy nose and like

00:47:45,110 --> 00:48:11,380
you said coming up with a while I'm

00:47:47,630 --> 00:48:11,380
going to call this resource question

00:48:23,040 --> 00:48:28,140
right so the the agent like say enforces

00:48:26,010 --> 00:48:30,180
a configuration you can make a change it

00:48:28,140 --> 00:48:36,180
will get it will get fixed on the next

00:48:30,180 --> 00:48:38,070
puppet agent run it's not exactly the

00:48:36,180 --> 00:48:41,760
same I know what you mean

00:48:38,070 --> 00:48:43,020
but the the and I yeah that I was saying

00:48:41,760 --> 00:48:46,590
it a little bit of a shorthand way but

00:48:43,020 --> 00:48:49,320
eventually you know you can enforce you

00:48:46,590 --> 00:48:52,320
know things to be an exact state using

00:48:49,320 --> 00:48:55,820
puppet it's like say people can change

00:48:52,320 --> 00:48:55,820
it puppet will change it right back

00:49:12,810 --> 00:49:19,080
our spec our spec puppet there's a

00:49:16,370 --> 00:49:22,110
there's a tool called our spec that you

00:49:19,080 --> 00:49:24,210
can use to basically test that your

00:49:22,110 --> 00:49:27,840
catalog has the things in it that you

00:49:24,210 --> 00:49:32,070
expect it to so you can use that there's

00:49:27,840 --> 00:49:34,980
also then there's a there are tools that

00:49:32,070 --> 00:49:36,840
will let you like spin up vm's and apply

00:49:34,980 --> 00:49:40,710
your you know your module or whatever

00:49:36,840 --> 00:49:43,110
and actually test that the the code does

00:49:40,710 --> 00:49:44,940
what you think it does right so there's

00:49:43,110 --> 00:49:47,580
there's lots of really cool testing

00:49:44,940 --> 00:49:50,340
tools that are they're built around

00:49:47,580 --> 00:49:52,470
puppet and you can you can run all those

00:49:50,340 --> 00:49:55,490
tests without ever applying the code to

00:49:52,470 --> 00:49:55,490
an actual system

00:50:00,110 --> 00:50:09,830
I don't know I don't work for puppet so

00:50:08,330 --> 00:50:12,500
I can't really say a whole lot but I

00:50:09,830 --> 00:50:14,870
imagine that you know OpenJDK is a thing

00:50:12,500 --> 00:50:19,610
right so if I'm pretty sure they're

00:50:14,870 --> 00:50:23,960
already using openjdk for the for for

00:50:19,610 --> 00:50:25,070
running puppet but yeah I don't know at

00:50:23,960 --> 00:50:26,660
this point I don't know if anybody cares

00:50:25,070 --> 00:50:28,930
what Oracle is doing with Java to be

00:50:26,660 --> 00:50:31,970
honest everybody else is gonna move on I

00:50:28,930 --> 00:50:35,620
got to wrap up but if anybody's got any

00:50:31,970 --> 00:50:38,360
more questions feel free to let me know

00:50:35,620 --> 00:50:40,010
it's my first name dot last name at onyx

00:50:38,360 --> 00:50:41,930
point comm or gmail com

00:50:40,010 --> 00:50:43,730
if you want to email me catch me here

00:50:41,930 --> 00:50:45,440
like say my company

00:50:43,730 --> 00:50:46,940
the company I work for onyx point I do

00:50:45,440 --> 00:50:48,410
consulting and training in all sorts of

00:50:46,940 --> 00:50:50,300
stuff so if you want if you want any

00:50:48,410 --> 00:50:52,850
help with any of that stuff let me know

00:50:50,300 --> 00:50:54,680
and like I said I have t-shirts so feel

00:50:52,850 --> 00:50:57,440
free to come up and grab a t-shirt on

00:50:54,680 --> 00:50:58,790
your before you head out so thanks

00:50:57,440 --> 00:51:03,530
everybody

00:50:58,790 --> 00:51:03,530

YouTube URL: https://www.youtube.com/watch?v=HxR0uCT4fek


