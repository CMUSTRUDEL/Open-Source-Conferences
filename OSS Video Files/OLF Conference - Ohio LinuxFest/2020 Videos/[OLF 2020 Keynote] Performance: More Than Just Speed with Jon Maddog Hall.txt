Title: [OLF 2020 Keynote] Performance: More Than Just Speed with Jon Maddog Hall
Publication date: 2021-01-20
Playlist: 2020 Videos
Description: 
	Speaker: Jon "Maddog" Hall

Slidedeck: https://olfconference.org/wp-content/uploads/2020/11/20201107PerformanceMoreThanSpeedFINALFINAL.pdf

The speaker is Jon “Maddog” Hall is the Chairman of the Board of the Linux Professional Institute. Since 1969, he has been a programmer, systems designer, systems administrator, product manager, technical marketing manager, author and educator, and is currently working as an independent consultant.

Jon “Maddog” Hall has concentrated on Unix systems since 1980 and Linux systems since 1994, when he first met Linus Torvalds and correctly recognized the commercial importance of Linux and Free and Open Source Software. He has been a tremendous friend to the Ohio LinuxFest, offering his support and appearing on our stage starting in 2004. He travels the world speaking on the benefits of Free and Open Source Software.
Captions: 
	00:00:03,600 --> 00:00:07,680
it

00:00:04,080 --> 00:00:11,920
is my pleasure to introduce to you

00:00:07,680 --> 00:00:15,040
john mad dog hall for those who

00:00:11,920 --> 00:00:18,640
have attended olf

00:00:15,040 --> 00:00:24,080
year after year after year undoubtedly

00:00:18,640 --> 00:00:28,000
no john mad dog hall but quite honestly

00:00:24,080 --> 00:00:31,840
mad dog you are my santa claus of linux

00:00:28,000 --> 00:00:35,040
because you continue to to bring

00:00:31,840 --> 00:00:38,960
us all joy and it

00:00:35,040 --> 00:00:43,360
it's a pleasure to hear from you always

00:00:38,960 --> 00:00:46,079
that i first got started in

00:00:43,360 --> 00:00:47,920
free and open source software and being

00:00:46,079 --> 00:00:51,440
a good new linux user

00:00:47,920 --> 00:00:54,719
through my interest in high performance

00:00:51,440 --> 00:00:58,399
computing back in 1999

00:00:54,719 --> 00:01:01,840
and now i understand mad dog

00:00:58,399 --> 00:01:06,479
you're here to talk to us about

00:01:01,840 --> 00:01:09,520
performance for the linux kernel

00:01:06,479 --> 00:01:12,000
in 2020

00:01:09,520 --> 00:01:12,960
so i'm very much looking forward to

00:01:12,000 --> 00:01:16,400
hearing

00:01:12,960 --> 00:01:19,759
more about that and of course

00:01:16,400 --> 00:01:23,439
more from um one of my

00:01:19,759 --> 00:01:23,840
favorite geek heroes of all times that

00:01:23,439 --> 00:01:27,280
i've

00:01:23,840 --> 00:01:30,079
never gotten the chance to meet and

00:01:27,280 --> 00:01:31,360
will virtually for the first time a

00:01:30,079 --> 00:01:34,479
little later

00:01:31,360 --> 00:01:38,320
this evening uh mr

00:01:34,479 --> 00:01:41,439
bob young of founder of red hat

00:01:38,320 --> 00:01:44,720
and ceo of

00:01:41,439 --> 00:01:47,600
lulu press and it will be

00:01:44,720 --> 00:01:50,159
also a pleasure to hear the two of you

00:01:47,600 --> 00:01:53,520
interact and catch up

00:01:50,159 --> 00:01:55,040
so without further to do i release the

00:01:53,520 --> 00:01:57,840
floor to you

00:01:55,040 --> 00:01:59,439
john mad hog hall tell us about

00:01:57,840 --> 00:02:01,360
performance

00:01:59,439 --> 00:02:03,200
thank you beth flynn uh i'm gonna be

00:02:01,360 --> 00:02:05,840
going through this really fast

00:02:03,200 --> 00:02:06,960
and it's not to any great depth because

00:02:05,840 --> 00:02:09,679
i only have like

00:02:06,960 --> 00:02:10,080
30 minutes or actually less now to do it

00:02:09,679 --> 00:02:13,280
so

00:02:10,080 --> 00:02:15,440
with no further uh ado

00:02:13,280 --> 00:02:16,400
let's see if i can find the window i'll

00:02:15,440 --> 00:02:20,000
share my screen

00:02:16,400 --> 00:02:23,920
there we are everybody see that great

00:02:20,000 --> 00:02:26,720
so performance is more than just speed

00:02:23,920 --> 00:02:27,200
okay uh for the those of you that don't

00:02:26,720 --> 00:02:29,120
know me

00:02:27,200 --> 00:02:30,720
this is a slide about the things i've

00:02:29,120 --> 00:02:32,640
done in the past it's really not

00:02:30,720 --> 00:02:33,920
consequential except for the fact i've

00:02:32,640 --> 00:02:35,680
done a lot of things

00:02:33,920 --> 00:02:38,080
and i've worked on operating systems and

00:02:35,680 --> 00:02:40,640
compilers and things like that

00:02:38,080 --> 00:02:41,360
so i really understand a lot of the

00:02:40,640 --> 00:02:44,879
issues

00:02:41,360 --> 00:02:46,640
around performance recently you start to

00:02:44,879 --> 00:02:47,200
talk to people about performance and

00:02:46,640 --> 00:02:50,480
they go

00:02:47,200 --> 00:02:53,280
oh cpus are fast enough now i've been

00:02:50,480 --> 00:02:56,879
hearing this for like over 50 years

00:02:53,280 --> 00:03:00,319
and cpus are never fast enough for me

00:02:56,879 --> 00:03:01,920
i i always need them to be faster

00:03:00,319 --> 00:03:04,319
and then for a while people were saying

00:03:01,920 --> 00:03:05,440
to me that java is the only language

00:03:04,319 --> 00:03:07,519
that people need

00:03:05,440 --> 00:03:08,480
and i would just rub my forehead on that

00:03:07,519 --> 00:03:10,560
because

00:03:08,480 --> 00:03:12,400
in lots of cases you need something that

00:03:10,560 --> 00:03:15,360
gives you more control

00:03:12,400 --> 00:03:16,159
more uh control over the memory you're

00:03:15,360 --> 00:03:18,959
talking to

00:03:16,159 --> 00:03:21,599
the i o devices you're talking to java

00:03:18,959 --> 00:03:24,959
is great for what it was meant for

00:03:21,599 --> 00:03:26,640
but it is not the only language

00:03:24,959 --> 00:03:28,000
people tell me that nobody codes in

00:03:26,640 --> 00:03:30,159
assembly language anymore

00:03:28,000 --> 00:03:31,040
i coded an assembly language for seven

00:03:30,159 --> 00:03:32,879
years

00:03:31,040 --> 00:03:34,080
of my life as i started off in

00:03:32,879 --> 00:03:37,120
programming

00:03:34,080 --> 00:03:38,720
and i will agree that people that write

00:03:37,120 --> 00:03:40,480
you know try and write you know large

00:03:38,720 --> 00:03:42,159
pieces of code in assembly language

00:03:40,480 --> 00:03:45,040
that's crazy talk

00:03:42,159 --> 00:03:48,000
in fact i try and get people to write as

00:03:45,040 --> 00:03:50,640
little assembly language as possible

00:03:48,000 --> 00:03:51,840
but where assembly language comes in is

00:03:50,640 --> 00:03:54,080
reviewing

00:03:51,840 --> 00:03:54,959
the code that is produced by the

00:03:54,080 --> 00:03:58,959
compiler

00:03:54,959 --> 00:04:01,280
to see if you can make it go any faster

00:03:58,959 --> 00:04:02,560
and finally the people who argue with me

00:04:01,280 --> 00:04:06,000
that virtual machines

00:04:02,560 --> 00:04:08,799
make architecture knowledge obsolete

00:04:06,000 --> 00:04:10,959
and what they're missing is the fact

00:04:08,799 --> 00:04:13,120
that typically virtual machines

00:04:10,959 --> 00:04:15,920
are talking about a virtual

00:04:13,120 --> 00:04:19,519
implementation of the operating system

00:04:15,920 --> 00:04:20,639
but the actual code runs on the hardware

00:04:19,519 --> 00:04:24,000
itself

00:04:20,639 --> 00:04:25,120
and so to make the code as efficient as

00:04:24,000 --> 00:04:28,720
possible

00:04:25,120 --> 00:04:31,360
still means it's going to be faster and

00:04:28,720 --> 00:04:33,040
have get better performance

00:04:31,360 --> 00:04:34,560
but a lot of people are confused when

00:04:33,040 --> 00:04:35,919
they say virtual machines

00:04:34,560 --> 00:04:37,919
they're actually thinking about

00:04:35,919 --> 00:04:40,800
emulators and

00:04:37,919 --> 00:04:42,880
emulators there is this twist of one

00:04:40,800 --> 00:04:46,720
machine language into the other

00:04:42,880 --> 00:04:51,040
and that is harder to make uh run faster

00:04:46,720 --> 00:04:52,880
but still a lot of the same issues apply

00:04:51,040 --> 00:04:54,160
so let's talk about what what i'm

00:04:52,880 --> 00:04:56,960
talking about when i say

00:04:54,160 --> 00:04:58,320
performance my whole life i've been

00:04:56,960 --> 00:05:01,120
dealing with what i call

00:04:58,320 --> 00:05:02,880
real problems problems that have to do

00:05:01,120 --> 00:05:04,800
with petabytes of data

00:05:02,880 --> 00:05:07,280
and thousands of processors working

00:05:04,800 --> 00:05:09,759
together

00:05:07,280 --> 00:05:11,199
sometimes you say well my program seems

00:05:09,759 --> 00:05:13,280
to be run fast enough

00:05:11,199 --> 00:05:15,280
but then when you try and have it

00:05:13,280 --> 00:05:17,919
address more and more data

00:05:15,280 --> 00:05:20,240
it runs slower and slower for a variety

00:05:17,919 --> 00:05:23,840
of reasons

00:05:20,240 --> 00:05:25,919
another area of performance is real time

00:05:23,840 --> 00:05:26,880
and there's soft real time and hard real

00:05:25,919 --> 00:05:28,800
time

00:05:26,880 --> 00:05:30,560
hard real time is typically used in

00:05:28,800 --> 00:05:33,039
control situations where you're trying

00:05:30,560 --> 00:05:33,600
to get the digital processor to try and

00:05:33,039 --> 00:05:35,840
treat an

00:05:33,600 --> 00:05:36,720
analog problem and most of the problems

00:05:35,840 --> 00:05:39,919
in the world

00:05:36,720 --> 00:05:43,360
are really analog for example

00:05:39,919 --> 00:05:46,000
if your nuclear power plant starts to

00:05:43,360 --> 00:05:48,160
burn up starts to overheat you want to

00:05:46,000 --> 00:05:50,160
lower those carbon rods as quickly as

00:05:48,160 --> 00:05:52,560
possible or shut down the power plant as

00:05:50,160 --> 00:05:54,479
quickly as possible and

00:05:52,560 --> 00:05:55,840
in the meantime if somebody is off

00:05:54,479 --> 00:05:57,360
trying to play a game

00:05:55,840 --> 00:05:59,199
you really don't want that to be

00:05:57,360 --> 00:06:01,840
happening right

00:05:59,199 --> 00:06:03,840
so that's real real time but then you

00:06:01,840 --> 00:06:06,960
can have soft real time

00:06:03,840 --> 00:06:09,120
where as long as the problem gets done

00:06:06,960 --> 00:06:10,880
in the time frame that you wanted it

00:06:09,120 --> 00:06:13,280
that's good enough

00:06:10,880 --> 00:06:14,160
but still you need to make sure it's

00:06:13,280 --> 00:06:17,360
going to be done

00:06:14,160 --> 00:06:18,319
in that time which brings a a little

00:06:17,360 --> 00:06:20,240
story about

00:06:18,319 --> 00:06:21,680
leanness and i one time in the early

00:06:20,240 --> 00:06:24,080
days of linux

00:06:21,680 --> 00:06:26,000
uh the linux kernel was not very good

00:06:24,080 --> 00:06:28,319
with soft real time

00:06:26,000 --> 00:06:29,120
and i called up lenas one day we were

00:06:28,319 --> 00:06:30,560
talking and i

00:06:29,120 --> 00:06:32,800
said something like this he says what do

00:06:30,560 --> 00:06:33,440
you mean it's not good when i'm playing

00:06:32,800 --> 00:06:36,560
quake

00:06:33,440 --> 00:06:38,400
and the monster has a gun i shoot the

00:06:36,560 --> 00:06:39,680
monster the monster dies that's real

00:06:38,400 --> 00:06:42,720
time

00:06:39,680 --> 00:06:44,960
i said linus put a real gun in the hands

00:06:42,720 --> 00:06:46,639
of the monster and see what happens

00:06:44,960 --> 00:06:48,000
he thinks for a couple minutes he goes

00:06:46,639 --> 00:06:50,479
yeah you're right

00:06:48,000 --> 00:06:53,759
and the next release of the linux kernel

00:06:50,479 --> 00:06:56,240
the soft real time was much better

00:06:53,759 --> 00:06:57,680
cell phone apps people say hey my cell

00:06:56,240 --> 00:06:59,759
phone is good enough

00:06:57,680 --> 00:07:01,039
but in cell phones it's a different

00:06:59,759 --> 00:07:03,520
thing that comes in

00:07:01,039 --> 00:07:04,880
you want your battery life to last as

00:07:03,520 --> 00:07:06,960
long as possible

00:07:04,880 --> 00:07:08,000
so performance in a lot of cases with

00:07:06,960 --> 00:07:10,160
cell phones

00:07:08,000 --> 00:07:13,520
is really how long does your battery

00:07:10,160 --> 00:07:15,680
last does it last throughout the day

00:07:13,520 --> 00:07:18,080
you can also think about performance in

00:07:15,680 --> 00:07:20,000
terms of saving the environment

00:07:18,080 --> 00:07:21,199
let's say that google has ten thousand

00:07:20,000 --> 00:07:23,199
servers

00:07:21,199 --> 00:07:25,120
if you can make the applications ten

00:07:23,199 --> 00:07:27,680
percent more efficient

00:07:25,120 --> 00:07:29,120
you might be able to have need only nine

00:07:27,680 --> 00:07:31,599
thousand servers

00:07:29,120 --> 00:07:33,440
instead of 10 gigawatts of electricity

00:07:31,599 --> 00:07:34,880
you may only need 9 gigawatts of

00:07:33,440 --> 00:07:36,960
electricity

00:07:34,880 --> 00:07:40,080
and so performance is very important

00:07:36,960 --> 00:07:42,080
even as you scale up

00:07:40,080 --> 00:07:43,520
then there's new things that are coming

00:07:42,080 --> 00:07:46,319
into the marketplace

00:07:43,520 --> 00:07:47,759
we're used to the traditional cpus and

00:07:46,319 --> 00:07:50,160
even gpus

00:07:47,759 --> 00:07:51,599
for for doing programming but some of

00:07:50,160 --> 00:07:54,639
the new things that are happening

00:07:51,599 --> 00:07:57,440
are very inexpensive fpgas

00:07:54,639 --> 00:07:58,000
field programmable gate arrays which can

00:07:57,440 --> 00:08:00,479
run some

00:07:58,000 --> 00:08:03,039
types of applications hundreds of times

00:08:00,479 --> 00:08:06,319
faster than a traditional cpu

00:08:03,039 --> 00:08:09,599
even at today's modern clock speeds

00:08:06,319 --> 00:08:11,599
digital signal processors uh things for

00:08:09,599 --> 00:08:13,680
doing codecs and stuff like that are

00:08:11,599 --> 00:08:14,720
also something that you might want to

00:08:13,680 --> 00:08:17,120
take a look at

00:08:14,720 --> 00:08:17,840
if you're working with trying to get

00:08:17,120 --> 00:08:21,599
performance

00:08:17,840 --> 00:08:22,560
into your system but one of the things i

00:08:21,599 --> 00:08:25,520
found out

00:08:22,560 --> 00:08:26,319
is that in order to write really great

00:08:25,520 --> 00:08:28,400
code

00:08:26,319 --> 00:08:30,720
you need to understand how the machine

00:08:28,400 --> 00:08:32,320
works you need to understand how the cpu

00:08:30,720 --> 00:08:33,839
works how it holds data

00:08:32,320 --> 00:08:35,360
you need to understand the different

00:08:33,839 --> 00:08:38,560
parts of the cpu

00:08:35,360 --> 00:08:40,719
the cpu itself the cache is talking to

00:08:38,560 --> 00:08:42,320
inside of the cpu you need to understand

00:08:40,719 --> 00:08:44,320
that there's registers there

00:08:42,320 --> 00:08:46,640
and how do you utilize those registers

00:08:44,320 --> 00:08:48,399
in order to get the best performance

00:08:46,640 --> 00:08:50,640
you know you need to you need to think

00:08:48,399 --> 00:08:53,680
of the entire chain of moving the data

00:08:50,640 --> 00:08:55,120
off of the disk or off of the ssd maybe

00:08:53,680 --> 00:08:56,880
off of tape drives

00:08:55,120 --> 00:08:58,640
god help you i don't i don't like tape

00:08:56,880 --> 00:09:01,440
drives but they're there

00:08:58,640 --> 00:09:03,040
and as it flows through the computer

00:09:01,440 --> 00:09:05,600
where do you keep the data in order to

00:09:03,040 --> 00:09:07,680
make it run the fastest

00:09:05,600 --> 00:09:08,640
so here are some of the examples from my

00:09:07,680 --> 00:09:10,959
past

00:09:08,640 --> 00:09:13,040
one reason for understanding assembly

00:09:10,959 --> 00:09:15,360
language or machine language

00:09:13,040 --> 00:09:16,880
is what happens when the compiler makes

00:09:15,360 --> 00:09:19,600
an error

00:09:16,880 --> 00:09:20,560
a lot of people go oh compilers make an

00:09:19,600 --> 00:09:23,279
error

00:09:20,560 --> 00:09:24,560
sure the compiler is a program just like

00:09:23,279 --> 00:09:27,200
your programs

00:09:24,560 --> 00:09:29,040
and maybe the compiler writer was

00:09:27,200 --> 00:09:31,920
upstairs after a very

00:09:29,040 --> 00:09:33,680
hard weekend comes downstairs is

00:09:31,920 --> 00:09:35,040
scratching themselves and

00:09:33,680 --> 00:09:37,519
rubbing their head because they have a

00:09:35,040 --> 00:09:38,480
headache and they look up at the clock

00:09:37,519 --> 00:09:41,120
and they go oh

00:09:38,480 --> 00:09:41,839
i have to insert my code into the into

00:09:41,120 --> 00:09:44,880
the

00:09:41,839 --> 00:09:46,880
pool in order to meet the deadline and

00:09:44,880 --> 00:09:48,000
so they quickly do that and they don't

00:09:46,880 --> 00:09:50,160
test it

00:09:48,000 --> 00:09:52,160
and all of a sudden the compiler can

00:09:50,160 --> 00:09:53,839
make an error

00:09:52,160 --> 00:09:56,240
you the programmer can look at your

00:09:53,839 --> 00:09:58,720
source code until the cows come home

00:09:56,240 --> 00:10:01,040
but unless you can tell the compiler to

00:09:58,720 --> 00:10:02,959
generate the object code or the machine

00:10:01,040 --> 00:10:06,160
language and look at it

00:10:02,959 --> 00:10:07,680
and say oh this thing made a mistake

00:10:06,160 --> 00:10:10,480
you can look at your source code and

00:10:07,680 --> 00:10:13,519
you'll never find a problem

00:10:10,480 --> 00:10:15,600
another example is cash we talked about

00:10:13,519 --> 00:10:18,160
this a second ago

00:10:15,600 --> 00:10:18,800
the fact that the cpu has registers in

00:10:18,160 --> 00:10:21,120
it

00:10:18,800 --> 00:10:22,399
those registers typically talk to some

00:10:21,120 --> 00:10:25,279
amount of cash

00:10:22,399 --> 00:10:27,360
in the cpu you typically have more cash

00:10:25,279 --> 00:10:28,160
and a cpu that's going for a server

00:10:27,360 --> 00:10:30,959
system

00:10:28,160 --> 00:10:33,680
than a workstation a better system

00:10:30,959 --> 00:10:36,000
sometimes have no cache at all

00:10:33,680 --> 00:10:37,440
and then out of the cache it talks the

00:10:36,000 --> 00:10:40,399
main memory

00:10:37,440 --> 00:10:42,320
and how is the memory organized and what

00:10:40,399 --> 00:10:45,040
language are you using

00:10:42,320 --> 00:10:46,240
and how does it hold the numbers in an

00:10:45,040 --> 00:10:47,920
array

00:10:46,240 --> 00:10:51,040
does it hold them in what we call column

00:10:47,920 --> 00:10:53,760
major format or row major format

00:10:51,040 --> 00:10:54,640
because if you now start to extract the

00:10:53,760 --> 00:10:57,760
data

00:10:54,640 --> 00:10:59,920
from the system from the main memory

00:10:57,760 --> 00:11:00,880
and you're attacking the data the wrong

00:10:59,920 --> 00:11:03,839
way

00:11:00,880 --> 00:11:04,480
you could actually have a program run 40

00:11:03,839 --> 00:11:07,920
times

00:11:04,480 --> 00:11:09,120
longer than it has to if you were

00:11:07,920 --> 00:11:11,680
extracting the data

00:11:09,120 --> 00:11:14,560
all the time out of blocks of data

00:11:11,680 --> 00:11:17,279
coming into the cache

00:11:14,560 --> 00:11:18,320
uh i worked in a program one time in my

00:11:17,279 --> 00:11:22,079
early days

00:11:18,320 --> 00:11:25,320
it was on a pdp 1170 a person wrote a

00:11:22,079 --> 00:11:29,120
program to sort

00:11:25,320 --> 00:11:32,399
1206 32 byte records

00:11:29,120 --> 00:11:33,680
they wrote the program and they had the

00:11:32,399 --> 00:11:36,720
program running

00:11:33,680 --> 00:11:38,880
and it took ten and one half hours for

00:11:36,720 --> 00:11:42,959
that computer system to sort

00:11:38,880 --> 00:11:45,680
the 1206 records

00:11:42,959 --> 00:11:46,320
so i looked into it i saw what they did

00:11:45,680 --> 00:11:49,440
they had

00:11:46,320 --> 00:11:51,120
basically done everything wrong i

00:11:49,440 --> 00:11:53,760
changed the sort algorithm

00:11:51,120 --> 00:11:55,760
i managed to utilize cash much better

00:11:53,760 --> 00:11:56,880
and on the same machine with the same

00:11:55,760 --> 00:11:59,440
operating system

00:11:56,880 --> 00:12:01,440
writing in the same language i short the

00:11:59,440 --> 00:12:04,399
time from ten and a half hours

00:12:01,440 --> 00:12:04,399
to three minutes

00:12:04,800 --> 00:12:08,720
tape drives are notorious i mean these

00:12:07,120 --> 00:12:11,279
days most of the time we're doing with

00:12:08,720 --> 00:12:13,519
what we call streaming tape drives

00:12:11,279 --> 00:12:14,800
but in the old days you had start stop

00:12:13,519 --> 00:12:17,360
tape drives

00:12:14,800 --> 00:12:17,920
that between blocks of data you had to

00:12:17,360 --> 00:12:19,680
have a

00:12:17,920 --> 00:12:22,399
three quarters of an inch in a record

00:12:19,680 --> 00:12:23,600
gap and you also had the date drive had

00:12:22,399 --> 00:12:26,160
to come to a complete

00:12:23,600 --> 00:12:28,639
halt before it started back up again to

00:12:26,160 --> 00:12:32,079
be the next block

00:12:28,639 --> 00:12:35,360
if you put only one logical record

00:12:32,079 --> 00:12:36,399
in every block of data then you might

00:12:35,360 --> 00:12:39,440
have a 20th

00:12:36,399 --> 00:12:41,519
of an inch of data and three quarters of

00:12:39,440 --> 00:12:43,040
an inch to fit a record gap

00:12:41,519 --> 00:12:46,160
the tape drive will be starting and

00:12:43,040 --> 00:12:49,120
stopping hundreds of thousands of times

00:12:46,160 --> 00:12:50,079
so to just move create a greater block

00:12:49,120 --> 00:12:53,040
size

00:12:50,079 --> 00:12:53,519
meant that your program would run faster

00:12:53,040 --> 00:12:55,920
and this

00:12:53,519 --> 00:12:57,360
again is how does the hardware really

00:12:55,920 --> 00:13:00,880
work how does the

00:12:57,360 --> 00:13:04,320
data really pass through the program

00:13:00,880 --> 00:13:06,160
so today a lot of times you find oh

00:13:04,320 --> 00:13:07,440
i was at the airport one day i saw a

00:13:06,160 --> 00:13:10,880
student with the harvard

00:13:07,440 --> 00:13:12,959
sweatshirt on and i said oh you're going

00:13:10,880 --> 00:13:14,560
to harvard what are you studying

00:13:12,959 --> 00:13:16,079
and they said oh we're you know i'm

00:13:14,560 --> 00:13:18,480
studying computer science

00:13:16,079 --> 00:13:20,079
oh what are you studying as i said i'm

00:13:18,480 --> 00:13:23,360
studying oracle

00:13:20,079 --> 00:13:24,399
and i'm studying microsoft office and i

00:13:23,360 --> 00:13:26,160
started to find

00:13:24,399 --> 00:13:28,800
the hair sticking up in the back of my

00:13:26,160 --> 00:13:30,639
neck because i was hoping he was going

00:13:28,800 --> 00:13:33,040
to say compiler theory and operating

00:13:30,639 --> 00:13:36,880
system design

00:13:33,040 --> 00:13:40,320
and this is a problem that a lot of

00:13:36,880 --> 00:13:43,600
instructors in universities are stopping

00:13:40,320 --> 00:13:45,920
at a particular point and not

00:13:43,600 --> 00:13:47,040
teaching the students how the actual

00:13:45,920 --> 00:13:51,360
machines work

00:13:47,040 --> 00:13:52,959
underneath a lot of high school students

00:13:51,360 --> 00:13:54,639
i was told by some professors at

00:13:52,959 --> 00:13:57,199
cambridge university

00:13:54,639 --> 00:13:58,079
they come into the university where

00:13:57,199 --> 00:14:00,079
basically

00:13:58,079 --> 00:14:01,360
they bought a laptop they've never

00:14:00,079 --> 00:14:03,519
opened it up

00:14:01,360 --> 00:14:06,160
they write a little bit of html and they

00:14:03,519 --> 00:14:08,560
think they are programmers

00:14:06,160 --> 00:14:09,519
and so this is the way that most high

00:14:08,560 --> 00:14:12,480
school students

00:14:09,519 --> 00:14:14,320
see computers the friendly computer the

00:14:12,480 --> 00:14:16,160
thing that's going to be your friend

00:14:14,320 --> 00:14:18,480
and that's not true they really look

00:14:16,160 --> 00:14:20,320
like this and they hate you

00:14:18,480 --> 00:14:23,600
they know that there's users out there

00:14:20,320 --> 00:14:23,600
and they hate the users

00:14:23,760 --> 00:14:26,800
even something as simple as holding a

00:14:25,839 --> 00:14:29,519
number

00:14:26,800 --> 00:14:30,079
we've all heard of ascii numbers okay

00:14:29,519 --> 00:14:31,839
and there's

00:14:30,079 --> 00:14:34,079
they're held a certain way there's seven

00:14:31,839 --> 00:14:37,519
bit ascii and eight bit ascii and

00:14:34,079 --> 00:14:39,040
16 bit ascii you know and iso codes and

00:14:37,519 --> 00:14:42,079
stuff like that

00:14:39,040 --> 00:14:45,519
but typically you have in an ascii code

00:14:42,079 --> 00:14:47,600
one digit per byte however

00:14:45,519 --> 00:14:49,760
if you actually want to do arithmetic

00:14:47,600 --> 00:14:50,160
with it you typically have to convert it

00:14:49,760 --> 00:14:52,079
into

00:14:50,160 --> 00:14:53,839
a different type of number either a

00:14:52,079 --> 00:14:55,120
packed decimal number which gives you

00:14:53,839 --> 00:14:58,880
two digits per byte

00:14:55,120 --> 00:15:02,000
and then a sine nibble

00:14:58,880 --> 00:15:04,320
on it or a binary number

00:15:02,000 --> 00:15:06,160
just strict ones and zeros or maybe it's

00:15:04,320 --> 00:15:08,800
a floating point number

00:15:06,160 --> 00:15:10,959
but depending on how you hold the number

00:15:08,800 --> 00:15:12,320
and how you force the compiler to hold

00:15:10,959 --> 00:15:14,800
that number

00:15:12,320 --> 00:15:16,320
it can speed up or slow down your

00:15:14,800 --> 00:15:18,399
program dramatically

00:15:16,320 --> 00:15:21,199
if you start to use that number as an

00:15:18,399 --> 00:15:23,279
index into your array

00:15:21,199 --> 00:15:24,800
and please don't tell me that you're

00:15:23,279 --> 00:15:29,680
holding your your

00:15:24,800 --> 00:15:29,680
index to your array as an ascii number

00:15:30,399 --> 00:15:35,759
so the real life effects of dumbing down

00:15:34,240 --> 00:15:37,600
high school students coming in

00:15:35,759 --> 00:15:41,040
university students

00:15:37,600 --> 00:15:43,839
is that the typical incoming freshman

00:15:41,040 --> 00:15:46,639
to university today knows less about

00:15:43,839 --> 00:15:48,240
computers than they knew 20 years ago

00:15:46,639 --> 00:15:49,680
when he used to use things like the

00:15:48,240 --> 00:15:53,120
amiga or

00:15:49,680 --> 00:15:56,000
other things and they used to pull down

00:15:53,120 --> 00:15:57,600
programs written in source code from

00:15:56,000 --> 00:15:59,600
bulletin boards

00:15:57,600 --> 00:16:01,519
they would have to get the programs to

00:15:59,600 --> 00:16:02,000
compile on their system they would have

00:16:01,519 --> 00:16:04,480
to get

00:16:02,000 --> 00:16:06,399
you know sometimes they would have uh

00:16:04,480 --> 00:16:08,320
syntax errors in them sometimes they

00:16:06,399 --> 00:16:10,399
would have run time errors

00:16:08,320 --> 00:16:11,519
and the students would go in and fix

00:16:10,399 --> 00:16:14,560
those problems they

00:16:11,519 --> 00:16:16,000
learned how the computer worked and so

00:16:14,560 --> 00:16:18,399
this is one of the reasons

00:16:16,000 --> 00:16:19,120
why the professors at cambridge

00:16:18,399 --> 00:16:21,920
university

00:16:19,120 --> 00:16:22,399
invented the raspberry pi they wanted a

00:16:21,920 --> 00:16:25,680
very

00:16:22,399 --> 00:16:28,800
inexpensive computer that purposely

00:16:25,680 --> 00:16:30,720
did not come with a case purposely

00:16:28,800 --> 00:16:32,079
used an operating system that was open

00:16:30,720 --> 00:16:35,440
source

00:16:32,079 --> 00:16:38,480
and so they started off with a 35

00:16:35,440 --> 00:16:42,160
computer several years ago single core

00:16:38,480 --> 00:16:44,160
arm computer and now today

00:16:42,160 --> 00:16:45,920
for about the same price you can get a

00:16:44,160 --> 00:16:48,959
four core 64-bit

00:16:45,920 --> 00:16:51,839
system a very powerful computer

00:16:48,959 --> 00:16:53,040
that you can teach the students how to

00:16:51,839 --> 00:16:54,639
program

00:16:53,040 --> 00:16:56,399
and there's many of these little

00:16:54,639 --> 00:16:57,600
computers and each one of them has

00:16:56,399 --> 00:16:59,759
different things

00:16:57,600 --> 00:17:01,680
that allows a student who wants to learn

00:16:59,759 --> 00:17:04,079
how an operating system works

00:17:01,680 --> 00:17:06,400
wants to learn how really good compilots

00:17:04,079 --> 00:17:09,439
work can experiment with

00:17:06,400 --> 00:17:10,720
for very small amounts of money and

00:17:09,439 --> 00:17:13,199
universities

00:17:10,720 --> 00:17:15,520
can purchase some of these and allow the

00:17:13,199 --> 00:17:16,720
students to use them excuse me mr mad

00:17:15,520 --> 00:17:18,880
dog

00:17:16,720 --> 00:17:21,679
your video has frozen would you mind

00:17:18,880 --> 00:17:23,360
restarting your camera real quick

00:17:21,679 --> 00:17:24,720
oh yeah but there's not there's not

00:17:23,360 --> 00:17:28,160
really i'm really not

00:17:24,720 --> 00:17:31,760
too much to see so i uh

00:17:28,160 --> 00:17:33,679
well your freeze frame is um interesting

00:17:31,760 --> 00:17:35,919
i think if you just restart your camera

00:17:33,679 --> 00:17:39,440
and then we can roll with it

00:17:35,919 --> 00:17:41,919
uh yeah i'm looking for the the place on

00:17:39,440 --> 00:17:42,799
zoom i'm not a very big zoom person i'm

00:17:41,919 --> 00:17:45,840
looking for the place

00:17:42,799 --> 00:17:47,440
of zoom to just we can we just leave it

00:17:45,840 --> 00:17:49,039
frozen for right now and then when i get

00:17:47,440 --> 00:17:50,320
finished with my talk

00:17:49,039 --> 00:17:52,720
if that's what you want we can do

00:17:50,320 --> 00:17:55,280
whatever you want okay thank you

00:17:52,720 --> 00:17:56,640
so why am i showing you all this because

00:17:55,280 --> 00:17:58,720
of something like this

00:17:56,640 --> 00:18:00,240
this is something i built a couple of

00:17:58,720 --> 00:18:03,840
years ago

00:18:00,240 --> 00:18:06,559
and it's basically a bunch of

00:18:03,840 --> 00:18:07,520
you know raspberry pi like computers set

00:18:06,559 --> 00:18:10,320
up

00:18:07,520 --> 00:18:10,960
that would have you know 12 arm cores at

00:18:10,320 --> 00:18:14,240
that time

00:18:10,960 --> 00:18:17,600
two cores per system and

00:18:14,240 --> 00:18:19,840
total it had six gigabytes of ram it had

00:18:17,600 --> 00:18:22,080
some two terabytes of side of disk

00:18:19,840 --> 00:18:24,480
down here on the bottom that you could

00:18:22,080 --> 00:18:27,760
set a parade of different types

00:18:24,480 --> 00:18:28,080
and then it had a switch that would

00:18:27,760 --> 00:18:32,080
allow

00:18:28,080 --> 00:18:35,600
you to basically set up a

00:18:32,080 --> 00:18:38,480
beowulf type of system now today

00:18:35,600 --> 00:18:41,200
because the raspberry pi has moved on

00:18:38,480 --> 00:18:43,919
you can have 24 arm cores in it you can

00:18:41,200 --> 00:18:45,440
have up to 48 gigabytes of ram if you

00:18:43,919 --> 00:18:48,480
buy the 8 gigabyte

00:18:45,440 --> 00:18:51,200
uh raspberry pi's and

00:18:48,480 --> 00:18:53,360
a very very powerful system that can be

00:18:51,200 --> 00:18:54,640
disassembled and put into a standard

00:18:53,360 --> 00:18:57,120
size briefcase

00:18:54,640 --> 00:18:58,320
and reassembled again you know wherever

00:18:57,120 --> 00:19:00,720
you're going

00:18:58,320 --> 00:19:01,440
and why is this interesting because with

00:19:00,720 --> 00:19:05,120
this

00:19:01,440 --> 00:19:09,280
little system or set of systems here

00:19:05,120 --> 00:19:11,039
uh okay i'm going to try and start my

00:19:09,280 --> 00:19:12,880
video because something has popped up

00:19:11,039 --> 00:19:14,240
here in the middle no it's not doing

00:19:12,880 --> 00:19:17,440
that

00:19:14,240 --> 00:19:19,520
um why is this interesting

00:19:17,440 --> 00:19:20,799
because you can do high performance

00:19:19,520 --> 00:19:24,000
computing

00:19:20,799 --> 00:19:26,400
you can do high availability computing

00:19:24,000 --> 00:19:28,400
you can do heterogeneous computing if

00:19:26,400 --> 00:19:29,760
you put different operating systems on

00:19:28,400 --> 00:19:31,919
each one

00:19:29,760 --> 00:19:34,320
and it is portable and not that

00:19:31,919 --> 00:19:37,360
expensive

00:19:34,320 --> 00:19:39,280
so if you're looking at canoe

00:19:37,360 --> 00:19:42,080
linux and you're thinking about

00:19:39,280 --> 00:19:45,120
programming for the future

00:19:42,080 --> 00:19:46,559
then you could take a look at beowulf

00:19:45,120 --> 00:19:48,480
supercomputers

00:19:46,559 --> 00:19:50,880
and think about how you can use the

00:19:48,480 --> 00:19:53,520
non-uniform memory architecture

00:19:50,880 --> 00:19:55,520
of the beowulf supercomputers to solve

00:19:53,520 --> 00:19:57,360
really big problems

00:19:55,520 --> 00:19:58,720
um there's a lot of people out there

00:19:57,360 --> 00:19:59,919
that are trying to build these high

00:19:58,720 --> 00:20:03,120
performance computers

00:19:59,919 --> 00:20:03,679
out of raspberry pi zeros and i question

00:20:03,120 --> 00:20:06,480
that

00:20:03,679 --> 00:20:09,120
because the amount of cpu it takes to

00:20:06,480 --> 00:20:11,919
transfer the data between systems

00:20:09,120 --> 00:20:12,799
is almost almost eats up the entire

00:20:11,919 --> 00:20:16,080
raspberry pi

00:20:12,799 --> 00:20:16,960
zero but certain of the newer raspberry

00:20:16,080 --> 00:20:19,360
pi's that have

00:20:16,960 --> 00:20:20,240
more cores and more memory would

00:20:19,360 --> 00:20:23,280
probably be

00:20:20,240 --> 00:20:25,679
relatively good to do that

00:20:23,280 --> 00:20:27,200
take a look at how you program gpus not

00:20:25,679 --> 00:20:30,000
just for graphics

00:20:27,200 --> 00:20:31,039
but to be able to handle large amounts

00:20:30,000 --> 00:20:34,159
of data

00:20:31,039 --> 00:20:35,280
in parallel for various types of

00:20:34,159 --> 00:20:37,120
problems

00:20:35,280 --> 00:20:39,919
learn about field programmable gate

00:20:37,120 --> 00:20:42,320
arrays lena says that if he wasn't

00:20:39,919 --> 00:20:44,640
if he was starting over again today he

00:20:42,320 --> 00:20:46,640
might not do an operating system

00:20:44,640 --> 00:20:48,159
instead he might be able to he might

00:20:46,640 --> 00:20:50,559
look at field programmable

00:20:48,159 --> 00:20:52,400
gate arrays how to program them they're

00:20:50,559 --> 00:20:56,000
very interesting

00:20:52,400 --> 00:20:58,159
and i really hope that i retire or maybe

00:20:56,000 --> 00:20:59,280
even die before quantum computing comes

00:20:58,159 --> 00:21:00,880
in because

00:20:59,280 --> 00:21:03,440
i don't really want to have to deal with

00:21:00,880 --> 00:21:04,720
it but it's out there and we should

00:21:03,440 --> 00:21:07,760
start taking a look at it

00:21:04,720 --> 00:21:10,400
and seeing how we can program using

00:21:07,760 --> 00:21:13,840
quantum computing

00:21:10,400 --> 00:21:14,880
so the summary of my whole talk is that

00:21:13,840 --> 00:21:17,840
i recommend

00:21:14,880 --> 00:21:18,559
even in this day and age that people

00:21:17,840 --> 00:21:20,400
learn

00:21:18,559 --> 00:21:21,840
some type of assembly or machine

00:21:20,400 --> 00:21:24,480
language

00:21:21,840 --> 00:21:26,880
it doesn't have to be a complex one you

00:21:24,480 --> 00:21:29,200
can take a look at things like

00:21:26,880 --> 00:21:31,120
well obviously the intel assembly

00:21:29,200 --> 00:21:33,919
language and machine language is

00:21:31,120 --> 00:21:35,360
is very prominent but it's also very

00:21:33,919 --> 00:21:38,320
complex

00:21:35,360 --> 00:21:40,400
if you take a look at a risk type of

00:21:38,320 --> 00:21:41,280
assembly or machine language like a risk

00:21:40,400 --> 00:21:44,960
five

00:21:41,280 --> 00:21:48,559
it has the same type of capabilities and

00:21:44,960 --> 00:21:51,520
and issues and problems and insights

00:21:48,559 --> 00:21:52,559
as a more complicated assembly language

00:21:51,520 --> 00:21:54,480
does

00:21:52,559 --> 00:21:55,679
but just learning how the assembly

00:21:54,480 --> 00:21:58,159
language works

00:21:55,679 --> 00:22:00,720
and how the machine actually works below

00:21:58,159 --> 00:22:02,480
will help you with your programming

00:22:00,720 --> 00:22:03,840
choose your algorithms and data

00:22:02,480 --> 00:22:05,760
carefully

00:22:03,840 --> 00:22:08,720
you know think about it because yes we

00:22:05,760 --> 00:22:11,520
have good optimizing compilers today

00:22:08,720 --> 00:22:12,240
but you can still make them work better

00:22:11,520 --> 00:22:14,799
if you

00:22:12,240 --> 00:22:15,520
think about your problem ahead of time

00:22:14,799 --> 00:22:18,240
and

00:22:15,520 --> 00:22:19,440
help them with uh pieces of information

00:22:18,240 --> 00:22:22,720
that let them

00:22:19,440 --> 00:22:24,880
generate their code better use the right

00:22:22,720 --> 00:22:28,400
language for the right job

00:22:24,880 --> 00:22:29,120
you know even today i mean i will admit

00:22:28,400 --> 00:22:31,679
that c

00:22:29,120 --> 00:22:32,559
isn't the most friendly language in the

00:22:31,679 --> 00:22:34,159
world

00:22:32,559 --> 00:22:35,600
but if you're writing something in a

00:22:34,159 --> 00:22:38,559
kernel c

00:22:35,600 --> 00:22:39,360
still has a lot of good features for it

00:22:38,559 --> 00:22:42,159
take a look at

00:22:39,360 --> 00:22:42,960
rust take a look at go there are also up

00:22:42,159 --> 00:22:47,280
and coming

00:22:42,960 --> 00:22:50,480
languages examine the assembly language

00:22:47,280 --> 00:22:53,679
that is generated by your compiler

00:22:50,480 --> 00:22:54,720
and see if you can reduce the number of

00:22:53,679 --> 00:22:57,760
instructions

00:22:54,720 --> 00:23:01,760
or the types of instructions which

00:22:57,760 --> 00:23:04,240
it's using sometimes fewer instructions

00:23:01,760 --> 00:23:06,320
actually take longer particularly in

00:23:04,240 --> 00:23:08,880
intel assembly language

00:23:06,320 --> 00:23:11,280
because the intel assembly language is a

00:23:08,880 --> 00:23:14,000
complex and structured set machine

00:23:11,280 --> 00:23:14,640
and sometimes their instructions do a

00:23:14,000 --> 00:23:17,679
lot

00:23:14,640 --> 00:23:20,640
of spent a lot of clock cycles

00:23:17,679 --> 00:23:23,360
in doing something if you program on a

00:23:20,640 --> 00:23:25,600
risk computer generally speaking

00:23:23,360 --> 00:23:28,240
the greater the number of instructions

00:23:25,600 --> 00:23:30,400
that you generate the longer it takes

00:23:28,240 --> 00:23:32,000
and the smaller amount the faster it

00:23:30,400 --> 00:23:35,440
goes

00:23:32,000 --> 00:23:38,640
when you're doing speed ups you know

00:23:35,440 --> 00:23:40,640
you could say okay i'm making my program

00:23:38,640 --> 00:23:43,440
two to three times faster

00:23:40,640 --> 00:23:45,039
and that's great but you know there

00:23:43,440 --> 00:23:46,320
comes a time where you say

00:23:45,039 --> 00:23:48,080
that's good enough i'm not going to

00:23:46,320 --> 00:23:50,159
waste any more of my time

00:23:48,080 --> 00:23:51,200
trying to make the program any more

00:23:50,159 --> 00:23:53,200
efficient

00:23:51,200 --> 00:23:55,120
and so you stop and you go on to the

00:23:53,200 --> 00:23:57,919
next problem

00:23:55,120 --> 00:23:58,880
if you're interested in resources these

00:23:57,919 --> 00:24:01,840
are some

00:23:58,880 --> 00:24:03,360
resources about gcc and how it works

00:24:01,840 --> 00:24:07,279
they're still very good today

00:24:03,360 --> 00:24:10,320
even though they're a little old

00:24:07,279 --> 00:24:11,679
taking a look at debugging with the open

00:24:10,320 --> 00:24:16,080
source tools

00:24:11,679 --> 00:24:17,520
and being able to analyze with profiling

00:24:16,080 --> 00:24:20,799
if you're interested in arm assembly

00:24:17,520 --> 00:24:23,600
language this book is very good for arm

00:24:20,799 --> 00:24:26,640
so with that it's the end of my talk i

00:24:23,600 --> 00:24:26,640
will stop sharing my

00:24:29,279 --> 00:24:34,640
oh hi mad dog thank you so much for that

00:24:32,400 --> 00:24:35,679
wonderful presentation hopefully we can

00:24:34,640 --> 00:24:40,080
get you back

00:24:35,679 --> 00:24:40,080
on video momentarily

00:24:42,210 --> 00:24:46,400
[Music]

00:24:44,559 --> 00:24:48,640
that i love the freeze frame in the

00:24:46,400 --> 00:24:51,600
thumbs up motion though

00:24:48,640 --> 00:24:51,600
that's perfect

00:24:53,360 --> 00:24:58,480
beth betlin all right did you go away

00:24:57,200 --> 00:25:00,799
too

00:24:58,480 --> 00:25:02,720
okay now i have camera access i'm

00:25:00,799 --> 00:25:05,440
high-fiving whoever is coming

00:25:02,720 --> 00:25:05,919
over oh just kidding can you high-five

00:25:05,440 --> 00:25:07,279
me from

00:25:05,919 --> 00:25:09,039
well i guess your view is different so

00:25:07,279 --> 00:25:12,159
that wouldn't work i'm just

00:25:09,039 --> 00:25:13,919
i'm just patting your head instead it's

00:25:12,159 --> 00:25:14,480
like that kids in the hall skit where

00:25:13,919 --> 00:25:17,520
it's like

00:25:14,480 --> 00:25:18,559
i'm squishing your head in your head i'm

00:25:17,520 --> 00:25:21,679
crushing that

00:25:18,559 --> 00:25:24,960
white toy behind you

00:25:21,679 --> 00:25:28,080
i'm crushing your head yeah that kids in

00:25:24,960 --> 00:25:30,080
the hall man that's really old school

00:25:28,080 --> 00:25:31,840
well i think he left did he leave for

00:25:30,080 --> 00:25:34,400
real real

00:25:31,840 --> 00:25:35,760
we had questions the zoom was popping

00:25:34,400 --> 00:25:39,279
off with questions oh

00:25:35,760 --> 00:25:40,400
he he definitely has questions for our

00:25:39,279 --> 00:25:44,799
next

00:25:40,400 --> 00:25:48,720
very special guest of honor which is

00:25:44,799 --> 00:25:52,400
bob young and um the two of them go

00:25:48,720 --> 00:25:56,480
back quite a bit in the early days

00:25:52,400 --> 00:25:59,840
of red hat inc specifically

00:25:56,480 --> 00:26:03,520
held it to get the hardware platforms

00:25:59,840 --> 00:26:06,640
on board with the free software

00:26:03,520 --> 00:26:08,000
operating that was being re introduced

00:26:06,640 --> 00:26:11,279
into

00:26:08,000 --> 00:26:14,520
the ecosystem and

00:26:11,279 --> 00:26:17,760
it it was something that i

00:26:14,520 --> 00:26:20,799
understand turned into be

00:26:17,760 --> 00:26:24,080
i don't know the most successful

00:26:20,799 --> 00:26:28,559
business model in

00:26:24,080 --> 00:26:31,120
open source if not technology so

00:26:28,559 --> 00:26:32,559
i i think we're safe to say at this

00:26:31,120 --> 00:26:35,600
point in history

00:26:32,559 --> 00:26:38,720
that it was a good idea

00:26:35,600 --> 00:26:42,640
to ship free software

00:26:38,720 --> 00:26:46,000
on all sorts of microprocessors

00:26:42,640 --> 00:26:49,520
and i'm really glad to have heard from

00:26:46,000 --> 00:26:52,000
john mad dog hall today discussing

00:26:49,520 --> 00:26:52,880
all sorts of processors that are

00:26:52,000 --> 00:26:57,039
available

00:26:52,880 --> 00:27:02,159
for your use

00:26:57,039 --> 00:27:02,159
on the linux kernel in 2020.

00:27:02,640 --> 00:27:09,520
that's fabulous fabulous work uh did

00:27:06,240 --> 00:27:11,360
mad dog rejoin us i rejoined you

00:27:09,520 --> 00:27:12,490
where did you where did you lose me or

00:27:11,360 --> 00:27:14,159
where did i lose you

00:27:12,490 --> 00:27:16,240
[Laughter]

00:27:14,159 --> 00:27:17,520
um you you made it all the way to the

00:27:16,240 --> 00:27:19,760
end and

00:27:17,520 --> 00:27:21,279
you got permanently stuck in a thumbs up

00:27:19,760 --> 00:27:22,240
position so i don't know if you planned

00:27:21,279 --> 00:27:25,440
that but if you did

00:27:22,240 --> 00:27:26,880
i am impressed there's some questions

00:27:25,440 --> 00:27:29,039
actually do we have time or

00:27:26,880 --> 00:27:31,200
are we in a four panel like debate right

00:27:29,039 --> 00:27:31,200
now

00:27:31,360 --> 00:27:35,200
well i think this is the time that bob

00:27:33,600 --> 00:27:38,399
is supposed to join

00:27:35,200 --> 00:27:41,360
uh the session i think he joins at uh

00:27:38,399 --> 00:27:42,159
5 45. yeah you guys could both answer

00:27:41,360 --> 00:27:44,000
the questions

00:27:42,159 --> 00:27:45,520
or you could fight about it it's too

00:27:44,000 --> 00:27:49,039
it's up to you

00:27:45,520 --> 00:27:51,600
can you guys hear me i've unmuted myself

00:27:49,039 --> 00:27:51,600
you did great

00:27:53,610 --> 00:27:54,960
[Music]

00:27:53,780 --> 00:27:58,559
[Applause]

00:27:54,960 --> 00:28:02,480
marshall hugs for bob young

00:27:58,559 --> 00:28:03,039
you were amazing man it's a pleasure to

00:28:02,480 --> 00:28:06,080
be here

00:28:03,039 --> 00:28:07,520
tonight so don't uh kid yourselves it's

00:28:06,080 --> 00:28:10,559
my great uh

00:28:07,520 --> 00:28:13,919
honor and pleasure to be invited to your

00:28:10,559 --> 00:28:15,679
uh your well-established and very

00:28:13,919 --> 00:28:18,799
important conference

00:28:15,679 --> 00:28:24,159
yeah you you did it

00:28:18,799 --> 00:28:24,159
good job oh my god

00:28:27,200 --> 00:28:33,200
yeah and and what the beth you can speak

00:28:30,480 --> 00:28:36,320
to this one i've been hounded by the

00:28:33,200 --> 00:28:39,919
ohio linux uh group for

00:28:36,320 --> 00:28:40,480
10 years and i very rudely turned you

00:28:39,919 --> 00:28:42,559
down

00:28:40,480 --> 00:28:45,840
every year and so it's a great pleasure

00:28:42,559 --> 00:28:45,840
to be here tonight

00:28:46,000 --> 00:28:52,960
oh i i completely understand that you

00:28:50,559 --> 00:28:56,080
have priorities man with the

00:28:52,960 --> 00:28:58,159
the canadian football team that you own

00:28:56,080 --> 00:29:00,480
that that's outstanding that you're

00:28:58,159 --> 00:29:03,360
you're living your boyhood dreams

00:29:00,480 --> 00:29:03,760
and i i couldn't possibly take that away

00:29:03,360 --> 00:29:07,120
from

00:29:03,760 --> 00:29:08,640
anyone well the the real highlight of my

00:29:07,120 --> 00:29:11,440
day these days i'm an

00:29:08,640 --> 00:29:14,640
early stage entrepreneur guy so the

00:29:11,440 --> 00:29:17,279
smaller the business the happier i am

00:29:14,640 --> 00:29:18,799
and uh the most fun i'm having is

00:29:17,279 --> 00:29:22,640
actually with my wife's

00:29:18,799 --> 00:29:25,360
needlepoint business it turns out

00:29:22,640 --> 00:29:26,720
it turns out you lock america's women in

00:29:25,360 --> 00:29:28,960
their houses

00:29:26,720 --> 00:29:30,000
and they want two things they want

00:29:28,960 --> 00:29:33,039
toilet paper

00:29:30,000 --> 00:29:33,039
and needlepoint

00:29:33,520 --> 00:29:37,679
bob i'm going to object to that because

00:29:35,840 --> 00:29:40,880
i will have you know that there are many

00:29:37,679 --> 00:29:43,919
men who also do needlepoint

00:29:40,880 --> 00:29:46,240
that is true that mad dog and i'm if you

00:29:43,919 --> 00:29:48,799
aren't one of them i will uh

00:29:46,240 --> 00:29:49,520
i will turn you into one in in due

00:29:48,799 --> 00:29:51,840
course

00:29:49,520 --> 00:29:53,279
oh wonderful is there a brand behind

00:29:51,840 --> 00:29:55,520
this needlepoint class

00:29:53,279 --> 00:29:57,279
like is there a name for the company is

00:29:55,520 --> 00:30:00,039
it a company or is it

00:29:57,279 --> 00:30:01,279
yeah the company actually started in

00:30:00,039 --> 00:30:06,399
1999.

00:30:01,279 --> 00:30:06,399
um we're able to buy the url

00:30:06,840 --> 00:30:11,520
needlepoint.com we've

00:30:08,320 --> 00:30:15,039
actually called it needlepoint.com

00:30:11,520 --> 00:30:18,480
ever since that is the brand oh wow and

00:30:15,039 --> 00:30:23,120
you can't forget it for the first uh

00:30:18,480 --> 00:30:26,559
15 years we didn't do any

00:30:23,120 --> 00:30:29,679
of the internet uh needle pointers are

00:30:26,559 --> 00:30:32,320
typically uh people who are

00:30:29,679 --> 00:30:33,919
sort of retired from either their job or

00:30:32,320 --> 00:30:37,919
raising kids

00:30:33,919 --> 00:30:40,159
and so you know in in the year 2000

00:30:37,919 --> 00:30:41,360
50 year olds hadn't really used the

00:30:40,159 --> 00:30:45,919
internet

00:30:41,360 --> 00:30:48,720
today 50 year olds were 35 years old

00:30:45,919 --> 00:30:51,120
in 2000 and they've been using the

00:30:48,720 --> 00:30:52,960
internet ever since so now they retire

00:30:51,120 --> 00:30:54,880
or their kids leave home

00:30:52,960 --> 00:30:56,519
and they want to take up needlepoint

00:30:54,880 --> 00:30:58,399
where do they go they go to

00:30:56,519 --> 00:31:00,320
needlepoint.com

00:30:58,399 --> 00:31:01,760
i wonder during today's times if you've

00:31:00,320 --> 00:31:06,559
seen a surge in

00:31:01,760 --> 00:31:08,960
needlepoint exactly my point

00:31:06,559 --> 00:31:11,919
us and the toilet paper manufacturers

00:31:08,960 --> 00:31:15,039
are having a very good year

00:31:11,919 --> 00:31:16,240
um oh we have a question on

00:31:15,039 --> 00:31:18,159
would you like to read the zoom

00:31:16,240 --> 00:31:19,200
questions i feel like you you sh you got

00:31:18,159 --> 00:31:22,000
those right beth

00:31:19,200 --> 00:31:22,640
i think it's a different i'll read them

00:31:22,000 --> 00:31:24,320
there

00:31:22,640 --> 00:31:25,919
they're for mad dog do you have

00:31:24,320 --> 00:31:30,399
suggestions for the

00:31:25,919 --> 00:31:30,399
patterns and paradigms beyond

00:31:30,840 --> 00:31:36,960
knr

00:31:32,399 --> 00:31:41,120
oh there's lots of books out there

00:31:36,960 --> 00:31:43,360
on performance and a lot of the

00:31:41,120 --> 00:31:45,679
a lot of the performance issues are

00:31:43,360 --> 00:31:48,159
somewhat language dependent

00:31:45,679 --> 00:31:49,840
that the different languages hold the

00:31:48,159 --> 00:31:51,840
data in different ways

00:31:49,840 --> 00:31:54,799
and the different languages have

00:31:51,840 --> 00:31:57,360
different ways of specifying data

00:31:54,799 --> 00:31:58,720
so i don't really have i mean just

00:31:57,360 --> 00:32:01,760
looking for books

00:31:58,720 --> 00:32:03,279
on computer performance i think would be

00:32:01,760 --> 00:32:06,320
a better thing to go

00:32:03,279 --> 00:32:10,399
than a specific uh

00:32:06,320 --> 00:32:12,320
a specific paradigm book i i know that

00:32:10,399 --> 00:32:13,679
i remember one book that was very good

00:32:12,320 --> 00:32:16,559
about using

00:32:13,679 --> 00:32:17,840
fortran for doing multi-threaded

00:32:16,559 --> 00:32:19,440
programming

00:32:17,840 --> 00:32:21,279
and it told you how to set up your

00:32:19,440 --> 00:32:25,120
algorithms in fortran

00:32:21,279 --> 00:32:28,559
so that it was easier to spread

00:32:25,120 --> 00:32:31,919
your use multiple threads going across

00:32:28,559 --> 00:32:33,600
your fortran programs so you know

00:32:31,919 --> 00:32:35,279
i don't really have any off the top of

00:32:33,600 --> 00:32:37,840
my head i'm sorry

00:32:35,279 --> 00:32:38,720
but are the slides being shared anywhere

00:32:37,840 --> 00:32:40,880
that's a big one

00:32:38,720 --> 00:32:42,960
because the book recommendations flew by

00:32:40,880 --> 00:32:46,320
for people and they were like huh

00:32:42,960 --> 00:32:46,960
i sent a copy of my p a pdf of my slides

00:32:46,320 --> 00:32:49,039
to

00:32:46,960 --> 00:32:51,519
ooh a couple days ago so if you'd like

00:32:49,039 --> 00:32:53,600
to put them up on your site please do

00:32:51,519 --> 00:32:55,760
give them more work that's a great idea

00:32:53,600 --> 00:32:58,799
right on the schedule

00:32:55,760 --> 00:33:01,200
oh that's good okay

00:32:58,799 --> 00:33:03,200
so there's another zoom question for bob

00:33:01,200 --> 00:33:06,720
have you considered one day sponsoring a

00:33:03,200 --> 00:33:08,720
canadian curling team from jeff

00:33:06,720 --> 00:33:11,350
i feel like this might this might have

00:33:08,720 --> 00:33:12,960
like someone may have a vested interest

00:33:11,350 --> 00:33:16,240
[Music]

00:33:12,960 --> 00:33:19,519
so the short answer is uh no i'm not a

00:33:16,240 --> 00:33:22,960
curler and uh but

00:33:19,519 --> 00:33:26,320
uh i'll have to look into it jack so

00:33:22,960 --> 00:33:27,760
send me a note to bob at lulu.com

00:33:26,320 --> 00:33:29,360
and i'd be happy to have the

00:33:27,760 --> 00:33:32,640
conversation

00:33:29,360 --> 00:33:34,799
perfect oh man

00:33:32,640 --> 00:33:36,480
bob do you have a nickname mad dog has a

00:33:34,799 --> 00:33:38,640
nickname people want to know what how

00:33:36,480 --> 00:33:39,519
mad dog had got his nickname do you have

00:33:38,640 --> 00:33:42,159
one

00:33:39,519 --> 00:33:44,240
maybe you could both share stories so i

00:33:42,159 --> 00:33:44,559
have a lot of nicknames most of them are

00:33:44,240 --> 00:33:46,799
not

00:33:44,559 --> 00:33:47,760
polite enough to share on you on your

00:33:46,799 --> 00:33:51,039
ears

00:33:47,760 --> 00:33:52,799
but uh i go by with the tiger cats and

00:33:51,039 --> 00:33:55,440
this is an interesting one because i

00:33:52,799 --> 00:33:58,960
think of it in exactly the same way in

00:33:55,440 --> 00:33:58,960
at red hat uh

00:34:00,159 --> 00:34:07,840
uh-oh hello

00:34:11,839 --> 00:34:18,079
so the concept is that you know i don't

00:34:15,280 --> 00:34:21,119
have a i'm not a smart guy like mad dog

00:34:18,079 --> 00:34:23,520
so my role here uh

00:34:21,119 --> 00:34:25,200
is really just to try and communicate to

00:34:23,520 --> 00:34:29,280
the world the value

00:34:25,200 --> 00:34:31,760
uh going the story around open source

00:34:29,280 --> 00:34:34,079
the value of what the open source

00:34:31,760 --> 00:34:36,399
community was doing

00:34:34,079 --> 00:34:38,639
because the world didn't understand it

00:34:36,399 --> 00:34:41,359
when you tried to explain it in terms of

00:34:38,639 --> 00:34:44,320
source code versus binary

00:34:41,359 --> 00:34:47,200
so my job as an old typewriter salesman

00:34:44,320 --> 00:34:50,879
was to articulate it in terms

00:34:47,200 --> 00:34:53,839
that non-techy people could actually

00:34:50,879 --> 00:34:56,560
understand and and uh that's that's

00:34:53,839 --> 00:35:00,880
where the nickname i think started

00:34:56,560 --> 00:35:04,880
uh and anyway so so there you go

00:35:00,880 --> 00:35:08,160
and my handle on twitter

00:35:04,880 --> 00:35:11,040
is caretaker bob for example ah

00:35:08,160 --> 00:35:13,119
interesting i want to point out that

00:35:11,040 --> 00:35:16,640
there were only three people

00:35:13,119 --> 00:35:18,400
who could never call me mad dog

00:35:16,640 --> 00:35:20,480
donny barnes who is one of the people

00:35:18,400 --> 00:35:23,520
who helped to start red hat

00:35:20,480 --> 00:35:26,320
and bob who was the second person

00:35:23,520 --> 00:35:27,599
and he just could never call me mad dog

00:35:26,320 --> 00:35:31,440
there's actually a third

00:35:27,599 --> 00:35:31,839
person john your mother was about to hit

00:35:31,440 --> 00:35:35,280
her

00:35:31,839 --> 00:35:35,280
no i was about to add her

00:35:36,480 --> 00:35:40,640
unfortunately mom died a number of years

00:35:38,480 --> 00:35:43,119
ago so there's only two left bob

00:35:40,640 --> 00:35:44,240
oh okay i hope you go on for many years

00:35:43,119 --> 00:35:46,880
so

00:35:44,240 --> 00:35:49,119
it and the problem that uh so let me

00:35:46,880 --> 00:35:51,520
start with the first story here of

00:35:49,119 --> 00:35:53,119
uh and answer your questions about how

00:35:51,520 --> 00:35:56,320
mad dog and i met

00:35:53,119 --> 00:35:58,000
which was uh i had stumbled into this

00:35:56,320 --> 00:36:00,960
open source play

00:35:58,000 --> 00:36:02,480
uh was actually starting to think that i

00:36:00,960 --> 00:36:05,359
might be able to

00:36:02,480 --> 00:36:06,400
to bet my kids college education on this

00:36:05,359 --> 00:36:08,560
thing

00:36:06,400 --> 00:36:09,440
uh but mark ewing and i were still

00:36:08,560 --> 00:36:12,960
funding it

00:36:09,440 --> 00:36:14,800
out of our own credit card

00:36:12,960 --> 00:36:16,480
credit card debt i would sign up for

00:36:14,800 --> 00:36:17,440
another credit card whenever i had

00:36:16,480 --> 00:36:20,880
another build up

00:36:17,440 --> 00:36:23,839
paid and all of a sudden we

00:36:20,880 --> 00:36:26,000
get a call from an executive at digital

00:36:23,839 --> 00:36:29,359
equipment corporation

00:36:26,000 --> 00:36:32,480
and we're going holy cow billion dollars

00:36:29,359 --> 00:36:36,079
is that a deck yeah do they call it deck

00:36:32,480 --> 00:36:38,880
yeah exactly deck or digital uh

00:36:36,079 --> 00:36:40,480
are interested in what we're doing and

00:36:38,880 --> 00:36:43,599
of course that executive

00:36:40,480 --> 00:36:43,839
was it was uh john hall or mad dog hall

00:36:43,599 --> 00:36:47,440
and

00:36:43,839 --> 00:36:49,920
and uh i was so impressed

00:36:47,440 --> 00:36:50,560
that a guy with zero backing from

00:36:49,920 --> 00:36:54,000
anywhere

00:36:50,560 --> 00:36:57,280
upstairs at digital like it

00:36:54,000 --> 00:37:00,000
mad dog did this all by himself and he

00:36:57,280 --> 00:37:03,200
did it with zero support from anyone

00:37:00,000 --> 00:37:06,640
at digital uh but yet

00:37:03,200 --> 00:37:08,560
he found resources at digital to support

00:37:06,640 --> 00:37:11,119
not only what we were doing but many

00:37:08,560 --> 00:37:14,880
other open source projects

00:37:11,119 --> 00:37:17,520
uh and you just gotta love a guy

00:37:14,880 --> 00:37:19,680
who works for a big corporation whose

00:37:17,520 --> 00:37:20,640
salary is on the line for making

00:37:19,680 --> 00:37:22,960
mistakes or

00:37:20,640 --> 00:37:25,760
you know not doing what his boss says

00:37:22,960 --> 00:37:29,040
who doesn't care what his boss says

00:37:25,760 --> 00:37:30,160
and steals from his corporation in order

00:37:29,040 --> 00:37:33,920
to make this

00:37:30,160 --> 00:37:37,680
movement move faster than it would of

00:37:33,920 --> 00:37:40,960
without digital support uh and he wasn't

00:37:37,680 --> 00:37:43,599
doing bob this wasn't stealing i i

00:37:40,960 --> 00:37:46,400
was an investment are you stealing with

00:37:43,599 --> 00:37:48,800
all the respect in the world

00:37:46,400 --> 00:37:49,440
as an entrepreneur i steal stuff as

00:37:48,800 --> 00:37:52,400
often

00:37:49,440 --> 00:37:53,280
anything that isn't tied down is is very

00:37:52,400 --> 00:37:55,280
sparrow

00:37:53,280 --> 00:37:57,090
borrow bob the words baro you know

00:37:55,280 --> 00:37:59,680
you're gonna worry it's a good word

00:37:57,090 --> 00:38:02,839
[Laughter]

00:37:59,680 --> 00:38:05,839
i can see why you're excited for this

00:38:02,839 --> 00:38:05,839
beth

00:38:11,839 --> 00:38:18,000
the gpl

00:38:14,960 --> 00:38:20,880
it was so do you want a story

00:38:18,000 --> 00:38:22,720
uh beth what what's the format now it

00:38:20,880 --> 00:38:25,440
should story time

00:38:22,720 --> 00:38:25,440
should should we learn

00:38:25,760 --> 00:38:29,200
because that's what this session is all

00:38:27,920 --> 00:38:32,160
about mad dog and i

00:38:29,200 --> 00:38:32,960
are just gonna relive some old stories

00:38:32,160 --> 00:38:35,599
hopefully

00:38:32,960 --> 00:38:37,200
if we pick the right ones they are

00:38:35,599 --> 00:38:40,480
stories that actually

00:38:37,200 --> 00:38:42,880
still resonate today and that

00:38:40,480 --> 00:38:45,440
whoever is listening to us might find

00:38:42,880 --> 00:38:46,640
some insight in what they are trying to

00:38:45,440 --> 00:38:50,240
do with

00:38:46,640 --> 00:38:50,720
uh with ours um uh john's by the way and

00:38:50,240 --> 00:38:53,119
and

00:38:50,720 --> 00:38:55,760
coming back to that story about john's

00:38:53,119 --> 00:38:58,720
willingness to borrow resources

00:38:55,760 --> 00:39:00,640
at digital uh for the greater good of

00:38:58,720 --> 00:39:03,280
the open source at the time the free

00:39:00,640 --> 00:39:06,000
software community

00:39:03,280 --> 00:39:06,960
is actually really really good career

00:39:06,000 --> 00:39:08,720
advice

00:39:06,960 --> 00:39:10,000
for anyone working in a large

00:39:08,720 --> 00:39:12,400
corporation

00:39:10,000 --> 00:39:16,800
if you spend all your time worrying

00:39:12,400 --> 00:39:16,800
about how to protect your salary

00:39:18,880 --> 00:39:22,800
i feel like we should then you won't

00:39:20,960 --> 00:39:24,880
have enough time to think about the

00:39:22,800 --> 00:39:26,839
actual goal that you're trying to go to

00:39:24,880 --> 00:39:28,480
is this a test to see if we're paying

00:39:26,839 --> 00:39:32,079
attention

00:39:28,480 --> 00:39:34,160
well and you'll miss opportunities okay

00:39:32,079 --> 00:39:36,160
you'll miss opportunities while we're

00:39:34,160 --> 00:39:39,599
waiting for bob to come back

00:39:36,160 --> 00:39:41,200
um i will add that some of my

00:39:39,599 --> 00:39:43,280
some of the things i was doing was

00:39:41,200 --> 00:39:46,400
calling in favors

00:39:43,280 --> 00:39:47,440
that other people owed me from times

00:39:46,400 --> 00:39:50,800
that i had done

00:39:47,440 --> 00:39:53,119
them favors okay because that's a lot of

00:39:50,800 --> 00:39:55,280
ways to get stuff done

00:39:53,119 --> 00:39:56,480
people people that you've helped in the

00:39:55,280 --> 00:39:59,520
past

00:39:56,480 --> 00:40:00,160
now come back and say this is a great

00:39:59,520 --> 00:40:01,920
idea

00:40:00,160 --> 00:40:03,440
would you know would you help me with

00:40:01,920 --> 00:40:05,599
this

00:40:03,440 --> 00:40:06,720
and a lot of a lot of the stuff in

00:40:05,599 --> 00:40:09,839
companies

00:40:06,720 --> 00:40:14,240
is done that way

00:40:09,839 --> 00:40:17,040
you back with us yes i am okay

00:40:14,240 --> 00:40:17,760
i selfishly i selfishly want to ask that

00:40:17,040 --> 00:40:19,359
your first

00:40:17,760 --> 00:40:21,359
experience with linux because i think it

00:40:19,359 --> 00:40:23,200
would be really an amazing story but i

00:40:21,359 --> 00:40:25,440
also know there's a presentation

00:40:23,200 --> 00:40:29,040
to be done so i leave it up to you beth

00:40:25,440 --> 00:40:29,040

YouTube URL: https://www.youtube.com/watch?v=DgebWaD5QGw


