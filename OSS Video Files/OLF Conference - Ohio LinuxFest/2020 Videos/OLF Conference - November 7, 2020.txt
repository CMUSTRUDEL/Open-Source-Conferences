Title: OLF Conference - November 7, 2020
Publication date: 2021-01-01
Playlist: 2020 Videos
Description: 
	To participate in the conference through Zoom and Slack register here: https://olfconference.org/registration/
Captions: 
	00:00:00,080 --> 00:00:06,399
you're uh mike activated and everything

00:00:03,040 --> 00:00:09,760
great i'm off mute so i guess so perfect

00:00:06,399 --> 00:00:11,920
wonderful thanks a lot uh i wanted to

00:00:09,760 --> 00:00:14,160
personally thank you again for

00:00:11,920 --> 00:00:16,880
presenting this has been

00:00:14,160 --> 00:00:17,520
i've lost count of how many years now

00:00:16,880 --> 00:00:20,640
that you've

00:00:17,520 --> 00:00:23,039
you've presented at uh olf but uh you've

00:00:20,640 --> 00:00:25,119
given us a whole lot of great talks

00:00:23,039 --> 00:00:26,320
uh in the past and i just wanted to

00:00:25,119 --> 00:00:29,599
thank you for

00:00:26,320 --> 00:00:30,960
uh keeping that tradition going uh in

00:00:29,599 --> 00:00:33,840
this uh

00:00:30,960 --> 00:00:35,680
rather atypical year well hopefully next

00:00:33,840 --> 00:00:36,880
year we'll be back to visiting in person

00:00:35,680 --> 00:00:39,920
so

00:00:36,880 --> 00:00:43,040
fingers crossed absolutely yeah no we're

00:00:39,920 --> 00:00:45,200
yeah we're all hoping for that so

00:00:43,040 --> 00:00:46,399
we'll we'll look forward and and expect

00:00:45,200 --> 00:00:50,000
us to see you again

00:00:46,399 --> 00:00:53,199
there so to kind of give you a little

00:00:50,000 --> 00:00:56,239
uh introduction here so

00:00:53,199 --> 00:00:58,640
dave stokes is uh the

00:00:56,239 --> 00:00:59,680
maya sql community manager he works at

00:00:58,640 --> 00:01:02,559
oracle

00:00:59,680 --> 00:01:04,000
and he travels a lot to to present about

00:01:02,559 --> 00:01:06,960
mysql

00:01:04,000 --> 00:01:07,920
he's the the author of a book about

00:01:06,960 --> 00:01:11,280
mysql

00:01:07,920 --> 00:01:13,040
and json which talks about the the json

00:01:11,280 --> 00:01:16,240
data type and how it's handled

00:01:13,040 --> 00:01:18,080
uh within mysql oh yeah there we go

00:01:16,240 --> 00:01:19,280
unfortunately background screened out

00:01:18,080 --> 00:01:22,400
but again

00:01:19,280 --> 00:01:25,759
yeah uh

00:01:22,400 --> 00:01:26,479
and he's got quite a you know quite a

00:01:25,759 --> 00:01:28,880
background

00:01:26,479 --> 00:01:30,880
you i i see here you you talked about

00:01:28,880 --> 00:01:34,400
you started programming in fortran

00:01:30,880 --> 00:01:36,799
on on punch cards uh i actually

00:01:34,400 --> 00:01:39,360
was uh as an engineering student we used

00:01:36,799 --> 00:01:43,040
fortran a lot i

00:01:39,360 --> 00:01:45,040
did not use punch cards really but uh

00:01:43,040 --> 00:01:46,880
i'm i'm still a little bit old school

00:01:45,040 --> 00:01:48,240
when it comes to some of those things

00:01:46,880 --> 00:01:51,040
but not as old school as

00:01:48,240 --> 00:01:51,040
as some folks

00:01:52,799 --> 00:01:55,840
and uh so he's going to be talking about

00:01:55,280 --> 00:01:58,880
the

00:01:55,840 --> 00:02:02,960
uh the query optimizer in

00:01:58,880 --> 00:02:05,520
mysql and how you can

00:02:02,960 --> 00:02:08,239
how you can improve performance problems

00:02:05,520 --> 00:02:12,160
that you may be encountering

00:02:08,239 --> 00:02:15,440
my own uses of databases and mysql

00:02:12,160 --> 00:02:16,959
are not that complex so uh it's not

00:02:15,440 --> 00:02:17,280
something that i've encountered but i

00:02:16,959 --> 00:02:20,000
know

00:02:17,280 --> 00:02:21,440
a lot of people talk about they really

00:02:20,000 --> 00:02:23,599
need to optimize

00:02:21,440 --> 00:02:25,280
their their database to reduce the load

00:02:23,599 --> 00:02:26,560
on their servers so

00:02:25,280 --> 00:02:28,800
it's going to be really interesting to

00:02:26,560 --> 00:02:31,280
hear about uh

00:02:28,800 --> 00:02:32,239
what they've done in order to to make

00:02:31,280 --> 00:02:36,160
ice

00:02:32,239 --> 00:02:38,319
mysql perform a lot better so

00:02:36,160 --> 00:02:39,200
enough from me and i will turn it over

00:02:38,319 --> 00:02:40,879
to dave

00:02:39,200 --> 00:02:43,519
thank you well thank you all for having

00:02:40,879 --> 00:02:45,840
me back and thanks for joining virtually

00:02:43,519 --> 00:02:46,800
uh i gotta warn you i've set an alarm uh

00:02:45,840 --> 00:02:49,760
this is a

00:02:46,800 --> 00:02:51,760
a talk that i i give that normally runs

00:02:49,760 --> 00:02:54,160
upwards of 90 minutes so

00:02:51,760 --> 00:02:55,519
uh to spare you i've set a timer uh if

00:02:54,160 --> 00:02:58,319
you have questions please

00:02:55,519 --> 00:02:59,360
pop them up i'll monitor q a as best i

00:02:58,319 --> 00:03:00,560
can

00:02:59,360 --> 00:03:02,879
if you need to get a hold of me here's

00:03:00,560 --> 00:03:05,840
my contact information i am the mysql

00:03:02,879 --> 00:03:09,440
community manager for north america

00:03:05,840 --> 00:03:11,200
and uh first thing i have to go over is

00:03:09,440 --> 00:03:13,840
the oracle safe harbor agreement i am

00:03:11,200 --> 00:03:16,640
talking 99.9999

00:03:13,840 --> 00:03:17,599
today about the free to download license

00:03:16,640 --> 00:03:20,480
to the gpl

00:03:17,599 --> 00:03:22,000
version two uh mysql community server

00:03:20,480 --> 00:03:24,080
and community software

00:03:22,000 --> 00:03:25,519
however if during question and answer i

00:03:24,080 --> 00:03:28,000
go off intelligent

00:03:25,519 --> 00:03:29,599
on a future product uh this is the

00:03:28,000 --> 00:03:30,879
legally saying take that with a grain of

00:03:29,599 --> 00:03:32,400
salt i don't have perfect knowledge

00:03:30,879 --> 00:03:34,720
what's coming up so

00:03:32,400 --> 00:03:37,200
get past that real quick by the way if

00:03:34,720 --> 00:03:38,239
you're running mysql56 next february i

00:03:37,200 --> 00:03:40,640
believe it's the

00:03:38,239 --> 00:03:42,959
fifth or the sixth of february uh

00:03:40,640 --> 00:03:44,959
mysql56 reaches end of life status no

00:03:42,959 --> 00:03:46,560
more bug fixes no more support

00:03:44,959 --> 00:03:48,640
you're officially running dinosaur

00:03:46,560 --> 00:03:50,080
equipment and as someone who loves

00:03:48,640 --> 00:03:52,879
vintage cars and richard's

00:03:50,080 --> 00:03:54,720
vintage guitars and vintage motorcycles

00:03:52,879 --> 00:03:56,560
uh believe me the older the things are

00:03:54,720 --> 00:03:58,159
the harder they are to get repaired and

00:03:56,560 --> 00:03:59,760
to find parts for

00:03:58,159 --> 00:04:01,519
plus it's hard to find people who know

00:03:59,760 --> 00:04:02,879
how to work those old versions so if you

00:04:01,519 --> 00:04:06,159
are running five six

00:04:02,879 --> 00:04:07,920
please update uh by the way

00:04:06,159 --> 00:04:10,400
if you're interested in trying the mysql

00:04:07,920 --> 00:04:13,519
database service uh you can get 300

00:04:10,400 --> 00:04:14,239
in credits for free just go to that

00:04:13,519 --> 00:04:16,320
website

00:04:14,239 --> 00:04:17,840
and you get a full version of mysql

00:04:16,320 --> 00:04:19,519
enterprise edition which means you get

00:04:17,840 --> 00:04:22,639
enterprise backup the

00:04:19,519 --> 00:04:24,240
encryption stuff and all that uh 300 uh

00:04:22,639 --> 00:04:27,280
with some with one or two instances will

00:04:24,240 --> 00:04:27,280
last you quite a while

00:04:27,520 --> 00:04:31,520
and uh so what is this session about

00:04:30,479 --> 00:04:33,360
well

00:04:31,520 --> 00:04:34,960
very rarely do i ever hear anyone

00:04:33,360 --> 00:04:36,479
complain that you know this database is

00:04:34,960 --> 00:04:39,840
just running too darn fast

00:04:36,479 --> 00:04:42,320
my applications just can't keep up um

00:04:39,840 --> 00:04:42,960
speeding up queries if you follow

00:04:42,320 --> 00:04:46,000
certain

00:04:42,960 --> 00:04:49,440
uh websites which i won't name

00:04:46,000 --> 00:04:49,759
um stack overflow um you'll you'll see

00:04:49,440 --> 00:04:52,240
that

00:04:49,759 --> 00:04:53,360
uh a lot of folks see it as a dark art

00:04:52,240 --> 00:04:54,880
it's not a dark art

00:04:53,360 --> 00:04:56,720
it's kind of a misguided science but

00:04:54,880 --> 00:04:58,080
it's not a dark art

00:04:56,720 --> 00:05:00,479
the understanding how to speed up

00:04:58,080 --> 00:05:03,120
queries is often seen as

00:05:00,479 --> 00:05:04,400
as magic but it's really not and we're

00:05:03,120 --> 00:05:06,400
going to look at the proper uses of

00:05:04,400 --> 00:05:07,520
indexes histograms locking options and

00:05:06,400 --> 00:05:08,960
some of the other ways to speed up

00:05:07,520 --> 00:05:10,960
queries

00:05:08,960 --> 00:05:12,639
one of the problems that i see is that

00:05:10,960 --> 00:05:16,000
this is a very dry subject

00:05:12,639 --> 00:05:17,680
i mean we're talking stack dump tracing

00:05:16,000 --> 00:05:20,800
dry for assembly language

00:05:17,680 --> 00:05:22,240
level stuff uh very very dry if you

00:05:20,800 --> 00:05:22,880
don't catch it the first time you walk

00:05:22,240 --> 00:05:24,560
through this

00:05:22,880 --> 00:05:26,240
this is recorded watch it again the

00:05:24,560 --> 00:05:28,560
slides are online

00:05:26,240 --> 00:05:29,520
uh about by the way the link down at the

00:05:28,560 --> 00:05:32,080
bottom in red is

00:05:29,520 --> 00:05:34,080
where you can get the the slides i also

00:05:32,080 --> 00:05:36,000
just tweeted it

00:05:34,080 --> 00:05:38,000
also this is a presentation with lots of

00:05:36,000 --> 00:05:39,759
text on screen i'm sorry there's really

00:05:38,000 --> 00:05:42,000
no other way to

00:05:39,759 --> 00:05:45,600
to give this information over if i could

00:05:42,000 --> 00:05:45,600
do it with sock puppets i would

00:05:46,639 --> 00:05:50,240
now something else we're not going to

00:05:48,800 --> 00:05:53,039
cover today is

00:05:50,240 --> 00:05:54,080
system configuration of your os uh not

00:05:53,039 --> 00:05:56,639
to cover the cons

00:05:54,080 --> 00:05:58,160
configuration of mysql i'm not going to

00:05:56,639 --> 00:06:00,080
talk about hardware there are wonderful

00:05:58,160 --> 00:06:02,400
talks out there on hardware

00:06:00,080 --> 00:06:03,680
uh things like disk buffers that lie to

00:06:02,400 --> 00:06:05,039
you

00:06:03,680 --> 00:06:07,199
throughput channels that aren't quite

00:06:05,039 --> 00:06:09,120
working the way and also networking if

00:06:07,199 --> 00:06:12,400
you're doing a lot of replication

00:06:09,120 --> 00:06:14,639
and you're also running dns and

00:06:12,400 --> 00:06:15,680
ldap services on the same network

00:06:14,639 --> 00:06:17,039
segment

00:06:15,680 --> 00:06:18,400
your database is occasionally going to

00:06:17,039 --> 00:06:19,919
have problems that aren't really related

00:06:18,400 --> 00:06:21,759
to the database but it'll be blamed on

00:06:19,919 --> 00:06:23,600
the database

00:06:21,759 --> 00:06:24,880
also not talking today about normalizing

00:06:23,600 --> 00:06:26,720
your data

00:06:24,880 --> 00:06:28,800
in the relational world you want to set

00:06:26,720 --> 00:06:30,479
up your data with minimum redundancies

00:06:28,800 --> 00:06:32,240
and by doing this you have it in

00:06:30,479 --> 00:06:33,120
manageable chunks that work with set

00:06:32,240 --> 00:06:35,360
theory

00:06:33,120 --> 00:06:36,160
this relational calculus and believe it

00:06:35,360 --> 00:06:39,120
or not the math

00:06:36,160 --> 00:06:40,240
actually does work um unfortunately

00:06:39,120 --> 00:06:41,120
can't go into that today because we've

00:06:40,240 --> 00:06:43,759
only got uh

00:06:41,120 --> 00:06:45,120
30 some odd minutes and what i'd like to

00:06:43,759 --> 00:06:47,520
emphasize that you can't

00:06:45,120 --> 00:06:49,440
build a skyscraper on a sandy beach it's

00:06:47,520 --> 00:06:51,199
just not going to take the pressure and

00:06:49,440 --> 00:06:53,599
it's going to collapse on you

00:06:51,199 --> 00:06:54,240
for normalization i recommend third form

00:06:53,599 --> 00:06:56,560
or normal

00:06:54,240 --> 00:06:57,440
i am now recommending using json columns

00:06:56,560 --> 00:06:59,919
for stubbed

00:06:57,440 --> 00:07:00,479
information if you have to make multiple

00:06:59,919 --> 00:07:03,120
dives

00:07:00,479 --> 00:07:03,919
to get your customers billing address

00:07:03,120 --> 00:07:05,919
for instance

00:07:03,919 --> 00:07:08,560
you might want to slightly denormalize

00:07:05,919 --> 00:07:09,840
by using a json column

00:07:08,560 --> 00:07:12,080
also think about how you're going to use

00:07:09,840 --> 00:07:13,599
your data if you're recording a whole

00:07:12,080 --> 00:07:15,280
bunch of sales

00:07:13,599 --> 00:07:16,880
from cash register data and you're going

00:07:15,280 --> 00:07:17,840
to do time series analysis

00:07:16,880 --> 00:07:18,800
that's going to be a little bit

00:07:17,840 --> 00:07:20,479
different than if you're going to go

00:07:18,800 --> 00:07:22,400
back go back and do some transactional

00:07:20,479 --> 00:07:24,560
analysis

00:07:22,400 --> 00:07:26,880
once again don't eat fork with a don't

00:07:24,560 --> 00:07:28,800
use a fork to eat your suit

00:07:26,880 --> 00:07:30,400
by the way badly normalized data will

00:07:28,800 --> 00:07:32,000
hurt the performance of your queries no

00:07:30,400 --> 00:07:33,759
matter how much training you give

00:07:32,000 --> 00:07:36,240
give it a dox it will not be faster than

00:07:33,759 --> 00:07:38,000
the thoroughbred horse

00:07:36,240 --> 00:07:40,000
okay the optimizer consider the

00:07:38,000 --> 00:07:43,120
optimizer the brain and nervous system

00:07:40,000 --> 00:07:44,639
of the database it

00:07:43,120 --> 00:07:46,639
wants to look at your query and try to

00:07:44,639 --> 00:07:50,400
figure out the fastest most

00:07:46,639 --> 00:07:53,440
inexpensive way to get your data to you

00:07:50,400 --> 00:07:55,360
the trouble here is that this is quite a

00:07:53,440 --> 00:07:57,759
complex problem

00:07:55,360 --> 00:07:59,360
uh there's lots of academic papers come

00:07:57,759 --> 00:08:01,520
on this every week

00:07:59,360 --> 00:08:03,039
and most are built on a cost model that

00:08:01,520 --> 00:08:06,720
mathematical cost model

00:08:03,039 --> 00:08:08,160
is based on uh basically disk reads

00:08:06,720 --> 00:08:09,680
because that used to be the slowest

00:08:08,160 --> 00:08:10,879
thing in the entire chain and that's

00:08:09,680 --> 00:08:12,400
what we're still using it for and

00:08:10,879 --> 00:08:13,199
there's some advances in that but that's

00:08:12,400 --> 00:08:16,639
a little too

00:08:13,199 --> 00:08:17,440
crazy for this talk now the optimizer

00:08:16,639 --> 00:08:19,680
wants to look at

00:08:17,440 --> 00:08:20,960
every option you give it a query it

00:08:19,680 --> 00:08:22,879
tears it apart

00:08:20,960 --> 00:08:24,160
and it says okay i know where this piece

00:08:22,879 --> 00:08:25,520
of information is i know where this

00:08:24,160 --> 00:08:27,440
piece of information is what's the

00:08:25,520 --> 00:08:29,759
shortest way between them

00:08:27,440 --> 00:08:32,399
and it's kind of like a gps positioning

00:08:29,759 --> 00:08:35,120
uh gps in your phone or your car

00:08:32,399 --> 00:08:36,560
uh it's built on historical statistics

00:08:35,120 --> 00:08:39,360
uh these statistics

00:08:36,560 --> 00:08:40,000
are are great but if i want to go to the

00:08:39,360 --> 00:08:42,000
local

00:08:40,000 --> 00:08:43,039
uh my local favorite restaurant it's

00:08:42,000 --> 00:08:45,200
left out of the driveway

00:08:43,039 --> 00:08:46,480
right at the end of the street over the

00:08:45,200 --> 00:08:48,720
railroad tracks

00:08:46,480 --> 00:08:51,279
and the restaurant's right on the left

00:08:48,720 --> 00:08:52,880
well my gps doesn't know what the trains

00:08:51,279 --> 00:08:55,440
parked across its tracks doesn't know

00:08:52,880 --> 00:08:57,440
the guy two houses down had a water

00:08:55,440 --> 00:08:59,519
leak and flooded out the road so

00:08:57,440 --> 00:09:02,080
historical information is great but it

00:08:59,519 --> 00:09:04,399
doesn't always help if you're adding a

00:09:02,080 --> 00:09:07,360
lot of data or changing a lot of data

00:09:04,399 --> 00:09:09,600
the optimizer can easily get confused by

00:09:07,360 --> 00:09:11,760
the way mysql wants to optimize each

00:09:09,600 --> 00:09:13,040
query every time it sees it there's no

00:09:11,760 --> 00:09:15,360
locking down the query plan

00:09:13,040 --> 00:09:16,959
like in oracle uh later in this

00:09:15,360 --> 00:09:18,240
presentation look for optimizer hints if

00:09:16,959 --> 00:09:20,720
you want to see how there's a way

00:09:18,240 --> 00:09:22,080
kind of how to do that oh by the way i

00:09:20,720 --> 00:09:25,440
will teach you how to look at a query

00:09:22,080 --> 00:09:28,399
plan and how to get it so if your query

00:09:25,440 --> 00:09:29,120
has five joints the optimizer has a

00:09:28,399 --> 00:09:31,279
hundred

00:09:29,120 --> 00:09:33,279
well has five factorial or 120 different

00:09:31,279 --> 00:09:34,720
options just for the joints

00:09:33,279 --> 00:09:36,720
that doesn't get into anything on the

00:09:34,720 --> 00:09:39,360
right hand side of the where clause

00:09:36,720 --> 00:09:40,800
so if you have 120 different ways you

00:09:39,360 --> 00:09:43,360
can assemble that thing

00:09:40,800 --> 00:09:44,560
you have the ultimate ikea lego

00:09:43,360 --> 00:09:46,800
nightmare

00:09:44,560 --> 00:09:48,880
but there are heuristics that the

00:09:46,800 --> 00:09:50,720
optimizer follows

00:09:48,880 --> 00:09:52,720
now for you you're going to end up using

00:09:50,720 --> 00:09:55,120
something called explain

00:09:52,720 --> 00:09:56,000
now explain something i could teach in a

00:09:55,120 --> 00:09:58,240
two-week class

00:09:56,000 --> 00:09:59,760
and kind of get the major highlights on

00:09:58,240 --> 00:10:01,120
uh in five minutes i'm not going to be

00:09:59,760 --> 00:10:03,360
able to get too much but i'll kind of

00:10:01,120 --> 00:10:05,279
give you the oversight

00:10:03,360 --> 00:10:06,640
this is the syntax i've explained by the

00:10:05,279 --> 00:10:08,000
way that's our new shell on the right

00:10:06,640 --> 00:10:11,440
hand side which has command

00:10:08,000 --> 00:10:15,360
completion and wonderful uh

00:10:11,440 --> 00:10:17,200
help section there by the way if you go

00:10:15,360 --> 00:10:18,000
through the mysql manual it's worth

00:10:17,200 --> 00:10:20,320
reading chapter

00:10:18,000 --> 00:10:21,120
eight if you're trying to figure out how

00:10:20,320 --> 00:10:23,200
to

00:10:21,120 --> 00:10:24,399
get a handle on this it explains a lot

00:10:23,200 --> 00:10:25,680
of in detail there's some books that

00:10:24,399 --> 00:10:29,360
i'll mention later that are

00:10:25,680 --> 00:10:30,720
worth pursuing now

00:10:29,360 --> 00:10:33,360
the trouble with explain is there's

00:10:30,720 --> 00:10:35,279
different types of explain

00:10:33,360 --> 00:10:37,200
we have straight explain explain with

00:10:35,279 --> 00:10:39,279
different formats explain analyze and

00:10:37,200 --> 00:10:40,880
visual explain

00:10:39,279 --> 00:10:42,320
this is an example of running explain on

00:10:40,880 --> 00:10:43,839
a query uh

00:10:42,320 --> 00:10:45,760
hopefully you can see my my mouse

00:10:43,839 --> 00:10:47,440
bouncing around here ex

00:10:45,760 --> 00:10:49,360
put explain in front of the query

00:10:47,440 --> 00:10:51,360
explain select from star

00:10:49,360 --> 00:10:53,760
select star from the table city where

00:10:51,360 --> 00:10:56,640
country code equals gbr

00:10:53,760 --> 00:10:58,399
that's my actual query over here are the

00:10:56,640 --> 00:10:59,760
details that the optimizer gets back

00:10:58,399 --> 00:11:01,760
from explaining it's saying well we're

00:10:59,760 --> 00:11:03,360
hitting the table city

00:11:01,760 --> 00:11:06,079
we have a reference in here the

00:11:03,360 --> 00:11:08,320
references to country code equals gbr

00:11:06,079 --> 00:11:09,519
possible keys we could use or indexes is

00:11:08,320 --> 00:11:11,600
country code

00:11:09,519 --> 00:11:12,640
by the way that index likes a three

00:11:11,600 --> 00:11:15,680
we'll get into why the length

00:11:12,640 --> 00:11:17,200
count is important later filtered we'll

00:11:15,680 --> 00:11:19,120
go into that a little bit later but down

00:11:17,200 --> 00:11:21,839
here is the actual query plan where the

00:11:19,120 --> 00:11:24,240
optimizer takes what you gave it up here

00:11:21,839 --> 00:11:27,040
and rewrites it so that the database can

00:11:24,240 --> 00:11:28,240
return what you asked for

00:11:27,040 --> 00:11:30,240
once again if you don't get this the

00:11:28,240 --> 00:11:32,880
first time through uh watch again go

00:11:30,240 --> 00:11:34,399
through the slide deck uh play with it

00:11:32,880 --> 00:11:35,920
visual explain comes with moscow

00:11:34,399 --> 00:11:36,959
workbench which is another free tool

00:11:35,920 --> 00:11:38,800
that we have

00:11:36,959 --> 00:11:41,200
and that's basically the same

00:11:38,800 --> 00:11:44,320
information just in a graphical format

00:11:41,200 --> 00:11:45,839
by the way green boxes usually are good

00:11:44,320 --> 00:11:48,399
red boxes mean you have to have a little

00:11:45,839 --> 00:11:48,399
bit of concern

00:11:48,640 --> 00:11:53,040
well we also have tree format this will

00:11:51,120 --> 00:11:55,040
tell you that

00:11:53,040 --> 00:11:56,639
this is slightly different query it's

00:11:55,040 --> 00:11:58,320
using something called a hash join

00:11:56,639 --> 00:11:59,440
between two tables in this case we're

00:11:58,320 --> 00:12:01,440
going to have

00:11:59,440 --> 00:12:02,959
the table city joined to the table

00:12:01,440 --> 00:12:06,079
called country

00:12:02,959 --> 00:12:06,079
and we're going to

00:12:06,320 --> 00:12:10,000
mash those together and this is coming

00:12:08,800 --> 00:12:13,279
back with some information

00:12:10,000 --> 00:12:16,480
on uh the relative cost of the various

00:12:13,279 --> 00:12:19,680
uh various optimizations or the

00:12:16,480 --> 00:12:21,120
joinings that we're doing for medical

00:12:19,680 --> 00:12:22,160
json this gives you even more

00:12:21,120 --> 00:12:23,600
information

00:12:22,160 --> 00:12:25,200
i don't think any of you are probably

00:12:23,600 --> 00:12:26,240
going to want this level of information

00:12:25,200 --> 00:12:28,240
maybe in a couple years

00:12:26,240 --> 00:12:30,000
so it's nice to show you that it's here

00:12:28,240 --> 00:12:31,120
uh once again it tells us the table

00:12:30,000 --> 00:12:32,639
we're going after

00:12:31,120 --> 00:12:35,040
the number of rows it's going to have to

00:12:32,639 --> 00:12:35,839
scan over here it says we're getting a

00:12:35,040 --> 00:12:38,720
hash join

00:12:35,839 --> 00:12:39,920
uh the read cost the evaluation cost

00:12:38,720 --> 00:12:42,320
prefix cost

00:12:39,920 --> 00:12:43,760
data read per join is going to be six

00:12:42,320 --> 00:12:45,680
megabytes

00:12:43,760 --> 00:12:47,519
so the information's out there is just

00:12:45,680 --> 00:12:50,399
learning how to decipher it

00:12:47,519 --> 00:12:52,639
now something we did add in mysql8018 by

00:12:50,399 --> 00:12:53,680
the way the latest is 802.22 so if this

00:12:52,639 --> 00:12:56,959
has been out there for

00:12:53,680 --> 00:12:58,320
a bit over a year normally explain uses

00:12:56,959 --> 00:13:00,160
historical information

00:12:58,320 --> 00:13:01,600
explain analyze actually goes out and

00:13:00,160 --> 00:13:03,360
runs your query

00:13:01,600 --> 00:13:04,639
so big warning if you have a big nasty

00:13:03,360 --> 00:13:05,839
analytics

00:13:04,639 --> 00:13:07,120
query that you think is going to run for

00:13:05,839 --> 00:13:08,079
a couple hours and suck up all the

00:13:07,120 --> 00:13:10,320
memory uh

00:13:08,079 --> 00:13:11,600
probably better to avoid this during

00:13:10,320 --> 00:13:13,680
business hours

00:13:11,600 --> 00:13:15,200
so explain analyze goes out there and

00:13:13,680 --> 00:13:16,959
runs the query

00:13:15,200 --> 00:13:20,399
and comes back and gives you the actual

00:13:16,959 --> 00:13:22,000
time by the way if you are uh playing

00:13:20,399 --> 00:13:24,160
with explain and explain analyze and

00:13:22,000 --> 00:13:26,959
know a big variance between actual time

00:13:24,160 --> 00:13:28,800
and the time that the estimate is uh run

00:13:26,959 --> 00:13:29,920
explain analyze on the table and double

00:13:28,800 --> 00:13:32,240
check the indexes

00:13:29,920 --> 00:13:34,079
uh just to make sure they're they're not

00:13:32,240 --> 00:13:36,320
mismatched in size or

00:13:34,079 --> 00:13:38,160
data type and that should clean up

00:13:36,320 --> 00:13:41,839
things a bit for you

00:13:38,160 --> 00:13:43,760
so more on using explain later uh on to

00:13:41,839 --> 00:13:46,880
something else even more fun

00:13:43,760 --> 00:13:49,760
indexes uh oftentimes

00:13:46,880 --> 00:13:50,639
you see people throw indexes at a

00:13:49,760 --> 00:13:52,000
database

00:13:50,639 --> 00:13:54,320
because they've read somewhere that

00:13:52,000 --> 00:13:57,199
indexing makes everything faster

00:13:54,320 --> 00:13:57,760
and indexes do let you track down things

00:13:57,199 --> 00:14:00,160
faster

00:13:57,760 --> 00:14:02,399
however there are some problems with

00:14:00,160 --> 00:14:04,959
indexes there's some overhead and often

00:14:02,399 --> 00:14:07,600
people apply indexes poorly

00:14:04,959 --> 00:14:08,399
let's see nothing on the qa right now so

00:14:07,600 --> 00:14:10,160
think of the

00:14:08,399 --> 00:14:11,920
index as a table with shortcuts to

00:14:10,160 --> 00:14:14,079
another table

00:14:11,920 --> 00:14:15,120
so someone comes and looks up the

00:14:14,079 --> 00:14:18,240
vehicle identification

00:14:15,120 --> 00:14:19,519
of your car that's an index into another

00:14:18,240 --> 00:14:22,800
table that actually has

00:14:19,519 --> 00:14:25,440
the real data on your car so the the

00:14:22,800 --> 00:14:27,279
index is actually kind of a a small

00:14:25,440 --> 00:14:29,360
junior version of the table

00:14:27,279 --> 00:14:30,320
by the way the more indexes and tables

00:14:29,360 --> 00:14:31,760
you have

00:14:30,320 --> 00:14:33,360
the more this database wants to have

00:14:31,760 --> 00:14:33,839
them in memory and the more memories

00:14:33,360 --> 00:14:35,760
taken

00:14:33,839 --> 00:14:37,120
up by the way if you've never heard this

00:14:35,760 --> 00:14:40,000
before databases love

00:14:37,120 --> 00:14:41,360
memory more than a faster processor so

00:14:40,000 --> 00:14:42,399
memory is where you spend your your

00:14:41,360 --> 00:14:45,600
money

00:14:42,399 --> 00:14:48,399
so mysql has many types of indexes

00:14:45,600 --> 00:14:49,920
uh once again this is the syntax for

00:14:48,399 --> 00:14:52,800
creating indexes

00:14:49,920 --> 00:14:54,079
uh we have unique full text spatial a

00:14:52,800 --> 00:14:58,399
whole bunch of qualifiers

00:14:54,079 --> 00:15:00,399
algorithms um block sizes uh whether you

00:14:58,399 --> 00:15:02,639
want to be a bee tree or hash but that's

00:15:00,399 --> 00:15:05,600
kind of beyond the pale for today

00:15:02,639 --> 00:15:07,519
so let's create a simple table with a

00:15:05,600 --> 00:15:10,000
primary key

00:15:07,519 --> 00:15:12,320
mysql's main storage engine in odb

00:15:10,000 --> 00:15:15,199
prefers to have a primary key if

00:15:12,320 --> 00:15:16,720
you don't specify one it will pick one

00:15:15,199 --> 00:15:18,959
it will make up a dummy one and i can

00:15:16,720 --> 00:15:21,839
guarantee you will not be performant

00:15:18,959 --> 00:15:23,279
so pick your own primary key so we have

00:15:21,839 --> 00:15:26,320
a simple table here

00:15:23,279 --> 00:15:28,399
table called t1 we have three columns

00:15:26,320 --> 00:15:30,480
the first one is an integer we're saying

00:15:28,399 --> 00:15:32,000
it's not null i'll go in the null later

00:15:30,480 --> 00:15:33,680
uh we're going to auto increment so

00:15:32,000 --> 00:15:35,759
every time we input

00:15:33,680 --> 00:15:37,279
a row of data it's going to take

00:15:35,759 --> 00:15:39,120
whatever the previous value was

00:15:37,279 --> 00:15:40,720
and increment it by whatever you set it

00:15:39,120 --> 00:15:42,160
to be usually one

00:15:40,720 --> 00:15:43,839
and we're going to call this our primary

00:15:42,160 --> 00:15:44,240
key so this is how we're going to look

00:15:43,839 --> 00:15:46,720
up

00:15:44,240 --> 00:15:49,680
most of the data on this table then we

00:15:46,720 --> 00:15:49,680
have two other columns

00:15:49,920 --> 00:15:53,600
now an index is a list of keys and

00:15:52,720 --> 00:15:54,880
you'll also

00:15:53,600 --> 00:15:57,279
you'll often hear them used

00:15:54,880 --> 00:15:58,000
interchangeably which can kind of get

00:15:57,279 --> 00:16:00,160
confusing

00:15:58,000 --> 00:16:01,759
but there is a slight difference but in

00:16:00,160 --> 00:16:02,880
the mysql world you can kind of use them

00:16:01,759 --> 00:16:05,279
interchangeably

00:16:02,880 --> 00:16:06,399
so don't worry about that if you see key

00:16:05,279 --> 00:16:10,079
and think index or

00:16:06,399 --> 00:16:12,560
vice versa now the primary key

00:16:10,079 --> 00:16:13,199
is one that's hopefully uniquely defined

00:16:12,560 --> 00:16:15,519
for a row

00:16:13,199 --> 00:16:16,480
and should be immutable you don't want

00:16:15,519 --> 00:16:19,600
to go back and

00:16:16,480 --> 00:16:20,800
up those move stuff around later as i

00:16:19,600 --> 00:16:23,759
mentioned before

00:16:20,800 --> 00:16:25,680
nodb wants a primary key very badly and

00:16:23,759 --> 00:16:26,800
please don't use null values i'll give

00:16:25,680 --> 00:16:28,880
that another thing

00:16:26,800 --> 00:16:30,639
also it wants the numbers to

00:16:28,880 --> 00:16:32,320
monotonically increase

00:16:30,639 --> 00:16:34,720
that's like going one two three four

00:16:32,320 --> 00:16:37,279
five or 10 20 30 40.

00:16:34,720 --> 00:16:38,880
if you really really love uuids which do

00:16:37,279 --> 00:16:41,199
not monotonically increase

00:16:38,880 --> 00:16:43,600
and are kind of a waste of space we have

00:16:41,199 --> 00:16:46,639
a function called uuid to bin

00:16:43,600 --> 00:16:49,199
uh which will uh let you work with mysql

00:16:46,639 --> 00:16:51,759
efficiently

00:16:49,199 --> 00:16:52,560
so something else you can do is you can

00:16:51,759 --> 00:16:55,440
actually index

00:16:52,560 --> 00:16:56,160
on the prefix of a column uh sometimes

00:16:55,440 --> 00:16:59,600
getting right

00:16:56,160 --> 00:17:02,560
in the rough area is close enough

00:16:59,600 --> 00:17:04,559
saying like you have last names that are

00:17:02,560 --> 00:17:06,240
75 characters long

00:17:04,559 --> 00:17:08,319
but you do some analysis on that you

00:17:06,240 --> 00:17:08,959
find out that 99.9 percent of your

00:17:08,319 --> 00:17:11,280
customers

00:17:08,959 --> 00:17:12,240
uh the after the first 10 characters

00:17:11,280 --> 00:17:14,160
there's very little

00:17:12,240 --> 00:17:16,559
things that aren't unique uh you might

00:17:14,160 --> 00:17:19,039
have 24 5

00:17:16,559 --> 00:17:19,760
von bluchensteins but if you get the von

00:17:19,039 --> 00:17:23,199
blue you

00:17:19,760 --> 00:17:24,720
you're pretty good uh pretty good close

00:17:23,199 --> 00:17:27,600
to the records that you want

00:17:24,720 --> 00:17:28,160
so in this case we're going to create an

00:17:27,600 --> 00:17:30,240
index

00:17:28,160 --> 00:17:31,679
part of name on the customer field and

00:17:30,240 --> 00:17:35,600
we're going to use the first

00:17:31,679 --> 00:17:35,600
10 characters of the name column

00:17:36,480 --> 00:17:41,520
you can also have multi-column indexes

00:17:38,640 --> 00:17:42,799
in this table we have columns for last

00:17:41,520 --> 00:17:44,559
name and first name

00:17:42,799 --> 00:17:46,799
so we're going to create an index last

00:17:44,559 --> 00:17:49,200
name then first name

00:17:46,799 --> 00:17:51,200
so to use this column we can search on

00:17:49,200 --> 00:17:51,520
last name and first name or just last

00:17:51,200 --> 00:17:54,720
name

00:17:51,520 --> 00:17:56,240
it won't work on just first name it kind

00:17:54,720 --> 00:17:57,840
of works left to right so put the

00:17:56,240 --> 00:18:00,240
highest cardinality index

00:17:57,840 --> 00:18:01,360
on the first field if you're using year

00:18:00,240 --> 00:18:03,039
month day

00:18:01,360 --> 00:18:05,120
that index will work on year month day

00:18:03,039 --> 00:18:08,160
year month and year but not month day

00:18:05,120 --> 00:18:09,520
or just day or just month

00:18:08,160 --> 00:18:12,000
although if you have questions pop them

00:18:09,520 --> 00:18:16,000
up on q a i'll

00:18:12,000 --> 00:18:17,679
check on that when when i can

00:18:16,000 --> 00:18:19,039
hashing values sometimes you have data

00:18:17,679 --> 00:18:21,760
that just doesn't quite

00:18:19,039 --> 00:18:22,880
fit uh that mold so what you can do is

00:18:21,760 --> 00:18:24,799
you can

00:18:22,880 --> 00:18:27,039
uh concat in this example we're

00:18:24,799 --> 00:18:29,520
encountering two values and using md5

00:18:27,039 --> 00:18:33,280
hash

00:18:29,520 --> 00:18:33,919
sometimes things just don't work out the

00:18:33,280 --> 00:18:35,360
way you want

00:18:33,919 --> 00:18:37,039
also you can have things called a

00:18:35,360 --> 00:18:38,880
covering index where the index will

00:18:37,039 --> 00:18:40,400
cover all the values you need to return

00:18:38,880 --> 00:18:43,840
a query you don't actually have to dive

00:18:40,400 --> 00:18:43,840
into the data table itself

00:18:44,720 --> 00:18:48,400
i mentioned that a little bit before i

00:18:46,240 --> 00:18:51,120
went to slide unique indexes there's

00:18:48,400 --> 00:18:53,039
only one value per row

00:18:51,120 --> 00:18:54,960
full text indexes if you're doing text

00:18:53,039 --> 00:18:58,320
searches we can do

00:18:54,960 --> 00:18:59,679
with an odb a full text search that's

00:18:58,320 --> 00:19:01,360
pretty interesting one of the

00:18:59,679 --> 00:19:03,200
interesting features is you can actually

00:19:01,360 --> 00:19:04,400
say uh the first word

00:19:03,200 --> 00:19:06,559
that you're searching for has to be

00:19:04,400 --> 00:19:08,400
within x numbers of the number of words

00:19:06,559 --> 00:19:11,440
of the second one

00:19:08,400 --> 00:19:13,520
secondary indexes this is um

00:19:11,440 --> 00:19:14,799
your you have your primary index and you

00:19:13,520 --> 00:19:16,559
have something else in that column

00:19:14,799 --> 00:19:17,200
you've indexed maybe the customer zip

00:19:16,559 --> 00:19:19,200
code

00:19:17,200 --> 00:19:21,600
well that secondary index will actually

00:19:19,200 --> 00:19:23,120
point to the entry for the primary index

00:19:21,600 --> 00:19:24,720
entry for the table

00:19:23,120 --> 00:19:26,720
and spatial indexes are these are

00:19:24,720 --> 00:19:29,280
actually our trees for gis

00:19:26,720 --> 00:19:30,320
type data very interesting but not what

00:19:29,280 --> 00:19:32,720
we're covering today

00:19:30,320 --> 00:19:33,919
in detail also we have functional

00:19:32,720 --> 00:19:36,640
indexes

00:19:33,919 --> 00:19:37,360
here's some examples functional indexes

00:19:36,640 --> 00:19:39,200
are

00:19:37,360 --> 00:19:40,799
the result of some sort of function so

00:19:39,200 --> 00:19:42,720
if you want to round up to the nearest

00:19:40,799 --> 00:19:45,760
100 to be able to

00:19:42,720 --> 00:19:46,320
give people price cost breaks um or you

00:19:45,760 --> 00:19:48,320
want to sub

00:19:46,320 --> 00:19:49,840
two things like the second example here

00:19:48,320 --> 00:19:51,120
call one plus call two so that's the

00:19:49,840 --> 00:19:52,400
cost of goods sold

00:19:51,120 --> 00:19:56,160
and the shipping cost so you have a

00:19:52,400 --> 00:19:56,160
rough idea what your costs are

00:19:56,400 --> 00:20:00,720
multi-value indexes came out fairly

00:19:58,400 --> 00:20:03,600
recently with the json data type

00:20:00,720 --> 00:20:05,840
we had a lot of people putting in very

00:20:03,600 --> 00:20:08,720
extensive json documents with arrays

00:20:05,840 --> 00:20:09,840
in there and before multi-value indexes

00:20:08,720 --> 00:20:13,760
every

00:20:09,840 --> 00:20:18,000
index entry could only point to one

00:20:13,760 --> 00:20:20,320
row in a data table well with all these

00:20:18,000 --> 00:20:22,159
arrays that didn't quite make sense so

00:20:20,320 --> 00:20:23,600
with multi-value indexes you could now

00:20:22,159 --> 00:20:27,280
have more index pointers

00:20:23,600 --> 00:20:27,679
than uh than rows and in this example

00:20:27,280 --> 00:20:31,280
here

00:20:27,679 --> 00:20:34,880
we're looking for the value of three

00:20:31,280 --> 00:20:36,880
in that json array

00:20:34,880 --> 00:20:38,480
by the way that really pays off above

00:20:36,880 --> 00:20:41,280
about 20 million rows

00:20:38,480 --> 00:20:42,480
the speed is just absolutely amazing so

00:20:41,280 --> 00:20:45,280
mysql has

00:20:42,480 --> 00:20:45,600
two main types of index structures uh

00:20:45,280 --> 00:20:47,600
the

00:20:45,600 --> 00:20:48,799
balance tree which you see on the left

00:20:47,600 --> 00:20:51,600
there uh

00:20:48,799 --> 00:20:53,120
values 0 to 40 here pulling off on this

00:20:51,600 --> 00:20:56,240
left branch

00:20:53,120 --> 00:20:57,919
and that's further broken down it's a

00:20:56,240 --> 00:21:01,039
binary search

00:20:57,919 --> 00:21:03,919
it's worked well for for several years

00:21:01,039 --> 00:21:04,559
hash joints basically they're more

00:21:03,919 --> 00:21:06,240
efficient

00:21:04,559 --> 00:21:09,360
than the traditional nested loop join

00:21:06,240 --> 00:21:09,360
that mysql is known for

00:21:11,360 --> 00:21:14,840
you'll see a lot of your queries once

00:21:12,880 --> 00:21:18,159
you get running i think it was

00:21:14,840 --> 00:21:19,679
8018. 8019 era

00:21:18,159 --> 00:21:23,120
just suddenly start running a lot faster

00:21:19,679 --> 00:21:23,120
because the hash joins are automatic

00:21:23,360 --> 00:21:28,400
now please keep in mind the optimizer

00:21:26,640 --> 00:21:32,320
is a complicated piece of software but

00:21:28,400 --> 00:21:34,640
some of the heuristics are not exactly

00:21:32,320 --> 00:21:35,840
enlightened if there is a choice between

00:21:34,640 --> 00:21:38,080
multiple indexes

00:21:35,840 --> 00:21:39,120
on joining tables or searching for

00:21:38,080 --> 00:21:42,080
something

00:21:39,120 --> 00:21:44,080
mysql normally grabs the index with the

00:21:42,080 --> 00:21:45,600
smallest number of rows

00:21:44,080 --> 00:21:47,280
and hopefully thinking it's the most

00:21:45,600 --> 00:21:49,440
selective uh

00:21:47,280 --> 00:21:50,799
mysql use indexes on columns more

00:21:49,440 --> 00:21:53,440
efficiently if they're declared

00:21:50,799 --> 00:21:55,360
declared the same type and size so

00:21:53,440 --> 00:21:57,120
compare apples with apples bananas with

00:21:55,360 --> 00:21:59,440
bananas

00:21:57,120 --> 00:22:00,159
far car and car are great but doing

00:21:59,440 --> 00:22:03,360
varchar

00:22:00,159 --> 00:22:05,760
and say a a real value or

00:22:03,360 --> 00:22:07,679
a decimal it's going to have to be cast

00:22:05,760 --> 00:22:08,960
and each row is going to have to be cast

00:22:07,679 --> 00:22:12,480
so you can see where that has

00:22:08,960 --> 00:22:12,960
extra complexity there by the way check

00:22:12,480 --> 00:22:16,320
your

00:22:12,960 --> 00:22:17,600
string collations and character sets

00:22:16,320 --> 00:22:19,520
for instance if i'm doing something with

00:22:17,600 --> 00:22:22,240
utf-8 mb4

00:22:19,520 --> 00:22:23,280
and i'm combining it with latin one it

00:22:22,240 --> 00:22:26,640
kind of gets messy

00:22:23,280 --> 00:22:28,080
things have to be set up and evaluated

00:22:26,640 --> 00:22:29,919
separately it's just not an easy

00:22:28,080 --> 00:22:32,880
comparison

00:22:29,919 --> 00:22:34,080
okay no back in the early days of

00:22:32,880 --> 00:22:37,039
structured query language

00:22:34,080 --> 00:22:38,840
they wanted a way to represent that they

00:22:37,039 --> 00:22:42,880
didn't know something

00:22:38,840 --> 00:22:45,600
so um they came with the idea of no

00:22:42,880 --> 00:22:46,240
uh the old binary trick was zero for

00:22:45,600 --> 00:22:49,200
false

00:22:46,240 --> 00:22:51,360
one for true and don't know null uh

00:22:49,200 --> 00:22:52,159
great idea the only trouble is null has

00:22:51,360 --> 00:22:55,280
kind of um

00:22:52,159 --> 00:22:57,120
some nasty side effects uh this is a

00:22:55,280 --> 00:23:00,640
nice visual example of

00:22:57,120 --> 00:23:01,679
of um what null can mean to a lot of

00:23:00,640 --> 00:23:04,080
folks

00:23:01,679 --> 00:23:04,880
uh it's not exactly true but it's uh

00:23:04,080 --> 00:23:08,320
it's

00:23:04,880 --> 00:23:10,880
it's cute so

00:23:08,320 --> 00:23:12,320
if you have a column that you're

00:23:10,880 --> 00:23:13,679
indexing and you have a whole bunch of

00:23:12,320 --> 00:23:15,520
null values in there

00:23:13,679 --> 00:23:17,520
uh it's kind of like you go through the

00:23:15,520 --> 00:23:19,440
kitchen looking for a knife and you know

00:23:17,520 --> 00:23:20,640
it's not with the rest of the silverware

00:23:19,440 --> 00:23:22,640
and you eventually have to get down to

00:23:20,640 --> 00:23:24,080
the junk drawer and between pulling out

00:23:22,640 --> 00:23:26,159
the

00:23:24,080 --> 00:23:27,760
the flashlights holding dead batteries

00:23:26,159 --> 00:23:28,880
and that old strip of velcro that you're

00:23:27,760 --> 00:23:30,640
going to use for something

00:23:28,880 --> 00:23:32,000
somewhere in that junk drawer are your

00:23:30,640 --> 00:23:35,280
null values so

00:23:32,000 --> 00:23:37,360
they're not very efficient so please

00:23:35,280 --> 00:23:41,600
avoid nulls in your primary

00:23:37,360 --> 00:23:43,679
keys and your indexes invisible indexes

00:23:41,600 --> 00:23:45,679
uh this is something when i heard about

00:23:43,679 --> 00:23:48,159
i thought that's kind of a weird idea

00:23:45,679 --> 00:23:50,640
what is an invisible index

00:23:48,159 --> 00:23:52,640
well in the past if you were trying to

00:23:50,640 --> 00:23:54,880
figure out if an index was helping you

00:23:52,640 --> 00:23:56,480
what you do is you look at that index

00:23:54,880 --> 00:23:57,679
and say i don't know if you're a good

00:23:56,480 --> 00:24:00,159
index or not

00:23:57,679 --> 00:24:01,120
you'd run explain on your query you'd

00:24:00,159 --> 00:24:04,159
remove that index

00:24:01,120 --> 00:24:05,760
just delete it

00:24:04,159 --> 00:24:07,600
uh run reuben explain and while you're

00:24:05,760 --> 00:24:09,760
looking at the output to explain

00:24:07,600 --> 00:24:10,960
you get phone calls texts screams from

00:24:09,760 --> 00:24:12,880
down the hallway

00:24:10,960 --> 00:24:14,240
especially from a power user about their

00:24:12,880 --> 00:24:15,039
their queries suddenly running very

00:24:14,240 --> 00:24:18,159
slowly

00:24:15,039 --> 00:24:21,279
i guess what they're using that index

00:24:18,159 --> 00:24:22,400
well you uh decide that you need to get

00:24:21,279 --> 00:24:25,200
that index back

00:24:22,400 --> 00:24:26,240
and it can take seconds minutes hours

00:24:25,200 --> 00:24:28,240
days

00:24:26,240 --> 00:24:30,320
uh hopefully not longer than a couple

00:24:28,240 --> 00:24:33,039
minutes but sometimes it takes longer

00:24:30,320 --> 00:24:34,159
to rebuild that index well after

00:24:33,039 --> 00:24:36,880
invisible indexes

00:24:34,159 --> 00:24:37,919
uh what you can do is look at that index

00:24:36,880 --> 00:24:41,039
say i'm

00:24:37,919 --> 00:24:43,200
doubtful about your use run explain make

00:24:41,039 --> 00:24:46,400
the index invisible the optimizer can no

00:24:43,200 --> 00:24:50,320
longer see that index it's a

00:24:46,400 --> 00:24:52,799
a server wide blank out of that index

00:24:50,320 --> 00:24:54,080
rerun explain suddenly you start getting

00:24:52,799 --> 00:24:56,400
the text screams

00:24:54,080 --> 00:24:58,080
from the power user about slow query you

00:24:56,400 --> 00:25:00,400
make the index usable again

00:24:58,080 --> 00:25:01,440
power user is happy everyone goes along

00:25:00,400 --> 00:25:03,200
their way

00:25:01,440 --> 00:25:05,120
and you start playing it on the network

00:25:03,200 --> 00:25:08,640
javascript gdpr or slack or

00:25:05,120 --> 00:25:10,159
the cloud um by the way the cis schema

00:25:08,640 --> 00:25:11,840
which is something you can look up using

00:25:10,159 --> 00:25:13,440
mysql workbench

00:25:11,840 --> 00:25:15,520
will show you which indexes have not

00:25:13,440 --> 00:25:17,360
been used and are candidates for removal

00:25:15,520 --> 00:25:19,360
they'll also show you

00:25:17,360 --> 00:25:20,960
queries that are running without indexes

00:25:19,360 --> 00:25:24,400
that are candidates to be

00:25:20,960 --> 00:25:28,080
indexed for the removal ones um

00:25:24,400 --> 00:25:29,600
i always urge caution make a big backup

00:25:28,080 --> 00:25:32,799
or two before you delete them

00:25:29,600 --> 00:25:34,880
and i recommend turning invisible by the

00:25:32,799 --> 00:25:35,679
way after a reboot is not a good time to

00:25:34,880 --> 00:25:38,720
look at the

00:25:35,679 --> 00:25:40,000
uh the statistics because the statistics

00:25:38,720 --> 00:25:43,120
are historical

00:25:40,000 --> 00:25:45,039
and get wiped out after a reboot so

00:25:43,120 --> 00:25:46,720
if you see an index that hasn't been

00:25:45,039 --> 00:25:49,279
used in

00:25:46,720 --> 00:25:50,159
um two weeks maybe because this was

00:25:49,279 --> 00:25:51,600
after reboot

00:25:50,159 --> 00:25:53,039
by the way some indexes are out there

00:25:51,600 --> 00:25:54,320
that are only used once a quarter or

00:25:53,039 --> 00:25:57,360
once a year so

00:25:54,320 --> 00:25:59,840
be careful before you blow anything away

00:25:57,360 --> 00:26:01,039
how to use invisible index real simple

00:25:59,840 --> 00:26:04,240
alter table

00:26:01,039 --> 00:26:06,080
table name and name the index

00:26:04,240 --> 00:26:09,279
and make it invisible then if you want

00:26:06,080 --> 00:26:11,039
to turn it visible it's just reverse

00:26:09,279 --> 00:26:12,880
histograms now this is something that

00:26:11,039 --> 00:26:13,600
came out with 8-0 so it's been out here

00:26:12,880 --> 00:26:17,039
since

00:26:13,600 --> 00:26:19,039
april of 2018. they're kind of

00:26:17,039 --> 00:26:20,880
a different way of looking at things

00:26:19,039 --> 00:26:22,080
kind of the uh

00:26:20,880 --> 00:26:24,640
the other end of the spectrum from

00:26:22,080 --> 00:26:26,400
indexes and no they're not gluten free

00:26:24,640 --> 00:26:29,360
or keto friendly

00:26:26,400 --> 00:26:29,760
this is a histogram of the heights of

00:26:29,360 --> 00:26:33,120
one

00:26:29,760 --> 00:26:35,600
ten thousand u.s females as you see here

00:26:33,120 --> 00:26:37,520
the height tends to center around these

00:26:35,600 --> 00:26:40,159
two values and peak off

00:26:37,520 --> 00:26:43,520
what about 3 000 women at i'm guessing

00:26:40,159 --> 00:26:45,279
that's 165 centimeters

00:26:43,520 --> 00:26:46,559
so wikipedia says the histogram is an

00:26:45,279 --> 00:26:49,360
accurate representation of the

00:26:46,559 --> 00:26:51,039
distribution of numerical data

00:26:49,360 --> 00:26:52,720
this means the optimizer knows where

00:26:51,039 --> 00:26:55,440
your data is

00:26:52,720 --> 00:26:56,559
if it doesn't have the statistics it

00:26:55,440 --> 00:26:58,960
kind of has to

00:26:56,559 --> 00:27:00,799
search around and find everything so the

00:26:58,960 --> 00:27:02,480
histograms help the optimizer find the

00:27:00,799 --> 00:27:03,840
most efficient query plan to fetch the

00:27:02,480 --> 00:27:06,080
data

00:27:03,840 --> 00:27:07,440
now there are two types singleton and

00:27:06,080 --> 00:27:09,279
equiheight

00:27:07,440 --> 00:27:10,559
by the way it's going to a histogram is

00:27:09,279 --> 00:27:13,760
going to

00:27:10,559 --> 00:27:17,760
divide up your data into logical buckets

00:27:13,760 --> 00:27:19,760
and histograms are primarily useful for

00:27:17,760 --> 00:27:21,520
non-indexed columns

00:27:19,760 --> 00:27:22,799
if the data doesn't churn a lot or

00:27:21,520 --> 00:27:24,480
doesn't churn at all i'd

00:27:22,799 --> 00:27:25,840
recommend using a histogram over an

00:27:24,480 --> 00:27:28,399
index

00:27:25,840 --> 00:27:29,679
by the way every time you update delete

00:27:28,399 --> 00:27:32,000
or

00:27:29,679 --> 00:27:32,799
modify an index entry there's overhead

00:27:32,000 --> 00:27:35,039
there

00:27:32,799 --> 00:27:37,279
and if you have several indexes on a

00:27:35,039 --> 00:27:39,679
table and you're doing lots of updates

00:27:37,279 --> 00:27:42,399
uh things can slow down there histograms

00:27:39,679 --> 00:27:42,399
don't have that

00:27:42,720 --> 00:27:46,799
and that's kind of the reason there by

00:27:44,880 --> 00:27:48,080
the way occasionally the optimizer will

00:27:46,799 --> 00:27:50,640
make index dives

00:27:48,080 --> 00:27:52,640
to double check the statistics on

00:27:50,640 --> 00:27:54,960
indexes

00:27:52,640 --> 00:27:56,480
the system does not actually double

00:27:54,960 --> 00:27:57,360
check with you to make sure if it's okay

00:27:56,480 --> 00:27:59,120
to do that just

00:27:57,360 --> 00:28:00,799
after you left for lunch or go home for

00:27:59,120 --> 00:28:03,039
the long weekend

00:28:00,799 --> 00:28:04,480
so uh index dives happen when you don't

00:28:03,039 --> 00:28:07,919
expect them and they can

00:28:04,480 --> 00:28:10,000
impact performance okay

00:28:07,919 --> 00:28:11,279
um occasionally optimizer fails to find

00:28:10,000 --> 00:28:12,559
the most efficient plan and ends up

00:28:11,279 --> 00:28:15,760
spending a lot of time

00:28:12,559 --> 00:28:17,679
executing the query uh that is necessary

00:28:15,760 --> 00:28:20,480
oh i need to go back on histograms

00:28:17,679 --> 00:28:21,520
uh the two types equal height uh so like

00:28:20,480 --> 00:28:23,760
you have a hundred

00:28:21,520 --> 00:28:25,200
entries and you set it up in four

00:28:23,760 --> 00:28:27,440
buckets you know that each of those four

00:28:25,200 --> 00:28:29,440
buckets is going to have 25 entries

00:28:27,440 --> 00:28:30,960
or you have 36 entries and all the

00:28:29,440 --> 00:28:32,240
entries are alphabetized so you know

00:28:30,960 --> 00:28:33,120
that all the entries that start with an

00:28:32,240 --> 00:28:37,200
a are going to be in

00:28:33,120 --> 00:28:38,080
bucket a so the optimizer assumes that

00:28:37,200 --> 00:28:39,919
the data is

00:28:38,080 --> 00:28:42,000
evenly distributed in columns which

00:28:39,919 --> 00:28:45,120
might not be true

00:28:42,000 --> 00:28:46,960
there's all sorts of of

00:28:45,120 --> 00:28:48,559
interesting data analysis tools that go

00:28:46,960 --> 00:28:51,120
along with this

00:28:48,559 --> 00:28:52,000
so the optimizer often doesn't have

00:28:51,120 --> 00:28:53,679
enough information

00:28:52,000 --> 00:28:56,880
on you know how many rows are in each

00:28:53,679 --> 00:28:58,240
table and their distribution

00:28:56,880 --> 00:29:00,159
so once again the two types of

00:28:58,240 --> 00:29:02,640
histograms equal height one bucket is a

00:29:00,159 --> 00:29:05,120
range of values uh once again

00:29:02,640 --> 00:29:06,240
uh we have an example here of having

00:29:05,120 --> 00:29:09,600
people line up a to g

00:29:06,240 --> 00:29:12,399
h to l m to t u to z uh singleton one

00:29:09,600 --> 00:29:15,440
bucket represents a single value

00:29:12,399 --> 00:29:18,159
of that so here's an example of

00:29:15,440 --> 00:29:20,320
doing a frequency histogram we're going

00:29:18,159 --> 00:29:21,919
to have three buckets 101 102

00:29:20,320 --> 00:29:24,000
103. don't happen to know what happened

00:29:21,919 --> 00:29:24,720
to 104. we're going to insert into a

00:29:24,000 --> 00:29:29,840
table

00:29:24,720 --> 00:29:33,360
two 101s three 102s and one 104.

00:29:29,840 --> 00:29:36,320
so if we do select from our table we see

00:29:33,360 --> 00:29:38,240
that we have the two 101s the three 102s

00:29:36,320 --> 00:29:39,760
and the 1104

00:29:38,240 --> 00:29:42,720
and we created a histogram with three

00:29:39,760 --> 00:29:44,159
buckets now the optimizer knows that if

00:29:42,720 --> 00:29:48,240
we're looking for something

00:29:44,159 --> 00:29:49,840
that has a value of 101

00:29:48,240 --> 00:29:52,000
it's going to be somewhere in the first

00:29:49,840 --> 00:29:53,760
third of all the data

00:29:52,000 --> 00:29:56,000
if it's looking for something that's 101

00:29:53,760 --> 00:29:57,279
or 102 it knows it's going to be

00:29:56,000 --> 00:30:00,320
somewhere in the first

00:29:57,279 --> 00:30:01,840
83 percent of the data and anything with

00:30:00,320 --> 00:30:03,679
104 is going to be

00:30:01,840 --> 00:30:06,840
in the first hundred percent of the data

00:30:03,679 --> 00:30:09,440
by the way this is a singleton

00:30:06,840 --> 00:30:11,679
histogram now uh

00:30:09,440 --> 00:30:13,520
looking at the statistics of this um the

00:30:11,679 --> 00:30:16,960
cumulative frequency

00:30:13,520 --> 00:30:20,480
we know that 101 is 33 of our

00:30:16,960 --> 00:30:22,720
of our data and we know that 102

00:30:20,480 --> 00:30:25,200
the cumulative frequency is 83 even

00:30:22,720 --> 00:30:27,840
though it's only 50 percent of our data

00:30:25,200 --> 00:30:30,080
but this gives the optimizer a better

00:30:27,840 --> 00:30:33,440
chance of finding your data

00:30:30,080 --> 00:30:36,399
very quickly very efficiently

00:30:33,440 --> 00:30:37,919
uh easy to create and remove histograms

00:30:36,399 --> 00:30:41,840
first example here

00:30:37,919 --> 00:30:45,360
analyze table update histograms on table

00:30:41,840 --> 00:30:46,960
on columns 1 c1 c2 and c3 each having 10

00:30:45,360 --> 00:30:49,360
buckets

00:30:46,960 --> 00:30:51,600
and we can also come back later and

00:30:49,360 --> 00:30:54,480
re-do the histogram

00:30:51,600 --> 00:30:56,240
on c1 and c2 and we can decide that we

00:30:54,480 --> 00:30:57,919
don't really need to histogram on c2

00:30:56,240 --> 00:31:01,039
so these are three different histograms

00:30:57,919 --> 00:31:02,320
on three different columns

00:31:01,039 --> 00:31:04,720
if you want instrument information on

00:31:02,320 --> 00:31:08,080
histograms they're out there

00:31:04,720 --> 00:31:09,760
in our information schema

00:31:08,080 --> 00:31:12,000
they can tell you the table name the

00:31:09,760 --> 00:31:15,039
population the data type you're looking

00:31:12,000 --> 00:31:15,039
at in the bucket count

00:31:15,279 --> 00:31:18,480
now where histograms sign you'll have to

00:31:17,039 --> 00:31:18,960
give forgive me for giving this kind of

00:31:18,480 --> 00:31:20,399
elaborate

00:31:18,960 --> 00:31:22,399
demonstration we're going to create

00:31:20,399 --> 00:31:24,320
another simple table

00:31:22,399 --> 00:31:25,519
we're going to have in that table two

00:31:24,320 --> 00:31:27,600
values of one

00:31:25,519 --> 00:31:28,720
three values of two and three values of

00:31:27,600 --> 00:31:31,760
three

00:31:28,720 --> 00:31:35,519
so two ones three twos and four

00:31:31,760 --> 00:31:36,159
threes without a histogram we run

00:31:35,519 --> 00:31:38,159
explain

00:31:36,159 --> 00:31:40,799
we're going to explain select star from

00:31:38,159 --> 00:31:42,159
our table where x is greater than zero

00:31:40,799 --> 00:31:44,240
and remember that all our values are

00:31:42,159 --> 00:31:47,039
greater than zero

00:31:44,240 --> 00:31:47,760
the optimizer without a histogram is

00:31:47,039 --> 00:31:50,159
going to go well

00:31:47,760 --> 00:31:51,760
we know the table has nine rows in there

00:31:50,159 --> 00:31:55,039
and i'm going to guess

00:31:51,760 --> 00:31:57,279
that i know where it is i know

00:31:55,039 --> 00:31:58,399
where i'm gonna have to read at least a

00:31:57,279 --> 00:32:01,440
third of the table

00:31:58,399 --> 00:32:03,440
to get the information well

00:32:01,440 --> 00:32:05,760
we know that all the values are greater

00:32:03,440 --> 00:32:08,240
than that so

00:32:05,760 --> 00:32:09,760
the the filtered value here is kind of a

00:32:08,240 --> 00:32:11,360
estimated percentage of the table rows

00:32:09,760 --> 00:32:15,120
that need to be

00:32:11,360 --> 00:32:17,279
looked at now where the histogram shines

00:32:15,120 --> 00:32:20,399
is we go ahead and create a histogram

00:32:17,279 --> 00:32:20,960
on our table with three buckets now when

00:32:20,399 --> 00:32:22,960
we run

00:32:20,960 --> 00:32:24,640
the explain on there it knows where all

00:32:22,960 --> 00:32:26,320
the data is it

00:32:24,640 --> 00:32:27,519
it says yeah i i know where i'm gonna

00:32:26,320 --> 00:32:29,840
have to go i'm gonna have to get all the

00:32:27,519 --> 00:32:29,840
data

00:32:30,799 --> 00:32:34,640
now if you run explain analyze we'll

00:32:32,720 --> 00:32:37,279
come back and give you the actual

00:32:34,640 --> 00:32:39,360
costs and the time that it takes to run

00:32:37,279 --> 00:32:42,559
everything

00:32:39,360 --> 00:32:43,919
now i'm kind of running uh down in my

00:32:42,559 --> 00:32:45,120
last five minutes before i go to a

00:32:43,919 --> 00:32:47,279
dedicated q a

00:32:45,120 --> 00:32:49,200
by the way if you do have questions uh

00:32:47,279 --> 00:32:50,720
please pop them in the q a

00:32:49,200 --> 00:32:52,559
uh there are other tweaks you can do to

00:32:50,720 --> 00:32:53,840
speed things up uh

00:32:52,559 --> 00:32:55,679
you can use explain to see what your

00:32:53,840 --> 00:32:56,000
query is doing are there file sorts full

00:32:55,679 --> 00:32:58,480
table

00:32:56,000 --> 00:32:59,840
scans temporary tables do the join

00:32:58,480 --> 00:33:02,480
orders look right

00:32:59,840 --> 00:33:04,240
uh the the configuration side are the

00:33:02,480 --> 00:33:05,519
buffers and cache is big enough do you

00:33:04,240 --> 00:33:09,679
have enough memory

00:33:05,519 --> 00:33:12,399
uh are your are your disks just slow

00:33:09,679 --> 00:33:12,880
that still happens these days something

00:33:12,399 --> 00:33:15,519
to do

00:33:12,880 --> 00:33:16,720
is we've made two changes to locking in

00:33:15,519 --> 00:33:19,519
mysql80

00:33:16,720 --> 00:33:22,480
no wait and skip lock this might help

00:33:19,519 --> 00:33:24,000
you rechange the way you use your data

00:33:22,480 --> 00:33:26,399
for example here we want to buy some

00:33:24,000 --> 00:33:27,760
concert tickets and we're going to start

00:33:26,399 --> 00:33:28,960
a transaction

00:33:27,760 --> 00:33:31,120
and we're going to go out and select a

00:33:28,960 --> 00:33:32,240
seat and a row

00:33:31,120 --> 00:33:35,120
and we're going to grab the cost while

00:33:32,240 --> 00:33:36,799
we're at it from a table called seats

00:33:35,120 --> 00:33:38,720
and what we want to do is we're looking

00:33:36,799 --> 00:33:42,799
for seat numbers three and four

00:33:38,720 --> 00:33:44,720
in rows five and six that are not booked

00:33:42,799 --> 00:33:46,000
now we want to grab them because we want

00:33:44,720 --> 00:33:48,159
to book them

00:33:46,000 --> 00:33:50,000
and this will automatically skip over

00:33:48,159 --> 00:33:52,720
the lock tables before this

00:33:50,000 --> 00:33:55,679
the database would wait until those rows

00:33:52,720 --> 00:33:55,679
became available

00:33:55,760 --> 00:33:59,600
lock no wait basically says if there's

00:33:58,559 --> 00:34:02,720
nothing there

00:33:59,600 --> 00:34:02,720
immediately you turn to me

00:34:03,279 --> 00:34:06,399
now other ways you can do oops i got a

00:34:05,279 --> 00:34:10,159
question

00:34:06,399 --> 00:34:10,159
let's see uh

00:34:10,320 --> 00:34:12,560
is there a link to the 90 minute full

00:34:11,599 --> 00:34:13,919
version of the talk that you have

00:34:12,560 --> 00:34:15,440
mentioned in the beginning

00:34:13,919 --> 00:34:17,960
uh yes i'll have to look it up though

00:34:15,440 --> 00:34:20,720
and i will post it on my twitter at

00:34:17,960 --> 00:34:23,679
stoker um

00:34:20,720 --> 00:34:23,679
let me type that

00:34:32,000 --> 00:34:37,599
okay so i've got that out there

00:34:35,520 --> 00:34:40,240
okay other fast ways resource groups

00:34:37,599 --> 00:34:43,040
optimizer hands partitioning

00:34:40,240 --> 00:34:45,200
and resource groups this is where you

00:34:43,040 --> 00:34:48,240
can dedicate uh virtual cpus

00:34:45,200 --> 00:34:51,359
uh to certain classes of queries

00:34:48,240 --> 00:34:54,000
in this example we create a batch

00:34:51,359 --> 00:34:55,839
group and we dedicate two cpus and set

00:34:54,000 --> 00:34:58,079
it to a low thread priority

00:34:55,839 --> 00:34:59,839
so every time we set a resource group

00:34:58,079 --> 00:35:02,400
batch in a

00:34:59,839 --> 00:35:03,920
in a series of commands or we put in

00:35:02,400 --> 00:35:04,880
this optimizer hint the stuff here in

00:35:03,920 --> 00:35:07,839
magenta

00:35:04,880 --> 00:35:08,320
the optimizer knows to set those to go

00:35:07,839 --> 00:35:12,160
to that

00:35:08,320 --> 00:35:14,880
that lower priority optimizer hints

00:35:12,160 --> 00:35:15,760
these are little comments you can put

00:35:14,880 --> 00:35:18,000
into your

00:35:15,760 --> 00:35:21,359
your query so like you know it's better

00:35:18,000 --> 00:35:23,839
to join t1 to t2 than t2 to t1

00:35:21,359 --> 00:35:24,880
uh the optimizer will see this hopefully

00:35:23,839 --> 00:35:26,800
you'll know that you're

00:35:24,880 --> 00:35:28,960
you know what you're doing and away you

00:35:26,800 --> 00:35:28,960
go

00:35:29,119 --> 00:35:32,480
partitioning you can actually divvy up

00:35:30,800 --> 00:35:33,680
your data over various partitions if

00:35:32,480 --> 00:35:36,640
you're running the nrdb

00:35:33,680 --> 00:35:38,240
or our mdb storage engines so if you

00:35:36,640 --> 00:35:38,800
want to keep the data for the last

00:35:38,240 --> 00:35:41,839
quarter

00:35:38,800 --> 00:35:43,200
on partition a stuff for

00:35:41,839 --> 00:35:44,720
the previous three quarters on another

00:35:43,200 --> 00:35:45,359
partition and stuff for years passed on

00:35:44,720 --> 00:35:47,760
yet another

00:35:45,359 --> 00:35:49,440
set of disks uh you can do that the

00:35:47,760 --> 00:35:52,800
optimizer knows about that and knows how

00:35:49,440 --> 00:35:55,040
to go grab it off the various partitions

00:35:52,800 --> 00:35:57,200
okay um this is an interesting example

00:35:55,040 --> 00:35:58,800
of what the optimizer actually does

00:35:57,200 --> 00:36:00,960
this is our query we're going to go out

00:35:58,800 --> 00:36:04,000
and we're going to select city.name

00:36:00,960 --> 00:36:05,920
from the city table country.name

00:36:04,000 --> 00:36:07,119
from the country table now these two

00:36:05,920 --> 00:36:08,560
tables have been set up so that

00:36:07,119 --> 00:36:11,520
city.country code

00:36:08,560 --> 00:36:12,000
is the hook into the country table using

00:36:11,520 --> 00:36:15,119
the code

00:36:12,000 --> 00:36:15,920
column and we only want to know the city

00:36:15,119 --> 00:36:18,320
names

00:36:15,920 --> 00:36:20,320
for gbr where the country code is equal

00:36:18,320 --> 00:36:22,000
gbr

00:36:20,320 --> 00:36:23,359
so once again we're looking for city

00:36:22,000 --> 00:36:25,760
name country name

00:36:23,359 --> 00:36:27,200
from these two tables that's how we're

00:36:25,760 --> 00:36:30,400
matching him up

00:36:27,200 --> 00:36:32,000
and this is a qualifier

00:36:30,400 --> 00:36:33,839
so if we run explain on this it comes

00:36:32,000 --> 00:36:36,240
back and tells us yes you're

00:36:33,839 --> 00:36:38,079
you're doing this on two tables country

00:36:36,240 --> 00:36:39,680
and city

00:36:38,079 --> 00:36:41,119
notice that country is a smaller table

00:36:39,680 --> 00:36:42,960
so it's going to have to look at that

00:36:41,119 --> 00:36:46,320
first

00:36:42,960 --> 00:36:50,560
now the actual query plan that we get is

00:36:46,320 --> 00:36:51,839
select world.city dot name as name

00:36:50,560 --> 00:36:54,160
world by the way is a scheme or a

00:36:51,839 --> 00:36:55,280
database we have all this and united

00:36:54,160 --> 00:36:57,839
kingdom as name

00:36:55,280 --> 00:37:01,040
so that country.name it's automatically

00:36:57,839 --> 00:37:01,040
rewritten that for us

00:37:01,760 --> 00:37:05,119
so it's already done some magic for us

00:37:03,839 --> 00:37:09,839
even on a very simple query

00:37:05,119 --> 00:37:09,839
such as this

00:37:10,800 --> 00:37:13,680
uh if we run explain analyze it will go

00:37:12,400 --> 00:37:14,160
out and give us the real cost of how

00:37:13,680 --> 00:37:17,359
everything

00:37:14,160 --> 00:37:20,560
runs now

00:37:17,359 --> 00:37:24,000
oops there is my timer

00:37:20,560 --> 00:37:26,880
let me uh run through this one slide uh

00:37:24,000 --> 00:37:28,320
learning to read this um is kind of hard

00:37:26,880 --> 00:37:30,400
i have some books

00:37:28,320 --> 00:37:31,920
that i will get to that i recommend that

00:37:30,400 --> 00:37:35,119
you're gonna have to

00:37:31,920 --> 00:37:36,560
these are exercises i run through um by

00:37:35,119 --> 00:37:39,000
the way uh where else look for

00:37:36,560 --> 00:37:41,760
information the mysql manual

00:37:39,000 --> 00:37:43,520
forms.mysql.com also we have a mysql

00:37:41,760 --> 00:37:44,800
community slack please join you're part

00:37:43,520 --> 00:37:45,760
of the community now that you've sat

00:37:44,800 --> 00:37:48,079
through this

00:37:45,760 --> 00:37:49,119
great book you need this book jasper

00:37:48,079 --> 00:37:51,040
whispered crow

00:37:49,119 --> 00:37:52,480
i used to work at our support group the

00:37:51,040 --> 00:37:54,880
book's about five inches

00:37:52,480 --> 00:37:56,000
thick i'm on my second re-reading of it

00:37:54,880 --> 00:37:58,160
i'm still learning stuff

00:37:56,000 --> 00:37:59,599
very interesting uh this is an older

00:37:58,160 --> 00:38:01,680
book if you're running older versions of

00:37:59,599 --> 00:38:03,359
mysql it's getting dated along the tooth

00:38:01,680 --> 00:38:05,680
a lot of things have changed

00:38:03,359 --> 00:38:07,839
this is my book if you're using json and

00:38:05,680 --> 00:38:09,760
mysql

00:38:07,839 --> 00:38:11,440
by the way if you are a startup oracle

00:38:09,760 --> 00:38:12,480
can help you they have this wonderful

00:38:11,440 --> 00:38:15,040
program where they give you

00:38:12,480 --> 00:38:17,119
lots of credits and lots of help if you

00:38:15,040 --> 00:38:20,160
are a startup please take a look at that

00:38:17,119 --> 00:38:21,440
and with that there's my contact

00:38:20,160 --> 00:38:23,119
information

00:38:21,440 --> 00:38:24,640
and once again the slides are there and

00:38:23,119 --> 00:38:28,000
i will get the uh

00:38:24,640 --> 00:38:29,920
the longer link out there for the q a

00:38:28,000 --> 00:38:32,800
and with that i've got the q a window if

00:38:29,920 --> 00:38:34,079
there's any questions

00:38:32,800 --> 00:38:35,680
i can say more about the benefits of

00:38:34,079 --> 00:38:38,079
histogram versus index when your data

00:38:35,680 --> 00:38:41,599
doesn't churn i don't follow logic

00:38:38,079 --> 00:38:43,839
okay indexes are designed

00:38:41,599 --> 00:38:45,680
i used to be able to use the uh the

00:38:43,839 --> 00:38:47,040
library reference card system but very

00:38:45,680 --> 00:38:49,680
few libraries actually have those

00:38:47,040 --> 00:38:52,720
anymore where they actually have cards

00:38:49,680 --> 00:38:57,040
histograms you kind of divvy up your

00:38:52,720 --> 00:38:58,960
your data in buckets so that you know

00:38:57,040 --> 00:39:00,560
you know the a's are over here b's are

00:38:58,960 --> 00:39:02,640
over there and all that

00:39:00,560 --> 00:39:04,079
index is as soon as you insert a piece

00:39:02,640 --> 00:39:08,079
of data there's a new index

00:39:04,079 --> 00:39:10,560
entry in there what i mean by don't

00:39:08,079 --> 00:39:11,839
churn is indexes are better when you're

00:39:10,560 --> 00:39:14,400
you're adding or

00:39:11,839 --> 00:39:15,839
changing a lot of data histograms you

00:39:14,400 --> 00:39:18,079
make the histogram once you

00:39:15,839 --> 00:39:19,520
you throw them in the bucket a and it

00:39:18,079 --> 00:39:20,560
doesn't know that if you change the last

00:39:19,520 --> 00:39:22,640
name from

00:39:20,560 --> 00:39:23,839
adams to jorgensen that the name has

00:39:22,640 --> 00:39:26,800
changed you'd have to rerun the

00:39:23,839 --> 00:39:26,800
histogram on that

00:39:26,960 --> 00:39:30,880
i missed the in the output um

00:39:31,119 --> 00:39:35,520
since i answered that okay uh now the

00:39:34,000 --> 00:39:36,320
second question i have i missed in the

00:39:35,520 --> 00:39:38,720
output explanation

00:39:36,320 --> 00:39:40,640
what is the cost well cost based

00:39:38,720 --> 00:39:42,079
optimizers have been around for 40 some

00:39:40,640 --> 00:39:44,960
odd years and the idea is

00:39:42,079 --> 00:39:46,400
that you want to get the data back from

00:39:44,960 --> 00:39:48,640
your query at the lowest cost

00:39:46,400 --> 00:39:50,079
cost being disk reads because disk reads

00:39:48,640 --> 00:39:51,760
are very very slow

00:39:50,079 --> 00:39:53,359
uh disk agrees are a hundred thousand

00:39:51,760 --> 00:39:53,920
times slower than reading out of memory

00:39:53,359 --> 00:39:57,680
so you

00:39:53,920 --> 00:40:00,720
kind of go for the um

00:39:57,680 --> 00:40:03,599
the the worst case

00:40:00,720 --> 00:40:03,599
scenario there

00:40:03,920 --> 00:40:08,720
let's see thank you carl and catherine

00:40:07,200 --> 00:40:11,359
um if there's any other questions i'll

00:40:08,720 --> 00:40:14,079
be here for a while

00:40:11,359 --> 00:40:14,800
and if you have any questions uh please

00:40:14,079 --> 00:40:17,440
do not

00:40:14,800 --> 00:40:18,560
hesitate to ping me uh david.stokes

00:40:17,440 --> 00:40:21,160
oracle

00:40:18,560 --> 00:40:22,319
uh i have a blog at

00:40:21,160 --> 00:40:24,880
elephantdolphin.blogspot.com

00:40:22,319 --> 00:40:27,359
i'm at stoker on twitter uh once again

00:40:24,880 --> 00:40:29,920
please join the mysql community slack

00:40:27,359 --> 00:40:31,040
a lot of our engineers hang out there so

00:40:29,920 --> 00:40:32,640
if you have a question about the

00:40:31,040 --> 00:40:36,160
optimizer the new shell

00:40:32,640 --> 00:40:39,359
replication anything like that

00:40:36,160 --> 00:40:41,839
you're more than more than uh

00:40:39,359 --> 00:40:44,240
welcome to join us and back to nixie

00:40:41,839 --> 00:40:44,240
advance

00:40:45,040 --> 00:40:49,200
thank you very much david uh again

00:40:47,760 --> 00:40:51,440
another great talk it's always

00:40:49,200 --> 00:40:52,400
it's always good to hear about uh about

00:40:51,440 --> 00:40:56,079
mysql

00:40:52,400 --> 00:40:58,640
and we you know i know a lot of people

00:40:56,079 --> 00:40:59,280
encounter performance uh problems or

00:40:58,640 --> 00:41:02,800
they

00:40:59,280 --> 00:41:04,640
scale up and it just

00:41:02,800 --> 00:41:06,000
it tends to be one of those bottlenecks

00:41:04,640 --> 00:41:09,040
so it's always

00:41:06,000 --> 00:41:13,040
great when there are new uh

00:41:09,040 --> 00:41:13,040
optimizations that become available

00:41:13,839 --> 00:41:21,200
uh so i think uh nixie is is also up

00:41:17,920 --> 00:41:23,040
uh great to have you or rejoin us

00:41:21,200 --> 00:41:24,800
thank you so very much thank you guys

00:41:23,040 --> 00:41:27,280
for letting me take a minute to

00:41:24,800 --> 00:41:29,359
talk to my youtube channel because we

00:41:27,280 --> 00:41:31,520
kind of came on here super quick

00:41:29,359 --> 00:41:33,280
um i i really appreciate that that's

00:41:31,520 --> 00:41:36,560
awesome thank you

00:41:33,280 --> 00:41:39,599
um yeah so oh

00:41:36,560 --> 00:41:41,520
yeah we don't have much time do we i

00:41:39,599 --> 00:41:43,280
have i have our schedule printed out on

00:41:41,520 --> 00:41:43,760
a piece of paper because i'm old school

00:41:43,280 --> 00:41:48,800
like that

00:41:43,760 --> 00:41:50,800
and all righty yeah just a couple of

00:41:48,800 --> 00:41:54,319
minutes um i did want to

00:41:50,800 --> 00:41:57,359
make an announcement so uh we

00:41:54,319 --> 00:42:00,160
were uh we did add uh just

00:41:57,359 --> 00:42:01,040
within uh the last half an hour we've

00:42:00,160 --> 00:42:04,200
added a

00:42:01,040 --> 00:42:06,319
a shop to the website so if you go to

00:42:04,200 --> 00:42:09,680
olfconference.org

00:42:06,319 --> 00:42:12,800
shop or if there's a link at the

00:42:09,680 --> 00:42:15,280
top of the page for the shop

00:42:12,800 --> 00:42:16,640
and you'll be able to get one of those

00:42:15,280 --> 00:42:19,760
masks for

00:42:16,640 --> 00:42:22,400
dollars uh that includes shipping

00:42:19,760 --> 00:42:22,960
to uh anywhere in the us i'm not sure if

00:42:22,400 --> 00:42:26,319
we're

00:42:22,960 --> 00:42:28,880
set up for for international but uh

00:42:26,319 --> 00:42:29,760
at least there's a limited supply at

00:42:28,880 --> 00:42:34,160
least of the

00:42:29,760 --> 00:42:38,079
of the of those at the current time

00:42:34,160 --> 00:42:40,319
um also uh the the shirts

00:42:38,079 --> 00:42:42,480
uh those are going to be available if

00:42:40,319 --> 00:42:45,440
you sign up for the supporter

00:42:42,480 --> 00:42:47,200
pass so that is actually still open for

00:42:45,440 --> 00:42:49,760
registration if you want to go

00:42:47,200 --> 00:42:50,560
and and register as a supporter uh

00:42:49,760 --> 00:42:53,119
you'll get the

00:42:50,560 --> 00:42:54,560
the mask and the t-shirt and i think

00:42:53,119 --> 00:42:56,560
maybe some other things

00:42:54,560 --> 00:42:59,520
i'm not exactly 100 sure of what we're

00:42:56,560 --> 00:43:02,400
sending out to all those folks but

00:42:59,520 --> 00:43:04,720
uh that'll that'll get you those um but

00:43:02,400 --> 00:43:06,880
if you've registered as an enthusiast

00:43:04,720 --> 00:43:07,920
uh you can buy the mask just

00:43:06,880 --> 00:43:10,720
individually

00:43:07,920 --> 00:43:11,599
wait there's this sorry about that oh

00:43:10,720 --> 00:43:13,359
yeah

00:43:11,599 --> 00:43:15,680
she threw that in there hang on one sec

00:43:13,359 --> 00:43:18,160
the luggage tags yeah the uh

00:43:15,680 --> 00:43:19,599
uh that were quote unquote the badge for

00:43:18,160 --> 00:43:22,079
this year i know a lot of people

00:43:19,599 --> 00:43:22,960
like the badges that we normally print

00:43:22,079 --> 00:43:26,319
for

00:43:22,960 --> 00:43:27,920
uh our experience and uh it's it's a

00:43:26,319 --> 00:43:30,079
little bit less colorful than the ones

00:43:27,920 --> 00:43:33,440
that we normally have but uh

00:43:30,079 --> 00:43:36,800
it's a an acceptable substitute oh

00:43:33,440 --> 00:43:39,440
you know what i can't wear the mask but

00:43:36,800 --> 00:43:41,599
the snorlax can

00:43:39,440 --> 00:43:43,440
except it will and you have to make sure

00:43:41,599 --> 00:43:45,200
you guys when you wear masks it has to

00:43:43,440 --> 00:43:48,319
cover your nose and mouth

00:43:45,200 --> 00:43:50,240
i know people were wondering about that

00:43:48,319 --> 00:43:52,160
not your eyes though that that's yeah

00:43:50,240 --> 00:43:54,880
that's not

00:43:52,160 --> 00:43:57,680
probably not a goods thing to do so

00:43:54,880 --> 00:43:57,680
relax you're not cool

00:43:58,880 --> 00:44:02,480
do we have to yeah i think we need to

00:44:00,560 --> 00:44:06,160
ask you oh sorry rants do we

00:44:02,480 --> 00:44:09,359
always go ahead no you're good uh

00:44:06,160 --> 00:44:11,680
there how about that

00:44:09,359 --> 00:44:12,720
do you have uh time for me to ask you

00:44:11,680 --> 00:44:15,200
about your first

00:44:12,720 --> 00:44:16,400
experience with linux or are we ready to

00:44:15,200 --> 00:44:18,079
roll

00:44:16,400 --> 00:44:19,839
um no we do have a couple of minutes

00:44:18,079 --> 00:44:20,640
here and and that's actually a good

00:44:19,839 --> 00:44:24,000
question

00:44:20,640 --> 00:44:27,520
uh while we were looking at uh bethlen's

00:44:24,000 --> 00:44:30,640
video we i actually saw

00:44:27,520 --> 00:44:32,640
she had a a book laying on the

00:44:30,640 --> 00:44:33,760
shelf behind her i saw that too actually

00:44:32,640 --> 00:44:36,400
yeah good call

00:44:33,760 --> 00:44:37,920
it reminded me and i i went to my

00:44:36,400 --> 00:44:41,839
bookshelf and i pulled out

00:44:37,920 --> 00:44:45,359
um this is in in 1997

00:44:41,839 --> 00:44:46,960
uh i went to an actual bookstore some of

00:44:45,359 --> 00:44:50,079
our younger viewers may not know

00:44:46,960 --> 00:44:51,760
what that is but where they uh sell

00:44:50,079 --> 00:44:55,200
these things

00:44:51,760 --> 00:44:57,359
and uh yeah so i bought this

00:44:55,200 --> 00:44:58,240
this uh linux configuration and

00:44:57,359 --> 00:45:01,520
installation

00:44:58,240 --> 00:45:04,640
uh written by patrick volkerding and uh

00:45:01,520 --> 00:45:07,359
who else kevin reichert and eric johnson

00:45:04,640 --> 00:45:08,319
and it included uh slackware 3.2 i think

00:45:07,359 --> 00:45:10,240
you can see on the

00:45:08,319 --> 00:45:11,359
wait is that your first is that your

00:45:10,240 --> 00:45:13,920
first book

00:45:11,359 --> 00:45:15,760
that was the first linux version i ever

00:45:13,920 --> 00:45:19,119
i ever used that was uh

00:45:15,760 --> 00:45:22,319
uh 1997. oh

00:45:19,119 --> 00:45:25,599
how cool absolutely yeah it was

00:45:22,319 --> 00:45:26,000
it was started me on a journey now

00:45:25,599 --> 00:45:29,599
that's

00:45:26,000 --> 00:45:33,040
that's been going for uh

00:45:29,599 --> 00:45:36,000
yeah a lot longer

00:45:33,040 --> 00:45:36,800
i love that i started to do the math a

00:45:36,000 --> 00:45:40,000
lot longer

00:45:36,800 --> 00:45:42,560
that is for sure um yeah

00:45:40,000 --> 00:45:44,000
it's interesting the philosophy i kind

00:45:42,560 --> 00:45:44,960
of want to talk a little bit about the

00:45:44,000 --> 00:45:47,920
philosophy

00:45:44,960 --> 00:45:50,240
around i mean well here how about this

00:45:47,920 --> 00:45:54,000
do you use linux every day and if so

00:45:50,240 --> 00:45:57,040
in what capacity do you use it for work

00:45:54,000 --> 00:45:58,000
do you find that you don't use i work in

00:45:57,040 --> 00:46:01,040
an environment

00:45:58,000 --> 00:46:01,599
that is a hundred percent windows or at

00:46:01,040 --> 00:46:05,359
least

00:46:01,599 --> 00:46:06,079
uh i i imagine there may be some linux

00:46:05,359 --> 00:46:09,920
users but

00:46:06,079 --> 00:46:12,880
uh i don't actually work in in it uh

00:46:09,920 --> 00:46:15,359
and yeah all our environment is windows

00:46:12,880 --> 00:46:18,720
but all of my computers that i have

00:46:15,359 --> 00:46:20,960
uh at home that i run or at least the

00:46:18,720 --> 00:46:22,560
the non-work related ones now that now

00:46:20,960 --> 00:46:26,000
that i'm working from home

00:46:22,560 --> 00:46:29,040
uh are all running linux so uh

00:46:26,000 --> 00:46:30,960
yeah it's been really uh more of a

00:46:29,040 --> 00:46:32,560
personal interest than a professional

00:46:30,960 --> 00:46:35,839
one for me

00:46:32,560 --> 00:46:39,040
yeah that um for me too definitely like

00:46:35,839 --> 00:46:42,640
in fact linux has in some way

00:46:39,040 --> 00:46:44,720
prohibited a lot of what i do um

00:46:42,640 --> 00:46:45,839
i tried very hard and i explained this

00:46:44,720 --> 00:46:48,880
to my my

00:46:45,839 --> 00:46:51,440
following earlier to like use

00:46:48,880 --> 00:46:52,560
uh open source tools for video editing

00:46:51,440 --> 00:46:55,359
and it's just not

00:46:52,560 --> 00:46:56,079
there it's it's so close if you guys if

00:46:55,359 --> 00:46:58,560
anybody

00:46:56,079 --> 00:46:59,680
in the chat in either of the chats in

00:46:58,560 --> 00:47:01,520
any of the chats have

00:46:59,680 --> 00:47:02,960
any suggestions on open source video

00:47:01,520 --> 00:47:07,200
editing tools i am

00:47:02,960 --> 00:47:10,560
all ears because i would love to find

00:47:07,200 --> 00:47:12,240
i've tried open shot caden live um

00:47:10,560 --> 00:47:13,920
oh gosh there was another one that had a

00:47:12,240 --> 00:47:16,160
really long name that was made by one

00:47:13,920 --> 00:47:16,160
guy

00:47:16,960 --> 00:47:21,599
but um yeah i would love to see like the

00:47:19,760 --> 00:47:24,559
video editing world go

00:47:21,599 --> 00:47:26,079
go up get up to that level do we have

00:47:24,559 --> 00:47:27,440
time for another question i have another

00:47:26,079 --> 00:47:31,760
one

00:47:27,440 --> 00:47:33,920
um uh maybe if we make it quick oh

00:47:31,760 --> 00:47:36,400
no i think we have patrick uh we have

00:47:33,920 --> 00:47:38,559
patrick up and and maybe if we can uh

00:47:36,400 --> 00:47:40,640
i'll ask him how about that the year of

00:47:38,559 --> 00:47:43,680
the next desktop question

00:47:40,640 --> 00:47:46,880
that's coming up next okay

00:47:43,680 --> 00:47:50,400
uh so patrick chef uh

00:47:46,880 --> 00:47:50,960
his background has been uh he worked at

00:47:50,400 --> 00:47:53,359
uh

00:47:50,960 --> 00:47:54,640
facebook for for over six years in

00:47:53,359 --> 00:47:57,200
california

00:47:54,640 --> 00:47:58,160
uh in their infrastructure teams uh

00:47:57,200 --> 00:48:00,559
working on

00:47:58,160 --> 00:48:02,000
content delivery systems and then after

00:48:00,559 --> 00:48:05,200
that he worked at uh

00:48:02,000 --> 00:48:06,160
netflix as well so he definitely has a

00:48:05,200 --> 00:48:08,720
lot of

00:48:06,160 --> 00:48:09,920
a lot of knowledge and experience trying

00:48:08,720 --> 00:48:13,119
to figure out how

00:48:09,920 --> 00:48:16,880
we how we deliver uh content

00:48:13,119 --> 00:48:18,880
to end users over the internet

00:48:16,880 --> 00:48:20,680
he's currently the chief technology

00:48:18,880 --> 00:48:23,520
officer at

00:48:20,680 --> 00:48:24,559
efus.gg which is a columbus-based

00:48:23,520 --> 00:48:26,559
startup

00:48:24,559 --> 00:48:29,680
that's building a professional hub for

00:48:26,559 --> 00:48:31,440
esports and video games

00:48:29,680 --> 00:48:33,200
so i went to and he's going to be

00:48:31,440 --> 00:48:36,880
talking about

00:48:33,200 --> 00:48:39,839
you know how does information get

00:48:36,880 --> 00:48:41,359
uh transmitted over the internet uh how

00:48:39,839 --> 00:48:44,640
does the internet begin

00:48:41,359 --> 00:48:48,000
and what actually happens when you

00:48:44,640 --> 00:48:50,480
go to a web page and you know click play

00:48:48,000 --> 00:48:52,559
to try to start a movie or or anything

00:48:50,480 --> 00:48:55,760
any kind of sort of content like that

00:48:52,559 --> 00:48:57,040
so please take it away patrick awesome

00:48:55,760 --> 00:48:59,680
you guys have my screen and

00:48:57,040 --> 00:49:00,559
everything good yep we can see all right

00:48:59,680 --> 00:49:02,720
slides

00:49:00,559 --> 00:49:03,760
great thank you thanks fans appreciate

00:49:02,720 --> 00:49:06,000
it um

00:49:03,760 --> 00:49:07,680
yeah thanks for the introduction um

00:49:06,000 --> 00:49:11,040
again my name is patrick schuff

00:49:07,680 --> 00:49:13,839
and um today i will be um sharing

00:49:11,040 --> 00:49:16,000
hopefully a useful kind of a story or

00:49:13,839 --> 00:49:18,160
analogy of how the internet works

00:49:16,000 --> 00:49:19,520
um and how the internet sometimes

00:49:18,160 --> 00:49:22,160
doesn't work and

00:49:19,520 --> 00:49:23,920
um this is my i believe fourth time uh

00:49:22,160 --> 00:49:25,040
speaking of olf i look forward to it

00:49:23,920 --> 00:49:26,960
every year and i'm really

00:49:25,040 --> 00:49:28,319
you know happy that the team was able to

00:49:26,960 --> 00:49:30,480
you know put this together

00:49:28,319 --> 00:49:31,440
it's really great and uh really really

00:49:30,480 --> 00:49:34,559
looking forward to it

00:49:31,440 --> 00:49:37,440
so um so you know with that

00:49:34,559 --> 00:49:37,839
um i will uh just kind of dive in and

00:49:37,440 --> 00:49:40,960
and

00:49:37,839 --> 00:49:43,520
we'll go through it so whoops

00:49:40,960 --> 00:49:44,640
here we go um so i did have a really

00:49:43,520 --> 00:49:46,160
cool uh

00:49:44,640 --> 00:49:48,160
video to show here but it doesn't look

00:49:46,160 --> 00:49:49,680
like my internet's working uh this is a

00:49:48,160 --> 00:49:50,960
joke where if i was a live audience

00:49:49,680 --> 00:49:54,400
everybody go crazy

00:49:50,960 --> 00:49:57,440
and holler but um here we are so

00:49:54,400 --> 00:49:58,720
so who am i and why you know do i you

00:49:57,440 --> 00:50:00,319
know why am i up here

00:49:58,720 --> 00:50:02,960
talking about the internet so i'm going

00:50:00,319 --> 00:50:05,280
to give a kind of a brief introduction

00:50:02,960 --> 00:50:06,880
to myself i've been very fortunate to um

00:50:05,280 --> 00:50:09,599
to one have um

00:50:06,880 --> 00:50:10,400
grown up around computers for much of my

00:50:09,599 --> 00:50:12,880
life i

00:50:10,400 --> 00:50:13,839
my first computer was commodore 64. long

00:50:12,880 --> 00:50:15,839
long time ago

00:50:13,839 --> 00:50:17,200
um so i've just always kind of had

00:50:15,839 --> 00:50:20,800
computers around

00:50:17,200 --> 00:50:23,839
and um with that um in my career um

00:50:20,800 --> 00:50:24,640
both here in ohio and columbus and i

00:50:23,839 --> 00:50:26,800
also

00:50:24,640 --> 00:50:28,480
spent a few years at um two really big

00:50:26,800 --> 00:50:31,440
tech companies who

00:50:28,480 --> 00:50:32,160
combined or even just separately they

00:50:31,440 --> 00:50:35,280
comprise

00:50:32,160 --> 00:50:36,000
a really sizable portion of the internet

00:50:35,280 --> 00:50:38,480
traffic

00:50:36,000 --> 00:50:40,800
uh and you know the bits delivered over

00:50:38,480 --> 00:50:44,880
the internet editing it on any given day

00:50:40,800 --> 00:50:47,920
so um kind of fast forward to 2006

00:50:44,880 --> 00:50:50,480
um i joined ohio state uh

00:50:47,920 --> 00:50:52,079
as a an undergraduate in the computer

00:50:50,480 --> 00:50:53,680
science and engineering so

00:50:52,079 --> 00:50:55,440
having grown up around computers for a

00:50:53,680 --> 00:50:57,040
long time i really

00:50:55,440 --> 00:50:58,880
uh you know i kind of knew i was going

00:50:57,040 --> 00:50:59,359
to go into computers in some capacity

00:50:58,880 --> 00:51:02,079
and

00:50:59,359 --> 00:51:03,680
cse just kind of made the most sense uh

00:51:02,079 --> 00:51:05,839
in terms of kind of a mixture of theory

00:51:03,680 --> 00:51:09,200
and actual practical application

00:51:05,839 --> 00:51:11,119
and it was in 2006 and i'll i'll

00:51:09,200 --> 00:51:12,480
wait till the end to share my first

00:51:11,119 --> 00:51:14,720
experience with linux

00:51:12,480 --> 00:51:16,400
um because i remember it well from about

00:51:14,720 --> 00:51:18,400
2006 is when i really

00:51:16,400 --> 00:51:19,680
started using linux for the first time

00:51:18,400 --> 00:51:23,040
and um

00:51:19,680 --> 00:51:24,000
it was actually uh i i kind of kind of

00:51:23,040 --> 00:51:25,839
fell into it

00:51:24,000 --> 00:51:27,280
um because it was really really

00:51:25,839 --> 00:51:29,200
frustrating for me and

00:51:27,280 --> 00:51:31,280
i was completely on windows at the time

00:51:29,200 --> 00:51:32,079
but um it was so frustrating that i just

00:51:31,280 --> 00:51:33,920
decided to wipe

00:51:32,079 --> 00:51:36,400
every system i had from windows and go

00:51:33,920 --> 00:51:36,880
to linux and you know fast forward 15

00:51:36,400 --> 00:51:38,559
plus

00:51:36,880 --> 00:51:40,480
almost 15 years later actually ended up

00:51:38,559 --> 00:51:40,800
being a really amazing career move for

00:51:40,480 --> 00:51:43,599
me

00:51:40,800 --> 00:51:45,920
um also while in school i learned about

00:51:43,599 --> 00:51:46,880
python so that's you know i never really

00:51:45,920 --> 00:51:49,200
started coding

00:51:46,880 --> 00:51:50,880
in a real way until college and it

00:51:49,200 --> 00:51:51,440
really wasn't until i learned python

00:51:50,880 --> 00:51:53,040
that

00:51:51,440 --> 00:51:54,400
the world really opened up for me and

00:51:53,040 --> 00:51:55,920
things that i wanted to build and

00:51:54,400 --> 00:51:58,480
problems i needed solved

00:51:55,920 --> 00:51:59,040
the python language helped me do that um

00:51:58,480 --> 00:52:01,119
so

00:51:59,040 --> 00:52:03,280
i really you know i think like the late

00:52:01,119 --> 00:52:06,400
2000s were really where um

00:52:03,280 --> 00:52:08,640
i i i i kind of i guess

00:52:06,400 --> 00:52:10,640
progressed in in my career in a big way

00:52:08,640 --> 00:52:11,440
and i want to add too i was a very very

00:52:10,640 --> 00:52:12,960
average um

00:52:11,440 --> 00:52:14,240
student like i did the things i needed

00:52:12,960 --> 00:52:15,520
to get done but i was much more

00:52:14,240 --> 00:52:16,960
interested in building things

00:52:15,520 --> 00:52:19,119
outside of the classroom and that's

00:52:16,960 --> 00:52:20,319
really where kind of the roots of my

00:52:19,119 --> 00:52:21,920
linux and

00:52:20,319 --> 00:52:24,000
software engineering background kind of

00:52:21,920 --> 00:52:26,240
stemmed from so

00:52:24,000 --> 00:52:27,920
following college um again i was using

00:52:26,240 --> 00:52:30,400
linux and i was using it full time

00:52:27,920 --> 00:52:31,119
all throughout school and in 2011 i

00:52:30,400 --> 00:52:34,000
joined my

00:52:31,119 --> 00:52:35,520
first full-time company and my first

00:52:34,000 --> 00:52:36,319
full-time job was with nationwide

00:52:35,520 --> 00:52:38,319
insurance on the

00:52:36,319 --> 00:52:40,079
linux team so we were essentially doing

00:52:38,319 --> 00:52:41,920
a lot of system administration work

00:52:40,079 --> 00:52:43,119
and at the same time i was able to

00:52:41,920 --> 00:52:45,680
automate a lot of the

00:52:43,119 --> 00:52:46,240
annoying repetitive things um that you

00:52:45,680 --> 00:52:48,880
know

00:52:46,240 --> 00:52:49,520
is involved in says admin so doing a lot

00:52:48,880 --> 00:52:52,400
of linux

00:52:49,520 --> 00:52:53,920
um and you know kind of we had a few

00:52:52,400 --> 00:52:55,119
thousand servers that we managed at the

00:52:53,920 --> 00:52:56,400
time and it was you know

00:52:55,119 --> 00:52:58,240
really great for me to kind of apply all

00:52:56,400 --> 00:52:59,040
the things that i've done previously in

00:52:58,240 --> 00:53:01,119
school you know

00:52:59,040 --> 00:53:02,960
at home to you know real world

00:53:01,119 --> 00:53:04,640
situations i'm only going to make

00:53:02,960 --> 00:53:06,079
one political statement um throughout

00:53:04,640 --> 00:53:09,200
this whole presentation and

00:53:06,079 --> 00:53:12,000
it's with uh this slide here um i

00:53:09,200 --> 00:53:13,440
am i really prefer emacs so i'm i i'm

00:53:12,000 --> 00:53:15,760
emax over vim

00:53:13,440 --> 00:53:17,359
i actually as a sys admin if you're

00:53:15,760 --> 00:53:18,640
really a good sysadmin you have to use

00:53:17,359 --> 00:53:21,200
vim all the time so

00:53:18,640 --> 00:53:22,160
still use vim all the time but um emacs

00:53:21,200 --> 00:53:24,720
is is

00:53:22,160 --> 00:53:26,720
the editor that i prefer um i will say

00:53:24,720 --> 00:53:28,880
these days i do use vs code but still

00:53:26,720 --> 00:53:32,559
have the emacs key bindings

00:53:28,880 --> 00:53:33,760
cool so um at hyde was i was really

00:53:32,559 --> 00:53:35,440
pretty happy there i was working there

00:53:33,760 --> 00:53:37,359
about a year and a half and i got hit up

00:53:35,440 --> 00:53:40,240
by a recruiter on linkedin

00:53:37,359 --> 00:53:40,800
from facebook who asked me if i wanted

00:53:40,240 --> 00:53:42,240
to

00:53:40,800 --> 00:53:43,520
interview with them so at the time i

00:53:42,240 --> 00:53:44,559
didn't think i had a chance getting a

00:53:43,520 --> 00:53:46,800
gig with them

00:53:44,559 --> 00:53:47,680
but fast forward two phone interviews

00:53:46,800 --> 00:53:50,400
one flight

00:53:47,680 --> 00:53:51,599
out to menlo park and five ruling onsite

00:53:50,400 --> 00:53:54,160
interviews later i ended up

00:53:51,599 --> 00:53:55,200
getting a job full-time uh with facebook

00:53:54,160 --> 00:53:58,640
so

00:53:55,200 --> 00:54:00,960
my fiance and now wife at the time uh

00:53:58,640 --> 00:54:02,480
or my now wife uh made the trek from

00:54:00,960 --> 00:54:04,640
ohio to california

00:54:02,480 --> 00:54:06,000
so i joined a team called the global

00:54:04,640 --> 00:54:08,400
site reliability team

00:54:06,000 --> 00:54:10,000
and um again like i really my background

00:54:08,400 --> 00:54:12,240
i consider myself a python

00:54:10,000 --> 00:54:13,680
and linux person like i'm kind of cis

00:54:12,240 --> 00:54:14,559
admin you know i have the python

00:54:13,680 --> 00:54:17,040
knowledge but

00:54:14,559 --> 00:54:18,720
um in this role we managed um i traded

00:54:17,040 --> 00:54:19,680
in a few thousand linux servers at

00:54:18,720 --> 00:54:22,480
nationwide to

00:54:19,680 --> 00:54:23,440
a few hundred thousand linux servers at

00:54:22,480 --> 00:54:25,200
facebook so

00:54:23,440 --> 00:54:27,200
you know we were managing the global

00:54:25,200 --> 00:54:29,920
site we didn't really own anything

00:54:27,200 --> 00:54:30,960
in except the general reliability of

00:54:29,920 --> 00:54:32,960
facebook so

00:54:30,960 --> 00:54:34,960
um i not only got exposed to really big

00:54:32,960 --> 00:54:36,880
distributed systems um which was a

00:54:34,960 --> 00:54:38,720
really great experience but um

00:54:36,880 --> 00:54:40,400
i also what more importantly and where

00:54:38,720 --> 00:54:42,079
i've learned way more in my career and

00:54:40,400 --> 00:54:43,839
any role that i've ever had is

00:54:42,079 --> 00:54:46,160
i get to see how things break we were

00:54:43,839 --> 00:54:47,839
literally the 24 7 brick fix team

00:54:46,160 --> 00:54:49,520
who had covered here in the united

00:54:47,839 --> 00:54:51,440
states and also in dublin ireland who

00:54:49,520 --> 00:54:52,799
were involved in every single outage so

00:54:51,440 --> 00:54:54,559
seeing distributed systems how they're

00:54:52,799 --> 00:54:56,640
built and seeing how they break

00:54:54,559 --> 00:54:57,839
really um you know it puts an impression

00:54:56,640 --> 00:54:59,440
on you and makes you

00:54:57,839 --> 00:55:01,200
gives you a really good insight into how

00:54:59,440 --> 00:55:02,160
to build things and how not to build

00:55:01,200 --> 00:55:05,119
things

00:55:02,160 --> 00:55:06,960
so one of the um i think one of the main

00:55:05,119 --> 00:55:07,760
goals of any engineer in any role that

00:55:06,960 --> 00:55:09,680
you're in

00:55:07,760 --> 00:55:10,880
is your job is to automate yourself out

00:55:09,680 --> 00:55:13,760
of your job like

00:55:10,880 --> 00:55:15,119
you should you know replace yourself

00:55:13,760 --> 00:55:16,480
with ideally code

00:55:15,119 --> 00:55:18,079
and then you can go move on to bigger

00:55:16,480 --> 00:55:18,960
better problems and a year and a half

00:55:18,079 --> 00:55:21,040
into facebook

00:55:18,960 --> 00:55:23,040
that's actually exactly what my team did

00:55:21,040 --> 00:55:25,119
we had about 20 engineers on the team

00:55:23,040 --> 00:55:26,640
where we were doing like literally and

00:55:25,119 --> 00:55:28,559
this is crazy to think about even in

00:55:26,640 --> 00:55:30,000
2012 but we were doing database

00:55:28,559 --> 00:55:31,920
migrations and like

00:55:30,000 --> 00:55:33,280
for you know for facebook and we ended

00:55:31,920 --> 00:55:34,480
up automating all those things away and

00:55:33,280 --> 00:55:36,400
building systems to

00:55:34,480 --> 00:55:37,760
to do that job so that team actually

00:55:36,400 --> 00:55:38,960
dissolved and we got to go figure out

00:55:37,760 --> 00:55:40,319
where we wanted to

00:55:38,960 --> 00:55:41,280
to go and one of the areas that i

00:55:40,319 --> 00:55:42,720
thought was really interesting that i

00:55:41,280 --> 00:55:44,400
had very little

00:55:42,720 --> 00:55:46,160
knowledge of at the time was networking

00:55:44,400 --> 00:55:47,680
and specifically like how does the

00:55:46,160 --> 00:55:49,040
internet work how do people get to

00:55:47,680 --> 00:55:50,319
facebook and one of the really cool

00:55:49,040 --> 00:55:52,640
things that they had

00:55:50,319 --> 00:55:53,760
um is it still exists to some extent

00:55:52,640 --> 00:55:55,920
today is

00:55:53,760 --> 00:55:57,920
you could actually send people from

00:55:55,920 --> 00:55:59,200
facebook and from one continent

00:55:57,920 --> 00:56:01,040
and move them to an entire another

00:55:59,200 --> 00:56:02,640
continent by editing one line in a

00:56:01,040 --> 00:56:04,240
single file and that was kind of

00:56:02,640 --> 00:56:05,359
fascinating to me i needed i wanted to

00:56:04,240 --> 00:56:06,880
know how it works so i ended up joining

00:56:05,359 --> 00:56:08,640
the traffic and cdn team

00:56:06,880 --> 00:56:09,760
so their job is to make sure no matter

00:56:08,640 --> 00:56:10,559
where you are in the world whether you

00:56:09,760 --> 00:56:13,680
use facebook

00:56:10,559 --> 00:56:14,559
instagram whatsapp etc um when you use

00:56:13,680 --> 00:56:16,160
those apps

00:56:14,559 --> 00:56:18,079
we know we detect where you are in the

00:56:16,160 --> 00:56:19,119
world and that is not based on gps

00:56:18,079 --> 00:56:20,880
location

00:56:19,119 --> 00:56:22,559
those don't matter at all we base that

00:56:20,880 --> 00:56:23,520
based on the internet and where you're

00:56:22,559 --> 00:56:26,000
at located

00:56:23,520 --> 00:56:27,119
within the internet so um i ended up

00:56:26,000 --> 00:56:30,000
joining that team for

00:56:27,119 --> 00:56:31,280
a couple years and we ended up helping

00:56:30,000 --> 00:56:33,119
build out the global

00:56:31,280 --> 00:56:35,520
internet infrastructure and photo and

00:56:33,119 --> 00:56:38,160
video delivery uh systems on that team

00:56:35,520 --> 00:56:39,680
so if in the last eight or nine years

00:56:38,160 --> 00:56:41,119
you've ever seen any of these memes on

00:56:39,680 --> 00:56:42,319
facebook and they got delivered to your

00:56:41,119 --> 00:56:44,400
phone or your website or

00:56:42,319 --> 00:56:46,160
your browser really fast um you're

00:56:44,400 --> 00:56:47,839
welcome i i

00:56:46,160 --> 00:56:49,760
some of the teams that i that i worked

00:56:47,839 --> 00:56:50,799
on um you know both those systems to

00:56:49,760 --> 00:56:52,720
make sure that delivery was really

00:56:50,799 --> 00:56:54,640
quickly

00:56:52,720 --> 00:56:57,119
so um the last team i worked on at

00:56:54,640 --> 00:56:57,520
facebook was um the disaster recovery

00:56:57,119 --> 00:57:00,240
team

00:56:57,520 --> 00:57:01,839
uh so when you work on a site that big

00:57:00,240 --> 00:57:04,240
and you have a global presence

00:57:01,839 --> 00:57:05,119
as they do um one of the things that you

00:57:04,240 --> 00:57:06,880
need to think about

00:57:05,119 --> 00:57:08,720
is and you and you have a multi-data

00:57:06,880 --> 00:57:11,440
center kind of region

00:57:08,720 --> 00:57:12,240
or a multi-data center system sorry

00:57:11,440 --> 00:57:14,319
website

00:57:12,240 --> 00:57:15,839
um you need to think about disaster

00:57:14,319 --> 00:57:17,359
recovery and one of the things that has

00:57:15,839 --> 00:57:19,040
happened many times is you know big

00:57:17,359 --> 00:57:20,640
hurricanes have come through and

00:57:19,040 --> 00:57:22,640
um you know can wipe out an entire

00:57:20,640 --> 00:57:24,079
region you know the entire east coast so

00:57:22,640 --> 00:57:25,760
i was on a team that we would go and

00:57:24,079 --> 00:57:28,559
simulate those types of events

00:57:25,760 --> 00:57:29,040
and make sure that facebook stayed up

00:57:28,559 --> 00:57:32,000
cool

00:57:29,040 --> 00:57:34,000
so going to 2018 um i had it my wife and

00:57:32,000 --> 00:57:34,880
i had a child in california which set in

00:57:34,000 --> 00:57:38,319
motion um

00:57:34,880 --> 00:57:40,480
our want to move back to ohio so um

00:57:38,319 --> 00:57:41,599
at the time i was trying to move back to

00:57:40,480 --> 00:57:44,400
uh with facebook

00:57:41,599 --> 00:57:45,920
um to to work remote which um it didn't

00:57:44,400 --> 00:57:47,599
end up working out that way which is

00:57:45,920 --> 00:57:49,359
which is kind of ironic because now

00:57:47,599 --> 00:57:51,680
they're um they want to lead the uh

00:57:49,359 --> 00:57:53,520
the remote workplace um i guess in the

00:57:51,680 --> 00:57:56,240
industry which is actually really cool

00:57:53,520 --> 00:57:56,640
um but since i wasn't able to do that

00:57:56,240 --> 00:57:58,160
with

00:57:56,640 --> 00:57:59,680
facebook i ended up deciding to join

00:57:58,160 --> 00:58:01,440
netflix so i joined their site

00:57:59,680 --> 00:58:03,599
reliability engineering team

00:58:01,440 --> 00:58:05,359
too and which allowed me to move back to

00:58:03,599 --> 00:58:08,240
ohio and work

00:58:05,359 --> 00:58:09,680
for them and uh and work on their video

00:58:08,240 --> 00:58:10,960
delivery team so many of the things i

00:58:09,680 --> 00:58:13,040
was doing at facebook

00:58:10,960 --> 00:58:14,960
um working um and doing that with

00:58:13,040 --> 00:58:17,520
netflix so

00:58:14,960 --> 00:58:19,680
cool so after moving back to ohio uh

00:58:17,520 --> 00:58:21,920
last year in 2019 uh again i was really

00:58:19,680 --> 00:58:24,000
happy at netflix i love the product

00:58:21,920 --> 00:58:25,359
i love the company um but i things have

00:58:24,000 --> 00:58:25,839
changed a lot in the time that i was

00:58:25,359 --> 00:58:28,799
gone

00:58:25,839 --> 00:58:30,240
from ohio to california and one of the

00:58:28,799 --> 00:58:31,920
things i wanted to do was just

00:58:30,240 --> 00:58:33,599
see what you know get the pulse of the

00:58:31,920 --> 00:58:34,880
the community things had changed a lot

00:58:33,599 --> 00:58:36,720
in terms of startups

00:58:34,880 --> 00:58:38,000
in terms of you know conferences like

00:58:36,720 --> 00:58:39,680
this they've grown crazy

00:58:38,000 --> 00:58:41,440
in a crazy amount and i just wanted to

00:58:39,680 --> 00:58:42,720
see what people were working on and so

00:58:41,440 --> 00:58:44,400
i met with a bunch of different folks

00:58:42,720 --> 00:58:46,319
coffee and lunch and i ended up meeting

00:58:44,400 --> 00:58:48,240
the co-founder and ceo matthew benson at

00:58:46,319 --> 00:58:49,520
e-fuse um he explained to me

00:58:48,240 --> 00:58:51,599
um you know kind of the mission of what

00:58:49,520 --> 00:58:53,200
they're trying to do um and i ended up

00:58:51,599 --> 00:58:54,319
making the move from netflix to join

00:58:53,200 --> 00:58:56,079
e-fuse last year

00:58:54,319 --> 00:58:57,119
um as the chief technology officer so

00:58:56,079 --> 00:58:58,400
just to give you a really brief

00:58:57,119 --> 00:59:00,559
introduction to what they do

00:58:58,400 --> 00:59:01,760
um there's over 160 universities that

00:59:00,559 --> 00:59:03,599
either have

00:59:01,760 --> 00:59:05,280
varsity sports programs or building

00:59:03,599 --> 00:59:07,040
collegiate esports teams so

00:59:05,280 --> 00:59:08,799
just like ohio state has varsity

00:59:07,040 --> 00:59:11,119
football they also have

00:59:08,799 --> 00:59:12,000
a varsity league of legends scene where

00:59:11,119 --> 00:59:13,599
students are getting full ride

00:59:12,000 --> 00:59:17,040
scholarships to play

00:59:13,599 --> 00:59:18,079
games on a full ride so um what youtube

00:59:17,040 --> 00:59:20,079
is trying to do is help

00:59:18,079 --> 00:59:21,359
build that professional gaming resume to

00:59:20,079 --> 00:59:23,200
help find aspiring

00:59:21,359 --> 00:59:24,799
either professional players collegiate

00:59:23,200 --> 00:59:27,119
players or even you know

00:59:24,799 --> 00:59:28,799
people who are are looking to you know

00:59:27,119 --> 00:59:29,599
you know join a professional team you

00:59:28,799 --> 00:59:31,280
know help them

00:59:29,599 --> 00:59:32,960
you know build out their resume and on

00:59:31,280 --> 00:59:34,799
the other side of it we're working with

00:59:32,960 --> 00:59:36,880
college coaches universities recruiters

00:59:34,799 --> 00:59:40,079
to help bring those opportunities

00:59:36,880 --> 00:59:41,040
to the industry um to the the people on

00:59:40,079 --> 00:59:42,799
our platform

00:59:41,040 --> 00:59:44,720
and we also have very much a community

00:59:42,799 --> 00:59:48,000
networking aspect of it as well

00:59:44,720 --> 00:59:51,520
so um oh that's based on linux docker

00:59:48,000 --> 00:59:52,880
ecs amazon um so but i'll just go for

00:59:51,520 --> 00:59:55,760
the talk today

00:59:52,880 --> 00:59:57,359
so um this is going to be um a slightly

00:59:55,760 --> 00:59:58,400
a much higher level talk last year i

00:59:57,359 --> 01:00:00,160
gave a talk

00:59:58,400 --> 01:00:02,400
advanced site reliability engineering

01:00:00,160 --> 01:00:03,440
networking um it went very deep on the

01:00:02,400 --> 01:00:05,440
networking side

01:00:03,440 --> 01:00:07,280
and um this talk is going to be much

01:00:05,440 --> 01:00:08,559
more high level and

01:00:07,280 --> 01:00:10,319
we're going to talk about kind of the

01:00:08,559 --> 01:00:11,920
origins of the internet and

01:00:10,319 --> 01:00:14,640
applying it to something that i assume

01:00:11,920 --> 01:00:16,319
everybody's pretty uh comfortable or

01:00:14,640 --> 01:00:17,760
familiar with is ordering packages on

01:00:16,319 --> 01:00:19,200
amazon and how those packages get

01:00:17,760 --> 01:00:22,240
delivered to your home

01:00:19,200 --> 01:00:23,440
so um this is um you know where we'll be

01:00:22,240 --> 01:00:25,680
spending um

01:00:23,440 --> 01:00:27,359
the the next bit of our time again it is

01:00:25,680 --> 01:00:30,640
a lot higher level if you're looking for

01:00:27,359 --> 01:00:32,319
really deep tcpip you know dns related

01:00:30,640 --> 01:00:34,160
things i definitely recommend going and

01:00:32,319 --> 01:00:37,040
looking at that talk last year or

01:00:34,160 --> 01:00:38,240
i've done a global global load balancing

01:00:37,040 --> 01:00:41,599
talk as well

01:00:38,240 --> 01:00:43,839
while at facebook so let's um

01:00:41,599 --> 01:00:44,880
assume that we're at ohio state in the

01:00:43,839 --> 01:00:48,079
70s or so

01:00:44,880 --> 01:00:50,880
so you know we're we're here we're um

01:00:48,079 --> 01:00:52,400
we're working on research and you know

01:00:50,880 --> 01:00:53,280
we're starting to build this local

01:00:52,400 --> 01:00:55,200
network

01:00:53,280 --> 01:00:57,280
around the campus so you know

01:00:55,200 --> 01:00:57,839
researchers and and professors want to

01:00:57,280 --> 01:01:00,000
share

01:00:57,839 --> 01:01:01,520
uh information you know between each

01:01:00,000 --> 01:01:03,440
other so we build this local land

01:01:01,520 --> 01:01:05,200
local area network and everything's

01:01:03,440 --> 01:01:06,319
great you know ohio state you know

01:01:05,200 --> 01:01:08,000
they're they're building this

01:01:06,319 --> 01:01:09,599
you know they're sharing research

01:01:08,000 --> 01:01:11,839
together collaborating

01:01:09,599 --> 01:01:13,119
and you know overall life is pretty good

01:01:11,839 --> 01:01:15,359
and at the same time

01:01:13,119 --> 01:01:17,359
indiana is doing the same thing where

01:01:15,359 --> 01:01:19,119
you know graduate students professors

01:01:17,359 --> 01:01:20,559
you know they're all researching

01:01:19,119 --> 01:01:22,960
collaborating and

01:01:20,559 --> 01:01:24,640
you know the the the quality and the the

01:01:22,960 --> 01:01:26,559
speed at which they can do this research

01:01:24,640 --> 01:01:28,960
has really increased in a big way

01:01:26,559 --> 01:01:30,799
so everything's great but then all of a

01:01:28,960 --> 01:01:33,200
sudden you know

01:01:30,799 --> 01:01:34,079
both indiana and ohio state want to you

01:01:33,200 --> 01:01:36,319
know

01:01:34,079 --> 01:01:39,119
share information together so they both

01:01:36,319 --> 01:01:40,960
have this local area network this land

01:01:39,119 --> 01:01:42,559
and but they want to figure out like how

01:01:40,960 --> 01:01:42,880
do we share this information without you

01:01:42,559 --> 01:01:44,319
know

01:01:42,880 --> 01:01:46,640
actually physically driving you know

01:01:44,319 --> 01:01:47,440
between the universities to to to be

01:01:46,640 --> 01:01:50,880
able to do this

01:01:47,440 --> 01:01:52,559
so this is where um

01:01:50,880 --> 01:01:54,480
what we're going to do is we're going to

01:01:52,559 --> 01:01:57,200
create this internet

01:01:54,480 --> 01:01:58,079
or the inter network so what we're going

01:01:57,200 --> 01:01:59,599
to do here is we're just going to

01:01:58,079 --> 01:02:01,359
actually physically run a cable

01:01:59,599 --> 01:02:02,720
between these two universities we're

01:02:01,359 --> 01:02:04,559
going to put two routers

01:02:02,720 --> 01:02:06,160
on each side of them and then they're

01:02:04,559 --> 01:02:08,720
going to be able to talk to each other

01:02:06,160 --> 01:02:10,319
so this is awesome so now these two

01:02:08,720 --> 01:02:11,680
really big institutions will be able to

01:02:10,319 --> 01:02:14,400
collaborate much quicker

01:02:11,680 --> 01:02:16,079
you know do research together and

01:02:14,400 --> 01:02:19,200
everything is great

01:02:16,079 --> 01:02:20,079
so we've got this cable now and it's

01:02:19,200 --> 01:02:22,559
just between these

01:02:20,079 --> 01:02:24,240
two but now there's more universities

01:02:22,559 --> 01:02:27,200
that want to join this network

01:02:24,240 --> 01:02:28,559
so you know and they're also you know

01:02:27,200 --> 01:02:28,880
they're building their local network as

01:02:28,559 --> 01:02:31,119
well

01:02:28,880 --> 01:02:32,880
so illinois jumps on board and then they

01:02:31,119 --> 01:02:34,480
physically you know connect to the other

01:02:32,880 --> 01:02:36,319
networks and then

01:02:34,480 --> 01:02:38,000
ohio university joins and then they

01:02:36,319 --> 01:02:39,520
connect to this network and then

01:02:38,000 --> 01:02:41,280
as you can kind of see and as you can

01:02:39,520 --> 01:02:42,000
kind of probably envision the evolution

01:02:41,280 --> 01:02:44,079
of this

01:02:42,000 --> 01:02:46,319
um is such that you know we have a big

01:02:44,079 --> 01:02:48,240
network of academic universities

01:02:46,319 --> 01:02:49,920
and when people are looking at this from

01:02:48,240 --> 01:02:52,240
the outside in particular the

01:02:49,920 --> 01:02:53,599
service industry or you know the the

01:02:52,240 --> 01:02:55,520
for-profit industries

01:02:53,599 --> 01:02:57,200
they're like wow this is really amazing

01:02:55,520 --> 01:02:57,680
we want to also you know collaborate

01:02:57,200 --> 01:02:59,680
with

01:02:57,680 --> 01:03:00,720
these universities and we can probably

01:02:59,680 --> 01:03:04,319
use this ourselves

01:03:00,720 --> 01:03:06,319
we need to you know share information

01:03:04,319 --> 01:03:07,760
you know across our company across our

01:03:06,319 --> 01:03:09,680
different uh you know

01:03:07,760 --> 01:03:11,839
cities around the world and then this is

01:03:09,680 --> 01:03:12,880
where the internet service provider is

01:03:11,839 --> 01:03:16,640
actually born

01:03:12,880 --> 01:03:18,640
so um and then this is where um you know

01:03:16,640 --> 01:03:20,160
let's just say acmeco and these

01:03:18,640 --> 01:03:21,920
different companies

01:03:20,160 --> 01:03:24,240
they instead of just connecting directly

01:03:21,920 --> 01:03:25,760
to you know these different universities

01:03:24,240 --> 01:03:27,280
there's this internet service provider

01:03:25,760 --> 01:03:27,760
and we're just going to say spectrum it

01:03:27,280 --> 01:03:30,240
wasn't

01:03:27,760 --> 01:03:32,079
spectrum back then but um they're the

01:03:30,240 --> 01:03:35,359
ones that actually you know

01:03:32,079 --> 01:03:37,200
connect to this global internet network

01:03:35,359 --> 01:03:38,799
um and then they sold that service to

01:03:37,200 --> 01:03:40,079
university or sorry two on these

01:03:38,799 --> 01:03:42,880
corporations outside

01:03:40,079 --> 01:03:44,079
and you know as you can kind of imagine

01:03:42,880 --> 01:03:47,280
it just kept growing

01:03:44,079 --> 01:03:49,359
you know more isps came up

01:03:47,280 --> 01:03:51,039
um obviously you know in the in the 90s

01:03:49,359 --> 01:03:51,760
this became much more consumer based

01:03:51,039 --> 01:03:54,160
with uh

01:03:51,760 --> 01:03:56,480
with dial-up internet etc and this is

01:03:54,160 --> 01:03:59,119
just kind of how the internet

01:03:56,480 --> 01:04:00,559
grew and you know became what it is

01:03:59,119 --> 01:04:02,720
today it is literally

01:04:00,559 --> 01:04:04,079
a bunch of inter networks that are

01:04:02,720 --> 01:04:06,480
interconnected together

01:04:04,079 --> 01:04:07,599
with global routing tables to make sure

01:04:06,480 --> 01:04:10,319
the magic works

01:04:07,599 --> 01:04:11,200
um on all the packets around uh you know

01:04:10,319 --> 01:04:14,960
getting from

01:04:11,200 --> 01:04:16,720
destination uh source to destination so

01:04:14,960 --> 01:04:19,119
let's talk a little bit about the

01:04:16,720 --> 01:04:22,240
architecture of the internet

01:04:19,119 --> 01:04:22,799
and first i'm going to talk about or

01:04:22,240 --> 01:04:26,400
show you

01:04:22,799 --> 01:04:29,760
a visualization of the interstate system

01:04:26,400 --> 01:04:31,440
so this is um back in the 70s um dwight

01:04:29,760 --> 01:04:35,359
eisenhower

01:04:31,440 --> 01:04:38,880
base uh put a um a mandate or

01:04:35,359 --> 01:04:41,119
a directive out that we need to you know

01:04:38,880 --> 01:04:43,119
create this inter-state system so that

01:04:41,119 --> 01:04:45,520
we can not only um not only for

01:04:43,119 --> 01:04:46,160
you know defense and military purposes

01:04:45,520 --> 01:04:47,839
um which

01:04:46,160 --> 01:04:49,280
other big countries have you know set

01:04:47,839 --> 01:04:51,520
precedent for in the past

01:04:49,280 --> 01:04:53,039
but also to increase commerce and you

01:04:51,520 --> 01:04:55,599
know and allow

01:04:53,039 --> 01:04:56,960
people and goods to move more freely and

01:04:55,599 --> 01:04:57,760
more quickly throughout the united

01:04:56,960 --> 01:04:59,760
states so

01:04:57,760 --> 01:05:01,680
um this is um approximately what the

01:04:59,760 --> 01:05:04,000
interstate system looks like today

01:05:01,680 --> 01:05:05,440
um i'm sure we're all very familiar with

01:05:04,000 --> 01:05:08,960
the ones around

01:05:05,440 --> 01:05:11,520
uh you know around columbus so um

01:05:08,960 --> 01:05:13,599
interestingly let's look at the us

01:05:11,520 --> 01:05:16,720
internet system

01:05:13,599 --> 01:05:18,880
so if we go look at a map of

01:05:16,720 --> 01:05:20,880
the cables that are physically laid in

01:05:18,880 --> 01:05:23,760
the ground these fiber optic cables

01:05:20,880 --> 01:05:25,680
this is a very high level um view of

01:05:23,760 --> 01:05:27,119
what this actually looks like so

01:05:25,680 --> 01:05:29,119
if we look at this compared to the

01:05:27,119 --> 01:05:30,799
interstate system um

01:05:29,119 --> 01:05:32,559
interestingly it actually the map

01:05:30,799 --> 01:05:33,119
doesn't look that much different you

01:05:32,559 --> 01:05:34,640
know

01:05:33,119 --> 01:05:36,400
the way cables are laid you know

01:05:34,640 --> 01:05:38,960
throughout the united states

01:05:36,400 --> 01:05:40,880
is very similar to that of which you

01:05:38,960 --> 01:05:41,359
know the interstate system is laid out

01:05:40,880 --> 01:05:43,039
and

01:05:41,359 --> 01:05:44,720
again there's a lot more cables than

01:05:43,039 --> 01:05:45,200
this throughout the internet but this is

01:05:44,720 --> 01:05:47,599
just

01:05:45,200 --> 01:05:48,880
again a very high level of kind of what

01:05:47,599 --> 01:05:50,160
this looks like so

01:05:48,880 --> 01:05:52,640
whenever you're you know hitting a

01:05:50,160 --> 01:05:54,720
website and you're uh you know hitting

01:05:52,640 --> 01:05:56,480
that aws region or that google cloud

01:05:54,720 --> 01:05:58,880
region or that azure region

01:05:56,480 --> 01:05:59,760
you are traversing these cables you know

01:05:58,880 --> 01:06:03,440
to get to

01:05:59,760 --> 01:06:06,880
your destination wherever it is so

01:06:03,440 --> 01:06:08,079
what is it that i actually did sorry

01:06:06,880 --> 01:06:10,480
you guys might be able to see that sorry

01:06:08,079 --> 01:06:13,039
about that um what is it that i actually

01:06:10,480 --> 01:06:14,000
did at facebook and netflix so what i

01:06:13,039 --> 01:06:17,119
said was i

01:06:14,000 --> 01:06:20,000
uh sorry

01:06:17,119 --> 01:06:20,799
speaker is a bit center camera sorry

01:06:20,000 --> 01:06:23,920
guys

01:06:20,799 --> 01:06:25,359
um hopefully it's a little better um so

01:06:23,920 --> 01:06:26,559
what was it that i actually did at

01:06:25,359 --> 01:06:28,799
facebook and netflix

01:06:26,559 --> 01:06:30,000
um again i mentioned that our job was to

01:06:28,799 --> 01:06:31,440
make sure no matter where you are in the

01:06:30,000 --> 01:06:32,000
world wherever you are connected to the

01:06:31,440 --> 01:06:33,920
internet

01:06:32,000 --> 01:06:35,920
photos and videos get delivered to you

01:06:33,920 --> 01:06:37,920
as quickly as possible so

01:06:35,920 --> 01:06:39,520
to kind of you know summarize this into

01:06:37,920 --> 01:06:41,599
a service that i believe everybody's

01:06:39,520 --> 01:06:44,559
probably familiar with is we effectively

01:06:41,599 --> 01:06:46,799
built ways for the internet

01:06:44,559 --> 01:06:48,400
so again taking a look at the us

01:06:46,799 --> 01:06:49,920
interstate system you know this is just

01:06:48,400 --> 01:06:51,920
a global view of

01:06:49,920 --> 01:06:52,960
you know where the interstates actually

01:06:51,920 --> 01:06:55,119
you know live

01:06:52,960 --> 01:06:56,400
or you know are are cut through uh the

01:06:55,119 --> 01:06:59,200
united states

01:06:56,400 --> 01:07:00,240
and if we actually look at a map of ways

01:06:59,200 --> 01:07:03,119
what waze does

01:07:00,240 --> 01:07:04,240
is it shows you the traffic um and the

01:07:03,119 --> 01:07:06,559
congestion

01:07:04,240 --> 01:07:08,319
and you know potentially any outages

01:07:06,559 --> 01:07:10,000
that are happening you know throughout

01:07:08,319 --> 01:07:10,880
the entire map of the you know

01:07:10,000 --> 01:07:14,079
interstate

01:07:10,880 --> 01:07:16,319
system as well as more locally as well

01:07:14,079 --> 01:07:18,160
so looking at the columbus columbus

01:07:16,319 --> 01:07:19,200
interstate system you know you have ways

01:07:18,160 --> 01:07:21,359
here and you can see

01:07:19,200 --> 01:07:23,280
and you know some places we have um you

01:07:21,359 --> 01:07:25,440
know some congestion

01:07:23,280 --> 01:07:27,119
you know up here uh you know there's

01:07:25,440 --> 01:07:28,880
some congestion down here

01:07:27,119 --> 01:07:30,240
this is you know what wage provides us

01:07:28,880 --> 01:07:32,640
is this real-time

01:07:30,240 --> 01:07:34,400
kind of traffic information and again

01:07:32,640 --> 01:07:35,920
this is what we were doing at facebook

01:07:34,400 --> 01:07:38,400
is we were building

01:07:35,920 --> 01:07:39,039
literally the map of the entire internet

01:07:38,400 --> 01:07:41,280
and

01:07:39,039 --> 01:07:43,359
you know just like waze is building maps

01:07:41,280 --> 01:07:46,079
of our entire road systems

01:07:43,359 --> 01:07:46,400
and what waze does is they map this out

01:07:46,079 --> 01:07:48,160
for

01:07:46,400 --> 01:07:50,160
you know cars traversing or you know

01:07:48,160 --> 01:07:51,280
traveling between you know 20 and 70

01:07:50,160 --> 01:07:53,680
miles per hour

01:07:51,280 --> 01:07:55,920
um at facebook what we were doing was

01:07:53,680 --> 01:07:57,839
building the same maps of the internet

01:07:55,920 --> 01:07:59,200
when packets are traveling approximately

01:07:57,839 --> 01:08:00,880
the speed of light which

01:07:59,200 --> 01:08:02,640
when you really think about it and you

01:08:00,880 --> 01:08:04,799
kind of you know map around the world

01:08:02,640 --> 01:08:06,400
it takes about um i think 200

01:08:04,799 --> 01:08:06,960
milliseconds for one pack at the speed

01:08:06,400 --> 01:08:08,799
of light

01:08:06,960 --> 01:08:10,559
theoretically to travel around the world

01:08:08,799 --> 01:08:11,920
so it's actually kind of slow

01:08:10,559 --> 01:08:13,599
if you really think about it and if you

01:08:11,920 --> 01:08:15,520
have to travel your packets have to

01:08:13,599 --> 01:08:18,239
travel along businesses

01:08:15,520 --> 01:08:20,319
so what waze does for us in the

01:08:18,239 --> 01:08:22,799
interstate system or our roadway system

01:08:20,319 --> 01:08:24,560
is you know it maps us to the closest

01:08:22,799 --> 01:08:25,520
you know destination to where we want to

01:08:24,560 --> 01:08:28,560
go

01:08:25,520 --> 01:08:29,679
so say you know on 315 you know there is

01:08:28,560 --> 01:08:31,759
an accident

01:08:29,679 --> 01:08:33,839
waze's job is to tell me what is the

01:08:31,759 --> 01:08:35,679
next fastest way now that this path is

01:08:33,839 --> 01:08:37,520
no longer valid

01:08:35,679 --> 01:08:39,679
what's you know what's the next best way

01:08:37,520 --> 01:08:42,400
to go so what it's going to do is it's

01:08:39,679 --> 01:08:44,880
going to take me 270 to 270

01:08:42,400 --> 01:08:46,400
and then you know round two to my home

01:08:44,880 --> 01:08:48,080
so let's say that there's another

01:08:46,400 --> 01:08:49,839
you know traffic accident or there's a

01:08:48,080 --> 01:08:52,000
lot of congestion on that route

01:08:49,839 --> 01:08:53,359
waze will take me you know a much longer

01:08:52,000 --> 01:08:55,520
route you know by distance

01:08:53,359 --> 01:08:56,400
but it should take me there faster and

01:08:55,520 --> 01:08:58,080
it it knows

01:08:56,400 --> 01:08:59,759
hopefully that there won't be a ton of

01:08:58,080 --> 01:09:01,440
congestion and hopefully it won't add to

01:08:59,759 --> 01:09:05,040
the congestion as well

01:09:01,440 --> 01:09:06,400
so let's apply that same thing to the us

01:09:05,040 --> 01:09:07,199
enter in that system and we'll talk

01:09:06,400 --> 01:09:08,640
about you know

01:09:07,199 --> 01:09:10,239
this is like these are the systems that

01:09:08,640 --> 01:09:11,759
we were building i mean we were making

01:09:10,239 --> 01:09:13,440
decisions you know we're building these

01:09:11,759 --> 01:09:15,520
new maps every single minute of the

01:09:13,440 --> 01:09:18,640
entire internet

01:09:15,520 --> 01:09:20,480
so at any given point in time there are

01:09:18,640 --> 01:09:21,839
these different paths on the internet

01:09:20,480 --> 01:09:24,239
that are broken um

01:09:21,839 --> 01:09:25,359
the internet actually amazingly breaks

01:09:24,239 --> 01:09:27,040
all the time

01:09:25,359 --> 01:09:28,560
and there's lots of different ways in

01:09:27,040 --> 01:09:31,440
which the internet

01:09:28,560 --> 01:09:32,480
fibers can be cut just you know common

01:09:31,440 --> 01:09:34,080
maintenance

01:09:32,480 --> 01:09:36,080
you know a backhoe where they didn't

01:09:34,080 --> 01:09:36,560
properly you know get them marked off or

01:09:36,080 --> 01:09:38,400
they

01:09:36,560 --> 01:09:39,600
they cut too close to a wire and that

01:09:38,400 --> 01:09:41,600
fiber got cut

01:09:39,600 --> 01:09:43,040
um you know this happens again pretty

01:09:41,600 --> 01:09:45,520
regularly and more regularly

01:09:43,040 --> 01:09:46,319
than us as most internet consumers would

01:09:45,520 --> 01:09:48,719
actually you know

01:09:46,319 --> 01:09:50,640
think um i've even see seeing a major

01:09:48,719 --> 01:09:51,759
website go down because someone in the

01:09:50,640 --> 01:09:54,880
middle of nowhere

01:09:51,759 --> 01:09:56,560
um in north carolina cut a tree took

01:09:54,880 --> 01:09:58,560
down the wrong cable that was a major

01:09:56,560 --> 01:10:01,360
artery for internet for that particular

01:09:58,560 --> 01:10:02,239
company and they basically took down the

01:10:01,360 --> 01:10:04,480
site for

01:10:02,239 --> 01:10:05,920
some period of time and so it's really

01:10:04,480 --> 01:10:08,320
amazing um that

01:10:05,920 --> 01:10:09,679
such like subtle things can have such

01:10:08,320 --> 01:10:10,800
huge impacts and

01:10:09,679 --> 01:10:12,880
the fact that you know some of those

01:10:10,800 --> 01:10:15,280
aerial lines can actually you know be

01:10:12,880 --> 01:10:17,120
a major major part of you know some

01:10:15,280 --> 01:10:19,360
portion of the internet

01:10:17,120 --> 01:10:20,640
um and i kind of mentioned this you know

01:10:19,360 --> 01:10:23,440
earlier as well is

01:10:20,640 --> 01:10:24,320
natural disasters are another big enemy

01:10:23,440 --> 01:10:26,640
to

01:10:24,320 --> 01:10:28,560
the internet so you know obviously this

01:10:26,640 --> 01:10:30,640
is a an image of a hurricane

01:10:28,560 --> 01:10:31,840
and if you guys are you know using you

01:10:30,640 --> 01:10:33,360
know aws

01:10:31,840 --> 01:10:35,120
you know that one of the major regions

01:10:33,360 --> 01:10:37,760
is u.s east one in ashbur

01:10:35,120 --> 01:10:38,880
in in virginia and you know it's very

01:10:37,760 --> 01:10:40,880
possible that one day

01:10:38,880 --> 01:10:42,640
that a hurricane will come through and

01:10:40,880 --> 01:10:44,000
take out that entire region like i know

01:10:42,640 --> 01:10:46,480
amazon's doing a lot of work

01:10:44,000 --> 01:10:47,679
to prevent that from happening but it's

01:10:46,480 --> 01:10:49,280
very possible and i'm

01:10:47,679 --> 01:10:50,719
confident one day that's actually going

01:10:49,280 --> 01:10:52,480
to happen so

01:10:50,719 --> 01:10:54,080
um in addition to hurricanes other

01:10:52,480 --> 01:10:54,560
really big natural disasters that are

01:10:54,080 --> 01:10:57,840
pretty

01:10:54,560 --> 01:10:59,760
um can can wreak havoc on the internet

01:10:57,840 --> 01:11:01,679
is tornadoes you know taking out

01:10:59,760 --> 01:11:03,199
you know some you know major aerial

01:11:01,679 --> 01:11:03,920
lines or even you know some in the

01:11:03,199 --> 01:11:05,600
ground

01:11:03,920 --> 01:11:07,120
um as well as earthquakes you know

01:11:05,600 --> 01:11:09,360
california has a lot of

01:11:07,120 --> 01:11:10,480
infrastructure as well you know us west

01:11:09,360 --> 01:11:13,520
one um

01:11:10,480 --> 01:11:15,199
is based uh you know in california um

01:11:13,520 --> 01:11:16,800
and you know a big enough earthquake

01:11:15,199 --> 01:11:17,679
could take that completely out um and

01:11:16,800 --> 01:11:20,320
also a lot of

01:11:17,679 --> 01:11:22,719
a lot of um aerial a lot of fiber comes

01:11:20,320 --> 01:11:25,360
into la and even seattle so

01:11:22,719 --> 01:11:26,960
um you know a lot of natural events can

01:11:25,360 --> 01:11:28,880
and will eventually cause a lot of

01:11:26,960 --> 01:11:31,440
issues on the internet

01:11:28,880 --> 01:11:33,760
this is the same view um looking at the

01:11:31,440 --> 01:11:35,920
global internet system and again this is

01:11:33,760 --> 01:11:36,960
pretty approximate but it's really

01:11:35,920 --> 01:11:38,880
amazing that

01:11:36,960 --> 01:11:40,640
you know you can see like these really

01:11:38,880 --> 01:11:42,320
big places here like boston

01:11:40,640 --> 01:11:43,920
it's a major ingress point for

01:11:42,320 --> 01:11:46,080
networking la

01:11:43,920 --> 01:11:47,600
miami is huge miami's you know they've

01:11:46,080 --> 01:11:50,080
had a lot of hurricanes lately

01:11:47,600 --> 01:11:51,040
and you know this can be a really this

01:11:50,080 --> 01:11:52,640
could you know

01:11:51,040 --> 01:11:54,800
cause a lot of issues especially for

01:11:52,640 --> 01:11:55,280
south america that's where a lot of

01:11:54,800 --> 01:11:57,360
these

01:11:55,280 --> 01:11:59,199
a lot of the internet comes in you know

01:11:57,360 --> 01:12:01,440
back to the united states so

01:11:59,199 --> 01:12:02,400
it's really fascinating to see you know

01:12:01,440 --> 01:12:04,640
how

01:12:02,400 --> 01:12:06,960
you know the world is connected and how

01:12:04,640 --> 01:12:08,640
the internet is connected

01:12:06,960 --> 01:12:10,159
so now that we kind of have an

01:12:08,640 --> 01:12:12,719
understanding of high level

01:12:10,159 --> 01:12:14,560
the architecture of the internet um

01:12:12,719 --> 01:12:14,960
let's take a look at how that compares

01:12:14,560 --> 01:12:17,120
to

01:12:14,960 --> 01:12:19,040
physical good delivery versus digital

01:12:17,120 --> 01:12:21,520
goods so

01:12:19,040 --> 01:12:22,159
let's assume that um we're amazon um and

01:12:21,520 --> 01:12:24,239
this is

01:12:22,159 --> 01:12:26,159
you know amazon was started in the 90s

01:12:24,239 --> 01:12:26,800
uh i believe that the story is jeff

01:12:26,159 --> 01:12:28,640
bezos

01:12:26,800 --> 01:12:30,159
was um kind of ticked off that he

01:12:28,640 --> 01:12:32,320
couldn't find a particular book that he

01:12:30,159 --> 01:12:34,159
wanted in any of his local bookstores so

01:12:32,320 --> 01:12:35,520
he decided to build an internet company

01:12:34,159 --> 01:12:37,360
um to to

01:12:35,520 --> 01:12:38,480
to be able to deliver books to anybody

01:12:37,360 --> 01:12:39,120
in the united states no matter where

01:12:38,480 --> 01:12:41,280
they're at

01:12:39,120 --> 01:12:43,120
so let's assume that when they started

01:12:41,280 --> 01:12:43,600
and this is probably pretty close to the

01:12:43,120 --> 01:12:46,080
truth

01:12:43,600 --> 01:12:47,120
is they only had a warehouse in seattle

01:12:46,080 --> 01:12:48,800
so

01:12:47,120 --> 01:12:50,320
you know let's say that you know they

01:12:48,800 --> 01:12:52,719
they're selling books to play

01:12:50,320 --> 01:12:54,159
people all around the united states and

01:12:52,719 --> 01:12:56,239
as you can see you know

01:12:54,159 --> 01:12:57,920
they are probably you know mostly using

01:12:56,239 --> 01:13:00,719
trucks to you know

01:12:57,920 --> 01:13:02,640
to use the internet state system um if

01:13:00,719 --> 01:13:04,480
you're in further regions of the world

01:13:02,640 --> 01:13:04,880
you know they have to use different hubs

01:13:04,480 --> 01:13:06,000
and

01:13:04,880 --> 01:13:07,840
it's going to take longer for that

01:13:06,000 --> 01:13:09,280
package to get to boston versus if that

01:13:07,840 --> 01:13:11,760
package was you know

01:13:09,280 --> 01:13:12,880
going to someone in california so um you

01:13:11,760 --> 01:13:14,560
can just see that it's going to take

01:13:12,880 --> 01:13:16,000
longer especially if there are delays

01:13:14,560 --> 01:13:18,000
you know it could take you know quite a

01:13:16,000 --> 01:13:19,920
bit of time so

01:13:18,000 --> 01:13:21,120
let's go ahead and look at what netflix

01:13:19,920 --> 01:13:23,199
might look like if they

01:13:21,120 --> 01:13:24,320
um you know they were just started and

01:13:23,199 --> 01:13:26,640
reid hastings says

01:13:24,320 --> 01:13:28,400
hey i want to deliver this video um they

01:13:26,640 --> 01:13:30,080
probably just started in california and

01:13:28,400 --> 01:13:30,480
you know close to where headquarters is

01:13:30,080 --> 01:13:32,320
and

01:13:30,480 --> 01:13:33,520
they wanted to deliver this video you

01:13:32,320 --> 01:13:35,199
know throughout the world

01:13:33,520 --> 01:13:37,840
uh sorry throughout the united states to

01:13:35,199 --> 01:13:38,480
different people to different consumers

01:13:37,840 --> 01:13:42,000
so

01:13:38,480 --> 01:13:43,679
um again just as the interstate system

01:13:42,000 --> 01:13:44,239
you can have outages at any point in

01:13:43,679 --> 01:13:45,600
time

01:13:44,239 --> 01:13:47,920
and the further you are the longer it's

01:13:45,600 --> 01:13:51,040
going to take to get there similarly

01:13:47,920 --> 01:13:53,040
video delivery is the same way you know

01:13:51,040 --> 01:13:55,840
those packets still have to traverse

01:13:53,040 --> 01:13:56,800
you know you know thousands of miles of

01:13:55,840 --> 01:13:59,679
of land

01:13:56,800 --> 01:14:00,000
to actually get there as well as you

01:13:59,679 --> 01:14:01,440
know

01:14:00,000 --> 01:14:03,040
there's going to be outages at any point

01:14:01,440 --> 01:14:03,600
in time those packets need to be routed

01:14:03,040 --> 01:14:06,239
around

01:14:03,600 --> 01:14:07,840
and the longer that packet is on a fiber

01:14:06,239 --> 01:14:09,040
the more chance that it will be dropped

01:14:07,840 --> 01:14:10,080
at some point or there will be

01:14:09,040 --> 01:14:11,840
congestion

01:14:10,080 --> 01:14:13,520
or the more routers that it traverses

01:14:11,840 --> 01:14:14,000
you know you always want the the minimum

01:14:13,520 --> 01:14:16,239
amount of

01:14:14,000 --> 01:14:17,520
time um for that package to be on the

01:14:16,239 --> 01:14:20,560
internet

01:14:17,520 --> 01:14:22,880
so you know kind of fast forward

01:14:20,560 --> 01:14:24,480
and and you know amazon became the

01:14:22,880 --> 01:14:25,920
behemoth it is you know they started

01:14:24,480 --> 01:14:28,239
selling a lot more things than just

01:14:25,920 --> 01:14:29,840
books um but you know what they wanted

01:14:28,239 --> 01:14:32,320
to do is they really wanted to

01:14:29,840 --> 01:14:32,960
tighten the time that you know shipping

01:14:32,320 --> 01:14:34,960
uh you know

01:14:32,960 --> 01:14:36,400
took right they amazon wanted to make it

01:14:34,960 --> 01:14:39,120
so that you didn't go to you know

01:14:36,400 --> 01:14:40,800
walmart or meyer or any or best buy

01:14:39,120 --> 01:14:42,400
you know to get that whatever that

01:14:40,800 --> 01:14:44,159
gadget or that thing that you wanted

01:14:42,400 --> 01:14:45,600
they wanted to get it to you as quickly

01:14:44,159 --> 01:14:47,679
as possible and

01:14:45,600 --> 01:14:49,280
similarly netflix had a similar kind of

01:14:47,679 --> 01:14:49,760
problem where you know they wanted to

01:14:49,280 --> 01:14:51,520
make sure

01:14:49,760 --> 01:14:53,520
videos were fast they wanted to make

01:14:51,520 --> 01:14:54,320
sure they they delivered at really high

01:14:53,520 --> 01:14:55,679
quality

01:14:54,320 --> 01:14:57,840
no matter where you are in the united

01:14:55,679 --> 01:14:59,760
states so these are actually two

01:14:57,840 --> 01:15:01,199
very different problems um you know if

01:14:59,760 --> 01:15:02,239
you think about one's very digital ones

01:15:01,199 --> 01:15:04,239
very physical

01:15:02,239 --> 01:15:05,360
but they both have the same limitations

01:15:04,239 --> 01:15:07,520
distance and

01:15:05,360 --> 01:15:09,600
this is how the internet kind of you

01:15:07,520 --> 01:15:12,480
know evolved into um

01:15:09,600 --> 01:15:13,840
to to uh to be able to solve these types

01:15:12,480 --> 01:15:15,840
of problems

01:15:13,840 --> 01:15:18,320
so again let's look at that single

01:15:15,840 --> 01:15:20,560
amazon seattle warehouse

01:15:18,320 --> 01:15:22,960
and then you know when we look at this

01:15:20,560 --> 01:15:24,239
map this is the u.s population density

01:15:22,960 --> 01:15:26,800
map from 2010.

01:15:24,239 --> 01:15:29,360
so um as you can see you know the

01:15:26,800 --> 01:15:31,199
majority of the amazon customers

01:15:29,360 --> 01:15:32,560
are likely not going to be in seattle

01:15:31,199 --> 01:15:33,199
they're going to be in various parts of

01:15:32,560 --> 01:15:35,440
the country

01:15:33,199 --> 01:15:36,960
so you know what they needed to do is

01:15:35,440 --> 01:15:38,800
figure out how do we actually deliver

01:15:36,960 --> 01:15:40,320
these packages really really quickly to

01:15:38,800 --> 01:15:42,560
folks that are on the east coast

01:15:40,320 --> 01:15:43,920
so the way they actually solved this was

01:15:42,560 --> 01:15:47,040
with an interstate

01:15:43,920 --> 01:15:48,719
distribution network so

01:15:47,040 --> 01:15:50,960
what they did was they strategically

01:15:48,719 --> 01:15:52,400
placed these different warehouse hubs

01:15:50,960 --> 01:15:54,400
all throughout the united states

01:15:52,400 --> 01:15:55,760
overlaying that on top of that

01:15:54,400 --> 01:15:58,239
distribution map

01:15:55,760 --> 01:15:59,360
to make sure that no matter where you

01:15:58,239 --> 01:16:01,679
were you know within

01:15:59,360 --> 01:16:03,760
some percentile you know saying like 90

01:16:01,679 --> 01:16:06,239
some percent 95 98

01:16:03,760 --> 01:16:07,760
of the you know of the nation that they

01:16:06,239 --> 01:16:09,440
could get it to you within about two

01:16:07,760 --> 01:16:10,320
days you know that's when that two-day

01:16:09,440 --> 01:16:11,840
delivery

01:16:10,320 --> 01:16:13,440
um you know things started happening is

01:16:11,840 --> 01:16:15,600
they want like where do we need to be

01:16:13,440 --> 01:16:17,760
to make this really fast such that you

01:16:15,600 --> 01:16:18,800
know we can deliver these packages and

01:16:17,760 --> 01:16:20,960
you also need to think about the

01:16:18,800 --> 01:16:22,320
logistics network making sure each of

01:16:20,960 --> 01:16:23,199
those things that are people are likely

01:16:22,320 --> 01:16:24,960
to buy

01:16:23,199 --> 01:16:26,320
are you know located in those different

01:16:24,960 --> 01:16:27,760
and warehouses so

01:16:26,320 --> 01:16:30,239
it's fascinating not only from a

01:16:27,760 --> 01:16:32,239
physical um you know

01:16:30,239 --> 01:16:34,080
presence scale but also the logistical

01:16:32,239 --> 01:16:35,679
work that that went behind

01:16:34,080 --> 01:16:37,520
how do they how do they make this as

01:16:35,679 --> 01:16:39,440
effective as possible

01:16:37,520 --> 01:16:40,719
so let's look at netflix you know

01:16:39,440 --> 01:16:42,880
similarly you know

01:16:40,719 --> 01:16:44,400
netflix is a california-based company

01:16:42,880 --> 01:16:46,320
the population density map the people

01:16:44,400 --> 01:16:47,920
who are using netflix is going to be

01:16:46,320 --> 01:16:49,840
nationwide they're going to be all over

01:16:47,920 --> 01:16:51,760
the united states so

01:16:49,840 --> 01:16:52,960
um what they they needed to solve the

01:16:51,760 --> 01:16:55,280
exact same problem

01:16:52,960 --> 01:16:57,679
and what the way they did it was they

01:16:55,280 --> 01:16:58,480
created um this platform called netflix

01:16:57,679 --> 01:17:01,520
open connect

01:16:58,480 --> 01:17:03,440
where they created these um these

01:17:01,520 --> 01:17:05,040
these basically these really big servers

01:17:03,440 --> 01:17:07,199
that sat in internet exchanges

01:17:05,040 --> 01:17:08,560
all around the united states so as you

01:17:07,199 --> 01:17:11,040
can see um this is

01:17:08,560 --> 01:17:12,159
a map of where you know many of these

01:17:11,040 --> 01:17:13,920
you know could be

01:17:12,159 --> 01:17:17,520
um you know there's internet exchanges

01:17:13,920 --> 01:17:19,679
all around the us and this allowed them

01:17:17,520 --> 01:17:21,840
much more quickly to deliver those

01:17:19,679 --> 01:17:23,520
videos and also it really removes single

01:17:21,840 --> 01:17:25,120
points of failure too right

01:17:23,520 --> 01:17:26,880
you know if for whatever reason you know

01:17:25,120 --> 01:17:29,360
california was somewhat cut off

01:17:26,880 --> 01:17:30,320
or there's major congestion um you know

01:17:29,360 --> 01:17:32,719
all these

01:17:30,320 --> 01:17:34,640
bits were located much closer to users

01:17:32,719 --> 01:17:35,360
and just a secret that all of these

01:17:34,640 --> 01:17:36,719
companies do

01:17:35,360 --> 01:17:38,560
whether it's youtube whether it's

01:17:36,719 --> 01:17:40,239
facebook whether it's netflix whether

01:17:38,560 --> 01:17:42,159
it's amazon

01:17:40,239 --> 01:17:44,320
they want to get your packet off the

01:17:42,159 --> 01:17:46,080
internet as quickly as possible the more

01:17:44,320 --> 01:17:48,560
time your packet traverses

01:17:46,080 --> 01:17:49,840
in internet service provider the long

01:17:48,560 --> 01:17:52,719
the more likely it's going to

01:17:49,840 --> 01:17:54,159
fail so they want content to be as

01:17:52,719 --> 01:17:56,800
absolutely close to

01:17:54,159 --> 01:17:58,560
their consumers as possible to make them

01:17:56,800 --> 01:17:59,280
to allow them to have the best possible

01:17:58,560 --> 01:18:00,880
experience

01:17:59,280 --> 01:18:02,960
and when you think about photo and video

01:18:00,880 --> 01:18:07,040
delivery these are you know these files

01:18:02,960 --> 01:18:09,360
are getting bigger and bigger 4k okay

01:18:07,040 --> 01:18:10,320
you know they're those bigger files you

01:18:09,360 --> 01:18:10,960
know they're not going to be able to

01:18:10,320 --> 01:18:13,040
traverse

01:18:10,960 --> 01:18:14,560
you know as long as uh they're much more

01:18:13,040 --> 01:18:17,520
likely to you know to drop

01:18:14,560 --> 01:18:19,679
so um if we actually really look at it i

01:18:17,520 --> 01:18:21,280
kind of simplified it there where

01:18:19,679 --> 01:18:23,600
um i just showed you a couple different

01:18:21,280 --> 01:18:26,320
places where netflix has caches but

01:18:23,600 --> 01:18:26,800
if we really look at the united states

01:18:26,320 --> 01:18:28,560
this is

01:18:26,800 --> 01:18:31,040
actually what it looks like and there

01:18:28,560 --> 01:18:31,920
i'll just be quite open there's way more

01:18:31,040 --> 01:18:34,480
than this this is

01:18:31,920 --> 01:18:36,480
again just uh just an example but what

01:18:34,480 --> 01:18:38,800
they do is they actually will

01:18:36,480 --> 01:18:40,719
um they will actually work with internet

01:18:38,800 --> 01:18:41,199
service providers all around the united

01:18:40,719 --> 01:18:43,360
states

01:18:41,199 --> 01:18:44,560
and they will embed caches directly into

01:18:43,360 --> 01:18:45,600
their networks

01:18:44,560 --> 01:18:47,679
and this is not something that just

01:18:45,600 --> 01:18:48,800
netflix does this is something that all

01:18:47,679 --> 01:18:51,679
of these companies do

01:18:48,800 --> 01:18:53,280
youtube facebook amazon and even the big

01:18:51,679 --> 01:18:54,880
cdn providers that you use you know

01:18:53,280 --> 01:18:57,040
akamai cloudflare

01:18:54,880 --> 01:18:58,159
fastly they're doing these things as

01:18:57,040 --> 01:18:59,360
well and they've been doing it for a

01:18:58,159 --> 01:19:02,000
really really long time

01:18:59,360 --> 01:19:02,800
so um similarly to what netflix you know

01:19:02,000 --> 01:19:05,840
has done here

01:19:02,800 --> 01:19:07,600
um amazon also if you look at

01:19:05,840 --> 01:19:09,440
their distribution network they're

01:19:07,600 --> 01:19:12,560
actually distributed in this way

01:19:09,440 --> 01:19:15,600
um and when we zoom into columbus

01:19:12,560 --> 01:19:16,480
we can see columbus actually has a few

01:19:15,600 --> 01:19:19,280
different

01:19:16,480 --> 01:19:20,719
servers of that actually contain almost

01:19:19,280 --> 01:19:23,760
the entire netflix catalog

01:19:20,719 --> 01:19:24,960
the us catalog right here in columbus so

01:19:23,760 --> 01:19:27,040
um i don't know what your internet

01:19:24,960 --> 01:19:29,360
connectivity provider is today

01:19:27,040 --> 01:19:31,120
but um what i would be what's cool to do

01:19:29,360 --> 01:19:31,760
is go to netflix.com you know watch that

01:19:31,120 --> 01:19:34,400
video pop

01:19:31,760 --> 01:19:35,920
up and then you might see a little

01:19:34,400 --> 01:19:37,440
airport code there and this is comment

01:19:35,920 --> 01:19:38,719
across you know this isn't just netflix

01:19:37,440 --> 01:19:39,920
this is facebook youtube too

01:19:38,719 --> 01:19:41,920
you're going to see an airport code

01:19:39,920 --> 01:19:44,880
maybe cmh maybe ord

01:19:41,920 --> 01:19:45,520
maybe iad you know those airport codes

01:19:44,880 --> 01:19:47,840
tell you

01:19:45,520 --> 01:19:49,280
where in the world or where airport code

01:19:47,840 --> 01:19:51,440
wise your

01:19:49,280 --> 01:19:52,960
content is actually being delivered so

01:19:51,440 --> 01:19:54,400
there's a high probability no matter who

01:19:52,960 --> 01:19:57,199
you're with spectrum wow

01:19:54,400 --> 01:19:58,239
um that you will not have to even leave

01:19:57,199 --> 01:20:01,360
the vicinity

01:19:58,239 --> 01:20:03,840
of 270 to get that video and

01:20:01,360 --> 01:20:04,400
um i know this uh from my time at

01:20:03,840 --> 01:20:06,560
facebook

01:20:04,400 --> 01:20:08,560
ohio state even actually has a facebook

01:20:06,560 --> 01:20:09,840
cache within their network i was really

01:20:08,560 --> 01:20:10,320
really excited i actually worked on that

01:20:09,840 --> 01:20:12,320
team

01:20:10,320 --> 01:20:14,159
i was super pumped um when that happened

01:20:12,320 --> 01:20:16,320
so hopefully internet's really really

01:20:14,159 --> 01:20:18,080
fast facebook internet and instagram at

01:20:16,320 --> 01:20:21,440
uh at ohio state

01:20:18,080 --> 01:20:23,040
so you know again you know what we did

01:20:21,440 --> 01:20:24,880
at these companies was we built

01:20:23,040 --> 01:20:26,960
you know these maps of the internet and

01:20:24,880 --> 01:20:27,679
again this is maps based on the internet

01:20:26,960 --> 01:20:30,159
of where

01:20:27,679 --> 01:20:32,239
these different caches or in this case

01:20:30,159 --> 01:20:35,600
the movie catalogs were in the world

01:20:32,239 --> 01:20:36,880
based on your actual network uh location

01:20:35,600 --> 01:20:38,719
on the internet so

01:20:36,880 --> 01:20:40,080
at any point in time these caches could

01:20:38,719 --> 01:20:41,600
go down maybe they go down for

01:20:40,080 --> 01:20:43,040
maintenance maybe they go down because

01:20:41,600 --> 01:20:44,320
of a power outage or as

01:20:43,040 --> 01:20:46,639
somebody in slack says you know a

01:20:44,320 --> 01:20:49,120
lightning strike um

01:20:46,639 --> 01:20:50,159
you know we need to make sure that we

01:20:49,120 --> 01:20:52,080
are um

01:20:50,159 --> 01:20:53,280
you know doing that in a very same way

01:20:52,080 --> 01:20:54,560
and this could even happen in the middle

01:20:53,280 --> 01:20:56,239
of watching a movie so

01:20:54,560 --> 01:20:57,679
you need to be really smart both on the

01:20:56,239 --> 01:20:58,880
client and the server side to

01:20:57,679 --> 01:21:01,280
dynamically track

01:20:58,880 --> 01:21:03,120
to move that move that traffic um such

01:21:01,280 --> 01:21:03,679
that that user or that consumer that

01:21:03,120 --> 01:21:05,120
customer

01:21:03,679 --> 01:21:07,120
never sees that buffering like that's

01:21:05,120 --> 01:21:09,040
the evil of all platforms

01:21:07,120 --> 01:21:10,960
video and photo delivery side nobody

01:21:09,040 --> 01:21:14,000
wants to see that you know that spinning

01:21:10,960 --> 01:21:15,600
spinning circle so similarly

01:21:14,000 --> 01:21:17,520
if we zoom in and look at warehouses in

01:21:15,600 --> 01:21:19,360
columbus these are they're actually five

01:21:17,520 --> 01:21:21,360
warehouses at least in columbus when i

01:21:19,360 --> 01:21:23,360
last looked on looked on google maps so

01:21:21,360 --> 01:21:24,719
this is how you know google and this on

01:21:23,360 --> 01:21:27,440
amazon is able to

01:21:24,719 --> 01:21:28,080
um you know do same-day delivery this is

01:21:27,440 --> 01:21:30,159
how

01:21:28,080 --> 01:21:31,280
um you know you're able to get the you

01:21:30,159 --> 01:21:32,880
know

01:21:31,280 --> 01:21:34,320
amazon fresh you know to get those

01:21:32,880 --> 01:21:36,400
groceries delivered is because they've

01:21:34,320 --> 01:21:39,120
strategically placed these hubs

01:21:36,400 --> 01:21:40,880
in major metropolitan areas so they can

01:21:39,120 --> 01:21:42,560
deliver things really really quickly i

01:21:40,880 --> 01:21:44,719
don't have a slide for it today

01:21:42,560 --> 01:21:48,239
but you can even you know if you've ever

01:21:44,719 --> 01:21:48,239
in amazon usc 2

01:21:48,400 --> 01:21:52,159
columbus is also a big hub for data

01:21:50,400 --> 01:21:55,520
center so facebook google

01:21:52,159 --> 01:21:57,040
amazon maybe even apple they all use

01:21:55,520 --> 01:22:00,000
columbus

01:21:57,040 --> 01:22:00,800
for uh you know major internet data

01:22:00,000 --> 01:22:02,960
centers

01:22:00,800 --> 01:22:04,320
because for a few reasons one um

01:22:02,960 --> 01:22:06,320
relatively inexpensive

01:22:04,320 --> 01:22:07,440
very good internet connectivity and um

01:22:06,320 --> 01:22:09,600
taxes aren't too terrible

01:22:07,440 --> 01:22:10,639
so um you know columbus is actually a

01:22:09,600 --> 01:22:12,159
really cool hub for

01:22:10,639 --> 01:22:14,000
tech um when it comes to a lot of this

01:22:12,159 --> 01:22:17,040
stuff so

01:22:14,000 --> 01:22:18,960
um kind of in closing you know i guess

01:22:17,040 --> 01:22:20,800
the goal of this talk is to you know

01:22:18,960 --> 01:22:24,239
kind of help you next time you

01:22:20,800 --> 01:22:26,239
you hit buy on amazon just kind of maybe

01:22:24,239 --> 01:22:27,840
appreciate you know how quickly

01:22:26,239 --> 01:22:30,000
you know that package is going to get to

01:22:27,840 --> 01:22:30,320
you and you know when you go and select

01:22:30,000 --> 01:22:31,760
that

01:22:30,320 --> 01:22:33,920
option you know whether you're in a

01:22:31,760 --> 01:22:34,960
rural part of ohio or whether you're in

01:22:33,920 --> 01:22:36,080
columbus ohio

01:22:34,960 --> 01:22:38,080
and how those options are going to

01:22:36,080 --> 01:22:41,440
change based on how quickly that

01:22:38,080 --> 01:22:42,960
that is delivered to you um and you know

01:22:41,440 --> 01:22:44,960
it's based on availability it's based on

01:22:42,960 --> 01:22:46,800
where the warehouses are closest to us

01:22:44,960 --> 01:22:48,000
um it's really fascinating the amount of

01:22:46,800 --> 01:22:50,800
technology and

01:22:48,000 --> 01:22:51,280
the physical distribution um of the of

01:22:50,800 --> 01:22:54,560
the

01:22:51,280 --> 01:22:56,239
uh warehouse infrastructure um and then

01:22:54,560 --> 01:22:56,880
also you know when you press play on

01:22:56,239 --> 01:22:59,280
your next

01:22:56,880 --> 01:23:00,800
netflix video or you know you go to

01:22:59,280 --> 01:23:02,800
youtube and watch that video

01:23:00,800 --> 01:23:04,080
just kind of appreciate you know the the

01:23:02,800 --> 01:23:06,480
work that was done behind

01:23:04,080 --> 01:23:07,840
that that traffic engineering to make

01:23:06,480 --> 01:23:09,840
sure when you hit play

01:23:07,840 --> 01:23:11,679
it knows where that video actually lives

01:23:09,840 --> 01:23:12,400
where that you know youtube video is

01:23:11,679 --> 01:23:14,080
cached

01:23:12,400 --> 01:23:15,600
and then you know optimally you know

01:23:14,080 --> 01:23:17,120
sends you there so that it's really

01:23:15,600 --> 01:23:20,239
really fast and a really really

01:23:17,120 --> 01:23:23,679
great quality so um lastly

01:23:20,239 --> 01:23:27,199
uh i'll just um you know want to say

01:23:23,679 --> 01:23:28,320
i'm my um i've been really fortunate to

01:23:27,199 --> 01:23:28,960
have worked at you know some of these

01:23:28,320 --> 01:23:32,159
companies

01:23:28,960 --> 01:23:32,880
and um you know i would back in 2012

01:23:32,159 --> 01:23:35,679
when i

01:23:32,880 --> 01:23:37,120
uh you know left nationwide um or when i

01:23:35,679 --> 01:23:38,159
was even working at h1 when i was in

01:23:37,120 --> 01:23:40,000
college

01:23:38,159 --> 01:23:41,199
working at startups wasn't really even

01:23:40,000 --> 01:23:43,679
an afterthought for me

01:23:41,199 --> 01:23:45,520
so um you know it's it's been really

01:23:43,679 --> 01:23:45,760
amazing to see in my almost seven years

01:23:45,520 --> 01:23:48,159
at

01:23:45,760 --> 01:23:49,040
california how much things have changed

01:23:48,159 --> 01:23:50,719
and

01:23:49,040 --> 01:23:52,639
especially in the startup scene and the

01:23:50,719 --> 01:23:54,239
venture capital scene and

01:23:52,639 --> 01:23:55,679
really just technology companies in

01:23:54,239 --> 01:23:57,600
general um it's it was

01:23:55,679 --> 01:23:58,880
awesome to see and maybe really excited

01:23:57,600 --> 01:24:00,719
to come back and

01:23:58,880 --> 01:24:02,080
you know i wouldn't trade my time out

01:24:00,719 --> 01:24:03,920
there and especially at those companies

01:24:02,080 --> 01:24:05,679
for anything career-wise but one thing

01:24:03,920 --> 01:24:07,760
i'm more confident in

01:24:05,679 --> 01:24:09,040
this in 2020 than i ever have been

01:24:07,760 --> 01:24:11,440
before is

01:24:09,040 --> 01:24:13,199
that no longer do you have to move to

01:24:11,440 --> 01:24:14,159
the coast to the east coast and west

01:24:13,199 --> 01:24:15,520
coast to

01:24:14,159 --> 01:24:17,199
um you build a great career in

01:24:15,520 --> 01:24:18,960
technology and

01:24:17,199 --> 01:24:21,199
i think it's really easy for me to say

01:24:18,960 --> 01:24:22,080
that today with kovid but there's videos

01:24:21,199 --> 01:24:24,560
of me saying that

01:24:22,080 --> 01:24:27,120
last year um after moving back as well

01:24:24,560 --> 01:24:29,120
um so i really do believe this and

01:24:27,120 --> 01:24:30,400
you know really that's one of my goals

01:24:29,120 --> 01:24:32,719
is to uh in

01:24:30,400 --> 01:24:34,320
in in leaving these companies is i love

01:24:32,719 --> 01:24:36,080
facebook i love netflix like i

01:24:34,320 --> 01:24:38,080
they were really great companies but i'm

01:24:36,080 --> 01:24:40,320
really excited to

01:24:38,080 --> 01:24:42,000
one is to spend my time in energy you

01:24:40,320 --> 01:24:43,440
know based here in columbus and in

01:24:42,000 --> 01:24:45,199
building the community the tech

01:24:43,440 --> 01:24:47,600
community here um

01:24:45,199 --> 01:24:49,440
and also and secondly just building

01:24:47,600 --> 01:24:51,040
amazing an amazing company you know

01:24:49,440 --> 01:24:52,480
i i love a lot of things about those

01:24:51,040 --> 01:24:54,639
companies and i want to help

01:24:52,480 --> 01:24:55,679
build you know those that next amazing

01:24:54,639 --> 01:24:57,600
engineering company

01:24:55,679 --> 01:24:59,679
that amazing tech company right here in

01:24:57,600 --> 01:25:03,360
columbus ohio so

01:24:59,679 --> 01:25:03,360
um yeah that's it thank you

01:25:08,159 --> 01:25:13,840
thank you very much patrick that was a

01:25:10,480 --> 01:25:13,840
quick ending

01:25:13,920 --> 01:25:17,760
thank you so much wow the scale of that

01:25:17,199 --> 01:25:20,440
is

01:25:17,760 --> 01:25:23,440
almost to quote princess bride

01:25:20,440 --> 01:25:23,440
inconceivable

01:25:23,840 --> 01:25:27,920
thank you so much um we have a few

01:25:26,239 --> 01:25:31,600
questions if there's time

01:25:27,920 --> 01:25:34,560
yeah okay let's see here i'm trying to

01:25:31,600 --> 01:25:35,199
i'm gonna do stuff on my end all righty

01:25:34,560 --> 01:25:36,960
uh

01:25:35,199 --> 01:25:38,239
so yeah it's it's really interesting

01:25:36,960 --> 01:25:39,840
that you mentioned league of legends in

01:25:38,239 --> 01:25:41,760
your talk i didn't think in an open

01:25:39,840 --> 01:25:45,040
source conference we would mention like

01:25:41,760 --> 01:25:46,480
league twice in 30 minutes and when

01:25:45,040 --> 01:25:48,239
you're mentioning like that you were

01:25:46,480 --> 01:25:49,120
gonna say a political statement i was

01:25:48,239 --> 01:25:50,960
just like

01:25:49,120 --> 01:25:53,520
and then you just talked about you know

01:25:50,960 --> 01:25:56,080
your editor

01:25:53,520 --> 01:25:57,120
um so one of the questions we have is

01:25:56,080 --> 01:25:59,120
what causes

01:25:57,120 --> 01:26:00,320
packets to drop over long distances

01:25:59,120 --> 01:26:03,360
that's kind of like a

01:26:00,320 --> 01:26:06,159
interesting origin question do you

01:26:03,360 --> 01:26:07,520
do you know that one yeah i mean i

01:26:06,159 --> 01:26:08,480
imagine there could probably be this

01:26:07,520 --> 01:26:11,520
physics answer

01:26:08,480 --> 01:26:13,600
um where you know over the longer

01:26:11,520 --> 01:26:15,360
something travels over a wire or a fiber

01:26:13,600 --> 01:26:17,199
optic network the more noise

01:26:15,360 --> 01:26:18,560
the more i'm not you know obviously i

01:26:17,199 --> 01:26:20,560
don't i don't know these things

01:26:18,560 --> 01:26:22,080
um yeah the more likely it's going to

01:26:20,560 --> 01:26:23,760
you know drop right

01:26:22,080 --> 01:26:25,199
um so or the more likely there's going

01:26:23,760 --> 01:26:27,600
to be interference i should say

01:26:25,199 --> 01:26:29,280
and um so that's just at the purely like

01:26:27,600 --> 01:26:30,560
at the cable level right and when you

01:26:29,280 --> 01:26:32,560
have cables literally

01:26:30,560 --> 01:26:34,000
strewn across the ocean underneath the

01:26:32,560 --> 01:26:35,040
ocean that's a really amazing youtube

01:26:34,000 --> 01:26:37,440
video yeah

01:26:35,040 --> 01:26:39,199
if one of those fibers get cut like a

01:26:37,440 --> 01:26:41,040
ship comes and like cuts one of those go

01:26:39,199 --> 01:26:42,320
look at a video watching how these ships

01:26:41,040 --> 01:26:44,000
go and repair those cables it's

01:26:42,320 --> 01:26:45,760
fascinating but that was actually one of

01:26:44,000 --> 01:26:46,400
the questions too is like is he gonna

01:26:45,760 --> 01:26:49,120
talk about

01:26:46,400 --> 01:26:51,120
all those wires under the ocean and how

01:26:49,120 --> 01:26:53,280
we actually are connected

01:26:51,120 --> 01:26:54,800
it's it's crazy yeah you have these

01:26:53,280 --> 01:26:56,480
these these cables and they have like

01:26:54,800 --> 01:26:58,800
these repeaters every

01:26:56,480 --> 01:27:00,480
large distance but a lot of them um yeah

01:26:58,800 --> 01:27:02,480
they even make the internet work and

01:27:00,480 --> 01:27:03,840
yeah and ships will drop an anchor cut

01:27:02,480 --> 01:27:05,440
one of those things and it's very

01:27:03,840 --> 01:27:06,400
expensive and it takes weeks to fix some

01:27:05,440 --> 01:27:07,760
of those things but

01:27:06,400 --> 01:27:09,920
it's fascinating and like that's

01:27:07,760 --> 01:27:11,199
literally one of the things that my team

01:27:09,920 --> 01:27:12,960
was building um at

01:27:11,199 --> 01:27:14,400
facebook was to simulate cutting one of

01:27:12,960 --> 01:27:17,199
those cables like removing

01:27:14,400 --> 01:27:18,080
multiple terabits per second of capacity

01:27:17,199 --> 01:27:20,800
over a cable

01:27:18,080 --> 01:27:21,840
um so it's it's just fascinating just to

01:27:20,800 --> 01:27:24,239
do like the stress

01:27:21,840 --> 01:27:25,920
tests and yeah to see what happens make

01:27:24,239 --> 01:27:27,040
sure make sure our networking gear works

01:27:25,920 --> 01:27:29,120
properly but um

01:27:27,040 --> 01:27:30,880
just to add a little bit more to the the

01:27:29,120 --> 01:27:32,159
the question like how things drop is

01:27:30,880 --> 01:27:33,600
not only do you have cables you know

01:27:32,159 --> 01:27:35,120
connecting and you have the physics

01:27:33,600 --> 01:27:37,360
there you also have routers

01:27:35,120 --> 01:27:38,960
um you know you have routing packet

01:27:37,360 --> 01:27:40,480
routing you know between each of these

01:27:38,960 --> 01:27:40,960
different places deciding where it needs

01:27:40,480 --> 01:27:42,960
to go

01:27:40,960 --> 01:27:44,880
you have you have you know does it send

01:27:42,960 --> 01:27:46,400
it out this this cable or this cable you

01:27:44,880 --> 01:27:48,000
know multipathing and

01:27:46,400 --> 01:27:50,080
in any of those cases routers get

01:27:48,000 --> 01:27:51,280
congested um they have to decide which

01:27:50,080 --> 01:27:53,280
packets to drop

01:27:51,280 --> 01:27:55,280
and you know if you're you know it just

01:27:53,280 --> 01:27:56,800
happens and it happens all the time

01:27:55,280 --> 01:27:58,320
um you know it's a regular occurrence

01:27:56,800 --> 01:27:59,120
and that's why we have amazing protocols

01:27:58,320 --> 01:28:01,199
like tcp

01:27:59,120 --> 01:28:02,480
like transmission control protocol like

01:28:01,199 --> 01:28:03,920
its whole job is to

01:28:02,480 --> 01:28:05,440
you know make sure that it's not

01:28:03,920 --> 01:28:06,159
overloading you know the path that it's

01:28:05,440 --> 01:28:08,159
currently on

01:28:06,159 --> 01:28:09,199
to re-transmit packets um that's

01:28:08,159 --> 01:28:10,400
definitely you should go check out the

01:28:09,199 --> 01:28:12,080
last year's talk if

01:28:10,400 --> 01:28:13,679
you're interested in that but um a lot

01:28:12,080 --> 01:28:14,000
of really cool stuff that makes the

01:28:13,679 --> 01:28:16,320
internet

01:28:14,000 --> 01:28:17,280
work it's fascinating that all trickles

01:28:16,320 --> 01:28:19,760
down into

01:28:17,280 --> 01:28:21,440
us seeing that netflix like something

01:28:19,760 --> 01:28:24,159
went wrong

01:28:21,440 --> 01:28:26,400
try again or whatever which doesn't

01:28:24,159 --> 01:28:26,400
happen

01:28:26,480 --> 01:28:30,159
well you're not personally responsible

01:28:28,080 --> 01:28:31,840
don't worry not anymore

01:28:30,159 --> 01:28:34,719
did you have anything advanced i have a

01:28:31,840 --> 01:28:37,040
list so just let me know

01:28:34,719 --> 01:28:37,920
i just wanted to say there was a

01:28:37,040 --> 01:28:41,120
question that came up

01:28:37,920 --> 01:28:43,040
oh yeah uh q a uh someone was asking if

01:28:41,120 --> 01:28:44,159
there are any suggestions on career

01:28:43,040 --> 01:28:46,159
directions for

01:28:44,159 --> 01:28:49,199
for new people that are entering the

01:28:46,159 --> 01:28:49,199
technology field

01:28:49,440 --> 01:28:54,239
and i'll say someone was impressed in

01:28:51,360 --> 01:28:55,600
the in the slack about uh

01:28:54,239 --> 01:28:59,920
you making it through the interview

01:28:55,600 --> 01:28:59,920
process at facebook apparently it's uh

01:29:00,239 --> 01:29:03,679
hey i'll say i i said it and i'll say it

01:29:02,480 --> 01:29:04,639
today i don't know if i'd get through it

01:29:03,679 --> 01:29:06,560
again you know

01:29:04,639 --> 01:29:07,920
like sometimes you do well at interviews

01:29:06,560 --> 01:29:09,840
sometimes you don't and

01:29:07,920 --> 01:29:11,440
um that was a common thing that you know

01:29:09,840 --> 01:29:12,560
like i don't even know i did hundreds of

01:29:11,440 --> 01:29:14,080
interviews there and like i don't know

01:29:12,560 --> 01:29:16,159
if i'd go and be able to pass it this

01:29:14,080 --> 01:29:17,760
time

01:29:16,159 --> 01:29:19,360
and it goes for any company you know and

01:29:17,760 --> 01:29:21,360
depends on interviewers you have

01:29:19,360 --> 01:29:22,960
but hopefully those those processes are

01:29:21,360 --> 01:29:24,320
reasonably calibrated so that

01:29:22,960 --> 01:29:25,840
you know that's why you have five

01:29:24,320 --> 01:29:26,960
interviews it's not to like crush your

01:29:25,840 --> 01:29:29,040
soul

01:29:26,960 --> 01:29:30,719
they get enough signal about your

01:29:29,040 --> 01:29:31,840
abilities you know because some people

01:29:30,719 --> 01:29:33,280
are gonna miss things they're you're

01:29:31,840 --> 01:29:34,800
gonna you might do terrible in the linux

01:29:33,280 --> 01:29:36,719
one but kill the networking

01:29:34,800 --> 01:29:38,080
and like that's why they're they're

01:29:36,719 --> 01:29:40,080
structured the way they are

01:29:38,080 --> 01:29:41,920
um and i again i've done a lot of them

01:29:40,080 --> 01:29:45,199
and i i think it's

01:29:41,920 --> 01:29:46,800
there's uh well anyway it everything

01:29:45,199 --> 01:29:47,920
works reasonably well um as far as

01:29:46,800 --> 01:29:50,080
career path

01:29:47,920 --> 01:29:51,280
it's hard like i can't tell you it's so

01:29:50,080 --> 01:29:53,040
hard for me to say

01:29:51,280 --> 01:29:54,639
just go build things like just go do

01:29:53,040 --> 01:29:57,040
what's interesting to you i went

01:29:54,639 --> 01:29:58,400
i i'm really fortunate like i went and

01:29:57,040 --> 01:30:00,480
like went to linux

01:29:58,400 --> 01:30:02,159
because i was so frustrated not

01:30:00,480 --> 01:30:02,880
frustrated yeah because i was frustrated

01:30:02,159 --> 01:30:05,040
with it like i was

01:30:02,880 --> 01:30:06,239
completely lin and windows at the time

01:30:05,040 --> 01:30:09,280
the terminal was

01:30:06,239 --> 01:30:10,719
so crazy to me and that's why i made

01:30:09,280 --> 01:30:12,000
this crazy decision like i must like

01:30:10,719 --> 01:30:13,760
pain whereas like i'm just gonna wipe

01:30:12,000 --> 01:30:15,760
all my window systems go to linux

01:30:13,760 --> 01:30:17,280
and do it and a year later you know i

01:30:15,760 --> 01:30:19,120
was pretty solid i mean

01:30:17,280 --> 01:30:20,800
again i was much more comfortable in

01:30:19,120 --> 01:30:22,880
linux and this is when linux was a lot

01:30:20,800 --> 01:30:24,639
harder you know back in 2006 as

01:30:22,880 --> 01:30:27,280
it is today but um you know as far as

01:30:24,639 --> 01:30:29,520
networking goes i i dropped out of cs

01:30:27,280 --> 01:30:30,960
7671 or whatever it was at ohio state i

01:30:29,520 --> 01:30:33,120
never even took a networking course

01:30:30,960 --> 01:30:34,320
but i went and you went to join a

01:30:33,120 --> 01:30:35,679
networking team and

01:30:34,320 --> 01:30:37,440
that's what's really cool about like a

01:30:35,679 --> 01:30:38,080
company like facebook is like i was a

01:30:37,440 --> 01:30:40,400
linux

01:30:38,080 --> 01:30:42,239
and software python person going and

01:30:40,400 --> 01:30:44,320
working and going to a networking team

01:30:42,239 --> 01:30:45,760
and like so what was really i was like

01:30:44,320 --> 01:30:47,520
working at this intersection between

01:30:45,760 --> 01:30:48,880
these different kind of disciplines

01:30:47,520 --> 01:30:50,400
um like i don't even know what i'm good

01:30:48,880 --> 01:30:51,679
at anymore like i can talk a little bit

01:30:50,400 --> 01:30:53,280
about networking a little bit about

01:30:51,679 --> 01:30:55,840
linux you know some python

01:30:53,280 --> 01:30:56,320
but um you know so your official title

01:30:55,840 --> 01:30:59,040
is like

01:30:56,320 --> 01:31:00,639
yeah jack of all trades yeah i'm very

01:30:59,040 --> 01:31:02,080
much a generalist and i love it too

01:31:00,639 --> 01:31:05,199
because i can go and

01:31:02,080 --> 01:31:08,880
like i just like learning and

01:31:05,199 --> 01:31:10,320
trying new things um this is a really

01:31:08,880 --> 01:31:12,800
interesting question

01:31:10,320 --> 01:31:14,960
how would netflix survive without

01:31:12,800 --> 01:31:16,960
distributed networks

01:31:14,960 --> 01:31:18,560
like i i was trying to think about that

01:31:16,960 --> 01:31:19,040
myself because it's just like i feel

01:31:18,560 --> 01:31:21,040
like

01:31:19,040 --> 01:31:23,440
a lot of these services came about

01:31:21,040 --> 01:31:25,760
because of the distributed nature of it

01:31:23,440 --> 01:31:25,760
you know

01:31:26,000 --> 01:31:29,360
it couldn't and the thing about these

01:31:28,000 --> 01:31:31,679
companies is

01:31:29,360 --> 01:31:33,600
they there's no like you know when you

01:31:31,679 --> 01:31:35,040
talk about cdn providers like akamai and

01:31:33,600 --> 01:31:37,120
fastly and cloudfront

01:31:35,040 --> 01:31:38,320
there's no cdn provider that can handle

01:31:37,120 --> 01:31:40,320
any of these companies like

01:31:38,320 --> 01:31:42,480
they're literally like building the

01:31:40,320 --> 01:31:44,400
internet and building internet capacity

01:31:42,480 --> 01:31:46,639
um the amount of traffic that's going

01:31:44,400 --> 01:31:48,000
you know betw between these really local

01:31:46,639 --> 01:31:49,600
regional networks

01:31:48,000 --> 01:31:51,360
you know a crayon um in the in the

01:31:49,600 --> 01:31:53,600
networking space like isp space

01:31:51,360 --> 01:31:54,960
is just phenomenal and like it just

01:31:53,600 --> 01:31:56,159
couldn't exist

01:31:54,960 --> 01:31:58,639
but that's what's amazing about you know

01:31:56,159 --> 01:32:01,760
their pivot from you know the dvd

01:31:58,639 --> 01:32:03,040
delivery to this oh yeah it's kind of

01:32:01,760 --> 01:32:04,719
amazing it's like the internet

01:32:03,040 --> 01:32:07,040
literally made this happen and then now

01:32:04,719 --> 01:32:09,840
they're pushing the boundaries up there

01:32:07,040 --> 01:32:11,520
yeah well you are definitely pushing the

01:32:09,840 --> 01:32:13,360
boundaries of everything my goodness

01:32:11,520 --> 01:32:16,080
like the scale of that was amazing

01:32:13,360 --> 01:32:16,400
thank you so much for your time i think

01:32:16,080 --> 01:32:18,960
it's

01:32:16,400 --> 01:32:20,560
we're moving right along here we don't

01:32:18,960 --> 01:32:21,199
even have time to show another linux

01:32:20,560 --> 01:32:25,679
book

01:32:21,199 --> 01:32:27,760
i was going to grab some yeah i want to

01:32:25,679 --> 01:32:29,920
throw things over to uh warner he's

01:32:27,760 --> 01:32:31,280
gonna be introducing our nick speaker so

01:32:29,920 --> 01:32:35,120
warner if you can

01:32:31,280 --> 01:32:35,120
if you can come on the uh session here

01:32:35,199 --> 01:32:39,440
we're doing the thing uh and thank you

01:32:38,320 --> 01:32:41,520
again patrick i

01:32:39,440 --> 01:32:44,000
i always enjoy your insights on

01:32:41,520 --> 01:32:47,040
large-scale distributed computing

01:32:44,000 --> 01:32:47,520
there's yeah unbelievable not much else

01:32:47,040 --> 01:32:49,920
like

01:32:47,520 --> 01:32:51,199
netflix and facebook skill that's for

01:32:49,920 --> 01:32:52,800
sure and

01:32:51,199 --> 01:32:54,320
glad to be hanging out with you again

01:32:52,800 --> 01:32:56,480
nixie yeah you too

01:32:54,320 --> 01:32:58,080
my goodness like i'm kind of jealous now

01:32:56,480 --> 01:33:02,239
but these are really cool too

01:32:58,080 --> 01:33:03,679
especially for the season yeah

01:33:02,239 --> 01:33:06,000
i didn't even have time to put it on yet

01:33:03,679 --> 01:33:06,840
that'll be next this will be a limited

01:33:06,000 --> 01:33:10,159
edition

01:33:06,840 --> 01:33:12,719
too so only for the supporters and

01:33:10,159 --> 01:33:14,400
speakers and people who participated in

01:33:12,719 --> 01:33:18,239
our program this year

01:33:14,400 --> 01:33:21,360
and snorlaxes all right

01:33:18,239 --> 01:33:23,760
very cool thank you heads up for

01:33:21,360 --> 01:33:26,800
everyone we're going to be moving the

01:33:23,760 --> 01:33:26,800

YouTube URL: https://www.youtube.com/watch?v=UzULMrzHGYI


