Title: [OLF 2020] Solving Organizational MFA Challenges
Publication date: 2020-12-19
Playlist: 2020 Videos
Description: 
	Speaker: Cornelius KÃ¶lbel
Multi-Factor-Authentication is nowadays known to a lot of people and used at many different places. MFA is meant to secure the users logins.

But if you do not only want to use MFA but if you are to provide 2nd factors to the employees in your organization, to your customer or to any user group, then you are faced with a lot of organizational challenges.

How can you ship hardware tokens to the users? How can users enroll their smartphone, without any secrets being compromised? Is it possible to use modern technologies like FIDO2 in your situation at all? How can you handle lost 2nd factors with the least effort for the users?

In the first part of this talk we will discuss several of those challenges that an organization is facing, where these problems originate and how those challenges can be handled in general.
In the second part we will take a look at the Open Source solution privacyIDEA, which is an enterprise ready MFA management system. We will see how those challenges can be coped with in a very flexible way using a unique event handler framework that allows to automate arbitrary processes.
Captions: 
	00:00:03,760 --> 00:00:07,759
thank you

00:00:04,319 --> 00:00:10,480
and uh thank you for have having me here

00:00:07,759 --> 00:00:11,360
yeah my name is cornelius and i'm from

00:00:10,480 --> 00:00:15,360
germany

00:00:11,360 --> 00:00:20,560
and uh so it's 6 p.m over here

00:00:15,360 --> 00:00:23,680
i'm starting to get a bit tired

00:00:20,560 --> 00:00:28,560
i'm a father of three kids and

00:00:23,680 --> 00:00:30,960
so actually i'm not used to talk

00:00:28,560 --> 00:00:32,399
without being interrupted so this will

00:00:30,960 --> 00:00:36,000
also be quite

00:00:32,399 --> 00:00:36,880
interesting but enough about my

00:00:36,000 --> 00:00:41,440
challenges

00:00:36,880 --> 00:00:46,079
um as i said i would like to

00:00:41,440 --> 00:00:48,960
talk to you about uh organizational

00:00:46,079 --> 00:00:50,399
challenges of multi-factor

00:00:48,960 --> 00:00:53,920
authentication

00:00:50,399 --> 00:00:56,840
and how to solve these

00:00:53,920 --> 00:00:59,120
so um i'd like to for do the following

00:00:56,840 --> 00:01:01,440
agenda

00:00:59,120 --> 00:01:02,559
first i will tell you something about me

00:01:01,440 --> 00:01:04,400
i will

00:01:02,559 --> 00:01:05,760
only shortly talk about two-factor

00:01:04,400 --> 00:01:08,880
authentication

00:01:05,760 --> 00:01:09,680
because i assume you roughly all know

00:01:08,880 --> 00:01:13,600
what this is

00:01:09,680 --> 00:01:16,479
and disclaimer i also talked about it

00:01:13,600 --> 00:01:17,200
last year at the ohio linux fest and

00:01:16,479 --> 00:01:20,640
then i

00:01:17,200 --> 00:01:22,000
want to quickly dive into organizational

00:01:20,640 --> 00:01:25,200
challenges with

00:01:22,000 --> 00:01:27,040
two-factor authentication it's

00:01:25,200 --> 00:01:29,600
soft or human challenges during

00:01:27,040 --> 00:01:32,799
enrollment and with the infrastructure

00:01:29,600 --> 00:01:36,240
and unfortunately i did not

00:01:32,799 --> 00:01:39,280
update the slides and i will try to

00:01:36,240 --> 00:01:42,960
then give you unspeakable

00:01:39,280 --> 00:01:46,560
solutions um for this

00:01:42,960 --> 00:01:47,119
okay some words about me um i started

00:01:46,560 --> 00:01:50,159
with

00:01:47,119 --> 00:01:54,799
linux in 94 and

00:01:50,159 --> 00:01:56,240
in 2005 i

00:01:54,799 --> 00:01:58,399
started to work professionally in

00:01:56,240 --> 00:02:00,560
two-factor authentication

00:01:58,399 --> 00:02:03,040
i worked with reseller we did smart

00:02:00,560 --> 00:02:06,159
cards public key infrastructures

00:02:03,040 --> 00:02:08,399
and in 2006

00:02:06,159 --> 00:02:09,679
i was already involved in the first

00:02:08,399 --> 00:02:12,160
linux-based

00:02:09,679 --> 00:02:13,440
one-time password solution which was

00:02:12,160 --> 00:02:15,680
actually simply a

00:02:13,440 --> 00:02:16,560
plug-in for the free radius server but

00:02:15,680 --> 00:02:18,400
it added

00:02:16,560 --> 00:02:19,840
two-factor authentication to the free

00:02:18,400 --> 00:02:23,040
radio server

00:02:19,840 --> 00:02:24,879
and in 2014 i started the privacy idea

00:02:23,040 --> 00:02:30,239
project

00:02:24,879 --> 00:02:33,680
and i also started company to

00:02:30,239 --> 00:02:36,879
help with a privacy idea project and now

00:02:33,680 --> 00:02:40,480
i want to share my

00:02:36,879 --> 00:02:43,680
experiences and impressions

00:02:40,480 --> 00:02:48,720
from this work and i think

00:02:43,680 --> 00:02:51,840
since because then since 2017

00:02:48,720 --> 00:02:54,480
i realized that yeah you can

00:02:51,840 --> 00:02:56,160
talk a lot about what actually is good

00:02:54,480 --> 00:02:59,599
to factor authentication and

00:02:56,160 --> 00:03:01,840
what is not and so on but i think um

00:02:59,599 --> 00:03:02,720
successful two-factor authentication

00:03:01,840 --> 00:03:05,680
actually

00:03:02,720 --> 00:03:06,159
is a matter of smooth workflows so

00:03:05,680 --> 00:03:09,840
there's

00:03:06,159 --> 00:03:12,000
much more to it so some short words

00:03:09,840 --> 00:03:15,120
about two-factor authentication

00:03:12,000 --> 00:03:16,239
um you might realize there's two-factor

00:03:15,120 --> 00:03:19,519
authentication

00:03:16,239 --> 00:03:21,200
and there's two-way authentication and i

00:03:19,519 --> 00:03:23,760
think

00:03:21,200 --> 00:03:24,319
google roughly brought up the term

00:03:23,760 --> 00:03:27,599
two-way

00:03:24,319 --> 00:03:28,400
authentication and the important part i

00:03:27,599 --> 00:03:31,599
think here to

00:03:28,400 --> 00:03:34,640
to differentiate is that

00:03:31,599 --> 00:03:37,840
ways actually mean that you get usually

00:03:34,640 --> 00:03:40,560
get a password like uh via an sms or an

00:03:37,840 --> 00:03:42,000
email on a second way so first way

00:03:40,560 --> 00:03:44,879
you're sitting in front of

00:03:42,000 --> 00:03:46,879
for example web browser and then get a

00:03:44,879 --> 00:03:49,040
second component

00:03:46,879 --> 00:03:50,000
while two-factor authentication as we

00:03:49,040 --> 00:03:53,280
all know is

00:03:50,000 --> 00:03:54,000
something that combines from something

00:03:53,280 --> 00:03:55,760
you know

00:03:54,000 --> 00:03:57,040
something you have and actually

00:03:55,760 --> 00:04:01,439
something you

00:03:57,040 --> 00:04:05,840
are so some biometrical aspects

00:04:01,439 --> 00:04:09,760
and let's take some look into

00:04:05,840 --> 00:04:12,879
the possession so what do you have

00:04:09,760 --> 00:04:15,680
the important part for a second

00:04:12,879 --> 00:04:16,560
factor and post possession of course is

00:04:15,680 --> 00:04:20,079
that

00:04:16,560 --> 00:04:23,520
it cannot be copied or it cannot

00:04:20,079 --> 00:04:26,800
be stolen or at least if it is stolen

00:04:23,520 --> 00:04:29,520
you realize that it is stolen and

00:04:26,800 --> 00:04:31,360
if you get it back you know that there

00:04:29,520 --> 00:04:33,919
wasn't a copy made

00:04:31,360 --> 00:04:34,639
and it shouldn't be possible to brute

00:04:33,919 --> 00:04:38,000
force

00:04:34,639 --> 00:04:42,320
and usually it is somehow protected or

00:04:38,000 --> 00:04:46,240
it is somehow a means of cryptography so

00:04:42,320 --> 00:04:50,639
and then you might end up again with

00:04:46,240 --> 00:04:54,080
a bunch of hardware there

00:04:50,639 --> 00:04:56,320
so as promised let's directly dive into

00:04:54,080 --> 00:04:59,440
organizational challenges

00:04:56,320 --> 00:05:03,440
first i would like to take some look at

00:04:59,440 --> 00:05:03,440
soft problems so

00:05:04,080 --> 00:05:10,960
the question actually is where am i

00:05:06,400 --> 00:05:13,280
doing multi-factor authentication

00:05:10,960 --> 00:05:14,800
should i do it on each and every

00:05:13,280 --> 00:05:17,360
application

00:05:14,800 --> 00:05:18,400
there are actually applications around

00:05:17,360 --> 00:05:21,919
that

00:05:18,400 --> 00:05:24,000
already ship multi-factor authentication

00:05:21,919 --> 00:05:25,680
if you're running a wordpress site you

00:05:24,000 --> 00:05:28,240
probably will realize that

00:05:25,680 --> 00:05:29,600
there are millions of plugins for

00:05:28,240 --> 00:05:31,520
wordpress that

00:05:29,600 --> 00:05:32,880
uh provide multi-factor authentication

00:05:31,520 --> 00:05:36,639
there are

00:05:32,880 --> 00:05:37,360
other products like open source cloud

00:05:36,639 --> 00:05:40,720
solutions

00:05:37,360 --> 00:05:44,080
that provide a wide variety of

00:05:40,720 --> 00:05:47,280
two-factor authentications and

00:05:44,080 --> 00:05:47,759
you have identity provider softwares you

00:05:47,280 --> 00:05:51,440
have

00:05:47,759 --> 00:05:53,600
free ipa or key cloak which provide

00:05:51,440 --> 00:05:55,680
multi-factor authentication but the

00:05:53,600 --> 00:05:58,880
question is

00:05:55,680 --> 00:06:03,039
do i want to add this multi-factor

00:05:58,880 --> 00:06:03,039
authentication to this application

00:06:04,000 --> 00:06:09,199
should i host it in the cloud or

00:06:07,199 --> 00:06:10,639
should i deal the same way as i deal

00:06:09,199 --> 00:06:13,680
with identities

00:06:10,639 --> 00:06:17,919
where i have a central identity store

00:06:13,680 --> 00:06:18,720
and i wouldn't get the idea actually to

00:06:17,919 --> 00:06:21,520
manage

00:06:18,720 --> 00:06:24,400
the identities of the users on each and

00:06:21,520 --> 00:06:24,400
every application

00:06:24,800 --> 00:06:28,800
then actually it's important not to over

00:06:27,759 --> 00:06:31,199
complicate

00:06:28,800 --> 00:06:31,199
things

00:06:32,960 --> 00:06:38,800
we have a customer a university with not

00:06:36,080 --> 00:06:40,960
that a big installation actually but

00:06:38,800 --> 00:06:42,880
they probably have

00:06:40,960 --> 00:06:45,600
configured everything that's

00:06:42,880 --> 00:06:48,319
configurable

00:06:45,600 --> 00:06:50,080
but at the end you should think about

00:06:48,319 --> 00:06:53,919
what you actually want to achieve

00:06:50,080 --> 00:06:55,759
and what you can manage so

00:06:53,919 --> 00:06:57,680
you need to understand your system you

00:06:55,759 --> 00:06:59,039
need to understand your processes what

00:06:57,680 --> 00:07:02,080
is going on

00:06:59,039 --> 00:07:05,199
and so it is important

00:07:02,080 --> 00:07:05,840
at the beginning to sit back and think

00:07:05,199 --> 00:07:08,720
about

00:07:05,840 --> 00:07:10,560
what you actually want to do and what

00:07:08,720 --> 00:07:13,440
you

00:07:10,560 --> 00:07:14,560
don't want to do if you have for example

00:07:13,440 --> 00:07:16,800
think about oh

00:07:14,560 --> 00:07:18,000
people could lose their second factors

00:07:16,800 --> 00:07:22,319
so

00:07:18,000 --> 00:07:25,360
i need some kind of process to

00:07:22,319 --> 00:07:27,039
to deal with lost tokens we'll come to

00:07:25,360 --> 00:07:29,520
this later

00:07:27,039 --> 00:07:31,759
well do i need a process for this or can

00:07:29,520 --> 00:07:32,479
i simply use the same process i already

00:07:31,759 --> 00:07:35,919
used

00:07:32,479 --> 00:07:38,080
for enrolling tokens when you have

00:07:35,919 --> 00:07:39,360
security and usability and we all know

00:07:38,080 --> 00:07:42,319
that

00:07:39,360 --> 00:07:42,720
usually our expectation is that security

00:07:42,319 --> 00:07:46,160
and

00:07:42,720 --> 00:07:48,960
usability don't work well together

00:07:46,160 --> 00:07:50,560
google invented the no they did not

00:07:48,960 --> 00:07:51,680
invent the qr code but they started

00:07:50,560 --> 00:07:55,280
using the qr code

00:07:51,680 --> 00:07:59,280
for enrolling their smartphone app

00:07:55,280 --> 00:08:02,000
but the qr code is prone

00:07:59,280 --> 00:08:03,840
to being copied so everyone who's

00:08:02,000 --> 00:08:08,560
getting the qr code can

00:08:03,840 --> 00:08:08,560
can scan it and will get the same

00:08:08,680 --> 00:08:15,759
non-encrypted secret key

00:08:12,000 --> 00:08:17,759
you can use text messages to send

00:08:15,759 --> 00:08:20,080
one-time passwords to phones that's

00:08:17,759 --> 00:08:23,599
totally easy perfect usability

00:08:20,080 --> 00:08:26,319
but it's not quite nice you can use a

00:08:23,599 --> 00:08:28,479
very sophisticated push applications to

00:08:26,319 --> 00:08:31,360
send push notifications

00:08:28,479 --> 00:08:33,279
that works totally easy but it can be a

00:08:31,360 --> 00:08:36,399
nightmare for the administrator because

00:08:33,279 --> 00:08:39,519
it has a very complex infrastructure

00:08:36,399 --> 00:08:42,800
you can use the ui key i personally

00:08:39,519 --> 00:08:44,560
love it because i can plug it in but if

00:08:42,800 --> 00:08:46,880
you're a smartphone user

00:08:44,560 --> 00:08:50,000
you might have problems using the ubc on

00:08:46,880 --> 00:08:53,200
your smartphone or your tablet

00:08:50,000 --> 00:08:54,000
well after all you have to think about

00:08:53,200 --> 00:08:58,000
your use

00:08:54,000 --> 00:09:00,720
cases and of course keeping things

00:08:58,000 --> 00:09:02,640
simple will greatly incu increase

00:09:00,720 --> 00:09:06,399
security because it

00:09:02,640 --> 00:09:06,399
avoids mistakes

00:09:07,360 --> 00:09:11,440
and so it's also important to think

00:09:09,600 --> 00:09:14,640
about your users

00:09:11,440 --> 00:09:16,000
what they are willing to do you

00:09:14,640 --> 00:09:18,560
shouldn't change too much

00:09:16,000 --> 00:09:20,880
you should make it easy for the users

00:09:18,560 --> 00:09:24,240
and you should provide fallbacks

00:09:20,880 --> 00:09:27,279
um yeah and

00:09:24,240 --> 00:09:30,640
then the question is what are users

00:09:27,279 --> 00:09:30,640
actually willing to do

00:09:31,600 --> 00:09:37,440
we have projects with um

00:09:34,800 --> 00:09:39,279
with the teachers in a federal state

00:09:37,440 --> 00:09:41,839
here in in germany so

00:09:39,279 --> 00:09:42,640
and uh teachers is a are very special

00:09:41,839 --> 00:09:45,360
people

00:09:42,640 --> 00:09:46,240
um you know this is my private phone

00:09:45,360 --> 00:09:48,000
number

00:09:46,240 --> 00:09:49,680
i don't want to give you my private

00:09:48,000 --> 00:09:52,800
phone number because

00:09:49,680 --> 00:09:54,080
who knows all the students will call me

00:09:52,800 --> 00:09:56,560
or

00:09:54,080 --> 00:09:58,160
it might get leaked this is my private

00:09:56,560 --> 00:09:59,680
smartphone

00:09:58,160 --> 00:10:01,519
if you want to enroll to facto

00:09:59,680 --> 00:10:05,040
authentication and

00:10:01,519 --> 00:10:07,040
plan to yeah that's easy we can use a

00:10:05,040 --> 00:10:07,680
google authenticator or whatever app we

00:10:07,040 --> 00:10:10,000
like

00:10:07,680 --> 00:10:11,040
no you cannot because users will not

00:10:10,000 --> 00:10:14,959
accept

00:10:11,040 --> 00:10:18,320
enrolling the their employers

00:10:14,959 --> 00:10:21,839
app on their smartphone so this

00:10:18,320 --> 00:10:24,399
in fact if you have a large user base

00:10:21,839 --> 00:10:24,880
you will run into this problem with i

00:10:24,399 --> 00:10:28,160
don't know

00:10:24,880 --> 00:10:30,079
five ten fifteen percent of the users

00:10:28,160 --> 00:10:33,279
and you have to think about uh

00:10:30,079 --> 00:10:37,040
alternatives for those

00:10:33,279 --> 00:10:39,440
then when we stop looking at the users

00:10:37,040 --> 00:10:42,560
and look at the administrators or

00:10:39,440 --> 00:10:42,560
service desk users

00:10:43,040 --> 00:10:49,279
to factor authentication something

00:10:46,560 --> 00:10:50,079
in addition we need to manage now this

00:10:49,279 --> 00:10:53,440
is

00:10:50,079 --> 00:10:54,560
um this is not nice so the the service

00:10:53,440 --> 00:10:57,839
desk has to deal with

00:10:54,560 --> 00:11:00,880
new administer web uis with new

00:10:57,839 --> 00:11:04,000
admin interfaces

00:11:00,880 --> 00:11:08,480
new processes have to be integrated into

00:11:04,000 --> 00:11:08,480
their daily work and

00:11:08,720 --> 00:11:14,800
yeah so and then the question is

00:11:12,399 --> 00:11:18,000
how do you add these processes are these

00:11:14,800 --> 00:11:19,680
manual tasks or can you automate things

00:11:18,000 --> 00:11:22,560
for example take onboarding and

00:11:19,680 --> 00:11:25,760
off-boarding of a user

00:11:22,560 --> 00:11:27,519
you could have a manual checklist and

00:11:25,760 --> 00:11:29,120
one point on this manual checklist would

00:11:27,519 --> 00:11:31,519
be

00:11:29,120 --> 00:11:33,040
well in this additional system there

00:11:31,519 --> 00:11:36,320
please

00:11:33,040 --> 00:11:40,160
enroll a second factor for the user

00:11:36,320 --> 00:11:43,279
or you could just do it automate it

00:11:40,160 --> 00:11:45,200
if um as

00:11:43,279 --> 00:11:47,120
in one scenario we did in one scenario

00:11:45,200 --> 00:11:50,639
where a university

00:11:47,120 --> 00:11:53,519
um ships a second factor to every

00:11:50,639 --> 00:11:54,079
student who's starting at the university

00:11:53,519 --> 00:11:59,040
um

00:11:54,079 --> 00:12:02,320
which is triggered from hey the student

00:11:59,040 --> 00:12:04,880
enters the system of the university and

00:12:02,320 --> 00:12:07,120
automatically a welcome letter with a

00:12:04,880 --> 00:12:09,360
registration code to be able to enroll

00:12:07,120 --> 00:12:12,480
the second factors

00:12:09,360 --> 00:12:16,079
added to the postal

00:12:12,480 --> 00:12:16,079
welcome package for the student

00:12:19,120 --> 00:12:25,360
then the question is

00:12:23,040 --> 00:12:26,399
what are administrators allowed to do or

00:12:25,360 --> 00:12:29,519
what

00:12:26,399 --> 00:12:30,800
should service users be allowed to do so

00:12:29,519 --> 00:12:34,560
if you

00:12:30,800 --> 00:12:38,160
restrict the um

00:12:34,560 --> 00:12:42,079
the tasks or the the rights

00:12:38,160 --> 00:12:44,880
an administrator has um

00:12:42,079 --> 00:12:46,079
you will probably have an easier life

00:12:44,880 --> 00:12:48,959
because

00:12:46,079 --> 00:12:50,880
there's no chance that the the

00:12:48,959 --> 00:12:52,560
self-destruct the services user can

00:12:50,880 --> 00:12:55,279
break anything

00:12:52,560 --> 00:12:55,279
accidentally

00:12:56,720 --> 00:13:03,200
then the big question is

00:13:00,320 --> 00:13:04,000
what should i do on which tech which

00:13:03,200 --> 00:13:07,040
technology

00:13:04,000 --> 00:13:10,720
should i choose should i still use

00:13:07,040 --> 00:13:15,279
smartphone apps should i use ui keys

00:13:10,720 --> 00:13:17,920
hey you here in germany we had a big

00:13:15,279 --> 00:13:19,120
yeah marketing campaign last year about

00:13:17,920 --> 00:13:21,760
00:13:19,120 --> 00:13:23,120
it was all over the media all over the

00:13:21,760 --> 00:13:25,839
technical media

00:13:23,120 --> 00:13:27,040
it is totally hot everybody wants to do

00:13:25,839 --> 00:13:30,800
it

00:13:27,040 --> 00:13:34,560
but will it be still hot in five years

00:13:30,800 --> 00:13:38,240
or will it work at all in your scenario

00:13:34,560 --> 00:13:41,519
and so you should think about

00:13:38,240 --> 00:13:45,519
to avoid concentrating on one technology

00:13:41,519 --> 00:13:46,800
and on one vendor so um it's a good idea

00:13:45,519 --> 00:13:50,639
to stay

00:13:46,800 --> 00:13:51,600
independent and be aware that

00:13:50,639 --> 00:13:55,120
technologies

00:13:51,600 --> 00:13:59,440
can change and you will might have to

00:13:55,120 --> 00:14:03,839
migrate away in a couple of years

00:13:59,440 --> 00:14:03,839
oh migration yeah and

00:14:04,240 --> 00:14:12,720
you could already have a two-factor

00:14:08,399 --> 00:14:15,360
solution so you might need to migrate

00:14:12,720 --> 00:14:16,639
from this solution to a new solution or

00:14:15,360 --> 00:14:19,120
if you

00:14:16,639 --> 00:14:20,240
choose to do two-factor authentication

00:14:19,120 --> 00:14:24,079
how

00:14:20,240 --> 00:14:27,519
good can you access and control your

00:14:24,079 --> 00:14:30,639
installation and your data

00:14:27,519 --> 00:14:34,160
lately i was told for example that

00:14:30,639 --> 00:14:38,160
azure mfa i probably

00:14:34,160 --> 00:14:41,199
increased their prices dramatically

00:14:38,160 --> 00:14:42,720
i'm not sure if i can get a data and

00:14:41,199 --> 00:14:46,000
configuration dump from

00:14:42,720 --> 00:14:47,920
azure mfa to import it to another

00:14:46,000 --> 00:14:50,480
solution if i don't like the business

00:14:47,920 --> 00:14:54,720
model of azure mfa anymore

00:14:50,480 --> 00:14:57,279
so if you have this problem you will

00:14:54,720 --> 00:14:59,680
you will have the challenge of

00:14:57,279 --> 00:15:01,680
re-enrolling all your tokens imagine you

00:14:59,680 --> 00:15:03,600
you started using multi-factor

00:15:01,680 --> 00:15:06,639
authentication in the cloud

00:15:03,600 --> 00:15:08,320
with a proprietary commercial vendor

00:15:06,639 --> 00:15:09,839
and you don't like the business model

00:15:08,320 --> 00:15:13,839
anymore

00:15:09,839 --> 00:15:13,839
you will not be able to

00:15:14,240 --> 00:15:18,240
to take the already enrolled tokens with

00:15:17,680 --> 00:15:21,519
you which

00:15:18,240 --> 00:15:22,399
means the real pain here is that you

00:15:21,519 --> 00:15:25,519
will have to

00:15:22,399 --> 00:15:28,959
contact your thousands of users

00:15:25,519 --> 00:15:33,600
and give them a new second factor

00:15:28,959 --> 00:15:36,800
so looking into open standards

00:15:33,600 --> 00:15:40,240
like hotp makes sense

00:15:36,800 --> 00:15:41,600
fido 2 is an open standard but a very

00:15:40,240 --> 00:15:45,680
complex one so it

00:15:41,600 --> 00:15:49,440
could do everything um of course

00:15:45,680 --> 00:15:49,440
it's not necessary to say that

00:15:49,920 --> 00:15:55,519
closed solutions have their own

00:15:52,839 --> 00:15:58,720
challenge

00:15:55,519 --> 00:16:01,920
yeah so let's take i

00:15:58,720 --> 00:16:06,839
made some notes here so let's take

00:16:01,920 --> 00:16:09,839
a look at enrollment and shipping

00:16:06,839 --> 00:16:09,839
um

00:16:10,959 --> 00:16:14,480
two-factor authentication actually is

00:16:12,800 --> 00:16:17,680
old it started with

00:16:14,480 --> 00:16:23,199
with hardware and rsa secure id or rsa

00:16:17,680 --> 00:16:26,320
started doing this in 1980

00:16:23,199 --> 00:16:29,360
so yeah it's old

00:16:26,320 --> 00:16:32,240
and you still have

00:16:29,360 --> 00:16:34,399
hardware tokens which come preceded

00:16:32,240 --> 00:16:38,480
which means a symmetric

00:16:34,399 --> 00:16:41,199
cryptographic key is implanted on this

00:16:38,480 --> 00:16:42,560
hardware device on this key fob and you

00:16:41,199 --> 00:16:45,759
get a

00:16:42,560 --> 00:16:50,079
seed file and this is good

00:16:45,759 --> 00:16:53,120
um this is the the challenge here is

00:16:50,079 --> 00:16:56,720
what is actually the shipping route

00:16:53,120 --> 00:16:59,360
the um of this seed file

00:16:56,720 --> 00:17:00,560
who's the reseller who's giving me the

00:16:59,360 --> 00:17:06,079
seed file

00:17:00,560 --> 00:17:10,319
so it might also be interesting to um

00:17:06,079 --> 00:17:14,079
to take a look at hardware that

00:17:10,319 --> 00:17:16,319
is not preceded actually there

00:17:14,079 --> 00:17:17,839
is hardware that can be seeded which

00:17:16,319 --> 00:17:20,799
means you can

00:17:17,839 --> 00:17:21,679
implant your own symmetric your own

00:17:20,799 --> 00:17:24,799
cryptographic

00:17:21,679 --> 00:17:27,839
key on the hardware even the

00:17:24,799 --> 00:17:32,080
at least here most popular feigen

00:17:27,839 --> 00:17:35,440
c200 token which is a very

00:17:32,080 --> 00:17:35,760
common time-based otp token actually can

00:17:35,440 --> 00:17:38,640
be

00:17:35,760 --> 00:17:39,039
seated with a programming device a ub

00:17:38,640 --> 00:17:42,799
key

00:17:39,039 --> 00:17:46,160
can be seated at your usb port

00:17:42,799 --> 00:17:49,520
and if you cannot do

00:17:46,160 --> 00:17:53,760
this and you assume

00:17:49,520 --> 00:17:57,200
that this initial seed file was lost

00:17:53,760 --> 00:18:00,320
maybe you remember um

00:17:57,200 --> 00:18:03,280
several years ago rsa had an uh

00:18:00,320 --> 00:18:04,160
breach in on their server side and

00:18:03,280 --> 00:18:07,280
actually they

00:18:04,160 --> 00:18:08,240
re-enrolled a lot of a lot of hardware

00:18:07,280 --> 00:18:11,679
tokens

00:18:08,240 --> 00:18:15,760
to their customers maybe

00:18:11,679 --> 00:18:18,000
seats haven't been lost but

00:18:15,760 --> 00:18:20,400
you will have to regain or as a vendor

00:18:18,000 --> 00:18:23,600
you will have to regain

00:18:20,400 --> 00:18:26,799
the trust of the user so the question is

00:18:23,600 --> 00:18:32,160
who do you trust or who

00:18:26,799 --> 00:18:32,160
can you afford to trust

00:18:33,039 --> 00:18:40,080
yeah and so if you for

00:18:37,039 --> 00:18:41,280
any reason decided to use hardware

00:18:40,080 --> 00:18:44,480
second factors

00:18:41,280 --> 00:18:47,840
you will have to ship

00:18:44,480 --> 00:18:49,919
the hardware to the users okay there is

00:18:47,840 --> 00:18:56,240
this classical scenario where

00:18:49,919 --> 00:18:59,520
a hospital has a

00:18:56,240 --> 00:18:59,520
netscaler or whatever

00:19:00,320 --> 00:19:07,120
vpn solution and for

00:19:03,440 --> 00:19:10,559
for the doctors to log in remotely

00:19:07,120 --> 00:19:13,600
from home and then of course

00:19:10,559 --> 00:19:14,080
what i experienced the it department

00:19:13,600 --> 00:19:16,880
takes

00:19:14,080 --> 00:19:18,000
pleasure in enrolling hardware tokens to

00:19:16,880 --> 00:19:21,280
the doctors

00:19:18,000 --> 00:19:24,240
by asking the doctor to stop by

00:19:21,280 --> 00:19:26,640
at the it office so this is a totally

00:19:24,240 --> 00:19:27,520
legitimate way to enroll hardware tokens

00:19:26,640 --> 00:19:30,799
because you can

00:19:27,520 --> 00:19:34,559
look the user in the eye and say this is

00:19:30,799 --> 00:19:38,160
your new hardware token take care of it

00:19:34,559 --> 00:19:41,919
this works with 100 doctors but this

00:19:38,160 --> 00:19:45,360
does not work with 10 000 teachers

00:19:41,919 --> 00:19:48,480
so you have to think about okay

00:19:45,360 --> 00:19:52,799
you you put the hardware token into the

00:19:48,480 --> 00:19:56,480
into a letter into the post and

00:19:52,799 --> 00:19:58,559
then it is in a state that you cannot

00:19:56,480 --> 00:20:01,919
control it is somewhere

00:19:58,559 --> 00:20:05,039
maybe you have to deactivate it and um

00:20:01,919 --> 00:20:08,159
someday it will um

00:20:05,039 --> 00:20:10,240
arrive at the user and then

00:20:08,159 --> 00:20:12,400
the user can start using it and in the

00:20:10,240 --> 00:20:16,559
meantime

00:20:12,400 --> 00:20:22,640
you want to avoid an attacker that maybe

00:20:16,559 --> 00:20:22,640
grabbed the letter to misuse this token

00:20:22,720 --> 00:20:26,159
okay you see hardware tokens are really

00:20:25,200 --> 00:20:27,840
difficult

00:20:26,159 --> 00:20:29,919
okay you don't want to use hardware

00:20:27,840 --> 00:20:31,039
tokens fine use software tokens on your

00:20:29,919 --> 00:20:34,320
smartphone

00:20:31,039 --> 00:20:36,559
maybe you also saw this qr code here um

00:20:34,320 --> 00:20:38,320
not this very same qr code but something

00:20:36,559 --> 00:20:42,080
like this the problem is

00:20:38,320 --> 00:20:44,880
this qr code is meant for a

00:20:42,080 --> 00:20:47,039
totp token a time based token and this

00:20:44,880 --> 00:20:50,080
qr code basically

00:20:47,039 --> 00:20:52,400
contains the symmetric key

00:20:50,080 --> 00:20:53,520
and everyone who's getting this qr code

00:20:52,400 --> 00:20:56,720
now

00:20:53,520 --> 00:20:58,240
will get the very same copy of the

00:20:56,720 --> 00:21:00,480
second factor

00:20:58,240 --> 00:21:02,559
so this is a challenge to think about

00:21:00,480 --> 00:21:05,679
okay if i really want to use

00:21:02,559 --> 00:21:06,720
software tokens on smartphones how can i

00:21:05,679 --> 00:21:11,679
avoid

00:21:06,720 --> 00:21:14,880
that either attackers or lazy users

00:21:11,679 --> 00:21:17,760
copy the token or share the tokens with

00:21:14,880 --> 00:21:22,799
their co-workers

00:21:17,760 --> 00:21:25,280
so fido 2 seems a great solution to

00:21:22,799 --> 00:21:26,159
cope with all this because 502 allows

00:21:25,280 --> 00:21:28,799
you to

00:21:26,159 --> 00:21:30,000
use usb hardware devices as second

00:21:28,799 --> 00:21:33,120
factor it allows you

00:21:30,000 --> 00:21:35,360
to use your tpm ship on your

00:21:33,120 --> 00:21:37,120
chip on your laptop or on your

00:21:35,360 --> 00:21:38,799
smartphone or wherever as a second

00:21:37,120 --> 00:21:40,480
factor and you can protect it with a

00:21:38,799 --> 00:21:42,559
fingerprint great

00:21:40,480 --> 00:21:45,679
and it is also said hey you can go

00:21:42,559 --> 00:21:47,919
passwordless as far as

00:21:45,679 --> 00:21:49,280
servers are concerned it is

00:21:47,919 --> 00:21:52,480
decentralized

00:21:49,280 --> 00:21:54,720
fido 2 is based on a decentralized

00:21:52,480 --> 00:21:57,360
concept which means

00:21:54,720 --> 00:21:59,039
it is made for end users it is not made

00:21:57,360 --> 00:22:02,880
for organizations

00:21:59,039 --> 00:22:06,559
you still have the challenge that

00:22:02,880 --> 00:22:10,320
if you as an end user use a 502 device

00:22:06,559 --> 00:22:10,320
and you wonder what should i do

00:22:10,640 --> 00:22:16,720
the solution by the fido alliance

00:22:13,679 --> 00:22:19,280
oh you should have get two fido2 tokens

00:22:16,720 --> 00:22:22,480
in the first place

00:22:19,280 --> 00:22:24,640
then you do not know where you actually

00:22:22,480 --> 00:22:24,640
have

00:22:24,799 --> 00:22:28,559
a registered your 502 device so you have

00:22:27,600 --> 00:22:31,600
to manually

00:22:28,559 --> 00:22:32,480
keep track where you have to remove the

00:22:31,600 --> 00:22:34,720
file from which

00:22:32,480 --> 00:22:35,760
services you have to remove this fido 2

00:22:34,720 --> 00:22:39,039
device

00:22:35,760 --> 00:22:41,679
um the fighter organization has 42 board

00:22:39,039 --> 00:22:45,360
members among them amazon google

00:22:41,679 --> 00:22:49,679
mastercard microsoft paypal

00:22:45,360 --> 00:22:53,200
and all of them are

00:22:49,679 --> 00:22:56,320
players with a huge

00:22:53,200 --> 00:23:01,520
end user user base and

00:22:56,320 --> 00:23:04,640
unfortunately most of the players

00:23:01,520 --> 00:23:07,760
do not support fido 2 themselves

00:23:04,640 --> 00:23:08,480
i tried i cannot protect my amazon

00:23:07,760 --> 00:23:11,360
account with

00:23:08,480 --> 00:23:12,880
my 502 token this is annoying this is

00:23:11,360 --> 00:23:16,559
strange

00:23:12,880 --> 00:23:19,200
it makes us wonder then there are still

00:23:16,559 --> 00:23:21,520
smart cards around

00:23:19,200 --> 00:23:23,360
smart cards are still good because you

00:23:21,520 --> 00:23:25,360
can do data encryption with it

00:23:23,360 --> 00:23:28,559
you cannot do data encryption with a

00:23:25,360 --> 00:23:28,559
one-time password token

00:23:29,679 --> 00:23:35,440
the problem with smart cards is you

00:23:32,880 --> 00:23:36,000
they contain an x509 certificate and a

00:23:35,440 --> 00:23:39,440
certificate

00:23:36,000 --> 00:23:41,279
has an expiration date so

00:23:39,440 --> 00:23:43,360
it is imminent that you need to

00:23:41,279 --> 00:23:45,760
re-enroll a smart card

00:23:43,360 --> 00:23:46,880
after a certain amount of time you have

00:23:45,760 --> 00:23:50,640
limitations

00:23:46,880 --> 00:23:53,600
of the key length um

00:23:50,640 --> 00:23:54,720
we have a customer they have enrolled i

00:23:53,600 --> 00:23:57,360
don't know

00:23:54,720 --> 00:23:58,000
some thousand smart cards and the

00:23:57,360 --> 00:24:00,400
problem is

00:23:58,000 --> 00:24:01,760
their old smart cards are actually now

00:24:00,400 --> 00:24:06,159
that old that they

00:24:01,760 --> 00:24:09,200
um only support uh 2048-bit

00:24:06,159 --> 00:24:10,960
rsa key length so

00:24:09,200 --> 00:24:13,039
if you want to re-enroll them and think

00:24:10,960 --> 00:24:16,480
about hmm should i add a

00:24:13,039 --> 00:24:18,720
certificate on the card that is

00:24:16,480 --> 00:24:20,000
four years that has a validity period of

00:24:18,720 --> 00:24:23,039
four years

00:24:20,000 --> 00:24:26,640
do i want to use 2048 bit in four years

00:24:23,039 --> 00:24:28,640
i don't think think so then you have pif

00:24:26,640 --> 00:24:31,919
smart cards and what i learned

00:24:28,640 --> 00:24:33,039
um a while ago i'm not sure i would have

00:24:31,919 --> 00:24:36,080
sorry i didn't check it

00:24:33,039 --> 00:24:39,120
if it's still valid but pf

00:24:36,080 --> 00:24:42,640
has a limitation in the definition so in

00:24:39,120 --> 00:24:42,640
the in the specification

00:24:44,520 --> 00:24:48,960
4096-bit aren't not mentioned so if you

00:24:47,039 --> 00:24:50,520
want to have a pif compatible smart

00:24:48,960 --> 00:24:54,000
cards you have to do

00:24:50,520 --> 00:24:57,279
2048 bit um

00:24:54,000 --> 00:25:01,520
finally users

00:24:57,279 --> 00:25:04,640
lose their keys they lose tokens

00:25:01,520 --> 00:25:05,679
and you have to allow users temporary

00:25:04,640 --> 00:25:08,480
access

00:25:05,679 --> 00:25:09,360
to the system till they either find the

00:25:08,480 --> 00:25:11,520
token

00:25:09,360 --> 00:25:15,760
or until you re-enroll the token to the

00:25:11,520 --> 00:25:17,679
user um

00:25:15,760 --> 00:25:19,039
but the problem is if the user has lost

00:25:17,679 --> 00:25:20,880
his token

00:25:19,039 --> 00:25:22,480
how should the user authenticate to the

00:25:20,880 --> 00:25:26,240
system so he probably

00:25:22,480 --> 00:25:28,559
will you call the help desk and

00:25:26,240 --> 00:25:31,919
how do you identify the user when he

00:25:28,559 --> 00:25:34,799
calls the help desk so how

00:25:31,919 --> 00:25:36,960
you have to define processes that works

00:25:34,799 --> 00:25:40,480
for your scenario

00:25:36,960 --> 00:25:42,640
to allow the users

00:25:40,480 --> 00:25:45,520
access again to re-enroll a second

00:25:42,640 --> 00:25:50,240
factor for the user

00:25:45,520 --> 00:25:52,240
and well my smartphone is great

00:25:50,240 --> 00:25:54,320
so how old are your smartphones you're

00:25:52,240 --> 00:25:56,080
probably older but

00:25:54,320 --> 00:25:57,840
a lot of customer smartphones here in

00:25:56,080 --> 00:26:00,000
germany you have uh

00:25:57,840 --> 00:26:01,840
you get a a contract with your

00:26:00,000 --> 00:26:03,679
smartphone you pay the smartphone with

00:26:01,840 --> 00:26:06,240
with your contract and

00:26:03,679 --> 00:26:07,520
um you will get a smartphone every two

00:26:06,240 --> 00:26:10,240
years

00:26:07,520 --> 00:26:12,000
so which means you probably will have to

00:26:10,240 --> 00:26:15,039
re-enroll

00:26:12,000 --> 00:26:18,480
a smartphone token every to a year

00:26:15,039 --> 00:26:21,679
if not then that's probably back bad

00:26:18,480 --> 00:26:22,080
because you shouldn't do backups because

00:26:21,679 --> 00:26:24,640
what

00:26:22,080 --> 00:26:28,559
happens if you allow a backup of your

00:26:24,640 --> 00:26:28,559
smartphone authenticator app

00:26:30,240 --> 00:26:36,960
the user will get his new phone

00:26:34,480 --> 00:26:38,159
will install the backup from his old

00:26:36,960 --> 00:26:42,240
phone hey

00:26:38,159 --> 00:26:44,080
my smartphone authenticator app works

00:26:42,240 --> 00:26:47,200
again

00:26:44,080 --> 00:26:47,200
oh my old phone

00:26:48,400 --> 00:26:53,279
okay i can give this to my grandson or

00:26:51,279 --> 00:26:55,520
to my nephew

00:26:53,279 --> 00:26:56,960
and guess how many users actually will

00:26:55,520 --> 00:27:00,320
reset their smartphone

00:26:56,960 --> 00:27:02,000
and delete the still working

00:27:00,320 --> 00:27:07,440
authenticator app

00:27:02,000 --> 00:27:10,000
on this given away smartphone bad idea

00:27:07,440 --> 00:27:11,919
yeah and finally some people don't have

00:27:10,000 --> 00:27:14,080
a smartphone but

00:27:11,919 --> 00:27:15,600
some kind of feature phone and this

00:27:14,080 --> 00:27:19,760
might not be supported

00:27:15,600 --> 00:27:22,799
and this in fact happens

00:27:19,760 --> 00:27:24,559
in one project with a university we had

00:27:22,799 --> 00:27:26,799
actually a

00:27:24,559 --> 00:27:26,799
um

00:27:27,840 --> 00:27:34,880
the the challenge that the students

00:27:31,520 --> 00:27:38,960
would enroll smartphone apps but

00:27:34,880 --> 00:27:39,200
students that do not have a smartphone

00:27:38,960 --> 00:27:44,240
or

00:27:39,200 --> 00:27:48,399
don't want to use a smartphone actually

00:27:44,240 --> 00:27:49,919
sit tight will get a list of transaction

00:27:48,399 --> 00:27:53,200
numbers so a printed

00:27:49,919 --> 00:27:57,039
sheet of paper with one-time passwords

00:27:53,200 --> 00:28:01,760
on it yeah you have to do compromise

00:27:57,039 --> 00:28:03,600
okay i think i have to speed up a bit

00:28:01,760 --> 00:28:04,960
finally we have organizational

00:28:03,600 --> 00:28:07,360
challenges in regards to the

00:28:04,960 --> 00:28:08,799
infrastructure

00:28:07,360 --> 00:28:10,799
okay we have to take a look what

00:28:08,799 --> 00:28:13,440
authentication protocols are actually

00:28:10,799 --> 00:28:13,440
supported

00:28:15,200 --> 00:28:20,080
then we have to take a look okay where

00:28:17,679 --> 00:28:23,360
are actually my users located

00:28:20,080 --> 00:28:24,159
um as i said you you you don't want to

00:28:23,360 --> 00:28:26,559
have

00:28:24,159 --> 00:28:28,880
a lot of different or on each

00:28:26,559 --> 00:28:30,720
application your own

00:28:28,880 --> 00:28:32,480
user store you will probably have a

00:28:30,720 --> 00:28:35,760
central user store

00:28:32,480 --> 00:28:37,279
and your two-factor authentication also

00:28:35,760 --> 00:28:41,279
has to play nice with

00:28:37,279 --> 00:28:41,279
this user store

00:28:41,360 --> 00:28:46,720
then we have some other technical issues

00:28:48,480 --> 00:28:54,000
quite practical issues if you decide to

00:28:51,760 --> 00:28:58,000
use smart cards or if you

00:28:54,000 --> 00:29:00,320
decide to use yubikey or whatever

00:28:58,000 --> 00:29:02,799
you might run into problems if you try

00:29:00,320 --> 00:29:03,120
to plug it into your smartphone or into

00:29:02,799 --> 00:29:06,880
your

00:29:03,120 --> 00:29:07,679
tablet and what i actually really

00:29:06,880 --> 00:29:11,120
experienced

00:29:07,679 --> 00:29:14,559
was was in a project with um

00:29:11,120 --> 00:29:17,760
with a cloud service for

00:29:14,559 --> 00:29:19,919
doctors in a federal state here

00:29:17,760 --> 00:29:22,240
where they actually would upload their

00:29:19,919 --> 00:29:26,640
uh their bills

00:29:22,240 --> 00:29:29,200
and it was a few years ago with a

00:29:26,640 --> 00:29:29,840
proprietary solution they used and they

00:29:29,200 --> 00:29:33,919
actually said

00:29:29,840 --> 00:29:36,720
oh bummer we have a blind we have a

00:29:33,919 --> 00:29:38,880
couple of blind doctors here and they

00:29:36,720 --> 00:29:40,399
were using

00:29:38,880 --> 00:29:42,960
one one-time password tokens and you

00:29:40,399 --> 00:29:46,000
know they have a small lcd

00:29:42,960 --> 00:29:48,960
display with a number on it and that's

00:29:46,000 --> 00:29:50,480
difficult to handle before blind users

00:29:48,960 --> 00:29:53,760
so this is also

00:29:50,480 --> 00:29:54,080
sometimes challenging you have to deal

00:29:53,760 --> 00:29:57,600
with

00:29:54,080 --> 00:30:01,279
and back then um i think it was roughly

00:29:57,600 --> 00:30:04,399
10 years ago luckily we were able to

00:30:01,279 --> 00:30:05,520
um enroll some brand new ub keys and

00:30:04,399 --> 00:30:09,679
somehow

00:30:05,520 --> 00:30:13,520
uh put them into the proprietary system

00:30:09,679 --> 00:30:16,799
what what wasn't meant to be done but

00:30:13,520 --> 00:30:20,559
all components use the hotp algorithm

00:30:16,799 --> 00:30:21,360
so it was possible finally i would like

00:30:20,559 --> 00:30:25,760
to

00:30:21,360 --> 00:30:30,799
tell you something about how we

00:30:25,760 --> 00:30:33,120
solve such challenges with privacy idea

00:30:30,799 --> 00:30:34,559
privacy id is a central multi-factor

00:30:33,120 --> 00:30:37,360
authentication system

00:30:34,559 --> 00:30:38,000
of course it is open source and we

00:30:37,360 --> 00:30:40,880
luckily

00:30:38,000 --> 00:30:42,720
run on premises so everyone has his own

00:30:40,880 --> 00:30:43,919
privacy idea instance under his own

00:30:42,720 --> 00:30:47,760
control

00:30:43,919 --> 00:30:51,600
and it's highly configurable

00:30:47,760 --> 00:30:53,039
this is a basic schema so privacy idea

00:30:51,600 --> 00:30:55,760
is

00:30:53,039 --> 00:30:56,480
a dedicated system a dedicated server

00:30:55,760 --> 00:31:00,399
that

00:30:56,480 --> 00:31:03,600
connects to other components like

00:31:00,399 --> 00:31:08,080
your user store which can be

00:31:03,600 --> 00:31:11,200
ldap or sql database and

00:31:08,080 --> 00:31:14,159
which actually only provides a rest api

00:31:11,200 --> 00:31:14,640
and we provide authentication protocols

00:31:14,159 --> 00:31:17,679
or we

00:31:14,640 --> 00:31:22,320
manage authentication protocols

00:31:17,679 --> 00:31:25,600
by adding plugins to other

00:31:22,320 --> 00:31:29,919
components for example if you want to do

00:31:25,600 --> 00:31:32,399
the authentication protocol xaml 2

00:31:29,919 --> 00:31:33,360
you can use a plugin for a simple xaml

00:31:32,399 --> 00:31:37,360
php

00:31:33,360 --> 00:31:38,480
for key cloak or for a solution by a

00:31:37,360 --> 00:31:42,480
proprietary

00:31:38,480 --> 00:31:46,559
software window from redmond okay

00:31:42,480 --> 00:31:48,320
yeah why do you want to do it centrally

00:31:46,559 --> 00:31:49,679
of course you want to do it centrally

00:31:48,320 --> 00:31:52,880
because you want to enroll

00:31:49,679 --> 00:31:57,360
one token to a user

00:31:52,880 --> 00:31:59,919
and the user then can use this one token

00:31:57,360 --> 00:32:01,279
at every connected application so you

00:31:59,919 --> 00:32:05,200
could also

00:32:01,279 --> 00:32:08,480
today enroll a token to a user

00:32:05,200 --> 00:32:10,960
so that he is able to log into vpn

00:32:08,480 --> 00:32:12,720
but next year you would simply connect

00:32:10,960 --> 00:32:14,559
another application

00:32:12,720 --> 00:32:16,240
and then the user could do two-factor

00:32:14,559 --> 00:32:19,679
authentication there without

00:32:16,240 --> 00:32:21,440
the need to re-enroll the token or to to

00:32:19,679 --> 00:32:23,600
have any user interaction user

00:32:21,440 --> 00:32:27,039
interactions for it admins

00:32:23,600 --> 00:32:29,679
are evil and of course if the user

00:32:27,039 --> 00:32:30,720
loses this token you can block this one

00:32:29,679 --> 00:32:34,240
token

00:32:30,720 --> 00:32:36,640
and then um the

00:32:34,240 --> 00:32:37,279
the the attacker or the guy who found

00:32:36,640 --> 00:32:42,000
the token

00:32:37,279 --> 00:32:45,360
cannot use it anywhere yeah

00:32:42,000 --> 00:32:45,360
centrally you can also

00:32:45,840 --> 00:32:50,240
assign many different token types to a

00:32:49,120 --> 00:32:53,760
user so

00:32:50,240 --> 00:32:55,679
you also would have this flexibility

00:32:53,760 --> 00:32:57,519
there are different token types of

00:32:55,679 --> 00:33:02,000
course because

00:32:57,519 --> 00:33:04,799
the challenge is to identify what

00:33:02,000 --> 00:33:05,919
token type is actually the right token

00:33:04,799 --> 00:33:08,559
for me

00:33:05,919 --> 00:33:11,360
is a smartphone app does it make sense

00:33:08,559 --> 00:33:15,679
do i need to do certificates of 502

00:33:11,360 --> 00:33:16,880
or unfortunately we even have projects

00:33:15,679 --> 00:33:20,720
where

00:33:16,880 --> 00:33:22,480
users authenticate with an email token

00:33:20,720 --> 00:33:24,720
where the user

00:33:22,480 --> 00:33:27,440
gets a one-time password sent to his

00:33:24,720 --> 00:33:27,440
email address

00:33:28,000 --> 00:33:34,159
and nevertheless

00:33:31,840 --> 00:33:35,919
this way you can get acceptance by the

00:33:34,159 --> 00:33:40,480
user

00:33:35,919 --> 00:33:43,760
and have fallback tokens and you also

00:33:40,480 --> 00:33:44,159
avoid the vendor login but also what i

00:33:43,760 --> 00:33:47,360
said

00:33:44,159 --> 00:33:51,679
earlier the technology login

00:33:47,360 --> 00:33:55,679
because token types

00:33:51,679 --> 00:33:58,399
can easily be added later on

00:33:55,679 --> 00:33:58,799
yeah there's a i said something about

00:33:58,399 --> 00:34:02,399
the

00:33:58,799 --> 00:34:06,480
um authentication protocols

00:34:02,399 --> 00:34:09,440
and the stack here actually is

00:34:06,480 --> 00:34:11,440
it is a web application written in

00:34:09,440 --> 00:34:13,760
python it provides a rest api

00:34:11,440 --> 00:34:16,000
so everything is accessible via the rest

00:34:13,760 --> 00:34:17,359
api on top of it you have a single page

00:34:16,000 --> 00:34:20,960
application

00:34:17,359 --> 00:34:24,399
and but for example the token types

00:34:20,960 --> 00:34:27,679
are all python classes so you can easily

00:34:24,399 --> 00:34:31,359
enhance and add your own

00:34:27,679 --> 00:34:35,520
token type and if in three years

00:34:31,359 --> 00:34:38,879
industry comes up with a next cool thing

00:34:35,520 --> 00:34:43,760
we will probably able to add this new

00:34:38,879 --> 00:34:47,839
authentication mechanism to privacy idea

00:34:43,760 --> 00:34:50,800
and the great thing about

00:34:47,839 --> 00:34:52,320
this stack actually is that we can

00:34:50,800 --> 00:34:56,960
automate

00:34:52,320 --> 00:35:00,560
at many different levels here

00:34:56,960 --> 00:35:02,480
we can write scripts to call the rest

00:35:00,560 --> 00:35:06,880
api but we can also

00:35:02,480 --> 00:35:10,800
call python libraries directly which

00:35:06,880 --> 00:35:13,280
speeds up things a lot and

00:35:10,800 --> 00:35:15,760
this way we were able to for example

00:35:13,280 --> 00:35:19,040
migrate

00:35:15,760 --> 00:35:22,480
three old mfa system

00:35:19,040 --> 00:35:26,160
systems into one privacy idea system

00:35:22,480 --> 00:35:30,800
just by adding a bunch of scripts for

00:35:26,160 --> 00:35:32,079
re-enrolling tokens for this we also

00:35:30,800 --> 00:35:34,800
have a

00:35:32,079 --> 00:35:36,560
github repository where we collect all

00:35:34,800 --> 00:35:40,640
the scripts that

00:35:36,560 --> 00:35:43,760
somehow come into life

00:35:40,640 --> 00:35:46,960
over time yeah

00:35:43,760 --> 00:35:50,640
all is rest which also means you can

00:35:46,960 --> 00:35:54,000
integrate this mfa system

00:35:50,640 --> 00:35:55,359
into your existing self-service portals

00:35:54,000 --> 00:35:59,119
into your existing

00:35:55,359 --> 00:36:00,079
help desk interfaces wherever you want

00:35:59,119 --> 00:36:03,760
to

00:36:00,079 --> 00:36:05,630
and so that

00:36:03,760 --> 00:36:06,800
users or self or

00:36:05,630 --> 00:36:10,400
[Music]

00:36:06,800 --> 00:36:11,040
service desk users don't necessarily

00:36:10,400 --> 00:36:14,880
have to

00:36:11,040 --> 00:36:19,440
learn a new interface because

00:36:14,880 --> 00:36:22,960
maybe they have their existing

00:36:19,440 --> 00:36:26,640
user profile portal and you will simply

00:36:22,960 --> 00:36:27,040
add an additional button for revoke my

00:36:26,640 --> 00:36:31,119
lost

00:36:27,040 --> 00:36:34,560
token without need to go and log in

00:36:31,119 --> 00:36:34,560
into another management system

00:36:36,160 --> 00:36:42,960
our policies allow to define

00:36:39,599 --> 00:36:46,400
specific rights

00:36:42,960 --> 00:36:50,160
to users and administrators and

00:36:46,400 --> 00:36:53,440
the most interesting thing

00:36:50,160 --> 00:36:55,680
i think is the event handlers

00:36:53,440 --> 00:36:58,000
this is the last great thing i like to

00:36:55,680 --> 00:37:01,440
talk about to you

00:36:58,000 --> 00:37:04,640
um because the interesting thing is

00:37:01,440 --> 00:37:05,200
each rest request that hits the system

00:37:04,640 --> 00:37:08,640
for us

00:37:05,200 --> 00:37:10,880
is it is an event

00:37:08,640 --> 00:37:13,280
and with this these event handlers we

00:37:10,880 --> 00:37:16,800
can trigger

00:37:13,280 --> 00:37:20,320
new arbitrator actions

00:37:16,800 --> 00:37:23,440
and every um event

00:37:20,320 --> 00:37:24,320
can come with certain conditions and you

00:37:23,440 --> 00:37:27,760
can say okay

00:37:24,320 --> 00:37:31,520
if if an administrator enrolls a token

00:37:27,760 --> 00:37:31,920
and it the user does not have a token

00:37:31,520 --> 00:37:34,560
yet

00:37:31,920 --> 00:37:36,240
and the token type is of type a and so

00:37:34,560 --> 00:37:39,359
on and so forth

00:37:36,240 --> 00:37:42,560
then you can tell the system

00:37:39,359 --> 00:37:46,400
please start an additional task

00:37:42,560 --> 00:37:51,200
and this actually helps us a lot

00:37:46,400 --> 00:37:54,000
and a university used this to

00:37:51,200 --> 00:37:55,200
deactivate tokens during shipping so the

00:37:54,000 --> 00:37:58,560
self-service

00:37:55,200 --> 00:37:58,960
assigned tokens to users and the tokens

00:37:58,560 --> 00:38:02,160
were

00:37:58,960 --> 00:38:03,440
automatically deactivated in the

00:38:02,160 --> 00:38:05,440
shipping process

00:38:03,440 --> 00:38:07,200
and the self-service users do not even

00:38:05,440 --> 00:38:09,440
have the right to

00:38:07,200 --> 00:38:12,320
activate or deactivate tokens they can

00:38:09,440 --> 00:38:14,720
simply assign a token to the user

00:38:12,320 --> 00:38:16,640
and everything happens automatically

00:38:14,720 --> 00:38:18,640
behind the scene

00:38:16,640 --> 00:38:20,079
in another project we did parallel token

00:38:18,640 --> 00:38:23,359
enrollment um

00:38:20,079 --> 00:38:26,800
this means um we enrolled

00:38:23,359 --> 00:38:29,760
uh a new token but since

00:38:26,800 --> 00:38:30,560
old system were still involved um we

00:38:29,760 --> 00:38:34,240
also

00:38:30,560 --> 00:38:34,240
automatically enrolled a

00:38:34,320 --> 00:38:38,640
radius token this is a virtual token

00:38:36,160 --> 00:38:39,280
that forwards the authentication request

00:38:38,640 --> 00:38:42,560
to

00:38:39,280 --> 00:38:44,960
another mfa system so in this case

00:38:42,560 --> 00:38:45,680
actually they were migrating from rsacq

00:38:44,960 --> 00:38:48,000
id

00:38:45,680 --> 00:38:49,680
and using this mechanism they were able

00:38:48,000 --> 00:38:53,599
to enroll the new token

00:38:49,680 --> 00:38:56,880
in privacy idea but the user could still

00:38:53,599 --> 00:39:00,880
either use his old rsa token or his

00:38:56,880 --> 00:39:03,200
new token and privacy idea and this was

00:39:00,880 --> 00:39:05,359
simply done by automating it with this

00:39:03,200 --> 00:39:08,720
event handler here

00:39:05,359 --> 00:39:13,040
so it's a quite mighty tool

00:39:08,720 --> 00:39:15,760
and we have a lot of different

00:39:13,040 --> 00:39:16,720
um handlers that can start different

00:39:15,760 --> 00:39:20,079
actions

00:39:16,720 --> 00:39:23,599
because we do not know what

00:39:20,079 --> 00:39:26,839
users are doing so um

00:39:23,599 --> 00:39:28,640
i have a picture here and this is

00:39:26,839 --> 00:39:32,000
actually

00:39:28,640 --> 00:39:36,480
a schema from a world war ii bomber

00:39:32,000 --> 00:39:36,480
the bombers that returned to the us

00:39:36,560 --> 00:39:44,160
they recorded whether actually

00:39:40,400 --> 00:39:47,119
the airplane was hit by gunfire

00:39:44,160 --> 00:39:48,800
and this these are all the red dots here

00:39:47,119 --> 00:39:49,440
and you think you have everything under

00:39:48,800 --> 00:39:50,960
control

00:39:49,440 --> 00:39:53,440
and everything is great and so they

00:39:50,960 --> 00:39:55,440
decided let's

00:39:53,440 --> 00:39:56,480
we know all these red dots all the all

00:39:55,440 --> 00:39:59,520
the hits

00:39:56,480 --> 00:39:59,520
let's um

00:40:00,560 --> 00:40:06,880
let's strengthen the armor of the

00:40:03,839 --> 00:40:10,640
bomber at these points there

00:40:06,880 --> 00:40:13,760
sounds like a good idea and

00:40:10,640 --> 00:40:16,160
but actually a

00:40:13,760 --> 00:40:17,200
witty mathematician came around and said

00:40:16,160 --> 00:40:21,280
no that's a bad

00:40:17,200 --> 00:40:23,680
idea because since you see a

00:40:21,280 --> 00:40:26,319
gunshot at these red points you see that

00:40:23,680 --> 00:40:28,000
the bomber was still able to fly

00:40:26,319 --> 00:40:29,760
you should take a look at the bombers

00:40:28,000 --> 00:40:33,520
that did not return

00:40:29,760 --> 00:40:36,560
and so you should strengthen the armor

00:40:33,520 --> 00:40:39,040
actually where you have no hit and

00:40:36,560 --> 00:40:42,640
sometimes actually i feel

00:40:39,040 --> 00:40:45,839
this way with our projects because

00:40:42,640 --> 00:40:48,160
um we are sitting there and thinking

00:40:45,839 --> 00:40:50,160
oh two-factor authentication should

00:40:48,160 --> 00:40:53,680
probably work this way

00:40:50,160 --> 00:40:56,800
and then you meet the customer and

00:40:53,680 --> 00:40:57,680
the world changes so how should we know

00:40:56,800 --> 00:41:00,720
as a window

00:40:57,680 --> 00:41:01,760
actually what the customer wants or

00:41:00,720 --> 00:41:05,040
needs

00:41:01,760 --> 00:41:07,920
and this is the great thing with this

00:41:05,040 --> 00:41:08,720
these event handlers because this is

00:41:07,920 --> 00:41:11,680
simply an

00:41:08,720 --> 00:41:12,560
automation mechanism and sometimes we

00:41:11,680 --> 00:41:15,839
are really

00:41:12,560 --> 00:41:18,079
astonished what our customers come up

00:41:15,839 --> 00:41:21,119
with

00:41:18,079 --> 00:41:22,160
yeah i already talked about smartphone

00:41:21,119 --> 00:41:24,960
enrollments

00:41:22,160 --> 00:41:25,680
and about the problems with the qr code

00:41:24,960 --> 00:41:29,760
and

00:41:25,680 --> 00:41:32,720
um i talked a bit about lost tokens so i

00:41:29,760 --> 00:41:32,720
think this is fine

00:41:32,839 --> 00:41:38,000
and for now

00:41:35,359 --> 00:41:39,520
this is all i hope you like it and i

00:41:38,000 --> 00:41:43,119
think we have

00:41:39,520 --> 00:41:46,240
uh very few minutes maybe for some

00:41:43,119 --> 00:41:49,839
questions okay

00:41:46,240 --> 00:41:49,839
thank you

00:41:53,280 --> 00:41:57,359
any questions how does this work

00:41:58,160 --> 00:42:02,160
great job cornelius thanks so much for

00:42:00,720 --> 00:42:05,760
presenting with us

00:42:02,160 --> 00:42:06,480
again today i'm not seeing any questions

00:42:05,760 --> 00:42:09,839
in the q

00:42:06,480 --> 00:42:12,480
a um uh give it just a minute

00:42:09,839 --> 00:42:13,359
maybe one will pop in while we're

00:42:12,480 --> 00:42:15,520
waiting for that

00:42:13,359 --> 00:42:17,760
do you have any closing thoughts for us

00:42:15,520 --> 00:42:19,040
cornelius i i love your painting i think

00:42:17,760 --> 00:42:21,920
that's a painting

00:42:19,040 --> 00:42:22,240
by the way that's awesome no actually

00:42:21,920 --> 00:42:25,280
this

00:42:22,240 --> 00:42:28,480
is um this is a

00:42:25,280 --> 00:42:30,319
photo from norway i have a

00:42:28,480 --> 00:42:32,480
i also have other great photos from

00:42:30,319 --> 00:42:34,400
norway

00:42:32,480 --> 00:42:35,920
it's a great it's a great country to go

00:42:34,400 --> 00:42:40,319
there are not many people so

00:42:35,920 --> 00:42:41,839
it's uh it's still not built in norway

00:42:40,319 --> 00:42:43,280
i'd love to visit

00:42:41,839 --> 00:42:45,200
it seems to be one of the more

00:42:43,280 --> 00:42:48,319
picturesque countries

00:42:45,200 --> 00:42:51,359
in the world yeah

00:42:48,319 --> 00:42:55,280
well last thought

00:42:51,359 --> 00:42:58,480
i don't know so the question is

00:42:55,280 --> 00:43:00,880
being practical i think

00:42:58,480 --> 00:43:00,880
because

00:43:01,680 --> 00:43:09,040
you can try to do very good security

00:43:05,760 --> 00:43:11,599
very tight security and and one day you

00:43:09,040 --> 00:43:12,960
you will not like it anymore if if you

00:43:11,599 --> 00:43:14,960
add too many locks

00:43:12,960 --> 00:43:16,880
to the front door of your house you

00:43:14,960 --> 00:43:20,319
probably will not leave anymore

00:43:16,880 --> 00:43:23,839
so it still has to be usable

00:43:20,319 --> 00:43:28,720
and you need to be open

00:43:23,839 --> 00:43:32,319
that um some decisions you make today

00:43:28,720 --> 00:43:33,040
might might change in in a few years and

00:43:32,319 --> 00:43:36,040
so you

00:43:33,040 --> 00:43:39,040
need to be ready to be able to adapt

00:43:36,040 --> 00:43:39,040

YouTube URL: https://www.youtube.com/watch?v=ucWF2fuZqW0


