Title: 2019: Bringing Validation to Users: Integrating Quality Assurance Checks into Map Editors
Publication date: 2019-09-28
Playlist: SotM 2019, Day 2, Hörsaal Ost
Description: 
	Providing more validation checks with MapRules and MapCSS Tag Checks in iD and JOSM to direct mappers to issues as they map. As well as using Overpass queries to retrieve features with data quality issues.

There is a need for validation in crowdsourced mapping to ensure that the quality of created data meets the community’s agreed upon standards and best practices. The OpenStreetMap community has created many Quality Control (QC) tools (Osmose, KeepRight, OSMLint, etc.) to identify existing errors within OpenStreetMap data, but there has not been as much emphasis on Quality Assurance (QA) tools to prevent issues from being created during the editing process.  We are developing methods to introduce these data quality checks in both the iD and JOSM editors to educate mappers and provide immediate feedback while they are mapping. 

In order to introduce these new tools, we first need to recognize the methods a user typically uses to learn how to contribute to the map properly:  
- Peruse the many pages on OSM Wiki; 
- Reach out to community members on mailing lists, forums, or Slack groups; or,  
- Follow detailed instructions and receive feedback (sometimes untimely) on tasks completed in a focused project (via Tasking Manager or MapRoulette) 

This process is accepted and works for those who are resourceful and careful, but we wanted to reduce the barrier to entry for new mappers by creating MapRules.  MapRules is an interface to create instructions which generate custom presets and validation rules that are then integrated into the existing validation frameworks in JOSM and iD.  Contributors are directed on how to map features according to the generated rules and are provided instant feedback if their changeset does not meet the set specification.   

In addition to using MapRules to create specifications for collecting features, we are creating validation checks specifically for JOSM using MapCSS based on rules found in QC tools like Osmose, KeepRight, and OSMLint.  This approach follows the paradigm of checking data before it is committed to the map. 

This approach is truly for all contributors and users of OSM.  It clearly shows its worth to the mappers who are creating new edits, but it also aids validators to quickly identify problems where they may have had to visually and manually inspect each feature or rely on numerous QC tools outside of the editing environment. To further assist in validation and clean up, we have created a series of corresponding Overpass queries that download only the features with identified data issues. Within JOSM, these issues can potentially be resolved by applying automatic fixes on a feature or in bulk. 

By bringing more validation into the regular mapping workflow, we can help create a better map.

Matthew Gibb Clarisse Abalos

https://pretalx.com/sotm2019/talk/9SSZQH/
Captions: 
	00:00:08,500 --> 00:00:14,080
have Clarisse Avalos and Matthew Gib who

00:00:11,350 --> 00:00:16,630
are going to talk about integrating QA

00:00:14,080 --> 00:00:22,210
tools into our most popular editors ID

00:00:16,630 --> 00:00:25,210
editor and Joseph thanks everyone so if

00:00:22,210 --> 00:00:28,800
you're just here for peers talk this is

00:00:25,210 --> 00:00:31,570
gonna be like a perfect sequel we think

00:00:28,800 --> 00:00:33,580
for what you just talked about so thank

00:00:31,570 --> 00:00:35,530
you for being here this is Clarice

00:00:33,580 --> 00:00:38,350
Avalos I'm Matt Gibb

00:00:35,530 --> 00:00:40,570
we both work at Macs are and we're based

00:00:38,350 --> 00:00:42,219
out of Washington DC and today we're

00:00:40,570 --> 00:00:43,780
excited to talk to you about some of the

00:00:42,219 --> 00:00:45,880
work we've been doing integrating

00:00:43,780 --> 00:00:50,320
validation and Quality Assurance checks

00:00:45,880 --> 00:00:52,030
into the different map editors so

00:00:50,320 --> 00:00:55,420
there's a few different problems we face

00:00:52,030 --> 00:00:56,020
first is the amount of issues in the OSM

00:00:55,420 --> 00:00:58,510
database

00:00:56,020 --> 00:01:01,719
there's many topological and attribution

00:00:58,510 --> 00:01:05,350
issues just waiting to be fixed second

00:01:01,719 --> 00:01:08,020
is that osm as osm grows to with huge

00:01:05,350 --> 00:01:09,640
numbers of new mappers on there doesn't

00:01:08,020 --> 00:01:12,460
seem to be as many people willing to fix

00:01:09,640 --> 00:01:14,409
and validate other's contributions so

00:01:12,460 --> 00:01:17,409
this this is both a good and a bad

00:01:14,409 --> 00:01:19,900
problem because it means though assem

00:01:17,409 --> 00:01:21,520
community is growing but it also means

00:01:19,900 --> 00:01:24,850
there's still issues that need to be

00:01:21,520 --> 00:01:26,770
fixed so the third is more of a

00:01:24,850 --> 00:01:30,430
responsibility for us as the OSM

00:01:26,770 --> 00:01:33,130
community it we can't criticize new

00:01:30,430 --> 00:01:35,020
mappers too much if they don't have all

00:01:33,130 --> 00:01:37,830
the resources in front of them to make

00:01:35,020 --> 00:01:37,830
the best decisions

00:01:38,759 --> 00:01:43,720
so the validation and quality control

00:01:41,950 --> 00:01:47,290
tools that are available in the OSM

00:01:43,720 --> 00:01:49,780
ecosystem are wonderful and there's also

00:01:47,290 --> 00:01:51,520
a lot of them but with so many great

00:01:49,780 --> 00:01:54,070
tools it can kind of be tough to keep

00:01:51,520 --> 00:01:56,380
track of everything some are for very

00:01:54,070 --> 00:01:58,780
specific reasons while others are more

00:01:56,380 --> 00:02:00,880
comprehensive however not all of the

00:01:58,780 --> 00:02:03,540
tools are front right front and center

00:02:00,880 --> 00:02:06,399
in front of the eyes of all contributors

00:02:03,540 --> 00:02:08,979
tools like osmosis and keeprite are

00:02:06,399 --> 00:02:11,230
putting Ubik ubiquitous and and many

00:02:08,979 --> 00:02:12,640
people have have heard of them

00:02:11,230 --> 00:02:15,040
but we should be able to take these

00:02:12,640 --> 00:02:16,510
community accepted validation checks and

00:02:15,040 --> 00:02:18,310
put them right in front of the user to

00:02:16,510 --> 00:02:21,489
catch the issues before they enter the

00:02:18,310 --> 00:02:22,349
database there may also be a delay from

00:02:21,489 --> 00:02:25,349
when a contribute

00:02:22,349 --> 00:02:27,060
contributer creates data before someone

00:02:25,349 --> 00:02:29,159
else is able to catch the dependent

00:02:27,060 --> 00:02:31,109
potential error for instance if someone

00:02:29,159 --> 00:02:33,349
is mapping as part of a project in the

00:02:31,109 --> 00:02:36,060
tasking manager and they incorrectly

00:02:33,349 --> 00:02:38,879
connect a residential road to say a

00:02:36,060 --> 00:02:40,349
trunk road the editing tool you might be

00:02:38,879 --> 00:02:42,870
using might not flag that as an issue

00:02:40,349 --> 00:02:47,370
but that's that's a validation check in

00:02:42,870 --> 00:02:49,379
Osmos so so it would be difficult for

00:02:47,370 --> 00:02:50,819
the new user to identify the right place

00:02:49,379 --> 00:02:53,340
in the wiki or a different training

00:02:50,819 --> 00:02:55,709
resource to fully understand the tagging

00:02:53,340 --> 00:02:58,349
schema and and correct workflows

00:02:55,709 --> 00:03:03,109
formatting so this leads to sort of how

00:02:58,349 --> 00:03:06,540
we are looking at validation and OSM and

00:03:03,109 --> 00:03:09,090
our team's approach has been to stop bad

00:03:06,540 --> 00:03:11,040
or incomplete data from being created or

00:03:09,090 --> 00:03:12,930
uploaded in the first place

00:03:11,040 --> 00:03:14,819
this can help give immediate feedback to

00:03:12,930 --> 00:03:17,609
new mappers and give them the confidence

00:03:14,819 --> 00:03:19,319
they might need to to have to ensure

00:03:17,609 --> 00:03:25,230
that they're contributing quality data

00:03:19,319 --> 00:03:28,019
so give you a second to read Dilbert is

00:03:25,230 --> 00:03:30,209
wonderful in order to bring more

00:03:28,019 --> 00:03:31,709
validation to users in editors we have

00:03:30,209 --> 00:03:33,900
added to the validation rules and

00:03:31,709 --> 00:03:35,659
jocelyn and ID and we'll show you how

00:03:33,900 --> 00:03:38,639
you can build upon the existing

00:03:35,659 --> 00:03:40,379
foundation frameworks as well we've also

00:03:38,639 --> 00:03:42,479
provided an easy way to create guided

00:03:40,379 --> 00:03:44,180
custom presets and validation rules with

00:03:42,479 --> 00:03:46,409
an application called map rules

00:03:44,180 --> 00:03:48,239
finally we wrote validation centric

00:03:46,409 --> 00:03:51,209
overpass queries to only pull in data

00:03:48,239 --> 00:03:52,799
that has issues so Jocelyn's data

00:03:51,209 --> 00:03:54,840
validator allows you to validate your

00:03:52,799 --> 00:03:56,400
current data set as you are editing and

00:03:54,840 --> 00:03:58,409
also warns you before you upload the

00:03:56,400 --> 00:04:01,259
data if there are any issues that may

00:03:58,409 --> 00:04:03,120
need to be fixed there are two types and

00:04:01,259 --> 00:04:05,219
data validators in jocelyn which you can

00:04:03,120 --> 00:04:07,259
in a you can find and enable in the

00:04:05,219 --> 00:04:09,239
preferences window type checker rules

00:04:07,259 --> 00:04:12,120
written in map CSS which are great for

00:04:09,239 --> 00:04:13,430
basic topology and tag checks then test

00:04:12,120 --> 00:04:17,940
written and java to handle more complex

00:04:13,430 --> 00:04:20,250
geometry checks so what is map CSS it's

00:04:17,940 --> 00:04:21,870
a CSS like language for map style sheets

00:04:20,250 --> 00:04:24,060
that allow you to specify how a given

00:04:21,870 --> 00:04:25,830
feature should be displayed as in the

00:04:24,060 --> 00:04:27,780
picture on the left you could have a

00:04:25,830 --> 00:04:30,000
selector for water features and specify

00:04:27,780 --> 00:04:31,440
them to be displayed in blue it's used

00:04:30,000 --> 00:04:34,110
in Jocelyn for map styling and

00:04:31,440 --> 00:04:35,669
highlighting data validation issues so

00:04:34,110 --> 00:04:35,930
to the right you'll see we created a map

00:04:35,669 --> 00:04:38,060
sea

00:04:35,930 --> 00:04:39,770
says style that would show buildings

00:04:38,060 --> 00:04:41,810
that have the same name in the same

00:04:39,770 --> 00:04:44,060
color this helped us to identify

00:04:41,810 --> 00:04:48,199
potential relations that need to be made

00:04:44,060 --> 00:04:50,000
around buildings with the same name here

00:04:48,199 --> 00:04:52,160
are the basics for creating a map CSS

00:04:50,000 --> 00:04:53,570
validation check in the selector you

00:04:52,160 --> 00:04:55,729
would specify the geometry of the

00:04:53,570 --> 00:04:58,729
feature you're looking for so node way

00:04:55,729 --> 00:05:00,770
relation or star for all geometries then

00:04:58,729 --> 00:05:02,419
attributes to look for so in this case

00:05:00,770 --> 00:05:04,930
features with the amenity equals

00:05:02,419 --> 00:05:06,919
hospital tag but don't have a name tag

00:05:04,930 --> 00:05:08,360
then in the body you would write

00:05:06,919 --> 00:05:10,280
instructions for what to do with a

00:05:08,360 --> 00:05:11,720
feature so you could throw a warning in

00:05:10,280 --> 00:05:13,580
the Jocelin validator window that says

00:05:11,720 --> 00:05:15,949
hospital without a name tag

00:05:13,580 --> 00:05:17,210
when validation is run if you have any

00:05:15,949 --> 00:05:19,280
features that match your rule criteria

00:05:17,210 --> 00:05:23,210
the warning will show in the validation

00:05:19,280 --> 00:05:25,490
results window you could create your own

00:05:23,210 --> 00:05:27,910
map CSS checks and save them as a dot

00:05:25,490 --> 00:05:30,770
map CSS file or more specifically

00:05:27,910 --> 00:05:32,570
validator dot map CSS file then go to

00:05:30,770 --> 00:05:34,130
your jaws and preferences and add him as

00:05:32,570 --> 00:05:35,479
an active rule and they would

00:05:34,130 --> 00:05:37,930
immediately become incorporated into

00:05:35,479 --> 00:05:40,639
your local Jocelin validation checks

00:05:37,930 --> 00:05:42,260
we've taken a look at the common issues

00:05:40,639 --> 00:05:43,940
detected by the QA tools that matt

00:05:42,260 --> 00:05:46,130
mentioned earlier and started creating

00:05:43,940 --> 00:05:48,680
map CSS checks based on them so that we

00:05:46,130 --> 00:05:51,500
can find those issues in jostle here's a

00:05:48,680 --> 00:05:53,960
more example example inspired by

00:05:51,500 --> 00:05:57,460
keeprite check that uses variables and

00:05:53,960 --> 00:06:00,650
pseudo classes like note no connection

00:05:57,460 --> 00:06:02,479
to find junctions where motorways are

00:06:00,650 --> 00:06:03,800
connected directly to a highway and

00:06:02,479 --> 00:06:06,250
might be missing something like a

00:06:03,800 --> 00:06:08,599
motorway link or a motorway Junction

00:06:06,250 --> 00:06:11,570
you'll find these rules inspired by

00:06:08,599 --> 00:06:13,070
Osmos keep Rea nos em lit available in

00:06:11,570 --> 00:06:14,210
your tag checker rules and we'll just

00:06:13,070 --> 00:06:17,389
need to make them active in your

00:06:14,210 --> 00:06:19,370
preferences to use them they're

00:06:17,389 --> 00:06:21,409
maintained on the Jocelin wiki rules

00:06:19,370 --> 00:06:23,360
page where you two can add rules you'd

00:06:21,409 --> 00:06:25,729
like to share and help add to or improve

00:06:23,360 --> 00:06:27,440
the ones already out there we've really

00:06:25,729 --> 00:06:29,419
appreciated getting feedback especially

00:06:27,440 --> 00:06:32,539
when it comes to refining checks to

00:06:29,419 --> 00:06:34,370
reduce false positives the great thing

00:06:32,539 --> 00:06:36,650
is if you can create Maps yes through

00:06:34,370 --> 00:06:38,990
CSS rules you'll also be able to create

00:06:36,650 --> 00:06:40,909
osmosis analyzers from them to also give

00:06:38,990 --> 00:06:42,409
you that large-scale overview of issues

00:06:40,909 --> 00:06:44,599
so I encourage you to check out

00:06:42,409 --> 00:06:46,479
Frederick's talk tomorrow at 9:30 about

00:06:44,599 --> 00:06:48,370
how we can share rules across

00:06:46,479 --> 00:06:53,439
patience and Vincents talk about

00:06:48,370 --> 00:06:55,509
maintaining and developing jostle so

00:06:53,439 --> 00:06:57,069
like Clarisse mentioned there's two

00:06:55,509 --> 00:06:59,740
different types of validators in JA

00:06:57,069 --> 00:07:02,680
'some the maps ESS ones which you just

00:06:59,740 --> 00:07:05,830
explained and the tests which are a bit

00:07:02,680 --> 00:07:07,839
more advanced and written in Java so

00:07:05,830 --> 00:07:09,580
we're map CSS is limited mainly to

00:07:07,839 --> 00:07:12,339
shared nodes and different attribution

00:07:09,580 --> 00:07:15,580
checks the Java tests allow for a bit

00:07:12,339 --> 00:07:17,559
more advanced analysis and geographic

00:07:15,580 --> 00:07:20,199
validation looking at distances and some

00:07:17,559 --> 00:07:24,099
of the relations between data so here's

00:07:20,199 --> 00:07:28,330
an example similar to osmosis far from

00:07:24,099 --> 00:07:30,189
water analyzer which uses a list of

00:07:28,330 --> 00:07:32,650
identified water related man-made

00:07:30,189 --> 00:07:35,349
features being flagged at a specified

00:07:32,650 --> 00:07:38,349
threshold from a natural water feature

00:07:35,349 --> 00:07:41,409
so you can see in the Jif that once the

00:07:38,349 --> 00:07:43,509
man-made equals Pier is moved inside the

00:07:41,409 --> 00:07:46,419
30 meter threshold it's no longer

00:07:43,509 --> 00:07:49,419
flagged for validation that and that 30

00:07:46,419 --> 00:07:51,129
meters is somewhat arbitrary but with

00:07:49,419 --> 00:07:54,749
the check you'd be able to change that

00:07:51,129 --> 00:07:54,749
threshold based on on your own criteria

00:07:56,069 --> 00:08:00,699
here's another example looking at

00:07:58,240 --> 00:08:03,399
waterways needing to start and end

00:08:00,699 --> 00:08:05,229
inside water body and if it does

00:08:03,399 --> 00:08:07,689
intersect it needs to go all the way the

00:08:05,229 --> 00:08:09,849
length of the the water body again all

00:08:07,689 --> 00:08:12,490
sorts of data relationships are able to

00:08:09,849 --> 00:08:14,229
be identified here where map CSS wasn't

00:08:12,490 --> 00:08:15,729
able to flag because they didn't

00:08:14,229 --> 00:08:18,279
actually share a node though it the way

00:08:15,729 --> 00:08:22,599
went over the the other closed way in

00:08:18,279 --> 00:08:25,240
the water body and again inspired by the

00:08:22,599 --> 00:08:26,520
awesomeness analyser of of waterway

00:08:25,240 --> 00:08:32,319
looking at a number of different

00:08:26,520 --> 00:08:34,300
waterway valuations and just one more

00:08:32,319 --> 00:08:36,510
third example looking at route relations

00:08:34,300 --> 00:08:39,669
for public transport related features

00:08:36,510 --> 00:08:42,130
not going to spend too long here but

00:08:39,669 --> 00:08:46,169
just to give you another example using a

00:08:42,130 --> 00:08:46,169
non natural feature

00:08:48,879 --> 00:08:55,959
so what have we done we've added 58 new

00:08:52,970 --> 00:08:58,550
validators to jostle all using Matt CSS

00:08:55,959 --> 00:09:00,529
we didn't want to reinvent the wheel so

00:08:58,550 --> 00:09:02,600
if Johnson already had a somewhat

00:09:00,529 --> 00:09:05,750
similar check to Osmos or a different

00:09:02,600 --> 00:09:06,800
validation tool we didn't add it we just

00:09:05,750 --> 00:09:09,920
wanted to help create a more

00:09:06,800 --> 00:09:12,529
comprehensive collection of validation

00:09:09,920 --> 00:09:15,470
tools available directly to the mappers

00:09:12,529 --> 00:09:18,350
as their mapping 41 of our checks have

00:09:15,470 --> 00:09:21,110
been inspired by Osmos 7 from keeprite

00:09:18,350 --> 00:09:23,389
osm lin has a few and then even one from

00:09:21,110 --> 00:09:27,139
atlas which mainly looks at highway

00:09:23,389 --> 00:09:33,740
related issues and lives in the OSM osm

00:09:27,139 --> 00:09:35,540
lab github repo so like I just sort of

00:09:33,740 --> 00:09:36,829
mentioned most of the the checks that

00:09:35,540 --> 00:09:39,230
we've looked at are related to highway

00:09:36,829 --> 00:09:40,970
issues which sort of makes sense given

00:09:39,230 --> 00:09:43,699
how many groups rely on Open Street Map

00:09:40,970 --> 00:09:45,879
data for routing and navigation as well

00:09:43,699 --> 00:09:49,009
and then there's also general tagging

00:09:45,879 --> 00:09:50,480
attribution issues but that's not to

00:09:49,009 --> 00:09:53,569
mention that there may be very specific

00:09:50,480 --> 00:09:55,819
one-off checks like you know the tree

00:09:53,569 --> 00:09:58,129
mapping that you want to validate and

00:09:55,819 --> 00:10:01,160
that's ok because if you have a very

00:09:58,129 --> 00:10:03,079
niche area of mapping you too can create

00:10:01,160 --> 00:10:05,089
your validation checks and share them

00:10:03,079 --> 00:10:07,730
with others so that way everyone can

00:10:05,089 --> 00:10:10,189
benefit from how you know your expertise

00:10:07,730 --> 00:10:12,370
in a certain area of mapping how that

00:10:10,189 --> 00:10:17,480
can be mapped with other people and

00:10:12,370 --> 00:10:20,029
sharing how things should be mapped so I

00:10:17,480 --> 00:10:23,269
do want to apologize for this since this

00:10:20,029 --> 00:10:25,699
is not a data visualization conference I

00:10:23,269 --> 00:10:30,889
really took that to heart in this case I

00:10:25,699 --> 00:10:32,569
think the default Google bar chart but

00:10:30,889 --> 00:10:36,860
it's just another way to show what I

00:10:32,569 --> 00:10:39,589
what I just said we've converted map CSS

00:10:36,860 --> 00:10:43,129
checks mainly and tagging highways and

00:10:39,589 --> 00:10:45,439
general tagging related issues but again

00:10:43,129 --> 00:10:47,000
just again to show that there's plenty

00:10:45,439 --> 00:10:49,459
of space for improvement in all these

00:10:47,000 --> 00:10:52,870
other areas for anyone else who wants to

00:10:49,459 --> 00:10:52,870
contribute their own validation checks

00:10:53,320 --> 00:10:57,040
all those validations are great by

00:10:55,389 --> 00:10:59,470
identifying issues which the general

00:10:57,040 --> 00:11:00,490
public agree upon but we've seen that

00:10:59,470 --> 00:11:03,430
time and time again where people

00:11:00,490 --> 00:11:05,380
requests new presets or validations or

00:11:03,430 --> 00:11:06,279
changes to existing ones for their

00:11:05,380 --> 00:11:08,350
specific needs

00:11:06,279 --> 00:11:10,180
oftentimes turning into a debate about

00:11:08,350 --> 00:11:12,009
whether or not should be included

00:11:10,180 --> 00:11:13,779
since there are use cases in certain

00:11:12,009 --> 00:11:16,329
parts of the world where it is in fact

00:11:13,779 --> 00:11:18,519
valid so we made an application called

00:11:16,329 --> 00:11:20,380
map rules that can be incorporated into

00:11:18,519 --> 00:11:22,509
tasking manager to create campaign

00:11:20,380 --> 00:11:24,399
specific attribution guidelines which

00:11:22,509 --> 00:11:26,560
generate custom presets and validation

00:11:24,399 --> 00:11:28,420
rules I can tailor the editors to your

00:11:26,560 --> 00:11:30,279
campaign or organizational specific

00:11:28,420 --> 00:11:32,170
needs this sort of end-to-end

00:11:30,279 --> 00:11:34,319
communication helps enforce the

00:11:32,170 --> 00:11:37,149
requirements for mapping features in

00:11:34,319 --> 00:11:41,019
simplified standardized and streamlined

00:11:37,149 --> 00:11:43,029
way here you'll see the simple UI we've

00:11:41,019 --> 00:11:44,290
created to specify what types of

00:11:43,029 --> 00:11:47,500
features you like the mappers in your

00:11:44,290 --> 00:11:49,569
campaign to focus on while mapping and

00:11:47,500 --> 00:11:51,670
how it should be done this can be a

00:11:49,569 --> 00:11:55,089
standalone app or integrated in a task

00:11:51,670 --> 00:11:56,230
manager or another app with an iframe so

00:11:55,089 --> 00:11:58,149
let's say you wanted them to map

00:11:56,230 --> 00:11:59,980
hospitals which should all have the

00:11:58,149 --> 00:12:02,740
building it was Hospital tag on them and

00:11:59,980 --> 00:12:04,389
be drawn as an area or a point and all

00:12:02,740 --> 00:12:06,910
the features with those identifying tags

00:12:04,389 --> 00:12:08,500
must have a name and may have an

00:12:06,910 --> 00:12:10,839
indication of whether or not they handle

00:12:08,500 --> 00:12:12,370
emergencies all the dropdowns are

00:12:10,839 --> 00:12:14,620
populated with the assistance of tag

00:12:12,370 --> 00:12:16,600
info popular combinations to help the

00:12:14,620 --> 00:12:19,329
campaign manager find the most common

00:12:16,600 --> 00:12:20,500
Associated tags this then turns into a

00:12:19,329 --> 00:12:22,779
clean list of guidelines for the

00:12:20,500 --> 00:12:25,000
rapper's to see what is required of

00:12:22,779 --> 00:12:26,680
features they add in your campaign and

00:12:25,000 --> 00:12:30,639
it also generates a config file that you

00:12:26,680 --> 00:12:32,290
can use and yaps so here when they

00:12:30,639 --> 00:12:34,630
choose to edit an ID editor from a map

00:12:32,290 --> 00:12:36,459
rolls campaign the list of presets will

00:12:34,630 --> 00:12:38,380
be limited to the features indicated in

00:12:36,459 --> 00:12:41,050
the map rule that can be applied to the

00:12:38,380 --> 00:12:42,730
geometry drawn this helps guide your

00:12:41,050 --> 00:12:44,260
users by reducing the otherwise large

00:12:42,730 --> 00:12:46,720
number of presets an ID to sift through

00:12:44,260 --> 00:12:49,060
and helps mappers focus on the types of

00:12:46,720 --> 00:12:50,860
features relevant to the campaign in the

00:12:49,060 --> 00:12:52,509
Jocelin plugin there's a drop-down or

00:12:50,860 --> 00:12:56,350
presets associated with a campaign in

00:12:52,509 --> 00:12:58,329
the tool bar when a preset is selected

00:12:56,350 --> 00:13:00,670
it automatically adds the identifying

00:12:58,329 --> 00:13:02,470
tags from the map rule here a sports

00:13:00,670 --> 00:13:04,449
field gets the leisure equals pitch tag

00:13:02,470 --> 00:13:05,290
and it only shows the fields and values

00:13:04,449 --> 00:13:07,720
relevant to the camp

00:13:05,290 --> 00:13:10,480
so you'll see the suggestions from the

00:13:07,720 --> 00:13:13,990
map rule for the sport field its value

00:13:10,480 --> 00:13:15,610
maybe soccer or American football guided

00:13:13,990 --> 00:13:17,440
presets make it easier for mappers to

00:13:15,610 --> 00:13:19,840
know what to fill in and when creating

00:13:17,440 --> 00:13:21,340
data it will also throw validation

00:13:19,840 --> 00:13:23,560
errors or suggestions for further

00:13:21,340 --> 00:13:25,150
information while editing and jha some

00:13:23,560 --> 00:13:27,850
these would show in the validation

00:13:25,150 --> 00:13:29,770
window here you can see they forgot to

00:13:27,850 --> 00:13:33,400
add a name and might want to add a sport

00:13:29,770 --> 00:13:35,470
that the field is used for we do have a

00:13:33,400 --> 00:13:36,970
github repo if you're interested my

00:13:35,470 --> 00:13:39,430
colleague max Grossman has recently

00:13:36,970 --> 00:13:40,990
implemented a user authentication which

00:13:39,430 --> 00:13:43,540
will allow us to implement the concept

00:13:40,990 --> 00:13:45,370
of user presets so you can have your

00:13:43,540 --> 00:13:48,250
favorite presets at the ready and also

00:13:45,370 --> 00:13:49,990
share and reuse existing presets as you

00:13:48,250 --> 00:13:51,430
may know task manager is undergoing a

00:13:49,990 --> 00:13:53,110
redesign so we'll be working on

00:13:51,430 --> 00:13:55,150
integrating map roles into task manager

00:13:53,110 --> 00:13:57,160
for when it's ready since our initial

00:13:55,150 --> 00:13:59,110
develop it development efforts began

00:13:57,160 --> 00:14:03,250
when we were still working with test

00:13:59,110 --> 00:14:05,440
manager too the last thing we wanted to

00:14:03,250 --> 00:14:07,360
touch on our validation based overpass

00:14:05,440 --> 00:14:09,550
queries a couple of reasons why this

00:14:07,360 --> 00:14:11,140
becomes important is because as we

00:14:09,550 --> 00:14:13,450
mentioned earlier there are a lot of

00:14:11,140 --> 00:14:15,400
error detecting QA tools each with their

00:14:13,450 --> 00:14:17,230
own databases of issues that may not get

00:14:15,400 --> 00:14:18,940
updated very frequently because it takes

00:14:17,230 --> 00:14:20,500
a decent amount of time to run all those

00:14:18,940 --> 00:14:22,690
validations on the entire world

00:14:20,500 --> 00:14:24,190
not to mention issues may have been

00:14:22,690 --> 00:14:25,990
fixed through various applications and

00:14:24,190 --> 00:14:28,240
never marked as resolved in one QA tool

00:14:25,990 --> 00:14:30,340
or another so if you can queer the data

00:14:28,240 --> 00:14:32,740
with issues yourself you'll only be

00:14:30,340 --> 00:14:34,420
looking at the outstanding issues and

00:14:32,740 --> 00:14:36,640
overpasses a powerful way to query

00:14:34,420 --> 00:14:39,760
OpenStreetMap data that's updated every

00:14:36,640 --> 00:14:42,100
minute also one in expert mode and

00:14:39,760 --> 00:14:44,080
Jocelyn you can download data with a

00:14:42,100 --> 00:14:46,210
validation targeted overpass query and

00:14:44,080 --> 00:14:48,190
be able to pull data with issues or a

00:14:46,210 --> 00:14:49,270
larger area without hitting the data

00:14:48,190 --> 00:14:50,860
limit you would normally get if

00:14:49,270 --> 00:14:53,200
downloading all the data in the bounding

00:14:50,860 --> 00:14:55,000
box it also enables you to perform block

00:14:53,200 --> 00:14:58,540
operations to fix multiple issues at

00:14:55,000 --> 00:15:00,940
once like deleting or from notes you can

00:14:58,540 --> 00:15:02,410
also create map roulette challenges with

00:15:00,940 --> 00:15:04,330
these queries to direct mappers to

00:15:02,410 --> 00:15:06,640
review one issue at a time over large

00:15:04,330 --> 00:15:08,320
areas challenges can be created with geo

00:15:06,640 --> 00:15:10,570
JSON so you could export issues from

00:15:08,320 --> 00:15:12,580
Osmos into map roulette or use an

00:15:10,570 --> 00:15:16,170
overpass brewery which can be rerun to

00:15:12,580 --> 00:15:16,170
update challenge tasks at a later time

00:15:16,930 --> 00:15:21,249
and the interest of sharing these

00:15:18,309 --> 00:15:23,259
queries and reducing redundancy we added

00:15:21,249 --> 00:15:24,999
an osm wiki page that maps a query to

00:15:23,259 --> 00:15:27,220
references to the QA tools they are

00:15:24,999 --> 00:15:29,319
based off of that way you can easily

00:15:27,220 --> 00:15:32,189
find more documentation with examples

00:15:29,319 --> 00:15:34,720
and possibly ways to fix them

00:15:32,189 --> 00:15:36,819
speaking of redundancy as of finding a

00:15:34,720 --> 00:15:39,069
place to put these queries I found some

00:15:36,819 --> 00:15:41,470
more wiki pages that also share Quality

00:15:39,069 --> 00:15:42,759
Assurance over past queries so at least

00:15:41,470 --> 00:15:44,800
I know that we're not alone trying to

00:15:42,759 --> 00:15:46,329
fulfill this need it's just really

00:15:44,800 --> 00:15:47,790
interesting to see you know what else is

00:15:46,329 --> 00:15:50,050
out there

00:15:47,790 --> 00:15:52,029
so now they can pull a bunch of data

00:15:50,050 --> 00:15:53,800
with quality assurance issues directly

00:15:52,029 --> 00:15:56,170
image awesome how do you go about fixing

00:15:53,800 --> 00:15:57,730
them you can zoom to each feature and

00:15:56,170 --> 00:16:00,040
the validation results to investigate

00:15:57,730 --> 00:16:01,749
the issue and some validations may have

00:16:00,040 --> 00:16:04,749
automatic fixes that can be applied in

00:16:01,749 --> 00:16:06,970
the map CSS if it finds a deprecated tag

00:16:04,749 --> 00:16:08,829
a minute equals hotel that should be

00:16:06,970 --> 00:16:10,660
changed to tourism equals hotel you

00:16:08,829 --> 00:16:12,369
could use fixed remove and fix add to

00:16:10,660 --> 00:16:14,230
automatically update the features tag

00:16:12,369 --> 00:16:16,509
when fixed and the validation windows

00:16:14,230 --> 00:16:18,490
clicked the job the checks can also have

00:16:16,509 --> 00:16:21,220
commands associated with them that will

00:16:18,490 --> 00:16:22,959
run actions and Jocelyn mod fix there

00:16:21,220 --> 00:16:25,269
may be edge cases that aren't accounted

00:16:22,959 --> 00:16:26,740
for and the suggested fix so proceed

00:16:25,269 --> 00:16:28,870
with caution and make sure to inspect

00:16:26,740 --> 00:16:31,629
the feature and reboot and review what

00:16:28,870 --> 00:16:33,910
changes are made to each feature but

00:16:31,629 --> 00:16:35,439
adding more automatic fixes will make it

00:16:33,910 --> 00:16:39,129
easier for people to get through all

00:16:35,439 --> 00:16:42,189
these validation issues more quickly so

00:16:39,129 --> 00:16:44,199
why does all of this matter like I said

00:16:42,189 --> 00:16:46,360
in the beginning we have a

00:16:44,199 --> 00:16:48,399
responsibility to new mappers to give

00:16:46,360 --> 00:16:50,769
them all the tools necessary to create

00:16:48,399 --> 00:16:53,199
quality data by creating custom

00:16:50,769 --> 00:16:55,540
validations individual users and teams

00:16:53,199 --> 00:16:58,240
or groups can have the directed focus

00:16:55,540 --> 00:17:00,610
that they need for example if you're

00:16:58,240 --> 00:17:03,549
interested in mapping railways why not

00:17:00,610 --> 00:17:05,079
sharing your validation written in map

00:17:03,549 --> 00:17:06,939
CSS so you can identify where there

00:17:05,079 --> 00:17:09,010
should be a railway equals switch right

00:17:06,939 --> 00:17:11,500
where two railways intersect and a train

00:17:09,010 --> 00:17:13,839
can go a different direction there's a

00:17:11,500 --> 00:17:17,350
lot of them that aren't wrapped so

00:17:13,839 --> 00:17:19,480
thematic validations could also assist

00:17:17,350 --> 00:17:22,809
with directed or organized editing and

00:17:19,480 --> 00:17:27,209
cleanup so if there are standardized and

00:17:22,809 --> 00:17:27,209
shared validation checks everyone can

00:17:27,240 --> 00:17:33,130
so our challenge to everyone in this

00:17:30,040 --> 00:17:36,790
room or watching online is to create

00:17:33,130 --> 00:17:39,010
maps map CSS validation rules add them

00:17:36,790 --> 00:17:41,020
to the Jocelin validator and create

00:17:39,010 --> 00:17:48,419
start playing with naturals and creating

00:17:41,020 --> 00:17:48,419
map rules that can be shared thank you

00:17:49,550 --> 00:17:56,720
[Music]

00:17:54,960 --> 00:18:00,930
[Applause]

00:17:56,720 --> 00:18:03,390
my recent Matthew let's see what

00:18:00,930 --> 00:18:07,970
questions we have please raise your hand

00:18:03,390 --> 00:18:07,970
nice and high all right let's start here

00:18:14,630 --> 00:18:20,880
hello I'm Vincent from jism so thank you

00:18:18,630 --> 00:18:23,820
so much for presenting the capabilities

00:18:20,880 --> 00:18:26,700
of map CSS validation Joe Sam and what

00:18:23,820 --> 00:18:29,460
you are doing and are you helped us in

00:18:26,700 --> 00:18:32,940
the last year to improve the rules we

00:18:29,460 --> 00:18:36,710
provided and thank you to for using the

00:18:32,940 --> 00:18:41,190
new Joe Sam logo which we change it very

00:18:36,710 --> 00:18:46,650
that's not so not long ago my question

00:18:41,190 --> 00:18:50,400
is for the for the next evolution we

00:18:46,650 --> 00:18:54,750
could provide together as you may know

00:18:50,400 --> 00:18:58,200
Joe Sam and osmoles are done by European

00:18:54,750 --> 00:19:01,590
people so we we don't always have global

00:18:58,200 --> 00:19:04,860
vision of the OSM problem in the world

00:19:01,590 --> 00:19:07,850
world so do you plan to focus on this

00:19:04,860 --> 00:19:11,820
subject I'm thinking especially about

00:19:07,850 --> 00:19:13,799
problem or less specific to an area for

00:19:11,820 --> 00:19:15,809
example problem only applicable to the

00:19:13,799 --> 00:19:19,200
United States or other parts of the

00:19:15,809 --> 00:19:20,970
world so I know that I think for the map

00:19:19,200 --> 00:19:23,669
CSS checks you can specify like

00:19:20,970 --> 00:19:28,890
localization right yeah that would be

00:19:23,669 --> 00:19:32,100
probably a good next step and there's a

00:19:28,890 --> 00:19:34,559
lot we could add to you know creating

00:19:32,100 --> 00:19:36,450
the map roles at least like you know we

00:19:34,559 --> 00:19:40,580
have big dreams to do relations and all

00:19:36,450 --> 00:19:40,580
that - one step at a time

00:19:47,530 --> 00:19:55,060
so just as a confirmation you mentioned

00:19:51,110 --> 00:19:58,580
that the ID will be integrated into the

00:19:55,060 --> 00:20:00,800
next task manager version and I mean

00:19:58,580 --> 00:20:03,800
project managers will be able to add

00:20:00,800 --> 00:20:07,790
their own preset to the project that's

00:20:03,800 --> 00:20:10,070
the right yeah so literally what you do

00:20:07,790 --> 00:20:11,900
is you create the map pools you could

00:20:10,070 --> 00:20:12,950
either do in the standalone app or we're

00:20:11,900 --> 00:20:15,320
trying to integrate that into task

00:20:12,950 --> 00:20:17,330
manager so you can do it in there and

00:20:15,320 --> 00:20:19,610
then it's lit it's just the config ID

00:20:17,330 --> 00:20:22,070
that for you know that points to that

00:20:19,610 --> 00:20:23,990
map role and that just gets saved in

00:20:22,070 --> 00:20:26,390
task manager and so they'll see those

00:20:23,990 --> 00:20:28,430
instructions that you saw for the

00:20:26,390 --> 00:20:30,640
mappers and then you know the campaign

00:20:28,430 --> 00:20:33,260
manager would be able to edit them and

00:20:30,640 --> 00:20:35,300
when you when you launch it from that

00:20:33,260 --> 00:20:37,790
testing manager campaign you say edit

00:20:35,300 --> 00:20:42,590
and ja summer and an ID those get loaded

00:20:37,790 --> 00:20:44,840
into a version of ID and that's

00:20:42,590 --> 00:20:46,430
something like I guess not everybody

00:20:44,840 --> 00:20:48,290
wants their pieces to be limited we've

00:20:46,430 --> 00:20:49,670
heard that you know if they're an

00:20:48,290 --> 00:20:53,480
advanced mapper they don't might want

00:20:49,670 --> 00:20:55,970
more options so I guess configuring you

00:20:53,480 --> 00:20:58,970
know you can make an option like I want

00:20:55,970 --> 00:21:02,120
to open it up more and get the regular

00:20:58,970 --> 00:21:05,480
ID thing and increase also mentioned

00:21:02,120 --> 00:21:06,430
earlier on about how we just implemented

00:21:05,480 --> 00:21:10,540
ooofff

00:21:06,430 --> 00:21:12,260
so that while that will a user save

00:21:10,540 --> 00:21:14,000
their presets

00:21:12,260 --> 00:21:16,190
it'll also start to pave the way for

00:21:14,000 --> 00:21:18,770
being able to have sort of like template

00:21:16,190 --> 00:21:21,650
presets that are available for you know

00:21:18,770 --> 00:21:24,200
if we're doing a mapping campaign for

00:21:21,650 --> 00:21:25,640
you know all the hospitals you know but

00:21:24,200 --> 00:21:27,650
we're gonna do it here here here and

00:21:25,640 --> 00:21:29,540
over here you don't have to recreate at

00:21:27,650 --> 00:21:32,110
the end every time so that's definitely

00:21:29,540 --> 00:21:32,110
in our roadmap

00:21:35,920 --> 00:21:45,310
I have a question so is there a way to

00:21:40,320 --> 00:21:48,160
ignore presets or suggestions in a

00:21:45,310 --> 00:21:49,930
particular area so for example I know

00:21:48,160 --> 00:21:52,090
that there was discussion how in New

00:21:49,930 --> 00:21:56,200
York City the building footprints were

00:21:52,090 --> 00:21:59,170
imported from New York's official mat

00:21:56,200 --> 00:22:00,490
like city records and none of the

00:21:59,170 --> 00:22:02,800
buildings in New York are actually

00:22:00,490 --> 00:22:05,170
exactly square right so it's sort of

00:22:02,800 --> 00:22:08,290
like you know turning off presets for a

00:22:05,170 --> 00:22:09,640
specific area or you know I was looking

00:22:08,290 --> 00:22:11,200
at the example and I was thinking you

00:22:09,640 --> 00:22:13,120
know I have no idea what the sports

00:22:11,200 --> 00:22:14,670
field near my house is named I don't

00:22:13,120 --> 00:22:20,860
think it has a name

00:22:14,670 --> 00:22:25,060
so in jostle and even ID as well you can

00:22:20,860 --> 00:22:26,380
toggle different validation errors that

00:22:25,060 --> 00:22:29,320
that's gonna be on the editor side

00:22:26,380 --> 00:22:32,860
because if you're using a defined preset

00:22:29,320 --> 00:22:35,500
for no part of a map rules campaign or

00:22:32,860 --> 00:22:42,250
something those are going to be very

00:22:35,500 --> 00:22:44,950
very focused and I think actually I can

00:22:42,250 --> 00:22:49,590
provide the additional details so the

00:22:44,950 --> 00:22:54,040
answer is yes in map CSS you can define

00:22:49,590 --> 00:22:56,440
particular countries for United States

00:22:54,040 --> 00:23:01,030
Canada and enjoy you can also provide

00:22:56,440 --> 00:23:02,980
States code so you can say that a rule

00:23:01,030 --> 00:23:06,190
is only applicable for a specific

00:23:02,980 --> 00:23:09,250
country or everywhere except in a

00:23:06,190 --> 00:23:12,550
particular country we have validation

00:23:09,250 --> 00:23:17,500
rules currently defined enjoys a gem

00:23:12,550 --> 00:23:20,140
itself about the spelling of the double

00:23:17,500 --> 00:23:23,170
s in German language which is not the

00:23:20,140 --> 00:23:25,450
same between Germany and Austria for the

00:23:23,170 --> 00:23:27,670
world stressor sorry for the

00:23:25,450 --> 00:23:30,850
pronunciation it's not returned the same

00:23:27,670 --> 00:23:32,800
so the check is not the same between

00:23:30,850 --> 00:23:37,770
Germany and Austria so you could do the

00:23:32,800 --> 00:23:37,770
same for US states for example

00:23:39,330 --> 00:23:45,280
that's probably another solution than a

00:23:42,310 --> 00:23:48,400
osm you have definefunction or you can

00:23:45,280 --> 00:23:57,280
either see our Nazi so you could say

00:23:48,400 --> 00:23:59,080
Nazi buildings so there's definitely a

00:23:57,280 --> 00:24:00,490
lot of functionality that we've learned

00:23:59,080 --> 00:24:02,500
along the way and clearly there's a lot

00:24:00,490 --> 00:24:04,060
that we don't know which is great and

00:24:02,500 --> 00:24:08,560
that's why we're here because you want

00:24:04,060 --> 00:24:11,020
people are talked we don't have birds of

00:24:08,560 --> 00:24:12,580
a feather plane but we're here through

00:24:11,020 --> 00:24:15,640
the end of the conference so we'd love

00:24:12,580 --> 00:24:18,220
to tag up and chat with people who who

00:24:15,640 --> 00:24:22,060
are interested I have a follow-up

00:24:18,220 --> 00:24:24,160
question on on map rules you saw you

00:24:22,060 --> 00:24:26,050
mentioned that there's the integration

00:24:24,160 --> 00:24:30,010
with joseline best of all so does that

00:24:26,050 --> 00:24:32,200
work with the opening jaws of link to

00:24:30,010 --> 00:24:36,970
populate presets and stuff like that

00:24:32,200 --> 00:24:39,610
already so okay here's the caveat I

00:24:36,970 --> 00:24:43,900
guess we haven't deployed map pools yet

00:24:39,610 --> 00:24:45,460
you could spin it up yourself but yeah

00:24:43,900 --> 00:24:47,800
we haven't put it on the server or

00:24:45,460 --> 00:24:49,600
anything but yeah you could download the

00:24:47,800 --> 00:24:52,120
plug-in and it would just it would just

00:24:49,600 --> 00:24:55,980
add an extra you know preset drop-down

00:24:52,120 --> 00:24:55,980
essentially at the top

00:24:57,370 --> 00:25:00,060
yes

00:25:08,100 --> 00:25:14,460

YouTube URL: https://www.youtube.com/watch?v=Si071cFpvLI


