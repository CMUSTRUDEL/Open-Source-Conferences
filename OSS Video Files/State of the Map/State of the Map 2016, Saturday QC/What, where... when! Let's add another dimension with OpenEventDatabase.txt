Title: What, where... when! Let's add another dimension with OpenEventDatabase
Publication date: 2016-10-19
Playlist: State of the Map 2016, Saturday QC
Description: 
	Christian Quest at State of the Map 2016
http://2016.stateofthemap.org/2016/what-where-when-lets-add-another-dimension-with-openeventdatabase/

OSM data represent a “static” world and is not designed to share time related data. As an example, we can do route calculations but they cannot take into account traffic jams, closed roads or road work.

OpenEventDatabase’s goal is to provide an open platform to share “events” which are data with “what”, “where” and “when” details. An open API is available since May 2016 and the project is available on GitHub. The content is currently fed with weather warnings and alerts and motorway traffic information, with more planned.
Captions: 
	00:00:00,000 --> 00:00:05,940
well so we are starting the first part

00:00:03,120 --> 00:00:09,210
of this afternoon session and the first

00:00:05,940 --> 00:00:12,719
speaker is a Christian quest for her

00:00:09,210 --> 00:00:15,990
from openstreetmap France and they will

00:00:12,719 --> 00:00:22,949
talk about over open even database what

00:00:15,990 --> 00:00:32,279
where and when okay yeah it works thank

00:00:22,949 --> 00:00:37,230
you direct and okay where where the idea

00:00:32,279 --> 00:00:39,600
came from starting a new project because

00:00:37,230 --> 00:00:44,300
I'm going to talk about a new project

00:00:39,600 --> 00:00:47,430
I'm trying to start there are several

00:00:44,300 --> 00:00:49,440
application that do that provide the car

00:00:47,430 --> 00:00:53,010
navigation based on OpenStreetMap data

00:00:49,440 --> 00:00:58,410
but as far as I know there's almost

00:00:53,010 --> 00:01:01,050
nothing about traffic condition and some

00:00:58,410 --> 00:01:03,690
time i'm using ways because of that and

00:01:01,050 --> 00:01:07,409
i would like to have an open version of

00:01:03,690 --> 00:01:11,850
the ways application that now is owned

00:01:07,409 --> 00:01:16,439
by google so i've been looking at is

00:01:11,850 --> 00:01:20,400
there an open project addressing sharing

00:01:16,439 --> 00:01:27,030
of traffic condition i found something

00:01:20,400 --> 00:01:29,250
but some nothing really exist so why not

00:01:27,030 --> 00:01:32,340
start something because I'm sure I'm not

00:01:29,250 --> 00:01:38,549
the only one who think that it may be

00:01:32,340 --> 00:01:40,380
useful so I want to make clear the two

00:01:38,549 --> 00:01:42,680
different kind of data we are dealing

00:01:40,380 --> 00:01:46,020
with here you we have the code that I

00:01:42,680 --> 00:01:48,960
openstreetmap is what I call code that I

00:01:46,020 --> 00:01:53,880
it's not pejorative it's just it's data

00:01:48,960 --> 00:01:59,159
that described static things it's not

00:01:53,880 --> 00:02:01,860
designed to handle temporary information

00:01:59,159 --> 00:02:04,740
or historical information we have a lot

00:02:01,860 --> 00:02:07,290
of debates about that but it's it's

00:02:04,740 --> 00:02:10,140
really not designed for that and there's

00:02:07,290 --> 00:02:12,890
limited support in OpenStreetMap tags

00:02:10,140 --> 00:02:17,870
about the time you have start date

00:02:12,890 --> 00:02:21,670
and date but it's not fitting very well

00:02:17,870 --> 00:02:25,280
about having more real-time information

00:02:21,670 --> 00:02:29,170
so the idea of open heaven database is

00:02:25,280 --> 00:02:32,030
to deal with both data the data that

00:02:29,170 --> 00:02:35,990
change very frequently or is readied for

00:02:32,030 --> 00:02:39,830
short period of time and that what i

00:02:35,990 --> 00:02:42,890
call evans are things with what describe

00:02:39,830 --> 00:02:46,130
what where and when where openstreetmap

00:02:42,890 --> 00:02:48,890
is more focused on what we're but

00:02:46,130 --> 00:02:52,160
usually you don't have when in

00:02:48,890 --> 00:02:55,700
OpenStreetMap data so it adds one new

00:02:52,160 --> 00:02:59,720
dimension to osm data but it may not

00:02:55,700 --> 00:03:02,510
have to be dependent on osm so mixing

00:02:59,720 --> 00:03:05,090
both kind of that I'm sure we can build

00:03:02,510 --> 00:03:07,850
new kind of service or application or

00:03:05,090 --> 00:03:11,350
reuse that would really make

00:03:07,850 --> 00:03:14,180
OpenStreetMap data even more interesting

00:03:11,350 --> 00:03:19,310
so for me an event is what where and

00:03:14,180 --> 00:03:23,959
when I've I focused on the Geo jeezum

00:03:19,310 --> 00:03:26,660
format to use the geometry part to stop

00:03:23,959 --> 00:03:31,610
the where and to use the properties who

00:03:26,660 --> 00:03:40,610
to describe what and when so forget

00:03:31,610 --> 00:03:45,170
about XML so what is what its property

00:03:40,610 --> 00:03:48,829
of for the moment it's a new article so

00:03:45,170 --> 00:03:51,980
I gave a few example like public

00:03:48,829 --> 00:03:54,709
transport incident smoke or weather

00:03:51,980 --> 00:03:57,140
warnings under storm it's okay it makes

00:03:54,709 --> 00:04:01,519
things a bit your article these could

00:03:57,140 --> 00:04:07,010
evolve based on experiments that we can

00:04:01,519 --> 00:04:09,290
do on the coder it's a few of the events

00:04:07,010 --> 00:04:11,560
that i've already put in the database

00:04:09,290 --> 00:04:14,810
for you can see what they look like

00:04:11,560 --> 00:04:17,090
there's also a property because i think

00:04:14,810 --> 00:04:19,789
there's big classes of evans there's

00:04:17,090 --> 00:04:22,880
scheduled events here it's a scheduled

00:04:19,789 --> 00:04:24,979
event we we planned the date the time

00:04:22,880 --> 00:04:25,800
the place and what it was it's a

00:04:24,979 --> 00:04:27,840
schedule Evan you

00:04:25,800 --> 00:04:29,520
ernst keep the difference like accidents

00:04:27,840 --> 00:04:33,090
traffic jams and things like that you

00:04:29,520 --> 00:04:34,669
have forecast events it's for example

00:04:33,090 --> 00:04:38,419
weather forecast but it can be also

00:04:34,669 --> 00:04:43,289
traffic jam forecasts or things in that

00:04:38,419 --> 00:04:45,539
area and observed events it's like a

00:04:43,289 --> 00:04:46,889
weather measurement or something like

00:04:45,539 --> 00:04:48,560
that it's something that has been

00:04:46,889 --> 00:04:51,389
observed it's the difference between

00:04:48,560 --> 00:04:53,520
with the forecast it's not something

00:04:51,389 --> 00:04:59,879
that is scheduled not unscheduled it's

00:04:53,520 --> 00:05:02,969
you observe it the web part it's the in

00:04:59,879 --> 00:05:05,699
the design it's the geometry so everyone

00:05:02,969 --> 00:05:09,060
can add geometries and it they can be

00:05:05,699 --> 00:05:14,009
point line trilling polygons or even

00:05:09,060 --> 00:05:16,259
more complex shapes if we need using

00:05:14,009 --> 00:05:19,009
your design makes things very easy to

00:05:16,259 --> 00:05:22,370
integrate with tools that we already use

00:05:19,009 --> 00:05:25,440
it takes a few minutes just to show live

00:05:22,370 --> 00:05:29,159
events on you mad fish you know you map

00:05:25,440 --> 00:05:31,710
you can query data from outside and

00:05:29,159 --> 00:05:36,840
display lemon you have you make a live

00:05:31,710 --> 00:05:41,250
map winner in a couple of minutes for

00:05:36,840 --> 00:05:46,860
the when part the time related part you

00:05:41,250 --> 00:05:51,630
can define events that are at one moment

00:05:46,860 --> 00:05:54,900
or that our time range the conference is

00:05:51,630 --> 00:06:00,990
a time range so there's a start there's

00:05:54,900 --> 00:06:03,870
a stop I focused on iso format for for

00:06:00,990 --> 00:06:07,259
the date so it's it simplifies things

00:06:03,870 --> 00:06:13,620
and all dates and time stamps in the

00:06:07,259 --> 00:06:18,659
database are gmt UTC here is an example

00:06:13,620 --> 00:06:21,539
of an event so you have the where part

00:06:18,659 --> 00:06:24,060
at the beginning the geometry then you

00:06:21,539 --> 00:06:27,719
have some metadata about the oven that

00:06:24,060 --> 00:06:30,479
is that comes from the the API and the

00:06:27,719 --> 00:06:32,639
database you have the some other

00:06:30,479 --> 00:06:35,350
information and you have the when and

00:06:32,639 --> 00:06:38,950
the word part describing

00:06:35,350 --> 00:06:41,770
what is happening when and the where is

00:06:38,950 --> 00:06:46,900
in the geometry so this is an example

00:06:41,770 --> 00:06:50,850
for a traffic jam so it's a point it

00:06:46,900 --> 00:06:54,550
could be a line string describing the

00:06:50,850 --> 00:06:59,050
portion of road that is a traffic is in

00:06:54,550 --> 00:07:02,680
traffic jam conditions so this is one

00:06:59,050 --> 00:07:05,710
example another example a real one this

00:07:02,680 --> 00:07:08,380
is state of the map so the word is a

00:07:05,710 --> 00:07:11,620
convention is its type is its schedule

00:07:08,380 --> 00:07:13,810
we have the time when it starts when it

00:07:11,620 --> 00:07:17,050
stops we have the website we can add

00:07:13,810 --> 00:07:19,990
more information more or less like osm

00:07:17,050 --> 00:07:27,520
tags we can have properties with with

00:07:19,990 --> 00:07:32,320
values it's really a work in progress

00:07:27,520 --> 00:07:35,710
it's I got the idea more than two years

00:07:32,320 --> 00:07:39,130
ago but it took time to decide to start

00:07:35,710 --> 00:07:44,440
something the first lines of code are

00:07:39,130 --> 00:07:48,880
not very old I started in April and open

00:07:44,440 --> 00:07:56,680
the first API back end so we can query

00:07:48,880 --> 00:08:03,450
the database for the moment database is

00:07:56,680 --> 00:08:06,580
mainly populated with data coming from

00:08:03,450 --> 00:08:10,720
sources that are freely available or

00:08:06,580 --> 00:08:12,940
that okay does website showing a traffic

00:08:10,720 --> 00:08:16,650
jam and thing like that I'm crawling

00:08:12,940 --> 00:08:20,400
them and stowing that in the database I

00:08:16,650 --> 00:08:24,700
focused mainly on Paris Area to have

00:08:20,400 --> 00:08:29,730
enough data density in one area to be

00:08:24,700 --> 00:08:33,270
able to show the possibilities of such a

00:08:29,730 --> 00:08:37,630
tool so there's traffic conditions

00:08:33,270 --> 00:08:41,020
around Paris also traffic condition in

00:08:37,630 --> 00:08:45,479
some French motorways public transport

00:08:41,020 --> 00:08:45,479
incidents in Paris we have

00:08:46,590 --> 00:08:55,240
it allows me to make statistics air

00:08:51,160 --> 00:09:01,360
quality water levels flood alert we had

00:08:55,240 --> 00:09:03,760
floods around Paris in recently and okay

00:09:01,360 --> 00:09:07,810
so I this is interesting that I to

00:09:03,760 --> 00:09:10,600
publish through the API airport weather

00:09:07,810 --> 00:09:14,560
condition but also earthquakes or things

00:09:10,600 --> 00:09:17,050
like that there's very few events coming

00:09:14,560 --> 00:09:19,870
from people from crowd sourcing of

00:09:17,050 --> 00:09:22,270
course it's a very new project but I

00:09:19,870 --> 00:09:25,510
wanted to have enough data so that it's

00:09:22,270 --> 00:09:28,300
interesting to interact with the API so

00:09:25,510 --> 00:09:30,880
now we have more than 16 million events

00:09:28,300 --> 00:09:34,589
in the database it's also a way to test

00:09:30,880 --> 00:09:42,100
the code that I wrote when there is

00:09:34,589 --> 00:09:48,460
enough data I've set up a REST API to

00:09:42,100 --> 00:09:52,060
share events so we can create even read

00:09:48,460 --> 00:09:57,339
access existing events take them delete

00:09:52,060 --> 00:09:59,170
them the payload is geo jeezum and the

00:09:57,339 --> 00:10:05,050
backend the coolant back end is written

00:09:59,170 --> 00:10:07,960
with a postgresql police and Python what

00:10:05,050 --> 00:10:09,850
is also interesting is the seven th API

00:10:07,960 --> 00:10:14,800
you can see us for advanced in the

00:10:09,850 --> 00:10:19,360
database you can search any combination

00:10:14,800 --> 00:10:23,190
of what where and when the where part

00:10:19,360 --> 00:10:27,010
can be a bounding box at distance from

00:10:23,190 --> 00:10:30,220
latitude longitude point it can also be

00:10:27,010 --> 00:10:33,720
a distance around a polyline it's that's

00:10:30,220 --> 00:10:40,030
interesting because if you can put a

00:10:33,720 --> 00:10:42,459
route with a routing engine you can then

00:10:40,030 --> 00:10:45,190
query the API to know if there are

00:10:42,459 --> 00:10:50,260
events around the the route that has

00:10:45,190 --> 00:10:52,150
been computed of course it would be more

00:10:50,260 --> 00:10:57,180
interesting to have the routing engine

00:10:52,150 --> 00:11:01,260
directly linking into account events but

00:10:57,180 --> 00:11:04,140
okay that's next steps the when part can

00:11:01,260 --> 00:11:09,630
be relative so it's easier to query the

00:11:04,140 --> 00:11:13,080
API you want to know traffic Evans in

00:11:09,630 --> 00:11:19,200
the last 15 minutes around that location

00:11:13,080 --> 00:11:23,040
okay you get them here are a few example

00:11:19,200 --> 00:11:25,260
of reuses this is a map that shows I

00:11:23,040 --> 00:11:27,930
made it this morning so there were alive

00:11:25,260 --> 00:11:30,480
Evans this morning its traffic

00:11:27,930 --> 00:11:32,790
conditions around Paris with accidents

00:11:30,480 --> 00:11:37,530
with a road work with things like that

00:11:32,790 --> 00:11:39,840
it's simple query to the API returning a

00:11:37,530 --> 00:11:44,030
Geo design collection and it's displayed

00:11:39,840 --> 00:11:49,440
directly on you map 0 line of code

00:11:44,030 --> 00:11:53,610
another example this is a 2016 to the

00:11:49,440 --> 00:11:56,340
four stages so you can see where are the

00:11:53,610 --> 00:11:59,100
truth de France went this year okay the

00:11:56,340 --> 00:12:01,940
other example there's many kind of

00:11:59,100 --> 00:12:05,550
events like that I tried to put in the

00:12:01,940 --> 00:12:07,860
database you see it's not only Road

00:12:05,550 --> 00:12:11,720
Evans it's more than that it can be good

00:12:07,860 --> 00:12:14,660
to relevant it can be sportive and to

00:12:11,720 --> 00:12:18,450
another example it's the last earthquake

00:12:14,660 --> 00:12:25,010
today we we add the an earthquake of

00:12:18,450 --> 00:12:25,010
magnitude 6.5 in the Philippines okay

00:12:31,860 --> 00:12:40,920
so the project is a

00:12:34,620 --> 00:12:44,370
project the cloud is on github the API

00:12:40,920 --> 00:12:48,780
is running it has been running since

00:12:44,370 --> 00:12:54,200
April it's a small server so it would

00:12:48,780 --> 00:12:57,180
not scale if we put billions of Evans

00:12:54,200 --> 00:13:02,010
but it's good to do experiments with

00:12:57,180 --> 00:13:06,960
that the the the API is documented on

00:13:02,010 --> 00:13:13,190
the wiki and your feedback is welcome

00:13:06,960 --> 00:13:13,190
and your questions now are welcome

00:13:22,290 --> 00:13:33,759
you question from this nice dog are

00:13:25,389 --> 00:13:35,620
there any questions hi I'm Easter any

00:13:33,759 --> 00:13:39,750
history feature for events planned so I

00:13:35,620 --> 00:13:39,750
can look up who modify the data and when

00:13:40,380 --> 00:13:47,050
there's not the same in the current of

00:13:44,579 --> 00:13:50,290
implementation there's not the same

00:13:47,050 --> 00:13:52,360
history history zation of data that what

00:13:50,290 --> 00:13:55,750
we have in OpenStreetMap is something

00:13:52,360 --> 00:13:58,720
that we could implement the thing is

00:13:55,750 --> 00:14:00,940
it's not only real time even so when you

00:13:58,720 --> 00:14:02,889
create an event in the database he even

00:14:00,940 --> 00:14:08,310
stays in the database so you can query

00:14:02,889 --> 00:14:08,310
for traffic jam last month for example

00:14:13,050 --> 00:14:24,430
hi why not using calda and instead

00:14:17,259 --> 00:14:27,819
creating a new API it's possible to to

00:14:24,430 --> 00:14:31,569
to interact in another way using Cal

00:14:27,819 --> 00:14:34,569
David it's just ok I started something

00:14:31,569 --> 00:14:36,490
with based on geo jeezum maybe maybe

00:14:34,569 --> 00:14:39,220
it's not a good idea i don't know but at

00:14:36,490 --> 00:14:42,730
least i wanted to start something and it

00:14:39,220 --> 00:14:48,220
makes things very easy to to to use and

00:14:42,730 --> 00:14:50,019
caldas may be more focused on I don't I

00:14:48,220 --> 00:14:53,800
don't know if Kel that could be used to

00:14:50,019 --> 00:14:59,699
describe traffic jam I don't know I'm

00:14:53,800 --> 00:14:59,699
not sure about that yeah

00:15:00,620 --> 00:15:04,280
and thank you I can certainly see the

00:15:02,300 --> 00:15:06,380
value of this and maintaining opening

00:15:04,280 --> 00:15:09,830
times and opening dates and stuff in osm

00:15:06,380 --> 00:15:13,850
is always a pain and I thought my

00:15:09,830 --> 00:15:32,210
questionnaire and now offered on the

00:15:13,850 --> 00:15:35,150
question thank you is the structure of

00:15:32,210 --> 00:15:38,420
the events is it open gonna have tags

00:15:35,150 --> 00:15:40,520
and can i determine can i say i have a

00:15:38,420 --> 00:15:44,750
new type of event that you've never

00:15:40,520 --> 00:15:48,080
thought of yeah it's absolutely open

00:15:44,750 --> 00:15:50,120
there's no there's not no checking in

00:15:48,080 --> 00:15:52,820
the kind of events for the moment the

00:15:50,120 --> 00:15:57,740
only thing that the API checks is that

00:15:52,820 --> 00:16:01,700
you must have a type what when start off

00:15:57,740 --> 00:16:04,070
top and the geometry if all this is

00:16:01,700 --> 00:16:06,620
there it's fine and can I then

00:16:04,070 --> 00:16:09,710
interrogate the database by these tags

00:16:06,620 --> 00:16:14,570
yes there's an overpass API there's no

00:16:09,710 --> 00:16:17,690
an overpass API I more or less it's the

00:16:14,570 --> 00:16:20,420
idea is this at least if you don't have

00:16:17,690 --> 00:16:22,910
a search function right now it doesn't

00:16:20,420 --> 00:16:26,960
make the project very interesting and

00:16:22,910 --> 00:16:30,080
that's why I also worked on the search

00:16:26,960 --> 00:16:34,130
part and not only on the create read the

00:16:30,080 --> 00:16:37,640
thing first of all I really like the

00:16:34,130 --> 00:16:39,440
idea of the project and also he was

00:16:37,640 --> 00:16:41,630
thing about versioning I would think of

00:16:39,440 --> 00:16:43,670
visioning a youth kids possible use case

00:16:41,630 --> 00:16:45,590
would be when like I'm adding an event

00:16:43,670 --> 00:16:47,420
and then I have to change our son like

00:16:45,590 --> 00:16:50,000
this and then I would like to edit that

00:16:47,420 --> 00:16:51,920
event on the database so i could add

00:16:50,000 --> 00:16:53,870
some modification like maybe the venue

00:16:51,920 --> 00:16:55,430
will change because of my no intent is

00:16:53,870 --> 00:16:58,550
down and i will change it not the places

00:16:55,430 --> 00:17:01,750
so this is why i would good useful to be

00:16:58,550 --> 00:17:04,220
able to modify but having a global data

00:17:01,750 --> 00:17:05,870
database that i could use it would I

00:17:04,220 --> 00:17:07,610
found it really useful in a lot of

00:17:05,870 --> 00:17:09,350
different stuff also because it would

00:17:07,610 --> 00:17:12,100
allow me to stand outside different

00:17:09,350 --> 00:17:13,900
stuff like let's say I do haka Tonino

00:17:12,100 --> 00:17:15,220
Romania is that like that and then i

00:17:13,900 --> 00:17:17,970
will go to san francisco and i want to

00:17:15,220 --> 00:17:17,970
search for hacker

00:17:22,669 --> 00:17:26,669
event that will be and also for

00:17:24,659 --> 00:17:29,639
posterity because I will have them hold

00:17:26,669 --> 00:17:32,820
them to check to do statistic to yeah

00:17:29,639 --> 00:17:37,529
but it's like openstreetmap the you can

00:17:32,820 --> 00:17:40,200
create any tag but we agree to use the

00:17:37,529 --> 00:17:43,379
same tags so that it makes that I useful

00:17:40,200 --> 00:17:47,700
so i think the the we can have the same

00:17:43,379 --> 00:17:50,970
approach but okay it doesn't close the

00:17:47,700 --> 00:17:53,669
the system to limit to some kind of

00:17:50,970 --> 00:17:55,710
events issue that that's the interesting

00:17:53,669 --> 00:17:57,570
part and i really like that in

00:17:55,710 --> 00:17:59,580
OpenStreetMap and i wanted to keep the

00:17:57,570 --> 00:18:01,649
same also i would see this in

00:17:59,580 --> 00:18:03,450
humanitarian news is like I know the

00:18:01,649 --> 00:18:05,129
spread of malaria different cases of

00:18:03,450 --> 00:18:06,840
Ebola stuff like that that could be

00:18:05,129 --> 00:18:09,929
mapped on the same taking schema and

00:18:06,840 --> 00:18:12,570
then if I want to query this all I know

00:18:09,929 --> 00:18:14,519
events in the past or I can go and have

00:18:12,570 --> 00:18:16,529
a picnic I only have to change the tags

00:18:14,519 --> 00:18:19,350
came I saw desk and we know it would be

00:18:16,529 --> 00:18:21,869
really useful yeah we you can see it

00:18:19,350 --> 00:18:25,110
from on the word spot so you can limit

00:18:21,869 --> 00:18:29,190
on on only public transport events and

00:18:25,110 --> 00:18:33,419
not weather or traffic Evans and yeah

00:18:29,190 --> 00:18:35,519
it's completely possible but it's really

00:18:33,419 --> 00:18:41,970
an open tagging system like

00:18:35,519 --> 00:18:45,899
openstreetmap the only limits I did not

00:18:41,970 --> 00:18:49,649
say it's public event not private event

00:18:45,899 --> 00:18:55,590
we are not going to put our own calendar

00:18:49,649 --> 00:18:59,909
or rendezvous barbecue if it's a public

00:18:55,590 --> 00:19:01,919
barbecue yet so my question for what for

00:18:59,909 --> 00:19:05,879
I have a mental block was and is it

00:19:01,919 --> 00:19:08,610
linked to OS ma a.m. IDs and also is in

00:19:05,879 --> 00:19:11,429
terms of a feed is it possible to

00:19:08,610 --> 00:19:13,830
essentially get a sort of time paginate

00:19:11,429 --> 00:19:15,690
it change feed so that for example an

00:19:13,830 --> 00:19:17,970
importing process could could

00:19:15,690 --> 00:19:18,899
essentially get what's there but with

00:19:17,970 --> 00:19:21,299
the knowledge that anything that its

00:19:18,899 --> 00:19:24,289
previously retreat had you know what

00:19:21,299 --> 00:19:28,320
wasn't in the same day it isn't in data

00:19:24,289 --> 00:19:30,500
about osm ideas I think it could run

00:19:28,320 --> 00:19:34,440
more or less like what we do with a

00:19:30,500 --> 00:19:39,120
wikipedia org wiki that I ideas that by

00:19:34,440 --> 00:19:41,399
a tag providing the idea of the object

00:19:39,120 --> 00:19:44,370
in OpenStreetMap or the the wiki that

00:19:41,399 --> 00:19:47,429
idea on some events that I created I

00:19:44,370 --> 00:19:50,519
added weekly data ID for example or

00:19:47,429 --> 00:19:52,289
opens with Matt I idea it's really it's

00:19:50,519 --> 00:19:54,269
really experimental for the one on but

00:19:52,289 --> 00:19:56,970
it's something to test and see what the

00:19:54,269 --> 00:19:59,730
use case we can have with that about

00:19:56,970 --> 00:20:02,190
dating events each event as a unique

00:19:59,730 --> 00:20:04,139
idea and when you create an even it

00:20:02,190 --> 00:20:06,480
returns you the idea so if you want to

00:20:04,139 --> 00:20:09,000
keep track of that and update it later

00:20:06,480 --> 00:20:11,460
you can do it you can also lock an event

00:20:09,000 --> 00:20:14,519
when you create an event you can give a

00:20:11,460 --> 00:20:16,950
secret and nobody can change the event

00:20:14,519 --> 00:20:19,019
without providing the secret again and

00:20:16,950 --> 00:20:22,529
of course the secrets never return when

00:20:19,019 --> 00:20:25,350
you access the event I did that for the

00:20:22,529 --> 00:20:29,490
police because the police in Paris they

00:20:25,350 --> 00:20:32,009
are doing an experiment to send alerts

00:20:29,490 --> 00:20:34,019
in case of emergency and of course they

00:20:32,009 --> 00:20:37,169
want that if they create an allowed

00:20:34,019 --> 00:20:39,899
don't want somebody to delete it so

00:20:37,169 --> 00:20:42,299
that's why I created that secret system

00:20:39,899 --> 00:20:44,789
it's not login you don't need account

00:20:42,299 --> 00:20:46,649
there's not again and the API is

00:20:44,789 --> 00:20:50,450
completely open but at least you have

00:20:46,649 --> 00:20:50,450
control on the oven that you created

00:20:53,299 --> 00:20:57,990
yeah you can create fake around like you

00:20:56,250 --> 00:21:04,710
can create fake that I in OpenStreetMap

00:20:57,990 --> 00:21:06,750
arise as scheduled 7th heaven recurring

00:21:04,710 --> 00:21:09,960
events hahaha did you think about

00:21:06,750 --> 00:21:12,179
extending the when description or living

00:21:09,960 --> 00:21:14,970
at leaving it to the judge the

00:21:12,179 --> 00:21:17,070
description for the moment I don't know

00:21:14,970 --> 00:21:20,730
how to handle them in my database so i

00:21:17,070 --> 00:21:26,159
have no real answer for that but i would

00:21:20,730 --> 00:21:29,190
be very happy to have other people try

00:21:26,159 --> 00:21:32,279
to find a solution with me because for

00:21:29,190 --> 00:21:34,590
example for public transport this

00:21:32,279 --> 00:21:38,129
timetable of things like that it's

00:21:34,590 --> 00:21:39,929
always the same hour every day and we

00:21:38,129 --> 00:21:43,019
are not going to create an event for

00:21:39,929 --> 00:21:44,850
each time the bus stops at at one place

00:21:43,019 --> 00:21:51,720
so

00:21:44,850 --> 00:21:54,600
it's sing to to add yes hi I if I

00:21:51,720 --> 00:21:57,570
understand you do web crawling to get

00:21:54,600 --> 00:22:00,210
additional data and bind them in your

00:21:57,570 --> 00:22:02,070
and store them in your database and

00:22:00,210 --> 00:22:06,030
after you call them where there is a

00:22:02,070 --> 00:22:09,720
query and you display them I don't know

00:22:06,030 --> 00:22:13,740
did you manage to think about the

00:22:09,720 --> 00:22:17,100
problem that web growling can do to

00:22:13,740 --> 00:22:19,710
other servers because if you do bad web

00:22:17,100 --> 00:22:22,530
growling you can increase the load of

00:22:19,710 --> 00:22:25,350
other servers and false their traffic

00:22:22,530 --> 00:22:27,930
statistics did you manage to think about

00:22:25,350 --> 00:22:31,800
that problem and the way you can crawl

00:22:27,930 --> 00:22:36,030
over that servers to not fold their

00:22:31,800 --> 00:22:39,540
statistics for the crawling I'm doing

00:22:36,030 --> 00:22:45,150
for example the public transport in

00:22:39,540 --> 00:22:52,560
Paris I'm querying ajisen design file

00:22:45,150 --> 00:22:55,980
once every minute I everyone one once

00:22:52,560 --> 00:22:58,050
per minute so it's not it's not real

00:22:55,980 --> 00:23:01,800
time but they do not publish that in

00:22:58,050 --> 00:23:03,660
real time anyway so yeah it depends on

00:23:01,800 --> 00:23:05,910
the kind of crawling you're doing of

00:23:03,660 --> 00:23:12,440
course but I don't think it's big loads

00:23:05,910 --> 00:23:12,440
on this kind of servers last question

00:23:18,279 --> 00:23:23,590
Simon isn't here so I'm going to ask

00:23:20,570 --> 00:23:29,419
what's a license of the danger itself

00:23:23,590 --> 00:23:31,190
okay we see that because it's difficult

00:23:29,419 --> 00:23:35,139
because you have different sources and

00:23:31,190 --> 00:23:38,389
so on so I guess yes it clearly it's

00:23:35,139 --> 00:23:42,309
okay i put I've put that problem on the

00:23:38,389 --> 00:23:45,409
side for the moment address okay but

00:23:42,309 --> 00:23:51,769
that's also why if it depends how you

00:23:45,409 --> 00:23:57,499
see the the the system if you see see it

00:23:51,769 --> 00:24:01,969
as a CH ng know you don't care that much

00:23:57,499 --> 00:24:05,269
about that the data license ok what's

00:24:01,969 --> 00:24:10,639
the license of the search result from

00:24:05,269 --> 00:24:12,529
google ok so i can define my terminal

00:24:10,639 --> 00:24:14,749
services but they have nothing to do

00:24:12,529 --> 00:24:20,089
with the same of services that the sides

00:24:14,749 --> 00:24:23,659
are crawling so okay its one way to deal

00:24:20,089 --> 00:24:26,749
with that but the other thing is the

00:24:23,659 --> 00:24:29,089
contribution the contributors term what

00:24:26,749 --> 00:24:31,249
happens to the data that you put in the

00:24:29,089 --> 00:24:35,149
database and I think this is even this

00:24:31,249 --> 00:24:38,149
is more important in fact but this is

00:24:35,149 --> 00:24:43,419
something to talk because I have no

00:24:38,149 --> 00:24:43,419
clear answer about that thang

00:24:48,530 --> 00:24:50,590

YouTube URL: https://www.youtube.com/watch?v=8FNwbioRjQw


