Title: Tiles under heavy artillery: Serving one billion maps per month
Publication date: 2016-10-17
Playlist: State of the Map 2016, Friday QC
Description: 
	Loic Ortola at State of the Map 2016
http://2016.stateofthemap.org/2016/tiles-under-heavy-artillery/
(some sound issues for the start of the video)

Some people wonder whether OSM can be a great fit for their business. In this talk, we are not going to discuss the documentation, maintainability, updates, and robustness issues of OSM-based maps. Neither will we try convincing you that going for OSM is an easy task.

In this talk, we decided to save our breath, take out our heaviest Gatling weaponry and start shooting instead. Can serving maps with OSM be an efficient, distributed, business-grade system? Bring your bulletproof vest and come find out.
Captions: 
	00:00:00,079 --> 00:00:05,339
gentlemen next up is Louie from job and

00:00:03,449 --> 00:00:08,519
he's one of the first people who plugged

00:00:05,339 --> 00:00:17,340
in his audio cable so we are looking for

00:00:08,519 --> 00:00:22,050
an audio-visual presentation hello can

00:00:17,340 --> 00:00:23,939
you hear me fine as well awesome I just

00:00:22,050 --> 00:00:25,560
have an announcement to make we have too

00:00:23,939 --> 00:00:27,930
many teachers we don't know what to do

00:00:25,560 --> 00:00:30,960
with them so you know if you guys want

00:00:27,930 --> 00:00:37,680
there's Tim right here has got you

00:00:30,960 --> 00:00:43,469
covered so hello my name is Loic and I'm

00:00:37,680 --> 00:00:46,140
part of the job Maps family twenty years

00:00:43,469 --> 00:00:48,450
ago when most people were hearing the

00:00:46,140 --> 00:00:51,090
word maps this is what they would

00:00:48,450 --> 00:00:55,260
imagine valeo piece of paper you'd seen

00:00:51,090 --> 00:00:57,570
your golf compartment back then making a

00:00:55,260 --> 00:01:03,840
trip was something you plan in advance

00:00:57,570 --> 00:01:06,960
at home today it's not exactly the same

00:01:03,840 --> 00:01:08,970
maps have completely reshaped our vision

00:01:06,960 --> 00:01:11,549
of transit in fact they're now

00:01:08,970 --> 00:01:13,830
everywhere it's in your building it's in

00:01:11,549 --> 00:01:17,189
your train station it's within your car

00:01:13,830 --> 00:01:21,180
now maps are in your pocket 24 hours a

00:01:17,189 --> 00:01:23,810
day you don't only use them before a

00:01:21,180 --> 00:01:27,270
trip but you use them also in real time

00:01:23,810 --> 00:01:29,579
when you add when you exit the metro to

00:01:27,270 --> 00:01:35,850
be driven home at night or even to catch

00:01:29,579 --> 00:01:38,909
the nearest Pikachu I've got a question

00:01:35,850 --> 00:01:43,829
to ask how many of you here have seen or

00:01:38,909 --> 00:01:45,570
use the map in the past 24 hours okay I

00:01:43,829 --> 00:01:47,520
know the odds are little bit bigger than

00:01:45,570 --> 00:01:51,840
usual in this room but you know you get

00:01:47,520 --> 00:01:54,780
the idea more importantly every single

00:01:51,840 --> 00:01:59,310
one of you here is here in this room

00:01:54,780 --> 00:02:01,560
because of a map and when digital map

00:01:59,310 --> 00:02:04,890
started to appear a whole new world of

00:02:01,560 --> 00:02:06,890
service is just starting popping out but

00:02:04,890 --> 00:02:09,149
someone had to provide those maps right

00:02:06,890 --> 00:02:12,209
this is when the brand public heard

00:02:09,149 --> 00:02:13,400
about new great mapping leaders which

00:02:12,209 --> 00:02:18,330
started to emerge

00:02:13,400 --> 00:02:20,870
and when that become a critical asset

00:02:18,330 --> 00:02:24,060
for service you manners come into play

00:02:20,870 --> 00:02:26,130
it could be your independence it can be

00:02:24,060 --> 00:02:28,590
your data governance it could be

00:02:26,130 --> 00:02:30,540
intellectual property it could be also

00:02:28,590 --> 00:02:33,330
some custom needs this is what

00:02:30,540 --> 00:02:37,350
openstreetmap becomes not just a good

00:02:33,330 --> 00:02:42,780
but a great alternative but then there's

00:02:37,350 --> 00:02:45,090
one question it's a business great so

00:02:42,780 --> 00:02:47,070
what does this is great even me amongst

00:02:45,090 --> 00:02:50,010
other things a business great service

00:02:47,070 --> 00:02:53,430
usually means LEDs at least some how

00:02:50,010 --> 00:02:55,800
efficient may be scalable available and

00:02:53,430 --> 00:02:57,750
then you know on top of it if you can

00:02:55,800 --> 00:03:01,860
get some elasticity and support above

00:02:57,750 --> 00:03:03,720
the box this is just great and

00:03:01,860 --> 00:03:06,330
openstreetmap is kind of a great

00:03:03,720 --> 00:03:08,270
solution right we would all love to have

00:03:06,330 --> 00:03:10,740
those ABS that's for sure but you know

00:03:08,270 --> 00:03:14,220
the licensing model is awesome it's

00:03:10,740 --> 00:03:19,190
community driven and it's been you know

00:03:14,220 --> 00:03:22,770
going on for above 10 years now but then

00:03:19,190 --> 00:03:26,190
it gets trickier the second you try to

00:03:22,770 --> 00:03:27,870
set up your first map server right you

00:03:26,190 --> 00:03:30,870
feel like you've just opened a Pandora's

00:03:27,870 --> 00:03:33,960
box and a few years ago when we started

00:03:30,870 --> 00:03:37,110
working with osm someone told me you

00:03:33,960 --> 00:03:39,090
know just don't worry osm it's like a

00:03:37,110 --> 00:03:41,550
stairway you know you'd rather take the

00:03:39,090 --> 00:03:43,260
elevator we know that but you know once

00:03:41,550 --> 00:03:47,220
you reach the first step then you're

00:03:43,260 --> 00:03:49,350
just going on and on you'll be fine it

00:03:47,220 --> 00:03:51,600
took me years to understand what he

00:03:49,350 --> 00:03:53,790
meant and I finally got it so today

00:03:51,600 --> 00:03:58,400
ladies and gentlemen i am proud to share

00:03:53,790 --> 00:03:58,400
with you the first step to openstreetmap

00:04:00,140 --> 00:04:05,720
and I don't know you only gave me 20

00:04:03,750 --> 00:04:08,610
minutes and such a question about

00:04:05,720 --> 00:04:11,100
business greatness would require descent

00:04:08,610 --> 00:04:12,959
amount of explanation and if we had all

00:04:11,100 --> 00:04:15,120
day this is probably what we would be

00:04:12,959 --> 00:04:16,950
covering but you've been spending the

00:04:15,120 --> 00:04:18,390
day here hearing all of others great

00:04:16,950 --> 00:04:22,350
talks and I guess that would be too

00:04:18,390 --> 00:04:25,229
boring so you know we thought with the

00:04:22,350 --> 00:04:27,000
team wouldn't it be better to try and

00:04:25,229 --> 00:04:29,070
show a real world example

00:04:27,000 --> 00:04:31,020
that would just prove that no man

00:04:29,070 --> 00:04:34,410
pursueth bap application its business

00:04:31,020 --> 00:04:36,270
grade in fact so we decided to change

00:04:34,410 --> 00:04:39,900
the question and I apologize for those

00:04:36,270 --> 00:04:41,910
who are here for the original one we

00:04:39,900 --> 00:04:45,360
wanted to answer a really important

00:04:41,910 --> 00:04:48,390
question a question that keeps everyone

00:04:45,360 --> 00:04:51,780
up at night and a question you may not

00:04:48,390 --> 00:04:54,900
even have dared to ask yourself tonight

00:04:51,780 --> 00:04:56,790
together we are going to enter can open

00:04:54,900 --> 00:05:00,390
street map services sustained a

00:04:56,790 --> 00:05:03,680
worldwide zombie infection because this

00:05:00,390 --> 00:05:10,730
is a life and death matter right and

00:05:03,680 --> 00:05:10,730
this is the trailer with music

00:05:47,519 --> 00:05:52,860
this is a huge trademark violation right

00:05:50,529 --> 00:05:52,860
here

00:06:19,680 --> 00:06:27,280
so this is it zombies have infected

00:06:23,199 --> 00:06:30,520
earth most ETS and big cities went dark

00:06:27,280 --> 00:06:32,050
so most services are down and a

00:06:30,520 --> 00:06:34,210
community of great openstreetmap

00:06:32,050 --> 00:06:36,069
contributors and developers just

00:06:34,210 --> 00:06:38,620
released this new app that called ways

00:06:36,069 --> 00:06:40,810
ways obviously for world against a

00:06:38,620 --> 00:06:43,030
zombie epidemic you know everything that

00:06:40,810 --> 00:06:47,169
would do something else that you may

00:06:43,030 --> 00:06:49,599
know of is completely unfortunate what

00:06:47,169 --> 00:06:54,729
this app does is that it localizes state

00:06:49,599 --> 00:06:57,069
zones and nearby resources so let's get

00:06:54,729 --> 00:06:59,770
a little serious this is our pandemic

00:06:57,069 --> 00:07:02,740
scenario eighty-four percent of the

00:06:59,770 --> 00:07:06,150
population contaminated meeting there is

00:07:02,740 --> 00:07:08,949
one point 12 billion people and infected

00:07:06,150 --> 00:07:11,169
because of most big cities went dark

00:07:08,949 --> 00:07:13,629
there is only one percent of remaining

00:07:11,169 --> 00:07:16,870
population with both electricity and

00:07:13,629 --> 00:07:22,120
network coverage so we could hope at

00:07:16,870 --> 00:07:25,539
launch time at 8pm a big peak of 1

00:07:22,120 --> 00:07:31,539
million potential users let's say in a

00:07:25,539 --> 00:07:33,789
wrap of 30 minutes basically once when

00:07:31,539 --> 00:07:36,940
you want to stimulate high populations

00:07:33,789 --> 00:07:38,680
of users you have to used a scenario and

00:07:36,940 --> 00:07:42,750
a load testing tool so this is the

00:07:38,680 --> 00:07:46,419
scenario basically the scenery will be

00:07:42,750 --> 00:07:48,699
just a person finding a set of

00:07:46,419 --> 00:07:51,610
coordinates in zooming in zooming by

00:07:48,699 --> 00:07:54,310
zoom very slowly and just replicating

00:07:51,610 --> 00:07:58,839
this over and over to tens hundreds

00:07:54,310 --> 00:08:01,479
thousands tens of thousands of users the

00:07:58,839 --> 00:08:04,569
load testing tool we chose is called

00:08:01,479 --> 00:08:07,689
Gatling you may have heard about it it's

00:08:04,569 --> 00:08:09,819
one of the greatest open source tools we

00:08:07,689 --> 00:08:11,860
chose the business version because it

00:08:09,819 --> 00:08:14,020
has cluster mode it has direct metrics

00:08:11,860 --> 00:08:18,759
and in the loudest for live reporting

00:08:14,020 --> 00:08:21,279
which we need it for this test I don't

00:08:18,759 --> 00:08:24,279
want to get in too much details here but

00:08:21,279 --> 00:08:25,529
basically the injectors are what

00:08:24,279 --> 00:08:28,889
stimulates your simulation

00:08:25,529 --> 00:08:30,619
you're a population of users and then we

00:08:28,889 --> 00:08:33,449
wanted to stick to the original

00:08:30,619 --> 00:08:36,749
openstreetmap stack so this is employs

00:08:33,449 --> 00:08:41,310
em mot I'll render d and squid as a

00:08:36,749 --> 00:08:44,249
proxy / cash what changed is that

00:08:41,310 --> 00:08:46,529
because we wanted to experiment the

00:08:44,249 --> 00:08:49,589
business greatness we try to do an

00:08:46,529 --> 00:08:51,779
elastic scenario with OVH meaning that

00:08:49,589 --> 00:08:55,110
when the demand gets higher the number

00:08:51,779 --> 00:08:57,480
of caches and render servers will just

00:08:55,110 --> 00:09:01,069
add up and we'll just pump and arrive in

00:08:57,480 --> 00:09:04,350
the pool until the pool limit is reached

00:09:01,069 --> 00:09:07,170
so there's another video where we're

00:09:04,350 --> 00:09:08,670
going to see the results all together so

00:09:07,170 --> 00:09:10,740
the first thing you do when you launch

00:09:08,670 --> 00:09:12,809
the scenario is basically upload the

00:09:10,740 --> 00:09:15,269
scenario details on to a cluster and

00:09:12,809 --> 00:09:18,480
then this is the metrics that we are

00:09:15,269 --> 00:09:20,399
going to look at at left it's the number

00:09:18,480 --> 00:09:23,370
of unique users that you're going to get

00:09:20,399 --> 00:09:25,639
this is the test duration obviously

00:09:23,370 --> 00:09:28,170
we're not going to do real time here

00:09:25,639 --> 00:09:30,720
what is going to be interesting is the

00:09:28,170 --> 00:09:32,550
number of tiles per second so the

00:09:30,720 --> 00:09:35,699
throughput and number of times the

00:09:32,550 --> 00:09:37,680
server is giving to users the renderer

00:09:35,699 --> 00:09:40,079
is the number of tasks that will be

00:09:37,680 --> 00:09:42,809
computed in real time instead of just

00:09:40,079 --> 00:09:45,089
caches and this is it just started and

00:09:42,809 --> 00:09:47,459
on your right you got the cash

00:09:45,089 --> 00:09:49,889
throughput so this is the amount of

00:09:47,459 --> 00:09:54,449
megabits per second that is published on

00:09:49,889 --> 00:09:56,939
the internet what you can see here is

00:09:54,449 --> 00:10:00,389
that the population of users is slowly

00:09:56,939 --> 00:10:02,730
raising and the number of times per

00:10:00,389 --> 00:10:05,430
second of cache servers will soon hit a

00:10:02,730 --> 00:10:08,189
limit because at one point to cache

00:10:05,430 --> 00:10:11,970
servers is not enough so what states

00:10:08,189 --> 00:10:14,100
about 80 x 80 k times per second and now

00:10:11,970 --> 00:10:16,889
the cache server has just been increased

00:10:14,100 --> 00:10:19,050
to a new cache server response into the

00:10:16,889 --> 00:10:21,959
pool and was added as one of the

00:10:19,050 --> 00:10:24,209
available resources so now the limits

00:10:21,959 --> 00:10:27,240
you can see that servers are getting

00:10:24,209 --> 00:10:29,670
spun and spun one by one the renderers

00:10:27,240 --> 00:10:34,139
are also increasing because they reach

00:10:29,670 --> 00:10:37,589
the limit so right now it's been about 3

00:10:34,139 --> 00:10:38,209
million users unique users that did and

00:10:37,589 --> 00:10:42,589
finished

00:10:38,209 --> 00:10:48,230
treo in about 19 minutes our throughput

00:10:42,589 --> 00:10:51,050
of a task per second is about 500 k task

00:10:48,230 --> 00:10:57,860
per second and it will rise and reach

00:10:51,050 --> 00:11:03,139
the limit to about 660,000 times per

00:10:57,860 --> 00:11:05,119
second so with 16 cache servers and six

00:11:03,139 --> 00:11:09,050
renderers we can hope for a throughput

00:11:05,119 --> 00:11:12,740
of about six hundred thousand times per

00:11:09,050 --> 00:11:15,259
second in cash and 10,000 times per

00:11:12,740 --> 00:11:19,339
second generated by rendering servers on

00:11:15,259 --> 00:11:21,769
the fly what is not the network

00:11:19,339 --> 00:11:26,569
throughput and the bandwidth is more

00:11:21,769 --> 00:11:31,189
than 60 gigabits per second it's a big

00:11:26,569 --> 00:11:34,069
number then we extrapolated the data

00:11:31,189 --> 00:11:36,230
after two hours of tests and this is the

00:11:34,069 --> 00:11:40,220
total number of tiles that would have

00:11:36,230 --> 00:11:43,639
been generated per month so it's about

00:11:40,220 --> 00:11:48,619
one point fifty eight trillion tiles

00:11:43,639 --> 00:11:50,179
generated per month at this rate so Ken

00:11:48,619 --> 00:11:53,660
openstreetmap service is sustained a

00:11:50,179 --> 00:11:56,059
worldwide zombie infection yes the

00:11:53,660 --> 00:11:58,549
objective was 1 billion maps this is

00:11:56,059 --> 00:12:01,720
what we promised you and with our setup

00:11:58,549 --> 00:12:04,429
we managed to reach 56 billion maps

00:12:01,720 --> 00:12:09,379
congratulations wave successfully save

00:12:04,429 --> 00:12:15,079
the planet right awesome I mean you know

00:12:09,379 --> 00:12:17,299
it's a big thing right in reality you

00:12:15,079 --> 00:12:19,369
know it could seem like a game because

00:12:17,299 --> 00:12:22,490
it's been my child stream you know just

00:12:19,369 --> 00:12:25,519
to push things and see how far you can

00:12:22,490 --> 00:12:28,519
go until a server or a service starts

00:12:25,519 --> 00:12:30,649
going down and this taught us a few

00:12:28,519 --> 00:12:32,629
lessons we're kind of running out of

00:12:30,649 --> 00:12:35,149
time so I won't get into much detail but

00:12:32,629 --> 00:12:37,639
for instance OVH which is our cloud

00:12:35,149 --> 00:12:40,910
provider that landed us all the servers

00:12:37,639 --> 00:12:42,589
for the test we went so high on public

00:12:40,910 --> 00:12:45,649
activity that we triggered their

00:12:42,589 --> 00:12:47,449
internal anti denial of service system

00:12:45,649 --> 00:12:51,249
which pretty much quarantine all our

00:12:47,449 --> 00:12:51,249
servers in there just a few seconds

00:12:51,850 --> 00:12:57,470
what we wanted to leave you with is

00:12:54,290 --> 00:13:01,759
first this bottleneck podium so in third

00:12:57,470 --> 00:13:04,190
place come CPU and I Oh caching servers

00:13:01,759 --> 00:13:07,310
without memory caching at this level of

00:13:04,190 --> 00:13:09,769
concurrency we just do too many io reads

00:13:07,310 --> 00:13:11,920
and would kill your performance so we

00:13:09,769 --> 00:13:15,519
need memory caching on cash level as

00:13:11,920 --> 00:13:18,589
some of you may know on database side

00:13:15,519 --> 00:13:22,040
the database reads of a worldwide

00:13:18,589 --> 00:13:25,579
database in passages are enormous and

00:13:22,040 --> 00:13:28,209
you at least need an SSD or even

00:13:25,579 --> 00:13:32,389
in-memory databases on on very

00:13:28,209 --> 00:13:34,610
concurrent instances the second one

00:13:32,389 --> 00:13:37,899
comes tile overdraw so what is style

00:13:34,610 --> 00:13:41,120
overdraw when you have multiple renders

00:13:37,899 --> 00:13:43,069
you need to ask you know to know which

00:13:41,120 --> 00:13:46,189
one of them you're going to ask for a

00:13:43,069 --> 00:13:48,829
child to be rendered and sometimes many

00:13:46,189 --> 00:13:52,220
people will ask different servers for

00:13:48,829 --> 00:13:54,769
the same information and this is a lot

00:13:52,220 --> 00:13:59,149
of unnecessary work and this comes by

00:13:54,769 --> 00:14:02,060
the fact that reverse proxies or proxy

00:13:59,149 --> 00:14:04,459
such as you know load balancers are not

00:14:02,060 --> 00:14:08,630
meta title where and this is a big issue

00:14:04,459 --> 00:14:11,120
and the first one is network when you

00:14:08,630 --> 00:14:13,430
rent a an instant on the cloud you

00:14:11,120 --> 00:14:16,089
usually get a hundred megabits per

00:14:13,430 --> 00:14:20,000
second to one gigabits per second of

00:14:16,089 --> 00:14:23,630
public bandwidth this is this is

00:14:20,000 --> 00:14:27,170
equivalent to about between 1k and 10k

00:14:23,630 --> 00:14:29,600
tells per second and not more so usually

00:14:27,170 --> 00:14:32,209
it is better to have very small cache

00:14:29,600 --> 00:14:34,040
it's but a lot of them instead of very

00:14:32,209 --> 00:14:35,689
big catches because the bandwidth that

00:14:34,040 --> 00:14:40,569
you're going to require would be much

00:14:35,689 --> 00:14:43,459
higher and when you have Buffy caches

00:14:40,569 --> 00:14:46,130
putting 40k cells per second on a

00:14:43,459 --> 00:14:48,410
network interface takes time basically

00:14:46,130 --> 00:14:51,259
it's a buffer that's sterilized on your

00:14:48,410 --> 00:14:54,050
network interface it's called irq its

00:14:51,259 --> 00:14:57,170
network interrupts and they become non

00:14:54,050 --> 00:15:02,509
li neglect able when you get to a very

00:14:57,170 --> 00:15:04,279
high concurrency level so now let's talk

00:15:02,509 --> 00:15:06,980
about the state of the map sir

00:15:04,279 --> 00:15:10,970
and we wanted to leave you with this

00:15:06,980 --> 00:15:13,939
general idea on the historical software

00:15:10,970 --> 00:15:17,779
stack in terms of efficiency there is no

00:15:13,939 --> 00:15:21,499
debate with 16 caches and six renderers

00:15:17,779 --> 00:15:26,870
we can do over 1.5 trillion tiles a

00:15:21,499 --> 00:15:29,360
month in terms of scalability it's still

00:15:26,870 --> 00:15:31,579
not there yet meaning the towel over

00:15:29,360 --> 00:15:33,920
drawing for instance is still something

00:15:31,579 --> 00:15:36,709
that is a real trouble because we're

00:15:33,920 --> 00:15:39,110
losing a lot of processing power drawing

00:15:36,709 --> 00:15:42,639
and rendering the same meta tiles over

00:15:39,110 --> 00:15:45,889
and over again in terms of availability

00:15:42,639 --> 00:15:48,110
render g and h ow we're out in 2008

00:15:45,889 --> 00:15:50,569
those solutions are pretty solid even

00:15:48,110 --> 00:15:55,269
though it's based on httpd who uses that

00:15:50,569 --> 00:16:00,769
anymore right in terms of elasticity

00:15:55,269 --> 00:16:04,610
well render DM up tile arrived and were

00:16:00,769 --> 00:16:07,040
met I guess for standalone architecture

00:16:04,610 --> 00:16:09,079
and this is what most of the community

00:16:07,040 --> 00:16:11,959
does usually is we have one render

00:16:09,079 --> 00:16:14,389
server maybe it does some cash and maybe

00:16:11,959 --> 00:16:17,180
we have a few caches then but you don't

00:16:14,389 --> 00:16:19,370
have elasticity meaning I want to have a

00:16:17,180 --> 00:16:21,680
renderer and then spawn another one when

00:16:19,370 --> 00:16:24,290
I have a high demand which would require

00:16:21,680 --> 00:16:28,250
a load balancer so you know the thought

00:16:24,290 --> 00:16:30,980
of a master-slave architecture but it's

00:16:28,250 --> 00:16:33,910
not dynamic and right now for the past

00:16:30,980 --> 00:16:37,660
few years with the clouds we arrived in

00:16:33,910 --> 00:16:40,279
in a transition where we relied more on

00:16:37,660 --> 00:16:42,740
dynamic registration on service

00:16:40,279 --> 00:16:46,189
discovery and this is something that the

00:16:42,740 --> 00:16:49,790
classical stack is not yet very good

00:16:46,189 --> 00:16:52,939
with in terms of support it's a two star

00:16:49,790 --> 00:16:56,259
meaning it's a bummer all the open

00:16:52,939 --> 00:16:59,569
source tools are usually developed by

00:16:56,259 --> 00:17:02,360
random people community members maybe

00:16:59,569 --> 00:17:04,850
sometimes companies but there's not one

00:17:02,360 --> 00:17:08,419
single entity that and it is the roadmap

00:17:04,850 --> 00:17:12,140
the documentation and someone somehow it

00:17:08,419 --> 00:17:14,990
gets messy but in the past ten years

00:17:12,140 --> 00:17:16,539
lots of companies have emerged which

00:17:14,990 --> 00:17:17,660
will provide you with the necessary

00:17:16,539 --> 00:17:20,210
expertise

00:17:17,660 --> 00:17:23,300
to bring you the level of support that

00:17:20,210 --> 00:17:24,890
you need and we highly advise then you

00:17:23,300 --> 00:17:30,110
rely on those people when you want to

00:17:24,890 --> 00:17:32,360
try and make your roadmap services what

00:17:30,110 --> 00:17:35,000
we shared with you tonight was just a

00:17:32,360 --> 00:17:37,970
few percent of what we discovered and

00:17:35,000 --> 00:17:40,460
what we went through and we wanted to go

00:17:37,970 --> 00:17:42,950
so much further this is why we're

00:17:40,460 --> 00:17:47,450
editing to white papers one of them was

00:17:42,950 --> 00:17:49,790
released today and it's mostly about you

00:17:47,450 --> 00:17:52,910
know discovering the main concepts what

00:17:49,790 --> 00:17:54,800
is a map what is a tile what are all the

00:17:52,910 --> 00:17:57,470
pieces of the puzzle of a map service

00:17:54,800 --> 00:17:59,050
how to combine them together while all

00:17:57,470 --> 00:18:02,690
the constraints what are the challenges

00:17:59,050 --> 00:18:06,320
um it is not written for especially

00:18:02,690 --> 00:18:08,600
super techy people so basically it's the

00:18:06,320 --> 00:18:12,290
story of 20 pages that will teach you a

00:18:08,600 --> 00:18:14,870
lot about map services the second one is

00:18:12,290 --> 00:18:17,900
going to be bigger it's going to take us

00:18:14,870 --> 00:18:20,750
more time and we really want to make a

00:18:17,900 --> 00:18:23,960
thorough investigation into the map

00:18:20,750 --> 00:18:26,720
services into creating architectures

00:18:23,960 --> 00:18:28,820
isolating bottlenecks and tell you how

00:18:26,720 --> 00:18:31,670
to get further and further and further

00:18:28,820 --> 00:18:34,370
away in terms of performance and this

00:18:31,670 --> 00:18:36,670
one is planned on being released in

00:18:34,370 --> 00:18:41,720
November we hope that we can get it out

00:18:36,670 --> 00:18:44,960
by them before finishing I wanted to

00:18:41,720 --> 00:18:47,990
thank mostly three people the first it's

00:18:44,960 --> 00:18:50,180
OVH they're getting closer to the

00:18:47,990 --> 00:18:51,860
community of open street maps and

00:18:50,180 --> 00:18:54,470
they're the ones who provided us with

00:18:51,860 --> 00:18:57,980
all the computing power we needed to

00:18:54,470 --> 00:19:00,290
bring you this test today Gallen front

00:18:57,980 --> 00:19:02,960
line because they spent hours setting up

00:19:00,290 --> 00:19:07,280
over stuff and helping us with the

00:19:02,960 --> 00:19:11,690
scenario nightmares for days and last

00:19:07,280 --> 00:19:14,090
but not least when we started this we

00:19:11,690 --> 00:19:17,720
also opened a Pandora's box and for the

00:19:14,090 --> 00:19:20,510
past few weeks the jock team did double

00:19:17,720 --> 00:19:23,180
shifts every night worked weekends just

00:19:20,510 --> 00:19:24,860
so we could give this out to you so if

00:19:23,180 --> 00:19:28,490
it weren't for them I wouldn't be here

00:19:24,860 --> 00:19:29,570
today so I really want to get a round of

00:19:28,490 --> 00:19:31,810
applause for them tonight

00:19:29,570 --> 00:19:31,810
Thank

00:19:39,300 --> 00:19:47,200
alright any questions for week with your

00:19:45,130 --> 00:19:50,440
use of impulse em you're obviously not

00:19:47,200 --> 00:19:54,250
using the same stat the style and stack

00:19:50,440 --> 00:19:56,440
as openstreetmap org and the style has a

00:19:54,250 --> 00:20:02,440
huge effect on rendering efficiency what

00:19:56,440 --> 00:20:05,020
were you using so basically so Oh smt

00:20:02,440 --> 00:20:08,470
pgsql with a classical openstreetmap

00:20:05,020 --> 00:20:10,210
stack obviously it's not the same it's

00:20:08,470 --> 00:20:12,310
not the same level because you have lots

00:20:10,210 --> 00:20:15,430
of details especially for their

00:20:12,310 --> 00:20:17,650
contributors we use your map style and

00:20:15,430 --> 00:20:20,710
an import profile that's close to what

00:20:17,650 --> 00:20:23,140
you would see on streets we used our jog

00:20:20,710 --> 00:20:26,230
style which is lighter it's mostly

00:20:23,140 --> 00:20:28,570
streets so you don't have you know all

00:20:26,230 --> 00:20:32,080
the amenities on it but you have most

00:20:28,570 --> 00:20:34,540
information housing houses hubs numbers

00:20:32,080 --> 00:20:37,630
things like this and did you explore

00:20:34,540 --> 00:20:41,620
rendered a features like storing the

00:20:37,630 --> 00:20:44,560
tiles on raros which does eliminate the

00:20:41,620 --> 00:20:49,870
duplication between re-rendering as well

00:20:44,560 --> 00:20:51,430
as pinning load balancing to geoip which

00:20:49,870 --> 00:20:53,080
in your scenario where people are

00:20:51,430 --> 00:20:57,130
viewing their local area would

00:20:53,080 --> 00:21:00,100
significantly reduce yeah re rendering

00:20:57,130 --> 00:21:02,590
as well as what were your tile store hit

00:21:00,100 --> 00:21:04,570
rates which shipping theory decrease as

00:21:02,590 --> 00:21:08,710
everything gets rounded so basically we

00:21:04,570 --> 00:21:12,310
studied both reticence F object storage

00:21:08,710 --> 00:21:15,430
systems we wanted to we wanted to just

00:21:12,310 --> 00:21:17,380
do squid and mem caching mostly because

00:21:15,430 --> 00:21:20,650
we wanted to get rid of this constraint

00:21:17,380 --> 00:21:23,290
for the tests the main reason we did

00:21:20,650 --> 00:21:26,110
this is because for LSD CD purposes and

00:21:23,290 --> 00:21:27,640
your dynamic registration of hosts there

00:21:26,110 --> 00:21:30,100
was this would have been a nightmare for

00:21:27,640 --> 00:21:33,340
us to set up in just a few weeks that we

00:21:30,100 --> 00:21:36,340
had so we did as fast as we could but it

00:21:33,340 --> 00:21:38,290
would be able to solve some of the town

00:21:36,340 --> 00:21:41,050
over drawing problems but then we would

00:21:38,290 --> 00:21:45,100
be in just multi render d architectures

00:21:41,050 --> 00:21:47,170
which are which lack I guess modularity

00:21:45,100 --> 00:21:53,190
they're too tightly coupled

00:21:47,170 --> 00:21:53,190
they do though have support already yes

00:21:53,970 --> 00:21:59,560
yeah well we had we tried with SEF and

00:21:57,280 --> 00:22:01,240
we had nightmares he was not a nightmare

00:21:59,560 --> 00:22:02,950
to try and set it up so we just said at

00:22:01,240 --> 00:22:05,080
the end let's just go a squid which is

00:22:02,950 --> 00:22:12,160
what openstreetmap does he noses under

00:22:05,080 --> 00:22:16,420
service we stuff because we use render d

00:22:12,160 --> 00:22:21,970
yeah all right any other questions raise

00:22:16,420 --> 00:22:25,210
your hands higher peas because when

00:22:21,970 --> 00:22:27,370
you're at the front I would be quickest

00:22:25,210 --> 00:22:30,690
only as an idea on the right please I

00:22:27,370 --> 00:22:34,800
would because only as an idea if you do

00:22:30,690 --> 00:22:37,930
you should replicate this on a vector of

00:22:34,800 --> 00:22:43,450
several how would be different like on

00:22:37,930 --> 00:22:45,310
this scale so in terms of output it

00:22:43,450 --> 00:22:47,830
would be mostly would be a different of

00:22:45,310 --> 00:22:50,350
of throughput meaning the size of a

00:22:47,830 --> 00:22:52,240
vector tile is usually inferior to a

00:22:50,350 --> 00:22:58,660
raster tile so it would probably

00:22:52,240 --> 00:23:00,670
decrease and lower the the throughput

00:22:58,660 --> 00:23:03,010
the network throughput in terms of

00:23:00,670 --> 00:23:05,590
rendering the number of meta tags per

00:23:03,010 --> 00:23:07,780
second if you use the same import

00:23:05,590 --> 00:23:10,780
profile it would be pretty much the same

00:23:07,780 --> 00:23:13,270
so you would win maybe on some of the

00:23:10,780 --> 00:23:15,340
throughput but other than that the

00:23:13,270 --> 00:23:18,310
requests per second is pretty much the

00:23:15,340 --> 00:23:23,110
how much your cash can handle rather

00:23:18,310 --> 00:23:25,830
than anything else there's a question

00:23:23,110 --> 00:23:25,830
there in the back

00:23:30,380 --> 00:23:39,030
hi hi so I run the OpenStreetMap that

00:23:36,210 --> 00:23:41,490
all caching and the tar rendering with

00:23:39,030 --> 00:23:43,830
Tom and Paul who asked you the first

00:23:41,490 --> 00:23:46,560
question I would be interested to see

00:23:43,830 --> 00:23:49,110
some linear to accuse you've done you

00:23:46,560 --> 00:23:51,240
clearly got a different problem to us we

00:23:49,110 --> 00:23:53,910
we we are volunteers that run the

00:23:51,240 --> 00:23:56,220
OpenStreetMap infrastructure and we

00:23:53,910 --> 00:23:58,560
don't have cloud hosting options as a

00:23:56,220 --> 00:24:00,810
choice we can't just scale up as big as

00:23:58,560 --> 00:24:02,580
we want because we do it on a limited

00:24:00,810 --> 00:24:06,990
budget and we've asked people to donate

00:24:02,580 --> 00:24:09,090
so my eye what sort of metric tuning

00:24:06,990 --> 00:24:11,160
have you done you said I our keys from

00:24:09,090 --> 00:24:13,680
we've suffered from similar problems

00:24:11,160 --> 00:24:16,950
with an edge yes it's that I'd be happy

00:24:13,680 --> 00:24:18,720
to share everything with you there's

00:24:16,950 --> 00:24:21,150
also I mean maybe it's too early to

00:24:18,720 --> 00:24:22,860
announce but OVH is getting closer to

00:24:21,150 --> 00:24:25,350
the community and they're planning on

00:24:22,860 --> 00:24:27,840
helping I guess in terms of server

00:24:25,350 --> 00:24:29,940
processing power so that may also be

00:24:27,840 --> 00:24:31,830
something that might you know get your

00:24:29,940 --> 00:24:35,760
interest so don't hesitate we could

00:24:31,830 --> 00:24:38,250
share some ideas Chiz sounds interesting

00:24:35,760 --> 00:24:43,550
alright we have maybe time for one last

00:24:38,250 --> 00:24:43,550
question if there is any such

00:24:44,380 --> 00:24:46,440

YouTube URL: https://www.youtube.com/watch?v=GuAVQpM0pWE


