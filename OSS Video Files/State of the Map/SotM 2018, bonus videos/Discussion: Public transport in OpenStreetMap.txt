Title: Discussion: Public transport in OpenStreetMap
Publication date: 2018-08-25
Playlist: SotM 2018, bonus videos
Description: 
	A discussion in the bookable space, proposed and led by Ilya Zverev during State of the Map 2018
https://2018.stateofthemap.org

Thank you to Séverin Ménard for filming this session.
Captions: 
	00:00:02,639 --> 00:00:09,839
so welcome on the session for public

00:00:05,620 --> 00:00:16,150
transports we don't have any agenda set

00:00:09,839 --> 00:00:19,510
so we could discuss any issues with

00:00:16,150 --> 00:00:23,349
public transports you find outstanding

00:00:19,510 --> 00:00:26,349
and needing to be solved and I think we

00:00:23,349 --> 00:00:28,509
all agree that but the current public

00:00:26,349 --> 00:00:32,439
transports him in opposition has issues

00:00:28,509 --> 00:00:34,539
and there has been many attempts by many

00:00:32,439 --> 00:00:40,870
different mappers to solve it

00:00:34,539 --> 00:00:44,670
including polyglots attempt at moving

00:00:40,870 --> 00:00:47,500
everything to nodes including the

00:00:44,670 --> 00:00:49,899
proposal for ditching public transport

00:00:47,500 --> 00:00:52,899
tags or simplified public transport

00:00:49,899 --> 00:00:59,559
schema by Roland I don't think it's up

00:00:52,899 --> 00:01:03,519
yet so it if you want to start to

00:00:59,559 --> 00:01:06,369
discuss any of the issues you can begin

00:01:03,519 --> 00:01:08,590
or I don't know I can explain public

00:01:06,369 --> 00:01:13,930
transport very fine public transport

00:01:08,590 --> 00:01:16,720
schema if you want so I would prefer it

00:01:13,930 --> 00:01:18,909
if you would explain your proposal in a

00:01:16,720 --> 00:01:21,220
few words because I haven't read it yet

00:01:18,909 --> 00:01:28,329
because it's only one week since you

00:01:21,220 --> 00:01:36,070
published it so I don't know if I should

00:01:28,329 --> 00:01:38,680
draw it so the idea well it will be how

00:01:36,070 --> 00:01:44,049
to record and I have to walk around what

00:01:38,680 --> 00:01:46,689
so the idea is that in the current

00:01:44,049 --> 00:01:49,780
schema you have to add too many objects

00:01:46,689 --> 00:01:53,500
with too many tags on all elements of

00:01:49,780 --> 00:01:55,899
public transport route mostly stops like

00:01:53,500 --> 00:01:58,840
there are stop positions which for the

00:01:55,899 --> 00:02:02,340
most times can be calculated

00:01:58,840 --> 00:02:04,750
automatically by projecting platforms

00:02:02,340 --> 00:02:09,399
there are platforms with misleading

00:02:04,750 --> 00:02:12,400
tagging like most people put bus equals

00:02:09,399 --> 00:02:14,760
CS on platforms and the schema doesn't

00:02:12,400 --> 00:02:14,760
have it

00:02:15,590 --> 00:02:22,580
and well that's basically all the model

00:02:19,940 --> 00:02:30,950
for roots in a current scheme is pretty

00:02:22,580 --> 00:02:32,720
great the issue mostly stops so yeah the

00:02:30,950 --> 00:02:34,550
issue I see with the route segments

00:02:32,720 --> 00:02:38,090
currently is that there's a lot of

00:02:34,550 --> 00:02:42,650
sharing between similar routes and a lot

00:02:38,090 --> 00:02:46,819
of duplication of big parts of the route

00:02:42,650 --> 00:02:49,459
segments so there's a proposal from 2011

00:02:46,819 --> 00:02:52,010
I think which proposes route segments

00:02:49,459 --> 00:02:54,620
being a separate relation which can be

00:02:52,010 --> 00:02:59,500
embedded in in the actual route

00:02:54,620 --> 00:03:02,209
relations and when like considering a

00:02:59,500 --> 00:03:07,360
new schema I think we should also

00:03:02,209 --> 00:03:07,360
consider including hood segments as well

00:03:07,599 --> 00:03:14,090
yes you're correct there was a proposal

00:03:10,670 --> 00:03:19,910
about two segments in 2011 and the idea

00:03:14,090 --> 00:03:24,680
floats up from time to time but I think

00:03:19,910 --> 00:03:28,850
that we should go in small steps we

00:03:24,680 --> 00:03:32,180
could also improve the route relations

00:03:28,850 --> 00:03:36,980
later but if we do all things that we

00:03:32,180 --> 00:03:39,680
want to improve simultaneously then the

00:03:36,980 --> 00:03:44,060
change would be too big and it has more

00:03:39,680 --> 00:03:46,489
chances to fail and I think restatements

00:03:44,060 --> 00:03:49,100
will complicate things because it will

00:03:46,489 --> 00:03:50,510
be route masters containing relations

00:03:49,100 --> 00:03:53,150
for roots continued relations for those

00:03:50,510 --> 00:03:58,220
segments contain relations for all stops

00:03:53,150 --> 00:04:01,569
so it's a topic for another day but yeah

00:03:58,220 --> 00:04:05,000
we should keeping this in mind of course

00:04:01,569 --> 00:04:08,780
right so what was I talking about

00:04:05,000 --> 00:04:11,030
yeah so back in the days before the

00:04:08,780 --> 00:04:13,549
current public transpose Hema all we had

00:04:11,030 --> 00:04:17,139
to do to map stops was basically create

00:04:13,549 --> 00:04:21,729
a node with higher bus stops bus stop or

00:04:17,139 --> 00:04:25,460
railway tram stop and that was all so

00:04:21,729 --> 00:04:29,020
these were simple times we could see the

00:04:25,460 --> 00:04:32,800
kind of stop just by looking at its tags

00:04:29,020 --> 00:04:36,280
and we didn't have to implement support

00:04:32,800 --> 00:04:40,830
for text like trim equal CS and so on

00:04:36,280 --> 00:04:44,740
and what I wanted to do was basically

00:04:40,830 --> 00:04:47,650
take us back to these times to ditch all

00:04:44,740 --> 00:04:52,740
the complex stuff that was introduced

00:04:47,650 --> 00:04:56,710
later but it's more practical angle

00:04:52,740 --> 00:04:59,650
because currently I am working on public

00:04:56,710 --> 00:05:02,800
transport processor for all the types of

00:04:59,650 --> 00:05:05,200
public transport for the entire world so

00:05:02,800 --> 00:05:07,750
I thought it would be great if public

00:05:05,200 --> 00:05:10,620
transport relations and stage stations

00:05:07,750 --> 00:05:15,850
and stops would be easier to process

00:05:10,620 --> 00:05:18,790
because countries they are not so the

00:05:15,850 --> 00:05:22,480
that what I was aiming it simpler

00:05:18,790 --> 00:05:28,030
mapping and simpler usage of public

00:05:22,480 --> 00:05:31,330
transport data so the refine public

00:05:28,030 --> 00:05:34,330
transport proposal is my view on how

00:05:31,330 --> 00:05:37,690
this could be achieved basically it

00:05:34,330 --> 00:05:41,530
tells that for most cases having a

00:05:37,690 --> 00:05:45,030
single node with bus stop or tram stop

00:05:41,530 --> 00:05:48,250
or whatever railway station is enough

00:05:45,030 --> 00:05:50,910
you don't have to do anything more you

00:05:48,250 --> 00:05:54,250
don't have to project to stop position

00:05:50,910 --> 00:05:57,610
you don't have to you know feel extra

00:05:54,250 --> 00:06:01,930
text for modes of transportation just a

00:05:57,610 --> 00:06:08,050
node with one or two takes like name and

00:06:01,930 --> 00:06:11,100
type and I was working up from that so

00:06:08,050 --> 00:06:15,130
the next thing it's a plat forms

00:06:11,100 --> 00:06:20,110
platforms are usually ways or areas near

00:06:15,130 --> 00:06:22,690
the stop and when you get to object to

00:06:20,110 --> 00:06:26,950
elements that were the complexity starts

00:06:22,690 --> 00:06:29,860
because then you somehow need to link a

00:06:26,950 --> 00:06:35,260
platform to the stop node stop object

00:06:29,860 --> 00:06:38,820
and this means relations because simple

00:06:35,260 --> 00:06:41,590
geometric closeness doesn't work because

00:06:38,820 --> 00:06:43,600
there are many different ways to find

00:06:41,590 --> 00:06:46,210
the closest node and some of these will

00:06:43,600 --> 00:06:49,210
give you wrong results like if you find

00:06:46,210 --> 00:06:51,550
look for a stop close to edges of a

00:06:49,210 --> 00:06:53,160
platform then some age may be closer to

00:06:51,550 --> 00:06:57,970
stop on the opposite side of the road

00:06:53,160 --> 00:07:01,900
and some so we have stop nodes we have

00:06:57,970 --> 00:07:03,940
platforms we have stop areas and that is

00:07:01,900 --> 00:07:06,730
enough for most cases like for almost

00:07:03,940 --> 00:07:17,110
all cases for over ground transport

00:07:06,730 --> 00:07:20,500
involved right but when the issue is

00:07:17,110 --> 00:07:23,800
what do we do with it like where do we

00:07:20,500 --> 00:07:26,440
place a stop node or on the road or

00:07:23,800 --> 00:07:27,370
beside the road and if there is a

00:07:26,440 --> 00:07:29,380
platform mapped

00:07:27,370 --> 00:07:32,290
do we place a stop node inside a

00:07:29,380 --> 00:07:34,060
platform or on the road since we have a

00:07:32,290 --> 00:07:41,500
platform we can use stop notice stop

00:07:34,060 --> 00:07:44,380
position and and so on do we use one

00:07:41,500 --> 00:07:48,070
stop node for two stops on the opposite

00:07:44,380 --> 00:07:50,410
sides of the road or and group platforms

00:07:48,070 --> 00:07:56,260
in separate stop areas or a single stop

00:07:50,410 --> 00:07:59,440
area or do we always require stop nodes

00:07:56,260 --> 00:08:03,850
for each side of the road so there is a

00:07:59,440 --> 00:08:06,610
space to discuss these things and these

00:08:03,850 --> 00:08:10,330
are the reasons that the proposal won't

00:08:06,610 --> 00:08:13,540
be pushed to voting in it coming few

00:08:10,330 --> 00:08:16,960
months so if you have any opinion on

00:08:13,540 --> 00:08:18,910
these things or if you think that there

00:08:16,960 --> 00:08:22,600
is another better approach to

00:08:18,910 --> 00:08:28,240
simplifying mapping and usage then

00:08:22,600 --> 00:08:33,280
you're welcome to share results I think

00:08:28,240 --> 00:08:35,380
that the most helpful simplification

00:08:33,280 --> 00:08:37,270
would be to top stop positions where

00:08:35,380 --> 00:08:40,540
they are not necessary for simple bus

00:08:37,270 --> 00:08:43,090
stops it would be enough to place to

00:08:40,540 --> 00:08:45,670
high V equals bus stops on both sides

00:08:43,090 --> 00:08:48,970
one hike highway equals bus stop on each

00:08:45,670 --> 00:08:52,510
side of the road I think that the

00:08:48,970 --> 00:08:55,840
positions are only necessary for trains

00:08:52,510 --> 00:08:58,750
at long platforms where the twine is

00:08:55,840 --> 00:09:01,120
shot at a platform so it's usually only

00:08:58,750 --> 00:09:05,740
necessary for special cases like large

00:09:01,120 --> 00:09:09,220
bus stations or train stations two

00:09:05,740 --> 00:09:11,820
things I forgot to mention first we

00:09:09,220 --> 00:09:14,650
don't ever need some extra position for

00:09:11,820 --> 00:09:17,320
the reason because white tram stops are

00:09:14,650 --> 00:09:19,930
mapped on railways is because all

00:09:17,320 --> 00:09:22,630
railway stops for trains for light rail

00:09:19,930 --> 00:09:25,450
for Subway for trams are mapped as a

00:09:22,630 --> 00:09:29,550
node on tracks this is historical thing

00:09:25,450 --> 00:09:34,450
it doesn't mean that we have to do that

00:09:29,550 --> 00:09:36,640
it's just people have seen that the key

00:09:34,450 --> 00:09:39,310
is railway and things with railway key

00:09:36,640 --> 00:09:42,670
we place on railways so it's not

00:09:39,310 --> 00:09:45,190
required and the second one is that I'm

00:09:42,670 --> 00:09:47,650
talking about stop nodes station nodes

00:09:45,190 --> 00:09:50,170
and they don't have to be like there was

00:09:47,650 --> 00:09:53,470
a proposal on the probe thing in

00:09:50,170 --> 00:09:55,510
proposal discussion an opinion that we

00:09:53,470 --> 00:10:00,700
could just place stop

00:09:55,510 --> 00:10:02,230
tags on a platform ways but I don't

00:10:00,700 --> 00:10:02,830
really like this idea but it's a

00:10:02,230 --> 00:10:10,390
possibility

00:10:02,830 --> 00:10:13,000
I made maybe I will give a big picture

00:10:10,390 --> 00:10:15,970
for the people that are not really into

00:10:13,000 --> 00:10:19,420
what the discussion is about because we

00:10:15,970 --> 00:10:22,420
have this PTV - proposal that has been

00:10:19,420 --> 00:10:25,240
approved seven years ago and my point of

00:10:22,420 --> 00:10:30,220
view is that we still struggle to move

00:10:25,240 --> 00:10:33,750
to the PTV - model and we face public

00:10:30,220 --> 00:10:37,420
transport model which is about like

00:10:33,750 --> 00:10:39,670
having platforms in the in the blender

00:10:37,420 --> 00:10:44,700
in the in the model before we had this

00:10:39,670 --> 00:10:44,700
iy equal bus stop which was very simple

00:10:47,520 --> 00:10:53,680
please raise your hand if you don't know

00:10:50,620 --> 00:10:56,220
the difference between PT version 1 and

00:10:53,680 --> 00:10:56,220
version 2

00:11:01,920 --> 00:11:07,000
yeah

00:11:03,130 --> 00:11:10,090
so the TV one was no schema it was just

00:11:07,000 --> 00:11:12,130
a set of object descriptions like there

00:11:10,090 --> 00:11:15,190
is a wiki page for bus-stops wiki page

00:11:12,130 --> 00:11:17,290
for trams stops and for us you just put

00:11:15,190 --> 00:11:20,350
everything you see everything related to

00:11:17,290 --> 00:11:23,140
route in a single relation so it's okay

00:11:20,350 --> 00:11:24,760
it was kind of a mess but you knew where

00:11:23,140 --> 00:11:29,950
your stops are and that's all

00:11:24,760 --> 00:11:33,220
PTV to is a sebastian's comes after

00:11:29,950 --> 00:11:35,680
Sebastian's proposal aqsa mosque in 2009

00:11:33,220 --> 00:11:38,830
and it was attempt to bring order into

00:11:35,680 --> 00:11:41,950
mapping public transport so they have

00:11:38,830 --> 00:11:44,320
had specifically distinct types of

00:11:41,950 --> 00:11:49,570
objects that were obvious what they mean

00:11:44,320 --> 00:11:52,210
like attack from platform which means a

00:11:49,570 --> 00:11:54,700
pole for waiting area or some worship

00:11:52,210 --> 00:11:57,340
waiting here or actual platform a check

00:11:54,700 --> 00:12:00,900
for stop position node on highway on

00:11:57,340 --> 00:12:04,660
railway where the bus or train stops and

00:12:00,900 --> 00:12:06,910
a system for mapping routes properly

00:12:04,660 --> 00:12:09,730
like separate relations for each

00:12:06,910 --> 00:12:12,490
direction and so on so this was more

00:12:09,730 --> 00:12:15,070
orderly schema and the issue with it is

00:12:12,490 --> 00:12:18,280
it might be too complex because it is

00:12:15,070 --> 00:12:21,340
modeled on some really great and solid

00:12:18,280 --> 00:12:23,200
European standards which were supposed

00:12:21,340 --> 00:12:28,420
to be filled automatically and not with

00:12:23,200 --> 00:12:31,510
my hand and that is so as I mentioned in

00:12:28,420 --> 00:12:35,620
some of the answers mapping public

00:12:31,510 --> 00:12:39,580
transport routes to p2v2 schema is a bit

00:12:35,620 --> 00:12:42,370
like writing a GTFS feet by hand so

00:12:39,580 --> 00:12:45,340
that's why we tried trying to undo some

00:12:42,370 --> 00:12:47,500
of the complexity yeah exactly

00:12:45,340 --> 00:12:50,200
we undo the complexity we have this

00:12:47,500 --> 00:12:53,680
model which is very detailed

00:12:50,200 --> 00:12:56,230
PTV - it is very detailed but we still

00:12:53,680 --> 00:12:58,930
struggle to adapt it on a large scale

00:12:56,230 --> 00:13:00,700
and the conclusion is that you are the

00:12:58,930 --> 00:13:04,360
first to say that it's not possible to

00:13:00,700 --> 00:13:06,280
use it on unlike a mobile app which

00:13:04,360 --> 00:13:09,520
there is no standard and this is very

00:13:06,280 --> 00:13:12,040
hard for us to manage so there is some

00:13:09,520 --> 00:13:12,670
points on in your proposal v3 proposal

00:13:12,040 --> 00:13:15,040
that I

00:13:12,670 --> 00:13:17,530
disagree with but it really doesn't

00:13:15,040 --> 00:13:21,190
matter I mean on the on the on the the

00:13:17,530 --> 00:13:23,470
main issue which is to I'd the

00:13:21,190 --> 00:13:26,050
complexity and you said that before

00:13:23,470 --> 00:13:28,930
like on ninety percent of the network

00:13:26,050 --> 00:13:31,840
you will walk and I guess that's the

00:13:28,930 --> 00:13:34,090
most important and we really I think we

00:13:31,840 --> 00:13:36,310
really have to agree on how to map the

00:13:34,090 --> 00:13:39,910
ninety percent which makes sense and

00:13:36,310 --> 00:13:43,510
then the details okay let's discuss it

00:13:39,910 --> 00:13:45,370
but I don't know for you guys on on your

00:13:43,510 --> 00:13:48,280
on your in your countries but in France

00:13:45,370 --> 00:13:51,610
it's still very hard for the people to

00:13:48,280 --> 00:13:53,500
move to public transport v2 which has

00:13:51,610 --> 00:13:57,790
been a proposal since years and years

00:13:53,500 --> 00:14:05,290
and we still don't go to this way so I I

00:13:57,790 --> 00:14:07,150
agree with you your v3 proposal thank

00:14:05,290 --> 00:14:09,040
you yeah i also agree it goes into the

00:14:07,150 --> 00:14:11,200
really right direction III did they

00:14:09,040 --> 00:14:14,170
exercise to to build a public transport

00:14:11,200 --> 00:14:17,140
system and PTV to pretty correctly I

00:14:14,170 --> 00:14:18,880
would say and it is you don't want to do

00:14:17,140 --> 00:14:21,010
that you're right like there's a lot of

00:14:18,880 --> 00:14:23,280
duplication on texts or you don't know

00:14:21,010 --> 00:14:26,080
where to put them and and so on

00:14:23,280 --> 00:14:28,300
so the general direction I agree there

00:14:26,080 --> 00:14:30,430
are also some points where I think it

00:14:28,300 --> 00:14:33,580
could be more progressive I think a

00:14:30,430 --> 00:14:36,640
highway equal bus stop which is on the

00:14:33,580 --> 00:14:38,350
side of a highway doesn't make sense but

00:14:36,640 --> 00:14:40,180
I agree that for rendering and

00:14:38,350 --> 00:14:42,820
historical reason it's maybe the more

00:14:40,180 --> 00:14:44,200
simpler approach right now but I think

00:14:42,820 --> 00:14:46,120
we can be there a little bit more

00:14:44,200 --> 00:14:48,520
progressive but the general direction is

00:14:46,120 --> 00:14:51,340
cool also what you're planning to do to

00:14:48,520 --> 00:14:54,310
integrate this into and to Maps me and

00:14:51,340 --> 00:14:58,750
make it also working without aiming time

00:14:54,310 --> 00:15:00,730
information will be a a very very big

00:14:58,750 --> 00:15:02,950
step forward for public transportation

00:15:00,730 --> 00:15:05,950
especially outside of Europe which is my

00:15:02,950 --> 00:15:08,890
my point of concern because we live for

00:15:05,950 --> 00:15:12,100
informal plan traffic or transport

00:15:08,890 --> 00:15:15,670
actually this already is very very good

00:15:12,100 --> 00:15:18,310
stuff thanks a lot for pushing yeah

00:15:15,670 --> 00:15:20,490
thanks for agreeing maybe you have some

00:15:18,310 --> 00:15:24,069
comments

00:15:20,490 --> 00:15:30,220
so who here is working on informal

00:15:24,069 --> 00:15:31,930
systems informal system informal transit

00:15:30,220 --> 00:15:35,439
in South countries

00:15:31,930 --> 00:15:38,379
so while system don't have substation

00:15:35,439 --> 00:15:43,019
actually but can potentially stop in

00:15:38,379 --> 00:15:43,019
each corner how do you solve that I

00:15:43,800 --> 00:15:50,050
haven't met such Network yet but I would

00:15:47,560 --> 00:15:52,540
solve it by just mapping how to lations

00:15:50,050 --> 00:15:56,350
with the highway members but without any

00:15:52,540 --> 00:16:00,850
stop members if the stop a bus can stop

00:15:56,350 --> 00:16:03,399
at Le core every NGO know in such roads

00:16:00,850 --> 00:16:07,360
we also have them in Russia is the

00:16:03,399 --> 00:16:09,730
Baptist share Texas I think they usually

00:16:07,360 --> 00:16:15,720
have first stop and the last stop where

00:16:09,730 --> 00:16:18,759
people wait for the first bus or taxi so

00:16:15,720 --> 00:16:20,259
that is a route that can already be

00:16:18,759 --> 00:16:24,819
mapped in OpenStreetMap because we have

00:16:20,259 --> 00:16:28,079
a role halen right for highways in a

00:16:24,819 --> 00:16:31,629
route relation which mean basically that

00:16:28,079 --> 00:16:35,319
you can stop a bus at any point of the

00:16:31,629 --> 00:16:41,430
road it was introduced by polyglot for

00:16:35,319 --> 00:16:46,360
some complex United Kingdom routes yeah

00:16:41,430 --> 00:16:50,139
he he couldn't come to me once this time

00:16:46,360 --> 00:16:52,149
yeah so but there are always first and

00:16:50,139 --> 00:16:54,519
last stops because these buses don't

00:16:52,149 --> 00:16:57,670
come from anywhere they wait at the ends

00:16:54,519 --> 00:17:05,339
of the routes so stop severe it just not

00:16:57,670 --> 00:17:05,339
August ops not details like sorry

00:17:10,589 --> 00:17:17,950
je parle often say effect like a toga

00:17:15,160 --> 00:17:19,990
feed a linguist the link transport

00:17:17,950 --> 00:17:22,750
public said try complicates Padonia

00:17:19,990 --> 00:17:23,700
Tolman Nando relies on T face fat

00:17:22,750 --> 00:17:27,610
Saphira

00:17:23,700 --> 00:17:31,900
majnu doofah Duke we observe a Ponzi

00:17:27,610 --> 00:17:33,940
assembly she Johnny Revere le nom

00:17:31,900 --> 00:17:36,040
Duvalier complexity kiya

00:17:33,940 --> 00:17:38,700
Picasa Padonia Toolman civil Villa

00:17:36,040 --> 00:17:42,420
collision cartography love David to our

00:17:38,700 --> 00:17:44,320
society food reppin SIA appreciably she

00:17:42,420 --> 00:17:46,750
yeah yeah

00:17:44,320 --> 00:17:49,020
Japan's Khazana vapor imagery deferred

00:17:46,750 --> 00:17:53,080
try bein country

00:17:49,020 --> 00:17:56,530
Liam laser a confit poor Lube use a

00:17:53,080 --> 00:17:59,980
laser a confit Paula Total Effects CC

00:17:56,530 --> 00:18:04,360
completely new Marisa deux fois juice we

00:17:59,980 --> 00:18:05,530
don t feel re a locust you know fever

00:18:04,360 --> 00:18:08,710
little poof

00:18:05,530 --> 00:18:12,270
Evelyn require a booze one do new meal

00:18:08,710 --> 00:18:23,530
is a lousy at lube use a lower at only

00:18:12,270 --> 00:18:26,410
Lily lip asaji for casa so she would

00:18:23,530 --> 00:18:29,140
like to emphasize the two two things I

00:18:26,410 --> 00:18:31,870
think the complexity of the the

00:18:29,140 --> 00:18:35,080
relations that are really a blocker for

00:18:31,870 --> 00:18:37,300
people interested in being involved in

00:18:35,080 --> 00:18:42,310
mapping the public transportation which

00:18:37,300 --> 00:18:45,400
is a large step for for them to to grab

00:18:42,310 --> 00:18:50,800
the thing and to to be able to do to map

00:18:45,400 --> 00:18:57,160
and also about the the bus stops partly

00:18:50,800 --> 00:18:59,500
you need both to map the world bus stops

00:18:57,160 --> 00:19:01,680
and where the people are waiting for the

00:18:59,500 --> 00:19:01,680
bus

00:19:07,710 --> 00:19:12,780
so just two things there so there is two

00:19:10,830 --> 00:19:16,080
things the first is the the model itself

00:19:12,780 --> 00:19:18,240
the coumadin on pomponius is raw kale

00:19:16,080 --> 00:19:20,130
technologies sound on these creatures

00:19:18,240 --> 00:19:22,470
Raji we are discussing about the tags we

00:19:20,130 --> 00:19:25,200
are using and how to model eyes the the

00:19:22,470 --> 00:19:27,570
data and the second one how to under

00:19:25,200 --> 00:19:30,480
complexity I think it's more about the

00:19:27,570 --> 00:19:33,780
tools and at jungle birds we believe

00:19:30,480 --> 00:19:36,450
that simple simpler tools are needed to

00:19:33,780 --> 00:19:39,240
I'd this complexity and to add the

00:19:36,450 --> 00:19:42,180
relations relations are a nightmare to

00:19:39,240 --> 00:19:45,060
manage Lucarelli holistically

00:19:42,180 --> 00:19:47,040
yeah jump on skull remedies which cheeky

00:19:45,060 --> 00:19:49,680
funk said complexity less web cache

00:19:47,040 --> 00:19:54,750
apologies data key leap are you ready

00:19:49,680 --> 00:19:58,350
all as soon Mickey on fact among duty

00:19:54,750 --> 00:20:00,630
poor Clara Tony Lamanna la Lu control

00:19:58,350 --> 00:20:03,930
callate la visualize a hill exported

00:20:00,630 --> 00:20:08,100
only from actual a dunk off at some home

00:20:03,930 --> 00:20:11,220
Coco so yeah I said the the tools to

00:20:08,100 --> 00:20:14,250
create maintain QA and export the data

00:20:11,220 --> 00:20:16,380
and use the data are still needed and we

00:20:14,250 --> 00:20:20,880
are still on a way to produce these

00:20:16,380 --> 00:20:24,510
tools with with a lot of people here we

00:20:20,880 --> 00:20:28,680
create yeah welcome to GTFS we create

00:20:24,510 --> 00:20:31,920
the jungle bus mobile app we have PT

00:20:28,680 --> 00:20:35,520
assistance in India in Rossum and we

00:20:31,920 --> 00:20:39,510
still need to improve these tools once

00:20:35,520 --> 00:20:41,610
we agree on them but they're small

00:20:39,510 --> 00:20:45,990
comments oh it's my talk yesterday I

00:20:41,610 --> 00:20:48,060
showed a mock-up for what public

00:20:45,990 --> 00:20:52,110
transport route management in Jungle bus

00:20:48,060 --> 00:20:54,390
might look like and yeah relations are

00:20:52,110 --> 00:20:58,560
not nightmare there okay it's the tools

00:20:54,390 --> 00:21:00,570
that work with them to complex and we

00:20:58,560 --> 00:21:02,010
are slowly getting to the point where

00:21:00,570 --> 00:21:05,340
it's simpler

00:21:02,010 --> 00:21:07,710
like with ID editor editing rotor

00:21:05,340 --> 00:21:09,810
sternness dictions was a nightmare in G

00:21:07,710 --> 00:21:12,420
awesome and in idea is to adjust

00:21:09,810 --> 00:21:14,070
couple clicks and this should be for all

00:21:12,420 --> 00:21:16,460
kinds of relations including public

00:21:14,070 --> 00:21:16,460
transport

00:21:18,520 --> 00:21:30,350
so I I've mapped most of the public

00:21:23,990 --> 00:21:35,120
transport lines in Luxembourg with the

00:21:30,350 --> 00:21:39,559
city's buses and the regional buses it's

00:21:35,120 --> 00:21:42,830
it's as you said it's a nightmare the

00:21:39,559 --> 00:21:45,260
relationships are other relations are a

00:21:42,830 --> 00:21:47,570
nightmare and even when you get it right

00:21:45,260 --> 00:21:50,470
you have the perfect tools for it

00:21:47,570 --> 00:21:52,669
someone else will come along and oh

00:21:50,470 --> 00:21:56,110
there's a new street there and I'll

00:21:52,669 --> 00:22:01,130
split the line and freak your relation

00:21:56,110 --> 00:22:04,760
it it it I'm asking the question of are

00:22:01,130 --> 00:22:10,549
we using is OpenStreetMap the right tool

00:22:04,760 --> 00:22:14,510
to model the lines should we even have

00:22:10,549 --> 00:22:18,110
the lines that are something that we can

00:22:14,510 --> 00:22:19,760
deduce from the data you know you have a

00:22:18,110 --> 00:22:21,679
bust up there you have a bust up there

00:22:19,760 --> 00:22:25,250
you're gonna go this way if you're a bus

00:22:21,679 --> 00:22:31,760
should we even have that precomputed in

00:22:25,250 --> 00:22:36,110
OpenStreetMap could we tag just where

00:22:31,760 --> 00:22:38,030
people stop and the buses stop so those

00:22:36,110 --> 00:22:41,179
two knows because people do stuff with

00:22:38,030 --> 00:22:43,850
it Simon does a gorgeous map of the

00:22:41,179 --> 00:22:47,600
trams and Innsbruck that uses to stop

00:22:43,850 --> 00:22:49,850
positioned for example and the routes

00:22:47,600 --> 00:22:55,280
themselves I don't think we need them we

00:22:49,850 --> 00:22:59,150
can get the lines from the GTFS that we

00:22:55,280 --> 00:23:03,950
would either create ourselves or get

00:22:59,150 --> 00:23:06,320
officially and when we do routing when

00:23:03,950 --> 00:23:09,200
rendering we would use that to deduce

00:23:06,320 --> 00:23:11,750
the lines from the street network we

00:23:09,200 --> 00:23:17,720
have it were I would I think remove a

00:23:11,750 --> 00:23:22,150
lot of the complexity I think it's a

00:23:17,720 --> 00:23:26,059
very valid discussion to race and and

00:23:22,150 --> 00:23:30,590
but I'm but I'm not so sure especially

00:23:26,059 --> 00:23:33,050
not on a part of just using GTFS because

00:23:30,590 --> 00:23:35,419
the reality I think has shown that most

00:23:33,050 --> 00:23:38,840
of the GTFS catalogs don't have them

00:23:35,419 --> 00:23:41,900
license that you can use so we are

00:23:38,840 --> 00:23:44,900
actually in an Hana net problem and and

00:23:41,900 --> 00:23:46,970
then a lot of especially in a global

00:23:44,900 --> 00:23:50,120
South where there's a lot of transport

00:23:46,970 --> 00:23:52,010
systems to be mapped if you start with

00:23:50,120 --> 00:23:54,169
OpenStreetMap you have to big advantage

00:23:52,010 --> 00:23:59,120
that from the beginning all data is open

00:23:54,169 --> 00:24:01,550
and and while as GTFS offers oftentimes

00:23:59,120 --> 00:24:03,770
are locked up then because they need

00:24:01,550 --> 00:24:05,450
financing and then there's no

00:24:03,770 --> 00:24:07,610
alternative that doesn't allow them to

00:24:05,450 --> 00:24:10,160
put the public license on it they don't

00:24:07,610 --> 00:24:11,840
have the awareness and so on so most of

00:24:10,160 --> 00:24:15,679
the public transport data is actually

00:24:11,840 --> 00:24:18,230
not really freely accessible maybe I

00:24:15,679 --> 00:24:22,760
didn't explain properly what I meant I

00:24:18,230 --> 00:24:25,340
meant GTFS as a data format sometimes

00:24:22,760 --> 00:24:27,380
you live in a place where there is no

00:24:25,340 --> 00:24:30,110
GTFS and you would have to create it

00:24:27,380 --> 00:24:31,340
from scratch or there is a GTFS but

00:24:30,110 --> 00:24:33,020
they're not sharing it with you because

00:24:31,340 --> 00:24:35,300
they don't like you so you would have to

00:24:33,020 --> 00:24:39,260
create it from scratch and it would be

00:24:35,300 --> 00:24:43,460
better because it's based on MSM but I

00:24:39,260 --> 00:24:47,929
mean using something like GTFS or GTFS

00:24:43,460 --> 00:24:49,730
as a way of of saying oh there's bus

00:24:47,929 --> 00:24:52,730
line number three and it goes from this

00:24:49,730 --> 00:24:55,250
stop to this stop to that stop and not

00:24:52,730 --> 00:24:59,059
having the lines in OpenStreetMap just

00:24:55,250 --> 00:25:02,059
the stops with GTFS stop ID in

00:24:59,059 --> 00:25:05,600
OpenStreetMap and the information on the

00:25:02,059 --> 00:25:09,950
lines would be kept separate and would

00:25:05,600 --> 00:25:12,140
be we would use GTFS specific tools with

00:25:09,950 --> 00:25:16,540
GTFS validators that there's a whole

00:25:12,140 --> 00:25:16,540
ecosystem around that we can use

00:25:18,090 --> 00:25:25,150
actually um it sounds interesting but it

00:25:23,260 --> 00:25:27,280
was one of the things I liked about us

00:25:25,150 --> 00:25:30,490
and public transport relations that I

00:25:27,280 --> 00:25:33,640
could really edit the route the buses

00:25:30,490 --> 00:25:35,350
taking official systems work like that

00:25:33,640 --> 00:25:37,120
they only have stops and some force

00:25:35,350 --> 00:25:40,570
points in between so they are routing

00:25:37,120 --> 00:25:43,210
automatically but it goes wrong a lot of

00:25:40,570 --> 00:25:46,060
the time and if you want to work with

00:25:43,210 --> 00:25:54,640
osm and you only have stops you would

00:25:46,060 --> 00:25:58,420
also get problems and so I think yeah we

00:25:54,640 --> 00:26:03,250
have problems with with splitting the

00:25:58,420 --> 00:26:05,770
routes so relations get broken but and I

00:26:03,250 --> 00:26:07,960
don't think Duty FS supports false

00:26:05,770 --> 00:26:12,610
points which would make it a bit better

00:26:07,960 --> 00:26:15,100
so a point in between two stops which

00:26:12,610 --> 00:26:17,500
you say the bus definitely goes wire at

00:26:15,100 --> 00:26:20,260
that point which makes it a bit better

00:26:17,500 --> 00:26:24,520
but it will still be prone to errors and

00:26:20,260 --> 00:26:33,520
awesome if you didn't explicitly give

00:26:24,520 --> 00:26:37,210
the ways given is Right advancing I also

00:26:33,520 --> 00:26:40,630
say think that having high reliance or

00:26:37,210 --> 00:26:43,690
railway lines is not essential it's not

00:26:40,630 --> 00:26:47,650
mandatory to route elations but most of

00:26:43,690 --> 00:26:49,990
the time it helps because first it is in

00:26:47,650 --> 00:26:53,830
some part mating for the renderer there

00:26:49,990 --> 00:26:56,380
are many services like open bus map like

00:26:53,830 --> 00:26:59,470
public transport map on the website like

00:26:56,380 --> 00:27:01,450
Osment that use these lines to highlight

00:26:59,470 --> 00:27:04,000
routes and if we don't map them then

00:27:01,450 --> 00:27:07,570
these sites won't be able at all to

00:27:04,000 --> 00:27:10,360
display in routes and the second thing

00:27:07,570 --> 00:27:13,660
is it's not always as kevin says it's

00:27:10,360 --> 00:27:16,120
not always possible to find highway

00:27:13,660 --> 00:27:18,010
lines from bus stops it is usually

00:27:16,120 --> 00:27:20,650
possible to vice-versa to find stops

00:27:18,010 --> 00:27:22,360
from highways but not highways you have

00:27:20,650 --> 00:27:28,320
to implement complex routing algorithms

00:27:22,360 --> 00:27:28,320
in their options and finally

00:27:28,580 --> 00:27:37,500
finally when an app has found the route

00:27:35,010 --> 00:27:39,630
using route relations it needs to

00:27:37,500 --> 00:27:41,880
display it in case of subways or

00:27:39,630 --> 00:27:44,700
long-distance trains you can just

00:27:41,880 --> 00:27:48,630
connect stoppage lines but in the CTA

00:27:44,700 --> 00:27:51,210
you better use actual highways to show

00:27:48,630 --> 00:27:56,850
where a person will go between stops and

00:27:51,210 --> 00:27:59,130
for that highlights are very so I agree

00:27:56,850 --> 00:28:04,650
and I will add that for paratransit for

00:27:59,130 --> 00:28:08,220
the and informal networks the bus stops

00:28:04,650 --> 00:28:11,270
everywhere on the on the line so the

00:28:08,220 --> 00:28:14,490
stubs don't really make sense but the

00:28:11,270 --> 00:28:17,640
the the route itself makes more sense so

00:28:14,490 --> 00:28:21,180
for some use case it's even better to

00:28:17,640 --> 00:28:28,980
have only the routes than to ever the

00:28:21,180 --> 00:28:30,840
the bus stops yep the main issue was the

00:28:28,980 --> 00:28:33,540
highway members in the route relations

00:28:30,840 --> 00:28:36,450
is that they wake easily if someone

00:28:33,540 --> 00:28:39,240
splits away but this issue can be solved

00:28:36,450 --> 00:28:41,730
in the editor software ID does it

00:28:39,240 --> 00:28:44,750
already and fixes two outs if the way

00:28:41,730 --> 00:28:47,310
split the main issue is your some if

00:28:44,750 --> 00:28:52,140
your some has not downloaded enough

00:28:47,310 --> 00:28:54,120
members then it may create an invalid

00:28:52,140 --> 00:28:56,430
who - relation by splitting the way

00:28:54,120 --> 00:28:58,980
because it cannot check if the order is

00:28:56,430 --> 00:29:02,040
correct anymore so we should fix the

00:28:58,980 --> 00:29:07,140
editor and not force all data users to

00:29:02,040 --> 00:29:09,890
do routing on all route relations well

00:29:07,140 --> 00:29:12,600
and breaking the data is partly

00:29:09,890 --> 00:29:16,850
mitigated by having a validator a

00:29:12,600 --> 00:29:16,850
popular validator for overheads I

00:29:18,380 --> 00:29:26,300
strongly agree and I would go further we

00:29:22,830 --> 00:29:30,240
need new tools new tools - who track the

00:29:26,300 --> 00:29:32,760
routes the highway the steps that are

00:29:30,240 --> 00:29:36,660
broken our relations are broken by

00:29:32,760 --> 00:29:38,880
everybody someone is a splitting a

00:29:36,660 --> 00:29:41,520
roundabout and the ration is broken and

00:29:38,880 --> 00:29:44,220
we need new tools for that and

00:29:41,520 --> 00:29:46,440
we are thinking of new tools but it's

00:29:44,220 --> 00:29:50,450
your eye I guess we should discuss it

00:29:46,440 --> 00:29:52,770
together I'm the author of many

00:29:50,450 --> 00:29:54,780
OpenStreetMap of my nephew's in the

00:29:52,770 --> 00:29:56,580
OpenStreetMap inspector and the open

00:29:54,780 --> 00:29:59,100
sternum inspector by Chief Eric already

00:29:56,580 --> 00:30:01,470
has a public transport for you I

00:29:59,100 --> 00:30:03,270
redesigned it last summer and it now

00:30:01,470 --> 00:30:05,280
checks public transport version two

00:30:03,270 --> 00:30:07,380
hoots if they are valid it does not

00:30:05,280 --> 00:30:10,530
check everything but it checks if there

00:30:07,380 --> 00:30:12,180
are gaps in note so if you're out is

00:30:10,530 --> 00:30:19,980
Queen then it's okay if it's black then

00:30:12,180 --> 00:30:23,160
it's broken some kind does anyone know

00:30:19,980 --> 00:30:27,540
of a tool if imagine I have this

00:30:23,160 --> 00:30:30,630
fantastic GTFS and I want to see if it

00:30:27,540 --> 00:30:34,500
says the same thing in OpenStreetMap is

00:30:30,630 --> 00:30:37,620
there a tool there we'll compare that

00:30:34,500 --> 00:30:43,440
and validate OpenStreetMap based on GTFS

00:30:37,620 --> 00:30:46,080
and not yet and you did this fantastic

00:30:43,440 --> 00:30:51,810
validator for subway line

00:30:46,080 --> 00:30:55,230
lines in in some cities is in in all

00:30:51,810 --> 00:30:57,780
cities that have a subway would it be

00:30:55,230 --> 00:31:02,660
possible to have something like that or

00:30:57,780 --> 00:31:10,020
if it doesn't exist yet for every other

00:31:02,660 --> 00:31:12,090
method of public transportation and I

00:31:10,020 --> 00:31:14,630
think it will tool to compare them I'm

00:31:12,090 --> 00:31:16,380
not really aware of there's something

00:31:14,630 --> 00:31:19,830
older one

00:31:16,380 --> 00:31:22,920
this is GTFS sink go sink something like

00:31:19,830 --> 00:31:25,200
that it I am not sure if it still works

00:31:22,920 --> 00:31:28,470
I looked into that some years ago and it

00:31:25,200 --> 00:31:31,170
I was not very happy and and then we

00:31:28,470 --> 00:31:34,800
developed with several people there's

00:31:31,170 --> 00:31:38,160
always I'm to GTFS so basically you

00:31:34,800 --> 00:31:39,900
could export the GTFS from from

00:31:38,160 --> 00:31:42,390
OpenStreetMap and then you could do a

00:31:39,900 --> 00:31:44,220
diff and run if it's the same but it's

00:31:42,390 --> 00:31:46,500
not that simple because of course then

00:31:44,220 --> 00:31:48,570
you would have the same GTFS IDs you

00:31:46,500 --> 00:31:51,540
might have to make sure that and that

00:31:48,570 --> 00:31:53,500
they are the right ones and you have to

00:31:51,540 --> 00:31:56,080
to look that

00:31:53,500 --> 00:31:57,970
it had that order of stops and so on

00:31:56,080 --> 00:32:00,400
this is all not really like Richard and

00:31:57,970 --> 00:32:05,770
GTFS because it's just that it takes T

00:32:00,400 --> 00:32:07,420
file so so it's not a real cheetah

00:32:05,770 --> 00:32:09,280
festival and diff tool but you could

00:32:07,420 --> 00:32:10,900
export and if it's the same structure

00:32:09,280 --> 00:32:13,150
then you have a diff but if it's a

00:32:10,900 --> 00:32:15,400
different structure then you will then

00:32:13,150 --> 00:32:18,880
it's not working so it works basically

00:32:15,400 --> 00:32:23,080
we are doing it inside the script for

00:32:18,880 --> 00:32:24,940
for simple unit testing so that we

00:32:23,080 --> 00:32:29,290
compare actual each ETFs from

00:32:24,940 --> 00:32:32,110
OpenStreetMap with a new GTFS and

00:32:29,290 --> 00:32:35,170
quickly generated but then we know that

00:32:32,110 --> 00:32:36,880
the data source is the same and then you

00:32:35,170 --> 00:32:41,230
can do but if not it's probably

00:32:36,880 --> 00:32:46,980
challenging regarding the second point

00:32:41,230 --> 00:32:50,260
about validator as i showed yesterday i

00:32:46,980 --> 00:32:52,780
am improving my subway validator to also

00:32:50,260 --> 00:32:55,270
count for trams and I have already

00:32:52,780 --> 00:33:00,460
started validating and fixing some

00:32:55,270 --> 00:33:03,100
trails mostly in Eastern Europe and yes

00:33:00,460 --> 00:33:05,470
I have started writing a validator for

00:33:03,100 --> 00:33:08,920
all kinds of public transport in

00:33:05,470 --> 00:33:10,810
OpenStreetMap but it is hard task it

00:33:08,920 --> 00:33:14,170
won't be ready in coming couple mouths

00:33:10,810 --> 00:33:17,020
because there are millions of stops like

00:33:14,170 --> 00:33:19,540
the two million bus stops alone on the

00:33:17,020 --> 00:33:24,040
database and there are tens if not

00:33:19,540 --> 00:33:27,310
hundreds of routes so it would be a

00:33:24,040 --> 00:33:28,210
tedious task not only to code it but

00:33:27,310 --> 00:33:30,580
also to present

00:33:28,210 --> 00:33:36,310
affiliation is result so they could be

00:33:30,580 --> 00:33:38,680
used but yeah I'm working on it and

00:33:36,310 --> 00:33:41,500
about the first question again in

00:33:38,680 --> 00:33:43,960
Germany thus the Dino data format which

00:33:41,500 --> 00:33:46,810
is a bit better than GTFS for comparing

00:33:43,960 --> 00:33:50,230
to us m because it basically already has

00:33:46,810 --> 00:33:54,670
like variants route variance so you

00:33:50,230 --> 00:33:57,970
could if you can try to match the OSM

00:33:54,670 --> 00:33:59,950
route relations to the variance somehow

00:33:57,970 --> 00:34:02,710
then you could compare them or you could

00:33:59,950 --> 00:34:04,480
try to find which one's exactly it can

00:34:02,710 --> 00:34:06,970
be found in the other data set and which

00:34:04,480 --> 00:34:07,390
ones have a difference so for example

00:34:06,970 --> 00:34:12,129
you could

00:34:07,390 --> 00:34:14,919
like a different platform number on some

00:34:12,129 --> 00:34:17,290
stub of the router so I did that

00:34:14,919 --> 00:34:21,100
manually because I'm not a magic

00:34:17,290 --> 00:34:25,210
magician I can't do the matching so what

00:34:21,100 --> 00:34:27,820
I did was create CSV files from OS m and

00:34:25,210 --> 00:34:33,220
from the data and compare them manually

00:34:27,820 --> 00:34:35,770
by tabbing and actually I found a lot of

00:34:33,220 --> 00:34:38,470
errors in the official data and an

00:34:35,770 --> 00:34:38,919
awesome and in the end it was good for

00:34:38,470 --> 00:34:43,929
everyone

00:34:38,919 --> 00:34:47,109
but what we don't have is something that

00:34:43,929 --> 00:34:59,670
works automatically and with GTFS Dino

00:34:47,109 --> 00:34:59,670
data is not really common relations I

00:35:00,750 --> 00:35:06,850
see some issues with the upgrade path so

00:35:04,619 --> 00:35:11,350
the current state is that we have the

00:35:06,850 --> 00:35:13,570
old schema from ten years back and now

00:35:11,350 --> 00:35:16,990
that the version 2 schema and when we

00:35:13,570 --> 00:35:19,600
start gradually like altering that the

00:35:16,990 --> 00:35:22,630
schema we will end up with with a broad

00:35:19,600 --> 00:35:25,180
variety of routes mapped in in different

00:35:22,630 --> 00:35:29,800
schemas which makes it like a nightmare

00:35:25,180 --> 00:35:33,190
for for every theta user for any editor

00:35:29,800 --> 00:35:37,270
and so on so I think to some extent we

00:35:33,190 --> 00:35:40,990
we should like look to keep the

00:35:37,270 --> 00:35:47,740
different accepted or used schema Tynan

00:35:40,990 --> 00:35:50,290
like as low as possible if I understood

00:35:47,740 --> 00:35:53,550
you correctly Ilya you designed your

00:35:50,290 --> 00:35:56,530
proposal to have only as much

00:35:53,550 --> 00:36:02,050
incompatibilities to all the schemas as

00:35:56,530 --> 00:36:04,240
necessarily am i right I should clarify

00:36:02,050 --> 00:36:06,910
something about versions of public

00:36:04,240 --> 00:36:09,100
transport because there is a tag public

00:36:06,910 --> 00:36:10,900
transport version and the current

00:36:09,100 --> 00:36:17,320
proposals name it public transportation

00:36:10,900 --> 00:36:20,800
3 and this is very misleading as Jericho

00:36:17,320 --> 00:36:23,560
said because there are no version

00:36:20,800 --> 00:36:25,990
of public transport is just there is old

00:36:23,560 --> 00:36:29,500
one then there is current one and there

00:36:25,990 --> 00:36:32,800
is a future one and only one schema is

00:36:29,500 --> 00:36:37,230
active at any moment it just we had it's

00:36:32,800 --> 00:36:39,910
not a version it's in iteration so

00:36:37,230 --> 00:36:43,080
having version check in the database is

00:36:39,910 --> 00:36:46,960
actually wrong because there is only way

00:36:43,080 --> 00:36:50,470
only a single way a public transport

00:36:46,960 --> 00:36:52,570
route is mapped correctly so what what

00:36:50,470 --> 00:36:55,360
are we doing is we have all the way of

00:36:52,570 --> 00:36:57,640
making things we have current way of

00:36:55,360 --> 00:37:01,360
mapping which was replaced the old way

00:36:57,640 --> 00:37:05,950
so actually it didn't duplicate any tags

00:37:01,360 --> 00:37:08,440
so we still have alt text active as it

00:37:05,950 --> 00:37:12,460
was written in the proposal for public

00:37:08,440 --> 00:37:15,010
transport v2 is that the schema doesn't

00:37:12,460 --> 00:37:20,530
make any new text mandatory and doesn't

00:37:15,010 --> 00:37:23,950
duplicate in alt text so we have that

00:37:20,530 --> 00:37:27,100
and now we don't want to replace it we

00:37:23,950 --> 00:37:30,010
want to improve it which means it will

00:37:27,100 --> 00:37:32,380
be the only correct schema but it is

00:37:30,010 --> 00:37:36,040
backwards compatible to what was before

00:37:32,380 --> 00:37:37,720
so we don't have to remap hundreds of

00:37:36,040 --> 00:37:41,320
thousands routes which were made before

00:37:37,720 --> 00:37:44,020
us so one of the main points that I'm

00:37:41,320 --> 00:37:45,820
trying to achieve is to keep the

00:37:44,020 --> 00:37:51,670
backwards compatibility so we don't have

00:37:45,820 --> 00:37:54,730
to remapping much I see the backward

00:37:51,670 --> 00:37:57,340
compatibility of forum APIs but I don't

00:37:54,730 --> 00:38:00,700
necessarily see them for the map users

00:37:57,340 --> 00:38:02,950
since when an application will light on

00:38:00,700 --> 00:38:05,620
stop positions being mandatory and

00:38:02,950 --> 00:38:07,540
present for every correct route it will

00:38:05,620 --> 00:38:13,810
break when when we stop mapping them

00:38:07,540 --> 00:38:16,060
because they are no longer necessary yes

00:38:13,810 --> 00:38:18,790
you're correct if an app relied on

00:38:16,060 --> 00:38:20,800
public transport tags like expected to

00:38:18,790 --> 00:38:24,940
find public transit platform or stop

00:38:20,800 --> 00:38:29,850
position then it will break because new

00:38:24,940 --> 00:38:29,850
my purse won't add this text but

00:38:30,170 --> 00:38:40,830
yes Simon yeah there are apps that rely

00:38:36,390 --> 00:38:44,850
on the BT v2 tags and usually they're

00:38:40,830 --> 00:38:47,520
very local so they usually work on some

00:38:44,850 --> 00:38:50,580
curated set of cities that are mapped to

00:38:47,520 --> 00:38:53,370
the new schema but not all under all

00:38:50,580 --> 00:38:55,140
others because very few public transport

00:38:53,370 --> 00:38:59,760
routes in the world are mapped correctly

00:38:55,140 --> 00:39:02,490
to the current schema and the idea is to

00:38:59,760 --> 00:39:03,750
keep the compatibility with public

00:39:02,490 --> 00:39:05,640
transit we choose him as much as

00:39:03,750 --> 00:39:08,970
possible so you don't have to remove any

00:39:05,640 --> 00:39:11,040
text you might have to add add have a

00:39:08,970 --> 00:39:14,970
bus stop or railway tram stop to yours

00:39:11,040 --> 00:39:17,220
and the schema will still work in a city

00:39:14,970 --> 00:39:19,760
you can just create a local page saying

00:39:17,220 --> 00:39:22,440
that like in Paris or somewhere else

00:39:19,760 --> 00:39:24,210
rules should be made like this because

00:39:22,440 --> 00:39:26,840
local checking schemas are okay in

00:39:24,210 --> 00:39:29,790
opposite map despite what they say and

00:39:26,840 --> 00:39:33,000
in other cities it will be a bit

00:39:29,790 --> 00:39:35,490
different but you will have not very

00:39:33,000 --> 00:39:37,740
hard time adapting your apps to the

00:39:35,490 --> 00:39:39,960
Global transport schema because right

00:39:37,740 --> 00:39:42,750
now there are a mess and we will have a

00:39:39,960 --> 00:39:50,370
common baseline that can be used by any

00:39:42,750 --> 00:39:55,860
apps first lines don't necessarily stop

00:39:50,370 --> 00:39:57,990
at one border you have my system you get

00:39:55,860 --> 00:40:01,560
bus lines running into all three

00:39:57,990 --> 00:40:05,070
neighboring countries where if we start

00:40:01,560 --> 00:40:06,780
having local schemas there and a

00:40:05,070 --> 00:40:13,050
different local schema across the other

00:40:06,780 --> 00:40:15,440
border its it is not going to be easy to

00:40:13,050 --> 00:40:19,230
digest that data

00:40:15,440 --> 00:40:22,050
yeah it's you cannot imagine mapping one

00:40:19,230 --> 00:40:23,820
line in one schema until one board and

00:40:22,050 --> 00:40:26,730
then continuing that different schema

00:40:23,820 --> 00:40:31,590
and then finish in third schema once we

00:40:26,730 --> 00:40:33,090
crossed the the other border by local I

00:40:31,590 --> 00:40:36,480
don't mean local to countries I mean

00:40:33,090 --> 00:40:41,160
local to regions there are some cities

00:40:36,480 --> 00:40:42,230
yes so when a mapper lives near the

00:40:41,160 --> 00:40:44,450
border

00:40:42,230 --> 00:40:47,210
responsible not only for his part of the

00:40:44,450 --> 00:40:49,490
map behind his border but usually he

00:40:47,210 --> 00:40:52,190
watches out for the whole region

00:40:49,490 --> 00:40:54,680
including other country and there are

00:40:52,190 --> 00:40:57,950
many cities that span multiple countries

00:40:54,680 --> 00:40:59,840
like Volga in Estonia Latvia and there

00:40:57,950 --> 00:41:03,080
is somewhere city in Belgium and

00:40:59,840 --> 00:41:05,869
Netherlands border and it doesn't mean

00:41:03,080 --> 00:41:07,609
that taking rules suddenly change when

00:41:05,869 --> 00:41:11,510
you get from one part of the city to

00:41:07,609 --> 00:41:14,330
another because opposite map doesn't

00:41:11,510 --> 00:41:18,050
take country borders seriously I think

00:41:14,330 --> 00:41:22,450
it allows for some intersection because

00:41:18,050 --> 00:41:25,850
we don't operate on local level much we

00:41:22,450 --> 00:41:28,460
look out for the whole map and we can

00:41:25,850 --> 00:41:30,350
come to agreement with people from

00:41:28,460 --> 00:41:40,760
different sides of the border so I think

00:41:30,350 --> 00:41:43,400
that won't be an issue that much I'm

00:41:40,760 --> 00:41:45,710
sure so maybe first of all I should say

00:41:43,400 --> 00:41:48,100
I'm not a proponent of of topping stop

00:41:45,710 --> 00:41:52,310
positions I think it makes things easier

00:41:48,100 --> 00:41:54,140
I'm just like maybe trying to make

00:41:52,310 --> 00:41:56,990
people aware when when we start like

00:41:54,140 --> 00:42:00,100
iteratively changing the schema and any

00:41:56,990 --> 00:42:03,470
app developer or any data user has to

00:42:00,100 --> 00:42:06,160
adapt multiply multiple times over the

00:42:03,470 --> 00:42:09,470
next few years I guess they get like

00:42:06,160 --> 00:42:11,869
annoyed with weakened changes on how

00:42:09,470 --> 00:42:14,660
public transport is being mapped and

00:42:11,869 --> 00:42:17,000
also eventually we will end up in a

00:42:14,660 --> 00:42:19,130
complete mess because there at least in

00:42:17,000 --> 00:42:23,180
in my in Austria there's still many

00:42:19,130 --> 00:42:25,490
like bus routes in the pool area mapped

00:42:23,180 --> 00:42:33,070
in the old scheme and no one took time

00:42:25,490 --> 00:42:36,470
upgrading that so far well that is the

00:42:33,070 --> 00:42:40,369
reality of OpenStreetMap itself is that

00:42:36,470 --> 00:42:43,190
it changes almost all the time like in

00:42:40,369 --> 00:42:44,840
the past year there were several

00:42:43,190 --> 00:42:47,090
improvements to public transport that

00:42:44,840 --> 00:42:50,450
most of you haven't even noticed like

00:42:47,090 --> 00:42:54,020
hey land right role for highways like

00:42:50,450 --> 00:42:55,700
reverse role for highways like the role

00:42:54,020 --> 00:42:59,660
I forgot which one for

00:42:55,700 --> 00:43:02,270
or stops that are optional and the

00:42:59,660 --> 00:43:05,089
tagging in opposite map is constantly

00:43:02,270 --> 00:43:06,859
evolving changing so if you're using

00:43:05,089 --> 00:43:12,140
Open Street Map and not some created

00:43:06,859 --> 00:43:17,990
dataset not GFS or Dino or whatever then

00:43:12,140 --> 00:43:23,540
you have to track these things to be in

00:43:17,990 --> 00:43:28,579
the loan so it happens yes but with a

00:43:23,540 --> 00:43:31,310
new schema I think it makes a great base

00:43:28,579 --> 00:43:33,829
grateful from them and for building on

00:43:31,310 --> 00:43:42,050
top of it so the basic things

00:43:33,829 --> 00:43:46,420
I hope won't change yeah so does anyone

00:43:42,050 --> 00:43:46,420
have any comments or should we adjourn

00:43:48,940 --> 00:43:56,859
so then maybe like consider some next

00:43:53,060 --> 00:43:59,780
steps we would like to accomplish so I

00:43:56,859 --> 00:44:02,599
think your proposal will get like some

00:43:59,780 --> 00:44:08,930
more comments and and it will end up in

00:44:02,599 --> 00:44:11,150
a voting process as I said in the

00:44:08,930 --> 00:44:13,760
beginning the proposal has still still

00:44:11,150 --> 00:44:15,710
has some issues regarding placement of

00:44:13,760 --> 00:44:18,020
stops and platforms and stuff like that

00:44:15,710 --> 00:44:20,599
so I invite you all to read it and

00:44:18,020 --> 00:44:25,010
comment in discussion sections I don't

00:44:20,599 --> 00:44:28,280
intend to put it to voting not until at

00:44:25,010 --> 00:44:34,000
least autumn so we have many male moths

00:44:28,280 --> 00:44:38,060
I had ahead of us so please read it and

00:44:34,000 --> 00:44:41,089
maybe look at how it applies to your

00:44:38,060 --> 00:44:46,430
mapping in your region so maybe you will

00:44:41,089 --> 00:44:49,430
have some comments and I'd like to

00:44:46,430 --> 00:44:53,780
invite you to my lighting talk today at

00:44:49,430 --> 00:44:57,560
4:00 right before the closing session I

00:44:53,780 --> 00:45:00,940
will be talking about GTFS and schedules

00:44:57,560 --> 00:45:00,940
schedules in OpenStreetMap

00:45:02,579 --> 00:45:09,970
yeah thank you everyone for coming

00:45:05,200 --> 00:45:12,700
I just want to torture us and deprive us

00:45:09,970 --> 00:45:15,220
from coffee but we've been mostly

00:45:12,700 --> 00:45:17,500
talking rightly on the data model but we

00:45:15,220 --> 00:45:19,450
all need that there are needs to to

00:45:17,500 --> 00:45:21,220
build tools and the same way that

00:45:19,450 --> 00:45:23,740
collectively we want to make the data

00:45:21,220 --> 00:45:25,270
model evolving maybe that would be good

00:45:23,740 --> 00:45:27,520
to try to have a sort of collective

00:45:25,270 --> 00:45:30,339
assessments of what's exist in terms of

00:45:27,520 --> 00:45:33,130
to all sides what would need to be fixed

00:45:30,339 --> 00:45:36,010
what would need to be N and who is doing

00:45:33,130 --> 00:45:39,400
what on that field so that maybe people

00:45:36,010 --> 00:45:41,950
wrong us will want to I mean build a

00:45:39,400 --> 00:45:44,410
sort of teams to do that try to pull out

00:45:41,950 --> 00:45:47,349
resources it's sometimes easy to do that

00:45:44,410 --> 00:45:52,660
as a couple of entities and groups and

00:45:47,349 --> 00:45:56,109
individuals and so maybe during coffee

00:45:52,660 --> 00:45:58,839
or we can just write to see how we can

00:45:56,109 --> 00:46:01,200
just try to to collect and lay out the

00:45:58,839 --> 00:46:04,770
map of the one the people that wants to

00:46:01,200 --> 00:46:13,599
to actually develop additional tools if

00:46:04,770 --> 00:46:20,190
such tools or needed okay so any

00:46:13,599 --> 00:46:20,190

YouTube URL: https://www.youtube.com/watch?v=VcyTjidjhZY


