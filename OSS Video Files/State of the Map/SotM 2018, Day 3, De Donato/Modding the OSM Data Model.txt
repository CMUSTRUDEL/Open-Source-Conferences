Title: Modding the OSM Data Model
Publication date: 2018-09-22
Playlist: SotM 2018, Day 3, De Donato
Description: 
	Jochen Topf, State of the Map 2018
https://2018.stateofthemap.org/2018/T107-Modding_the_OSM_Data_Model/

The OpenStreetMap data model has served us well for the last ten years, but it has its quirky corners and some larger problems. From the missing polygon data-type, over difficult handling of updates and historical data to the processing overhead added by the need to get locations for everything from the nodes, this talk will look at current and foreseeable problems, solutions and workarounds we have found, and issues that still need addressing.
Captions: 
	00:00:00,690 --> 00:00:09,120
I I've been working in all of you have

00:00:05,100 --> 00:00:13,980
been working with this data model for a

00:00:09,120 --> 00:00:15,660
very long time I created that graph for

00:00:13,980 --> 00:00:18,390
the book that we wrote when was that

00:00:15,660 --> 00:00:21,539
like 10 years ago and we still have that

00:00:18,390 --> 00:00:23,970
data model and I want to change it I

00:00:21,539 --> 00:00:27,269
want to scribble over it and I wanted to

00:00:23,970 --> 00:00:30,300
do changes after 10 years we have a lot

00:00:27,269 --> 00:00:33,930
of experience what we're doing what we

00:00:30,300 --> 00:00:35,880
want to do with osm data and I think

00:00:33,930 --> 00:00:39,960
it's time to allow us to think about

00:00:35,880 --> 00:00:42,239
this this is what I want to talk about

00:00:39,960 --> 00:00:43,980
first a bit of background how objects

00:00:42,239 --> 00:00:46,530
nodes race relations and always a mode

00:00:43,980 --> 00:00:49,649
we have tags what object identity and

00:00:46,530 --> 00:00:52,829
object relationships mean in was em

00:00:49,649 --> 00:00:55,680
about locality in our data and then I'm

00:00:52,829 --> 00:00:57,870
picking a few specific problems that I

00:00:55,680 --> 00:01:01,530
want to talk about that we can maybe

00:00:57,870 --> 00:01:04,530
address and and look at how how we gonna

00:01:01,530 --> 00:01:07,680
do this in the future so a background

00:01:04,530 --> 00:01:10,409
we've got objects everybody knows that

00:01:07,680 --> 00:01:13,049
or some data model we've got objects no

00:01:10,409 --> 00:01:16,049
its ways and relations so object has

00:01:13,049 --> 00:01:18,600
this type an object has an unique ID per

00:01:16,049 --> 00:01:20,100
type and an object has tags and there's

00:01:18,600 --> 00:01:24,000
also a version change there times have

00:01:20,100 --> 00:01:25,490
user ID and user on those objects I'm

00:01:24,000 --> 00:01:29,159
not going to talk about these things

00:01:25,490 --> 00:01:32,119
this is boring for this kind of for the

00:01:29,159 --> 00:01:35,549
stuff that that I'm concerned with here

00:01:32,119 --> 00:01:37,110
no it's the only object that have a

00:01:35,549 --> 00:01:40,979
location that have a coordinate that's

00:01:37,110 --> 00:01:45,299
very unusual most GIS systems in the

00:01:40,979 --> 00:01:49,439
world work in a different way but for us

00:01:45,299 --> 00:01:54,500
the nodes are what actually connects our

00:01:49,439 --> 00:01:57,930
data to the real world in a way and they

00:01:54,500 --> 00:02:00,540
they have this strange double duty as on

00:01:57,930 --> 00:02:02,700
the one hand they provide the locations

00:02:00,540 --> 00:02:07,110
for mostly ways but also a little bit of

00:02:02,700 --> 00:02:08,580
two relations and on the other hand

00:02:07,110 --> 00:02:11,069
there can be real objects or what we

00:02:08,580 --> 00:02:12,050
call a point of interest or so so here's

00:02:11,069 --> 00:02:14,270
a restaurant or

00:02:12,050 --> 00:02:17,120
a postbox or whatever it is and they can

00:02:14,270 --> 00:02:20,960
be both which makes it even more strange

00:02:17,120 --> 00:02:22,910
so if you have a node on a road that

00:02:20,960 --> 00:02:27,280
says here is there's a traffic light

00:02:22,910 --> 00:02:30,850
here then the node has double duty as

00:02:27,280 --> 00:02:33,830
they look a location on the way and also

00:02:30,850 --> 00:02:35,690
saying that there's a traffic light

00:02:33,830 --> 00:02:38,990
there but it's also part of the geometry

00:02:35,690 --> 00:02:44,090
of the world we have ways they can not

00:02:38,990 --> 00:02:47,180
reference up to 2,000 nodes and a way

00:02:44,090 --> 00:02:50,240
can be a line or when it's closed it can

00:02:47,180 --> 00:02:55,310
be line or a polygon we all know that

00:02:50,240 --> 00:02:56,780
and that's a bit weird off and then we

00:02:55,310 --> 00:02:58,760
have relations and relations are this

00:02:56,780 --> 00:03:02,860
weird flexible thing that binds other

00:02:58,760 --> 00:03:07,850
objects together in some magic way and

00:03:02,860 --> 00:03:09,590
there is there is not one relation

00:03:07,850 --> 00:03:11,990
basically but there's lots of different

00:03:09,590 --> 00:03:15,440
types of relation and they have to be

00:03:11,990 --> 00:03:18,170
handled space especially in any kind of

00:03:15,440 --> 00:03:23,180
software and most of the stuff that

00:03:18,170 --> 00:03:25,100
mappers do with relations is I mean most

00:03:23,180 --> 00:03:26,870
of the stuff is a few relations area

00:03:25,100 --> 00:03:28,610
multiple igano relations turn

00:03:26,870 --> 00:03:31,430
restrictions a few things which are well

00:03:28,610 --> 00:03:33,530
understood and used often and all the

00:03:31,430 --> 00:03:36,830
other stuff is people put in things and

00:03:33,530 --> 00:03:39,709
have a very vague idea how it is ever

00:03:36,830 --> 00:03:42,650
used and most of that is never used I

00:03:39,709 --> 00:03:44,300
don't know anybody who is using site

00:03:42,650 --> 00:03:48,020
relations for instance or anything like

00:03:44,300 --> 00:03:51,650
that maybe there are so anytime any

00:03:48,020 --> 00:03:54,050
number of members members have a type

00:03:51,650 --> 00:03:55,730
and ID in a role there's always a bit

00:03:54,050 --> 00:03:59,989
weird that we have a role there and not

00:03:55,730 --> 00:04:00,830
a key value like we have of the tags but

00:03:59,989 --> 00:04:03,050
there it is

00:04:00,830 --> 00:04:04,640
members are mostly knows away but the

00:04:03,050 --> 00:04:06,110
relations can refer to other relations

00:04:04,640 --> 00:04:09,320
which makes things really really really

00:04:06,110 --> 00:04:11,120
complicated then we have text we all

00:04:09,320 --> 00:04:15,370
know that unlimited number of tags per

00:04:11,120 --> 00:04:20,239
object format key value 255 characters

00:04:15,370 --> 00:04:21,890
keys are unique that was changed way

00:04:20,239 --> 00:04:24,080
back at some point you could have the

00:04:21,890 --> 00:04:28,909
same key twice but that is not allowed

00:04:24,080 --> 00:04:31,550
more for a long time now texted no types

00:04:28,909 --> 00:04:33,469
say there's always there are always

00:04:31,550 --> 00:04:35,629
strings the keys and the values are

00:04:33,469 --> 00:04:38,030
always strings and there is no structure

00:04:35,629 --> 00:04:39,860
in the tag beyond key equals value if

00:04:38,030 --> 00:04:44,090
you just look at sort of the data model

00:04:39,860 --> 00:04:46,210
but tags do have types we have put types

00:04:44,090 --> 00:04:47,330
sort of on top of this string thing

00:04:46,210 --> 00:04:49,669
[Music]

00:04:47,330 --> 00:04:51,289
so sometimes it's in like in a name it's

00:04:49,669 --> 00:04:54,620
just any kind of text saying input in

00:04:51,289 --> 00:04:57,080
they are other tags are we will have a

00:04:54,620 --> 00:04:58,370
boolean type if you want to look at this

00:04:57,080 --> 00:05:00,620
for this sort of computer science you

00:04:58,370 --> 00:05:03,979
kind of view or they have an enumeration

00:05:00,620 --> 00:05:05,629
like a hive a tag has about twenty

00:05:03,979 --> 00:05:08,659
different values that are the common

00:05:05,629 --> 00:05:12,259
ones and everything else nobody uses

00:05:08,659 --> 00:05:16,009
anyway and this has worked for a long

00:05:12,259 --> 00:05:17,870
time for us with those types we have put

00:05:16,009 --> 00:05:20,479
a little bit of hierarchy or some kind

00:05:17,870 --> 00:05:23,419
of structure often in the keys so we

00:05:20,479 --> 00:05:27,020
will use the more or less unstructured

00:05:23,419 --> 00:05:28,729
or simple structured key key equals

00:05:27,020 --> 00:05:31,029
value structure of the tags and put

00:05:28,729 --> 00:05:34,400
other things on top of that and then

00:05:31,029 --> 00:05:36,349
makes problems but it also allows us to

00:05:34,400 --> 00:05:38,629
be really really flexible I know this

00:05:36,349 --> 00:05:42,620
has been discussions about this kind of

00:05:38,629 --> 00:05:50,180
tagging and but I happen to like it more

00:05:42,620 --> 00:05:52,069
not maybe this specific way of doing it

00:05:50,180 --> 00:05:54,139
with the max speed but you can have a

00:05:52,069 --> 00:05:58,150
number in there you can have a number of

00:05:54,139 --> 00:06:01,190
the unit or you can have specific values

00:05:58,150 --> 00:06:03,740
instead of having to say okay max speed

00:06:01,190 --> 00:06:05,659
equals zero means how we don't know or

00:06:03,740 --> 00:06:08,330
something like that like that that's

00:06:05,659 --> 00:06:10,639
what computers people often do but we

00:06:08,330 --> 00:06:12,319
can just type it just put it in a in in

00:06:10,639 --> 00:06:17,150
a nice nice name there

00:06:12,319 --> 00:06:19,039
so these tag sort of tags are often

00:06:17,150 --> 00:06:23,000
quirky inconsistent and and all that but

00:06:19,039 --> 00:06:25,339
but it works and so I think we need more

00:06:23,000 --> 00:06:27,379
back best practice documents there would

00:06:25,339 --> 00:06:29,629
be nice to write up a sort of what our

00:06:27,379 --> 00:06:33,639
experiences are how text can be

00:06:29,629 --> 00:06:35,779
structured and what good and bad

00:06:33,639 --> 00:06:36,949
experiences we have there but I think

00:06:35,779 --> 00:06:41,659
tags are

00:06:36,949 --> 00:06:43,099
good the way their object identity this

00:06:41,659 --> 00:06:47,889
is something that comes up again and

00:06:43,099 --> 00:06:52,819
again people want to have IDs that are

00:06:47,889 --> 00:06:54,560
stable over over time and so you say

00:06:52,819 --> 00:06:57,529
whatever we have here the Palace of

00:06:54,560 --> 00:07:00,139
Westminster and in Vicki data there's a

00:06:57,529 --> 00:07:02,360
qu whatever a number for the Palace of

00:07:00,139 --> 00:07:03,499
Westminster you could cause called the

00:07:02,360 --> 00:07:05,120
house of parliament but is house of

00:07:03,499 --> 00:07:07,219
parliament a different thing than Palace

00:07:05,120 --> 00:07:09,349
of Westminster and it's the Big Ben is

00:07:07,219 --> 00:07:11,449
that part of the Palace of Westminster

00:07:09,349 --> 00:07:13,520
but not it's not part of a house of

00:07:11,449 --> 00:07:16,520
parliament and you get in all sorts of

00:07:13,520 --> 00:07:18,050
what identity even means and I am just I

00:07:16,520 --> 00:07:19,550
said okay we don't care about this we

00:07:18,050 --> 00:07:23,330
this is what we want to do we want to

00:07:19,550 --> 00:07:26,990
draw a map or a 3d thing of the building

00:07:23,330 --> 00:07:28,789
and there's hundreds of osm objects in

00:07:26,990 --> 00:07:31,039
here and they together make up this

00:07:28,789 --> 00:07:34,279
thing maybe that is the Palace of

00:07:31,039 --> 00:07:36,710
Westminster and if it burns down is

00:07:34,279 --> 00:07:38,870
recreated again we don't have to think

00:07:36,710 --> 00:07:42,800
about is this still the same Palace or

00:07:38,870 --> 00:07:47,029
not and do we give it a new ID or not we

00:07:42,800 --> 00:07:48,889
don't care we use the IDS not because

00:07:47,029 --> 00:07:52,069
they refer to real world objects but we

00:07:48,889 --> 00:07:54,139
use IDs to allow editing of of the

00:07:52,069 --> 00:07:55,520
objects that we have to refer back and

00:07:54,139 --> 00:07:58,639
say okay this is the thing that I want

00:07:55,520 --> 00:08:01,159
to edit or for relating one awesome

00:07:58,639 --> 00:08:05,509
object to another which brings us to

00:08:01,159 --> 00:08:07,520
object relationships so as I would say

00:08:05,509 --> 00:08:09,229
three kinds of object relationships that

00:08:07,520 --> 00:08:12,289
we have in in awesome we have the

00:08:09,229 --> 00:08:16,460
explicit one using the ID so the Y

00:08:12,289 --> 00:08:20,089
refers to the node with the ID one two

00:08:16,460 --> 00:08:22,219
three or a relation refers to away with

00:08:20,089 --> 00:08:24,740
the number four five six and that's

00:08:22,219 --> 00:08:26,659
explicitly written down in that data

00:08:24,740 --> 00:08:29,000
object but we have also implicit

00:08:26,659 --> 00:08:31,099
relations weave it through tags include

00:08:29,000 --> 00:08:33,019
geography through geography that makes

00:08:31,099 --> 00:08:35,510
sense if something something is next to

00:08:33,019 --> 00:08:39,469
something else there is a relationship

00:08:35,510 --> 00:08:41,659
there if something is inside say the

00:08:39,469 --> 00:08:44,209
city of Milan boundary or something that

00:08:41,659 --> 00:08:46,910
tells us something and we also have

00:08:44,209 --> 00:08:51,470
relationship through tags all

00:08:46,910 --> 00:08:53,900
the roads in Italy they have a specific

00:08:51,470 --> 00:08:55,940
they have some have a highway tag and

00:08:53,900 --> 00:08:57,470
that relates them to each other and they

00:08:55,940 --> 00:08:59,510
have the location because they're in

00:08:57,470 --> 00:09:01,910
Italy in that recent to each other and

00:08:59,510 --> 00:09:04,730
that means we don't need an explicit

00:09:01,910 --> 00:09:08,420
relation in this case we don't need to

00:09:04,730 --> 00:09:11,090
have something like relation that binds

00:09:08,420 --> 00:09:12,410
all objects all highways in Italy

00:09:11,090 --> 00:09:14,330
together or something because we have

00:09:12,410 --> 00:09:17,450
this relationship already through tax

00:09:14,330 --> 00:09:19,460
and geography so the explicit

00:09:17,450 --> 00:09:21,620
relationship is is good because there's

00:09:19,460 --> 00:09:24,140
no ambiguity you say this is the object

00:09:21,620 --> 00:09:29,090
I'd move throwing to or not not

00:09:24,140 --> 00:09:30,620
something I did something like but it's

00:09:29,090 --> 00:09:32,810
often expensive to handle you have to

00:09:30,620 --> 00:09:34,220
keep this relationship going and if

00:09:32,810 --> 00:09:35,750
something is deleted or changed or

00:09:34,220 --> 00:09:39,620
something you have to make sure it works

00:09:35,750 --> 00:09:41,810
if you split up away into two ways which

00:09:39,620 --> 00:09:44,060
is something we do often you have to

00:09:41,810 --> 00:09:45,890
figure out okay there's Basel relation a

00:09:44,060 --> 00:09:48,500
relation pointing at this way

00:09:45,890 --> 00:09:51,220
which one is it supposed to point at now

00:09:48,500 --> 00:09:54,530
or both of them or only one or the other

00:09:51,220 --> 00:09:58,700
well if it's if the relationship is to

00:09:54,530 --> 00:10:04,610
the tags then this this this doesn't

00:09:58,700 --> 00:10:06,110
matter so implicit relationships make

00:10:04,610 --> 00:10:09,020
objects more independent and it allows

00:10:06,110 --> 00:10:11,420
often working with all objects without a

00:10:09,020 --> 00:10:14,540
database if I look at a file with

00:10:11,420 --> 00:10:17,780
awesome data and read through it and I'm

00:10:14,540 --> 00:10:20,150
I I don't have an explicit relationship

00:10:17,780 --> 00:10:22,490
from this way to another way or

00:10:20,150 --> 00:10:24,410
something like this object stands by

00:10:22,490 --> 00:10:29,120
itself and I can work on that by itself

00:10:24,410 --> 00:10:31,490
it has all the tags and in and that's

00:10:29,120 --> 00:10:38,540
all that I need for many operations and

00:10:31,490 --> 00:10:40,880
that's that's a nice nice thing so the

00:10:38,540 --> 00:10:43,310
collection relations that people like to

00:10:40,880 --> 00:10:47,480
do all motorways in Germany or something

00:10:43,310 --> 00:10:50,300
like that yeah we don't we don't really

00:10:47,480 --> 00:10:52,490
need that I think and we don't need

00:10:50,300 --> 00:10:56,110
those either I associate street

00:10:52,490 --> 00:10:56,110
relations or his ins

00:10:57,910 --> 00:11:04,870
relationships between objects make

00:10:59,959 --> 00:11:08,449
changes difficult if I'm moving a node

00:11:04,870 --> 00:11:10,759
if the user moves a node what he that is

00:11:08,449 --> 00:11:14,350
in a way what he's thinking about is

00:11:10,759 --> 00:11:17,690
moving the way this is this highway is

00:11:14,350 --> 00:11:20,750
slightly going somewhere else it's about

00:11:17,690 --> 00:11:22,459
the way that is the the object we are

00:11:20,750 --> 00:11:26,000
thinking about and interested at that

00:11:22,459 --> 00:11:27,889
point but the actual change in our data

00:11:26,000 --> 00:11:30,769
model is in the node and not the way

00:11:27,889 --> 00:11:40,100
similar problems with with relations and

00:11:30,769 --> 00:11:44,110
all that so yeah relationships are hard

00:11:40,100 --> 00:11:49,220
if we can get get around without them

00:11:44,110 --> 00:11:51,920
it's easier in a word about locality le

00:11:49,220 --> 00:11:54,880
call I mean we are a geo database we are

00:11:51,920 --> 00:11:58,459
about things in the world and there's

00:11:54,880 --> 00:12:00,139
the whole world but in many cases we are

00:11:58,459 --> 00:12:05,959
only interested in very specific local

00:12:00,139 --> 00:12:08,510
places somewhere and if if we if we if

00:12:05,959 --> 00:12:10,040
we work with the data we are only

00:12:08,510 --> 00:12:15,680
interested in the sort of Dell that's

00:12:10,040 --> 00:12:18,560
that's right around it in in in having

00:12:15,680 --> 00:12:20,360
having this feature that local data

00:12:18,560 --> 00:12:24,440
stays local and it's not connected to

00:12:20,360 --> 00:12:30,079
something else somewhere wide over why

00:12:24,440 --> 00:12:33,019
then that makes using it easier so I'm

00:12:30,079 --> 00:12:35,209
getting to the problem so first look at

00:12:33,019 --> 00:12:37,730
the problem size they are 4.6 billion

00:12:35,209 --> 00:12:39,199
nodes at the moment no SM it's an order

00:12:37,730 --> 00:12:42,019
of magnitude larger than the number of

00:12:39,199 --> 00:12:44,480
ways which is two orders of magnitude

00:12:42,019 --> 00:12:46,790
larger than relations so anything that's

00:12:44,480 --> 00:12:49,970
related to nose I think is important to

00:12:46,790 --> 00:12:53,240
fix first that is our biggest where we

00:12:49,970 --> 00:12:55,639
have the biggest problems in in our work

00:12:53,240 --> 00:12:59,120
and ninety-eight percent of all nodes

00:12:55,639 --> 00:13:00,949
are only used to look height to give

00:12:59,120 --> 00:13:03,680
coordinates to the Y's they don't have

00:13:00,949 --> 00:13:04,070
any identity of their own really but

00:13:03,680 --> 00:13:07,130
because

00:13:04,070 --> 00:13:08,630
that and what we we have it so if you

00:13:07,130 --> 00:13:13,550
have a situation like this here's some

00:13:08,630 --> 00:13:16,970
roads and connected in the road network

00:13:13,550 --> 00:13:20,300
and there's a white way and and a pink

00:13:16,970 --> 00:13:22,910
or way in a yellow way and they

00:13:20,300 --> 00:13:24,500
connected certain places and you can

00:13:22,910 --> 00:13:26,630
think of the notes that the red nodes

00:13:24,500 --> 00:13:30,280
here as something okay they have sort of

00:13:26,630 --> 00:13:33,380
a function where they connect up ways or

00:13:30,280 --> 00:13:34,970
in in the case of the barrier of the of

00:13:33,380 --> 00:13:36,710
the gate they are where there is

00:13:34,970 --> 00:13:38,420
something they are that they describe

00:13:36,710 --> 00:13:42,560
but all the white nodes are only there

00:13:38,420 --> 00:13:45,740
to give the shape to the way and I think

00:13:42,560 --> 00:13:47,630
we can get rid of us at the moment if

00:13:45,740 --> 00:13:49,430
you if you work with hours M data the

00:13:47,630 --> 00:13:52,970
first thing you're basically everybody

00:13:49,430 --> 00:13:54,950
has to do is you get all all the nodes

00:13:52,970 --> 00:13:56,570
all the locations of the nodes you put

00:13:54,950 --> 00:13:58,280
them in RAM so you can exit them quickly

00:13:56,570 --> 00:14:02,480
and then you add this information to the

00:13:58,280 --> 00:14:07,340
way so you do that and it prevents you

00:14:02,480 --> 00:14:09,610
from using just ways by themselves you

00:14:07,340 --> 00:14:14,870
always have to refer to this other thing

00:14:09,610 --> 00:14:16,730
and it makes it makes it very difficult

00:14:14,870 --> 00:14:19,160
especially to work with changes and

00:14:16,730 --> 00:14:21,470
figure out okay you always have to keep

00:14:19,160 --> 00:14:23,720
the information this way was really

00:14:21,470 --> 00:14:24,950
created from the location of these nodes

00:14:23,720 --> 00:14:28,910
there's no change they have to change

00:14:24,950 --> 00:14:32,870
the way so I'm proposing to doing

00:14:28,910 --> 00:14:35,780
something like this going from going

00:14:32,870 --> 00:14:38,750
from the what we have now with the

00:14:35,780 --> 00:14:41,360
locations on the nodes directly putting

00:14:38,750 --> 00:14:42,920
them in the way and maybe only doing

00:14:41,360 --> 00:14:47,630
that for those things which don't have

00:14:42,920 --> 00:14:51,560
any any tags may be doing it also for

00:14:47,630 --> 00:14:53,630
those that have tags maybe get rid of

00:14:51,560 --> 00:14:55,490
that reference also I don't know I don't

00:14:53,630 --> 00:14:57,020
know yet what is the best way and I

00:14:55,490 --> 00:14:59,510
can't know everything that people do

00:14:57,020 --> 00:15:00,920
with all this data and I want to talk to

00:14:59,510 --> 00:15:02,480
each and every one of you and figure out

00:15:00,920 --> 00:15:06,400
sort of what you are doing and what kind

00:15:02,480 --> 00:15:08,780
of data model would fits best for you

00:15:06,400 --> 00:15:10,910
and of course everybody's gonna screen

00:15:08,780 --> 00:15:14,720
and oh god now this is gonna be horrible

00:15:10,910 --> 00:15:16,510
we'll get this situation and the ways

00:15:14,720 --> 00:15:18,579
will not connect up

00:15:16,510 --> 00:15:22,110
and something like that that that by the

00:15:18,579 --> 00:15:27,399
way that's a real picture it seems and

00:15:22,110 --> 00:15:30,699
and that is not sure we can do that we

00:15:27,399 --> 00:15:32,920
can in the editor make still sure that

00:15:30,699 --> 00:15:34,570
if you move a note others will snap to

00:15:32,920 --> 00:15:37,089
it and all of that every vector drawing

00:15:34,570 --> 00:15:40,480
program does that it doesn't need the

00:15:37,089 --> 00:15:45,970
unique ID so so that would still be

00:15:40,480 --> 00:15:48,220
possible yeah that's what I just said if

00:15:45,970 --> 00:15:50,199
you want to just play around with this a

00:15:48,220 --> 00:15:52,269
little bit the awesome command can put

00:15:50,199 --> 00:15:55,029
the node location on the wise and then

00:15:52,269 --> 00:15:58,269
you can in a PDF file on an XML file and

00:15:55,029 --> 00:16:00,880
you can try that out

00:15:58,269 --> 00:16:04,329
but as I said there's many many things

00:16:00,880 --> 00:16:07,019
we have to figure out all the details

00:16:04,329 --> 00:16:09,459
what exactly which nodes are we gonna

00:16:07,019 --> 00:16:11,410
get rid of in which nodes we need to

00:16:09,459 --> 00:16:13,959
keep and all right

00:16:11,410 --> 00:16:16,029
then there's another problem mention

00:16:13,959 --> 00:16:17,320
that earlier that if you have a closed

00:16:16,029 --> 00:16:18,970
why you don't know whether it's a

00:16:17,320 --> 00:16:22,480
polygon a line string and sometimes can

00:16:18,970 --> 00:16:25,149
be both so in this case there is a land

00:16:22,480 --> 00:16:27,160
use which makes this a polygon but

00:16:25,149 --> 00:16:31,029
there's also a barrier which is the

00:16:27,160 --> 00:16:33,779
fence around the property and in death

00:16:31,029 --> 00:16:39,399
this this can be difficult to handle and

00:16:33,779 --> 00:16:41,620
and basically all the software that uses

00:16:39,399 --> 00:16:44,350
awesome data software like awesome TPG

00:16:41,620 --> 00:16:49,329
has got all the editors they have to

00:16:44,350 --> 00:16:51,819
have a list of tags that did I'll tell

00:16:49,329 --> 00:16:53,680
them if you find this tag in a in a

00:16:51,819 --> 00:16:55,720
closed way then this is in the area or

00:16:53,680 --> 00:16:58,120
this is a this is a line string and

00:16:55,720 --> 00:17:02,079
that's very very difficult to write

00:16:58,120 --> 00:17:06,640
generic software to do this correctly if

00:17:02,079 --> 00:17:13,720
you look at it there's 355 million

00:17:06,640 --> 00:17:17,049
closed wise 96% 96% of them are areas

00:17:13,720 --> 00:17:19,990
most of our buildings and I tried to

00:17:17,049 --> 00:17:21,959
filter out and had a hundred eighty

00:17:19,990 --> 00:17:25,449
seven filter rules to figure out sort of

00:17:21,959 --> 00:17:29,930
put them into categories find out what

00:17:25,449 --> 00:17:32,460
type each is and there are still

00:17:29,930 --> 00:17:34,320
undecided there's still four million

00:17:32,460 --> 00:17:35,520
that undecided that I couldn't figure

00:17:34,320 --> 00:17:37,560
out what those rules are any more and

00:17:35,520 --> 00:17:40,290
more rules and I've need that everybody

00:17:37,560 --> 00:17:42,990
else need them do and I think we can fix

00:17:40,290 --> 00:17:46,680
that by just putting a little flag on

00:17:42,990 --> 00:17:50,700
the wise and there's a easy way of

00:17:46,680 --> 00:17:52,650
introducing that but and and that can be

00:17:50,700 --> 00:17:56,610
done easily in a backwards compatible by

00:17:52,650 --> 00:17:59,280
I think relations are great grace are

00:17:56,610 --> 00:18:01,530
flexible and gate for experimenting but

00:17:59,280 --> 00:18:04,860
if you have relations like like this the

00:18:01,530 --> 00:18:10,970
European hiking trial going through a

00:18:04,860 --> 00:18:13,470
half a continent or if you have a huge

00:18:10,970 --> 00:18:15,750
huge relations but thousands and

00:18:13,470 --> 00:18:18,090
thousands of members if you have this

00:18:15,750 --> 00:18:20,370
every change that you do somewhere over

00:18:18,090 --> 00:18:22,860
here will result in this relation

00:18:20,370 --> 00:18:24,930
changing and all the people watching

00:18:22,860 --> 00:18:26,640
this down they are they get it change

00:18:24,930 --> 00:18:28,200
for something that which happened over

00:18:26,640 --> 00:18:29,370
there you have a version that's the

00:18:28,200 --> 00:18:32,460
highest version I could find in the

00:18:29,370 --> 00:18:35,730
planet fire three hundred thousand one

00:18:32,460 --> 00:18:37,590
hundred and nineteen for a relation that

00:18:35,730 --> 00:18:39,300
we have to fix this we have to find ways

00:18:37,590 --> 00:18:41,880
of better handling relations maybe by

00:18:39,300 --> 00:18:42,480
putting them into smaller pieces or

00:18:41,880 --> 00:18:45,510
something

00:18:42,480 --> 00:18:47,880
relations are often broken this is we we

00:18:45,510 --> 00:18:50,430
do a huge effort last year to fix broken

00:18:47,880 --> 00:18:53,820
multi polygon relations that's the tip

00:18:50,430 --> 00:18:55,500
you can see and we and since then it has

00:18:53,820 --> 00:18:57,750
been creeping up again it's just one

00:18:55,500 --> 00:19:01,080
type of voice like way that can be

00:18:57,750 --> 00:19:02,430
broken so I I don't know yet what the

00:19:01,080 --> 00:19:08,280
solutions are

00:19:02,430 --> 00:19:10,410
and one thing is with the areas we can

00:19:08,280 --> 00:19:12,450
take out the areas and maybe inventing

00:19:10,410 --> 00:19:17,070
new data for that I talked about this

00:19:12,450 --> 00:19:19,950
years ago or I don't know but let's talk

00:19:17,070 --> 00:19:22,080
about this some more also there's a

00:19:19,950 --> 00:19:25,530
workshop a bit later today

00:19:22,080 --> 00:19:27,300
what AA bleached the overpass guy and

00:19:25,530 --> 00:19:29,070
he's also going to talk about similar

00:19:27,300 --> 00:19:30,450
things that that I am talking about and

00:19:29,070 --> 00:19:32,580
he's looking at looking more

00:19:30,450 --> 00:19:38,940
interrelations and how to how to work on

00:19:32,580 --> 00:19:41,040
that and yeah so I'm joking he's saying

00:19:38,940 --> 00:19:41,940
that I want to start a revolution but it

00:19:41,040 --> 00:19:45,090
really isn't

00:19:41,940 --> 00:19:48,420
I mean we can't we can have a huge

00:19:45,090 --> 00:19:50,190
change and too quickly and we need some

00:19:48,420 --> 00:19:51,780
consensus in the community especially we

00:19:50,190 --> 00:19:53,700
need to have obviously buy-in from

00:19:51,780 --> 00:19:55,200
developers that I talk to a lot of you

00:19:53,700 --> 00:19:57,420
and a lot of people here at the

00:19:55,200 --> 00:20:00,090
conference and there wasn't a single one

00:19:57,420 --> 00:20:01,860
who said no no this is all horrible and

00:20:00,090 --> 00:20:05,220
you don't do that basically everybody

00:20:01,860 --> 00:20:08,010
said yes this goes into I had that

00:20:05,220 --> 00:20:10,620
problem also and so that gives me hope

00:20:08,010 --> 00:20:12,450
that we can maybe do that and we also

00:20:10,620 --> 00:20:14,610
had we always have to keep in mind that

00:20:12,450 --> 00:20:16,350
we have a single bottleneck here which

00:20:14,610 --> 00:20:18,480
is our central database and a central

00:20:16,350 --> 00:20:23,430
API and we have to make sure it works

00:20:18,480 --> 00:20:25,290
for that case to this repository that I

00:20:23,430 --> 00:20:27,420
started there's not much there yet but

00:20:25,290 --> 00:20:31,170
this is where we can have a discussion

00:20:27,420 --> 00:20:33,510
so please come there and I'll fill it in

00:20:31,170 --> 00:20:36,060
the next days but the more information

00:20:33,510 --> 00:20:38,450
that I have and we can open issues there

00:20:36,060 --> 00:20:41,310
and discuss the all the different things

00:20:38,450 --> 00:20:43,980
thanks to Matt Parks who is as part of

00:20:41,310 --> 00:20:46,470
my contracting work for them allowed me

00:20:43,980 --> 00:20:50,130
to work on this on their on their backs

00:20:46,470 --> 00:20:50,850
in yeah thank you for listen it's

00:20:50,130 --> 00:20:54,590
listening to me

00:20:50,850 --> 00:20:54,590
so thank you Joe

00:20:58,250 --> 00:21:09,650
I don't know I always ask a question

00:21:05,960 --> 00:21:12,980
Johann do you have any numbers on how

00:21:09,650 --> 00:21:17,299
many nodes are shared between ways with

00:21:12,980 --> 00:21:20,330
this partially common geometry

00:21:17,299 --> 00:21:23,270
I assume the numbers probably low but

00:21:20,330 --> 00:21:24,110
it's obviously one case which would have

00:21:23,270 --> 00:21:28,299
to be looked at

00:21:24,110 --> 00:21:31,100
yeah so I'm I've written some tools and

00:21:28,299 --> 00:21:33,409
to create statistics like that to figure

00:21:31,100 --> 00:21:35,929
out for instance when you have two areas

00:21:33,409 --> 00:21:39,320
our land uses whatever their touch and

00:21:35,929 --> 00:21:40,970
they have a common common border and yes

00:21:39,320 --> 00:21:43,370
I do have numbers but I don't have them

00:21:40,970 --> 00:21:46,130
at the moment but that is definitely

00:21:43,370 --> 00:21:48,380
something we have to go through and

00:21:46,130 --> 00:21:52,010
figure out sort of for each use case

00:21:48,380 --> 00:21:54,620
that we have basically how many they are

00:21:52,010 --> 00:21:57,740
is there's a big problem and not and and

00:21:54,620 --> 00:21:59,470
there's always one person says okay what

00:21:57,740 --> 00:22:02,360
are we going to do with the lift that

00:21:59,470 --> 00:22:04,549
has two nodes on top of each other and

00:22:02,360 --> 00:22:06,380
if you don't have the nodes anymore how

00:22:04,549 --> 00:22:07,940
we gonna do that and yes we have to

00:22:06,380 --> 00:22:13,100
figure out all those corner cases but

00:22:07,940 --> 00:22:16,070
the big case is is the buildings which

00:22:13,100 --> 00:22:18,409
are so simple and yeah I don't actually

00:22:16,070 --> 00:22:20,120
think the elevator thing is not a

00:22:18,409 --> 00:22:26,570
problem then we just keep the notes for

00:22:20,120 --> 00:22:28,330
that kind of situation so right any

00:22:26,570 --> 00:22:32,230
other questions

00:22:28,330 --> 00:22:32,230
there's one in the back then

00:22:36,790 --> 00:22:43,720
yeah what is actually the main goal that

00:22:40,450 --> 00:22:46,480
you have of this I mean it's especially

00:22:43,720 --> 00:22:49,570
I think you want to have easier

00:22:46,480 --> 00:22:53,320
processing of multi polygon or politic

00:22:49,570 --> 00:22:56,800
data is that the main goal what is the

00:22:53,320 --> 00:23:02,590
mingoes that I want easier processing of

00:22:56,800 --> 00:23:06,610
the data and that means that at the

00:23:02,590 --> 00:23:09,550
moment you need a huge machine to do

00:23:06,610 --> 00:23:11,440
this in a nominal marathon and this is

00:23:09,550 --> 00:23:14,440
going to get worse and worse the more we

00:23:11,440 --> 00:23:15,790
references we have between objects this

00:23:14,440 --> 00:23:19,690
is getting more and more difficult and I

00:23:15,790 --> 00:23:24,430
want the student to run the planet on on

00:23:19,690 --> 00:23:27,340
their laptop and I want to have changes

00:23:24,430 --> 00:23:29,290
that mean something that are easy to

00:23:27,340 --> 00:23:31,240
process because this is one of the big

00:23:29,290 --> 00:23:35,290
problems we have been grappling with

00:23:31,240 --> 00:23:37,060
this for years in in awesome that we

00:23:35,290 --> 00:23:39,370
want is people want to see the changes

00:23:37,060 --> 00:23:42,100
happening in their area and make sure

00:23:39,370 --> 00:23:45,610
they are okay and all that and it's very

00:23:42,100 --> 00:23:48,190
very difficult to handle this and so

00:23:45,610 --> 00:23:50,160
there's there's those cases where just

00:23:48,190 --> 00:23:53,920
the data processing is made

00:23:50,160 --> 00:23:55,480
unnecessarily complex and and expensive

00:23:53,920 --> 00:23:58,750
really if you look at the hardware that

00:23:55,480 --> 00:24:02,620
you need and all that int I want to make

00:23:58,750 --> 00:24:04,840
that simpler I do think that part of the

00:24:02,620 --> 00:24:07,030
problem is also slightly being out of

00:24:04,840 --> 00:24:09,430
take apart hardware itself because I've

00:24:07,030 --> 00:24:12,430
actually been doing some real-world

00:24:09,430 --> 00:24:14,890
tests with data from the whole of Europe

00:24:12,430 --> 00:24:17,890
and importing it at almost simple laptop

00:24:14,890 --> 00:24:19,810
using SMTP T sequel and the main thing

00:24:17,890 --> 00:24:24,720
that I see is that if you have SSD and

00:24:19,810 --> 00:24:29,830
you put in enough swap space on the SSD

00:24:24,720 --> 00:24:32,470
and affirming on VirtualBox if if there

00:24:29,830 --> 00:24:36,250
is enough swap space there and you have

00:24:32,470 --> 00:24:38,050
16 gigabytes of RAM you can import it

00:24:36,250 --> 00:24:40,990
but you need to have the sub space

00:24:38,050 --> 00:24:44,650
that's important and but I think with

00:24:40,990 --> 00:24:46,260
swap space the speed on an SSD is enough

00:24:44,650 --> 00:24:48,750
to do

00:24:46,260 --> 00:24:52,890
proper work it's imported in 17 hours

00:24:48,750 --> 00:24:57,809
and I don't see a real big problem on

00:24:52,890 --> 00:24:59,640
Lao support where nowadays hardware

00:24:57,809 --> 00:25:03,809
nowadays is obviously better than it was

00:24:59,640 --> 00:25:05,610
but if we if we change this so if if you

00:25:03,809 --> 00:25:08,940
do some of the changes I'm proposing

00:25:05,610 --> 00:25:14,299
here we need hundreds of gigabytes less

00:25:08,940 --> 00:25:18,030
in in dozens in in RAM and hundreds in

00:25:14,299 --> 00:25:21,990
indexes on disk this is a huge change

00:25:18,030 --> 00:25:23,880
and this is not also for not only for

00:25:21,990 --> 00:25:25,860
today but obviously mums going all the

00:25:23,880 --> 00:25:29,790
time obviously so this problem is

00:25:25,860 --> 00:25:32,030
getting worse and worse and yeah poor

00:25:29,790 --> 00:25:32,030
ones

00:25:43,220 --> 00:25:48,710
I'm one of the open the OSM 2pg seek

00:25:46,220 --> 00:25:51,860
will maintain errs and by far the

00:25:48,710 --> 00:25:58,010
biggest issue right now with anyone

00:25:51,860 --> 00:26:00,710
processing it is note to parent ways and

00:25:58,010 --> 00:26:04,010
ways to notes mapping which takes up

00:26:00,710 --> 00:26:07,010
which for a plant-wide import is a on

00:26:04,010 --> 00:26:11,060
the order of half the space and more

00:26:07,010 --> 00:26:14,600
than half of the time of the import and

00:26:11,060 --> 00:26:20,140
it is the single greatest barrier to

00:26:14,600 --> 00:26:23,000
being able to import unlimited hardware

00:26:20,140 --> 00:26:25,790
it is definitely possible to import

00:26:23,000 --> 00:26:29,840
little Flint limited RAM but the big

00:26:25,790 --> 00:26:33,650
issue is the big three hundred fifty

00:26:29,840 --> 00:26:40,460
gigs of table and index needed to go

00:26:33,650 --> 00:26:42,880
back and forth between nodes and ways we

00:26:40,460 --> 00:26:44,150
just thumb for just last your question

00:26:42,880 --> 00:26:46,870
okay

00:26:44,150 --> 00:26:49,250
just a comment to colleague there

00:26:46,870 --> 00:26:51,800
OpenStreetMap is open data and it should

00:26:49,250 --> 00:26:54,500
be open standards for geospatial data

00:26:51,800 --> 00:26:57,680
they are they are set of open standards

00:26:54,500 --> 00:27:00,170
in and this would be a step in the right

00:26:57,680 --> 00:27:02,590
direction so it's not about just

00:27:00,170 --> 00:27:05,720
processing power it's about standard

00:27:02,590 --> 00:27:08,960
standardization and compliance with open

00:27:05,720 --> 00:27:13,520
standards and this is derived something

00:27:08,960 --> 00:27:14,770
in that direction at least I see it that

00:27:13,520 --> 00:27:17,890
way

00:27:14,770 --> 00:27:17,890
thank you

00:27:19,900 --> 00:27:23,830
wait wait one second

00:27:30,249 --> 00:27:38,450
yes before a new got to no ups treatment

00:27:36,350 --> 00:27:39,739
but I was more familiar with those open

00:27:38,450 --> 00:27:43,489
standards that you're talking about I

00:27:39,739 --> 00:27:46,429
mean and I've but I've always felt that

00:27:43,489 --> 00:27:48,350
on the other hand that this kind of got

00:27:46,429 --> 00:27:50,139
my data model that's obviously currently

00:27:48,350 --> 00:27:54,679
uses it's very similar to what

00:27:50,139 --> 00:27:57,080
traditional cut systems used to do like

00:27:54,679 --> 00:28:01,909
alter cards and other stuff so it's not

00:27:57,080 --> 00:28:05,629
completely unfamiliar and I think there

00:28:01,909 --> 00:28:09,169
is it's just another type of data model

00:28:05,629 --> 00:28:12,440
and I'm on the one end and I agree that

00:28:09,169 --> 00:28:14,450
some change might help but on the other

00:28:12,440 --> 00:28:16,879
hand there is also the fact that this

00:28:14,450 --> 00:28:18,619
there is just simply two different data

00:28:16,879 --> 00:28:27,940
models and both have their advantages

00:28:18,619 --> 00:28:31,970
and disadvantages as to being able to

00:28:27,940 --> 00:28:35,210
process it I think I was into PTC but

00:28:31,970 --> 00:28:38,470
already since it does process two simple

00:28:35,210 --> 00:28:41,389
features and it creates the database as

00:28:38,470 --> 00:28:43,399
we all know it's more or less from a

00:28:41,389 --> 00:28:47,539
simple features perspective

00:28:43,399 --> 00:28:50,570
I personally am not entirely sure if if

00:28:47,539 --> 00:28:53,779
if the if Vantage's of changing the

00:28:50,570 --> 00:28:56,869
whole model will outweigh what we have

00:28:53,779 --> 00:28:58,549
now but anyway III kind of I can see I

00:28:56,869 --> 00:29:00,590
see logic in it but I also see that

00:28:58,549 --> 00:29:04,279
today both models have their advantages

00:29:00,590 --> 00:29:07,249
and disadvantages and it's a difficult

00:29:04,279 --> 00:29:09,109
discussion I fully agree in that that is

00:29:07,249 --> 00:29:10,940
that is true and me we have to look at

00:29:09,109 --> 00:29:12,679
all the advantages advantages and

00:29:10,940 --> 00:29:14,450
disadvantages for my experience in that

00:29:12,679 --> 00:29:17,480
this is what I'm hearing from other

00:29:14,450 --> 00:29:19,730
people too is we have to think about

00:29:17,480 --> 00:29:22,070
what we are doing with the data and what

00:29:19,730 --> 00:29:25,850
most people are doing with the data in

00:29:22,070 --> 00:29:27,919
optimize for them and sure there will be

00:29:25,850 --> 00:29:29,720
cases where things get more difficult if

00:29:27,919 --> 00:29:33,019
we change the data model and there is

00:29:29,720 --> 00:29:35,119
obviously the difficulty of the doing

00:29:33,019 --> 00:29:36,470
the change itself and all the developer

00:29:35,119 --> 00:29:39,139
time you spend on that and we can

00:29:36,470 --> 00:29:41,299
discuss whether that's whether it's

00:29:39,139 --> 00:29:43,640
makes sense

00:29:41,299 --> 00:29:46,970
but yeah I want to start a discussion I

00:29:43,640 --> 00:29:49,419
think we are at a time thank you thank

00:29:46,970 --> 00:29:49,419
you Oh suit

00:29:52,290 --> 00:29:55,380

YouTube URL: https://www.youtube.com/watch?v=rbxabz22ni4


