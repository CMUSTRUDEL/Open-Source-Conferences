Title: What's up with the public transport
Publication date: 2018-08-17
Playlist: SotM 2018, Day 1, S.0.2
Description: 
	Ilya Zverev (MAPS.ME), State of the Map 2018
https://2018.stateofthemap.org/2018/T085-What_s_up_with_the_public_transport/

The Public Transport schema was in use for ten years, having seen two versions of it. Could it be used for actual routing? No. How do I know? Well, when I tried, turned out there were crucial parts missing. And the OSM community protested making the schema usable. So, all in all, this is a story about making OSM data usable for worldwide subway routing for MAPS.ME: why did we even start and how we ensured the relations are not broken. And, hopefully, a story about tidying up all the public transport routes for all the modes on the planet.
Captions: 
	00:00:03,980 --> 00:00:08,979
Hi everyone, I am Ilya Zverev and I love public transportation

00:00:10,430 --> 00:00:12,879
When I joined OpenStreetMap in 2010

00:00:13,640 --> 00:00:16,260
it was nearly the first thing I met

00:00:16,760 --> 00:00:20,240
like I added missing bus stops near my house and

00:00:20,700 --> 00:00:22,960
and then I went to

00:00:23,020 --> 00:00:29,480
work with Route relations, you know when I joined OpenStreetMap, this was pretty logical and

00:00:31,460 --> 00:00:33,579
Fixing route relations is pretty easy

00:00:33,580 --> 00:00:40,780
You just add bus stops in order and bus stops are very simple bigger than just this tagging, nothing else

00:00:41,520 --> 00:00:46,020
And the second part of route relation is a highways

00:00:47,059 --> 00:00:50,259
Highways which buses used to approach bus stops

00:00:51,220 --> 00:00:55,860
so you open JOSM and you select route segments

00:00:56,460 --> 00:01:02,280
and then you find out that you have to split to the next segment at the intersection

00:01:02,640 --> 00:01:08,560
So you lose your selections with the way, start selecting again again, and on the next intersection, of course

00:01:08,560 --> 00:01:15,190
You need to split it again. So it was very tedious and frustrating job, but well, I like public transport

00:01:15,190 --> 00:01:19,000
so I fix the couples and

00:01:20,360 --> 00:01:27,920
After that, I finally opened the wiki and tried to find out how to make public transport properly

00:01:29,060 --> 00:01:31,510
at the time there was a

00:01:32,200 --> 00:01:34,200
popular schema by

00:01:34,720 --> 00:01:37,220
Sebastian Schwartz known as Oxomoa

00:01:38,240 --> 00:01:42,380
it was made by a committee of German mappers and

00:01:43,250 --> 00:01:45,250
It looked very promising

00:01:45,890 --> 00:01:48,489
It was based on European standards

00:01:49,070 --> 00:01:55,449
It looked it promised consistency with promised order in relations and usability.

00:01:56,270 --> 00:02:00,339
I really liked the schema because well it looked orderly

00:02:01,010 --> 00:02:03,099
It made you feel like

00:02:03,830 --> 00:02:05,830
various

00:02:05,930 --> 00:02:08,349
That you know what you're doing.

00:02:09,440 --> 00:02:15,460
I like public transport so I of course translated into Russian. I didn't stop at the 30 kilobytes of the scheme I also

00:02:16,090 --> 00:02:19,690
wrote some tutorials

00:02:20,599 --> 00:02:26,289
Explain the JOSM public transport plugin, and when the next proposal appeared I also translated

00:02:27,290 --> 00:02:29,290
and outlined the differences and so on

00:02:30,530 --> 00:02:37,119
The proposal is very big. Most people have read it almost nobody have researched it, for example

00:02:37,120 --> 00:02:39,580
It introduced some things that didn't catch up

00:02:40,190 --> 00:02:42,190
like waterway ferries

00:02:42,380 --> 00:02:44,439
There are still zero usages of that

00:02:46,489 --> 00:02:53,679
But still, it will great so I set off to map my bus routes in that proposal

00:02:54,709 --> 00:02:57,189
and it turned out not so great because

00:02:58,819 --> 00:03:03,939
Now for each bus stop you had to add two objects with a lot of tags and

00:03:04,190 --> 00:03:07,989
you had to add them to route relations in specific order and

00:03:09,920 --> 00:03:13,509
It was of course very easy to mess up the order and

00:03:14,180 --> 00:03:19,060
More than that you have to create several route relations for a single route

00:03:19,700 --> 00:03:21,590
so it was

00:03:21,590 --> 00:03:24,970
Very very frustrating especially for novice like me

00:03:27,109 --> 00:03:30,699
So I stepped off and I didn't touch

00:03:32,030 --> 00:03:35,199
any public transport route again in a few years,

00:03:38,030 --> 00:03:45,339
so by the time I left my old job, I moved to Moscow, joined Maps.me, did some impossible things with OpenStreetMap for them

00:03:45,860 --> 00:03:49,100
and last year, my boss comes to me and says

00:03:49,720 --> 00:03:56,820
Well, you did a great job on the subway demo on the hackathon. So, how about you

00:03:58,580 --> 00:04:02,740
Prepare all the subway networks in the world for Maps.me

00:04:10,380 --> 00:04:17,390
So how do you do that, you know public transport routes and relations relations in OpenStreetMap are always broken

00:04:17,910 --> 00:04:19,910
So, how do you prepare that for

00:04:20,459 --> 00:04:22,459
an application that's used by new users

00:04:23,430 --> 00:04:27,320
Well, well in my experience and all that, I had to write validator

00:04:28,020 --> 00:04:30,919
A website which shows what's wrong and how can you fix it

00:04:32,040 --> 00:04:34,700
And to write validator first, you know

00:04:35,550 --> 00:04:39,559
You should know what is correct. And what is wrong

00:04:41,480 --> 00:04:47,180
So I started to read all the wiki pages on subways ever written and

00:04:47,760 --> 00:04:52,400
In that, search after the search, I understood one thing that

00:04:53,580 --> 00:04:59,900
Nobody has used subways in OpenStreetMap for anything but displaying on a static map

00:05:00,720 --> 00:05:02,250
for example

00:05:02,250 --> 00:05:07,160
You should have used a subway interchanges. Maybe you switched from m1 to m2 here

00:05:07,800 --> 00:05:10,430
or anything. Interchange is where you

00:05:11,010 --> 00:05:13,640
change stations on subway without leaving

00:05:14,220 --> 00:05:17,119
the subway network without passing any tourniquets

00:05:18,000 --> 00:05:25,910
An there was no absolutely no way to map it in OpenStreetMap. It has zero interchanges because there was no taking for it

00:05:27,750 --> 00:05:34,640
Then subway entrances, of course, we have a tag for subway entrances, but the thing is it's not a part of public transport schema

00:05:35,130 --> 00:05:42,409
so there are stops and platforms and routes and there are entrances that are completely separate not linked to stations

00:05:42,690 --> 00:05:47,119
And to enter a subway station you have to know where to go, where to enter

00:05:47,790 --> 00:05:49,790
What entrance to use?

00:05:50,340 --> 00:05:55,070
So the obvious candidate to link entrances and stations is stop area relations

00:05:55,530 --> 00:05:59,809
But stop areas were not clearly defined in the public transport schema. So

00:06:00,660 --> 00:06:08,450
people were adding all kind of things to stop areas, multiple stations in one stop area, for some

00:06:09,270 --> 00:06:11,270
railway stations in Paris

00:06:11,730 --> 00:06:15,230
They seem to just drop everything they could find in stop areas

00:06:15,380 --> 00:06:22,760
there were big relations with several thousand members like you can select all with an area of

00:06:23,120 --> 00:06:28,399
Railway station and in that relation there were footways there were shops everything

00:06:30,690 --> 00:06:35,179
So I made a wiki page on how to map subways properly

00:06:35,460 --> 00:06:39,470
This is it in a nutshell looks very complex, but it isn't actually

00:06:40,800 --> 00:06:44,150
And I made this inter proposal this one

00:06:45,690 --> 00:06:52,130
It didn't catch up because I made a mistake of wording it like a tutorial

00:06:53,400 --> 00:06:56,959
Like a document that new mappers have used to map up

00:06:57,780 --> 00:06:59,780
subways and I

00:07:00,140 --> 00:07:06,780
copied a lot of stuff from other wiki pages that were already accepted and used, and turned out that mappers in OpenStreetMap

00:07:07,380 --> 00:07:13,940
Don't like the status quo. They don't like things that I described on other wiki pages. So I had to do something else

00:07:14,430 --> 00:07:16,430
I'll get back to that in a moment and

00:07:16,979 --> 00:07:19,159
Meanwhile, I was writing a validator

00:07:20,039 --> 00:07:24,799
a processor that would turn OpenStreetMap data to data usable by Maps.me

00:07:26,280 --> 00:07:28,459
First thing I did was to

00:07:29,639 --> 00:07:32,269
Read Wikipedia and compile a list of all

00:07:32,940 --> 00:07:36,529
public transport network or subway networks in the world

00:07:37,340 --> 00:07:40,680
by now, there are 191 of them

00:07:42,120 --> 00:07:46,080
You see number of lines, number of stations, bounding box and so on

00:07:46,740 --> 00:07:52,849
and I wrote a Python script that converted OSM data into a series of

00:07:53,310 --> 00:07:57,919
object structures which had everything you might ever wanted to know about

00:07:58,979 --> 00:08:06,469
subways from routes to stops to points where train stops and stations and transfers also

00:08:07,139 --> 00:08:14,929
and of course this was, it produced errors and warnings when it compiled the network so we know what to fix and

00:08:15,360 --> 00:08:17,479
I ran this validator on

00:08:18,690 --> 00:08:20,690
OpenStreetMap, and how many

00:08:21,510 --> 00:08:27,289
Cities had good enough subway networks. It was only three in the whole world

00:08:29,370 --> 00:08:31,169
What to do with that

00:08:31,169 --> 00:08:33,030
well, I

00:08:33,030 --> 00:08:35,030
took my time of everything

00:08:35,720 --> 00:08:36,540
and

00:08:36,540 --> 00:08:38,540
I mapped hard, like,

00:08:39,020 --> 00:08:42,100
for three months I did almost nothing but fixing

00:08:42,940 --> 00:08:45,180
subway networks and

00:08:45,960 --> 00:08:50,360
I had some students help me and big thanks to Claudius Henrichs

00:08:51,320 --> 00:08:53,300
The guy who

00:08:53,310 --> 00:09:00,109
fixed a lot of subway networks all over the world, not sure if he's here, but thanks Claudius

00:09:01,290 --> 00:09:05,120
and in three months, we released in the application 73 networks

00:09:06,390 --> 00:09:08,390
It was pretty great

00:09:08,910 --> 00:09:12,080
all this while the proposal was failing so

00:09:13,320 --> 00:09:15,720
by now, there are I think

00:09:16,240 --> 00:09:18,940
170 networks

00:09:19,830 --> 00:09:23,270
Ready for routing for this plan for everything

00:09:25,400 --> 00:09:32,060
So my boss looked at it and it was "Okay now

00:09:34,280 --> 00:09:37,060
What about other modes of transportation

00:09:38,080 --> 00:09:41,020
Like maybe trams

00:09:43,860 --> 00:09:45,860
Okay

00:09:45,900 --> 00:09:52,609
The thing, if we take trams and, why not, the whole overground transport why not

00:09:54,480 --> 00:09:58,340
The thing with overground transport the first thing it is simpler

00:09:59,460 --> 00:10:02,509
while for subway stations you have to map platforms, you have to

00:10:03,150 --> 00:10:09,949
connect the subway entrances in stop area relations and always turns into some bowl of OSM elements

00:10:11,160 --> 00:10:18,619
Most if not all public overground stops are just one object like highway bus stop or a railway train stop

00:10:20,100 --> 00:10:23,120
So it's much easier to map and much easier to use

00:10:24,510 --> 00:10:26,510
but overground transport is

00:10:26,780 --> 00:10:28,500
bigger

00:10:28,500 --> 00:10:32,260
In quantity than subways, like its

00:10:32,520 --> 00:10:40,300
Number of stops is two orders of magnitude more than subway stations. I believe there are more than a million stops

00:10:40,860 --> 00:10:42,180
You know

00:10:42,180 --> 00:10:44,180
over the world

00:10:45,400 --> 00:10:50,600
So you can't just load it into memory and expect the processor to work well

00:10:52,160 --> 00:10:55,980
The simplicity of overground public transport promised me to

00:10:57,020 --> 00:10:59,160
well, we have some ideas on how to

00:11:00,020 --> 00:11:05,400
make editing easier not using JOSM and relation editor and

00:11:07,020 --> 00:11:08,790
Well

00:11:08,790 --> 00:11:13,490
That's all very complex. Why when you have something like Moovit

00:11:14,340 --> 00:11:16,429
editor but with OpenStreetMap

00:11:17,220 --> 00:11:22,459
Where you can just click on stops, add relation, add them to routes and be done with it

00:11:23,600 --> 00:11:27,060
This is OSM PTE that was developed last year

00:11:28,000 --> 00:11:34,160
by Google Summer of Code student David and the work is continued this year

00:11:34,710 --> 00:11:36,710
by his students

00:11:38,490 --> 00:11:44,450
Well, this is Jungle Bus application which cannot do any route editing and cannot do anything

00:11:44,450 --> 00:11:50,840
But add and edit bus stops, but I had an idea how it could be improved to

00:11:51,540 --> 00:11:54,260
Make editing bus routes simpler

00:11:55,410 --> 00:11:57,529
some heuristics and well

00:11:59,040 --> 00:12:06,650
As a simple editor to rearrange stops and it will be okay and usable but

00:12:08,610 --> 00:12:10,050
the thing is

00:12:10,050 --> 00:12:12,050
editing stops would be wrong

00:12:13,080 --> 00:12:19,219
And why? Because the current public transport schema says that stops are optional,

00:12:20,100 --> 00:12:22,610
but highways and variables are mandatory.

00:12:23,430 --> 00:12:26,870
So if you want to make a proper public transport route you have to

00:12:27,630 --> 00:12:28,830
add

00:12:28,830 --> 00:12:35,660
highway segments, to split them and to spend this quite substantial amount of time just to making a

00:12:38,250 --> 00:12:42,950
Making route relation suitable for rendering but not for other uses

00:12:45,030 --> 00:12:47,539
Yeah, and we have to do something with it

00:12:49,860 --> 00:12:51,860
Okay, overground public transport

00:12:52,820 --> 00:12:58,140
What to do with it? I think I have to make a new validator just to see how

00:12:58,760 --> 00:13:02,020
good the mapping is for overground transport

00:13:02,860 --> 00:13:06,360
So I took my railway validator

00:13:07,540 --> 00:13:09,540
I mean subway and

00:13:11,329 --> 00:13:19,058
Thought how it applies to overground transport, and there is one big difference, for subways for railways, you have a station node

00:13:19,579 --> 00:13:23,558
Or object and station node has all the information about

00:13:24,379 --> 00:13:30,969
Railway station and all other objects like platforms, stop positions, entrances are auxiliary, they're additional

00:13:30,969 --> 00:13:33,960
they don't have any station specific information

00:13:35,020 --> 00:13:40,120
And bus stops for example don't don't have this structure, bus stops

00:13:40,879 --> 00:13:45,909
Don't have on different side of the road don't have central load with information

00:13:46,540 --> 00:13:49,480
but then I thought

00:13:50,480 --> 00:13:52,480
Why even link

00:13:52,819 --> 00:13:56,409
Bus stops on different side of the road, they are different different stops

00:13:56,860 --> 00:14:03,660
Sometimes they have different names and they have different reference IDs in the GTFS feeds and so on

00:14:04,600 --> 00:14:07,900
so I realized that bus stop

00:14:08,320 --> 00:14:11,520
in principles is the same as a railway station node

00:14:12,160 --> 00:14:15,020
it could have all the information about stop

00:14:15,640 --> 00:14:23,300
and with that it links neatly in the scheme I devised for subway stations

00:14:23,720 --> 00:14:28,900
but bus stops tram stops are the same as train and

00:14:29,569 --> 00:14:31,279
subway stations

00:14:31,279 --> 00:14:33,279
if you make this assumption

00:14:33,889 --> 00:14:41,529
so all other elements of the schema fit neatly like joining stops and platforms with stop area relation and

00:14:41,870 --> 00:14:49,479
So on so on, adding interchanges like adding stop positions like even entrances for underground tram lines

00:14:52,160 --> 00:14:54,160
So I made

00:14:54,920 --> 00:15:00,879
Quickly made some fixes to subway validator to make a tram validator and ran it on

00:15:02,269 --> 00:15:03,620
00:15:03,620 --> 00:15:06,009
test networks cities and

00:15:06,829 --> 00:15:10,628
It went quite ok. I even found one city that had

00:15:11,899 --> 00:15:12,920
100%

00:15:12,920 --> 00:15:20,750
route tram network, but I looked at numbers and it turned out it had zero trams that way with why it was

00:15:21,450 --> 00:15:23,450
100% good

00:15:23,610 --> 00:15:28,669
but with a short script that edit stop area relations

00:15:29,940 --> 00:15:31,940
Situation got much better

00:15:32,790 --> 00:15:34,790
What have I found

00:15:36,420 --> 00:15:38,420
Well

00:15:39,510 --> 00:15:41,510
Stop areas are a mess and

00:15:43,650 --> 00:15:51,259
Linking platforms to tram stops is very hard in many cities. This was normal

00:15:51,900 --> 00:15:53,900
It's a stop area that

00:15:54,750 --> 00:15:56,610
contains everything

00:15:56,610 --> 00:15:58,610
like in this case

00:15:59,310 --> 00:16:00,750
seven stations

00:16:00,750 --> 00:16:08,030
Seven different tram stops, but it was used to mark an interchange with this stop area. You cannot know

00:16:08,670 --> 00:16:09,930
which

00:16:09,930 --> 00:16:14,600
tram stop belongs to which platform like to take this platform and

00:16:15,450 --> 00:16:17,450
What is it?

00:16:17,480 --> 00:16:20,780
Where is the station or the tram stop node?

00:16:21,620 --> 00:16:30,700
And we have to fix it well, well I assume I have to fix it, but I would like some help

00:16:31,680 --> 00:16:33,660
So

00:16:33,660 --> 00:16:35,660
Last week I published

00:16:35,940 --> 00:16:43,850
A new public transport proposal. I named it with three but this was a bad decision. So let's go with refined public transport

00:16:45,090 --> 00:16:47,070
which

00:16:47,070 --> 00:16:51,619
basically makes public transport usable not only for rendering but for everything

00:16:52,160 --> 00:16:56,280
And first a more important thing that it makes public transport usable for mapping it

00:16:56,740 --> 00:17:00,820
It doesn't drive away novice mappers

00:17:02,010 --> 00:17:05,660
From mapping public transport because it's not that hard anymore

00:17:06,780 --> 00:17:09,290
Now you have a public transport route

00:17:09,480 --> 00:17:17,420
with just highway bus stop nodes and that's all you don't have to split highways. You don't have to put stop positions

00:17:18,000 --> 00:17:20,840
you just do the most obvious thing

00:17:22,860 --> 00:17:25,400
And the routes made in this way

00:17:25,770 --> 00:17:27,770
Are suitable not only for rendering

00:17:28,470 --> 00:17:33,809
But also for routing for analyzing for converting into GTFS for everything

00:17:36,100 --> 00:17:39,059
So there are two wins and it's

00:17:40,090 --> 00:17:42,090
Bring sense to many

00:17:43,150 --> 00:17:45,010
elements of

00:17:45,010 --> 00:17:47,010
stations of routes that

00:17:47,080 --> 00:17:49,650
well, describe very technically very

00:17:50,620 --> 00:17:54,000
utilitarian before that so it's not just

00:17:54,760 --> 00:17:56,760
physical platforms it's not just

00:17:57,309 --> 00:17:59,819
areas, but every element of

00:18:00,580 --> 00:18:04,260
station an element of route has its meaning like

00:18:05,409 --> 00:18:08,969
station node is most often where people wait and

00:18:09,760 --> 00:18:11,380
stop area

00:18:11,380 --> 00:18:15,059
link specifically station elements like entrances platforms and stops

00:18:16,360 --> 00:18:21,120
Yeah, and it brings some order into tram stop position

00:18:23,169 --> 00:18:28,169
If you look at wiki discussion page you'll see there's one little issue left

00:18:29,350 --> 00:18:32,789
That is not easy to solve. We're thinking of it now

00:18:33,480 --> 00:18:35,480
and it stems from

00:18:36,960 --> 00:18:40,440
The wish to get away with

00:18:41,820 --> 00:18:46,720
With not mapping stop areas, how do you behave and

00:18:48,040 --> 00:18:50,020
wishing to have

00:18:50,020 --> 00:18:55,409
bus stops tram stops mapped as nodes to simplify processing this

00:18:56,440 --> 00:18:58,090
so

00:18:58,090 --> 00:19:02,640
What do you do when there's platform and a stop and so on? So where do you use your tags?

00:19:04,059 --> 00:19:06,059
now so

00:19:08,080 --> 00:19:15,360
Find the proposal on the wiki and read it or at least look at the pictures that are pretty self describing

00:19:16,100 --> 00:19:23,040
and don't support the status quo do the same thing you did when failed better mapping proposal

00:19:24,730 --> 00:19:29,429
That strive for better public and simpler public transport in OpenStreetMap

00:19:29,730 --> 00:19:32,849
And with that we can make OpenStreetMap usable

00:19:33,460 --> 00:19:36,299
For anything more than just rendering

00:19:38,350 --> 00:19:40,350
Thanks

00:19:47,540 --> 00:19:50,950
Thank you very much for the presentation so any question from the audience

00:19:57,380 --> 00:20:02,260
Thank you for your presentation, I just had a question relating to GTFS and

00:20:02,780 --> 00:20:04,780
If you are at all inspired

00:20:04,820 --> 00:20:09,009
Or if not, is there any chance to convert this new

00:20:09,860 --> 00:20:11,540
way of mapping

00:20:11,540 --> 00:20:15,339
public transport in OSM to GTFS or vice versa

00:20:18,950 --> 00:20:20,300
Well

00:20:20,300 --> 00:20:22,899
This public transpost scheme will make it definitely

00:20:23,240 --> 00:20:28,630
Definitely easier to convert data to GTFS and to link OSM data and GTFS data

00:20:29,990 --> 00:20:37,599
Maybe require and just to add GTFS IDs to stops, but nothing more so

00:20:39,830 --> 00:20:42,309
What this does is allowing

00:20:43,280 --> 00:20:48,369
To build a processor that can get OSM data into a neat structure

00:20:49,040 --> 00:20:51,339
that can be used together with

00:20:52,340 --> 00:20:54,700
third-party data with GTFS with some

00:20:55,130 --> 00:21:01,900
Proprietary data to merge them and to use other elements of OpenStreetMap to better routing

00:21:10,969 --> 00:21:17,379
One question from my side that is there any way to identify that I mean suppose from the metro station

00:21:17,379 --> 00:21:19,509
Mainly we have to exist or entry point

00:21:19,509 --> 00:21:19,989
so

00:21:19,989 --> 00:21:25,539
Is there any way to identify that this is the entry point or this is there this point as a stop?

00:21:25,879 --> 00:21:31,478
namely it seem same I mean similar for the tram I mean subway because sometimes even

00:21:31,820 --> 00:21:33,219
near to this university

00:21:33,219 --> 00:21:40,119
We have pushed off one way to to go one side and just around 100 200 meter there to go another side

00:21:40,129 --> 00:21:42,039
so in the old proposal

00:21:42,039 --> 00:21:46,059
Do you have any way to identify this you can if you have to go in this direction?

00:21:46,369 --> 00:21:50,529
You have to go this is top you have to go in opposite direction. You have to go to the data store

00:21:50,539 --> 00:21:52,539
So is it possible to identify?

00:21:53,059 --> 00:21:55,809
That kind of stop in your this kind of system

00:21:56,450 --> 00:22:04,089
Yeah, of course, it is possible to identify where where you get to go to get to any of directions

00:22:05,209 --> 00:22:06,649
and

00:22:06,649 --> 00:22:11,108
It is better in the new proposal because in their own old one for tram stops

00:22:11,109 --> 00:22:13,838
you basically maps top positions in the new one the

00:22:15,559 --> 00:22:23,468
The emphasis is put on platforms on whether you actually have to route a user to go to wait for a tram

00:22:23,929 --> 00:22:27,819
So yeah, of course, it would be more clear better

00:22:29,059 --> 00:22:36,278
Hi, thank you for trying to make a public transport easier to validate to map. My question is actually

00:22:37,009 --> 00:22:43,509
Public transport is always something very complex. So it do we have enough validation tools

00:22:43,509 --> 00:22:48,699
So for example lots of cases when public transport stops don't come by

00:22:49,190 --> 00:22:53,229
Sequence and it's not possible to see on the OpenStreetMap the tour for example

00:22:53,229 --> 00:22:57,429
And that leads to lots of a kind of non validated data

00:22:57,429 --> 00:23:01,988
So I am assuming it's not possible to fix public transport when

00:23:02,299 --> 00:23:06,908
They'll not be able to validate it in some apps or specific website

00:23:08,059 --> 00:23:10,358
Well, this proposal is only the first step

00:23:11,570 --> 00:23:18,219
Currently I started writing a validator for all public transport of all kinds in OpenStreetMap

00:23:19,190 --> 00:23:22,959
We shall produce structures that you can use in your application

00:23:24,020 --> 00:23:26,020
and we can use Maps.me and

00:23:26,840 --> 00:23:29,800
everybody could I don't know convert into GTFS and

00:23:30,410 --> 00:23:36,879
It will serve as a validator for all public transport as for edge cases, of course, there are

00:23:37,520 --> 00:23:39,969
Many edge cases with public transport in the world

00:23:41,240 --> 00:23:43,329
Well, we'll solve it as it comes

00:23:43,490 --> 00:23:49,120
It's not a single proposal to cover everything with just the basis for

00:23:49,490 --> 00:23:52,180
other things to add some details like

00:23:53,450 --> 00:24:00,100
Just recently. We saw Halen write rules for highways in bus routes and

00:24:02,810 --> 00:24:05,859
Roles for stops, like reversed and so on so

00:24:06,740 --> 00:24:13,959
This is the basis for a new public transport. But of course, we will build upon it for covering edge cases

00:24:19,550 --> 00:24:23,320

YouTube URL: https://www.youtube.com/watch?v=MLTqdHx_Psw


