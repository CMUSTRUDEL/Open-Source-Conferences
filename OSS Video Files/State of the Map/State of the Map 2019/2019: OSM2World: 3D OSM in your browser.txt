Title: 2019: OSM2World: 3D OSM in your browser
Publication date: 2020-07-18
Playlist: State of the Map 2019
Description: 
	OSM2World is an open-source renderer capable of creating rich 3D worlds from OpenStreetMap data. It is now available as a web application powered by WebGL.

OpenStreetMap contains a wealth of data that can be used to build a 3D representation of our world. Some of it, such as buildings mapped using the [Simple 3D Buildings](https://wiki.openstreetmap.org/wiki/Simple_3D_Buildings) tagging convention, is intended primarily for 3D use cases. Other feature classes, such as roads and railways, urban infrastructure, or landuse information, aren't usually mapped with 3D in mind, but are nevertheless essential ingredients of a 3D world. In either case, unlocking the full potential of OSM data and converting it into a representation that's suitable for typical use cases in the domain of 3D rendering requires specialized software tools.

[OSM2World](http://osm2world.org/) is one of these tools. Fully open source, it can be used to export 3D data for modelling software, animations, and games, as a library in other programs, and as an interactive map on the web. Until recently, however, the lack of a powerful 3d rendering solution for the web put constraints on the features available without a local installation of the software. Today, the WebGL standard allows real-time 3D rendering in all major browsers. A new web frontend for OSM2World builds on these capabilities to allow users to explore the world in 3D, based entirely on open data.

This talk demonstrates the abilities of OSM2World and its new web frontend, showcases some impressive 3D mapping around the world, and briefly explores how the software works behind the scenes.

Tobias Knerr

https://pretalx.com/sotm2019/talk/V7QPGG/
Captions: 
	00:00:08,580 --> 00:00:14,410
we're gonna hear about 3d osm in your

00:00:12,300 --> 00:00:18,270
browser from

00:00:14,410 --> 00:00:18,270
thank you thank you

00:00:18,660 --> 00:00:25,689
okay so I want to tell you a bit about

00:00:22,019 --> 00:00:27,669
bottom two words or them two words is a

00:00:25,689 --> 00:00:29,559
piece of open-source software that I'm

00:00:27,669 --> 00:00:33,070
maintaining for quite a few years now

00:00:29,559 --> 00:00:36,329
and simply speaking the goal of osm

00:00:33,070 --> 00:00:39,129
preferred is to create 3d models from

00:00:36,329 --> 00:00:41,320
OpenStreetMap data a beaten-up data

00:00:39,129 --> 00:00:43,269
comes in various forms and autumn

00:00:41,320 --> 00:00:45,989
provide supports of your serums archers

00:00:43,269 --> 00:00:47,530
or with m5 in various encodings and

00:00:45,989 --> 00:00:51,040
overpass api

00:00:47,530 --> 00:00:55,000
it can also use elevation data which is

00:00:51,040 --> 00:00:58,210
not part of ODEs M but as a TM or other

00:00:55,000 --> 00:01:03,159
sources provide open licensed elevation

00:00:58,210 --> 00:01:05,829
data - so I've described the mission of

00:01:03,159 --> 00:01:11,159
autumn - vert as creating 3d models from

00:01:05,829 --> 00:01:13,869
Open Street Map in three simple steps to

00:01:11,159 --> 00:01:17,290
create 2d model for Street Map we need

00:01:13,869 --> 00:01:20,890
to store open Street data in some kind

00:01:17,290 --> 00:01:23,080
of suitable storage period or passage in

00:01:20,890 --> 00:01:25,060
order to be able to work with it as a

00:01:23,080 --> 00:01:28,140
second step we need to actually

00:01:25,060 --> 00:01:31,150
understand the data the value of tagging

00:01:28,140 --> 00:01:33,940
conventions that exist and to build 3d

00:01:31,150 --> 00:01:37,510
models from it and finally we need to

00:01:33,940 --> 00:01:42,790
export it into the desired targets or

00:01:37,510 --> 00:01:46,680
not now a big part of the idea of

00:01:42,790 --> 00:01:48,909
Awesome to verge is that the second step

00:01:46,680 --> 00:01:52,180
understanding data and building 3d

00:01:48,909 --> 00:01:55,119
models from it is actually quite a bit

00:01:52,180 --> 00:01:59,049
of work if you want to do it properly so

00:01:55,119 --> 00:02:01,180
for example just rendering as we D

00:01:59,049 --> 00:02:03,549
building by extruding the outline is

00:02:01,180 --> 00:02:08,080
relatively easy but as soon as you start

00:02:03,549 --> 00:02:09,640
for example creating individual roof

00:02:08,080 --> 00:02:13,239
shades and so on which are all things

00:02:09,640 --> 00:02:15,849
that can be tacked in with em you need

00:02:13,239 --> 00:02:20,500
to actually write code that supports all

00:02:15,849 --> 00:02:24,310
of these variations and Paris xxx order

00:02:20,500 --> 00:02:26,709
that this work is mostly the same for

00:02:24,310 --> 00:02:27,920
many different use cases so I mean

00:02:26,709 --> 00:02:30,140
that's a step three

00:02:27,920 --> 00:02:33,160
to export the models into a desired

00:02:30,140 --> 00:02:35,569
target format but the step two is very

00:02:33,160 --> 00:02:38,900
similar for all these different use

00:02:35,569 --> 00:02:42,470
cases I mean that some other project in

00:02:38,900 --> 00:02:46,130
the autumn ecosystem who also do 3d

00:02:42,470 --> 00:02:49,400
models from osm but they often focus on

00:02:46,130 --> 00:02:51,050
one particular output so they focus on

00:02:49,400 --> 00:02:54,140
making the best for one particular

00:02:51,050 --> 00:02:57,380
gaming engine or one particular editor

00:02:54,140 --> 00:02:58,040
of one particular modeling tool or

00:02:57,380 --> 00:03:00,950
something like that

00:02:58,040 --> 00:03:04,370
oesn't word tries to instead focus on

00:03:00,950 --> 00:03:08,000
the common functionality between all

00:03:04,370 --> 00:03:10,370
these use cases as a result it supports

00:03:08,000 --> 00:03:12,650
multiple output formats and to go Lystra

00:03:10,370 --> 00:03:15,920
at even more in the future this includes

00:03:12,650 --> 00:03:19,459
for example a 3d model expert including

00:03:15,920 --> 00:03:21,590
in the obj file format which is very

00:03:19,459 --> 00:03:24,200
common delivered and can be read by

00:03:21,590 --> 00:03:27,170
practically everything it can do

00:03:24,200 --> 00:03:29,810
interactive rendering is OpenGL and it

00:03:27,170 --> 00:03:35,000
can also end PNG images again with

00:03:29,810 --> 00:03:37,160
OpenGL including for 2d map tiles just a

00:03:35,000 --> 00:03:39,799
few examples of things people have been

00:03:37,160 --> 00:03:43,670
doing with om2 word include with your

00:03:39,799 --> 00:03:47,470
art so load some in blender apply some

00:03:43,670 --> 00:03:51,049
cool effect and create a camera flight

00:03:47,470 --> 00:03:54,470
gaming applications like this now cried

00:03:51,049 --> 00:03:56,450
old super tux cat version with some

00:03:54,470 --> 00:04:01,430
great track created from Open Street Map

00:03:56,450 --> 00:04:05,950
data in it and this isometric chart that

00:04:01,430 --> 00:04:09,530
I available at maps or them to word Park

00:04:05,950 --> 00:04:13,850
this has also been around for quite a

00:04:09,530 --> 00:04:17,329
few years now and back then it was one

00:04:13,850 --> 00:04:21,229
of the first services that even let you

00:04:17,329 --> 00:04:24,110
see 3d OpenStreetMap data in your

00:04:21,229 --> 00:04:27,590
browser at all the way it worked was

00:04:24,110 --> 00:04:29,840
just creating the 3d models making

00:04:27,590 --> 00:04:31,820
essentially virtual photographs from a

00:04:29,840 --> 00:04:34,400
particular angle and cutting it into

00:04:31,820 --> 00:04:37,729
tiles so that it can then be shown with

00:04:34,400 --> 00:04:39,830
open layers normally like regular 2d

00:04:37,729 --> 00:04:42,500
ties

00:04:39,830 --> 00:04:45,530
back then there wasn't really a perfect

00:04:42,500 --> 00:04:48,950
alternative yet but nowadays is very old

00:04:45,530 --> 00:04:51,200
technology and there were focus of this

00:04:48,950 --> 00:04:54,800
talk it's essentially our current

00:04:51,200 --> 00:04:57,200
project to use WebGL which is a

00:04:54,800 --> 00:05:00,740
technology that not even altered new

00:04:57,200 --> 00:05:05,750
anymore to when the real-time graphic in

00:05:00,740 --> 00:05:09,590
the browser so in terms of software

00:05:05,750 --> 00:05:12,440
architecture the what we are doing

00:05:09,590 --> 00:05:13,790
before it's essentially this practically

00:05:12,440 --> 00:05:16,460
everything happens on the server

00:05:13,790 --> 00:05:19,070
including taking over them data creating

00:05:16,460 --> 00:05:21,740
3d models from it and producing raster

00:05:19,070 --> 00:05:24,140
images using open share this also

00:05:21,740 --> 00:05:26,330
implies that the server used to have for

00:05:24,140 --> 00:05:30,170
example a graphics accelerator hardware

00:05:26,330 --> 00:05:32,900
which is not the case for many servers

00:05:30,170 --> 00:05:34,820
that you can easily range and it also

00:05:32,900 --> 00:05:37,580
means that the server has a lot to do

00:05:34,820 --> 00:05:40,460
for each of these raster images which

00:05:37,580 --> 00:05:43,130
limited the geographic coverage of the

00:05:40,460 --> 00:05:45,650
service so what we want to do instead is

00:05:43,130 --> 00:05:49,010
to create the 3d models still on the

00:05:45,650 --> 00:05:50,840
server but to have send suicide - it's a

00:05:49,010 --> 00:05:55,490
client and the client and handles the

00:05:50,840 --> 00:05:57,110
rendering using WebGL of course this

00:05:55,490 --> 00:05:58,700
raises the question why not do

00:05:57,110 --> 00:06:00,740
everything on the client I mean we could

00:05:58,700 --> 00:06:04,570
Church then open Twitter data to the

00:06:00,740 --> 00:06:07,850
client and well do the other steps in

00:06:04,570 --> 00:06:11,570
the browser there are essentially two

00:06:07,850 --> 00:06:13,250
reasons for not doing this yet one is

00:06:11,570 --> 00:06:16,490
that the performance isn't quite there

00:06:13,250 --> 00:06:20,660
yet so creating the 3d model takes a lot

00:06:16,490 --> 00:06:22,280
of time relatively speaking and this is

00:06:20,660 --> 00:06:24,920
something that doesn't really make one

00:06:22,280 --> 00:06:27,140
interactive experience yet the other is

00:06:24,920 --> 00:06:29,390
that autumns word it's using a software

00:06:27,140 --> 00:06:32,900
tag that not particularly suited for

00:06:29,390 --> 00:06:35,180
this kind of setup so it's something

00:06:32,900 --> 00:06:37,970
that I want to eventually be doing but

00:06:35,180 --> 00:06:44,060
at the moment this is the intermediate

00:06:37,970 --> 00:06:46,919
goal okay originally my intention had

00:06:44,060 --> 00:06:49,650
been to like be able to show

00:06:46,919 --> 00:06:52,830
a working version that already published

00:06:49,650 --> 00:06:55,740
and launched and everything this didn't

00:06:52,830 --> 00:06:58,199
get quite done in time for this state of

00:06:55,740 --> 00:07:01,409
the map so I only have a prototype to

00:06:58,199 --> 00:07:03,080
show you but still I want to give you an

00:07:01,409 --> 00:07:08,310
impression of what it's currently like

00:07:03,080 --> 00:07:11,699
so this is a 3d rendering of path which

00:07:08,310 --> 00:07:14,430
is where I'm living and yeah as you can

00:07:11,699 --> 00:07:17,430
see this is rendered for your time in

00:07:14,430 --> 00:07:20,729
the browser so you can as you would

00:07:17,430 --> 00:07:23,750
expect like move the camera freely

00:07:20,729 --> 00:07:27,569
around wherever you want it to be and

00:07:23,750 --> 00:07:28,949
you also get an immediate impression of

00:07:27,569 --> 00:07:31,050
some of the benefit like for example

00:07:28,949 --> 00:07:34,020
this animated water wouldn't be possible

00:07:31,050 --> 00:07:36,180
with the old technology you have tried a

00:07:34,020 --> 00:07:39,479
lot of details that actually were always

00:07:36,180 --> 00:07:42,060
fair but we're invisible like I mean you

00:07:39,479 --> 00:07:45,120
can zoom in on the sports pictures if

00:07:42,060 --> 00:07:46,319
you want far more closely than would

00:07:45,120 --> 00:07:48,270
have been possible with the old

00:07:46,319 --> 00:07:50,849
technology and there's a lot of things

00:07:48,270 --> 00:07:53,219
that autumn toward us besides buildings

00:07:50,849 --> 00:07:57,529
like rendering roads with lane markings

00:07:53,219 --> 00:08:01,580
and so on and crossing we place randomly

00:07:57,529 --> 00:08:03,870
located cars on parking spaces and so on

00:08:01,580 --> 00:08:06,539
this kind of detail is actually

00:08:03,870 --> 00:08:09,029
something that o'them to Virg want to do

00:08:06,539 --> 00:08:10,800
and that now really actually possible to

00:08:09,029 --> 00:08:15,060
do in the browser so I'm quite happy

00:08:10,800 --> 00:08:18,599
about that we'll be coming back to that

00:08:15,060 --> 00:08:20,729
later but I want to show you it's not

00:08:18,599 --> 00:08:23,759
just working in my town it's also

00:08:20,729 --> 00:08:26,370
working elsewhere because people have

00:08:23,759 --> 00:08:29,729
been doing 3d mapping quite a lot around

00:08:26,370 --> 00:08:31,229
the world already these are all rendered

00:08:29,729 --> 00:08:35,099
with the same technologies that I showed

00:08:31,229 --> 00:08:37,140
you before I would like to treat it like

00:08:35,099 --> 00:08:39,599
the stadium in the background where

00:08:37,140 --> 00:08:42,690
people put really a lot of work into

00:08:39,599 --> 00:08:44,690
details that yeah

00:08:42,690 --> 00:08:50,640
and our finally possible to really

00:08:44,690 --> 00:08:52,320
appreciate with or them to verge one

00:08:50,640 --> 00:08:57,720
reason why I'm showing you four examples

00:08:52,320 --> 00:08:58,450
of last slide here if this I fit our

00:08:57,720 --> 00:09:00,820
model

00:08:58,450 --> 00:09:03,870
this is not something that you can

00:09:00,820 --> 00:09:07,959
realistically do in OpenStreetMap data

00:09:03,870 --> 00:09:10,899
so instead are not even trying there's a

00:09:07,959 --> 00:09:15,190
platform called the 3d model repository

00:09:10,899 --> 00:09:17,310
at this URL and you can upload 3d model

00:09:15,190 --> 00:09:20,500
fare and link them from OpenStreetMap

00:09:17,310 --> 00:09:22,120
and/or them to word Wills and place them

00:09:20,500 --> 00:09:24,910
in the correct position based on this

00:09:22,120 --> 00:09:27,399
link this can not only be used for

00:09:24,910 --> 00:09:29,529
unique landmark it can also be used for

00:09:27,399 --> 00:09:32,860
things like street furniture so for

00:09:29,529 --> 00:09:34,810
example if set a particular type of park

00:09:32,860 --> 00:09:37,000
bench or bath shader or something like

00:09:34,810 --> 00:09:39,610
that you can also models within blend or

00:09:37,000 --> 00:09:43,920
sketchup or something uploaded and link

00:09:39,610 --> 00:09:43,920
it in order locations where it exists

00:09:44,160 --> 00:09:52,899
okay back to the theory for a moment

00:09:48,149 --> 00:09:55,180
this is a diagram I showed you before as

00:09:52,899 --> 00:09:58,930
you can see we are sending 3d models

00:09:55,180 --> 00:10:00,519
through the internet so in order to do

00:09:58,930 --> 00:10:03,160
that with reasonable bandwidth

00:10:00,519 --> 00:10:05,820
requirement we need to encode C somehow

00:10:03,160 --> 00:10:09,040
and the option I've gone for versus is

00:10:05,820 --> 00:10:12,070
protobuf ties with a custom quote of a

00:10:09,040 --> 00:10:14,199
schema now using a custom format instead

00:10:12,070 --> 00:10:16,060
of one of those that already existed

00:10:14,199 --> 00:10:18,519
isn't an easy decision and it's

00:10:16,060 --> 00:10:21,250
something that will probably change this

00:10:18,519 --> 00:10:24,190
long term for compatibility reason but

00:10:21,250 --> 00:10:28,029
for now it allows me to iterate more

00:10:24,190 --> 00:10:30,760
quickly and it also allows me to do some

00:10:28,029 --> 00:10:35,410
of the things that always m2 word is

00:10:30,760 --> 00:10:37,149
using particularly healthily compared to

00:10:35,410 --> 00:10:39,760
other client

00:10:37,149 --> 00:10:42,819
this includes for example texture layers

00:10:39,760 --> 00:10:44,709
including cholera protection layer that

00:10:42,819 --> 00:10:47,410
OpenStreetMap data you have a lot of

00:10:44,709 --> 00:10:49,449
variation so for example you can for

00:10:47,410 --> 00:10:51,579
each building set tags that describes

00:10:49,449 --> 00:10:53,890
the color the material of the building

00:10:51,579 --> 00:10:56,589
and so on and these can be combined

00:10:53,890 --> 00:10:59,199
freely so I mean you can have various

00:10:56,589 --> 00:11:01,930
materials like glass or break or glass

00:10:59,199 --> 00:11:05,319
and you can have arbitrary colors true

00:11:01,930 --> 00:11:07,690
and these need to be able to be freely

00:11:05,319 --> 00:11:10,089
combined and the way this works is that

00:11:07,690 --> 00:11:11,000
the building geometry is only

00:11:10,089 --> 00:11:13,670
transmitted

00:11:11,000 --> 00:11:16,610
to the client ones along with a list of

00:11:13,670 --> 00:11:19,040
texture images that should be pasted on

00:11:16,610 --> 00:11:20,840
top of that geometry and the client

00:11:19,040 --> 00:11:24,500
attend responds Barefoot's playings is

00:11:20,840 --> 00:11:27,620
accordingly this is also something we

00:11:24,500 --> 00:11:30,320
can see in the demo so you can see that

00:11:27,620 --> 00:11:33,500
the buildings have various colors and so

00:11:30,320 --> 00:11:35,840
on and these are essentially the same

00:11:33,500 --> 00:11:39,250
material plus Keller values that

00:11:35,840 --> 00:11:42,260
transmits to the client and send used to

00:11:39,250 --> 00:11:44,810
display the buildings correctly we can

00:11:42,260 --> 00:11:47,180
also see like down here on the road the

00:11:44,810 --> 00:11:49,640
road markings which use the same concept

00:11:47,180 --> 00:11:51,200
so you have an asset texture which could

00:11:49,640 --> 00:11:52,910
depending on the tags or to be a

00:11:51,200 --> 00:11:55,010
concrete texture or a cobblestone

00:11:52,910 --> 00:11:58,370
texture something like that and you have

00:11:55,010 --> 00:12:00,890
serious road markings drawn on top which

00:11:58,370 --> 00:12:07,000
are freely combined with any of the

00:12:00,890 --> 00:12:11,050
other types of surface below it okay

00:12:07,000 --> 00:12:14,210
while they're talking about texture data

00:12:11,050 --> 00:12:16,610
textures are usually including in autumn

00:12:14,210 --> 00:12:19,400
to verge raster images or their PNG

00:12:16,610 --> 00:12:21,830
files or JPEG files but we can order you

00:12:19,400 --> 00:12:24,200
with vector graphics or textured now and

00:12:21,830 --> 00:12:26,510
we can order use procedural textures

00:12:24,200 --> 00:12:28,820
once that's been recently added a text

00:12:26,510 --> 00:12:32,630
texture so for example in this traffic

00:12:28,820 --> 00:12:34,280
kind text number five isn't actually

00:12:32,630 --> 00:12:37,280
part of the image but it's written by

00:12:34,280 --> 00:12:39,230
the client on top of the sign which is

00:12:37,280 --> 00:12:41,150
very useful for signs that have a lot of

00:12:39,230 --> 00:12:43,640
different possible tech so if you

00:12:41,150 --> 00:12:46,339
imagine for example one of the signs

00:12:43,640 --> 00:12:49,490
that I posted at the entrance when you

00:12:46,339 --> 00:12:51,710
drive into a city then you wouldn't want

00:12:49,490 --> 00:12:54,020
to create an individual image for every

00:12:51,710 --> 00:12:57,320
city on the planet instead you just look

00:12:54,020 --> 00:12:59,450
at the OpenStreetMap data and look at

00:12:57,320 --> 00:13:03,460
the value of the name tag and write the

00:12:59,450 --> 00:13:03,460
name onto that sign as needed

00:13:03,580 --> 00:13:10,060
this was actually added just the summer

00:13:06,860 --> 00:13:12,830
during the summer of code by Asin and

00:13:10,060 --> 00:13:15,830
she also added a lot of other huge

00:13:12,830 --> 00:13:18,220
features related to a traffic sign so

00:13:15,830 --> 00:13:21,950
for example detonation time rendering

00:13:18,220 --> 00:13:22,710
but also the ability to define traffic

00:13:21,950 --> 00:13:24,930
signs

00:13:22,710 --> 00:13:26,790
see look in a particular country without

00:13:24,930 --> 00:13:29,130
having to change the source code of

00:13:26,790 --> 00:13:31,140
autumn to verge this is something we

00:13:29,130 --> 00:13:32,820
would also like health care so if you

00:13:31,140 --> 00:13:35,339
want autumn prover to render your

00:13:32,820 --> 00:13:37,410
country's traffic signs correctly you

00:13:35,339 --> 00:13:39,029
can do that without actually having to

00:13:37,410 --> 00:13:43,110
change the odds on favorite source code

00:13:39,029 --> 00:13:45,200
just by editing our map style there are

00:13:43,110 --> 00:13:47,520
also a few other features like deriving

00:13:45,200 --> 00:13:49,380
traffic signs from asset act like

00:13:47,520 --> 00:13:52,020
machspeed tags that's optionally

00:13:49,380 --> 00:13:55,110
possible now so if you haven't already I

00:13:52,020 --> 00:13:59,149
recommend you read thousands blog post

00:13:55,110 --> 00:14:01,890
about this which are quite informative

00:13:59,149 --> 00:14:03,510
another feature that's now done on the

00:14:01,890 --> 00:14:06,300
client instead of the server is

00:14:03,510 --> 00:14:08,370
extrusion autumns word makes heavy use

00:14:06,300 --> 00:14:11,010
of extrusion which is essentially the

00:14:08,370 --> 00:14:14,279
concept of defining the cross section of

00:14:11,010 --> 00:14:17,730
a shape and then drawing that shape

00:14:14,279 --> 00:14:21,240
along OpenStreetMap way or some other

00:14:17,730 --> 00:14:23,820
kind of path so this water slide is

00:14:21,240 --> 00:14:27,600
created by extruding the waterslide

00:14:23,820 --> 00:14:30,839
cross section along the OpenStreetMap

00:14:27,600 --> 00:14:33,000
way that someone has mapped and this is

00:14:30,839 --> 00:14:35,070
done on decline so we don't transmit or

00:14:33,000 --> 00:14:37,410
the individual triangles making up this

00:14:35,070 --> 00:14:39,510
model in that we just transmits a much

00:14:37,410 --> 00:14:43,200
lower amount of data for the cross

00:14:39,510 --> 00:14:44,940
section and third pass there's another

00:14:43,200 --> 00:14:46,500
example of what we do with shape

00:14:44,940 --> 00:14:52,190
extrusions that I would also like to

00:14:46,500 --> 00:14:52,190
show you in the actual client of it

00:14:52,490 --> 00:15:04,020
let's go over here so if you look at

00:15:00,660 --> 00:15:07,440
this we wouldn't really want to transmit

00:15:04,020 --> 00:15:10,860
all the triangles making abscess rich

00:15:07,440 --> 00:15:13,529
railing for example to the client

00:15:10,860 --> 00:15:15,630
because that would be a lot of data this

00:15:13,529 --> 00:15:19,050
order hint at one of the things we

00:15:15,630 --> 00:15:21,600
actually would still like to do before

00:15:19,050 --> 00:15:24,089
it was launched which is work on

00:15:21,600 --> 00:15:25,829
performance optimizations at the moment

00:15:24,089 --> 00:15:28,620
we don't really have a concept of level

00:15:25,829 --> 00:15:31,110
of details that mean all the details of

00:15:28,620 --> 00:15:33,329
this free training around that even if

00:15:31,110 --> 00:15:35,130
you're far away from it which is not

00:15:33,329 --> 00:15:37,320
ideal and

00:15:35,130 --> 00:15:39,120
have negative effect on the frame rate

00:15:37,320 --> 00:15:40,860
that's currently possible so it isn't

00:15:39,120 --> 00:15:43,410
something we are there working on at the

00:15:40,860 --> 00:15:45,060
moment to have dynamic level of detail

00:15:43,410 --> 00:15:52,050
depending on how far you are away from

00:15:45,060 --> 00:15:54,080
an object okay there are other

00:15:52,050 --> 00:15:57,240
optimizations we have done with the

00:15:54,080 --> 00:16:00,149
format like in tenting so if there's a

00:15:57,240 --> 00:16:02,820
tree we don't send the full geometry of

00:16:00,149 --> 00:16:05,310
the tree for everything your intent of

00:16:02,820 --> 00:16:06,750
it and that we just tell the client

00:16:05,310 --> 00:16:08,640
through the for our tree it look like

00:16:06,750 --> 00:16:11,459
this is a list of places where trees are

00:16:08,640 --> 00:16:11,880
and the clients then just copy of the

00:16:11,459 --> 00:16:14,040
trees

00:16:11,880 --> 00:16:16,410
wherever they are needed although the

00:16:14,040 --> 00:16:18,870
youthful podcast and variedly Perth and

00:16:16,410 --> 00:16:22,020
many other objects where that only one

00:16:18,870 --> 00:16:23,459
or a few variations of the object you

00:16:22,020 --> 00:16:25,800
know there's other optimizations that

00:16:23,459 --> 00:16:28,980
are also quite common other graphics

00:16:25,800 --> 00:16:30,660
contact like index geometry and variable

00:16:28,980 --> 00:16:34,250
length encoding a coordinate which is

00:16:30,660 --> 00:16:38,910
made easily possible by a throw to bus

00:16:34,250 --> 00:16:42,240
just as a list of things we been

00:16:38,910 --> 00:16:44,730
thinking about have been working on even

00:16:42,240 --> 00:16:46,920
and some of the things actually work in

00:16:44,730 --> 00:16:49,110
autumn to word already but not in the

00:16:46,920 --> 00:16:51,779
client yet so for example the terrain

00:16:49,110 --> 00:16:55,080
elevation of some things that don't

00:16:51,779 --> 00:16:57,660
revert itself can do but we won't add it

00:16:55,080 --> 00:16:59,910
into the client before the first person

00:16:57,660 --> 00:17:02,300
is launched because that's still a bit

00:16:59,910 --> 00:17:07,380
of work to do to actually get that tour

00:17:02,300 --> 00:17:09,360
yeah look good and run smoothly other

00:17:07,380 --> 00:17:11,730
things like additional light sources or

00:17:09,360 --> 00:17:14,850
animations already work to some extent

00:17:11,730 --> 00:17:16,439
and yeah some features that would also

00:17:14,850 --> 00:17:18,300
be cool is of course simply inter

00:17:16,439 --> 00:17:20,790
tagging support for seamless indoor and

00:17:18,300 --> 00:17:22,860
outdoor buildings or even adding a VR

00:17:20,790 --> 00:17:25,170
mode which is also not that hot nowadays

00:17:22,860 --> 00:17:29,510
because many framework actually have

00:17:25,170 --> 00:17:32,610
that built in to an extent okay so

00:17:29,510 --> 00:17:35,340
that's it I hope you liked it and you

00:17:32,610 --> 00:17:38,190
will be staying tuned for the actual

00:17:35,340 --> 00:17:39,809
launch of the program for now I'm

00:17:38,190 --> 00:17:40,990
looking forward to your question thanks

00:17:39,809 --> 00:17:44,799
for your attention

00:17:40,990 --> 00:17:44,799
[Applause]

00:17:47,290 --> 00:17:50,230
excellent okay we have a couple minutes

00:17:49,310 --> 00:17:53,349
for questions

00:17:50,230 --> 00:17:53,349
[Music]

00:17:58,250 --> 00:18:04,800
so when I saw your list of output

00:18:02,070 --> 00:18:07,650
formats my what immediately popped into

00:18:04,800 --> 00:18:09,480
my head is gltf is becoming more or less

00:18:07,650 --> 00:18:11,970
the standard now for our models are

00:18:09,480 --> 00:18:17,490
there any plans to make that possible

00:18:11,970 --> 00:18:19,980
output format I've not worked on it yet

00:18:17,490 --> 00:18:23,010
but it definitely would be one of the

00:18:19,980 --> 00:18:26,030
most likely candidate for additional

00:18:23,010 --> 00:18:26,030
format in the future

00:18:39,270 --> 00:18:42,170
Jennsen

00:18:44,610 --> 00:18:55,990
yes I see that the online pages are

00:18:49,750 --> 00:19:00,220
limited to Germany online images are

00:18:55,990 --> 00:19:05,200
limited to Germany I don't see images

00:19:00,220 --> 00:19:07,030
for foreign countries yeah

00:19:05,200 --> 00:19:08,920
one of the limitations of the current

00:19:07,030 --> 00:19:11,920
technology because the server has so

00:19:08,920 --> 00:19:14,440
much work to do to render the images on

00:19:11,920 --> 00:19:17,500
the server side we actually haven't been

00:19:14,440 --> 00:19:20,470
able to support more than like Germany

00:19:17,500 --> 00:19:22,570
and a few AG adjacent countries yet so

00:19:20,470 --> 00:19:24,490
it's something I hope will be possible

00:19:22,570 --> 00:19:27,400
visible to a client because it

00:19:24,490 --> 00:19:30,010
drastically reduces the server load so

00:19:27,400 --> 00:19:32,290
that we might actually be able to the

00:19:30,010 --> 00:19:39,850
porch eventually the whole verge I'm

00:19:32,290 --> 00:19:45,070
hoping that this will be possible any

00:19:39,850 --> 00:19:48,280
other questions I just I have a question

00:19:45,070 --> 00:19:49,570
I'm curious if you're gonna have terrain

00:19:48,280 --> 00:19:51,490
support or it's not something you've

00:19:49,570 --> 00:19:54,490
thought about for elevations and such

00:19:51,490 --> 00:19:56,830
within cities this is something that

00:19:54,490 --> 00:20:01,360
autumn devote itself has taught some

00:19:56,830 --> 00:20:04,570
exchange so it allows you to place a

00:20:01,360 --> 00:20:06,970
folder with a 30m data for example and

00:20:04,570 --> 00:20:10,810
it will send users who actually render

00:20:06,970 --> 00:20:13,180
terrain there are a few challenges if

00:20:10,810 --> 00:20:14,920
you want to actually have it look nice I

00:20:13,180 --> 00:20:18,280
mean for example you don't want to roads

00:20:14,920 --> 00:20:20,050
to be placed like on the side of the

00:20:18,280 --> 00:20:23,110
mountain you want to actually make sure

00:20:20,050 --> 00:20:25,060
that the roads are still flat and that

00:20:23,110 --> 00:20:29,440
breathing entrances honor at ground

00:20:25,060 --> 00:20:31,570
level so until these teachers work as I

00:20:29,440 --> 00:20:34,030
would like them to or for the moment I'm

00:20:31,570 --> 00:20:36,790
keeping it flat but of course eventually

00:20:34,030 --> 00:20:40,560
we want terrain because it's an

00:20:36,790 --> 00:20:40,560
essential part of the 2d experience

00:20:45,309 --> 00:20:49,929
do you think with enough performance

00:20:48,030 --> 00:20:52,480
optimizations you might eventually

00:20:49,929 --> 00:20:56,020
support like a light source a Sun and

00:20:52,480 --> 00:21:00,100
shadows and stuff or with that is that

00:20:56,020 --> 00:21:02,530
unrealistic for WebGL in the browser I

00:21:00,100 --> 00:21:05,559
mean I think the light source is

00:21:02,530 --> 00:21:09,400
relatively easy so think like normal

00:21:05,559 --> 00:21:12,309
shadows and ambient occlusion and think

00:21:09,400 --> 00:21:18,010
like that I believe will be easily

00:21:12,309 --> 00:21:20,400
feasible I'm not sure yet if we can also

00:21:18,010 --> 00:21:24,250
do lots of light sort of like having

00:21:20,400 --> 00:21:27,760
each street lamp actually image

00:21:24,250 --> 00:21:30,580
individualized but think like just

00:21:27,760 --> 00:21:32,590
having a dynamically located Sun

00:21:30,580 --> 00:21:35,230
depending on time of day and that that

00:21:32,590 --> 00:21:41,799
is I believe easily here into our master

00:21:35,230 --> 00:21:44,470
program a continuation on me out on the

00:21:41,799 --> 00:21:48,580
terrain one of the local shopping

00:21:44,470 --> 00:21:51,370
centres as is built up against the side

00:21:48,580 --> 00:21:54,460
of a cliff hence you have a door at the

00:21:51,370 --> 00:21:56,320
at one ground level then five levels up

00:21:54,460 --> 00:21:58,480
you have a door on the other side also

00:21:56,320 --> 00:22:02,380
at street level it would be really good

00:21:58,480 --> 00:22:04,780
if that could be rendered I didn't quite

00:22:02,380 --> 00:22:07,659
get the beginning of one of our local

00:22:04,780 --> 00:22:10,480
shopping centre shopping mall is built

00:22:07,659 --> 00:22:14,679
up against the side of a cliff so you

00:22:10,480 --> 00:22:17,200
have a ground level here the building is

00:22:14,679 --> 00:22:20,110
here and then you have an exit another

00:22:17,200 --> 00:22:21,880
ground level higher up being able to

00:22:20,110 --> 00:22:26,679
render that in 3d would be really

00:22:21,880 --> 00:22:29,169
fantastic it depends a bit on how it's

00:22:26,679 --> 00:22:31,630
mapped I mean if it map there's a finger

00:22:29,169 --> 00:22:34,150
buildings and there are definitions for

00:22:31,630 --> 00:22:37,030
what the how the ground level is defined

00:22:34,150 --> 00:22:39,850
in terms of the simple 3d buildings

00:22:37,030 --> 00:22:43,210
tagging scheme if it's might of a

00:22:39,850 --> 00:22:45,610
building then it's difficult because it

00:22:43,210 --> 00:22:48,760
means that that

00:22:45,610 --> 00:22:51,460
it relies on the terrain being accurate

00:22:48,760 --> 00:22:53,290
enough to like line up the neighboring

00:22:51,460 --> 00:22:54,640
buildings correctly and because the

00:22:53,290 --> 00:22:56,560
terrain isn't actually from

00:22:54,640 --> 00:22:59,950
OpenStreetMap but from some answer data

00:22:56,560 --> 00:23:03,910
source it's likely that it won't fit fit

00:22:59,950 --> 00:23:05,860
perfectly with each other so I've always

00:23:03,910 --> 00:23:08,140
kept these kinds of problem to the back

00:23:05,860 --> 00:23:10,870
of my mind and I hope that someday we

00:23:08,140 --> 00:23:13,980
will be able to like add tags that allow

00:23:10,870 --> 00:23:17,680
me then to adjust the elevation

00:23:13,980 --> 00:23:20,530
correctly but for now this shot doesn't

00:23:17,680 --> 00:23:22,570
forego it down to luck yes with yes for

00:23:20,530 --> 00:23:27,990
now with 3d mapping you're basically

00:23:22,570 --> 00:23:32,130
stuck to flat places okay thank you

00:23:27,990 --> 00:23:32,130
maybe we have time for one more question

00:23:39,350 --> 00:23:43,360
okay let's thank our speaker again

00:23:46,620 --> 00:23:48,680

YouTube URL: https://www.youtube.com/watch?v=c1laX2W9RO8


