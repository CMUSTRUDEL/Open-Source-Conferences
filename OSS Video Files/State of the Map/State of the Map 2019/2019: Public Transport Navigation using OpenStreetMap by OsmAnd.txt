Title: 2019: Public Transport Navigation using OpenStreetMap by OsmAnd
Publication date: 2020-07-18
Playlist: State of the Map 2019
Description: 
	The presentation describes stages of developing and starting of new feature of OsmAnd app.

OsmAnd is the first among the large OSM apps that developed public transport support. Now we continue to improve this function further, add new modes of transport, and experiment with the settings.
How we came to the idea of ​​public transport? In the presentation, we will explain why we use the PTv2 scheme, why this option is preferred, and how it works. In addition, in our report, we will consider the future support of GTFS.
During the work we faced various difficulties, so we will explain what these difficulties were and how we tried to build at least something. We will also cover how OSM users can help us, and whether it is possible and how long it will take to improve the data.
Lastly, we will present our results and plans, namely, what was our most significant success and how we want to build an editor for public transport..
We launched the function at the beginning of the year, and throughout the year we tested it, supplemented it with new conditions for building a route and tried to take into account all possible conditions for building routes. Although the data in the OSM have not proved to be always correct, everything can be fixed by the community.

Victor Shcherb Eugene Kizevich

https://pretalx.com/sotm2019/talk/NWW7GF/
Captions: 
	00:00:07,710 --> 00:00:12,630
good afternoon and welcome everybody I

00:00:09,990 --> 00:00:15,000
am TD we are going to have a talk by

00:00:12,630 --> 00:00:17,820
Victor and Eugene on public transport

00:00:15,000 --> 00:00:19,830
navigation using oil Zaman by ausma

00:00:17,820 --> 00:00:21,449
knows it's going to be a twenty minutes

00:00:19,830 --> 00:00:24,320
talk and five minutes for questions

00:00:21,449 --> 00:00:24,320
thank you

00:00:27,599 --> 00:00:30,560
hello everybody

00:00:31,410 --> 00:00:40,920
so Tom 2019 is coming to the end many of

00:00:36,570 --> 00:00:45,050
you already tired so our president

00:00:40,920 --> 00:00:48,540
presentation will not be difficult and

00:00:45,050 --> 00:00:52,040
at first the name of our application

00:00:48,540 --> 00:00:55,700
pronoun we pronounced Osment yeah during

00:00:52,040 --> 00:01:04,949
this conference I heard other variants

00:00:55,700 --> 00:01:07,259
but we say Osment okay also the head and

00:01:04,949 --> 00:01:10,770
as no okay

00:01:07,259 --> 00:01:13,460
we are small team developers of the

00:01:10,770 --> 00:01:19,550
application which many of you know and

00:01:13,460 --> 00:01:24,330
use Osment use called as swiss knife

00:01:19,550 --> 00:01:29,159
among similar applications by the way we

00:01:24,330 --> 00:01:33,450
took survey of features of Osman compare

00:01:29,159 --> 00:01:36,630
it with other application in such areas

00:01:33,450 --> 00:01:41,130
as scheduled tourism active tourism

00:01:36,630 --> 00:01:45,990
awesome and social tourism and it turn

00:01:41,130 --> 00:01:48,450
out that in these areas like casual

00:01:45,990 --> 00:01:53,520
tourism active tourism and our same we

00:01:48,450 --> 00:01:56,970
have in this we have a bunch of features

00:01:53,520 --> 00:02:00,390
that overlap with many application in

00:01:56,970 --> 00:02:06,360
general these social trees we still have

00:02:00,390 --> 00:02:09,679
work to do now we will talk about the

00:02:06,360 --> 00:02:15,689
feature that religious to casual trees

00:02:09,679 --> 00:02:19,250
each work of lines it is nice to have

00:02:15,689 --> 00:02:22,190
for many people especially us Mars

00:02:19,250 --> 00:02:26,750
and this is navigation by public

00:02:22,190 --> 00:02:35,680
transport at such scale tis supported

00:02:26,750 --> 00:02:40,700
only by Osmond okay we all smoke team

00:02:35,680 --> 00:02:46,700
developers of the oil okay we a small

00:02:40,700 --> 00:02:51,380
team here we are ten people we are

00:02:46,700 --> 00:02:55,670
already nine years old we are open

00:02:51,380 --> 00:03:00,680
source we use as 100 contributors we

00:02:55,670 --> 00:03:11,600
have more than one and a half million

00:03:00,680 --> 00:03:18,200
active users okay and at this moment

00:03:11,600 --> 00:03:21,830
Osment teams Othman team works with for

00:03:18,200 --> 00:03:28,150
general projects our application is

00:03:21,830 --> 00:03:30,770
designed for two systems Android and iOS

00:03:28,150 --> 00:03:33,530
IOC is currently under active

00:03:30,770 --> 00:03:35,120
development which can be read in our

00:03:33,530 --> 00:03:37,760
block

00:03:35,120 --> 00:03:42,500
soon the person will come closer to

00:03:37,760 --> 00:03:47,810
Android in functionality also one of our

00:03:42,500 --> 00:03:51,850
new project uses osmond tracker and of

00:03:47,810 --> 00:03:57,790
course some of you listened to Victor's

00:03:51,850 --> 00:03:57,790
presentation this is open place reviews

00:03:58,600 --> 00:04:09,670
okay why did we decided to develop this

00:04:05,330 --> 00:04:15,850
vision this idea was born last year on

00:04:09,670 --> 00:04:20,030
sodium 1018 in Milan actually we decided

00:04:15,850 --> 00:04:23,090
to do this oceanology named public

00:04:20,030 --> 00:04:25,740
transport navigation which is render

00:04:23,090 --> 00:04:32,260
data content according to the

00:04:25,740 --> 00:04:34,570
public transport aversion to scheme this

00:04:32,260 --> 00:04:37,870
is actually is a beginning on the

00:04:34,570 --> 00:04:41,980
project all development continued for

00:04:37,870 --> 00:04:45,430
almost six months and ended who is

00:04:41,980 --> 00:04:50,140
released three points three in March of

00:04:45,430 --> 00:04:52,840
this year there were enough problems in

00:04:50,140 --> 00:04:57,960
development better testing began at the

00:04:52,840 --> 00:05:02,110
end of January and took almost one month

00:04:57,960 --> 00:05:05,890
only by this time with a pipe

00:05:02,110 --> 00:05:10,120
parrot can one feel the complexity and

00:05:05,890 --> 00:05:17,590
scale of such feature as public

00:05:10,120 --> 00:05:21,220
transport navigation okay actually who

00:05:17,590 --> 00:05:24,160
uses public transport navigation the

00:05:21,220 --> 00:05:27,160
first it used offline by travelers

00:05:24,160 --> 00:05:33,160
during trips of course they can find

00:05:27,160 --> 00:05:38,830
with 5.0 the cane or they can open

00:05:33,160 --> 00:05:43,030
Osmond and builder Road at next general

00:05:38,830 --> 00:05:46,570
group is aa Smurfs at the moment the

00:05:43,030 --> 00:05:50,410
feature works in the test mode there is

00:05:46,570 --> 00:05:53,440
road construction that you can follow

00:05:50,410 --> 00:05:57,490
but there is no navigation itself there

00:05:53,440 --> 00:06:05,830
is no worry that you are at your stop

00:05:57,490 --> 00:06:09,640
cetera as I said the feature was

00:06:05,830 --> 00:06:13,480
according to the data of public

00:06:09,640 --> 00:06:16,930
transport version 2 scheme about public

00:06:13,480 --> 00:06:20,680
transport version to skim shortly any

00:06:16,930 --> 00:06:26,220
public transport road can be described

00:06:20,680 --> 00:06:30,580
by exciting elements in our Sam Roth's

00:06:26,220 --> 00:06:34,389
batsto platform and cetera

00:06:30,580 --> 00:06:37,540
all this all this is described by

00:06:34,389 --> 00:06:41,949
relation by special roles it is quite

00:06:37,540 --> 00:06:44,380
difficult for beginner Osmo which can

00:06:41,949 --> 00:06:47,759
make a mistake by creating a public

00:06:44,380 --> 00:06:52,810
transport wrote with probability of 19

00:06:47,759 --> 00:06:55,780
5% error in a role in relation we will

00:06:52,810 --> 00:07:07,389
lead to role in the build of road in

00:06:55,780 --> 00:07:12,880
Osment to build wrote in Osment unit

00:07:07,389 --> 00:07:14,620
automata version 3 and 3a oh hi you

00:07:12,880 --> 00:07:18,610
should to choose public transport

00:07:14,620 --> 00:07:22,389
profile start and and boyens after that

00:07:18,610 --> 00:07:26,080
you shoot click button start

00:07:22,389 --> 00:07:32,710
Osment author it builds roads using only

00:07:26,080 --> 00:07:36,849
public transport data you choose one of

00:07:32,710 --> 00:07:43,570
the road to Berens which is convenient

00:07:36,849 --> 00:07:48,190
to you if you click on details button

00:07:43,570 --> 00:07:51,520
you will have full information where you

00:07:48,190 --> 00:07:54,430
can see is time distance bus stops

00:07:51,520 --> 00:07:58,990
information of course so there is an

00:07:54,430 --> 00:08:03,159
opportunity to show all roads at the map

00:07:58,990 --> 00:08:06,750
by clicking show on map button and even

00:08:03,159 --> 00:08:12,280
compare roads so on the map and see all

00:08:06,750 --> 00:08:16,270
alternatives okay

00:08:12,280 --> 00:08:18,190
when we prepared the release we decided

00:08:16,270 --> 00:08:23,169
to write an article about public

00:08:18,190 --> 00:08:25,180
transport in awesome where we try to to

00:08:23,169 --> 00:08:27,940
explain how to build and check public

00:08:25,180 --> 00:08:32,050
transport roles you can find this

00:08:27,940 --> 00:08:35,700
information in our blog our website

00:08:32,050 --> 00:08:35,700
Osment net

00:08:37,300 --> 00:08:44,720
as I said earlier the fish' using the

00:08:41,690 --> 00:08:47,269
testing phase because for full

00:08:44,720 --> 00:08:51,110
functionality we don't have information

00:08:47,269 --> 00:08:52,300
from same database current problems use

00:08:51,110 --> 00:08:55,250
public transport

00:08:52,300 --> 00:08:58,639
dublicate roads or no full-service

00:08:55,250 --> 00:09:01,389
information no facilities for

00:08:58,639 --> 00:09:04,850
handicapped passengers no support of

00:09:01,389 --> 00:09:13,970
traffic interval no support of Transport

00:09:04,850 --> 00:09:18,759
Tech open hours the main problem is the

00:09:13,970 --> 00:09:23,750
timetable at this site we compare our

00:09:18,759 --> 00:09:26,540
public transport road with Google as you

00:09:23,750 --> 00:09:31,699
see the reason for there is information

00:09:26,540 --> 00:09:34,899
about time departure and arrival in

00:09:31,699 --> 00:09:39,100
Google Maps but we don't have this today

00:09:34,899 --> 00:09:42,649
another problem which is a result of

00:09:39,100 --> 00:09:49,279
waking timetable that Osment mixed up a

00:09:42,649 --> 00:09:53,720
night bus with date ramp of course this

00:09:49,279 --> 00:09:59,420
is an impossible road to use yeah

00:09:53,720 --> 00:10:01,370
nextpart victim yeah well focus more on

00:09:59,420 --> 00:10:03,980
a technical stuff so of course as you

00:10:01,370 --> 00:10:06,910
see it's pretty unusable without

00:10:03,980 --> 00:10:09,709
schedule even though it's good to test

00:10:06,910 --> 00:10:10,880
data good to see if the routes are

00:10:09,709 --> 00:10:13,790
connected and so on

00:10:10,880 --> 00:10:16,550
but because of these routes that mix up

00:10:13,790 --> 00:10:18,019
things which are not possible to happen

00:10:16,550 --> 00:10:21,970
in real life

00:10:18,019 --> 00:10:24,470
we take a look at GTFS it's rough 2004

00:10:21,970 --> 00:10:26,810
GTFS providers around the world

00:10:24,470 --> 00:10:29,449
sometimes they focused on the city level

00:10:26,810 --> 00:10:32,439
sometimes on the counter level so anyway

00:10:29,449 --> 00:10:36,230
you can find the data sorry and it's

00:10:32,439 --> 00:10:38,389
open mostly and there is a number of

00:10:36,230 --> 00:10:41,480
this date is growing but then we have a

00:10:38,389 --> 00:10:45,560
end up in a problem how do we match it

00:10:41,480 --> 00:10:48,050
with this osm data for us very important

00:10:45,560 --> 00:10:48,910
to have all the data offline so what we

00:10:48,050 --> 00:10:50,980
need to build

00:10:48,910 --> 00:10:55,090
routes offline so we need to connect the

00:10:50,980 --> 00:10:58,510
timetable into our format and mix up

00:10:55,090 --> 00:11:00,640
with awesome data and the simple things

00:10:58,510 --> 00:11:04,360
that we cannot find a correlation

00:11:00,640 --> 00:11:08,740
between trip which is entity in GTFS and

00:11:04,360 --> 00:11:12,270
osm relation route this is one of the

00:11:08,740 --> 00:11:15,640
master route and once we have that

00:11:12,270 --> 00:11:18,270
relation once we know if this relation

00:11:15,640 --> 00:11:22,150
ID matches this trip by the in Z's GTFS

00:11:18,270 --> 00:11:24,130
file then we almost get working then

00:11:22,150 --> 00:11:28,990
almost like we already have algorithms

00:11:24,130 --> 00:11:31,540
to support timetables and and it's easy

00:11:28,990 --> 00:11:34,630
to basically make it almost the next

00:11:31,540 --> 00:11:37,060
release the problem of course how do we

00:11:34,630 --> 00:11:41,410
make this relation how do we make this

00:11:37,060 --> 00:11:44,200
happen so we cannot store trip ID GTFS

00:11:41,410 --> 00:11:46,900
this is gtfo with the link to GTFS file

00:11:44,200 --> 00:11:49,720
itself in OpenStreetMap because trip ID

00:11:46,900 --> 00:11:52,750
is not stable it changes it generates a

00:11:49,720 --> 00:11:55,990
new one in just a number it's an ID so

00:11:52,750 --> 00:11:58,570
it will basically blow up or some

00:11:55,990 --> 00:12:01,660
database and also we cannot put or some

00:11:58,570 --> 00:12:04,600
relation ad in GTFS trip table because

00:12:01,660 --> 00:12:07,180
it is generated by transport companies

00:12:04,600 --> 00:12:10,660
and municipalities which are not aware

00:12:07,180 --> 00:12:14,080
of OpenStreetMap so basically and alsa

00:12:10,660 --> 00:12:17,440
relation age is not stable enough to

00:12:14,080 --> 00:12:19,810
remember that this one will stay so what

00:12:17,440 --> 00:12:21,730
what we are searching for and looking

00:12:19,810 --> 00:12:24,310
for maybe we probably already found it

00:12:21,730 --> 00:12:26,680
at least a couple of fraternity from

00:12:24,310 --> 00:12:29,950
this conference a project that collects

00:12:26,680 --> 00:12:32,380
GTFS and basically can augment trip

00:12:29,950 --> 00:12:36,510
table with a relation ad from

00:12:32,380 --> 00:12:40,060
OpenStreetMap from that point we can

00:12:36,510 --> 00:12:42,280
parse it build it into our own format

00:12:40,060 --> 00:12:45,460
because we need to support and mobile

00:12:42,280 --> 00:12:48,760
clients to make it compact and make use

00:12:45,460 --> 00:12:52,450
of it and since then we basically can

00:12:48,760 --> 00:12:57,580
support the most important feature the

00:12:52,450 --> 00:13:00,280
time table as as Eugene said we own on

00:12:57,580 --> 00:13:01,930
the face to not implement all possible

00:13:00,280 --> 00:13:03,490
feature even though we're mission

00:13:01,930 --> 00:13:06,130
features in public transport and

00:13:03,490 --> 00:13:10,510
algorithm could be done better but what

00:13:06,130 --> 00:13:12,580
we are looking for to make a greater use

00:13:10,510 --> 00:13:16,240
of public transport from OpenStreetMap

00:13:12,580 --> 00:13:18,310
get audience attention so more and so

00:13:16,240 --> 00:13:21,310
data will become more and more reliable

00:13:18,310 --> 00:13:23,950
and reliable and comparing to half a

00:13:21,310 --> 00:13:26,709
year ago in some countries we see a

00:13:23,950 --> 00:13:28,300
tremendous progress in some countries of

00:13:26,709 --> 00:13:30,730
course the reason it was already

00:13:28,300 --> 00:13:33,520
maintained and greatly and had a great

00:13:30,730 --> 00:13:36,730
support but in some still has a quite

00:13:33,520 --> 00:13:40,810
more support so we really hope that in

00:13:36,730 --> 00:13:43,440
the year 1/2 we will talk about great

00:13:40,810 --> 00:13:47,020
coverage and all the users will use

00:13:43,440 --> 00:13:50,350
transport schedule from OpenStreetMap

00:13:47,020 --> 00:13:53,460
data thank you

00:13:50,350 --> 00:13:53,460
[Applause]

00:13:57,680 --> 00:14:01,960
[Applause]

00:13:59,310 --> 00:14:05,320
Thank You Victor and Eugene for the

00:14:01,960 --> 00:14:07,480
Lenten talks now we'll have questions I

00:14:05,320 --> 00:14:08,260
think we have about eighteen eight

00:14:07,480 --> 00:14:14,410
minutes

00:14:08,260 --> 00:14:18,100
Thank You Victor

00:14:14,410 --> 00:14:21,660
Amelia so you just said that you can

00:14:18,100 --> 00:14:25,390
find correlation between GTFS trips and

00:14:21,660 --> 00:14:27,820
some wrote relations well actually you

00:14:25,390 --> 00:14:29,290
can there is not one-to-one relation of

00:14:27,820 --> 00:14:33,190
course because there are multiple trips

00:14:29,290 --> 00:14:36,490
today but you can just compare stops for

00:14:33,190 --> 00:14:40,600
a trip and any trip has a fixed list of

00:14:36,490 --> 00:14:44,230
stops and use the proper relation but

00:14:40,600 --> 00:14:48,220
then the TV version two schema you are

00:14:44,230 --> 00:14:52,270
using in that stops are optional for a

00:14:48,220 --> 00:14:55,480
road just highways are required so you

00:14:52,270 --> 00:14:58,960
might not get a list of stops if you

00:14:55,480 --> 00:15:01,420
rely and if you promote the BTB two

00:14:58,960 --> 00:15:05,440
schema we should call new but it's ten

00:15:01,420 --> 00:15:07,750
years old now so at the last autumn you

00:15:05,440 --> 00:15:09,730
had an idea for this also the next

00:15:07,750 --> 00:15:10,900
public transport scheme was proposed so

00:15:09,730 --> 00:15:15,100
what's your opinion on that

00:15:10,900 --> 00:15:17,080
yeah it's it's a great comment about

00:15:15,100 --> 00:15:20,080
that what we can do automatically and we

00:15:17,080 --> 00:15:22,840
did I did myself investigation in the

00:15:20,080 --> 00:15:24,640
Netherlands and almost fifteen percent

00:15:22,840 --> 00:15:27,250
and max I reached a fifteen percent

00:15:24,640 --> 00:15:30,220
coverage of GTFS mentioned perfectly

00:15:27,250 --> 00:15:33,930
with OpenStreetMap relation by algorithm

00:15:30,220 --> 00:15:37,570
comparing stops almost fifty percent I

00:15:33,930 --> 00:15:39,910
measured myself manually I think is

00:15:37,570 --> 00:15:43,000
possible to overcome difficulties and

00:15:39,910 --> 00:15:45,370
main difficulties comes that osm doesn't

00:15:43,000 --> 00:15:47,650
have does not have enough relations

00:15:45,370 --> 00:15:50,410
because in GTFS you really have all

00:15:47,650 --> 00:15:52,120
possible routes which at the end of the

00:15:50,410 --> 00:15:54,690
day at the beginning and some doesn't

00:15:52,120 --> 00:15:57,010
have them so it's possible to fix

00:15:54,690 --> 00:16:00,550
OpenStreetMap in that way and thirty

00:15:57,010 --> 00:16:02,920
percent kind of I counted as extreme

00:16:00,550 --> 00:16:04,900
cases where the data is missing was

00:16:02,920 --> 00:16:08,310
completely kind of doesn't make sense so

00:16:04,900 --> 00:16:10,500
it was hard to manage it so I say

00:16:08,310 --> 00:16:14,699
I didn't understand why it's not

00:16:10,500 --> 00:16:17,339
possible to manage current GTFS map in

00:16:14,699 --> 00:16:20,069
this public transport v2 schema and they

00:16:17,339 --> 00:16:22,259
said maybe it will not become great but

00:16:20,069 --> 00:16:27,829
they could not comment on version three

00:16:22,259 --> 00:16:27,829
because I didn't look into that tip

00:16:34,960 --> 00:16:45,310
I would challenge why even use the route

00:16:42,130 --> 00:16:50,110
relations because you have GTFS so you

00:16:45,310 --> 00:16:54,820
could simply use GTFS for routes and use

00:16:50,110 --> 00:16:56,649
the stops which are in OpenStreetMap so

00:16:54,820 --> 00:16:58,990
you would change why do we need to map

00:16:56,649 --> 00:17:01,810
relation and we can skip and just have a

00:16:58,990 --> 00:17:03,610
yeah indeed but I think because

00:17:01,810 --> 00:17:05,980
relations are present in OpenStreetMap

00:17:03,610 --> 00:17:08,140
we as I need to make decision to delete

00:17:05,980 --> 00:17:10,089
them because they're not going to

00:17:08,140 --> 00:17:12,130
maintain or we need to use them because

00:17:10,089 --> 00:17:14,020
they are really connected with stops we

00:17:12,130 --> 00:17:17,559
have validation tools that validate if

00:17:14,020 --> 00:17:19,270
relation matches or not and it's just

00:17:17,559 --> 00:17:21,280
one single bit which is missing

00:17:19,270 --> 00:17:24,309
comparing to for example if you match

00:17:21,280 --> 00:17:27,610
one level deeper here you just miss this

00:17:24,309 --> 00:17:29,650
beat between one table mapping what trip

00:17:27,610 --> 00:17:33,010
ID and relation to my team but I agree

00:17:29,650 --> 00:17:34,570
there are multiple possible solutions we

00:17:33,010 --> 00:17:38,140
just need to reach an agreement on which

00:17:34,570 --> 00:17:41,920
level we actually can map the problem is

00:17:38,140 --> 00:17:44,559
that we cannot store weaponizing GTFS

00:17:41,920 --> 00:17:47,559
neither in OpenStreetMap so we need to

00:17:44,559 --> 00:17:53,110
find a third party where every story yes

00:17:47,559 --> 00:17:56,140
I think well the some nations publish

00:17:53,110 --> 00:18:00,160
their GTFS data and I think that will be

00:17:56,140 --> 00:18:03,880
increasing and you will have an overlap

00:18:00,160 --> 00:18:05,800
in data for the for the routes so in my

00:18:03,880 --> 00:18:09,730
opinion probably would be better to take

00:18:05,800 --> 00:18:12,510
the roots from the GTFS and the ones in

00:18:09,730 --> 00:18:13,800
an open street map of course half there

00:18:12,510 --> 00:18:16,480
[Music]

00:18:13,800 --> 00:18:20,429
can be there as well for for displaying

00:18:16,480 --> 00:18:23,950
a map just not for for timetable just to

00:18:20,429 --> 00:18:26,590
resolve that ambiguity I think it's the

00:18:23,950 --> 00:18:28,450
most important bit if I can answer is to

00:18:26,590 --> 00:18:31,150
have a validation to which people will

00:18:28,450 --> 00:18:33,040
look regularly and then say based on the

00:18:31,150 --> 00:18:35,290
changes that it is required by

00:18:33,040 --> 00:18:37,360
meditation how many how much often it is

00:18:35,290 --> 00:18:40,300
broken local communities can make

00:18:37,360 --> 00:18:43,540
decisions either to semi automate some

00:18:40,300 --> 00:18:44,980
import from GTFS data or maybe maintain

00:18:43,540 --> 00:18:46,660
it separately

00:18:44,980 --> 00:18:50,650
it really will it could really ver eyes

00:18:46,660 --> 00:18:53,530
on a local kind of various and what the

00:18:50,650 --> 00:18:58,420
date is coming from GTFS how good these

00:18:53,530 --> 00:19:01,030
days and so on so for anyone mapping or

00:18:58,420 --> 00:19:04,510
public transport routes today already

00:19:01,030 --> 00:19:08,200
what validators should we look to what I

00:19:04,510 --> 00:19:10,630
don't know dozen plugins or validation

00:19:08,200 --> 00:19:13,600
there is helpful so that we create

00:19:10,630 --> 00:19:15,520
routes that you can consume easily well

00:19:13,600 --> 00:19:18,610
I think it's a quite typical validations

00:19:15,520 --> 00:19:21,220
this is validation hosted on a Geo

00:19:18,610 --> 00:19:23,680
fabric it was it's already three years

00:19:21,220 --> 00:19:26,950
old I think it's good enough the problem

00:19:23,680 --> 00:19:28,690
is that yeah public transport is hard to

00:19:26,950 --> 00:19:32,650
basically change without making a

00:19:28,690 --> 00:19:34,630
mistake and but again the day before was

00:19:32,650 --> 00:19:37,480
a course how to do it with the plugin

00:19:34,630 --> 00:19:38,800
using jaws so it is hard and we need

00:19:37,480 --> 00:19:40,510
validation tool and we need to encourage

00:19:38,800 --> 00:19:43,510
people to look at the errors of

00:19:40,510 --> 00:19:46,090
validation too for example in Minsk we

00:19:43,510 --> 00:19:48,670
did in the in Kiev it was everything was

00:19:46,090 --> 00:19:50,740
broken it was public transfers to v1 and

00:19:48,670 --> 00:19:52,420
not supported but once we build the tool

00:19:50,740 --> 00:19:54,820
we start encouraging people ok you can

00:19:52,420 --> 00:19:57,190
use it and check it and slowly but

00:19:54,820 --> 00:20:00,130
steadily people convert to version 2 now

00:19:57,190 --> 00:20:02,440
using keep it green once you reach the

00:20:00,130 --> 00:20:04,840
level of green I think it for community

00:20:02,440 --> 00:20:07,180
becomes easier to maintain it but when

00:20:04,840 --> 00:20:10,350
you open an everything rather it's yeah

00:20:07,180 --> 00:20:10,350
that's becomes a challenge

00:20:20,929 --> 00:20:27,320
on one page a web page just asking I

00:20:24,960 --> 00:20:29,190
have another tool for validation of

00:20:27,320 --> 00:20:31,919
public transport routes

00:20:29,190 --> 00:20:34,769
it's called PT and a public transport

00:20:31,919 --> 00:20:36,299
network analysis and now this is

00:20:34,769 --> 00:20:38,519
available in the Internet

00:20:36,299 --> 00:20:41,450
just give me a call and I configure that

00:20:38,519 --> 00:20:43,970
for your network and it runs every night

00:20:41,450 --> 00:20:47,190
presenting you the errors in the routes

00:20:43,970 --> 00:20:50,519
gaps and everything else whether it's PT

00:20:47,190 --> 00:20:52,470
PT v2o a 1 or whatever and whether there

00:20:50,519 --> 00:20:55,580
are missing bus routes or something like

00:20:52,470 --> 00:20:59,759
that compared to what exists in reality

00:20:55,580 --> 00:21:03,299
so currently I did it for Brazil some

00:20:59,759 --> 00:21:06,750
weeks ago or some days ago based on GTFS

00:21:03,299 --> 00:21:09,870
data on the routes table converted it to

00:21:06,750 --> 00:21:13,559
an CSV file and this is the input for

00:21:09,870 --> 00:21:15,899
the tool to compare reality versus what

00:21:13,559 --> 00:21:21,480
we have in OpenStreetMap and it's called

00:21:15,899 --> 00:21:22,980
PT and a dot OpenStreetMap dot de this

00:21:21,480 --> 00:21:26,220
is really great we need to give it a

00:21:22,980 --> 00:21:27,929
bigger media coverage and so of all

00:21:26,220 --> 00:21:30,750
possible channels because this does

00:21:27,929 --> 00:21:32,460
really help and observe sometimes we

00:21:30,750 --> 00:21:35,129
don't know of their existence is great

00:21:32,460 --> 00:21:37,080
and it provides it in HTML tables not in

00:21:35,129 --> 00:21:47,890
graphical form or something like that

00:21:37,080 --> 00:21:51,069
yeah attending thanks hello team

00:21:47,890 --> 00:21:51,069

YouTube URL: https://www.youtube.com/watch?v=SPab09kaWPc


