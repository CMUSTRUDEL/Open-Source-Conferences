Title: Context Buddy: the tool that knows your code better than you - Krzysztof Romanowski
Publication date: 2019-07-11
Playlist: Scala Days Lausanne 2019
Description: 
	This video was recorded at Scala Days Lausanne 2019
Follow us on Twitter @ScalaDays or visit our website for more information http://scaladays.org 

More information and the abstract can be found here:
https://scaladays.org/schedule/context-buddy-the-tool-that-knows-your-code-better-than-you
Captions: 
	00:00:02,570 --> 00:00:10,290
hello everyone my name is Christophe and

00:00:07,490 --> 00:00:12,540
welcome to my presentation I know this

00:00:10,290 --> 00:00:15,900
is a lazy session just after lunch so I

00:00:12,540 --> 00:00:17,400
hope I will not bore you to death before

00:00:15,900 --> 00:00:19,590
I go to the topic of this presentation

00:00:17,400 --> 00:00:21,750
which is context body and mutual I want

00:00:19,590 --> 00:00:26,460
to talk about I want to save you for

00:00:21,750 --> 00:00:28,260
about me and other stuff so I'm Scott a

00:00:26,460 --> 00:00:30,330
programmer for like seven years now I

00:00:28,260 --> 00:00:33,989
think for over five I'm doing Scott to

00:00:30,330 --> 00:00:36,090
link for big scholar projects I bet I

00:00:33,989 --> 00:00:38,940
can double the size of your project and

00:00:36,090 --> 00:00:40,770
triple and probably ik my project I'm

00:00:38,940 --> 00:00:43,290
working on a set like providing tuning

00:00:40,770 --> 00:00:45,329
photos is probably in right now is like

00:00:43,290 --> 00:00:48,770
few million lines of code like eight or

00:00:45,329 --> 00:00:52,289
nine and few hundred developers all

00:00:48,770 --> 00:00:53,820
doing programming and and in developing

00:00:52,289 --> 00:00:56,039
on the same single branch so there's

00:00:53,820 --> 00:00:58,530
plenty of problems and print so it means

00:00:56,039 --> 00:01:00,899
there is like 20 off of things I need to

00:00:58,530 --> 00:01:02,460
to fix and so to make it work

00:01:00,899 --> 00:01:04,260
basically we're saying if something

00:01:02,460 --> 00:01:08,040
works in our code base it means it works

00:01:04,260 --> 00:01:10,560
everywhere yeah I'm from Victor's up due

00:01:08,040 --> 00:01:13,830
to slab we rd trying the companion that

00:01:10,560 --> 00:01:15,900
excel for like doing scala big data a

00:01:13,830 --> 00:01:18,509
bit of cost in front and stuff are we

00:01:15,900 --> 00:01:21,840
trying to support community as much as

00:01:18,509 --> 00:01:24,000
possible we run a lot of the user groups

00:01:21,840 --> 00:01:27,600
in Krakov you can see some of the logos

00:01:24,000 --> 00:01:30,000
here as well as a big conference that i

00:01:27,600 --> 00:01:31,619
want to invite you in the in october in

00:01:30,000 --> 00:01:33,540
Krakov it's not only related to scala

00:01:31,619 --> 00:01:35,250
there is multiple spheres with different

00:01:33,540 --> 00:01:37,140
topics all in at the same time so it's

00:01:35,250 --> 00:01:39,299
like plenty of opportunity to actually

00:01:37,140 --> 00:01:42,060
share experience so there is color there

00:01:39,299 --> 00:01:43,890
is some react stuff I'm one of the

00:01:42,060 --> 00:01:45,960
organizers so I'm probably biased but I

00:01:43,890 --> 00:01:50,310
think is like the biggest even in Krakov

00:01:45,960 --> 00:01:52,020
at least for me yeah and the last thing

00:01:50,310 --> 00:01:54,869
that is not related to presentational to

00:01:52,020 --> 00:01:57,509
talk about is developer jungle so this

00:01:54,869 --> 00:01:59,520
is our stand and there is a many many

00:01:57,509 --> 00:02:01,290
small lightning talks about different

00:01:59,520 --> 00:02:04,469
topics you can see here John talking

00:02:01,290 --> 00:02:07,110
about one of his libraries come here to

00:02:04,469 --> 00:02:08,670
our stand there is on this website there

00:02:07,110 --> 00:02:10,020
is a full schedule so you can pick

00:02:08,670 --> 00:02:12,300
whatever you like with pretty much

00:02:10,020 --> 00:02:13,470
running all the time in the breaks and

00:02:12,300 --> 00:02:15,240
during the talks so if you

00:02:13,470 --> 00:02:18,480
find anything interesting maybe we can

00:02:15,240 --> 00:02:20,460
offer you something nice so that's all

00:02:18,480 --> 00:02:22,560
the things that are not related to the

00:02:20,460 --> 00:02:24,630
presentation so slides are here I

00:02:22,560 --> 00:02:26,730
probably need to do a push I don't know

00:02:24,630 --> 00:02:28,740
if I push the last version but there is

00:02:26,730 --> 00:02:33,330
not much in the slides because I will do

00:02:28,740 --> 00:02:35,700
I will do some demos as well so now

00:02:33,330 --> 00:02:37,310
let's come to the presentation so I want

00:02:35,700 --> 00:02:39,540
to talk about the context buddy

00:02:37,310 --> 00:02:41,400
you probably have no idea what is that

00:02:39,540 --> 00:02:43,950
because the first time I'm like speaking

00:02:41,400 --> 00:02:46,920
publicly about it this is a tool that I

00:02:43,950 --> 00:02:49,350
am and I feel are developing the and our

00:02:46,920 --> 00:02:53,130
aim is that our that this tool will know

00:02:49,350 --> 00:02:55,890
your code better than you do for now

00:02:53,130 --> 00:02:57,770
it's a long way to get there but for now

00:02:55,890 --> 00:03:00,150
there is like few aspects of the

00:02:57,770 --> 00:03:02,820
developing the software that we want to

00:03:00,150 --> 00:03:04,709
cover in the context body that we

00:03:02,820 --> 00:03:07,110
usually do ourselves as the developers

00:03:04,709 --> 00:03:09,930
so basically the knowledge that we

00:03:07,110 --> 00:03:11,160
gather during our development daily

00:03:09,930 --> 00:03:12,780
develop like fighting with the code

00:03:11,160 --> 00:03:14,400
providing new features we build like

00:03:12,780 --> 00:03:17,610
this kind of big pile of knowledge in

00:03:14,400 --> 00:03:22,019
our heads and ok this is nice but we

00:03:17,610 --> 00:03:23,910
want to make it more robust make it more

00:03:22,019 --> 00:03:26,519
much like some machine can help us as

00:03:23,910 --> 00:03:28,560
well here computers it means that this

00:03:26,519 --> 00:03:30,269
knowledge stays with the project not

00:03:28,560 --> 00:03:31,709
like if I'm changing a project it means

00:03:30,269 --> 00:03:33,420
all the knowledge of my previous project

00:03:31,709 --> 00:03:35,459
is pretty much useless it's only the

00:03:33,420 --> 00:03:37,650
experience I can learn from but I will

00:03:35,459 --> 00:03:39,750
not put like there was a strange test

00:03:37,650 --> 00:03:41,430
that felt like once in awhile and he

00:03:39,750 --> 00:03:42,660
everybody knows about that and ignores

00:03:41,430 --> 00:03:44,580
that this is a piece of knowledge that

00:03:42,660 --> 00:03:46,739
there is in the projects and when I

00:03:44,580 --> 00:03:49,290
change the project is gone and new

00:03:46,739 --> 00:03:51,060
developer joining and yeah the test

00:03:49,290 --> 00:03:52,950
phase and he got what he broke what this

00:03:51,060 --> 00:03:54,720
is mad fall and she trying to like

00:03:52,950 --> 00:03:56,670
debugging debugging nothing nothing and

00:03:54,720 --> 00:03:57,030
then there is like someone oh the test

00:03:56,670 --> 00:03:58,680
wait

00:03:57,030 --> 00:03:59,940
don't worry ignore it like we know it's

00:03:58,680 --> 00:04:05,430
like on Friday she always fights like

00:03:59,940 --> 00:04:07,560
running tomorrow will be fine so this is

00:04:05,430 --> 00:04:09,900
the the context but it's maybe not aim

00:04:07,560 --> 00:04:11,700
for this kind of long people that live

00:04:09,900 --> 00:04:13,410
long like stay long in the project

00:04:11,700 --> 00:04:16,799
because they usually build this kind of

00:04:13,410 --> 00:04:19,890
map in their heads this is more for the

00:04:16,799 --> 00:04:21,780
new joiners especially they want like

00:04:19,890 --> 00:04:23,940
I'm joining a new project this is like

00:04:21,780 --> 00:04:25,979
if maybe first time I'm doing Scala and

00:04:23,940 --> 00:04:27,370
that's V I feel Scala is complicated and

00:04:25,979 --> 00:04:29,350
I feel that ever

00:04:27,370 --> 00:04:31,360
in the project his leg way smarter than

00:04:29,350 --> 00:04:33,220
I am and I don't know how I possibly

00:04:31,360 --> 00:04:36,820
directed many process so I'm scared to

00:04:33,220 --> 00:04:39,669
ask another thing like there is project

00:04:36,820 --> 00:04:42,490
Scala is quite old like we got this the

00:04:39,669 --> 00:04:44,410
10th holidays and Scala it exists before

00:04:42,490 --> 00:04:46,570
that so there's that code basis that has

00:04:44,410 --> 00:04:47,560
5 6 10 years so there is plenty of

00:04:46,570 --> 00:04:49,090
legacy of scholar called

00:04:47,560 --> 00:04:50,650
nobody probably realized that there are

00:04:49,090 --> 00:04:52,330
plenty of legacies color-code and

00:04:50,650 --> 00:04:54,040
sometimes you have to dig in those code

00:04:52,330 --> 00:04:56,290
this is not the code that is wrong is a

00:04:54,040 --> 00:04:58,690
foster so it's it was developed like

00:04:56,290 --> 00:05:00,190
long long time ago and there was reasons

00:04:58,690 --> 00:05:03,789
why it was developed why it was good but

00:05:00,190 --> 00:05:06,449
right now you see as like what stud how

00:05:03,789 --> 00:05:09,850
it does it work why it's there or

00:05:06,449 --> 00:05:11,919
another place where we lack and no

00:05:09,850 --> 00:05:14,289
legend will let Winston to is like there

00:05:11,919 --> 00:05:16,630
is a code formatting was added to your

00:05:14,289 --> 00:05:18,669
project like for example Skull fmt was

00:05:16,630 --> 00:05:22,419
introduced like 2 years ago something

00:05:18,669 --> 00:05:24,280
like that and I'm bet that if if Oliver

00:05:22,419 --> 00:05:26,229
gets credit for each of the line that

00:05:24,280 --> 00:05:28,840
the skull haven't he change who you like

00:05:26,229 --> 00:05:30,370
mostly you know the top the top

00:05:28,840 --> 00:05:32,979
contributor to most of the projects

00:05:30,370 --> 00:05:35,740
including like executive class and this

00:05:32,979 --> 00:05:37,150
is the case that we there's a big

00:05:35,740 --> 00:05:39,580
problem for us we need to format the

00:05:37,150 --> 00:05:43,210
coach and like 10% of lines actually

00:05:39,580 --> 00:05:46,090
showing the the actual line that was

00:05:43,210 --> 00:05:47,229
changed and yeah going past that I don't

00:05:46,090 --> 00:05:48,910
know if you have tried it's not good I

00:05:47,229 --> 00:05:51,820
will show you how we can do it quickly

00:05:48,910 --> 00:05:54,370
but to be out any any help and there's

00:05:51,820 --> 00:05:57,849
plenty more reasons why you want to dig

00:05:54,370 --> 00:06:00,460
into the history so and and try to find

00:05:57,849 --> 00:06:04,449
out about something strange like this

00:06:00,460 --> 00:06:06,669
thing they found many like this in the

00:06:04,449 --> 00:06:09,099
like single area I think in Nebraska

00:06:06,669 --> 00:06:11,380
starting from 19th centuries and this is

00:06:09,099 --> 00:06:13,120
I got this kind of feeling when many

00:06:11,380 --> 00:06:16,810
times when I I am looking in the

00:06:13,120 --> 00:06:18,639
alcoholic okay it looks there is a psych

00:06:16,810 --> 00:06:20,530
symmetry there is something there but I

00:06:18,639 --> 00:06:22,479
have no idea why I now have no idea what

00:06:20,530 --> 00:06:23,860
is that and it was the same possible for

00:06:22,479 --> 00:06:26,919
the eople anthologies for a while

00:06:23,860 --> 00:06:28,510
they've got different ideas and there

00:06:26,919 --> 00:06:30,460
was there is no good there is no complex

00:06:28,510 --> 00:06:32,110
body for paleontology so they have to

00:06:30,460 --> 00:06:33,910
like you know research research and try

00:06:32,110 --> 00:06:35,890
to find out what is that why is why is

00:06:33,910 --> 00:06:37,599
there what how does it look like because

00:06:35,890 --> 00:06:40,060
there is no way that this thing is

00:06:37,599 --> 00:06:40,740
actually like something not made by a

00:06:40,060 --> 00:06:43,620
living

00:06:40,740 --> 00:06:45,540
because it's like there's I don't see

00:06:43,620 --> 00:06:46,860
any process of anything except for

00:06:45,540 --> 00:06:50,100
living creatures to make something like

00:06:46,860 --> 00:06:53,370
this and we got the same problems with

00:06:50,100 --> 00:06:55,830
our codes so let me show you something

00:06:53,370 --> 00:07:03,990
that all of you I think who's who's not

00:06:55,830 --> 00:07:06,240
using SBT what are using Gradle Gradle

00:07:03,990 --> 00:07:07,890
also supporting so this is the part of

00:07:06,240 --> 00:07:09,510
zinc so this is the incremental compiler

00:07:07,890 --> 00:07:11,520
for Scala this is the thing that

00:07:09,510 --> 00:07:13,500
actually makes your scholar compilation

00:07:11,520 --> 00:07:16,350
relatively short for the small small

00:07:13,500 --> 00:07:21,000
changes probably the most the piece of

00:07:16,350 --> 00:07:22,620
software that we like if we think is not

00:07:21,000 --> 00:07:24,840
there like if we don't have incremental

00:07:22,620 --> 00:07:27,540
compiler nobody will use Scala that's my

00:07:24,840 --> 00:07:28,920
bad that doesn't make us bad this is

00:07:27,540 --> 00:07:31,020
like the heart the heart of that thing

00:07:28,920 --> 00:07:33,060
this is the metric that actually doing

00:07:31,020 --> 00:07:34,650
the cycles think is working in cycles so

00:07:33,060 --> 00:07:36,600
try to recompile like a small piece of

00:07:34,650 --> 00:07:38,880
Scala try if something else needs to be

00:07:36,600 --> 00:07:41,220
recompile and doing it until we usually

00:07:38,880 --> 00:07:44,700
compile everything or there is no more

00:07:41,220 --> 00:07:47,160
things to recompile and you may see this

00:07:44,700 --> 00:07:48,720
is quite old if you go into the game at

00:07:47,160 --> 00:07:51,270
some point project was move so it's not

00:07:48,720 --> 00:07:53,100
really valid but there is a plenty of

00:07:51,270 --> 00:07:55,440
code in think that was written by mark

00:07:53,100 --> 00:07:57,090
hara like long long time ago it's

00:07:55,440 --> 00:07:59,430
probably pieces of that code this as

00:07:57,090 --> 00:08:04,350
long as SBT so I've bet like ten years

00:07:59,430 --> 00:08:06,060
and I do to my work my project we were

00:08:04,350 --> 00:08:08,190
using heavily to actually catch the

00:08:06,060 --> 00:08:10,050
compilations and try to reduce

00:08:08,190 --> 00:08:11,970
computation time using using like adding

00:08:10,050 --> 00:08:15,900
artifacts and I dig heavily in the zinc

00:08:11,970 --> 00:08:18,090
code and fossil moments I've got many of

00:08:15,900 --> 00:08:20,550
those here so one of this thing is like

00:08:18,090 --> 00:08:22,380
there is a love you can see it clearly

00:08:20,550 --> 00:08:23,940
there's like each class file manager and

00:08:22,380 --> 00:08:26,190
you might think okay I'm doing a

00:08:23,940 --> 00:08:27,780
compilation here so why complain compile

00:08:26,190 --> 00:08:30,270
compiler is doing the managing the class

00:08:27,780 --> 00:08:31,980
fights so white like white was

00:08:30,270 --> 00:08:34,200
introduced here and I want to find like

00:08:31,980 --> 00:08:36,630
a comet that introduced that so yeah I

00:08:34,200 --> 00:08:39,060
can do keep time I don't like using it

00:08:36,630 --> 00:08:40,680
blame from command line because the

00:08:39,060 --> 00:08:43,650
output is really white there is like

00:08:40,680 --> 00:08:46,170
usually if there's like some moves there

00:08:43,650 --> 00:08:48,210
is like a path to the file where it is

00:08:46,170 --> 00:08:50,190
so I need like three screens to see

00:08:48,210 --> 00:08:52,170
anything in the output in that the

00:08:50,190 --> 00:08:53,400
common line output but I can use

00:08:52,170 --> 00:08:56,310
IntelliJ

00:08:53,400 --> 00:08:58,140
there's this nice ethnic page come on

00:08:56,310 --> 00:09:02,400
and yeah I can see that this line was

00:08:58,140 --> 00:09:06,720
changed by Xie go and and look at the

00:09:02,400 --> 00:09:09,060
comet is like prefix all types with X if

00:09:06,720 --> 00:09:10,950
comes from different package so it gives

00:09:09,060 --> 00:09:12,870
me but I mean I don't know why it's here

00:09:10,950 --> 00:09:14,730
it's like I know it was perfect so I

00:09:12,870 --> 00:09:16,350
have to dig in as the scientists trying

00:09:14,730 --> 00:09:19,140
to you know try to find out what was

00:09:16,350 --> 00:09:20,880
this strange fingers so I can do it

00:09:19,140 --> 00:09:23,250
using get like I can come back to the

00:09:20,880 --> 00:09:25,770
history like to check out to do that

00:09:23,250 --> 00:09:28,170
point on that comet going to the parent

00:09:25,770 --> 00:09:31,500
and do other other stuff like that but

00:09:28,170 --> 00:09:33,690
in college a really convenient way us at

00:09:31,500 --> 00:09:36,420
this I'd not take previous revision

00:09:33,690 --> 00:09:38,430
command so it basically doing all the

00:09:36,420 --> 00:09:40,020
Nesta for us and open a new windows and

00:09:38,430 --> 00:09:42,510
I can see like the code as it was before

00:09:40,020 --> 00:09:45,270
the commit and yeah you can guess what

00:09:42,510 --> 00:09:48,240
this what does that commit reformat

00:09:45,270 --> 00:09:52,620
every fingers call SMT and yeah we can

00:09:48,240 --> 00:09:53,970
come back again and and we actually in

00:09:52,620 --> 00:09:56,070
order to get to the point when you

00:09:53,970 --> 00:09:58,230
actually know who introduced the Scala

00:09:56,070 --> 00:09:59,880
classified manager who actually go to

00:09:58,230 --> 00:10:01,590
the end of the history because pretty

00:09:59,880 --> 00:10:04,770
much the first come in the file doesn't

00:10:01,590 --> 00:10:06,840
reduce it so not much help but yeah in

00:10:04,770 --> 00:10:08,610
most cases we find what is there and we

00:10:06,840 --> 00:10:11,190
will need to do like many many many many

00:10:08,610 --> 00:10:13,680
steps back because this piece was a

00:10:11,190 --> 00:10:16,500
quite changes quite a few time during

00:10:13,680 --> 00:10:18,210
the file history in order to prove my

00:10:16,500 --> 00:10:22,650
work you can see here how old this is by

00:10:18,210 --> 00:10:25,740
looking at one of the dates maybe that

00:10:22,650 --> 00:10:29,130
one it's like 16 so it's quite new but

00:10:25,740 --> 00:10:30,960
there is like other one yeah and we can

00:10:29,130 --> 00:10:32,790
do it manually like you know try to dig

00:10:30,960 --> 00:10:35,010
and try to find the remains and try to

00:10:32,790 --> 00:10:37,260
sort the puzzles so this is the same

00:10:35,010 --> 00:10:39,000
thing with that so scientists trying to

00:10:37,260 --> 00:10:41,310
solve this puzzle there's many theories

00:10:39,000 --> 00:10:43,680
like there is like some kind of plant

00:10:41,310 --> 00:10:47,760
that grows around other plants there is

00:10:43,680 --> 00:10:50,100
like exist bunch but at some point that

00:10:47,760 --> 00:10:51,690
then that examine closely they found

00:10:50,100 --> 00:10:53,700
like small bones and more and more of

00:10:51,690 --> 00:10:56,760
that small bones and it appears that

00:10:53,700 --> 00:10:58,110
they come from the same animal and the

00:10:56,760 --> 00:11:01,050
problem will solve one they actually

00:10:58,110 --> 00:11:03,510
find the bomb within that thing so this

00:11:01,050 --> 00:11:05,790
is not a plant this is not a bomb not

00:11:03,510 --> 00:11:06,840
everything but this is rather a burrow

00:11:05,790 --> 00:11:09,060
that was fossilize

00:11:06,840 --> 00:11:10,800
so there was a there's this nice

00:11:09,060 --> 00:11:12,840
creature there that is called Palio

00:11:10,800 --> 00:11:15,750
caster that lift is like a beaver that

00:11:12,840 --> 00:11:17,310
lives on desert there was a strange

00:11:15,750 --> 00:11:19,440
things in the past and he actually did

00:11:17,310 --> 00:11:22,440
this kind of deep burrows because it was

00:11:19,440 --> 00:11:25,260
you can eat with dig dig deep in order

00:11:22,440 --> 00:11:26,940
to get like a nice temperature to live

00:11:25,260 --> 00:11:28,500
in because the night was really cold and

00:11:26,940 --> 00:11:30,090
today it was really hot and if you dig

00:11:28,500 --> 00:11:32,100
deep that the temperature is pretty much

00:11:30,090 --> 00:11:34,230
the same and apparently the easiest

00:11:32,100 --> 00:11:36,630
reason this way to actually dig deep is

00:11:34,230 --> 00:11:38,940
actually doing the spiral down down down

00:11:36,630 --> 00:11:40,440
there and if you because if you just go

00:11:38,940 --> 00:11:41,820
straight you will be trapped on the

00:11:40,440 --> 00:11:43,440
bottom and I've learned like many

00:11:41,820 --> 00:11:45,180
minecraft players got their problems

00:11:43,440 --> 00:11:47,760
with that so they dig deep and there is

00:11:45,180 --> 00:11:49,170
like no way to adapt and this was filled

00:11:47,760 --> 00:11:52,680
with like harder sand and this

00:11:49,170 --> 00:11:56,460
fossilized facility so yeah it was there

00:11:52,680 --> 00:12:01,140
and how we can do better with the with

00:11:56,460 --> 00:12:04,770
our history let me show you and I have

00:12:01,140 --> 00:12:08,370
to come back to to the original file and

00:12:04,770 --> 00:12:10,140
then I have to turn something that is

00:12:08,370 --> 00:12:12,120
called smart history you are not going

00:12:10,140 --> 00:12:13,380
to find this in your ID this is

00:12:12,120 --> 00:12:20,310
something that context buddy provides

00:12:13,380 --> 00:12:22,560
and no fireworks but we can see that we

00:12:20,310 --> 00:12:24,000
got this kind of strange dots and this

00:12:22,560 --> 00:12:26,160
tell me if you can see that the

00:12:24,000 --> 00:12:28,800
different names got different colors in

00:12:26,160 --> 00:12:30,750
the background kind of the way how the

00:12:28,800 --> 00:12:32,670
presentation mode in IntelliJ works

00:12:30,750 --> 00:12:34,830
means that the underscores that should

00:12:32,670 --> 00:12:36,540
be like most visible get smart get the

00:12:34,830 --> 00:12:38,910
same size as with normal text so it's

00:12:36,540 --> 00:12:40,950
maybe harder to read in normal mode but

00:12:38,910 --> 00:12:44,400
now you can see there is like a plenty

00:12:40,950 --> 00:12:46,920
of colors here so for example this is

00:12:44,400 --> 00:12:49,110
okay annotated with the this X class 5

00:12:46,920 --> 00:12:51,270
monitor and just edit it but it's a go

00:12:49,110 --> 00:12:52,530
as we start and then new to it there is

00:12:51,270 --> 00:12:55,530
other thing that was introduced by

00:12:52,530 --> 00:12:59,610
Krakowski long long time ago as you can

00:12:55,530 --> 00:13:02,910
see is like in the 70s actually probably

00:12:59,610 --> 00:13:04,470
someone just reserved the the hour my

00:13:02,910 --> 00:13:06,300
kid is not smart enough to find out the

00:13:04,470 --> 00:13:07,950
correct date but yeah it's pointed to

00:13:06,300 --> 00:13:12,390
the actual comedy where this thing was

00:13:07,950 --> 00:13:15,510
introduced and and you can see it's not

00:13:12,390 --> 00:13:17,040
only there is no sign of the hora change

00:13:15,510 --> 00:13:20,000
to reformat everything I can do get

00:13:17,040 --> 00:13:22,550
blame again nothing here it's just

00:13:20,000 --> 00:13:25,430
we're expert the actual change to play

00:13:22,550 --> 00:13:28,730
given the actual token with actual thing

00:13:25,430 --> 00:13:30,110
and you might guess how does it work

00:13:28,730 --> 00:13:32,899
what is the kind of magic there is no

00:13:30,110 --> 00:13:34,250
information get in order to do so yes

00:13:32,899 --> 00:13:38,660
and you are right and this is where

00:13:34,250 --> 00:13:40,430
context body is and whether context what

00:13:38,660 --> 00:13:42,500
they work so let me show you I have to

00:13:40,430 --> 00:13:43,759
change repository because think is quite

00:13:42,500 --> 00:13:45,019
weak and actually showing you everything

00:13:43,759 --> 00:13:46,459
there it would be like really really

00:13:45,019 --> 00:13:50,689
hard

00:13:46,459 --> 00:13:54,980
how does it work more or less is to

00:13:50,689 --> 00:13:57,379
click two more times so we got like a

00:13:54,980 --> 00:13:59,750
pretty simple class it makes no sense

00:13:57,379 --> 00:14:01,069
there to not find any sense you just put

00:13:59,750 --> 00:14:06,610
like you know and everything that comes

00:14:01,069 --> 00:14:06,610
to my mind and as you can see maybe our

00:14:07,300 --> 00:14:11,569
as you can see here this is like an arm

00:14:09,889 --> 00:14:13,720
across not nothing class and there is a

00:14:11,569 --> 00:14:16,699
history here so good multiple dots here

00:14:13,720 --> 00:14:19,100
different colors so how do I know that

00:14:16,699 --> 00:14:23,509
information this is all because I'm

00:14:19,100 --> 00:14:25,639
using tokens so let me show you how

00:14:23,509 --> 00:14:27,379
contexts bodies is that files the file

00:14:25,639 --> 00:14:29,420
it's something like that so it's

00:14:27,379 --> 00:14:30,949
basically the list of everything

00:14:29,420 --> 00:14:33,889
important from that they can get from

00:14:30,949 --> 00:14:36,559
code I probably should add some int

00:14:33,889 --> 00:14:40,399
literals as well but you can pretend

00:14:36,559 --> 00:14:42,680
that they're here as well and now we if

00:14:40,399 --> 00:14:44,569
I keep the file in that mode I'm pretty

00:14:42,680 --> 00:14:46,790
easy to keep track of the history what

00:14:44,569 --> 00:14:50,000
was going on because if I for example

00:14:46,790 --> 00:14:52,420
change the I introduce a parameter here

00:14:50,000 --> 00:14:56,389
like like this one then it means that

00:14:52,420 --> 00:14:58,610
around my metal and type is not changed

00:14:56,389 --> 00:15:00,920
and it will be in the same order so

00:14:58,610 --> 00:15:04,750
using like simple diff I can compare

00:15:00,920 --> 00:15:08,180
those and and keep track of the history

00:15:04,750 --> 00:15:09,920
so you basically met a context body that

00:15:08,180 --> 00:15:11,600
was the first thing that context body

00:15:09,920 --> 00:15:14,449
does and I hope in for now

00:15:11,600 --> 00:15:17,569
it's the thing that it does best but

00:15:14,449 --> 00:15:21,170
actually looking at this simple code is

00:15:17,569 --> 00:15:23,089
very useful I mean but it's not it's I'm

00:15:21,170 --> 00:15:27,500
not satisfied with it I want to get more

00:15:23,089 --> 00:15:30,350
because I think there is more so this

00:15:27,500 --> 00:15:33,590
finger gun this is not the fossil but

00:15:30,350 --> 00:15:36,050
fossil is a part of living thing that

00:15:33,590 --> 00:15:38,870
fossilized but those borrowed those two

00:15:36,050 --> 00:15:40,310
spiral is another fossil it's just a

00:15:38,870 --> 00:15:43,430
trace for so so it's something that

00:15:40,310 --> 00:15:45,770
living creature like did made some sign

00:15:43,430 --> 00:15:47,840
of it in the outside world and it passed

00:15:45,770 --> 00:15:51,050
the information to us and there are more

00:15:47,840 --> 00:15:53,270
other examples like the footprints of

00:15:51,050 --> 00:15:56,620
dinosaurs are quite common there's like

00:15:53,270 --> 00:16:00,020
footprints of other maybe less sexy

00:15:56,620 --> 00:16:02,600
creatures like small ammonites or

00:16:00,020 --> 00:16:04,940
other one once but they're also like

00:16:02,600 --> 00:16:07,700
more exotic ones like they also found a

00:16:04,940 --> 00:16:10,610
great pool of dinosaurs and to be honest

00:16:07,700 --> 00:16:12,980
this is more in many cases this is more

00:16:10,610 --> 00:16:15,530
provides more information than the

00:16:12,980 --> 00:16:18,050
actual bone because if we got like 200

00:16:15,530 --> 00:16:19,940
bones okay we know the bones we can

00:16:18,050 --> 00:16:21,650
measure stuff like the amount of

00:16:19,940 --> 00:16:25,190
information people can get from bones is

00:16:21,650 --> 00:16:26,990
like crazy but when we got the dog thing

00:16:25,190 --> 00:16:29,300
it proves like okay this is a trace of

00:16:26,990 --> 00:16:31,340
that plant so this think this plant was

00:16:29,300 --> 00:16:34,550
rice so it was high as well all those

00:16:31,340 --> 00:16:37,520
jumping or flying whatever and if you

00:16:34,550 --> 00:16:39,710
think about the coach it's the same

00:16:37,520 --> 00:16:41,450
thing with the coat they all the tokens

00:16:39,710 --> 00:16:43,430
of the defense of the call itself you

00:16:41,450 --> 00:16:45,230
can be thinking as a bone so it's it's

00:16:43,430 --> 00:16:46,880
the thing that makes our coat but there

00:16:45,230 --> 00:16:48,290
is plenty of information there as well

00:16:46,880 --> 00:16:52,160
that this is that is different

00:16:48,290 --> 00:16:53,600
so thanks in most cases in scholar we

00:16:52,160 --> 00:16:55,520
don't have to other types in many many

00:16:53,600 --> 00:16:59,150
place we only need to at times really

00:16:55,520 --> 00:17:01,760
need them but not only types each of if

00:16:59,150 --> 00:17:03,440
you am using a library who's got a

00:17:01,760 --> 00:17:05,240
problem with like using the wrong

00:17:03,440 --> 00:17:07,550
library or having problem with with

00:17:05,240 --> 00:17:11,690
dependency resolution in last three

00:17:07,550 --> 00:17:13,760
months raise your hand yeah so probably

00:17:11,690 --> 00:17:15,260
know the what I want to say is like

00:17:13,760 --> 00:17:17,300
sometimes you want to do something just

00:17:15,260 --> 00:17:20,270
fail to compile because like the library

00:17:17,300 --> 00:17:22,850
was evicted and it's changed so this

00:17:20,270 --> 00:17:25,160
also I get trace information is not

00:17:22,850 --> 00:17:27,680
moving the code but it's rather the

00:17:25,160 --> 00:17:30,260
environment and you can think about more

00:17:27,680 --> 00:17:32,120
stuff like output from tests logs their

00:17:30,260 --> 00:17:34,100
test results

00:17:32,120 --> 00:17:35,630
performance characteristics more more

00:17:34,100 --> 00:17:38,630
more places that normal things like that

00:17:35,630 --> 00:17:41,990
are can be can like the codes effect

00:17:38,630 --> 00:17:44,810
they effects the world outside or or or

00:17:41,990 --> 00:17:46,790
the things that affects the code so can

00:17:44,810 --> 00:17:47,669
we ask context body to provide this

00:17:46,790 --> 00:17:51,580
information

00:17:47,669 --> 00:17:57,070
let me show you so let's start with

00:17:51,580 --> 00:17:59,139
something I've called the map hello so

00:17:57,070 --> 00:18:00,580
imagine this is like not simple thing

00:17:59,139 --> 00:18:03,029
that fits on the slide but this is

00:18:00,580 --> 00:18:06,039
actual application so we got this thing

00:18:03,029 --> 00:18:08,529
it works fine for like half a year there

00:18:06,039 --> 00:18:11,679
was some minor of changes see is green

00:18:08,529 --> 00:18:13,090
everything is fine there is not much

00:18:11,679 --> 00:18:14,320
traffic on our application right now

00:18:13,090 --> 00:18:15,850
let's say we go the stablished

00:18:14,320 --> 00:18:18,399
application for students this summer

00:18:15,850 --> 00:18:20,590
nothing going on and then like September

00:18:18,399 --> 00:18:23,080
of October the application is like you

00:18:20,590 --> 00:18:24,399
know and the servers like red hot and it

00:18:23,080 --> 00:18:26,799
wasn't last year there was not big

00:18:24,399 --> 00:18:28,870
features introduced new like everything

00:18:26,799 --> 00:18:30,909
works fine what's going on so smart

00:18:28,870 --> 00:18:32,529
people actually debuggable to some kind

00:18:30,909 --> 00:18:34,750
of these tax races or stuff like that

00:18:32,529 --> 00:18:38,470
and it turns out that we do some caching

00:18:34,750 --> 00:18:41,409
here in that line and it turns out it

00:18:38,470 --> 00:18:44,019
does not work like the cache that we

00:18:41,409 --> 00:18:45,850
create does not work so what's going on

00:18:44,019 --> 00:18:48,039
here so the first thing let's say you

00:18:45,850 --> 00:18:49,960
are just joining the project you were

00:18:48,039 --> 00:18:51,490
given this task like the version was

00:18:49,960 --> 00:18:53,110
reverted so the production is not on

00:18:51,490 --> 00:18:54,159
fire but you have to investigate what's

00:18:53,110 --> 00:18:57,039
going on here

00:18:54,159 --> 00:18:58,480
so you want to see ok what was changed

00:18:57,039 --> 00:19:00,129
so it was introduced like eight month

00:18:58,480 --> 00:19:03,549
ago probably there is a change somewhere

00:19:00,129 --> 00:19:06,129
here so let's use a good lime and its

00:19:03,549 --> 00:19:08,049
initial comment in the project so we

00:19:06,129 --> 00:19:09,759
dine was wasn't changed there was like a

00:19:08,049 --> 00:19:12,460
few small small changes like in

00:19:09,759 --> 00:19:14,139
different cache on the top and there was

00:19:12,460 --> 00:19:16,509
like probably line deleted or something

00:19:14,139 --> 00:19:17,590
and in the top of the file and imagine

00:19:16,509 --> 00:19:19,389
that there is a three hundred lines of

00:19:17,590 --> 00:19:21,100
code here so you probably won't be able

00:19:19,389 --> 00:19:23,500
to see those two lines changed if you

00:19:21,100 --> 00:19:26,889
look at that file any idea what what

00:19:23,500 --> 00:19:29,289
went wrong here yes let me and contacts

00:19:26,889 --> 00:19:32,590
bodies on so you can see there is this

00:19:29,289 --> 00:19:33,250
this brown dots here but since the code

00:19:32,590 --> 00:19:35,860
wasn't touched

00:19:33,250 --> 00:19:39,039
there was no change there in the tokens

00:19:35,860 --> 00:19:43,210
itself in the code it cannot happy with

00:19:39,039 --> 00:19:53,019
it this much so we can actually be

00:19:43,210 --> 00:19:54,879
smarter and where are you yes and thus

00:19:53,019 --> 00:19:56,950
context body for help so we got the

00:19:54,879 --> 00:19:59,980
small many here I'm not really good in

00:19:56,950 --> 00:20:01,480
designing user interfaces so probably it

00:19:59,980 --> 00:20:03,429
can be done way better

00:20:01,480 --> 00:20:04,899
and by default there is a tokens that

00:20:03,429 --> 00:20:07,149
are selected you can see also the

00:20:04,899 --> 00:20:08,470
Conway's that effect this line yeah this

00:20:07,149 --> 00:20:10,480
is really small effort to show so there

00:20:08,470 --> 00:20:13,450
is no tricks or isn't long and now we

00:20:10,480 --> 00:20:17,679
can few things to pick from let's go

00:20:13,450 --> 00:20:20,980
over symbols did you notice the change

00:20:17,679 --> 00:20:23,350
there is two dots in the new cache so

00:20:20,980 --> 00:20:24,880
there was a change so the actual symbols

00:20:23,350 --> 00:20:28,240
or the types or whatever you want to

00:20:24,880 --> 00:20:29,799
call it something affected that line in

00:20:28,240 --> 00:20:33,700
the history even though the code was not

00:20:29,799 --> 00:20:36,220
changed okay if you were looking at that

00:20:33,700 --> 00:20:38,049
you can go and try to even try to

00:20:36,220 --> 00:20:40,419
understand what's going on here but

00:20:38,049 --> 00:20:42,100
context buddy how have you here so you

00:20:40,419 --> 00:20:44,950
know that this is was introduced by

00:20:42,100 --> 00:20:49,269
advert and it was many many problems so

00:20:44,950 --> 00:20:51,549
let's see what problems was there you

00:20:49,269 --> 00:20:54,549
noticed it's become red and now when I

00:20:51,549 --> 00:20:56,980
hover over that it showed me what was

00:20:54,549 --> 00:20:59,409
the previous talk under the change is

00:20:56,980 --> 00:21:02,799
really small basically it used to be

00:20:59,409 --> 00:21:04,539
mutable but it becomes immutable you

00:21:02,799 --> 00:21:06,730
might ask yet this was a good move like

00:21:04,539 --> 00:21:09,039
it should work now when you do a caching

00:21:06,730 --> 00:21:11,380
and this way you really want me table

00:21:09,039 --> 00:21:13,269
maps this isn't a pattern you should

00:21:11,380 --> 00:21:14,590
probably not do that but come on this is

00:21:13,269 --> 00:21:15,730
the legacy code it was there from the

00:21:14,590 --> 00:21:19,419
beginning someone was robbed during

00:21:15,730 --> 00:21:21,399
Scala and developed that thing so yeah

00:21:19,419 --> 00:21:24,010
what why was the problem so let me show

00:21:21,399 --> 00:21:25,510
you the diff from that comet for for

00:21:24,010 --> 00:21:27,309
this file so basically there was an

00:21:25,510 --> 00:21:28,899
immutable map imported top-level and

00:21:27,309 --> 00:21:31,240
probably someone when this cache was

00:21:28,899 --> 00:21:32,470
introduced but Pig doesn't the review

00:21:31,240 --> 00:21:34,720
and said okay you should remove this

00:21:32,470 --> 00:21:37,419
this import on the top of the file and

00:21:34,720 --> 00:21:39,190
add the object in the the place where it

00:21:37,419 --> 00:21:41,500
should be and this is a completely valid

00:21:39,190 --> 00:21:43,389
thing but here there is this map that

00:21:41,500 --> 00:21:45,549
was mutable and right now is not and

00:21:43,389 --> 00:21:47,350
disclosure problems and since mutable

00:21:45,549 --> 00:21:50,889
map animate a boom up works the same way

00:21:47,350 --> 00:21:53,559
except for the effect that in table map

00:21:50,889 --> 00:21:55,690
the result is cached the production

00:21:53,559 --> 00:21:59,230
works fine for a long time the decimal

00:21:55,690 --> 00:22:00,700
screen everything was fine so that's the

00:21:59,230 --> 00:22:02,590
first first first place because context

00:22:00,700 --> 00:22:04,419
buddy can help us like actually we can

00:22:02,590 --> 00:22:06,630
see what was the change within the

00:22:04,419 --> 00:22:08,769
symbols moving the types that was there

00:22:06,630 --> 00:22:13,720
there are other situation I want to show

00:22:08,769 --> 00:22:15,460
you as well so another case there this

00:22:13,720 --> 00:22:18,100
time no mutability no side effect

00:22:15,460 --> 00:22:19,330
except for plane line but it's doesn't

00:22:18,100 --> 00:22:21,399
matter

00:22:19,330 --> 00:22:23,139
we've got like which there's an

00:22:21,399 --> 00:22:25,210
application and we try to get like to

00:22:23,139 --> 00:22:29,679
pass the arguments and convert them into

00:22:25,210 --> 00:22:31,059
to tell the person to the inks and there

00:22:29,679 --> 00:22:32,769
are in our right so we don't want to

00:22:31,059 --> 00:22:34,450
narrow so introduce collection breakout

00:22:32,769 --> 00:22:36,460
and then we display then represent the

00:22:34,450 --> 00:22:38,590
rest of the application and also there

00:22:36,460 --> 00:22:41,139
was a change somewhere and the results

00:22:38,590 --> 00:22:44,289
are different so what was the change

00:22:41,139 --> 00:22:46,740
here in that file let me show you maybe

00:22:44,289 --> 00:22:49,629
this time we've started the history

00:22:46,740 --> 00:22:51,759
again basically the some of the trades

00:22:49,629 --> 00:22:53,499
was changed somewhere else it's all in

00:22:51,759 --> 00:22:54,700
the same file but in your application

00:22:53,499 --> 00:22:57,700
probably will be a completely different

00:22:54,700 --> 00:22:59,320
place and talking again here in the

00:22:57,700 --> 00:23:01,929
problematic place where the output was

00:22:59,320 --> 00:23:04,690
changed are not not affected there was

00:23:01,929 --> 00:23:06,009
no change here so we can use symbols

00:23:04,690 --> 00:23:09,039
here as well but we've got other thing

00:23:06,009 --> 00:23:11,409
called definition types and this is like

00:23:09,039 --> 00:23:13,629
way less instances like as you can see

00:23:11,409 --> 00:23:16,509
it it's there's two changes from point

00:23:13,629 --> 00:23:19,029
of the definition types in the middle so

00:23:16,509 --> 00:23:20,379
basically where we got the Train defined

00:23:19,029 --> 00:23:22,389
and yeah this makes sense because we

00:23:20,379 --> 00:23:25,029
change the new ways but we also change

00:23:22,389 --> 00:23:28,929
something here let me show you what was

00:23:25,029 --> 00:23:30,789
changed again we were using this is also

00:23:28,929 --> 00:23:32,559
a tiny change really hard to spot when

00:23:30,789 --> 00:23:34,929
you do a code review basically the set

00:23:32,559 --> 00:23:36,759
was replaced with sack and it means when

00:23:34,929 --> 00:23:38,710
we got like on the input like 1 1 5

00:23:36,759 --> 00:23:40,990
previously it was just 1 5 coming out of

00:23:38,710 --> 00:23:43,450
that because said remove duplicate when

00:23:40,990 --> 00:23:45,340
you changed to seek we got all the

00:23:43,450 --> 00:23:46,720
output and it's only because we changed

00:23:45,340 --> 00:23:49,330
like the definition type in one of the

00:23:46,720 --> 00:23:51,369
trades we probably should put a correct

00:23:49,330 --> 00:23:53,019
concrete definition of the type here and

00:23:51,369 --> 00:23:55,149
you will solve the problem but again

00:23:53,019 --> 00:23:57,039
this is a legacy code this is the code

00:23:55,149 --> 00:23:58,960
written like long time ago and probably

00:23:57,039 --> 00:24:00,669
someone was super proud when he wrote

00:23:58,960 --> 00:24:02,470
that code that he don't need to provide

00:24:00,669 --> 00:24:05,139
hit types here because this was collides

00:24:02,470 --> 00:24:08,860
for yeah it observe compiler can get

00:24:05,139 --> 00:24:11,289
stuck for us ok another thing that we

00:24:08,860 --> 00:24:15,249
can inspect

00:24:11,289 --> 00:24:18,100
so this time there is no change in that

00:24:15,249 --> 00:24:22,389
file it's all the same initial commit

00:24:18,100 --> 00:24:24,220
and there is no run there but the output

00:24:22,389 --> 00:24:26,250
is changed a bit like formatting of the

00:24:24,220 --> 00:24:29,010
date was changed like what was going on

00:24:26,250 --> 00:24:31,370
the file was not changed not not there

00:24:29,010 --> 00:24:34,680
no no no any change would oppose that

00:24:31,370 --> 00:24:37,080
let's use our rings and again you can

00:24:34,680 --> 00:24:38,910
see there's something changed here so

00:24:37,080 --> 00:24:42,000
again let's try what is like the

00:24:38,910 --> 00:24:44,250
affecting thing and you might see that

00:24:42,000 --> 00:24:46,800
it actually grabs the origin of the file

00:24:44,250 --> 00:24:48,570
so if there is anything in the code it

00:24:46,800 --> 00:24:51,390
comes from somewhere either is a source

00:24:48,570 --> 00:24:53,790
file or jar and we can just you know see

00:24:51,390 --> 00:24:55,640
that and okay someone just downgrade the

00:24:53,790 --> 00:24:59,550
time library

00:24:55,640 --> 00:25:01,410
how might happen the way how would you

00:24:59,550 --> 00:25:03,450
resolve the penances our project might

00:25:01,410 --> 00:25:04,970
be surprising surprisingly surprising

00:25:03,450 --> 00:25:07,170
many times peak forward because

00:25:04,970 --> 00:25:08,820
dependence might be removed which may

00:25:07,170 --> 00:25:10,890
affect other libraries because of the

00:25:08,820 --> 00:25:13,590
eviction transitive dependencies general

00:25:10,890 --> 00:25:16,560
dependencies RMS and this is a simple

00:25:13,590 --> 00:25:18,360
case but I've back many many problems

00:25:16,560 --> 00:25:20,550
for example the worst one are guava

00:25:18,360 --> 00:25:22,200
because go over not binary compatible

00:25:20,550 --> 00:25:25,110
and sometimes there are included in some

00:25:22,200 --> 00:25:26,820
other libraries and I deduct many times

00:25:25,110 --> 00:25:29,040
the part that application was failing

00:25:26,820 --> 00:25:30,660
with abstract method errors on the

00:25:29,040 --> 00:25:32,370
production even though the adult compile

00:25:30,660 --> 00:25:33,270
code compiles because the class path was

00:25:32,370 --> 00:25:36,090
changed a bit

00:25:33,270 --> 00:25:37,680
yeah it's kind of problems so and the

00:25:36,090 --> 00:25:43,500
last one I want to show you here is my

00:25:37,680 --> 00:25:45,330
favorite because Scala actually a

00:25:43,500 --> 00:25:47,400
compiler itself introduced a lot of

00:25:45,330 --> 00:25:49,260
stuff moving the code like for example

00:25:47,400 --> 00:25:51,540
implicit so this is the same example as

00:25:49,260 --> 00:25:54,120
before and when we do when we add note

00:25:51,540 --> 00:25:56,310
age synthesis so basically the stubs

00:25:54,120 --> 00:26:01,040
injected by the compiler we can also see

00:25:56,310 --> 00:26:05,460
that the implicit here is changed and I

00:26:01,040 --> 00:26:07,620
test I wanted to find out if context

00:26:05,460 --> 00:26:10,050
body actually can't solve actual

00:26:07,620 --> 00:26:11,370
puzzlers from Scala and autotap link I

00:26:10,050 --> 00:26:13,740
don't know if you heard about that is

00:26:11,370 --> 00:26:16,380
one of the problems so basically you you

00:26:13,740 --> 00:26:19,440
change something in the code and there

00:26:16,380 --> 00:26:21,570
is something that can accept an object

00:26:19,440 --> 00:26:24,030
or anything the top tuples can match and

00:26:21,570 --> 00:26:26,610
before it accept like different amount

00:26:24,030 --> 00:26:28,710
of parameters so Scala see I can I can't

00:26:26,610 --> 00:26:31,200
approve it so writers I can make it turn

00:26:28,710 --> 00:26:33,540
into the top oh so here when I again

00:26:31,200 --> 00:26:35,460
their own sentences it will show me that

00:26:33,540 --> 00:26:37,550
there is an apply method that was

00:26:35,460 --> 00:26:40,800
changed so visited table was introduced

00:26:37,550 --> 00:26:42,930
so yeah that's that's the

00:26:40,800 --> 00:26:45,060
few things that complex buddy have had

00:26:42,930 --> 00:26:47,460
to have this kind of trace information

00:26:45,060 --> 00:26:50,270
from the code that are not there but

00:26:47,460 --> 00:26:50,270
effects your code

00:26:50,510 --> 00:26:55,380
so my you might want to ask how you can

00:26:53,220 --> 00:26:57,630
try it the problem is that you there is

00:26:55,380 --> 00:27:00,240
no open its context buddy is not open

00:26:57,630 --> 00:27:02,190
yet it's not because I don't want to

00:27:00,240 --> 00:27:05,580
open it but I don't want to open it too

00:27:02,190 --> 00:27:07,260
early because since the the things I

00:27:05,580 --> 00:27:09,440
showed you with the hell we can read the

00:27:07,260 --> 00:27:12,450
data are simple or relatively simple or

00:27:09,440 --> 00:27:14,640
simple plus you have to deal with the ID

00:27:12,450 --> 00:27:17,100
like actual called UI code to display it

00:27:14,640 --> 00:27:19,530
which I'm not really good at but I will

00:27:17,100 --> 00:27:20,640
try to find some help don't worry but

00:27:19,530 --> 00:27:22,650
the actual problem is actually to

00:27:20,640 --> 00:27:24,390
produce that history data and this is

00:27:22,650 --> 00:27:26,790
really tied to the way how you developed

00:27:24,390 --> 00:27:29,130
your software so how do you have your CI

00:27:26,790 --> 00:27:33,240
pipelines work how do you play with your

00:27:29,130 --> 00:27:36,720
branching strategy and I really want to

00:27:33,240 --> 00:27:40,230
try it out on few like different

00:27:36,720 --> 00:27:42,120
projects before I will go to public but

00:27:40,230 --> 00:27:43,890
if you really want to try it contact me

00:27:42,120 --> 00:27:46,860
either you can write to contacts but yet

00:27:43,890 --> 00:27:49,200
boots of calm like the pink me or

00:27:46,860 --> 00:27:50,730
Twitter find me on github grab me on

00:27:49,200 --> 00:27:52,530
somewhere on the conference of like

00:27:50,730 --> 00:27:54,960
contact me anywhere else I'll be more

00:27:52,530 --> 00:27:56,640
than happy to talk will like I will ask

00:27:54,960 --> 00:27:58,950
you some question about how you can get

00:27:56,640 --> 00:28:00,960
it running in your application and yeah

00:27:58,950 --> 00:28:03,780
and we like this I'd like how you know

00:28:00,960 --> 00:28:04,980
in introduce it and I will ask for

00:28:03,780 --> 00:28:06,420
feedback because the feedback is

00:28:04,980 --> 00:28:09,120
deafening that drives this is this kind

00:28:06,420 --> 00:28:11,100
of programs and one it's it is ready I

00:28:09,120 --> 00:28:13,320
think we will at least because I'm not

00:28:11,100 --> 00:28:16,350
sure how much of that part would be like

00:28:13,320 --> 00:28:18,120
completely open to public and for free

00:28:16,350 --> 00:28:22,560
but at least some part of that will be

00:28:18,120 --> 00:28:24,810
public as I can end my talks here but I

00:28:22,560 --> 00:28:26,700
really want to talk about the future so

00:28:24,810 --> 00:28:28,650
what what I what I'm currently working

00:28:26,700 --> 00:28:30,710
on in context body and what will be

00:28:28,650 --> 00:28:33,390
there because I know I want to get them

00:28:30,710 --> 00:28:36,180
what I showed you right now is not much

00:28:33,390 --> 00:28:38,100
of actually gathering the history I'm

00:28:36,180 --> 00:28:39,660
gathering the context and like knowing

00:28:38,100 --> 00:28:41,250
the code better than you do it's like

00:28:39,660 --> 00:28:43,770
smart history and this is like probably

00:28:41,250 --> 00:28:45,750
the the things that starts everything's

00:28:43,770 --> 00:28:47,970
like I was thinking how I can make the

00:28:45,750 --> 00:28:49,800
the roasting of the history better and

00:28:47,970 --> 00:28:51,720
this probably should like ends up like

00:28:49,800 --> 00:28:54,390
right now so I mean 20 means of the talk

00:28:51,720 --> 00:28:55,049
not much for a Scala days but then I was

00:28:54,390 --> 00:28:56,580
thinking how I

00:28:55,049 --> 00:28:58,710
achieve that and try to implement some

00:28:56,580 --> 00:29:00,509
stuff and Regulus I can do more I can

00:28:58,710 --> 00:29:02,700
gather more knowledge because the things

00:29:00,509 --> 00:29:04,980
I needed for the history are really good

00:29:02,700 --> 00:29:09,929
or I hope they would be really good to

00:29:04,980 --> 00:29:11,580
actually learn more about the code you

00:29:09,929 --> 00:29:14,029
might ask why I picked this finger as a

00:29:11,580 --> 00:29:16,799
background this is a much Picchu in Peru

00:29:14,029 --> 00:29:19,019
old abandoned in class it is why I'd put

00:29:16,799 --> 00:29:22,049
this us there the background for future

00:29:19,019 --> 00:29:23,639
it should be like a past when I was

00:29:22,049 --> 00:29:27,210
there they I was told really

00:29:23,639 --> 00:29:30,179
heartwarming story how the schools in

00:29:27,210 --> 00:29:32,309
Inca times works so basically if you

00:29:30,179 --> 00:29:34,919
were like if you were building this this

00:29:32,309 --> 00:29:36,359
kind of how houses they were like really

00:29:34,919 --> 00:29:38,700
amazing because they were able to

00:29:36,359 --> 00:29:40,139
withstand the earthquakes so mad throws

00:29:38,700 --> 00:29:41,519
multiple earthquakes around the Machu

00:29:40,139 --> 00:29:43,529
Picchu and most of the buildings

00:29:41,519 --> 00:29:45,480
everything there is still intact when

00:29:43,529 --> 00:29:47,489
the Spaniards came they're like pretty

00:29:45,480 --> 00:29:48,659
much every church was rebuilt every 100

00:29:47,489 --> 00:29:51,570
years because of the earthquake and

00:29:48,659 --> 00:29:52,710
those buildings can last like and the

00:29:51,570 --> 00:29:54,869
funny thing was like if there is a

00:29:52,710 --> 00:29:56,309
building built in like on top of the

00:29:54,869 --> 00:29:58,230
some kind of old in Kabul you think it

00:29:56,309 --> 00:29:59,999
was fine because of the scale how do

00:29:58,230 --> 00:30:02,190
people get actually putting the stones

00:29:59,999 --> 00:30:04,590
with pretty much primitive tools but

00:30:02,190 --> 00:30:06,359
coming back to the history I was told if

00:30:04,590 --> 00:30:08,070
you are building this kind of thing for

00:30:06,359 --> 00:30:09,629
like let's say 20 years and you are

00:30:08,070 --> 00:30:11,009
really good at it you just stop even

00:30:09,629 --> 00:30:12,960
though you can do bit more and you start

00:30:11,009 --> 00:30:15,809
like teaching others so there was a

00:30:12,960 --> 00:30:17,970
school so like he has people or trials

00:30:15,809 --> 00:30:20,519
go there and they learn how to build

00:30:17,970 --> 00:30:22,559
stuff and I was thinking yeah this is

00:30:20,519 --> 00:30:23,820
really nice and I realized we were doing

00:30:22,559 --> 00:30:25,830
the same of the projects there was like

00:30:23,820 --> 00:30:28,619
old senior developer that actually is

00:30:25,830 --> 00:30:30,269
there forever and there is a new guy

00:30:28,619 --> 00:30:31,679
coming in and he sits with him and

00:30:30,269 --> 00:30:33,659
showing everything about the project

00:30:31,679 --> 00:30:36,989
about the technologies designs and

00:30:33,659 --> 00:30:38,909
whatever this is really nice but there

00:30:36,989 --> 00:30:41,369
is a problem like the Spaniard came sent

00:30:38,909 --> 00:30:44,820
like in 20 20 years removed there was no

00:30:41,369 --> 00:30:46,379
Inca Empire there was many many many

00:30:44,820 --> 00:30:48,149
many reasons which we have because the

00:30:46,379 --> 00:30:50,249
way is happened so fast but one of those

00:30:48,149 --> 00:30:51,809
was like Incas does not have a writing

00:30:50,249 --> 00:30:55,590
so they don't have any kind of mechanism

00:30:51,809 --> 00:30:57,929
to preserve knowledge and you might and

00:30:55,590 --> 00:30:59,159
I want to claim that that this is the

00:30:57,929 --> 00:31:01,830
same thing for us for software

00:30:59,159 --> 00:31:03,210
developers we've got ok you might say we

00:31:01,830 --> 00:31:04,859
could writing we could develop Google

00:31:03,210 --> 00:31:08,559
documentation like we got to tweak

00:31:04,859 --> 00:31:10,870
you've everything yeah we got that but

00:31:08,559 --> 00:31:12,850
be honest do you seen a project with

00:31:10,870 --> 00:31:18,129
good like developer information like

00:31:12,850 --> 00:31:20,499
that is really up to date and I do not

00:31:18,129 --> 00:31:21,549
so if you got one like lucky for you but

00:31:20,499 --> 00:31:23,350
in most project there is the

00:31:21,549 --> 00:31:25,389
documentation for users there is

00:31:23,350 --> 00:31:27,129
documentation how to start your like to

00:31:25,389 --> 00:31:29,350
to setup environment there is

00:31:27,129 --> 00:31:30,850
documentation how to deploy it or use it

00:31:29,350 --> 00:31:34,120
or if this library there is a good

00:31:30,850 --> 00:31:36,309
documentation about you know the IPS but

00:31:34,120 --> 00:31:39,009
the actual if the knowledge that this is

00:31:36,309 --> 00:31:40,269
this test is a key or do not touch this

00:31:39,009 --> 00:31:41,980
piece of code because like is

00:31:40,269 --> 00:31:44,259
complicated and if you introduce

00:31:41,980 --> 00:31:46,830
anything is may break all of that that

00:31:44,259 --> 00:31:51,610
code there is no documentation for that

00:31:46,830 --> 00:31:54,429
and this is the place where I think we

00:31:51,610 --> 00:31:56,169
can introduce the context body because

00:31:54,429 --> 00:32:00,730
there's because of the division of the

00:31:56,169 --> 00:32:03,279
this one single developer there was that

00:32:00,730 --> 00:32:05,019
we got a bus factor or it would really

00:32:03,279 --> 00:32:06,490
nasty the conference factor so how many

00:32:05,019 --> 00:32:07,960
developers has to go to the conference

00:32:06,490 --> 00:32:09,610
so the project is not able to be

00:32:07,960 --> 00:32:13,840
developed anymore because there is no

00:32:09,610 --> 00:32:15,490
one to ask and or even like similar

00:32:13,840 --> 00:32:19,809
things so we just starting your disease

00:32:15,490 --> 00:32:21,580
your first day in the project and you

00:32:19,809 --> 00:32:23,590
got a problem and you might ask your

00:32:21,580 --> 00:32:26,289
friend and you probably know that but

00:32:23,590 --> 00:32:28,389
you are to have to sketch or he's

00:32:26,289 --> 00:32:30,759
working remotely on he's away and you

00:32:28,389 --> 00:32:34,059
are basically stopped for for for for

00:32:30,759 --> 00:32:36,039
for the development and I'm right now

00:32:34,059 --> 00:32:37,779
I'm helping with like I'm walking my

00:32:36,039 --> 00:32:39,369
project but I'm also like helping to

00:32:37,779 --> 00:32:41,230
organize and like the end work with

00:32:39,369 --> 00:32:43,899
others like for example stuff for

00:32:41,230 --> 00:32:45,639
coupling and there there there there is

00:32:43,899 --> 00:32:47,409
not many developers that works in

00:32:45,639 --> 00:32:48,850
tooling so they could likely release

00:32:47,409 --> 00:32:51,909
early problems in the beginning because

00:32:48,850 --> 00:32:54,159
no one told them and they are afraid to

00:32:51,909 --> 00:32:55,690
ask me or I'm like in different room so

00:32:54,159 --> 00:32:57,129
there is not easy for them to ask me so

00:32:55,690 --> 00:32:58,749
I have to come multiple times them

00:32:57,129 --> 00:33:01,330
asking about their problems asking

00:32:58,749 --> 00:33:03,429
questions and then sometimes in like

00:33:01,330 --> 00:33:04,629
after five or ten questions and one

00:33:03,429 --> 00:33:06,610
suggestion from me they are able to

00:33:04,629 --> 00:33:08,220
solve the problem in 20 minutes just

00:33:06,610 --> 00:33:13,659
because I solve this problem like 20

00:33:08,220 --> 00:33:15,940
year ago somewhere else so we've got the

00:33:13,659 --> 00:33:18,490
data and I figure out that in the in the

00:33:15,940 --> 00:33:20,619
history that maybe we can use that data

00:33:18,490 --> 00:33:22,429
to actually maybe not provide like F to

00:33:20,619 --> 00:33:25,970
ask every to answer every question

00:33:22,429 --> 00:33:27,740
the developer of my half but just you

00:33:25,970 --> 00:33:30,590
know point you to the right person I'll

00:33:27,740 --> 00:33:31,999
punch you to the right thing so this is

00:33:30,590 --> 00:33:35,269
nuts

00:33:31,999 --> 00:33:37,279
it is kind of working right now but it's

00:33:35,269 --> 00:33:39,499
not we're ready to be shipped to anyone

00:33:37,279 --> 00:33:47,090
for beta testing but I want to show you

00:33:39,499 --> 00:33:48,529
that it's possible so let me go to 2d

00:33:47,090 --> 00:33:50,210
play playground where it's like enough

00:33:48,529 --> 00:33:51,860
nothing else so I'm a new developer and

00:33:50,210 --> 00:33:55,940
somebody told me let's build something

00:33:51,860 --> 00:34:04,309
around time so I'm doing well now equals

00:33:55,940 --> 00:34:07,419
new date okay I'm just going to import

00:34:04,309 --> 00:34:11,359
and completely you know rookie in there

00:34:07,419 --> 00:34:11,750
and let me introduce like some question

00:34:11,359 --> 00:34:13,520
marks

00:34:11,750 --> 00:34:15,649
someone told me like if there is a

00:34:13,520 --> 00:34:19,099
something like constructor if I do not

00:34:15,649 --> 00:34:22,639
know the art the correct arguments now

00:34:19,099 --> 00:34:24,619
not you then I can just fit like this

00:34:22,639 --> 00:34:25,940
question marks okay I'm really good to

00:34:24,619 --> 00:34:29,319
go I can tell you that so I want to

00:34:25,940 --> 00:34:32,839
compile the stuff yay

00:34:29,319 --> 00:34:36,799
it fails taillights to me what's going

00:34:32,839 --> 00:34:38,599
on here like yeah it should work like

00:34:36,799 --> 00:34:40,520
there is a reason why doesn't work and

00:34:38,599 --> 00:34:42,379
there are not that complicated wrote

00:34:40,520 --> 00:34:45,970
something freaky to demonstrate and now

00:34:42,379 --> 00:34:45,970
I can use interaction from context buddy

00:34:46,540 --> 00:34:51,710
show in context and here there is a

00:34:49,220 --> 00:34:53,030
context and now context buddy suggested

00:34:51,710 --> 00:34:54,710
me that there's like two developers I

00:34:53,030 --> 00:34:57,950
can talk to oh it is me

00:34:54,710 --> 00:34:59,420
yeah no that date time is overloaded so

00:34:57,950 --> 00:35:02,359
we don't you can use tactic question

00:34:59,420 --> 00:35:05,390
mark here that easy so one of the and

00:35:02,359 --> 00:35:07,160
this developers is one like this the

00:35:05,390 --> 00:35:09,020
simplest idea the simplest thing I can

00:35:07,160 --> 00:35:11,450
do because I've got get commit outros

00:35:09,020 --> 00:35:13,420
and so forth so on but I'm working on

00:35:11,450 --> 00:35:16,010
right now to provide you more stuff like

00:35:13,420 --> 00:35:17,270
if you are working at piece of data time

00:35:16,010 --> 00:35:18,829
and okay there is someone that

00:35:17,270 --> 00:35:20,809
introduced the code but for example

00:35:18,829 --> 00:35:24,260
there is a guy that do a code review and

00:35:20,809 --> 00:35:25,760
comments a lot on I know he knows a lot

00:35:24,260 --> 00:35:28,040
about act even though he do not write

00:35:25,760 --> 00:35:30,859
any code única so he do is he doing a

00:35:28,040 --> 00:35:32,270
lot of code reviews and and comments on

00:35:30,859 --> 00:35:33,950
so probably he's also good candidate to

00:35:32,270 --> 00:35:35,660
ask about acha

00:35:33,950 --> 00:35:38,630
with that information you can also tell

00:35:35,660 --> 00:35:40,339
in the round so you can imagine that

00:35:38,630 --> 00:35:41,720
instead of like marking the code I can

00:35:40,339 --> 00:35:44,059
see the change and I can use that

00:35:41,720 --> 00:35:46,430
information I can suggest reviewers or

00:35:44,059 --> 00:35:48,230
pick the reviewers so someone is

00:35:46,430 --> 00:35:49,970
actually maybe better to review the code

00:35:48,230 --> 00:35:53,230
or like some random guy that I pick I

00:35:49,970 --> 00:35:55,549
don't know how big your project are but

00:35:53,230 --> 00:35:57,770
in some cases like the case that I'm

00:35:55,549 --> 00:35:59,119
working with it's really hard to find

00:35:57,770 --> 00:36:02,329
the owner of that piece of the code

00:35:59,119 --> 00:36:06,740
because that is like the ownership is

00:36:02,329 --> 00:36:10,819
very deeply within the code history so

00:36:06,740 --> 00:36:13,400
let me come back to my slides but here

00:36:10,819 --> 00:36:15,440
I've also trying to find the way to you

00:36:13,400 --> 00:36:18,950
know provide help of that tests and

00:36:15,440 --> 00:36:21,650
stuff like that so something felt I want

00:36:18,950 --> 00:36:25,849
to know a compilation errors and it

00:36:21,650 --> 00:36:27,319
wasn't working like from black positive

00:36:25,849 --> 00:36:29,690
part of the code the code that is good

00:36:27,319 --> 00:36:31,369
I've got the information it was in the

00:36:29,690 --> 00:36:34,309
program but whenever I stumble across

00:36:31,369 --> 00:36:38,000
the error is like no information is

00:36:34,309 --> 00:36:40,250
there so is my model wrong to introduce

00:36:38,000 --> 00:36:41,839
the to explain why this is not wrong but

00:36:40,250 --> 00:36:43,819
I'm looking at it wrongly

00:36:41,839 --> 00:36:45,710
I need to tell you another story I'm

00:36:43,819 --> 00:36:50,329
sorry I forgot about that let me come

00:36:45,710 --> 00:36:52,309
back to this later on so this is the b25

00:36:50,329 --> 00:36:54,109
mutual if I'm not mistaken from this the

00:36:52,309 --> 00:36:55,670
picture taken like summer-like 40s

00:36:54,109 --> 00:36:57,770
during the Second World War and you can

00:36:55,670 --> 00:36:59,450
see how much how battled it is it

00:36:57,770 --> 00:37:01,549
doesn't land it was like destroyed on

00:36:59,450 --> 00:37:03,440
the ground but actually bombers that

00:37:01,549 --> 00:37:04,970
come back from the mission was really

00:37:03,440 --> 00:37:06,859
battered but the biggest one was the

00:37:04,970 --> 00:37:08,869
members that do not come back and like

00:37:06,859 --> 00:37:10,579
this was not the biggest one but eight

00:37:08,869 --> 00:37:13,910
people were there and this works super

00:37:10,579 --> 00:37:16,190
expensive so the US Air Force trying to

00:37:13,910 --> 00:37:18,319
find a way how to minimal minimalize the

00:37:16,190 --> 00:37:22,460
losses so they try to introduce the

00:37:18,319 --> 00:37:23,990
armor into that place but planes but you

00:37:22,460 --> 00:37:25,220
cannot armor the four plane because of

00:37:23,990 --> 00:37:27,410
like way too heavy or there are more

00:37:25,220 --> 00:37:29,839
black to think too thin and quite enough

00:37:27,410 --> 00:37:32,059
no non protection so they need to try to

00:37:29,839 --> 00:37:33,859
find a ways when they can actually apply

00:37:32,059 --> 00:37:35,990
the summer for like the most effective

00:37:33,859 --> 00:37:37,400
in the most effective way so they build

00:37:35,990 --> 00:37:38,809
up actually this is a quite amazing

00:37:37,400 --> 00:37:40,670
story they build a team of

00:37:38,809 --> 00:37:42,890
mathematicians to actually solve this

00:37:40,670 --> 00:37:44,420
problem and we all be data a spark

00:37:42,890 --> 00:37:47,120
anything like that they have to solve it

00:37:44,420 --> 00:37:50,570
so they create this kind of chart

00:37:47,120 --> 00:37:52,880
where the like the crews of the the air

00:37:50,570 --> 00:37:54,710
for of the air Effy's and so on needs to

00:37:52,880 --> 00:37:56,810
mark like whenever the pick the plane

00:37:54,710 --> 00:37:58,550
compacts it they need to mark where the

00:37:56,810 --> 00:38:01,010
it was hit where is like some kind of

00:37:58,550 --> 00:38:03,170
damage and like after the data was

00:38:01,010 --> 00:38:05,240
gathered this is this was their results

00:38:03,170 --> 00:38:06,770
so they show them to the general so okay

00:38:05,240 --> 00:38:08,780
we got that we want to work on that a

00:38:06,770 --> 00:38:10,880
little bit more the genera so that's

00:38:08,780 --> 00:38:12,650
like yes you just solved the problem so

00:38:10,880 --> 00:38:14,480
we need to put the thermal whenever the

00:38:12,650 --> 00:38:16,730
the damages and with the planes will

00:38:14,480 --> 00:38:19,400
come back more like in better shape and

00:38:16,730 --> 00:38:21,710
they almost like send it to the this

00:38:19,400 --> 00:38:25,220
kind of order to the factories but

00:38:21,710 --> 00:38:27,500
luckily the the the guy that runs these

00:38:25,220 --> 00:38:29,720
things like learn about that thing and

00:38:27,500 --> 00:38:31,690
like come to them screaming like no no

00:38:29,720 --> 00:38:33,620
this is the completely wrong thing

00:38:31,690 --> 00:38:36,440
because you are looking on the data

00:38:33,620 --> 00:38:38,360
wrong the fact that there is a damage

00:38:36,440 --> 00:38:39,890
here and the plane come back so it is

00:38:38,360 --> 00:38:42,380
not the problem the pain can come back

00:38:39,890 --> 00:38:44,510
with the damage with that part if you

00:38:42,380 --> 00:38:46,220
look at the screens like the depth at

00:38:44,510 --> 00:38:48,830
the place where the pilot sits over here

00:38:46,220 --> 00:38:51,200
or there was there there's the fuel

00:38:48,830 --> 00:38:52,640
tanks or the entries there is no damage

00:38:51,200 --> 00:38:57,800
here it means whenever the plane is

00:38:52,640 --> 00:38:59,450
heated there it's going down and this is

00:38:57,800 --> 00:39:01,070
this is a known phenomenon this like

00:38:59,450 --> 00:39:04,130
logical problem called the survivorship

00:39:01,070 --> 00:39:05,780
bias and this applies to our code when

00:39:04,130 --> 00:39:07,790
you want to learn from the history this

00:39:05,780 --> 00:39:10,340
is like the few last commits from the I

00:39:07,790 --> 00:39:12,350
think Scala and as you can see there's

00:39:10,340 --> 00:39:13,850
like green ticks on the right which

00:39:12,350 --> 00:39:15,890
means the code that is within your

00:39:13,850 --> 00:39:17,150
history is the code that is good the

00:39:15,890 --> 00:39:19,760
code that survives the test and

00:39:17,150 --> 00:39:22,760
everything so we cannot learn much from

00:39:19,760 --> 00:39:24,610
that code because it's good and if you

00:39:22,760 --> 00:39:28,340
got a mistake we have to learn from this

00:39:24,610 --> 00:39:31,720
really nasty part of the application

00:39:28,340 --> 00:39:35,600
that you that the demise might missed

00:39:31,720 --> 00:39:36,770
like the code fails to compile this is

00:39:35,600 --> 00:39:38,900
the place where the learning actually

00:39:36,770 --> 00:39:40,700
take place and this is the place where

00:39:38,900 --> 00:39:43,010
context buddy will provide more and more

00:39:40,700 --> 00:39:44,740
information I really want to show you

00:39:43,010 --> 00:39:49,370
that but it's not ready yet

00:39:44,740 --> 00:39:51,920
so basically to learn you actually go to

00:39:49,370 --> 00:39:55,700
learn from that kind of proof that this

00:39:51,920 --> 00:39:57,290
all over the place and I should stop

00:39:55,700 --> 00:40:00,210
here but I want to really mention one

00:39:57,290 --> 00:40:01,470
thing I come back to these two gifts

00:40:00,210 --> 00:40:05,510
because this is like quite a new

00:40:01,470 --> 00:40:07,920
development that we got yeah this is the

00:40:05,510 --> 00:40:09,089
gifts that analyzed the code based on

00:40:07,920 --> 00:40:11,910
this is the based on the data from

00:40:09,089 --> 00:40:13,849
context body the we analyzing the code

00:40:11,910 --> 00:40:15,150
data graphs there will be a talk

00:40:13,849 --> 00:40:17,490
tomorrow

00:40:15,150 --> 00:40:19,619
Krisha that sit here would be do that on

00:40:17,490 --> 00:40:21,359
the hour stand as a micro talk but

00:40:19,619 --> 00:40:23,490
basically this is the one of the place

00:40:21,359 --> 00:40:25,589
where contacts bodies like almost all

00:40:23,490 --> 00:40:27,150
also can help because as you can see

00:40:25,589 --> 00:40:29,640
whenever you click on the ID de Graaff

00:40:27,150 --> 00:40:31,920
built so it basically this the graph of

00:40:29,640 --> 00:40:34,760
what you do what you read in them up and

00:40:31,920 --> 00:40:38,430
instead and it can be used like twice

00:40:34,760 --> 00:40:40,380
because it can be used as like you can

00:40:38,430 --> 00:40:43,170
build the query for context body so you

00:40:40,380 --> 00:40:45,000
can go go there and you will actually

00:40:43,170 --> 00:40:46,650
analyse a big piece of code and now you

00:40:45,000 --> 00:40:48,030
can ask context body please tell me who

00:40:46,650 --> 00:40:52,109
can help me with that piece because this

00:40:48,030 --> 00:40:54,660
seems to be a problematic and yeah and

00:40:52,109 --> 00:40:56,309
the other way context body can also fix

00:40:54,660 --> 00:40:58,770
a lot of information and make this graph

00:40:56,309 --> 00:41:00,030
even better like providing Comet I hope

00:40:58,770 --> 00:41:04,470
it will stop at good point but

00:41:00,030 --> 00:41:05,670
terrorists will be easier to see there

00:41:04,470 --> 00:41:07,950
is the information from context body

00:41:05,670 --> 00:41:09,960
about Commons and with precise history

00:41:07,950 --> 00:41:13,140
and some knowledge about the code this

00:41:09,960 --> 00:41:15,869
will be even better so I don't know if

00:41:13,140 --> 00:41:18,500
you've got any questions if you do is

00:41:15,869 --> 00:41:18,500
the perfect time

00:41:22,240 --> 00:41:32,320
I looks interesting

00:41:28,170 --> 00:41:34,570
just one question regarding the you need

00:41:32,320 --> 00:41:37,690
to have the committee story let's send

00:41:34,570 --> 00:41:39,520
that file let's say someone Shane copied

00:41:37,690 --> 00:41:42,400
the file or change the file location it

00:41:39,520 --> 00:41:44,109
was not detected as a move would it be

00:41:42,400 --> 00:41:46,869
possible to also navigate on that

00:41:44,109 --> 00:41:49,270
history or this is the first thing I

00:41:46,869 --> 00:41:51,160
plan to implement after I come back from

00:41:49,270 --> 00:41:53,400
this presentation okay because it was in

00:41:51,160 --> 00:41:56,410
my mind for a long time and this is like

00:41:53,400 --> 00:41:58,270
whenever I'm like you know explaining

00:41:56,410 --> 00:42:00,820
this idea to anyone this is the first

00:41:58,270 --> 00:42:03,760
question I was getting so yeah I wanted

00:42:00,820 --> 00:42:06,160
that also under case that it is not

00:42:03,760 --> 00:42:07,630
really help helping us with much is the

00:42:06,160 --> 00:42:09,339
way when you got the big file and you

00:42:07,630 --> 00:42:11,230
extract the piece of that file into add

00:42:09,339 --> 00:42:12,730
the other you really want because there

00:42:11,230 --> 00:42:14,619
is no way that the rename can pick that

00:42:12,730 --> 00:42:18,040
because the differ is too big but you

00:42:14,619 --> 00:42:21,730
know that is a with it's hard to do on

00:42:18,040 --> 00:42:24,130
basic only based based on the the

00:42:21,730 --> 00:42:24,820
history from the from the get like a

00:42:24,130 --> 00:42:26,380
stacked file

00:42:24,820 --> 00:42:28,320
but with the information about types and

00:42:26,380 --> 00:42:31,680
everything it should be way way easier

00:42:28,320 --> 00:42:31,680
okay cool

00:42:34,210 --> 00:42:40,480
yeah really interesting talk good stuff

00:42:37,260 --> 00:42:42,339
after after the last story about this

00:42:40,480 --> 00:42:46,510
bomber plane yeah you mentioned that

00:42:42,339 --> 00:42:48,640
having a comet in history that for

00:42:46,510 --> 00:42:51,460
example doesn't compile actually give

00:42:48,640 --> 00:42:52,750
quite a bit of information right my

00:42:51,460 --> 00:42:54,790
point is like you should not have a

00:42:52,750 --> 00:42:56,680
comet that failure to compile in your

00:42:54,790 --> 00:42:58,330
gig history yeah but you should learn

00:42:56,680 --> 00:43:00,099
for that comet so whenever you do that

00:42:58,330 --> 00:43:01,839
like they change locally and you play

00:43:00,099 --> 00:43:03,849
with that or do a feature punch and code

00:43:01,839 --> 00:43:05,859
doesn't compile this is the place where

00:43:03,849 --> 00:43:07,150
we should learn from does the context

00:43:05,859 --> 00:43:09,730
buddy can learn from those kind of

00:43:07,150 --> 00:43:10,210
things I mean the engine the engine is

00:43:09,730 --> 00:43:11,500
ready

00:43:10,210 --> 00:43:12,970
everything is ready it doesn't to

00:43:11,500 --> 00:43:15,369
implement that and this is and this is

00:43:12,970 --> 00:43:17,410
tricky because I need to plug into

00:43:15,369 --> 00:43:18,760
different because you know there's no

00:43:17,410 --> 00:43:22,240
single place where the compilation

00:43:18,760 --> 00:43:24,690
happens or the tests are run so does

00:43:22,240 --> 00:43:29,619
that mean like in the red in the regular

00:43:24,690 --> 00:43:31,210
github kind of work situations when when

00:43:29,619 --> 00:43:33,150
you have PRS and when you are amending

00:43:31,210 --> 00:43:36,010
your PRS with different comments and

00:43:33,150 --> 00:43:37,930
sometimes different projects differently

00:43:36,010 --> 00:43:39,250
you at the end before merging you

00:43:37,930 --> 00:43:41,380
actually squashed all the comments and

00:43:39,250 --> 00:43:42,910
all of the history is lost so it does

00:43:41,380 --> 00:43:44,920
that mean that for context but it

00:43:42,910 --> 00:43:47,590
evolved you shouldn't actually squash

00:43:44,920 --> 00:43:49,360
the comments you should stick with the

00:43:47,590 --> 00:43:52,180
best part of context buddy is it's not

00:43:49,360 --> 00:43:54,100
either not tied to Scala because it's

00:43:52,180 --> 00:43:56,470
quite abstract it's also not tied to get

00:43:54,100 --> 00:43:58,990
so I'm using hashes but caches can be

00:43:56,470 --> 00:44:00,700
anything and I do not have like Comelec

00:43:58,990 --> 00:44:02,620
change for each common in the history I

00:44:00,700 --> 00:44:04,150
can work with ranges or even I can do

00:44:02,620 --> 00:44:06,790
some mappings between the comments and

00:44:04,150 --> 00:44:08,590
and that and everything else so or even

00:44:06,790 --> 00:44:10,630
more I can provide like alternative way

00:44:08,590 --> 00:44:13,900
of how the project was strange because I

00:44:10,630 --> 00:44:15,640
can click that as well so I was thinking

00:44:13,900 --> 00:44:16,960
about that because the other thing I

00:44:15,640 --> 00:44:18,820
really want to support is not only like

00:44:16,960 --> 00:44:20,200
I'm doing on the CI when you got tests

00:44:18,820 --> 00:44:22,810
and everything but then you develop

00:44:20,200 --> 00:44:24,700
develop locally and your test fails and

00:44:22,810 --> 00:44:26,980
you fix that and you forgot about this

00:44:24,700 --> 00:44:28,630
thing there's like a strange error that

00:44:26,980 --> 00:44:30,280
comes from somewhere and completely

00:44:28,630 --> 00:44:33,010
forgot that and you get the same error

00:44:30,280 --> 00:44:34,480
like a year late after that and you

00:44:33,010 --> 00:44:36,430
don't want to like you know go into

00:44:34,480 --> 00:44:38,290
debug it but you want to ask a tool was

00:44:36,430 --> 00:44:40,210
it fixed before yes you did it like a

00:44:38,290 --> 00:44:48,730
year ago this is the change oh yeah it

00:44:40,210 --> 00:44:53,860
is good that's the goal so context by

00:44:48,730 --> 00:44:57,610
the show the list of persons who have a

00:44:53,860 --> 00:45:00,040
context of some code and what about the

00:44:57,610 --> 00:45:01,960
persons who made for example from out in

00:45:00,040 --> 00:45:04,780
using scale format will they have

00:45:01,960 --> 00:45:07,720
context of all the files in the project

00:45:04,780 --> 00:45:10,540
I mean depends how far you want to go

00:45:07,720 --> 00:45:12,190
back with your data together because in

00:45:10,540 --> 00:45:13,540
order to get something more than just

00:45:12,190 --> 00:45:15,160
talk as you have to compile the code and

00:45:13,540 --> 00:45:17,590
this is heavy context but is quite quick

00:45:15,160 --> 00:45:19,750
to work but I'm using called semantics

00:45:17,590 --> 00:45:22,540
DB to get most data out of the code and

00:45:19,750 --> 00:45:25,600
some more let's say compiler plugin

00:45:22,540 --> 00:45:26,860
integrations but yeah you need to

00:45:25,600 --> 00:45:29,050
compile the code this is the most the

00:45:26,860 --> 00:45:30,730
heavier heavy with part so you get as

00:45:29,050 --> 00:45:32,830
much data as much data as you want to

00:45:30,730 --> 00:45:34,030
pay for those but if you develop project

00:45:32,830 --> 00:45:35,740
from this on when you start context

00:45:34,030 --> 00:45:39,600
buddy you will get it for free because

00:45:35,740 --> 00:45:39,600
you are compiling the code all the time

00:45:43,150 --> 00:45:53,599
there is we okay okay so I think we yes

00:45:50,869 --> 00:45:54,529
thank you everyone and for coming and if

00:45:53,599 --> 00:45:56,990
you've got more questions

00:45:54,529 --> 00:46:00,470
grab me summer or come to our stand it's

00:45:56,990 --> 00:46:07,540
near the exit and thank you so much

00:46:00,470 --> 00:46:07,540

YouTube URL: https://www.youtube.com/watch?v=xh4KvlO1qkQ


