Title: Pacific Northwest Scala 2013 Network I O for a More Civilized Age: The New Akka I O
Publication date: 2020-01-27
Playlist: Pacific Northwest Scala 2013
Description: 
	by Brendan McAdams

Until recently, users seeking a way of doing Scalable I/O had two choices: NIO, which provides an esoteric interface requiring serious expertise and concurrency control, or Netty - which provides a rich and powerful layer above NIO. The downsides to Netty however include an extremely idiomatic Java API, and a series of separated threads and thread pools left out of the control of the user.

There is, however, hope for the Scala user who abhors free range threading and wants a more Scala-sane interface to a network. Working with the Spray (http://spray.io), the Akka team (http://Akka.io | http://letitcrash.com ) has recently introduced a new, lightweight Non-blockimg network I/O interface built around Akka's core Actors.

This talk will explore the benefits and power of this new Akka I/O layer, including a brief exploration of its benefits over the "Old" Akka IO. The presenter will introduce the ByteString & it's powerful manipulation tools for network traffic, the Pipeline system for composed protocol decoding, and much more. Further insights will include a demonstration of Akka I/O's built in system for Backpressure â€” allowing true handling & awareness of an overloaded network buffer, and compositing of Futures on top of the Actor API to emulate a more functional interface.

Help us caption & translate this video!

http://amara.org/v/FG6y/
Captions: 
	                              so I want to talk today money on Brenda                               Gavin's by the way for those about that                               mean I work for the professional                               services through the type tape so I                               should spend a lot of my day rather than                               writing code helping other people write                               code which is an interesting way to                               change your perspective especially with                               Scala I've spent a lot of time over the                                last year learning a lot about how much                                what I code by watching other people                                right babe they should write prior to                                that prior to December when I giant I'd                                save i spent about two and a half years                                writing long maybe drivers in scotland                                inshallah and I learned a lot about what                                was wrong with the way we do network a                                great example be there's this huge push                                in the scala community to the java                                community let's go to ace your good as                                web frameworks and yet ninety percent of                                the people who are doing that or using                                database drivers that are blocking and                                they don't understand why it's bad that                                they're walking because the threads that                                can be reused in an asynchronous                                framework can't be reused there's                                something walking out of the covers as                                I've been doing a lot of work over the                                last two years playing with an idea that                                I think I'm finally getting done of                                writing along going to be driver that's                                purely centers and it recently moved it                                over this new on Io there so I want to                                talk about the new on Io which I look at                                is Network I owe for more civilized age                                but also a little bit about what the                                other options were doing ior so you                                understand why we're going with point                                going so start with is the question is                                the new lakay OU because that new                                moniker meaning something not just its                                new new but there was another io layer                                in august been there since two point oh                                some of the heritage of                                has been carried over the new one but we                                have dedicated the old ap is the biggest                                thing is that with aqua to tube which                                was released in July there was a new I                                oh they're introduced that was actually                                a collaboration spray to them and this                                is huge because sprays performance is                                just off the charts and they have done a                                lot of work internally to write law                                network code and by the library from                                very high performance networking that's                                now been introduced into acha that can                                be used to write your own stuff and if                                you want there's a link bot on my slide                                to a post later the two the spray                                benchmarks to get an idea of just how                                fast they are especially compared to                                other web frameworks for the gbn and off                                of JVM the performance is really                                impressive for those who don't know                                sprays actually be merged into op over                                the next few months and eventually                                become acha HTTP so there's sort of this                                continuous merger going all out of                                taking these great ideas from spraying                                reading them in the biggest thing is                                that it's a highly scale and pipeline                                based I oh it's integrated into the                                actresses and we will see what we mean                                by pipeline based i/o is to go through                                this so it's all about a couple of                                things here why non-blocking i/o least a                                quick refresher for those who are                                familiar or for those who aren't                                familiar about why we want non-blocking                                i/o how it works why is advantageous                                over other ways to do things how to                                represent network data in aa gai oh how                                we would build a quick TC equine in alki                                oh that's the basics of doing i/o with                                acha as well as using the pipe                                system so we can do things like very                                easily add as a celibate existing code                                base or add back pressure support and                                then finally a couple of closing                                thoughts on making these up those neat                                API is compostable so why not watch                                Aniyah this is roughly what a                                traditional blocking io model looks like                                where each of these circles is a thread                                it's attempting to get something from                                the network and in this case each thread                                is blocking which means that it's                                holding the colonel is there data yet is                                 there data yet is there data yet                                 repeated and it's blocking that threat                                 for being able to be used for anything                                 else in blocking of our building really                                 context which on the colonel there's all                                 we do in context which has put another                                 thread on that's just pulling and                                 blocking that cpu from any other usage                                 and it looks like this lots of each                                 walls all blocking up the colonel and                                 these thing is each thread blocks of an                                 mo kaya it means one thread can complete                                 one task and it's hiding no more and                                 this makes paul ryan very sad so                                 non-blocking i/o makes this kernel                                 polling a bit senior in this case these                                 boxes now represent text you can sue                                 soon as we move away from a thread per                                 task we can have a pool of threads                                 behind them in we should have multiple                                 tasks operating where they're like in                                 three threads and                                                      the bottom here we have a selector                                 thread who is actually checking for all                                 of these tasks whether there's network                                 data available and notifying and this is                                 a thread but it's much more efficient if                                 there's only one person blocking the                                 other benefit that we actually get here                                 is their tasks are decoupled from thread                                 which means that we might have one                                 thread processing three or four or five                                 things because when we get to the                                 equivalent of blocking we go to remove                                 that task off until the data comes back                                 and you process something else this is                                 how we can scale on a web application by                                 handling multiple users on one HTTP                                 connection because when we go out with a                                 database we can just switch off and do                                 something else so with the tools that                                 are out there nao was introduced in Java                                 one for the good things obviously before                                 this there was no non-blocking i/o on                                 the JDM it's fast and powerful and it                                 acts as the underpinnings for anything                                 else that does non-blocking i/o                                 M relies on and I hope it's the only way                                 to interface these non locking enter                                 things because there is coordination                                 that goes with the current to do things                                 like the polling on selectors needs                                 kernel modules for your operating system                                 that can do it so and I know is you're                                 under pigs the bad part is it's very                                 esoteric very low level doing things                                 like working with the selector threat                                 not only means you have to notify the                                 Selective thread that you're interested                                 in events like the socket and available                                 reader the socket is available to write                                 but after you get notify that event is                                 happen you have to make sure you                                 unregister or you'll keep getting                                 spammed with the same event there's a                                 lot of esoteric code that has happened                                 to draw an i/o which is one of the                                 reasons why a lot of people don't do bra                                 on I up the really big alternative in                                 the jvm world is Neddy there's also a                                 patch me Nina which not a lot of people                                 use but has a lot of similar goals and                                 similar limitations than any this is                                 really powerful it's got a lot of rich                                 api's it sits on top of an eye open it                                 makes it easy to work with we get                                 pipelines and other tools but the bad                                 part is the Java API it's really                                 tiresome building news with scott i did                                 a previous version of my AC a driver on                                 day and I've spent most of my time                                 writing code just make it easy to work                                 with these java api's and what comes                                 with that is a lot of mutability there's                                 a lot going on internally that's mutable                                 that doesn't fit in the way we want to                                 write our scholar cook and this also                                 comes with a lot of thread pools that                                 you can't manage if you're trying to                                 have five rain                                 control you're not going to get that one                                 day so we not happen to that that's an                                 it is a fine product but doesn't                                 necessarily fit in the way we want to do                                 things in AA co so when we move over to                                 acha hell we need to keep in mind                                 there's another data structure from Niol                                 often see which is the byte buffer                                 there's a really good link here to a                                 blog like                                                               how to do things with byte buffers down                                 to a fine grade level that's worth                                 reading if you're consider working with                                 raw or rays of bytes pretty much suck if                                 you've ever done that and I do a lot of                                 fine grain network management with rays                                 of light and this is especially for                                 larger than white operations a larger                                 than white operation means reading                                 multiple bites that represent a data                                 structure like an indoor string so by a                                 show of hands how many people here know                                 how to decode and n                                                 array I'm not surprised eric is the only                                 one rise to his hand and Tom is sort of                                 Ramses matter how about dogs those are                                 the harder and most importantly what                                 about if it's big endian versus little                                 endian this is complex to do they have                                 to read doubles I believe you have to                                 read part one order than another quarter                                 on order these are a sweet Eric and                                 painful and the lava java driver                                 actually does all this by hand and it                                 was really painful because they work                                 using either so the fact is that doing                                 these is non-trivial and it should be                                 but if ever gives you a bunch of simple                                 operations for doing things there's a                                 gap wanna get double etc and if you want                                 big endian versatility you can call                                 order and passin agencies a byte order                                 either little any or big endian and that                                 changes the way that                                 the reeds internists this next thing is                                 easier for you it's a really good step                                 on simplifying the way we do things on                                 the JVM now octa IO introduces an even                                 better way to do things that fits into                                 our scholar world known as rock iOS                                 quite straight this is this is because                                 mutable data structures are sort of the                                 curse of working with java api we will                                 open with them so white strength is a                                 beautiful structure that can have buy                                 offers or arrays of flights under it for                                 manipulating advocated it's really just                                 an index ii compliance there's no                                 bioware read or write operations                                 directly a light string instead we break                                 it out so if you want to read you get a                                 light it or either via the iterator call                                 and this gives locks like get double and                                 get long it's a moving view over your                                 data so you don't have to call indices                                 like you do with bytebuffer you simply                                 it moves as you do things like get low                                 and get double so it keeps going over                                 things and there's a bonus which is the                                 jaw line on white order has passed                                 implicitly on these calls you don't have                                 to change the order of your app so there                                 are places for example a long way to be                                 wire protocol where despite it being big                                 endian there are a couple of us are                                 little I mean there's a couple places                                 where it's actually coded in big enemies                                 you have to switch back and forth and it                                 actually helps to just be able to say go                                 read this in the end our if you want to                                 write we fit into the scholar collection                                 guidelines which is if you get an                                 instance of builder you say like string                                 got your builder and you get a byte                                 string builder with write operations                                 this is the converse invite iterative so                                 you have poked long looks stream of                                 short so let's create a hypothetical                                 protocol a very simple one um we're to                                 write a time protocol and incidentally                                 it's a little endian which makes things                                 easier my java by default works in big                                 endian because                                 historically mainly Indian processors                                 but Intel which is pretty much the                                 dominant processor at this point is all                                 little endian so we have a client and it                                 has a very simple thing the quiet                                 message is just a message types of short                                                                                                          forget time and then our server is going                                 to adolescent shut one which is set time                                 this includes a long to the unix                                 timestamp and a strength of the time                                 zone through encode and decode is very                                 quickly often that require select the                                 quiet protocol message we have electric                                 door here we just say foot short of zero                                 and that's it we've written our single                                 item own protocol and then result will                                 get us back to byte stream we can carry                                 on you pass them to the network or                                 whatever else we need I've also got a                                 case object here which extends a base                                 time message trade it represents when we                                 pass this message inside Iraq and you                                 want to say I'd like to get the time                                 we'll use this case object of our                                 internal protocol before it's encoded to                                 this fight now parsing the server reply                                 we get our data frame for the network                                 which is represented as a byte string we                                 asked for the iterator and then we can                                 say like get short which you implicitly                                 coals in the byte order we get along                                 from timestamp and we get string for the                                 time zone and then we have a companion                                 class that goes with this so we're                                 decoding things much easier it is sort                                 of a functional manner where it just                                 fits in doing or windows sliding open                                 now keep in mind as well bytestring is                                 actually a rope it can kind of energy                                 over multiple underlying arrays of                                 lights or like offers the downside of                                 course with ropes in this situation in                                 every locality your view they be spread                                 out across two or three or four gigs of                                 heat where your pieces of the road was                                 spread out all over the place which                                 could give you latency as you hop around                                 ram to find your data but extreme can                                 become active so compact alternative                                 x-ray with one memory continuous fire                                 able to make it much more efficient to                                 work but it's not a cheap operation                                 necessarily so you have to keep that in                                 mind if you're going to do it you better                                 mean that you need come back you'll                                 benefit and these compact will tell us                                 if the best friends in background so how                                 do we compose that were clients na kaya                                 biggest thing is do I owe provide the                                 manager from work it's the i/o errors                                 this means that rather than invoking                                 methods we're going to communicate with                                 the i/o manager of the message passing                                 just like we do with any other actor it                                 also means that our code has to be an                                 actor to do the communication so                                 generally you access the after four                                 individual protocol tcp community etc                                 via docking station signal tune called I                                 out so you say I oh and NASA tcp or UDP                                 and give you back the actor that's                                 centrally responsible for managing                                 protocol it's actually very easy to wire                                 your own protocol so if you didn't want                                 to read this in block code you could do                                 it scrape for example in                                          protocol called HTTP which actually                                 instead of you having to speak HTTP on                                 top of the TCP layer they do that free                                 maternal so this is a roughly simple TCP                                 coating without guy oh and I'm going to                                 move to highlight this code so you're                                 not all read it at once I've done it                                 open ports like I've imported iOS iOS                                 facade just because it's easier for me                                 to represent it then seeing it as I oh                                 so we have our TCP manager can be sent a                                 message called connects sorry the tcp on                                 occurs here I just instantiate io TCP                                 the TCP manager we sent it a connect                                 message which is filled into the TCP                                 protocol with the address we want to                                 deny that socket address and a list of                                 options that keep alive tcp no delay etc                                 which come from the Java sockets now in                                 our receive lumpur acha behavior we get                                 a command failed with type connect that                                 tells us that our network connection                                 fail in this case I'm responding by                                 shutting the after down and just saying                                 you know there's an error in the case                                 where we get connected back we can swap                                 our rocket behavior so it auto for those                                 not familiar with it you can change the                                 receive loop at runtime                                 that are handling things this way I want                                 you to know who's this block of code and                                 so we don't have the code wired up to                                 handle what would happen we're going                                 after you saw get by default we swap                                 over that when we're ready in this case                                 the sender that we got the message from                                 these are now created Africans managing                                 that connection specifically so we pass                                 him as a parameter with the connected                                 behavior set him up and ready to go or                                 here's your new socket to work with now                                 our connected behavior takes an argument                                 of an actor rep because that's our                                 remote after that handles this stuff and                                 it's a received loop again it's an actor                                 behavior that we simply changed over to                                 using the company so any message from                                 outside of after this isn't any you                                 whoever's got an instance of our after                                 internally said I want to get the time                                 for the remote server they send our get                                 time message in and we send the                                 connection instance of TCP occupant                                 that's a rattler to tell us the tcp                                 driver and you want to send it as byte                                 string the downside here is that we have                                 to do the encoding of the byte string                                 directly in this code you say you know                                 get get time doc you might string to use                                 that code we wrote earlier we will get                                 back at ecp dot event which contains a                                 byte stream representative here in data                                 and we can parse that back out to assets                                 I'll object and forward that on however                                 we fired up our fault eyes so we're                                 still dealing with your walk byte                                 strings at this level of encode there is                                 a better way to do it if we want to                                 separate through an arcing logic from                                 our network handler there are some                                 options for doing this via and this is                                 pipeline you're a better scenario boss                                 in the way                                 although kyo economy gossamer is not an                                 outward disagree simple is good simony                                 complexes better think about that you                                 have complexity made some you distracted                                 over it so when ours is the implication                                 a lot of our code is correlated and                                 potentially complex the wire protocol                                 decoding mixed with core logic makes a                                 little hard for us to reason what we're                                 doing so we want a decoupler wire                                 protocol we're addicts and so supportive                                 handle that pressure we can do these                                 without iOS pipeline which give us a way                                 to register of stages of encoding and                                 decoding nad complex network handling                                 downstream from her co-actor we can say                                 you know I want these things but I want                                 the separates separation of concerns                                 most of the changes happened once our                                 connection is established now this is                                 important invention you saw this already                                 from the last slide but commands go from                                 our code to the remote and and events                                 come from the remote to our code this is                                 consistent across lakay OU commands will                                 out and thence connect whether you're                                 writing a server or client now setting                                 up pipeline be a couple changes to my                                 connected block the first of which is                                 now it created instance of tcp pipeline                                 and or and what goes into this is you'll                                 notice there's two things here that are                                 mixed together with what Jason called                                 wooden jason called earlier he is                                 determined the chevron cannot i saw this                                 argument so this dull greater man                                 composes multiple stages together to                                 create a stages                                 let my network and these are now things                                 that feed for one of these to the next                                 when you put messages into them so we've                                 got instance of pipeline now we need to                                 create an actor of a tcp pipeline                                 handler which we can statue ated with                                 our new pipeline with our remote                                 connection and with a copy of ourselves                                 as well in a frog I have deployed with                                 deploy deploy local make sure that can't                                 be top on a remote p.m. accidentally                                 become are reviewing with the network                                 here we also set up a Deathwatch system                                 so we want to get notification about                                 pipeline androids permanent so now we're                                 not going to talk to our sender anymore                                 that raw TCP connection to send things                                 through the pipeline there's one other                                 thing that has to happen we can talk                                 directly to our pipeline hamburger                                 without doing this and messages going                                 out we get converted but if we don't                                 register our pipeline with our socket                                 messages coming in will get translated                                 using this pipeline we offloaded our                                 protocol into another piece of code so                                 we said the set to the connection                                 innocence of tcp register with that                                 pipeline that we created and we now                                 switch our context again we also have to                                 pass our pipeline in because there are                                 command and event objects on pipeline                                 that can speak in our message protocol                                 now that we need to still use the signal                                 the system that we want to send a                                 message out or that we're getting a                                 message back now we need up updater                                 enacted behaviors speak on the case boss                                 so this pipeline you'll see is actually                                 instances we call in it which other                                 winter                                 contest and then what's the command                                 message and what's what's the event                                 message at this level of codes they're                                 both instances of time message and our                                 get time code is now just saying Senate                                 connection pipeline doc you man we're                                 not converted to a white screen anymore                                 we're simply saying here's our event our                                 get time message and then we transcoded                                 downstream into a white string but                                 separated in this business logic code                                 and the same thing you were getting back                                 at set time we simply getting event or                                 pipeline event which contains a set find                                 instance that we don't have to cook so                                 our protocol handler I'm you look at                                 this very briefly because I don't want                                 to get lockout in this I am happy to go                                 through this tomorrow if people want                                 more in-depth look at how these things                                 work what we got here is is what's                                 called symmetric pipeline state that                                 means is that commands going out and                                 events going coming in or going to                                 translate it between the same types on                                 the left side we want thai messages and                                 on the left side we want our blood                                 streams and so if i can add pipe line                                 that says when you get a time message                                 converted to a light strain and when you                                 get a bike straight converting to a time                                 message so pipelines compose this is                                 where it gets interesting why do i add                                 as a social support to this protocol all                                 i have to do is buy with this chevron                                 operator say add another stage which is                                 the ssl/tls support and now                                 automatically when I                                 send a message out it gets written with                                 SSL and when a message comes in it gets                                 converted from ssl into raw bytes I                                 don't have to think about it or worry                                 about this is a huge step when you're                                 trying to go claims where you want                                 transparent SS all supportive it's a                                 table for example has auctioned                                 off support so i did i would wire into                                 my client very simply if you pops true                                 to ssl when you create the actor mix is                                 the ssl support peace and everything                                 else did my code is the Sables i want to                                 care about the ssl and this is all                                 handled enough high point transparently                                 now network back crush is an interesting                                 problem because it can cause a lot of                                 issues with people who don't understand                                 it and don't wire that into the network                                 object downstream of any client network                                 code there are all closed in your                                 carnival that are waiting to write                                 messages to the network they're not                                 anonymous if they get congested if                                 there's network congestion or for some                                 reason damage right now you be hit want                                 you get off for overflow you can get an                                 exception when writing to your local                                 network because the buffers happen to be                                 around us if your code isn't aware of                                 this concept of congestion anyway handle                                 it you can have your old client crash                                 because it's getting these networks ah                                 carers the apps are typically to stay                                 out of that pressure be aware with a                                 congestion and backed off for a while                                 when your buffers are full until they                                 clear out to write more data this is                                 actually provided with acha I oh there's                                 a premolar pipeline handler for that                                 pressure it makes it pretty easy to do                                 so we mix in a statue attribute stash of                                 the special actually become to the                                 actors that says I may want to get                                 message is off the mailbox but then hook                                 it into a cute it says I'm going to                                 handle them later think about it if I                                 haven't connected to the network yet                                 messages I get time I can't handle but                                 after messages coming in a queue that I                                 can pull on each other time so I can                                 stash that message and say I'll put that                                 on the network as soon as we connect so                                 stash enables the stash maker in                                 pipeline and now makes it back pressure                                 buffer we set our low threshold or high                                 threshold of maximum number of lights                                 that can go through and now it will get                                 signals from the back pressure buffer                                 when it's at a high watermark or too low                                 or high water mark means you need a                                 knock off for a while low-water mark                                 means you know you're not coughing so                                 are connected behavior we've added one                                 handler which is that pressure above or                                 high water broke reach and all we do we                                 get that is switch or activated to say                                 you're going to change how you respond                                 investments the only messenger on a                                 handle is going to do the low-water mark                                 and so where do we get any message other                                 the globe watermark and call stacks                                 which puts it into internal cute if you                                 later when we get a low-water mark reach                                 message we unsnaps all messages which                                 pops fit into that locks and the switch                                 back to our connected a here so                                 something we go a racial flexible client                                 that can handle back pressure without a                                 lot of coaches you can k internal actor                                 mechanism to switch our behavior and                                 we're sniffing beautiful which is                                 wonderful not changing a bar or                                 something else now a couple of closing                                 costs for proposal late guys who's not                                 all this stuff is easy                                 writing an API that's purely actor based                                 as long as you're walkin ask me one of                                 the things i have deal with for exam                                 mago client which is i don't necessarily                                 want to communicate with actors are one                                 interface that feels a little more                                 functional so no conclusion that a                                 couple with in sip                                                    there's actually promises what promises                                 are is that give you an object that                                 contains a future and you can create a                                 promise and then return the future                                 internet and with the promise API what                                 you can do is you can say completed you                                 call completed on the promise which                                 fills in the result for the future on                                 the other side so right there you've got                                 to overbuilding sort of a functional api                                 that hides the actors by simply setting                                 up futures that you complete when they                                 are available this is an easy way to                                 handle a lot of the issues because it's                                 asynchronous everything she talked it                                 out in terms of futures this is a pretty                                 good model for what I think of                                 dispatching where you have a half nap                                 internally we track request IDs most                                 protocols that are complex level request                                 I eat from the client to the server when                                 the server will respond but this is in                                 response to requests X and then you can                                 simply dispatching like completing the                                 promise with whatever you've got                                 now what do you do when you deal with                                 large offers of data great examples of                                 database cursor you get a whole bunch of                                 items that need to be handled as                                 iterator we've traditionally handle them                                 in Scala code or Java code the two                                 things that I've sort of come to think                                 are the right way to do this is what it                                 is they're very powerful very flexible                                 but they're potentially really hard for                                 users to comprehend they're not easy to                                 just jump into the other would be rather                                 screws and these are becoming popular                                 lately in particular I looking a lot of                                 Netflix                                 scala binding and I've been playing with                                 business surf my way to go forward is                                 with reactor streams they sort of look                                 like a stream you can register to say I                                 would subscribe and I want you to                                 envelope any when there's another item                                 avail so now tins of cursors we have to                                 offer up and call the server from war                                 can be very transparent and you can get                                 notified when they're in there or you                                 can notify the street is closed because                                 there's no more data these work really                                 well on computers really sick as a                                 translation of the RX stuff from so                                 these give you a lot of power here but a                                 much more friendly hair face because you                                 subscribe you say on subscribe events                                 here's my handler for what happens                                 there's another event here's what to do                                 when they're on here's what to do when                                 it's completed I've not going for a mini                                 push into your code as items become                                 available and including things that need                                 to close or there's an error in yo era                                 that is all that I have for today and                                 how you take questions people album and                                 the raka io is the director site for the                                 aqha project let it crash comic or                                 decommissioning and moving everything                                 tracks a blog but that's got a lot of                                 bath posts on r-ky other things that's                                 the octane block obviously typesafe                                 comics I take a lot of support training                                 consulting services so those are you                                 working to solve an additional help or                                 need training or anything else what we                                 do is where I run around doing all day                                 questions some of those attractions                                 pursue this custom program is there any                                 way of servicing that too just dealing                                 with messages between two active systems                                 I'm not sure off hand now one of the                                 things that happen is that we're moving                                 awkwardly or call from a                                             know that there's a way to do it right                                 now but I was suspected in the future                                 that would be something to tan because                                 it is important you've got to be able to                                 be aware your most certain can receive                                 now there is some buffering than happens                                 internally the author because because of                                 the way they lack of work notice blind                                 send a message to promote mailbox we                                 need to confront and has come in so                                 there is a level of acknowledgement                                 acknowledge the protocol is another way                                 of handling that pressure where you                                 acknowledge back to the sender that it's                                 been queued and then you can carry on so                                 there's some local back pressure that                                 happens internally children that aspect                                 or so in your serialization example                                 where you pc realized strings I would                                 just wondering there's a bunch of                                 different ways to represent strings on                                 the network why obviously I um just how                                 does a chi or deal with that have many                                 different mechanisms like for a                                 null-terminated versus like for your                                 noble Ohio auto is like a fermentation                                 which is just knew he had a strings so                                 the long wire protocol for example has                                 both utf-                                                               call see straight which null terminate                                 in which case you have to write your own                                 a location i have but implementation                                 somewhere doing that it's not too bad                                 you just have to pour                                 how hard it would be to Flint sort of                                 the start TLS concept where the thick                                 Madame's to is to that the client is                                 requesting a transition into it TLS                                 comes in clear text and writes widgets I                                 don't know Cisco was also no yes so they                                 have to us and I don't know how much                                 that differs from stark us but it should                                 breathe really just a very simple like                                 if you look at the symmetric pipeline                                 stuff it's very still one of that                                 symmetric by by saying with all its                                 implemented s so you can pretty easily                                 properly right a component that when it                                 receives a certain message instead of                                 passing it on start this is all for all                                 and finish                                 it don't actually know that's a good                                 question they don't think so that would                                 probably be the template to create I                                 will look into that I think y'all making                                 this easy especially the sample code I'm                                 still working on the hood with a self                                 medicate up repo this week worth of a                                 fully global project work with the                                 client service the like I to make a                                 complete but I probably creating that as                                 an activator the good model practice                                 we're rushing is everything to cover                                 this for now I don't know I mean I said                                 we could do it but I don't know that's                                 something a lot of people are doing from                                 the Hakkasan point where he's going to                                 play me and iOS support for this guy of                                 a memory offering and I me napping other                                 things they don't want how much demand                                 there is that I think that flies a lot                                 of this stuff obviously spray hasn't had                                 a need to offer the disc or anything                                 else met their protocol I'm very clearly                                 for now but you could you know a lot a                                 smart offer up the good deal with                                 writing a disc from aio used by buffers                                 and you can wrap the light offering like                                 simply use the apply method and give it                                 one or more like offers and you get a                                 leg up and scream back use your eyes I                                 think you're looking fine maybe which                                 but that goes our network rather than on                                 this welcome agreed upon stroke so I'm                                 not sure how they're doing that and i                                 love that translator along today lot i                                 should think it's smashing into accuse                                 it of the                                 I think it's not valid by default I have                                 to double check I need us on that little                                 saybrook look chiki chiki nice today who                                 is in a hinky yeah he said I                                 select article eg a very self-conscious                                 double check this so that give you the                                 right answer it's unbounded by default                                 you can change that though you probably                                 should is a lot of issues with using                                 stash is that it's not persistent so                                 even if you're using something like                                 events or strong resistance of your Aaka                                 actor crashes and we're stash will                                 disappear so it is to use sparing this                                 is a great example where confused                                 appropriate because you're bothering                                 messages and media or the network                                 they're not something that's going to be                                 queued up and snort discs they go away                                 though we replay from somewhere else                                 right well thank your chest                                 you
YouTube URL: https://www.youtube.com/watch?v=rTW9_p6Db_4


