Title: Using Actors for the Internet of (Lego) Trains - by Johan Janssen
Publication date: 2016-06-17
Playlist: Scala Days New York 2016
Description: 
	This talk was recorded at Scala Days New York, 2016. Follow along on Twitter @scaladays and on the website for more information http://scaladays.org/.

Abstract:
Normally, we use Java or Scala to build applications for large organizations running on servers. We wanted to find out if we could use the same languages and tools on IoT hardware. We also wanted to investigate whether or not (remote) actors could replace REST endpoints. The Lego trains are equipped with a Raspberry Pi, camera, wireless dongle, infrared transmitter, speaker, RFID reader, and battery pack. Next to that, we have automated switch tracks a Lego Ferris Wheel and camera's again with the help of Raspberry Pi's. We also built some lightning effects with LEDs controlled by Particle Photonâ€™s. To control the trains and other parts, we built a remote actor based application with Scala, Akka, Akka HTTP and AngularJS. We will show you when and how to use Akka HTTP and remote actors. We will also show the results of the performance tests we did to compare the two options. Next to that we will talk about our experiences and challenges and of course we will give a live demo!
Captions: 
	00:00:02,860 --> 00:00:08,740
and I stuff you all here after all the

00:00:06,230 --> 00:00:11,210
more difficult subjects of futures

00:00:08,740 --> 00:00:13,519
streaming and everything we know of a

00:00:11,210 --> 00:00:17,029
bit of a more simple subject a bit more

00:00:13,519 --> 00:00:20,090
fun probably as well wait a bit of Lego

00:00:17,029 --> 00:00:22,270
my name is eunsu I don't work for Lego

00:00:20,090 --> 00:00:24,619
myself I would have wanted to but

00:00:22,270 --> 00:00:26,570
luckily enough my company m-sport

00:00:24,619 --> 00:00:28,910
also gave me some time to play with Lego

00:00:26,570 --> 00:00:31,010
so that's not bad either

00:00:28,910 --> 00:00:37,339
my twitter handle in case you have any

00:00:31,010 --> 00:00:39,500
questions or want to contact me and of

00:00:37,339 --> 00:00:41,330
course if you liked the session please

00:00:39,500 --> 00:00:43,540
rate it if you don't like it complain to

00:00:41,330 --> 00:00:46,580
your neighbor

00:00:43,540 --> 00:00:48,940
so no Lego was harmed some raspberry

00:00:46,580 --> 00:00:51,339
pies died during the project but

00:00:48,940 --> 00:00:53,930
everybody has those lying around right

00:00:51,339 --> 00:00:54,920
first let me ask a question please raise

00:00:53,930 --> 00:00:58,460
your hand if you already have a

00:00:54,920 --> 00:01:00,430
raspberry pie keep your hand in the air

00:00:58,460 --> 00:01:04,820
if it's collecting dust somewhere

00:01:00,430 --> 00:01:06,110
okay quite some people how many people

00:01:04,820 --> 00:01:06,880
have played with Lego when they were

00:01:06,110 --> 00:01:09,979
younger

00:01:06,880 --> 00:01:11,600
okay okay so now you after this session

00:01:09,979 --> 00:01:13,700
you know what to do with your raspberry

00:01:11,600 --> 00:01:15,439
pie I won't ask you if you still play

00:01:13,700 --> 00:01:18,020
with Lego maybe some people feel

00:01:15,439 --> 00:01:20,030
embarrassed by it I play with Lego but I

00:01:18,020 --> 00:01:23,750
was forced by my employer of course I

00:01:20,030 --> 00:01:24,679
didn't want to do so these are a bit the

00:01:23,750 --> 00:01:26,060
content for today

00:01:24,679 --> 00:01:27,679
if you have any questions feel free to

00:01:26,060 --> 00:01:31,249
interrupt me and I'll try to answer the

00:01:27,679 --> 00:01:34,189
question immediately first why I mean we

00:01:31,249 --> 00:01:36,560
had a few different reasons to start

00:01:34,189 --> 00:01:38,299
with this project one of the reasons was

00:01:36,560 --> 00:01:40,189
we wanted to invest if we could use the

00:01:38,299 --> 00:01:43,969
same languages and tools and frameworks

00:01:40,189 --> 00:01:47,270
that we used to build enterprise

00:01:43,969 --> 00:01:50,359
software on big servers on IOT hardware

00:01:47,270 --> 00:01:52,189
like a raspberry pi so run Java run

00:01:50,359 --> 00:01:53,990
scholar on a Raspberry Pi with all the

00:01:52,189 --> 00:01:55,460
frameworks around it we wants to test if

00:01:53,990 --> 00:01:57,619
to have resources of the raspberry pi

00:01:55,460 --> 00:01:59,179
we're enough for that and next to that

00:01:57,619 --> 00:02:01,219
we of course we just wanted to do

00:01:59,179 --> 00:02:02,689
something fun try our new stuff and I

00:02:01,219 --> 00:02:04,280
mean you can write hello world but that

00:02:02,689 --> 00:02:05,960
gets boring after a while

00:02:04,280 --> 00:02:08,300
so we thought why not use a bit of

00:02:05,960 --> 00:02:10,039
hardware a play with hardware use that

00:02:08,300 --> 00:02:12,739
raspberry pi that was already collecting

00:02:10,039 --> 00:02:15,290
dust and I think it's a nice way to

00:02:12,739 --> 00:02:16,370
visualize stuff and to explain stuff to

00:02:15,290 --> 00:02:18,680
people that aren't there

00:02:16,370 --> 00:02:20,569
and a technical I mean if I try to

00:02:18,680 --> 00:02:23,540
explain to my wife wouldn't even driven

00:02:20,569 --> 00:02:26,629
architecture s and I say that message M

00:02:23,540 --> 00:02:27,830
is sent from system ax to system Y and

00:02:26,629 --> 00:02:31,400
probably she would have stopped

00:02:27,830 --> 00:02:33,019
listening at even driven and that's not

00:02:31,400 --> 00:02:34,840
her fault I mean we just speak some

00:02:33,019 --> 00:02:37,640
alien dialect that nobody else

00:02:34,840 --> 00:02:39,860
understands but if we explain it in

00:02:37,640 --> 00:02:43,280
another way and we say ok I send a

00:02:39,860 --> 00:02:45,110
message to my train were in the message

00:02:43,280 --> 00:02:47,569
I say which file I want to play which

00:02:45,110 --> 00:02:49,540
music file I want to play and then the

00:02:47,569 --> 00:02:52,880
train will play that song that's

00:02:49,540 --> 00:02:54,650
understandable for probably everyone so

00:02:52,880 --> 00:02:57,019
it makes it easier also to explain to

00:02:54,650 --> 00:02:59,030
get what programming is all about and it

00:02:57,019 --> 00:03:01,160
can be a lot of fun but beware I mean

00:02:59,030 --> 00:03:04,220
once you get started your room quickly

00:03:01,160 --> 00:03:06,049
ends up like this or in the end my

00:03:04,220 --> 00:03:08,959
entire room was filled with a couple of

00:03:06,049 --> 00:03:11,209
these setups that's fun

00:03:08,959 --> 00:03:12,739
and and the nice thing is it doesn't

00:03:11,209 --> 00:03:14,810
have to be expensive to get started I

00:03:12,739 --> 00:03:16,970
mean I just understood that most of you

00:03:14,810 --> 00:03:19,430
already have a Raspberry Pi so then you

00:03:16,970 --> 00:03:21,709
only have to spend like 25 bucks to get

00:03:19,430 --> 00:03:24,260
like a Wi-Fi dongle a battery pack an

00:03:21,709 --> 00:03:28,100
infrared transmitter later on we'll see

00:03:24,260 --> 00:03:29,959
how we use those items but you can go

00:03:28,100 --> 00:03:32,239
further and keep on adding stuff to it

00:03:29,959 --> 00:03:34,420
so this one had to write it as a speaker

00:03:32,239 --> 00:03:37,190
because you need train sounds of course

00:03:34,420 --> 00:03:40,099
it has a camera so I have a live feed of

00:03:37,190 --> 00:03:41,870
the train running on the track so when

00:03:40,099 --> 00:03:43,910
I'm at work of course only during lunch

00:03:41,870 --> 00:03:47,079
breaks on my mobile phone I can see

00:03:43,910 --> 00:03:51,410
where the train is running so if my wife

00:03:47,079 --> 00:03:53,690
tries to mess with it I can see it and

00:03:51,410 --> 00:03:57,019
underneath it you can see it a bit here

00:03:53,690 --> 00:03:59,290
there is an rfid reader so I can

00:03:57,019 --> 00:04:02,120
determine the position on the track so

00:03:59,290 --> 00:04:03,889
you can keep on adding stuff to it

00:04:02,120 --> 00:04:06,530
that's the nice thing of the Raspberry

00:04:03,889 --> 00:04:10,730
Pi it's you have lots of possibilities

00:04:06,530 --> 00:04:12,349
there I mean when we began we began with

00:04:10,730 --> 00:04:15,470
a simple Raspberry Pi I think it was the

00:04:12,349 --> 00:04:17,840
B+ that was available done but B+ is

00:04:15,470 --> 00:04:19,220
quite big to put in a Lego train so in

00:04:17,840 --> 00:04:22,669
the end we ended up with a Raspberry Pi

00:04:19,220 --> 00:04:25,210
A+ which isn't really quick but it's

00:04:22,669 --> 00:04:28,900
quick enough to run Java or Scala on it

00:04:25,210 --> 00:04:31,419
then the most difficult part is a memory

00:04:28,900 --> 00:04:33,220
when we run all the applications on it I

00:04:31,419 --> 00:04:36,370
sometimes notice that the memory was

00:04:33,220 --> 00:04:40,590
getting a bit low but if you would use

00:04:36,370 --> 00:04:43,030
newer models or Raspberry Pi 2 models

00:04:40,590 --> 00:04:45,250
then there is more than enough hardware

00:04:43,030 --> 00:04:48,310
but the problem as they as you can see

00:04:45,250 --> 00:04:51,130
here they consume a lot more power and

00:04:48,310 --> 00:04:52,810
we have a battery pack so if we consume

00:04:51,130 --> 00:04:54,160
less power we can run longer with the

00:04:52,810 --> 00:05:00,160
trains and of course that's what you

00:04:54,160 --> 00:05:02,710
want architecture wise we started with

00:05:00,160 --> 00:05:04,210
like an ancient technology I find it

00:05:02,710 --> 00:05:08,770
difficult to mention it here but we use

00:05:04,210 --> 00:05:11,979
Java so we started with an application

00:05:08,770 --> 00:05:14,979
with an angular front-end LTCC stands

00:05:11,979 --> 00:05:17,680
for Lego train Control Center really

00:05:14,979 --> 00:05:19,150
innovative name of course we had a Java

00:05:17,680 --> 00:05:22,659
back-end that was running on my laptop

00:05:19,150 --> 00:05:23,889
as well and that connected to device

00:05:22,659 --> 00:05:26,020
control which was running on the

00:05:23,889 --> 00:05:28,210
Raspberry Pi on the trains or on the

00:05:26,020 --> 00:05:30,250
ferris wheels we will see later and we

00:05:28,210 --> 00:05:32,979
had a switch control which controls the

00:05:30,250 --> 00:05:36,220
switches communication went with rest as

00:05:32,979 --> 00:05:38,050
you can see here and underneath we used

00:05:36,220 --> 00:05:40,930
some stand up some libraries that were

00:05:38,050 --> 00:05:43,900
already available so instead of writing

00:05:40,930 --> 00:05:45,699
our own Java components to access the

00:05:43,900 --> 00:05:48,130
hardware we use some stuff which is

00:05:45,699 --> 00:05:50,050
written in C or in Python and just a

00:05:48,130 --> 00:05:51,969
little bit to our needs and then use

00:05:50,050 --> 00:05:54,699
Java as the integration layer more or

00:05:51,969 --> 00:05:56,680
less and that worked perfectly fine but

00:05:54,699 --> 00:05:58,719
after a while we did some Scala NACA

00:05:56,680 --> 00:06:00,729
courses and we were quite excited with

00:05:58,719 --> 00:06:02,199
it but we wanted to have a bit of a use

00:06:00,729 --> 00:06:04,120
case to play around with it so we

00:06:02,199 --> 00:06:06,699
decided ok just throw away all the Java

00:06:04,120 --> 00:06:09,400
stuff and build it again in in Scala and

00:06:06,699 --> 00:06:12,219
akka so now we still have a rest

00:06:09,400 --> 00:06:14,590
interface of course for angular I mean

00:06:12,219 --> 00:06:16,509
you cannot access our components

00:06:14,590 --> 00:06:18,370
directly from angular so you need some

00:06:16,509 --> 00:06:19,900
kind of a rest interface and here we

00:06:18,370 --> 00:06:22,479
have a rest interface because the airf

00:06:19,900 --> 00:06:25,210
ID components they call to a rest

00:06:22,479 --> 00:06:28,389
interface but between the Raspberry Pi

00:06:25,210 --> 00:06:30,610
and the laptop in my case there

00:06:28,389 --> 00:06:32,169
everything is run with remote actors so

00:06:30,610 --> 00:06:36,430
the remote actors they talk to each

00:06:32,169 --> 00:06:38,020
other and then it looks like this in the

00:06:36,430 --> 00:06:39,020
beginning we did everything Wireless

00:06:38,020 --> 00:06:41,180
which worked

00:06:39,020 --> 00:06:43,039
we find at home until we did it at a

00:06:41,180 --> 00:06:44,750
conference and it was quite shaky

00:06:43,039 --> 00:06:47,810
because you have lots of other Wi-Fi

00:06:44,750 --> 00:06:49,759
points running around so we decided to

00:06:47,810 --> 00:06:51,770
put everything that was possible on a

00:06:49,759 --> 00:06:53,300
cable except for the trains of course

00:06:51,770 --> 00:06:57,139
because it looks quite silly if you have

00:06:53,300 --> 00:06:59,690
a cable running after your train and it

00:06:57,139 --> 00:07:02,270
all runs with the router that's that's

00:06:59,690 --> 00:07:04,280
running here so with the router we

00:07:02,270 --> 00:07:06,169
connected to the wireless adapters that

00:07:04,280 --> 00:07:08,659
are in the in the trains or in the

00:07:06,169 --> 00:07:10,069
raspberry PI's and the raspberry PI's as

00:07:08,659 --> 00:07:12,110
an infrared transmitter that sends

00:07:10,069 --> 00:07:15,440
signals to the infrared receiver from

00:07:12,110 --> 00:07:16,880
Lego so that's quite a nice way that way

00:07:15,440 --> 00:07:19,099
we didn't have to fiddle with the

00:07:16,880 --> 00:07:22,580
engines or break open some Lego

00:07:19,099 --> 00:07:24,590
components because then the Lego fans

00:07:22,580 --> 00:07:27,319
will hate you quite hard if you break

00:07:24,590 --> 00:07:30,880
with Lego or blue Lego or they don't

00:07:27,319 --> 00:07:34,900
like that so I try to not mess with them

00:07:30,880 --> 00:07:38,539
if you have it standard it I mean

00:07:34,900 --> 00:07:41,000
probably if you're as old as I am you've

00:07:38,539 --> 00:07:43,639
had the oval Lego trains which were

00:07:41,000 --> 00:07:45,860
controlled by direct power not so many

00:07:43,639 --> 00:07:47,060
batteries as they use now nowadays they

00:07:45,860 --> 00:07:50,000
have a remote control with some

00:07:47,060 --> 00:07:53,690
batteries inside it there is a battery

00:07:50,000 --> 00:07:55,789
pack inside it so this one this is the

00:07:53,690 --> 00:07:57,860
same in the train and then we have some

00:07:55,789 --> 00:07:59,509
engines at the bottom these are a bit

00:07:57,860 --> 00:08:02,930
different than the ones in the train the

00:07:59,509 --> 00:08:05,509
train is directly driving the wheels of

00:08:02,930 --> 00:08:08,120
the Train and at the back we have the

00:08:05,509 --> 00:08:13,279
infrared receiver so what we can do then

00:08:08,120 --> 00:08:17,090
is we can easily move around if

00:08:13,279 --> 00:08:19,250
everything works yeah so this is the

00:08:17,090 --> 00:08:21,740
same as the train when we first got it

00:08:19,250 --> 00:08:24,560
more or less and that works quite cool

00:08:21,740 --> 00:08:26,900
until we have a bit of a longer track

00:08:24,560 --> 00:08:29,000
for instance when I did it in my living

00:08:26,900 --> 00:08:31,430
room and drove the train to my kitchen

00:08:29,000 --> 00:08:34,820
and it's just an apartment not a big

00:08:31,430 --> 00:08:36,860
villa or something like that when I

00:08:34,820 --> 00:08:39,500
reached the kitchen and wanted to stop

00:08:36,860 --> 00:08:41,300
the train I was already the infrared

00:08:39,500 --> 00:08:43,789
wasn't working anymore and my train just

00:08:41,300 --> 00:08:46,459
collapsed into the kitchen which is fun

00:08:43,789 --> 00:08:49,250
now and so now and then but it takes

00:08:46,459 --> 00:08:51,589
some time to build it up again so this

00:08:49,250 --> 00:08:52,370
solution makes sure that you can add

00:08:51,589 --> 00:08:54,200
just

00:08:52,370 --> 00:08:55,940
wherever you have Wi-Fi you can just

00:08:54,200 --> 00:08:58,730
connect the trains and send signals to

00:08:55,940 --> 00:09:00,920
it and the other cool thing is here you

00:08:58,730 --> 00:09:03,770
only can have a few channels so you can

00:09:00,920 --> 00:09:05,870
only control a few trains with the Wi-Fi

00:09:03,770 --> 00:09:08,090
setup you can virtually control an

00:09:05,870 --> 00:09:09,940
unlimited number of trains so that's

00:09:08,090 --> 00:09:13,250
what you want right

00:09:09,940 --> 00:09:15,080
and it looks really simple this is the

00:09:13,250 --> 00:09:18,260
basics that you need it's an infrared

00:09:15,080 --> 00:09:21,110
transmitter really cheap and a Wi-Fi

00:09:18,260 --> 00:09:23,120
adapter connected to a Raspberry Pi A+

00:09:21,110 --> 00:09:25,880
model in that way you can already get

00:09:23,120 --> 00:09:28,940
started we can do some sound where we

00:09:25,880 --> 00:09:32,990
just use MPEG want to trade the Linux

00:09:28,940 --> 00:09:35,090
library to play sounds we've got RFID so

00:09:32,990 --> 00:09:38,630
we lay a few of these which are RFID

00:09:35,090 --> 00:09:42,260
tags around on the track and each of the

00:09:38,630 --> 00:09:44,270
tags corresponds to a location on the

00:09:42,260 --> 00:09:47,060
track more or less so here I think it's

00:09:44,270 --> 00:09:50,440
number 2 corresponds to the cow and that

00:09:47,060 --> 00:09:53,690
way we can determine where the train is

00:09:50,440 --> 00:09:55,690
of course also one live camera feed to

00:09:53,690 --> 00:09:58,370
see if your cat is in the way or

00:09:55,690 --> 00:10:02,270
whatever that was actually quite

00:09:58,370 --> 00:10:04,970
difficult camera feeds to get them and a

00:10:02,270 --> 00:10:08,150
good quality available on multiple

00:10:04,970 --> 00:10:11,180
platforms and without lots of delay is a

00:10:08,150 --> 00:10:13,190
difficult thing most of the times you

00:10:11,180 --> 00:10:15,440
either have some proprietary solution

00:10:13,190 --> 00:10:17,330
which only works with VLC or you have a

00:10:15,440 --> 00:10:18,860
delay of like five seconds and five

00:10:17,330 --> 00:10:20,630
seconds is way too long because then I

00:10:18,860 --> 00:10:25,160
cannot control my train properly when

00:10:20,630 --> 00:10:27,110
I'm at work so I kept looking for

00:10:25,160 --> 00:10:29,480
solution and then luckily I found this

00:10:27,110 --> 00:10:31,400
one our P I can control if you ever do

00:10:29,480 --> 00:10:34,250
anything with your dusty Raspberry Pi

00:10:31,400 --> 00:10:36,830
with a camera look at this library it's

00:10:34,250 --> 00:10:39,080
it's really nice what they do is they

00:10:36,830 --> 00:10:41,120
don't transmit video they just transmit

00:10:39,080 --> 00:10:43,700
pictures and just refresh pictures

00:10:41,120 --> 00:10:46,430
really quickly you won't notice it if I

00:10:43,700 --> 00:10:48,800
wouldn't tell you but it works a lot

00:10:46,430 --> 00:10:50,300
better and then you can get it's a

00:10:48,800 --> 00:10:55,660
little delay what you have but it's

00:10:50,300 --> 00:10:58,070
quite working well next to that we also

00:10:55,660 --> 00:10:59,960
automated track switches to make sure we

00:10:58,070 --> 00:11:01,940
when we have multiple tracks we could

00:10:59,960 --> 00:11:03,410
switch the trains I didn't brought them

00:11:01,940 --> 00:11:04,760
because it's a bit much to bring

00:11:03,410 --> 00:11:07,399
everything

00:11:04,760 --> 00:11:10,279
on a plane and customs will not like

00:11:07,399 --> 00:11:13,310
that as much but here there is just some

00:11:10,279 --> 00:11:14,750
servos inside and a special sofa board

00:11:13,310 --> 00:11:17,019
for the Raspberry Pi so that we can

00:11:14,750 --> 00:11:20,540
control up to sixteen servers at a time

00:11:17,019 --> 00:11:22,130
we managed to make some paper clips

00:11:20,540 --> 00:11:23,899
exactly the right length

00:11:22,130 --> 00:11:26,260
I think these four paper clips are the

00:11:23,899 --> 00:11:28,430
most expensive ones in the world because

00:11:26,260 --> 00:11:30,949
with three colleagues we spend an

00:11:28,430 --> 00:11:32,449
afternoon making these if you make them

00:11:30,949 --> 00:11:34,010
a bit too long it doesn't work if you

00:11:32,449 --> 00:11:36,410
make them a bit too short doesn't work

00:11:34,010 --> 00:11:40,519
either so yeah was a bit frustrating

00:11:36,410 --> 00:11:42,529
afternoon but if it works it's cool and

00:11:40,519 --> 00:11:44,660
then I mean trains are cool but I mean I

00:11:42,529 --> 00:11:48,380
saw the ferris wheel most cool man let's

00:11:44,660 --> 00:11:50,240
automate this one it's even bigger but

00:11:48,380 --> 00:11:52,250
none yeah man how do you automate it and

00:11:50,240 --> 00:11:54,769
actually it turn out it was rather easy

00:11:52,250 --> 00:11:57,769
I see a bit of the picture on the right

00:11:54,769 --> 00:11:59,510
is falling away but what you cannot see

00:11:57,769 --> 00:12:03,040
here is that the same infrared receiver

00:11:59,510 --> 00:12:05,660
as Wally has on its back so this one

00:12:03,040 --> 00:12:07,579
it's also connected to the ferris wheel

00:12:05,660 --> 00:12:10,610
with more or less the same engine as

00:12:07,579 --> 00:12:12,920
Wally has so actually I could just use

00:12:10,610 --> 00:12:15,170
the same code I was using to drive the

00:12:12,920 --> 00:12:18,290
trains to control the ferris wheel so

00:12:15,170 --> 00:12:19,790
that was rather quickly set up except

00:12:18,290 --> 00:12:21,980
for spending like a day to build the

00:12:19,790 --> 00:12:26,690
ferris wheel but that's fun right I mean

00:12:21,980 --> 00:12:29,000
work after that we are okay what can we

00:12:26,690 --> 00:12:32,720
do more and of course every IOT project

00:12:29,000 --> 00:12:34,190
has to have something with LEDs so i

00:12:32,720 --> 00:12:37,399
looked around and found these nice

00:12:34,190 --> 00:12:41,540
things these new pixel rings so you can

00:12:37,399 --> 00:12:45,019
buy them at various sizes and a LED

00:12:41,540 --> 00:12:47,000
strip which you can see at the front but

00:12:45,019 --> 00:12:48,709
they use a Raspberry Pi wedid it feels a

00:12:47,000 --> 00:12:50,839
bit like overkill so I looked at a bit

00:12:48,709 --> 00:12:54,380
of different hardware and I found this

00:12:50,839 --> 00:12:55,970
particle photos and you cannot run Scala

00:12:54,380 --> 00:12:57,800
on it which is a bit unfortunately

00:12:55,970 --> 00:12:59,389
because they're a bit limited for

00:12:57,800 --> 00:13:01,430
resources but if you want to do

00:12:59,389 --> 00:13:03,500
something with IOT I can really advise

00:13:01,430 --> 00:13:04,970
you to look into it the cool thing of

00:13:03,500 --> 00:13:08,120
these devices is that there is a Wi-Fi

00:13:04,970 --> 00:13:10,579
chip on board they only cost like 25

00:13:08,120 --> 00:13:12,890
bucks and if you power them up you just

00:13:10,579 --> 00:13:15,140
connect with your mobile device to it

00:13:12,890 --> 00:13:17,569
and you enter your credentials of your

00:13:15,140 --> 00:13:18,140
router and directly the photon will

00:13:17,569 --> 00:13:21,350
connect

00:13:18,140 --> 00:13:22,910
to the particle cloud and the particle

00:13:21,350 --> 00:13:25,010
cloud and offers a solution where you

00:13:22,910 --> 00:13:28,070
can just program in the clouds and then

00:13:25,010 --> 00:13:29,570
you can say okay this is my photon flash

00:13:28,070 --> 00:13:31,850
this photon and then the code will be

00:13:29,570 --> 00:13:33,980
flashed on the photon you can then send

00:13:31,850 --> 00:13:36,200
rest commands from your laptop to the

00:13:33,980 --> 00:13:40,700
clouds to the photons so that's really

00:13:36,200 --> 00:13:42,440
nicely integrated with the cloud for

00:13:40,700 --> 00:13:45,260
conferences it's a bit difficult because

00:13:42,440 --> 00:13:47,630
Wi-Fi is often shaky so in the end we

00:13:45,260 --> 00:13:49,910
just made a local cloud on my laptop so

00:13:47,630 --> 00:13:52,100
that we were independent on the cloud

00:13:49,910 --> 00:13:53,990
they were offering themselves I heard

00:13:52,100 --> 00:13:55,550
from colleagues that nowadays they even

00:13:53,990 --> 00:13:58,370
have special firmware which makes it

00:13:55,550 --> 00:14:00,560
really easy to set up like local photons

00:13:58,370 --> 00:14:03,260
that don't need the cloud with it's a

00:14:00,560 --> 00:14:05,750
nice way of working a bit with these

00:14:03,260 --> 00:14:07,310
kinds of hardware actually it's the

00:14:05,750 --> 00:14:11,120
programming is the same as for an

00:14:07,310 --> 00:14:13,790
Arduino so it's it's quickly to get up

00:14:11,120 --> 00:14:18,860
and running okay but you're of course

00:14:13,790 --> 00:14:22,700
are waiting for the demo to fill so

00:14:18,860 --> 00:14:24,620
let's see I mean all other speakers

00:14:22,700 --> 00:14:27,110
always say like our demos are easy they

00:14:24,620 --> 00:14:28,850
always go well so we thought let's add

00:14:27,110 --> 00:14:31,910
some extra stuff to it and see if it

00:14:28,850 --> 00:14:33,740
still works so here we're just running

00:14:31,910 --> 00:14:35,330
in manual mode so I can just control the

00:14:33,740 --> 00:14:38,240
trains and they will move up and forward

00:14:35,330 --> 00:14:41,290
around the track and not really well of

00:14:38,240 --> 00:14:41,290
course something has to fill

00:14:50,899 --> 00:15:03,930
stuck on the truck okay ah good point so

00:15:02,699 --> 00:15:06,870
what you see is the trains are running

00:15:03,930 --> 00:15:08,940
and at the bottom here you can see where

00:15:06,870 --> 00:15:11,190
the blue train is so now it says it's at

00:15:08,940 --> 00:15:14,250
the car I know it says it's at the

00:15:11,190 --> 00:15:16,230
bicycle so quite simple it works as long

00:15:14,250 --> 00:15:19,410
as the Train isn't moving too fast and

00:15:16,230 --> 00:15:21,240
and the RFID reader isn't too far away I

00:15:19,410 --> 00:15:23,010
can see the blue train is having some

00:15:21,240 --> 00:15:29,160
issues again so I'll stop him for a

00:15:23,010 --> 00:15:38,490
minute and also of course it should now

00:15:29,160 --> 00:15:40,620
display some songs oh yeah it also works

00:15:38,490 --> 00:15:42,209
if you have people wanting to try to

00:15:40,620 --> 00:15:49,800
break into your home you can scare them

00:15:42,209 --> 00:15:51,360
away with it or with the Train yeah it

00:15:49,800 --> 00:15:54,329
probably won't expect moving trains when

00:15:51,360 --> 00:15:56,160
I break into a home so these are the

00:15:54,329 --> 00:15:57,990
ones at the top are actually for the

00:15:56,160 --> 00:16:00,149
drag switches which I couldn't bring

00:15:57,990 --> 00:16:01,920
unfortunately and here you see the live

00:16:00,149 --> 00:16:04,139
camera feet of the camera that's laying

00:16:01,920 --> 00:16:06,690
here the camera feed of the Train we had

00:16:04,139 --> 00:16:08,940
to disable because it's sometimes a bit

00:16:06,690 --> 00:16:10,860
shaky and if it's it's a bit shaky than

00:16:08,940 --> 00:16:12,899
other commands that I sent to the Train

00:16:10,860 --> 00:16:14,910
are interrupted as well so it's a bit

00:16:12,899 --> 00:16:19,139
tricky to do it at conferences at home I

00:16:14,910 --> 00:16:23,839
promise it works but at conferences

00:16:19,139 --> 00:16:27,209
safety first and just make sure it works

00:16:23,839 --> 00:16:28,949
also sure I mean this is manual mode we

00:16:27,209 --> 00:16:31,500
can also do a bit of automation with it

00:16:28,949 --> 00:16:33,810
so we can say if the Blue Train is at

00:16:31,500 --> 00:16:37,920
the bicycle then the white train should

00:16:33,810 --> 00:16:40,949
move at speed - straight - yeah - three

00:16:37,920 --> 00:16:44,100
and every the Blue Train is at the cloud

00:16:40,949 --> 00:16:51,139
and we go with speed three I just answer

00:16:44,100 --> 00:16:53,750
a few crossing then the last one

00:16:51,139 --> 00:16:56,439
something else five

00:16:53,750 --> 00:16:56,439
car

00:17:00,790 --> 00:17:09,520
so now we started like oh he's already

00:17:04,180 --> 00:17:11,920
at the bicycle I think no the cow let's

00:17:09,520 --> 00:17:14,230
open it in a another window he's at the

00:17:11,920 --> 00:17:16,900
car and at the car we said it should

00:17:14,230 --> 00:17:18,310
move with speed v so that's working now

00:17:16,900 --> 00:17:20,880
let's see if he can get the blue train

00:17:18,310 --> 00:17:20,880
moving again

00:17:21,120 --> 00:17:25,800
not completely what I wanted but

00:17:35,030 --> 00:17:42,800
let's just do it like this Oh poke a

00:17:39,470 --> 00:17:45,270
handout or move the other direction so

00:17:42,800 --> 00:17:48,600
that's a bit of stuff we can fiddle

00:17:45,270 --> 00:17:50,190
around with and F correct at the LEDs

00:17:48,600 --> 00:17:54,150
you can see the speed the train is

00:17:50,190 --> 00:17:59,120
moving up not completely correct I see

00:17:54,150 --> 00:17:59,120
wait a second I didn't enable that yet

00:17:59,630 --> 00:18:05,130
so we can just say that if the speed

00:18:02,130 --> 00:18:09,660
changes by autopilot or by manual it

00:18:05,130 --> 00:18:11,580
should show that speed so now wait first

00:18:09,660 --> 00:18:14,640
reset the autopilot so now it should

00:18:11,580 --> 00:18:16,770
show speed for somewhere so you see for

00:18:14,640 --> 00:18:22,770
LEDs moving and if we put the other

00:18:16,770 --> 00:18:26,240
train on let's say negative speed yeah I

00:18:22,770 --> 00:18:26,240
did doesn't like me anymore

00:18:29,230 --> 00:18:38,860
oh it's a bit messed up sometimes you

00:18:36,010 --> 00:18:41,549
have to help it a bit so now you

00:18:38,860 --> 00:18:45,090
probably see some LEDs moving backwards

00:18:41,549 --> 00:18:47,440
somewhere all right

00:18:45,090 --> 00:18:48,910
cannot see anything there so that's a

00:18:47,440 --> 00:19:00,760
bit more difficult so that's more or

00:18:48,910 --> 00:19:03,100
less what what the trains can do so yeah

00:19:00,760 --> 00:19:04,179
we implement it with actors to make sure

00:19:03,100 --> 00:19:06,520
that everybody's on the same page

00:19:04,179 --> 00:19:09,910
probably lots of you have already used

00:19:06,520 --> 00:19:12,010
actors but it simply works like this we

00:19:09,910 --> 00:19:15,220
can say that we have a worker actor and

00:19:12,010 --> 00:19:17,320
when we receive something in this case

00:19:15,220 --> 00:19:21,070
if we receive anything we just print

00:19:17,320 --> 00:19:23,500
that anything and we can simply create a

00:19:21,070 --> 00:19:25,750
system and create and reference to the

00:19:23,500 --> 00:19:27,460
actor and we can just send it a string

00:19:25,750 --> 00:19:29,679
hello conference and it will print that

00:19:27,460 --> 00:19:32,919
string of course sending strings around

00:19:29,679 --> 00:19:35,919
isn't the best practice but this is just

00:19:32,919 --> 00:19:38,440
a simple example if we don't then want

00:19:35,919 --> 00:19:40,750
to do remote actors so local actors they

00:19:38,440 --> 00:19:43,690
just run within one JVM that's really

00:19:40,750 --> 00:19:46,299
cool one machine lots of local actors

00:19:43,690 --> 00:19:47,679
and just playing around but we wanted to

00:19:46,299 --> 00:19:49,480
have actors running on a Raspberry Pi

00:19:47,679 --> 00:19:51,850
and let them communicate with the actors

00:19:49,480 --> 00:19:54,820
running on my laptop so that's a bit

00:19:51,850 --> 00:19:56,890
further away but actually that's that's

00:19:54,820 --> 00:20:01,570
quite easy instead of what we say here

00:19:56,890 --> 00:20:03,610
we want an actor a worker actor we here

00:20:01,570 --> 00:20:05,470
say okay give us the actor that's that's

00:20:03,610 --> 00:20:08,590
on the remote system where we just

00:20:05,470 --> 00:20:10,360
specify the actor system IP address port

00:20:08,590 --> 00:20:11,679
and the actor that we want and of course

00:20:10,360 --> 00:20:13,210
you can abstract this and some

00:20:11,679 --> 00:20:16,720
configuration file or something like

00:20:13,210 --> 00:20:18,910
that this is just a simple example and

00:20:16,720 --> 00:20:20,919
to make remote actors work you just have

00:20:18,910 --> 00:20:25,120
to copy paste a bit of configuration and

00:20:20,919 --> 00:20:28,780
you're ready to go one thing to keep in

00:20:25,120 --> 00:20:30,400
mind at first for us it was a bit

00:20:28,780 --> 00:20:32,830
getting used to but when you send

00:20:30,400 --> 00:20:34,929
messages around from one actor on one

00:20:32,830 --> 00:20:39,190
JVM to another actor on another JVM of

00:20:34,929 --> 00:20:41,120
course both JVMs need to know that

00:20:39,190 --> 00:20:42,980
message

00:20:41,120 --> 00:20:44,660
friends as if we send a play message

00:20:42,980 --> 00:20:46,250
from the actor on the laptop to the

00:20:44,660 --> 00:20:48,770
music service actor on the Raspberry Pi

00:20:46,250 --> 00:20:50,870
and that message has to be known on both

00:20:48,770 --> 00:20:53,030
sides so we defined like a message

00:20:50,870 --> 00:20:56,300
protocol which is more or less a library

00:20:53,030 --> 00:20:59,930
we including on both sides of the of the

00:20:56,300 --> 00:21:01,790
applications it's as simple as this we

00:20:59,930 --> 00:21:04,190
can just send a play command or we can

00:21:01,790 --> 00:21:08,809
ask a list of all the files that are

00:21:04,190 --> 00:21:10,700
available to play and then we can simply

00:21:08,809 --> 00:21:13,160
use the package name and use that to

00:21:10,700 --> 00:21:15,350
communicate it so that's a bit at a new

00:21:13,160 --> 00:21:17,270
way of communication we used we started

00:21:15,350 --> 00:21:19,429
with rest and then started using this

00:21:17,270 --> 00:21:22,220
one and we really liked it and we had

00:21:19,429 --> 00:21:23,840
the idea it was faster but we didn't

00:21:22,220 --> 00:21:26,030
measure it on the on the trains because

00:21:23,840 --> 00:21:30,950
it's a bit difficult with network and

00:21:26,030 --> 00:21:33,260
stuff like that but yeah I mean I can

00:21:30,950 --> 00:21:34,760
say it's nicer but you I don't have blue

00:21:33,260 --> 00:21:37,910
eyes so it's difficult to believe me on

00:21:34,760 --> 00:21:40,100
that so we were like ok what things can

00:21:37,910 --> 00:21:42,830
we measure to really say that it's

00:21:40,100 --> 00:21:47,390
better or better in some cases at least

00:21:42,830 --> 00:21:50,480
and so we were looking into that first

00:21:47,390 --> 00:21:53,120
some advantages disadvantage of the

00:21:50,480 --> 00:21:54,920
different subjects I mean using remote

00:21:53,120 --> 00:21:56,960
actors it saves you from converting

00:21:54,920 --> 00:21:59,330
stuff to Jason and creating Jason and

00:21:56,960 --> 00:22:01,940
points and everything it's just the same

00:21:59,330 --> 00:22:04,100
actor which you use locally you can use

00:22:01,940 --> 00:22:06,020
also remote leaders you don't need to do

00:22:04,100 --> 00:22:08,120
much to do that and it feels much more

00:22:06,020 --> 00:22:09,770
natural I mean you don't want to be

00:22:08,120 --> 00:22:12,020
bothered with communication protocols

00:22:09,770 --> 00:22:14,720
between different systems it's just you

00:22:12,020 --> 00:22:16,190
want to do something and I think remote

00:22:14,720 --> 00:22:18,850
actors are better for that and they have

00:22:16,190 --> 00:22:22,640
some extra features like load balancing

00:22:18,850 --> 00:22:24,410
but HP also has its advantages it's more

00:22:22,640 --> 00:22:26,840
independent of technology you can use it

00:22:24,410 --> 00:22:28,520
with any language more or less and it's

00:22:26,840 --> 00:22:30,679
more loosely coupled although in

00:22:28,520 --> 00:22:32,450
practice and companies where I work for

00:22:30,679 --> 00:22:33,860
most of the times when we wanted to

00:22:32,450 --> 00:22:37,010
change something we needed to change

00:22:33,860 --> 00:22:38,990
both server and client so yeah I always

00:22:37,010 --> 00:22:41,240
find it a bit difficult to say that it's

00:22:38,990 --> 00:22:42,590
really loosely coupled I mean often if

00:22:41,240 --> 00:22:45,559
you change something you need to change

00:22:42,590 --> 00:22:48,470
everything anyway but for some hard

00:22:45,559 --> 00:22:50,840
measures we started measuring the size

00:22:48,470 --> 00:22:53,570
of the fat jar so including all the

00:22:50,840 --> 00:22:54,960
libraries we need and we saw that with

00:22:53,570 --> 00:22:57,060
local actors it's like a

00:22:54,960 --> 00:22:59,750
megabytes with remote actor it's like

00:22:57,060 --> 00:23:03,270
1112 megabytes and as soon as you at

00:22:59,750 --> 00:23:05,340
HTTP it's like 10 megabytes extra or

00:23:03,270 --> 00:23:08,220
something like that so that's not really

00:23:05,340 --> 00:23:09,870
what you what you want for reference I

00:23:08,220 --> 00:23:12,450
also included spring boot that's already

00:23:09,870 --> 00:23:14,690
a lot less maybe within New York HTTP

00:23:12,450 --> 00:23:19,590
version it's also optimized I didn't

00:23:14,690 --> 00:23:22,320
count that yet so it's and it's fairly

00:23:19,590 --> 00:23:25,350
similar to spring boots and at least a

00:23:22,320 --> 00:23:27,810
bit smaller than Dhaka HTTP next to that

00:23:25,350 --> 00:23:31,230
were like okay let's do some get links

00:23:27,810 --> 00:23:33,420
some performance testing and we more or

00:23:31,230 --> 00:23:36,450
less executed this script so simply just

00:23:33,420 --> 00:23:38,820
do some ping pong some simple more hello

00:23:36,450 --> 00:23:42,360
world ish application and see how it

00:23:38,820 --> 00:23:43,980
performs and we did some tests with a

00:23:42,360 --> 00:23:47,100
pause between it and we did the same

00:23:43,980 --> 00:23:48,810
test without a pause between it and we

00:23:47,100 --> 00:23:52,590
did every test three times and took the

00:23:48,810 --> 00:23:54,630
average of those tests so let's do make

00:23:52,590 --> 00:23:57,570
it a bit nicely I mean it's not a

00:23:54,630 --> 00:24:00,450
scientific test but we try to be as as

00:23:57,570 --> 00:24:04,080
good as possible with it so how does it

00:24:00,450 --> 00:24:06,570
look like in both scenarios so with two

00:24:04,080 --> 00:24:10,230
scenarios the one at the top we have

00:24:06,570 --> 00:24:12,990
akka HTTP on JVM one and then we do an

00:24:10,230 --> 00:24:15,510
aqua HTTP call on another JVM and in the

00:24:12,990 --> 00:24:18,330
second scenario we do a call from this

00:24:15,510 --> 00:24:20,940
JVM to a remote actor so we compare

00:24:18,330 --> 00:24:24,480
remote actors with akka HTTP more or

00:24:20,940 --> 00:24:26,970
less and it gave these results so this

00:24:24,480 --> 00:24:30,360
is with 50 users and this is with 50

00:24:26,970 --> 00:24:34,290
users no pause etc mmm it's a bit hard

00:24:30,360 --> 00:24:36,060
to see here but this is the end of the

00:24:34,290 --> 00:24:38,880
bar so it's it's a lot less remote

00:24:36,060 --> 00:24:40,590
actors perform a lot better with mean

00:24:38,880 --> 00:24:43,710
response time in milliseconds in this

00:24:40,590 --> 00:24:45,870
case and then we look at the max

00:24:43,710 --> 00:24:49,530
response times and still remote actors

00:24:45,870 --> 00:24:53,280
work much faster than then using akka

00:24:49,530 --> 00:24:56,580
HTTP same for 99 percentile also a lot

00:24:53,280 --> 00:24:58,590
better and I didn't only do these tests

00:24:56,580 --> 00:25:01,350
also at a graduation student that did

00:24:58,590 --> 00:25:03,990
his own tests and made his own example

00:25:01,350 --> 00:25:04,790
to test this and he found out that in

00:25:03,990 --> 00:25:08,580
his own

00:25:04,790 --> 00:25:10,440
handle around 600 users and acha he

00:25:08,580 --> 00:25:13,260
stopped measuring at a thousand users

00:25:10,440 --> 00:25:16,020
but he estimated that the akka remote

00:25:13,260 --> 00:25:18,210
actors solution could handle 3300 users

00:25:16,020 --> 00:25:20,760
so that's five times as much users with

00:25:18,210 --> 00:25:22,470
the same hardware I mean that's also a

00:25:20,760 --> 00:25:27,800
good selling point I think for

00:25:22,470 --> 00:25:27,800
management so then we're ready right

00:25:28,760 --> 00:25:32,790
place a few do a presentation included

00:25:31,230 --> 00:25:34,710
because it's popular nowadays to have

00:25:32,790 --> 00:25:37,910
your own law like don't waste law so I'm

00:25:34,710 --> 00:25:41,460
waiting for someone to include my law

00:25:37,910 --> 00:25:43,790
but then I was okay let's compare to at

00:25:41,460 --> 00:25:43,790
Springwood

00:25:44,330 --> 00:25:50,400
luckily finally some audience that

00:25:46,980 --> 00:25:51,990
understands the joke actually none of my

00:25:50,400 --> 00:25:53,850
colleagues got it so I was really

00:25:51,990 --> 00:25:58,320
disappointed with it but luckily you

00:25:53,850 --> 00:25:59,790
were smarter than my colleagues so we

00:25:58,320 --> 00:26:01,680
compared we did more or less the same

00:25:59,790 --> 00:26:03,840
tests and then now the blue bar is

00:26:01,680 --> 00:26:06,570
spraying booth and it was a bit

00:26:03,840 --> 00:26:08,730
disappointing because spring would seem

00:26:06,570 --> 00:26:14,640
to be faster than remote actors so that

00:26:08,730 --> 00:26:17,220
was like a man not-so-nice the same for

00:26:14,640 --> 00:26:19,850
but from max response time so we saw

00:26:17,220 --> 00:26:22,110
that remote actors were much more stable

00:26:19,850 --> 00:26:25,890
especially if you see it on the on the

00:26:22,110 --> 00:26:28,050
right a bit difficult to do but this is

00:26:25,890 --> 00:26:32,760
for remote actors and this is spring

00:26:28,050 --> 00:26:34,650
booth so I mean maybe the normal

00:26:32,760 --> 00:26:36,890
response times are slower but the max

00:26:34,650 --> 00:26:40,110
response times are much more stable with

00:26:36,890 --> 00:26:42,930
remote actors and that's also the reason

00:26:40,110 --> 00:26:46,200
that for 99 percentile it's also better

00:26:42,930 --> 00:26:47,790
now by the way this one before you ask a

00:26:46,200 --> 00:26:50,460
question about it it's a measurement

00:26:47,790 --> 00:26:52,830
error we did three test runs and one

00:26:50,460 --> 00:26:55,830
test run showed really high values but I

00:26:52,830 --> 00:26:57,360
thought I I could exclude it from the

00:26:55,830 --> 00:26:59,310
results but then I was fiddling with

00:26:57,360 --> 00:27:02,550
results and I rather just show the real

00:26:59,310 --> 00:27:08,280
stuff because we don't trust results you

00:27:02,550 --> 00:27:10,440
didn't falsify yourself yeah this is not

00:27:08,280 --> 00:27:11,790
my house because if I add such hours or

00:27:10,440 --> 00:27:15,330
probably would have good insurance as

00:27:11,790 --> 00:27:16,920
well but there were some challenges I

00:27:15,330 --> 00:27:18,630
mean

00:27:16,920 --> 00:27:21,860
my husband and burned down but I

00:27:18,630 --> 00:27:25,080
actually burned down a raspberry pie

00:27:21,860 --> 00:27:28,260
yeah luckily you can just replace them

00:27:25,080 --> 00:27:30,060
if you have an ice dealer or buy a new

00:27:28,260 --> 00:27:32,760
one because they're actually quite cheap

00:27:30,060 --> 00:27:35,190
so that's quite nice and for resources

00:27:32,760 --> 00:27:36,750
although raspberry pies are picking up

00:27:35,190 --> 00:27:39,420
and getting quicker and getting more

00:27:36,750 --> 00:27:41,880
resources the a+ model which we use was

00:27:39,420 --> 00:27:45,120
still quite a bit limited and we reached

00:27:41,880 --> 00:27:47,760
a maximum of memory we could use so it's

00:27:45,120 --> 00:27:49,680
working but you cannot run like really

00:27:47,760 --> 00:27:51,770
advanced applications on it it's it's

00:27:49,680 --> 00:27:55,110
nice for for playing around like this

00:27:51,770 --> 00:27:59,640
but doing heavy job or scholar stuff on

00:27:55,110 --> 00:28:02,820
it will probably not work if you ever

00:27:59,640 --> 00:28:07,710
buy a Raspberry Pi A+ and you want to

00:28:02,820 --> 00:28:11,120
put some USB device inside it so in this

00:28:07,710 --> 00:28:13,740
one I think be really careful

00:28:11,120 --> 00:28:15,870
they have like connectors with if you

00:28:13,740 --> 00:28:18,480
put the USB device in it they have some

00:28:15,870 --> 00:28:20,130
pins that keep it in place but in the A+

00:28:18,480 --> 00:28:22,020
model they made those really cheap and

00:28:20,130 --> 00:28:24,570
if you have a bit of a thicker USB

00:28:22,020 --> 00:28:26,640
device you put them against the pins and

00:28:24,570 --> 00:28:29,490
pins banged backwards and you lose

00:28:26,640 --> 00:28:31,350
another Raspberry Pi I only found out

00:28:29,490 --> 00:28:35,280
after the third one was broken so that

00:28:31,350 --> 00:28:36,990
was a bit of a pity because my first B+

00:28:35,280 --> 00:28:39,210
model worked perfectly but with some

00:28:36,990 --> 00:28:43,620
models they use cheaper hardware and

00:28:39,210 --> 00:28:45,240
then it's stuff like this batteries one

00:28:43,620 --> 00:28:47,310
thing I hated about the Lego is that

00:28:45,240 --> 00:28:49,620
they're really picky about rechargeable

00:28:47,310 --> 00:28:52,710
batteries I bought like quite expensive

00:28:49,620 --> 00:28:54,480
well-known brand rechargeable batteries

00:28:52,710 --> 00:28:56,160
but they still didn't work really nice

00:28:54,480 --> 00:28:58,050
sometimes they work sometimes they don't

00:28:56,160 --> 00:28:59,820
work so in the end I just use normal

00:28:58,050 --> 00:29:01,350
batteries but I mean that's not really

00:28:59,820 --> 00:29:04,430
good for your environment if you play

00:29:01,350 --> 00:29:06,690
around all day with them

00:29:04,430 --> 00:29:09,900
everybody it's working I don't know if

00:29:06,690 --> 00:29:12,630
you have any RFID stuff here in the US

00:29:09,900 --> 00:29:14,370
in Holland we have RFID for our public

00:29:12,630 --> 00:29:16,800
transport and there we also have to

00:29:14,370 --> 00:29:19,620
check in with a card and if you move

00:29:16,800 --> 00:29:22,500
next way too quickly it doesn't scan if

00:29:19,620 --> 00:29:24,180
you have it too far from the scanner it

00:29:22,500 --> 00:29:25,890
doesn't work and it's the same with this

00:29:24,180 --> 00:29:28,220
one because it's a really cheap set up

00:29:25,890 --> 00:29:30,050
it's like five dollar

00:29:28,220 --> 00:29:32,180
or for the readers if you have more

00:29:30,050 --> 00:29:34,190
expensive models they have a better

00:29:32,180 --> 00:29:36,590
range and there are a bit better but

00:29:34,190 --> 00:29:41,270
with this cheap solution it's sometimes

00:29:36,590 --> 00:29:44,570
doesn't work Wi-Fi issues at conferences

00:29:41,270 --> 00:29:48,350
I mean I couldn't put this one on my

00:29:44,570 --> 00:29:51,380
train was a bit too heavy but also I

00:29:48,350 --> 00:29:54,440
mean now you have the new what is it

00:29:51,380 --> 00:29:57,170
called 5 gigahertz bandwidth USB dongles

00:29:54,440 --> 00:29:59,000
but Raspberry Pi has really poor support

00:29:57,170 --> 00:30:01,460
for that one so it's it's difficult to

00:29:59,000 --> 00:30:03,530
get those up and running so you're stuck

00:30:01,460 --> 00:30:05,330
with the 2.4 gigahertz bandwidth more or

00:30:03,530 --> 00:30:08,360
less or you have to invest a lot of time

00:30:05,330 --> 00:30:10,120
with it it's not really plug and play so

00:30:08,360 --> 00:30:12,590
it's it's trying around fiddling around

00:30:10,120 --> 00:30:14,870
I've burned quite some stuff like

00:30:12,590 --> 00:30:18,980
infrared transmitters because cables

00:30:14,870 --> 00:30:21,670
were connected incorrectly so manuals on

00:30:18,980 --> 00:30:24,200
the internet that showed the wrong

00:30:21,670 --> 00:30:25,760
connections so then you do the same as

00:30:24,200 --> 00:30:29,120
in the manual and yeah you break some

00:30:25,760 --> 00:30:33,680
hardware I have more or less infinite

00:30:29,120 --> 00:30:35,150
options and all take some time the same

00:30:33,680 --> 00:30:37,640
for the documentation there there's a

00:30:35,150 --> 00:30:39,230
lot available but when I started for

00:30:37,640 --> 00:30:40,970
instance you had raspbian on on a

00:30:39,230 --> 00:30:44,030
Raspberry Pi which worked really nice

00:30:40,970 --> 00:30:46,100
and old things like sensors and

00:30:44,030 --> 00:30:47,720
everything else you boy they must have

00:30:46,100 --> 00:30:49,730
the time they have some libraries or

00:30:47,720 --> 00:30:51,230
some documentation for raspbian but I

00:30:49,730 --> 00:30:54,860
wanted to run docker on my trains

00:30:51,230 --> 00:30:58,060
because docker is also really cool and

00:30:54,860 --> 00:31:00,350
that's a really good use case right but

00:30:58,060 --> 00:31:02,210
raspbian and doctor with that raspbian

00:31:00,350 --> 00:31:05,210
version was really poor you had to cross

00:31:02,210 --> 00:31:07,010
compile stuff and everything and on the

00:31:05,210 --> 00:31:09,110
other hand you also had art Linux as a

00:31:07,010 --> 00:31:12,080
distribution for your Raspberry Pi but

00:31:09,110 --> 00:31:14,900
and that could run docker like natively

00:31:12,080 --> 00:31:16,370
it was super easy to set up but then all

00:31:14,900 --> 00:31:18,050
my other stuff wouldn't work because it

00:31:16,370 --> 00:31:19,820
wasn't really available for our clinic

00:31:18,050 --> 00:31:22,040
so it's it's a bit of fiddling around

00:31:19,820 --> 00:31:25,550
and finding the right solution for your

00:31:22,040 --> 00:31:27,530
problem and if you have too small chain

00:31:25,550 --> 00:31:29,960
children it's also a challenge if you

00:31:27,530 --> 00:31:31,700
don't have an extra room so sometimes I

00:31:29,960 --> 00:31:35,570
had to hurry quite quickly before my

00:31:31,700 --> 00:31:37,850
daughter would trash my trains but I

00:31:35,570 --> 00:31:39,800
think the most important challenge was

00:31:37,850 --> 00:31:42,170
time I mean you can build everything but

00:31:39,800 --> 00:31:43,970
it costs quite some time

00:31:42,170 --> 00:31:45,440
in the beginning you think how hard can

00:31:43,970 --> 00:31:47,600
it be I connect some sensors and I'm

00:31:45,440 --> 00:31:49,880
done in a weekend and I can move on but

00:31:47,600 --> 00:31:51,740
yeah I can tell you from my experience

00:31:49,880 --> 00:31:53,380
most of the time it takes more than a

00:31:51,740 --> 00:31:56,180
weekend

00:31:53,380 --> 00:31:58,160
I often got the question how much time

00:31:56,180 --> 00:31:59,930
did you spend on it I don't know and I

00:31:58,160 --> 00:32:01,970
don't dare to even count it because then

00:31:59,930 --> 00:32:06,020
I will probably have some troubles at

00:32:01,970 --> 00:32:07,970
home but it's fun and I mean it brings

00:32:06,020 --> 00:32:09,470
you like to places like New York to just

00:32:07,970 --> 00:32:11,930
talk about your Lego trains mean what's

00:32:09,470 --> 00:32:13,730
what's even more better and what we

00:32:11,930 --> 00:32:15,800
found out it it's really it's appealing

00:32:13,730 --> 00:32:17,570
to people with it's it's nice and visual

00:32:15,800 --> 00:32:20,630
and you can visualize some different

00:32:17,570 --> 00:32:22,610
concepts with it and we could prove with

00:32:20,630 --> 00:32:24,020
it that we could use Scala or Java on a

00:32:22,610 --> 00:32:26,150
Raspberry Pi and it would work quite

00:32:24,020 --> 00:32:28,760
well and for us as a company that's

00:32:26,150 --> 00:32:31,490
that's important because we don't do

00:32:28,760 --> 00:32:33,350
much in IOT business yet but if we get

00:32:31,490 --> 00:32:35,000
some IOT projects we can just use our

00:32:33,350 --> 00:32:37,070
current knowledge to develop on that

00:32:35,000 --> 00:32:40,130
platform instead of having to learn our

00:32:37,070 --> 00:32:44,840
galaxy or whatever a language that is

00:32:40,130 --> 00:32:47,360
used mostly on IOT hardware so it it was

00:32:44,840 --> 00:32:49,970
a bit of a fun project and also a bit of

00:32:47,360 --> 00:32:52,880
yeah useful knowledge that we get it

00:32:49,970 --> 00:32:54,620
along the road and we we've gathered a

00:32:52,880 --> 00:32:57,230
lot of knowledge about skull and akka as

00:32:54,620 --> 00:32:59,150
well and now when we started we didn't

00:32:57,230 --> 00:33:01,250
do any customer projects with Scala naka

00:32:59,150 --> 00:33:02,960
but now we do and we already had some of

00:33:01,250 --> 00:33:05,120
that knowledge by just playing around

00:33:02,960 --> 00:33:06,860
with Lego trains and I can tell you it's

00:33:05,120 --> 00:33:11,990
a lot more fun to play with Lego trains

00:33:06,860 --> 00:33:14,120
and to play with hello world it's now

00:33:11,990 --> 00:33:17,360
but the best part I don't know if all of

00:33:14,120 --> 00:33:20,200
you already saw the video but I like it

00:33:17,360 --> 00:33:20,200
so I just play it again

00:33:27,370 --> 00:33:45,700
but in the meantime are there any

00:33:29,170 --> 00:33:47,170
questions yeah yeah so the questions did

00:33:45,700 --> 00:33:50,440
you think about clustering raspberry pi

00:33:47,170 --> 00:33:51,850
to gain a bit more performance not for

00:33:50,440 --> 00:33:54,550
the trains they're moving way too

00:33:51,850 --> 00:33:57,670
quickly already and crash all the time

00:33:54,550 --> 00:33:59,680
if we move in maximum speed so but we

00:33:57,670 --> 00:34:02,110
actually we built a cluster of raspberry

00:33:59,680 --> 00:34:04,690
pies with different raspberry pies with

00:34:02,110 --> 00:34:07,630
a akka cluster on top of it so we made

00:34:04,690 --> 00:34:15,880
it another example of that and that

00:34:07,630 --> 00:34:18,870
works really well so for things like

00:34:15,880 --> 00:34:18,870
this it's also really useful

00:34:29,980 --> 00:34:42,520
okay any other question around yeah yeah

00:34:41,079 --> 00:34:43,990
so the question is the code that's

00:34:42,520 --> 00:34:45,460
running on the Raspberry Pi does it look

00:34:43,990 --> 00:34:47,589
like normal Scala aqua code

00:34:45,460 --> 00:34:51,190
actually it's a really simple scholar

00:34:47,589 --> 00:34:53,079
aqua card because underwater - and I

00:34:51,190 --> 00:34:55,060
let's say the difficult stuff is handled

00:34:53,079 --> 00:34:57,730
by C libraries or Python libraries so

00:34:55,060 --> 00:34:59,740
what we do is we simply use actors to

00:34:57,730 --> 00:35:02,619
receive a message and then use that

00:34:59,740 --> 00:35:05,740
message to call a C library so it's

00:35:02,619 --> 00:35:07,630
really simple scholar Akaka it's nothing

00:35:05,740 --> 00:35:09,400
difficult inside it so we use some

00:35:07,630 --> 00:35:11,650
different actors for instance actors

00:35:09,400 --> 00:35:14,770
free music actors to control speed

00:35:11,650 --> 00:35:17,140
actors for autopilot but it's it's all

00:35:14,770 --> 00:35:25,510
quite simple like any other scholar or

00:35:17,140 --> 00:35:27,810
car application any other questions up

00:35:25,510 --> 00:35:27,810
for you

00:35:30,340 --> 00:35:35,150
okay so the question is what version of

00:35:32,480 --> 00:35:39,080
the Raspberry Pi OS did you use I use

00:35:35,150 --> 00:35:40,970
raspberry of raspbian and not the newest

00:35:39,080 --> 00:35:45,470
one because we started like one and a

00:35:40,970 --> 00:35:47,630
half years ago but you could some while

00:35:45,470 --> 00:35:49,430
ago I also implemented it which I think

00:35:47,630 --> 00:35:51,859
was the newest version of raspbian and

00:35:49,430 --> 00:35:54,020
that worked as well but you have to some

00:35:51,859 --> 00:35:56,359
commands you need to change because for

00:35:54,020 --> 00:36:01,369
the infrared transmitter we use lurk the

00:35:56,359 --> 00:36:03,170
linux infrared protocol more or less but

00:36:01,369 --> 00:36:04,850
to enable that you have to enable some

00:36:03,170 --> 00:36:06,380
kernel modules and stuff like that and

00:36:04,850 --> 00:36:08,240
that changed a little bit and a new

00:36:06,380 --> 00:36:09,859
version of raspbian but little bit of

00:36:08,240 --> 00:36:12,080
googling you can find those things quite

00:36:09,859 --> 00:36:14,330
easily so it it took some time to use

00:36:12,080 --> 00:36:16,040
the new version because you need some

00:36:14,330 --> 00:36:17,300
new settings but once you have that up

00:36:16,040 --> 00:36:21,530
and running it's it's quite easy

00:36:17,300 --> 00:36:24,970
actually okay then thanks all for

00:36:21,530 --> 00:36:24,970

YouTube URL: https://www.youtube.com/watch?v=qExZ8ligEKs


