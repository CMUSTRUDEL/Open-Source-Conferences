Title: Scala Is for Everyone by Marina
Publication date: 2018-09-21
Playlist: Scala Days New York 2018
Description: 
	This video was recorded at Scala Days New York 2018
Follow us on Twitter @ScalaDays or visit our website for more information http://scaladays.org 

More information and the abstract can be found here:
https://na.scaladays.org/schedule/scala-is-for-everyone
Captions: 
	00:00:05,090 --> 00:00:10,290
there are a lot of different rumors

00:00:07,200 --> 00:00:12,450
about Scala in tech community and one of

00:00:10,290 --> 00:00:15,030
them is that skull is a very complicated

00:00:12,450 --> 00:00:17,580
language that requires years of

00:00:15,030 --> 00:00:21,060
preparation and experience in other

00:00:17,580 --> 00:00:24,270
programming languages it's also a common

00:00:21,060 --> 00:00:27,899
thought that Scala is definitely not a

00:00:24,270 --> 00:00:30,930
beginner friendly language so did my

00:00:27,899 --> 00:00:33,930
research and one of the most impressive

00:00:30,930 --> 00:00:36,240
bug parts I came across suggested the

00:00:33,930 --> 00:00:38,520
following you should start with the

00:00:36,240 --> 00:00:42,750
object-oriented part first by learning

00:00:38,520 --> 00:00:45,480
Python Ruby or c-sharp then you can move

00:00:42,750 --> 00:00:49,079
to Java to learn common libraries that

00:00:45,480 --> 00:00:51,510
you can meet in Scala and after that you

00:00:49,079 --> 00:00:54,270
can move to Scala but only to the

00:00:51,510 --> 00:00:56,720
object-oriented pot and only after that

00:00:54,270 --> 00:00:59,340
to the functional programming in Scala I

00:00:56,720 --> 00:01:03,030
strongly disagree that all of that is

00:00:59,340 --> 00:01:05,610
necessary and more than that I'm

00:01:03,030 --> 00:01:07,500
absolutely sure that you can and you

00:01:05,610 --> 00:01:09,260
should enter tech industry with a

00:01:07,500 --> 00:01:13,400
programming language like Scala and

00:01:09,260 --> 00:01:18,180
today we will talk about how to do that

00:01:13,400 --> 00:01:21,060
so who can learn Scala and why I think

00:01:18,180 --> 00:01:23,250
the most popular audience nowadays is

00:01:21,060 --> 00:01:25,530
students since they just got from the

00:01:23,250 --> 00:01:26,159
universities and they're picking their

00:01:25,530 --> 00:01:29,190
path

00:01:26,159 --> 00:01:31,620
I also recommend Scala for people

00:01:29,190 --> 00:01:34,350
complete changing their career path

00:01:31,620 --> 00:01:38,960
completely for professionals from other

00:01:34,350 --> 00:01:43,790
fields like economics or maybe medicine

00:01:38,960 --> 00:01:43,790
retiring people and of course kids

00:01:43,909 --> 00:01:49,250
functional programming is like a fitness

00:01:46,470 --> 00:01:54,720
for our brain it helps us to think

00:01:49,250 --> 00:01:59,580
faster so you decided for whatever

00:01:54,720 --> 00:02:02,310
reason to learn Scala where can you

00:01:59,580 --> 00:02:06,720
start and the first question that comes

00:02:02,310 --> 00:02:10,289
to your mind is do I need a computer

00:02:06,720 --> 00:02:12,329
science degree can you please raise your

00:02:10,289 --> 00:02:14,540
hand if you have a computer science

00:02:12,329 --> 00:02:14,540
degree

00:02:14,720 --> 00:02:23,090
okay I guess that's a lot that's good

00:02:20,450 --> 00:02:25,310
companies today are looking for

00:02:23,090 --> 00:02:28,940
professionals with a degree it's

00:02:25,310 --> 00:02:31,160
everywhere on Korea sites well I'm about

00:02:28,940 --> 00:02:34,460
five years in the industry and I'm a

00:02:31,160 --> 00:02:36,530
physicist all of the companies that I

00:02:34,460 --> 00:02:37,930
ever spoke with were completely

00:02:36,530 --> 00:02:41,080
satisfied with my degree

00:02:37,930 --> 00:02:45,080
all the people I've ever worked with

00:02:41,080 --> 00:02:48,050
were either mathematicians or physicists

00:02:45,080 --> 00:02:49,580
or even philologists but only very small

00:02:48,050 --> 00:02:53,450
percentage of them had a computer

00:02:49,580 --> 00:02:55,880
science degree so my answer is no you

00:02:53,450 --> 00:02:59,060
don't need a degree but you absolutely

00:02:55,880 --> 00:03:01,970
have to have a knowledge about data

00:02:59,060 --> 00:03:05,660
structures and algorithms because it's

00:03:01,970 --> 00:03:07,940
exactly that makes you a good software

00:03:05,660 --> 00:03:11,000
engineer and exactly that will help you

00:03:07,940 --> 00:03:14,390
to do your job so you don't need a

00:03:11,000 --> 00:03:16,670
degree but you need a knowledge and what

00:03:14,390 --> 00:03:20,750
it's also very important the practical

00:03:16,670 --> 00:03:24,130
skill where can you start I picked

00:03:20,750 --> 00:03:29,989
sources for you that I find the best and

00:03:24,130 --> 00:03:32,840
these are books sides scholastic rebel

00:03:29,989 --> 00:03:35,270
and pen and paper we will start with

00:03:32,840 --> 00:03:38,000
works there are plenty of great Berg

00:03:35,270 --> 00:03:41,750
spots column but only a few of them are

00:03:38,000 --> 00:03:43,600
beginner friendly I found one that will

00:03:41,750 --> 00:03:47,090
suit you even if you never heard about

00:03:43,600 --> 00:03:48,140
data structures algorithms or anything

00:03:47,090 --> 00:03:51,590
about for loops

00:03:48,140 --> 00:03:55,130
it's a tommix column that book is very

00:03:51,590 --> 00:03:57,440
slow it explains in details every step

00:03:55,130 --> 00:04:00,190
you do without an assumption that you

00:03:57,440 --> 00:04:04,130
have a previous programming experience

00:04:00,190 --> 00:04:05,870
every chapter here is atomic which is

00:04:04,130 --> 00:04:09,500
independent on the previous chapter and

00:04:05,870 --> 00:04:12,380
has exercises at the end which are

00:04:09,500 --> 00:04:15,800
exactly but what was explained in the

00:04:12,380 --> 00:04:18,019
chapter before it means you can open the

00:04:15,800 --> 00:04:20,150
burgh in the middle read through the

00:04:18,019 --> 00:04:22,970
chapter and solve the task after it

00:04:20,150 --> 00:04:25,460
without a need to read 400 pages prior

00:04:22,970 --> 00:04:29,750
to that I think that's awesome

00:04:25,460 --> 00:04:34,500
next lemon source is scholarly exercises

00:04:29,750 --> 00:04:37,920
it looks like this it has explanation

00:04:34,500 --> 00:04:40,260
example and a task you need to fill the

00:04:37,920 --> 00:04:44,010
empty spots that will help you out to

00:04:40,260 --> 00:04:47,190
understand the topic better and to

00:04:44,010 --> 00:04:49,080
memorize syntax of Scala it also has a

00:04:47,190 --> 00:04:52,230
run button so you can always check if

00:04:49,080 --> 00:04:54,300
you were right exercises here are

00:04:52,230 --> 00:04:57,810
splitted by frameworks which is pretty

00:04:54,300 --> 00:05:00,270
cool you can use it along with atomic

00:04:57,810 --> 00:05:02,730
scholar you'll read the chapter and then

00:05:00,270 --> 00:05:06,630
you solve the task here it's a very good

00:05:02,730 --> 00:05:10,140
learning combination it's also good for

00:05:06,630 --> 00:05:13,560
an advanced specialist because it has

00:05:10,140 --> 00:05:19,290
frameworks like cats shapeless Scala

00:05:13,560 --> 00:05:21,300
check etc I find it very useful myself

00:05:19,290 --> 00:05:25,590
so I suggest you to try it if you have

00:05:21,300 --> 00:05:29,010
yet for beginners again I believe it's

00:05:25,590 --> 00:05:30,570
better to start with Scala tutorial then

00:05:29,010 --> 00:05:32,400
you move to the standard library and

00:05:30,570 --> 00:05:37,020
after that to the functional programming

00:05:32,400 --> 00:05:39,740
those three will give you confidence in

00:05:37,020 --> 00:05:43,040
your knowledge and your level of

00:05:39,740 --> 00:05:43,040
practical skills

00:05:43,310 --> 00:05:50,460
another great online tool is callosity

00:05:47,360 --> 00:05:52,350
it's a prize device friendly option for

00:05:50,460 --> 00:05:57,150
the minimum requirements you only need

00:05:52,350 --> 00:05:59,580
internet connection you don't need to

00:05:57,150 --> 00:06:01,380
download or install anything you don't

00:05:59,580 --> 00:06:05,250
even need a computer to write code you

00:06:01,380 --> 00:06:07,710
can use a phone or a tablet or whatever

00:06:05,250 --> 00:06:10,170
is available with Internet you type some

00:06:07,710 --> 00:06:11,430
scalar code press the Run button and the

00:06:10,170 --> 00:06:13,770
result will appear in the model

00:06:11,430 --> 00:06:16,290
wait a moment with that available today

00:06:13,770 --> 00:06:18,770
you don't have any excuses to not work

00:06:16,290 --> 00:06:21,180
on your professional growth in Scala

00:06:18,770 --> 00:06:24,060
it's collecti will also save your data

00:06:21,180 --> 00:06:27,990
so next time you open the page your code

00:06:24,060 --> 00:06:31,020
will be there next to new is my favorite

00:06:27,990 --> 00:06:33,300
its color Apple which is in an

00:06:31,020 --> 00:06:36,540
interactive tool for evaluating

00:06:33,300 --> 00:06:41,640
expressions I use it in

00:06:36,540 --> 00:06:45,510
most of my workshops in Sydney it's a

00:06:41,640 --> 00:06:50,190
great tool for anyone from beginners to

00:06:45,510 --> 00:06:51,810
an advanced specialists for example if

00:06:50,190 --> 00:06:54,660
you're debugging someone else's code

00:06:51,810 --> 00:06:57,780
written in a non functional way you can

00:06:54,660 --> 00:06:59,640
always take the big piece of code with

00:06:57,780 --> 00:07:03,420
business logic split it into smaller

00:06:59,640 --> 00:07:04,740
functions and then it's a good each of

00:07:03,420 --> 00:07:11,160
them to figure out what is happening

00:07:04,740 --> 00:07:13,920
with your data I also suggest you to get

00:07:11,160 --> 00:07:15,780
used to the terminal if you are new to

00:07:13,920 --> 00:07:18,360
software engineering because it's very

00:07:15,780 --> 00:07:21,560
handy and especially handy with Scala

00:07:18,360 --> 00:07:24,360
wineries installed on your computer and

00:07:21,560 --> 00:07:27,330
the last learning option is pen and

00:07:24,360 --> 00:07:29,970
paper it's great tool to come up with

00:07:27,330 --> 00:07:32,490
solution with before you will start

00:07:29,970 --> 00:07:36,690
coding because no ins calisthenics is

00:07:32,490 --> 00:07:39,270
actually not enough for example to solve

00:07:36,690 --> 00:07:43,050
a differential equation we can use one

00:07:39,270 --> 00:07:45,140
of many numerical methods but to do that

00:07:43,050 --> 00:07:48,180
we need to understand how it works but

00:07:45,140 --> 00:07:50,760
work for me in this case was to write

00:07:48,180 --> 00:07:53,220
down several calculation steps on a

00:07:50,760 --> 00:07:55,140
paper and after that it was really easy

00:07:53,220 --> 00:07:58,980
to write the actual code that will do

00:07:55,140 --> 00:08:01,710
the whole calculation companies today

00:07:58,980 --> 00:08:03,690
practice pen and paper during the coding

00:08:01,710 --> 00:08:06,540
interview so you can be asked to write

00:08:03,690 --> 00:08:09,930
down code either in a paper or on a

00:08:06,540 --> 00:08:12,210
whiteboard so don't be surprised

00:08:09,930 --> 00:08:14,880
those were the sources that I find based

00:08:12,210 --> 00:08:19,740
for education and a couple of tips for

00:08:14,880 --> 00:08:22,290
you about learning first do not compare

00:08:19,740 --> 00:08:24,240
yourself with others yes there are

00:08:22,290 --> 00:08:27,090
people they can start coding right away

00:08:24,240 --> 00:08:29,130
oh my friend is already in the chapter 4

00:08:27,090 --> 00:08:31,980
and I'm still in the first one maybe

00:08:29,130 --> 00:08:34,080
it's not for me no it just means you

00:08:31,980 --> 00:08:37,800
need a little bit more time for those

00:08:34,080 --> 00:08:39,930
chapters what matters here is that if

00:08:37,800 --> 00:08:42,200
you really have a desire to become a

00:08:39,930 --> 00:08:45,180
software engineer you will become one

00:08:42,200 --> 00:08:48,450
which lid says to take it with your own

00:08:45,180 --> 00:08:49,470
pace the whole idea of the bride

00:08:48,450 --> 00:08:52,760
educational

00:08:49,470 --> 00:08:54,990
this is to have fun I cannot imagine

00:08:52,760 --> 00:08:58,080
learning something I don't like and

00:08:54,990 --> 00:09:00,390
succeeding at it and the last thing

00:08:58,080 --> 00:09:04,290
practice makes perfect

00:09:00,390 --> 00:09:07,350
my advice for you here would be to take

00:09:04,290 --> 00:09:10,770
just 10 minutes a day to practice and

00:09:07,350 --> 00:09:14,550
calisthenics by solving small problems

00:09:10,770 --> 00:09:16,800
you can use terminal like rebel horse

00:09:14,550 --> 00:09:18,150
callosity doesn't matter but in the

00:09:16,800 --> 00:09:20,250
amount of time you will feel a lot more

00:09:18,150 --> 00:09:26,130
confident about your practical skills

00:09:20,250 --> 00:09:29,190
and your level of knowledge so what

00:09:26,130 --> 00:09:33,330
about teaching if you want to teach I

00:09:29,190 --> 00:09:36,090
have three questions for you why do you

00:09:33,330 --> 00:09:38,070
want to do it where do you find your

00:09:36,090 --> 00:09:42,870
audience and what's going to be the

00:09:38,070 --> 00:09:45,450
format your lessons one of the main

00:09:42,870 --> 00:09:47,910
advantages of scala for me is that

00:09:45,450 --> 00:09:50,880
thanks to like language i really love my

00:09:47,910 --> 00:09:54,150
job because our industry is growing very

00:09:50,880 --> 00:09:57,300
quickly we need to learn every day to

00:09:54,150 --> 00:09:58,950
keep up with the new technologies which

00:09:57,300 --> 00:10:02,460
basically means and never stop an

00:09:58,950 --> 00:10:07,710
entertainment and I want to teach

00:10:02,460 --> 00:10:09,930
because I want people to people that are

00:10:07,710 --> 00:10:12,140
interested in functional programming to

00:10:09,930 --> 00:10:15,530
have that kind of job

00:10:12,140 --> 00:10:19,020
what about the audience I believe that

00:10:15,530 --> 00:10:21,990
an advanced engineers can make their

00:10:19,020 --> 00:10:25,470
transition into Scala but himself but

00:10:21,990 --> 00:10:27,330
what about newbies whenever to see that

00:10:25,470 --> 00:10:29,040
and know a lot of people and I

00:10:27,330 --> 00:10:32,730
definitely didn't know how to get

00:10:29,040 --> 00:10:35,160
someone to my classes and then one of my

00:10:32,730 --> 00:10:38,910
friends suggested to connect with women

00:10:35,160 --> 00:10:41,240
who code and I did girls helped me out

00:10:38,910 --> 00:10:43,590
with organizational part and also

00:10:41,240 --> 00:10:45,210
connection with them helped me to get a

00:10:43,590 --> 00:10:49,680
lot of people interested in functional

00:10:45,210 --> 00:10:53,370
programming in Scala to my classes so my

00:10:49,680 --> 00:10:56,310
advice here for you would be to decide

00:10:53,370 --> 00:10:58,530
who do you want to teach and find the

00:10:56,310 --> 00:11:00,200
existing group around you with the

00:10:58,530 --> 00:11:02,210
similar interests

00:11:00,200 --> 00:11:05,150
Facebook or Twitter should do the job

00:11:02,210 --> 00:11:07,220
and the last thing when audiences

00:11:05,150 --> 00:11:09,110
question is sorted you will need to

00:11:07,220 --> 00:11:14,030
figure out what's going to be the format

00:11:09,110 --> 00:11:17,600
of your lessons I find lectures in this

00:11:14,030 --> 00:11:19,970
particular case completely useless and I

00:11:17,600 --> 00:11:22,940
prefer life coding workshops with

00:11:19,970 --> 00:11:24,530
explanations this way you will get an

00:11:22,940 --> 00:11:30,230
immediate feedback from your audience

00:11:24,530 --> 00:11:32,150
and you'll have fun yourself as well so

00:11:30,230 --> 00:11:36,620
what do you need to know to create a

00:11:32,150 --> 00:11:40,670
good workshop first you need to take

00:11:36,620 --> 00:11:42,580
care of topics second timing and of

00:11:40,670 --> 00:11:46,220
course you will need help

00:11:42,580 --> 00:11:49,460
it started with topics skull is huge

00:11:46,220 --> 00:11:53,780
and because it is how to split it into

00:11:49,460 --> 00:11:55,820
smaller durable chunks very simple you

00:11:53,780 --> 00:11:59,150
don't have to do anything at all because

00:11:55,820 --> 00:12:01,850
there are tons of sources out there you

00:11:59,150 --> 00:12:05,660
can take atomic skull ax or skull

00:12:01,850 --> 00:12:10,340
documentation pages doesn't matter one

00:12:05,660 --> 00:12:14,240
of my favorite topics for workshop is

00:12:10,340 --> 00:12:16,490
color collection it bi is very big so

00:12:14,240 --> 00:12:20,870
what do you can do here you can take up

00:12:16,490 --> 00:12:27,880
to ten methods for lists like head play

00:12:20,870 --> 00:12:30,290
drop etc then Google 99 skull problems

00:12:27,880 --> 00:12:34,400
pick the problems that you can solve

00:12:30,290 --> 00:12:36,860
with those two methods prepare home

00:12:34,400 --> 00:12:38,930
tests for your students that they can

00:12:36,860 --> 00:12:41,540
solve with the same methods so they can

00:12:38,930 --> 00:12:45,520
practice at home and print the handouts

00:12:41,540 --> 00:12:48,620
with the summary of your lesson done

00:12:45,520 --> 00:12:51,140
next thing is timing since I work for

00:12:48,620 --> 00:12:53,420
one team and they support my initiative

00:12:51,140 --> 00:12:56,530
I can run my classes in our head office

00:12:53,420 --> 00:13:00,550
in Sydney which means I have two options

00:12:56,530 --> 00:13:01,670
work the evenings after 6:00 p.m. and

00:13:00,550 --> 00:13:05,540
weekends

00:13:01,670 --> 00:13:08,860
any time from my experience of work the

00:13:05,540 --> 00:13:12,200
evenings are fine but they cannot belong

00:13:08,860 --> 00:13:16,750
since people will be already tired

00:13:12,200 --> 00:13:20,600
you I prefer up to one and a half hours

00:13:16,750 --> 00:13:23,420
for evenings topics like high water

00:13:20,600 --> 00:13:26,180
functions is not the best idea for you

00:13:23,420 --> 00:13:30,920
or your audience remember that your goal

00:13:26,180 --> 00:13:32,900
is to show how simple skully's for

00:13:30,920 --> 00:13:37,310
weekends you can take up to three hours

00:13:32,900 --> 00:13:39,740
and you can pick more advanced topics on

00:13:37,310 --> 00:13:43,280
my first workshop I made a mistake

00:13:39,740 --> 00:13:46,840
and I had a six hours live coding

00:13:43,280 --> 00:13:50,690
session with two rooms full of attendees

00:13:46,840 --> 00:13:55,100
some are in a fifth hour I almost lost

00:13:50,690 --> 00:13:57,890
my voice and I am pretty short my

00:13:55,100 --> 00:14:02,660
audience got lost track of what was

00:13:57,890 --> 00:14:05,390
going on as well so when you deciding on

00:14:02,660 --> 00:14:09,430
the duration or your lesson consider

00:14:05,390 --> 00:14:12,830
your own and your audience's ability and

00:14:09,430 --> 00:14:15,920
the last thing if you have more than

00:14:12,830 --> 00:14:22,010
five people in the room you will need

00:14:15,920 --> 00:14:25,120
help what I mean get Mentors remember to

00:14:22,010 --> 00:14:28,220
allocate some time before the lesson to

00:14:25,120 --> 00:14:33,160
install everything required for the

00:14:28,220 --> 00:14:35,690
lesson since your workshop is practical

00:14:33,160 --> 00:14:37,790
everybody should be able to calculon

00:14:35,690 --> 00:14:38,270
with you matters can help you out with

00:14:37,790 --> 00:14:42,200
that

00:14:38,270 --> 00:14:45,920
and also when your explanation is not

00:14:42,200 --> 00:14:48,350
enough they can help you with explaining

00:14:45,920 --> 00:14:50,060
something in different words it only

00:14:48,350 --> 00:14:53,180
it's for a better experience for your

00:14:50,060 --> 00:14:55,430
students it's very important remember

00:14:53,180 --> 00:14:59,780
that if your classes are free which is

00:14:55,430 --> 00:15:02,560
my case I you will ask people to invest

00:14:59,780 --> 00:15:05,420
their personal time to be a volunteer I

00:15:02,560 --> 00:15:08,870
usually ask my friends or local Scala

00:15:05,420 --> 00:15:10,730
community one of the best advantages of

00:15:08,870 --> 00:15:16,310
teaching is the fact that you actually

00:15:10,730 --> 00:15:19,040
learn in yourself so you have topics

00:15:16,310 --> 00:15:21,440
mentor students everybody in the room

00:15:19,040 --> 00:15:25,430
what do you need to know to provide the

00:15:21,440 --> 00:15:31,080
best coding experience

00:15:25,430 --> 00:15:33,420
first-first listen it's very important

00:15:31,080 --> 00:15:35,580
to create an atmosphere in the room

00:15:33,420 --> 00:15:39,000
where everybody will be comfortable to

00:15:35,580 --> 00:15:42,540
ask any question and when they do make

00:15:39,000 --> 00:15:46,070
sure you really listen that part is very

00:15:42,540 --> 00:15:49,980
hard since you have your own context and

00:15:46,070 --> 00:15:53,070
your own experience and knowledge it

00:15:49,980 --> 00:15:57,210
takes time to learn how to hear out the

00:15:53,070 --> 00:15:59,160
actual question that student asked the

00:15:57,210 --> 00:16:00,990
next thing is ensure you really

00:15:59,160 --> 00:16:04,100
understand the question you need to

00:16:00,990 --> 00:16:07,350
understand what student wants to know

00:16:04,100 --> 00:16:09,690
this is your chance to show the

00:16:07,350 --> 00:16:13,260
difference between what was asked and

00:16:09,690 --> 00:16:15,000
what had to be asked because most of the

00:16:13,260 --> 00:16:17,430
work for your students will happen at

00:16:15,000 --> 00:16:20,220
home where they have Google and Berks

00:16:17,430 --> 00:16:22,730
and they need to know how to ask the

00:16:20,220 --> 00:16:25,410
right question to get a proper response

00:16:22,730 --> 00:16:28,320
it's very important for the educational

00:16:25,410 --> 00:16:34,320
process the following thing is

00:16:28,320 --> 00:16:37,410
explanation remember that your goal is

00:16:34,320 --> 00:16:40,380
to show how simple functional

00:16:37,410 --> 00:16:44,610
programming in Scala is it means to not

00:16:40,380 --> 00:16:46,650
pick complicated explanations if your

00:16:44,610 --> 00:16:49,380
audience is not a group of

00:16:46,650 --> 00:16:54,290
mathematicians do not start your

00:16:49,380 --> 00:16:57,110
explanation with Keller theory avoid

00:16:54,290 --> 00:17:00,390
confusing people or scaring them off

00:16:57,110 --> 00:17:03,150
with more and more complexity there is a

00:17:00,390 --> 00:17:05,910
good saying about it if you cannot

00:17:03,150 --> 00:17:08,370
explain something in simple words there

00:17:05,910 --> 00:17:12,630
is a probability you don't understand it

00:17:08,370 --> 00:17:15,210
well enough and I believe is true and

00:17:12,630 --> 00:17:18,720
the last thing know your audience

00:17:15,210 --> 00:17:21,600
it means Taylor examples relevant to

00:17:18,720 --> 00:17:25,110
your audience if you're working with

00:17:21,600 --> 00:17:27,210
people with Python experience you can

00:17:25,110 --> 00:17:29,670
explain something by showing the

00:17:27,210 --> 00:17:31,310
difference between Python and Scala to

00:17:29,670 --> 00:17:33,750
help them better understand the topic

00:17:31,310 --> 00:17:36,620
but if you're teaching newbies you will

00:17:33,750 --> 00:17:36,620
have to use imagination

00:17:37,600 --> 00:17:44,000
remember to use examples from real life

00:17:40,600 --> 00:17:47,480
for example what is an option it's a box

00:17:44,000 --> 00:17:51,830
it's a box with a failure or with no

00:17:47,480 --> 00:17:54,500
value you can use picture schemes or

00:17:51,830 --> 00:17:56,360
metaphors all of that helps to

00:17:54,500 --> 00:18:00,520
understand functional programming

00:17:56,360 --> 00:18:00,520
concepts a lot better than anything else

00:18:00,610 --> 00:18:06,920
Jenner has that

00:18:03,309 --> 00:18:09,710
so we'll probably recognize Will Smith

00:18:06,920 --> 00:18:10,960
here but I'm talking about the child

00:18:09,710 --> 00:18:14,780
next dream

00:18:10,960 --> 00:18:17,240
this is Tamagotchi a 14 year old boy

00:18:14,780 --> 00:18:21,650
that became an artificial intelligence

00:18:17,240 --> 00:18:25,309
expert for IBM hero his first program

00:18:21,650 --> 00:18:30,950
for iPhone and he was only nine I think

00:18:25,309 --> 00:18:33,290
we need more kids like that there are a

00:18:30,950 --> 00:18:36,260
lot of schools programming schools for

00:18:33,290 --> 00:18:40,640
kids as little as four years old they

00:18:36,260 --> 00:18:43,700
can learn Python or JavaScript there and

00:18:40,640 --> 00:18:46,040
it's really awesome but what is really

00:18:43,700 --> 00:18:50,330
sad for me that we don't have anything

00:18:46,040 --> 00:18:53,000
like that in Scala community everybody

00:18:50,330 --> 00:18:55,850
remembers books that they read when they

00:18:53,000 --> 00:19:03,350
were kids right who had Pinocchio as a

00:18:55,850 --> 00:19:07,100
favorite Red Hood category theory No

00:19:03,350 --> 00:19:09,710
so how about fairy tale I'm not talking

00:19:07,100 --> 00:19:12,950
about teaching kids Scala syntax

00:19:09,710 --> 00:19:15,020
what about explaining functional

00:19:12,950 --> 00:19:18,440
programming concepts using a fairy tale

00:19:15,020 --> 00:19:21,290
language we live in the tech world

00:19:18,440 --> 00:19:25,670
already everything around us is that our

00:19:21,290 --> 00:19:28,309
salt or created by solved and I think

00:19:25,670 --> 00:19:32,450
kids should understand at least have

00:19:28,309 --> 00:19:34,960
works which will be a lot easier if it

00:19:32,450 --> 00:19:39,200
will be presented in a fairy tale form

00:19:34,960 --> 00:19:42,410
I'm working the work for about Scala for

00:19:39,200 --> 00:19:46,900
kids very little from three years old

00:19:42,410 --> 00:19:49,440
and I'm hoping that will show them how

00:19:46,900 --> 00:19:53,580
interesting functional programming world

00:19:49,440 --> 00:19:56,159
can be the work on a burg is still in

00:19:53,580 --> 00:19:59,399
progress and I'm using the certain user

00:19:56,159 --> 00:20:02,659
demo sessions - I collect feedback from

00:19:59,399 --> 00:20:05,190
my future readers and their parents I

00:20:02,659 --> 00:20:10,919
hope there will be a great engineers in

00:20:05,190 --> 00:20:14,009
ten years so respect today about how we

00:20:10,919 --> 00:20:17,730
can learn Scala by picking a font cut

00:20:14,009 --> 00:20:22,049
and how we can teach kids movies and

00:20:17,730 --> 00:20:24,960
software engineers and worse to mention

00:20:22,049 --> 00:20:28,289
that if you want to build a product that

00:20:24,960 --> 00:20:31,379
will cover needs for of all people

00:20:28,289 --> 00:20:34,019
around us we need to create diverse team

00:20:31,379 --> 00:20:37,980
with different experiences and different

00:20:34,019 --> 00:20:42,750
point of views so I guess that's it

00:20:37,980 --> 00:20:47,149
thank you so much you can find me this

00:20:42,750 --> 00:20:47,149
way thank you

00:20:49,770 --> 00:20:54,960
if you have any questions I'm ready to

00:20:52,290 --> 00:20:55,260
answer or you can find me later if you

00:20:54,960 --> 00:20:57,870
want

00:20:55,260 --> 00:21:08,250
I cannot see anything so if there are

00:20:57,870 --> 00:21:13,070
questions it's like light everywhere hi

00:21:08,250 --> 00:21:13,070
I was helping to run the creative SCADA

00:21:14,720 --> 00:21:21,000
trait of Scala that took place here

00:21:18,690 --> 00:21:23,990
yesterday one of the biggest issues we

00:21:21,000 --> 00:21:26,160
had with the installation and setup so

00:21:23,990 --> 00:21:29,730
I'm curious to know whether you run

00:21:26,160 --> 00:21:31,170
everything in s caste or you have some

00:21:29,730 --> 00:21:33,480
other way of getting people set up and

00:21:31,170 --> 00:21:37,320
running that you find works for you I

00:21:33,480 --> 00:21:38,490
saw you had like a workshop sort is that

00:21:37,320 --> 00:21:42,090
what you're talking about

00:21:38,490 --> 00:21:44,330
yes Carla bridge uh-huh workshop that

00:21:42,090 --> 00:21:48,030
was yeah okay I got it

00:21:44,330 --> 00:21:50,700
so yes we had issues of an installation

00:21:48,030 --> 00:21:54,600
as well on my first workshop I decided

00:21:50,700 --> 00:21:58,700
to go with IntelliJ and for people that

00:21:54,600 --> 00:22:04,200
are new to tech industry that was

00:21:58,700 --> 00:22:07,440
challenging and for mentors it it was

00:22:04,200 --> 00:22:10,080
six people who helped me out that day it

00:22:07,440 --> 00:22:12,620
was challenging as well we had to

00:22:10,080 --> 00:22:17,040
install everything for everybody so in

00:22:12,620 --> 00:22:20,700
cases when we had no time and after that

00:22:17,040 --> 00:22:24,780
also I'm using Scala a must at the time

00:22:20,700 --> 00:22:29,040
when we cannot install Scala binaries

00:22:24,780 --> 00:22:31,470
for some reason I don't know why but I

00:22:29,040 --> 00:22:34,740
see is it good actually

00:22:31,470 --> 00:22:37,950
thing to run the workshop if it's not

00:22:34,740 --> 00:22:40,890
something like a huge application but

00:22:37,950 --> 00:22:43,620
for my experience building a big

00:22:40,890 --> 00:22:44,250
application on a workshop is not the

00:22:43,620 --> 00:22:47,340
best idea

00:22:44,250 --> 00:22:49,970
well is that what you are doing the

00:22:47,340 --> 00:22:49,970
application

00:22:52,850 --> 00:22:57,450
it's fairly small stuff so there are a

00:22:55,830 --> 00:22:59,940
few issues one is definitely like

00:22:57,450 --> 00:23:02,330
installing IntelliJ and so on just is

00:22:59,940 --> 00:23:04,830
difficult the other issue is that it's a

00:23:02,330 --> 00:23:06,870
fairly a typical workflow we don't

00:23:04,830 --> 00:23:08,400
really have a compiled test work for

00:23:06,870 --> 00:23:11,970
people making spray small changes and

00:23:08,400 --> 00:23:14,520
just going through compile is tedious

00:23:11,970 --> 00:23:17,660
for the very small changes are doing so

00:23:14,520 --> 00:23:21,570
working directly in like the console

00:23:17,660 --> 00:23:25,290
sometimes easier yeah Breville is great

00:23:21,570 --> 00:23:27,240
I except for the cases when you you're

00:23:25,290 --> 00:23:30,120
working with traits and case classes

00:23:27,240 --> 00:23:32,810
that one big functions it's like harder

00:23:30,120 --> 00:23:35,130
to print and you need to explain how to

00:23:32,810 --> 00:23:37,080
absolutely there's other problems with

00:23:35,130 --> 00:23:38,670
just using the repple and the people

00:23:37,080 --> 00:23:41,220
can't do any carry this longer than a

00:23:38,670 --> 00:23:45,530
few lines and it's really not a great

00:23:41,220 --> 00:23:47,490
solution and I know of so I'm maybe the

00:23:45,530 --> 00:23:49,500
scarcity I don't know here pronounce it

00:23:47,490 --> 00:23:54,030
it's got a little tough little thing you

00:23:49,500 --> 00:23:56,400
know is the way forward not sure I think

00:23:54,030 --> 00:23:59,340
I see is like a default case for any

00:23:56,400 --> 00:24:03,110
workshop I would use it right okay

00:23:59,340 --> 00:24:03,110
that's good thank you

00:24:06,550 --> 00:24:12,310
III and the IntelliJ Scala team and we

00:24:09,730 --> 00:24:14,880
are aware of this problem so we've we

00:24:12,310 --> 00:24:17,830
started to address it by creating a

00:24:14,880 --> 00:24:19,390
basically one-click installer so

00:24:17,830 --> 00:24:22,840
basically you just download the thing

00:24:19,390 --> 00:24:25,990
and start it and you can start packing

00:24:22,840 --> 00:24:28,930
on a scallop project and we're also

00:24:25,990 --> 00:24:31,410
going to make the interactivity a bit

00:24:28,930 --> 00:24:35,800
better by improving the worksheet

00:24:31,410 --> 00:24:39,850
feature and hopefully generally making

00:24:35,800 --> 00:24:48,850
it easier to use for beginners that's

00:24:39,850 --> 00:24:51,760
great thank you so I I do a lot of Scala

00:24:48,850 --> 00:24:53,290
teaching at my workplace and I liked

00:24:51,760 --> 00:24:55,870
your slide about the option with the box

00:24:53,290 --> 00:24:58,360
in the Apple I have a lot of trouble

00:24:55,870 --> 00:24:59,680
myself finding good analogies for

00:24:58,360 --> 00:25:01,240
functional programming to use with

00:24:59,680 --> 00:25:02,560
people that are new to the concept or

00:25:01,240 --> 00:25:05,070
don't know what category theory is or

00:25:02,560 --> 00:25:07,900
whatever like how do you get inspired to

00:25:05,070 --> 00:25:14,710
to find good analogies for for non

00:25:07,900 --> 00:25:18,310
functional programming ninjas just comes

00:25:14,710 --> 00:25:21,310
naturally actually if you're trying to

00:25:18,310 --> 00:25:22,870
abstract from everything that you have

00:25:21,310 --> 00:25:24,550
in your head like for all their

00:25:22,870 --> 00:25:28,240
algorithms others charge just says you

00:25:24,550 --> 00:25:30,940
have a you can try to imagine something

00:25:28,240 --> 00:25:33,790
that looks like maybe like how to

00:25:30,940 --> 00:25:36,640
explain what a map is right I mean the

00:25:33,790 --> 00:25:39,100
data structure like a dictionary this is

00:25:36,640 --> 00:25:43,030
what works for my students I don't know

00:25:39,100 --> 00:25:47,830
maybe another audience will be came to a

00:25:43,030 --> 00:25:50,170
different metaphor but things work map

00:25:47,830 --> 00:25:53,380
you can show the map how poor it's like

00:25:50,170 --> 00:25:56,470
you can have different boxes right and

00:25:53,380 --> 00:25:59,500
you're doing something with one value in

00:25:56,470 --> 00:26:03,160
one box but what map function does right

00:25:59,500 --> 00:26:04,990
it does the same to each element so you

00:26:03,160 --> 00:26:07,180
can show that you can show that

00:26:04,990 --> 00:26:08,890
physically even if you're working like

00:26:07,180 --> 00:26:11,650
with the little kids for example that's

00:26:08,890 --> 00:26:14,950
that works very good how do you explain

00:26:11,650 --> 00:26:16,690
mapping on futures how do you explain

00:26:14,950 --> 00:26:18,370
mapping on futures that's the one I

00:26:16,690 --> 00:26:19,730
always have trouble at futures like

00:26:18,370 --> 00:26:21,860
Scala futures

00:26:19,730 --> 00:26:27,470
future dot map future dot flat map yeah

00:26:21,860 --> 00:26:42,230
yeah we got to flip maps mm-hmm that's

00:26:27,470 --> 00:26:45,770
good enough thank you hi I'm curious to

00:26:42,230 --> 00:26:48,310
know how advanced are the topics that

00:26:45,770 --> 00:26:52,450
your explain to your children students

00:26:48,310 --> 00:26:57,530
like how far how far do you get with

00:26:52,450 --> 00:27:05,230
three four years old we're sticking with

00:26:57,530 --> 00:27:10,610
a fairy tale characters that sure I

00:27:05,230 --> 00:27:15,200
guess been something they'd be the idea

00:27:10,610 --> 00:27:17,510
of something like little traits for

00:27:15,200 --> 00:27:20,210
example it's different figures I can

00:27:17,510 --> 00:27:23,330
play it together something like that

00:27:20,210 --> 00:27:27,230
it's not published yet so I cannot I

00:27:23,330 --> 00:27:29,330
actually had a couple of pictures in my

00:27:27,230 --> 00:27:31,790
slides before but then I realized that

00:27:29,330 --> 00:27:36,350
since I haven't published the break yet

00:27:31,790 --> 00:27:39,770
I cannot kind of show it yeah but it's

00:27:36,350 --> 00:27:43,340
not it's not numbers even not even

00:27:39,770 --> 00:27:46,220
numbers it only metaphors and figures

00:27:43,340 --> 00:27:49,280
not very advanced so we know what a

00:27:46,220 --> 00:27:53,150
trait is what a collection is right what

00:27:49,280 --> 00:27:56,000
a topo is okay I just thought there was

00:27:53,150 --> 00:27:58,820
some magic to help explain futures and

00:27:56,000 --> 00:28:03,140
things like that that puts children so

00:27:58,820 --> 00:28:05,330
cool thank you yeah futures is not

00:28:03,140 --> 00:28:12,320
something that gonna happen for three

00:28:05,330 --> 00:28:14,240
years old so do people always work

00:28:12,320 --> 00:28:17,000
individually on concepts that you're

00:28:14,240 --> 00:28:18,680
training them or do you have some of the

00:28:17,000 --> 00:28:21,080
students collaborate together either

00:28:18,680 --> 00:28:23,090
unlike a group project or maybe like

00:28:21,080 --> 00:28:26,060
pair up I'm just

00:28:23,090 --> 00:28:28,730
is how that works I'm sorry is your

00:28:26,060 --> 00:28:30,590
question about how so when you do the

00:28:28,730 --> 00:28:32,930
workshops let's say and you're you're

00:28:30,590 --> 00:28:35,180
telling them about how options work and

00:28:32,930 --> 00:28:37,580
you're explaining okay we're going to

00:28:35,180 --> 00:28:39,320
type in these things into into here and

00:28:37,580 --> 00:28:42,080
we're going to see how this works

00:28:39,320 --> 00:28:43,610
do they all work on it individually and

00:28:42,080 --> 00:28:44,870
then you have a mentor come around and

00:28:43,610 --> 00:28:46,610
help them if they have trouble or you'd

00:28:44,870 --> 00:28:48,470
help them yourself or do they work

00:28:46,610 --> 00:28:51,740
together do you have like students pair

00:28:48,470 --> 00:28:54,140
up together got it got it they all work

00:28:51,740 --> 00:28:57,740
individually so the question is about

00:28:54,140 --> 00:29:00,770
the form of the workshop they'll work

00:28:57,740 --> 00:29:05,650
individually each of them on their own

00:29:00,770 --> 00:29:09,560
computer recently I allowed to have kids

00:29:05,650 --> 00:29:13,940
with parents in a workshop as well and

00:29:09,560 --> 00:29:17,900
they will work on on one computer with a

00:29:13,940 --> 00:29:20,480
parent but for adults they work by

00:29:17,900 --> 00:29:24,520
themself and I usually interact with

00:29:20,480 --> 00:29:26,600
them like okay we have a task here is

00:29:24,520 --> 00:29:28,490
how you can solve it

00:29:26,600 --> 00:29:30,230
think about it a little bit like a

00:29:28,490 --> 00:29:33,110
couple of minutes then raise a hand if

00:29:30,230 --> 00:29:36,710
you if you solve it and two hands if you

00:29:33,110 --> 00:29:44,960
have problem so that kind of thing helps

00:29:36,710 --> 00:29:47,840
to cheer up a bit everybody and makes it

00:29:44,960 --> 00:29:49,550
not really formal so it's not a class

00:29:47,840 --> 00:29:52,280
it's not a lecture

00:29:49,550 --> 00:29:54,410
it's something that we're talking about

00:29:52,280 --> 00:29:57,440
something or doing something together

00:29:54,410 --> 00:30:01,340
I'm showing things in terminal like I'm

00:29:57,440 --> 00:30:04,970
using ripple and I usually have like two

00:30:01,340 --> 00:30:07,430
windows split it in terminal so on the

00:30:04,970 --> 00:30:10,550
upper side I will have some examples

00:30:07,430 --> 00:30:13,190
that has to stick there like basic

00:30:10,550 --> 00:30:15,950
functions that how they work had will do

00:30:13,190 --> 00:30:18,410
that to list tail will do that to list

00:30:15,950 --> 00:30:18,830
so they can take a look at that all the

00:30:18,410 --> 00:30:22,520
time

00:30:18,830 --> 00:30:24,500
and on the lower level I'm just coding

00:30:22,520 --> 00:30:27,260
and showing them the middle results I'm

00:30:24,500 --> 00:30:30,640
explaining things and I can see from

00:30:27,260 --> 00:30:33,950
from their reaction if they understood

00:30:30,640 --> 00:30:35,270
the topic or not if if not we're

00:30:33,950 --> 00:30:37,070
repeating things

00:30:35,270 --> 00:30:40,100
reputation is were actually very good

00:30:37,070 --> 00:30:43,760
and this is the reason why I suggest to

00:30:40,100 --> 00:30:46,160
prepare home task tests for for your

00:30:43,760 --> 00:30:49,480
students so they could do the same

00:30:46,160 --> 00:30:52,430
things maybe for a little bit different

00:30:49,480 --> 00:30:54,970
problems but with the same methods so

00:30:52,430 --> 00:31:00,950
they will repeat it and memorize that I

00:30:54,970 --> 00:31:05,240
hope I answered the question thank you a

00:31:00,950 --> 00:31:07,580
question about logistics so when you do

00:31:05,240 --> 00:31:10,940
our workshop is everyone required to

00:31:07,580 --> 00:31:13,310
bring their own laptop and what if for

00:31:10,940 --> 00:31:17,150
some reason someone couldn't do it and

00:31:13,310 --> 00:31:20,750
do you have some solutions yeah if they

00:31:17,150 --> 00:31:22,630
all have to bring the laptop and what to

00:31:20,750 --> 00:31:25,990
do if they don't have it yeah they

00:31:22,630 --> 00:31:31,070
fortunately I have only classes without

00:31:25,990 --> 00:31:36,320
computers I only I'm using like a

00:31:31,070 --> 00:31:39,440
boarding rooms for client meetings so

00:31:36,320 --> 00:31:41,810
everybody should bring their laptop and

00:31:39,440 --> 00:31:44,930
we will help to install them everything

00:31:41,810 --> 00:31:46,640
that required for the class so after

00:31:44,930 --> 00:31:49,690
that there will be at least able to do

00:31:46,640 --> 00:31:52,220
that at home right that's very important

00:31:49,690 --> 00:31:54,590
at the moment were not available to

00:31:52,220 --> 00:31:59,170
provide classes but now computers

00:31:54,590 --> 00:31:59,170
unfortunately thank you

00:32:03,049 --> 00:32:12,419
hi my question is why you would choose

00:32:09,139 --> 00:32:14,929
to teach a newbie scholar instead of say

00:32:12,419 --> 00:32:18,049
something like Python

00:32:14,929 --> 00:32:20,909
since Scala right off the bat has some

00:32:18,049 --> 00:32:22,760
more advanced restrictions such as you

00:32:20,909 --> 00:32:27,269
know being typed it's focused on

00:32:22,760 --> 00:32:29,279
immutability the syntax reuses keywords

00:32:27,269 --> 00:32:33,659
for different purposes along I'm

00:32:29,279 --> 00:32:38,039
wondering why why start with with Scala

00:32:33,659 --> 00:32:42,389
for beginner programmers well I believe

00:32:38,039 --> 00:32:44,190
it's it's better start from my

00:32:42,389 --> 00:32:47,299
experience because I started with Scala

00:32:44,190 --> 00:32:47,299
and I turned out okay

00:32:47,450 --> 00:32:53,940
yeah I truly believe that scully is not

00:32:50,789 --> 00:32:56,820
something that people think about it

00:32:53,940 --> 00:32:59,789
it's not complicated and it's a truly

00:32:56,820 --> 00:33:01,860
beginner friendly language so it's

00:32:59,789 --> 00:33:04,730
better to start with something that is

00:33:01,860 --> 00:33:08,429
strongly typed that does the right thing

00:33:04,730 --> 00:33:12,570
instead of some other programming

00:33:08,429 --> 00:33:17,340
languages will hear about Scala so I

00:33:12,570 --> 00:33:20,880
guess that's not really a question I can

00:33:17,340 --> 00:33:24,230
answer in a different way right I love

00:33:20,880 --> 00:33:29,179
that language and it inspires me to

00:33:24,230 --> 00:33:32,299
teach other people this is what I do

00:33:29,179 --> 00:33:32,299
thank you

00:33:40,090 --> 00:33:46,070
so I just wanted to actually add to your

00:33:43,340 --> 00:33:48,470
like white each tubular because I do the

00:33:46,070 --> 00:33:50,289
same thing and one one little acute

00:33:48,470 --> 00:33:53,169
anecdotal and example that I have

00:33:50,289 --> 00:33:55,160
teaching some beginners so I had a few

00:33:53,169 --> 00:33:57,650
fifteen-year-old girls who had never

00:33:55,160 --> 00:34:00,830
used the laptop early they had like an

00:33:57,650 --> 00:34:02,299
iPad and we are like oh well this is

00:34:00,830 --> 00:34:03,530
gonna be a disaster teaching these kids

00:34:02,299 --> 00:34:06,080
that have don't even know how to use a

00:34:03,530 --> 00:34:07,580
computer like to program with Scala and

00:34:06,080 --> 00:34:09,230
there were a bunch of people who were

00:34:07,580 --> 00:34:11,300
also JavaScript programmers who wanted

00:34:09,230 --> 00:34:13,429
to learn Scala in the same room and what

00:34:11,300 --> 00:34:17,359
happened was the immutability and the

00:34:13,429 --> 00:34:19,250
types actually you know made things more

00:34:17,359 --> 00:34:20,480
intuitive for them and the JavaScript

00:34:19,250 --> 00:34:22,879
programmers were like tripping over

00:34:20,480 --> 00:34:24,800
themselves because they're like I I want

00:34:22,879 --> 00:34:27,580
to reassign this and these these two

00:34:24,800 --> 00:34:30,010
fifteen-year-old girls are like but why

00:34:27,580 --> 00:34:31,879
that doesn't make any sense you just

00:34:30,010 --> 00:34:33,440
transformed the thing you get a new one

00:34:31,879 --> 00:34:34,879
and then you just use the new one and

00:34:33,440 --> 00:34:36,169
they were explaining that to the

00:34:34,879 --> 00:34:38,090
JavaScript programmers which I thought

00:34:36,169 --> 00:34:40,490
was really funny because I thought that

00:34:38,090 --> 00:34:40,790
would be hard because when we learned we

00:34:40,490 --> 00:34:42,280
learned

00:34:40,790 --> 00:34:44,510
oh yeah lets you know mutate the world

00:34:42,280 --> 00:34:45,980
and then we're like correcting we're

00:34:44,510 --> 00:34:47,960
over writing what we learned when we

00:34:45,980 --> 00:34:49,460
learned you know to program in Scala but

00:34:47,960 --> 00:34:51,859
when you teach somebody who has no

00:34:49,460 --> 00:34:53,330
experience for at least my experience

00:34:51,859 --> 00:34:56,000
has been that that's actually more

00:34:53,330 --> 00:34:58,580
intuitive than like overriding things

00:34:56,000 --> 00:35:00,890
and trying to keep track of some state

00:34:58,580 --> 00:35:02,869
in your mind and whatnot and they were

00:35:00,890 --> 00:35:04,850
like it was kind of cute because you

00:35:02,869 --> 00:35:06,800
have some some people who had been doing

00:35:04,850 --> 00:35:08,240
JavaScript development for years being

00:35:06,800 --> 00:35:10,160
corrected by two fifteen-year-old girls

00:35:08,240 --> 00:35:12,770
who thought it was super intuitive to

00:35:10,160 --> 00:35:14,420
keep things immutable so I think that

00:35:12,770 --> 00:35:16,100
actually I agree with you it's actually

00:35:14,420 --> 00:35:17,930
very beginner friendly and I think that

00:35:16,100 --> 00:35:20,390
you only see that when you teach a

00:35:17,930 --> 00:35:22,670
beginner and then they make all of these

00:35:20,390 --> 00:35:26,660
assumptions that we had to learn and

00:35:22,670 --> 00:35:29,730
work to learn so I agree with you

00:35:26,660 --> 00:35:29,730
[Music]

00:35:37,190 --> 00:35:44,309
hi so my question is um when new

00:35:41,130 --> 00:35:46,950
developers come I'm also trying to teach

00:35:44,309 --> 00:35:48,630
them my question is how far do you take

00:35:46,950 --> 00:35:51,089
the functional part because this is

00:35:48,630 --> 00:35:52,980
always a question because Scala in a way

00:35:51,089 --> 00:35:56,700
it's between the Java and the Haskell

00:35:52,980 --> 00:35:58,950
like edges functor monads do teach them

00:35:56,700 --> 00:36:00,930
that like option is something that I can

00:35:58,950 --> 00:36:02,490
you know Schrodinger box you can

00:36:00,930 --> 00:36:05,099
actually look at that shorting a cat I

00:36:02,490 --> 00:36:08,519
mean like you can teach that but functor

00:36:05,099 --> 00:36:10,529
monads things like more complicated do

00:36:08,519 --> 00:36:12,299
you teach that or do you save it for

00:36:10,529 --> 00:36:15,119
later after they'll be more comfortable

00:36:12,299 --> 00:36:28,559
how deep do you go in the functional

00:36:15,119 --> 00:36:32,579
part because we're still getting used to

00:36:28,559 --> 00:36:35,009
the Senators and everything I you need

00:36:32,579 --> 00:36:36,869
to understand that visit people without

00:36:35,009 --> 00:36:40,170
programming experience at all

00:36:36,869 --> 00:36:44,069
they're very new to technology to use in

00:36:40,170 --> 00:36:46,980
terminal 2 everything I think we will

00:36:44,069 --> 00:36:51,390
get there like maybe in the half of the

00:36:46,980 --> 00:36:55,609
year will be there also I have Scala

00:36:51,390 --> 00:36:57,869
micro mind so we'll go through

00:36:55,609 --> 00:37:00,119
everything that is important and

00:36:57,869 --> 00:37:03,660
interesting in Scala unfortunately I

00:37:00,119 --> 00:37:07,619
don't know how skill or didn't get a

00:37:03,660 --> 00:37:13,640
chance to work too much with Java thank

00:37:07,619 --> 00:37:18,390
God but yeah so I'm teaching the basics

00:37:13,640 --> 00:37:21,119
in Scala and I think it's going well but

00:37:18,390 --> 00:37:24,089
a really proud of the students that I

00:37:21,119 --> 00:37:27,239
have because having zero experience and

00:37:24,089 --> 00:37:31,650
being an adult doing such a thing

00:37:27,239 --> 00:37:33,720
it's very cool actually so but we'll get

00:37:31,650 --> 00:37:36,089
to the motives and functors and

00:37:33,720 --> 00:37:39,299
everything no problem I also have that

00:37:36,089 --> 00:37:42,440
thing in kids book but in a very

00:37:39,299 --> 00:37:42,440
fairytale form

00:37:43,630 --> 00:37:56,090
thank you I just want to respond to you

00:37:55,010 --> 00:37:58,070
know some of the questions about

00:37:56,090 --> 00:38:01,160
teaching advanced topics you know

00:37:58,070 --> 00:38:04,430
teaching beginners is a thing I've I've

00:38:01,160 --> 00:38:06,290
done and and think about a lot and you

00:38:04,430 --> 00:38:09,350
have to sort of teach to a person's

00:38:06,290 --> 00:38:13,820
interests and what they want to do with

00:38:09,350 --> 00:38:17,330
the subject and most people you know

00:38:13,820 --> 00:38:19,370
even professional as often don't it may

00:38:17,330 --> 00:38:22,880
use the more advanced features of

00:38:19,370 --> 00:38:24,530
functional programming very rarely you

00:38:22,880 --> 00:38:27,980
know if you're making something like a

00:38:24,530 --> 00:38:30,590
web service or something like that you

00:38:27,980 --> 00:38:32,030
know often you're not going to to need

00:38:30,590 --> 00:38:34,550
that so I just wouldn't bog down a

00:38:32,030 --> 00:38:37,400
beginner's mind with it it just makes

00:38:34,550 --> 00:38:40,720
programming seem much less accessible to

00:38:37,400 --> 00:38:45,590
them as and that's time you could spend

00:38:40,720 --> 00:38:52,850
you know solidifying the stuff that

00:38:45,590 --> 00:38:55,370
they're going to use every day it's not

00:38:52,850 --> 00:38:58,220
a question I'm just saying that I agree

00:38:55,370 --> 00:39:00,100
with the with focusing less on advanced

00:38:58,220 --> 00:39:06,080
topics especially for beginners because

00:39:00,100 --> 00:39:07,430
you know you don't need to it's better

00:39:06,080 --> 00:39:09,260
to spend time on things people are going

00:39:07,430 --> 00:39:13,040
to use every day for things they find

00:39:09,260 --> 00:39:15,860
interesting or want to work on than to

00:39:13,040 --> 00:39:17,630
tell them okay there's a world of

00:39:15,860 --> 00:39:19,160
complicated stuff out there I'm going to

00:39:17,630 --> 00:39:20,480
show you you're not going to understand

00:39:19,160 --> 00:39:21,860
and you're never going to need to use it

00:39:20,480 --> 00:39:23,720
but I just want to know programming is

00:39:21,860 --> 00:39:26,890
more complicated than you can imagine

00:39:23,720 --> 00:39:29,330
that's not useful you know it just

00:39:26,890 --> 00:39:31,010
demoralizes new beginners new

00:39:29,330 --> 00:39:39,080
programmers I think so I think it's good

00:39:31,010 --> 00:39:42,770
to focus on the the basics it's better

00:39:39,080 --> 00:39:46,640
to be stronger in a simple way of

00:39:42,770 --> 00:39:49,760
expressing the business logic then being

00:39:46,640 --> 00:39:53,570
too smart yeah because somebody will

00:39:49,760 --> 00:39:54,880
have to support it after you anyway okay

00:39:53,570 --> 00:39:57,490
thank you

00:39:54,880 --> 00:39:58,059
are there any other questions I cannot

00:39:57,490 --> 00:40:03,670
say

00:39:58,059 --> 00:40:05,420
unfortunately so that's it

00:40:03,670 --> 00:40:09,639
okay thank you so much

00:40:05,420 --> 00:40:09,639

YouTube URL: https://www.youtube.com/watch?v=MwTB2Bb5zsE


