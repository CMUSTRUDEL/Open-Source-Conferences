Title: ScalaQuest: The Scala Adventure by Alejandro Lujan
Publication date: 2018-09-21
Playlist: Scala Days New York 2018
Description: 
	This video was recorded at Scala Days New York 2018
Follow us on Twitter @ScalaDays or visit our website for more information http://scaladays.org 

More information and the abstract can be found here:
https://na.scaladays.org/schedule/scalaquest-the-scala-adventure
Captions: 
	00:00:05,000 --> 00:00:10,219
thank you for coming thank you everyone

00:00:07,200 --> 00:00:12,299
who's enthusiast about teaching scarlet

00:00:10,219 --> 00:00:15,960
there's real otter talks about teaching

00:00:12,299 --> 00:00:17,189
scale day treats is wonderful and for

00:00:15,960 --> 00:00:18,570
people watching the video I don't know

00:00:17,189 --> 00:00:20,099
if you can point the camera at the two

00:00:18,570 --> 00:00:22,380
thousand people in the room today this

00:00:20,099 --> 00:00:24,360
is wonderful thank you we have people

00:00:22,380 --> 00:00:27,300
flying from Uruguay just to just to

00:00:24,360 --> 00:00:29,849
watch the Scotties anyway so my name is

00:00:27,300 --> 00:00:32,820
Alejandro I currently work for Shopify

00:00:29,849 --> 00:00:35,430
and apparently I have to say that this

00:00:32,820 --> 00:00:37,199
is my own personal project not a Shopify

00:00:35,430 --> 00:00:40,379
project but thanks Robin for sending me

00:00:37,199 --> 00:00:42,929
here and and being on the conference so

00:00:40,379 --> 00:00:45,179
today on party about Scala quest which

00:00:42,929 --> 00:00:49,320
is a game were building to teach people

00:00:45,179 --> 00:00:51,449
scallop okay a word when I say we I'm

00:00:49,320 --> 00:00:53,640
talking about this handsome fellow there

00:00:51,449 --> 00:00:55,469
who couldn't be here on the stage

00:00:53,640 --> 00:00:58,559
talking to you about the game I'm the

00:00:55,469 --> 00:01:01,859
lucky one that gets to do that so I want

00:00:58,559 --> 00:01:04,620
to start by stating why I think you

00:01:01,859 --> 00:01:06,630
should care about Scala quest so these

00:01:04,620 --> 00:01:09,180
are the things that drive the the

00:01:06,630 --> 00:01:12,090
project per se people want to level up

00:01:09,180 --> 00:01:13,650
their Scala of course and you if you're

00:01:12,090 --> 00:01:15,450
in Scala days you probably know enough

00:01:13,650 --> 00:01:18,390
that a lot of the basics will be

00:01:15,450 --> 00:01:21,210
teaching already pretty good for you but

00:01:18,390 --> 00:01:23,910
you are part of teams that want to lower

00:01:21,210 --> 00:01:25,800
scale you want to onboard people you

00:01:23,910 --> 00:01:27,780
also want to encourage people outside of

00:01:25,800 --> 00:01:30,330
your company or your communities to have

00:01:27,780 --> 00:01:32,700
easy ways of important scale and we have

00:01:30,330 --> 00:01:34,910
a number of really great resources out

00:01:32,700 --> 00:01:37,410
there we have books of course we have

00:01:34,910 --> 00:01:39,960
folks the others core of creative

00:01:37,410 --> 00:01:41,670
creative scale other Scalla bridge but

00:01:39,960 --> 00:01:43,350
people learn in different ways so this

00:01:41,670 --> 00:01:46,980
is a different proposition on how I

00:01:43,350 --> 00:01:48,570
think we can learn personally I love

00:01:46,980 --> 00:01:49,770
this project for a number of thing for a

00:01:48,570 --> 00:01:51,720
number of reasons I've been teaching

00:01:49,770 --> 00:01:53,730
Scala for quite a while professional

00:01:51,720 --> 00:01:56,400
courses with live band at the companies

00:01:53,730 --> 00:01:58,110
have been in part of but I've been just

00:01:56,400 --> 00:01:59,670
teaching for many many more years I've

00:01:58,110 --> 00:02:01,050
always loved the experience of being

00:01:59,670 --> 00:02:02,940
with someone when they go through those

00:02:01,050 --> 00:02:04,710
aha moments when they don't know

00:02:02,940 --> 00:02:06,960
something and you so facilitated for

00:02:04,710 --> 00:02:09,030
them and they saw that such a go oh

00:02:06,960 --> 00:02:10,950
that's that's a really cool thing so

00:02:09,030 --> 00:02:13,890
when you're part of that process I think

00:02:10,950 --> 00:02:16,140
that's really cool and personally I

00:02:13,890 --> 00:02:18,300
learned a ton of stuff by playing games

00:02:16,140 --> 00:02:19,950
and one of them which is really

00:02:18,300 --> 00:02:22,380
important for me was the English

00:02:19,950 --> 00:02:25,440
language this was the single thing that

00:02:22,380 --> 00:02:28,890
pushed me to learn English playing Zelda

00:02:25,440 --> 00:02:30,720
I got the game on as a kid and I started

00:02:28,890 --> 00:02:32,430
playing and I got to this I knew no

00:02:30,720 --> 00:02:33,870
words in English so I go to my dad and

00:02:32,430 --> 00:02:35,940
he would help me out and he held me out

00:02:33,870 --> 00:02:38,130
for the first five or six or seven times

00:02:35,940 --> 00:02:40,620
and then he gave me a dictionary and

00:02:38,130 --> 00:02:42,000
said have you go the cool thing about it

00:02:40,620 --> 00:02:44,160
though is that when I was going through

00:02:42,000 --> 00:02:46,560
this English didn't seem like homework

00:02:44,160 --> 00:02:48,060
it was just something I it was part of

00:02:46,560 --> 00:02:50,760
the experience it was part of the game

00:02:48,060 --> 00:02:52,200
for me even though the creators of Zelda

00:02:50,760 --> 00:02:55,140
didn't think about this but for me as a

00:02:52,200 --> 00:02:56,520
non-english speaking person I was like

00:02:55,140 --> 00:03:00,510
dude this is just part of the challenge

00:02:56,520 --> 00:03:02,310
right so you know and of course many

00:03:00,510 --> 00:03:03,990
other games taught me different strategy

00:03:02,310 --> 00:03:06,210
thinking and all that and when

00:03:03,990 --> 00:03:09,330
reflecting about that I thought well fun

00:03:06,210 --> 00:03:10,830
is kind of this multiplying element a

00:03:09,330 --> 00:03:12,390
multiplying factor in learning right

00:03:10,830 --> 00:03:13,920
when you're having fun you're more

00:03:12,390 --> 00:03:16,250
engaged than you're paying more

00:03:13,920 --> 00:03:19,290
attention you're not easily distracted

00:03:16,250 --> 00:03:21,570
so I thought well this is sort of like

00:03:19,290 --> 00:03:23,790
an important thing for me right turns

00:03:21,570 --> 00:03:25,830
out I wasn't the first one to come up

00:03:23,790 --> 00:03:28,530
with this idea so Albert Einstein said

00:03:25,830 --> 00:03:29,970
plays the highest form of research and

00:03:28,530 --> 00:03:31,590
I'm pretty sure he was talking about the

00:03:29,970 --> 00:03:34,110
Zelda series of Kings when he said that

00:03:31,590 --> 00:03:35,580
oh by the way you can take that quote

00:03:34,110 --> 00:03:37,500
back home and whenever you're caught

00:03:35,580 --> 00:03:41,640
playing games at work just say I'm doing

00:03:37,500 --> 00:03:44,550
research I sunset it anyone of course

00:03:41,640 --> 00:03:47,640
there's a whole industry area of people

00:03:44,550 --> 00:03:49,020
who want to use games for other things

00:03:47,640 --> 00:03:50,880
more than entertainment right so the

00:03:49,020 --> 00:03:53,459
whole area of serious games and

00:03:50,880 --> 00:03:55,520
educational games and I'm hoping to

00:03:53,459 --> 00:03:59,790
bring a little bit of those ideas into

00:03:55,520 --> 00:04:02,600
the world of scout how many of you have

00:03:59,790 --> 00:04:05,220
read or know of the book called flow a

00:04:02,600 --> 00:04:07,170
few of you I'd really encourage you to

00:04:05,220 --> 00:04:10,320
it's really interesting book and he

00:04:07,170 --> 00:04:12,239
talked about sort of that feeling we get

00:04:10,320 --> 00:04:13,860
and sometimes we call it flow sometimes

00:04:12,239 --> 00:04:16,830
you call it being in this zone right

00:04:13,860 --> 00:04:18,780
when you're doing something that is not

00:04:16,830 --> 00:04:20,549
too easy but not too hard the right

00:04:18,780 --> 00:04:22,320
level of difficulty for you and you have

00:04:20,549 --> 00:04:24,169
some motivation to actually push through

00:04:22,320 --> 00:04:27,060
right so I think this could actually

00:04:24,169 --> 00:04:28,830
summarizes the main idea very well the

00:04:27,060 --> 00:04:31,350
best moments usually occur when a

00:04:28,830 --> 00:04:31,800
person's mind and body are a stretch in

00:04:31,350 --> 00:04:34,770
a ball

00:04:31,800 --> 00:04:35,940
Terry effort you have to want it to

00:04:34,770 --> 00:04:38,490
accomplish something that is difficult

00:04:35,940 --> 00:04:40,500
and worthwhile I have you actually

00:04:38,490 --> 00:04:42,270
putting an effort if it's too easy then

00:04:40,500 --> 00:04:44,009
you get bored and you go away if it's

00:04:42,270 --> 00:04:45,990
too hard you get really frustrated it's

00:04:44,009 --> 00:04:47,879
hard to learn anything but there's sort

00:04:45,990 --> 00:04:50,009
of this area that's the right amount of

00:04:47,879 --> 00:04:51,210
difficulty or jus just motivate it to

00:04:50,009 --> 00:04:53,000
keep going because you because we like

00:04:51,210 --> 00:04:56,370
the challenge okay

00:04:53,000 --> 00:04:58,440
well turns out that learning Scala is

00:04:56,370 --> 00:05:01,110
difficult and if we're here it's

00:04:58,440 --> 00:05:03,449
probably worthwhile for all of us my

00:05:01,110 --> 00:05:05,490
challenge is can we make it fun so that

00:05:03,449 --> 00:05:07,259
people use this multiplying factor of

00:05:05,490 --> 00:05:08,699
being really engaged while learning

00:05:07,259 --> 00:05:14,250
things that might be hard for a lot of

00:05:08,699 --> 00:05:18,479
us okay so without a bit of a story this

00:05:14,250 --> 00:05:20,879
is one one x and one lives in this place

00:05:18,479 --> 00:05:23,759
called Ireland and in this place people

00:05:20,879 --> 00:05:26,069
harvest data manually or they used to

00:05:23,759 --> 00:05:29,340
before the upcoming of these computer

00:05:26,069 --> 00:05:31,139
things so computers appear then with

00:05:29,340 --> 00:05:33,960
them just like we have gravitational

00:05:31,139 --> 00:05:35,610
forces and electromagnetic forces this

00:05:33,960 --> 00:05:40,500
weird forces started to appear in Natal

00:05:35,610 --> 00:05:41,940
and one was called for train C cross

00:05:40,500 --> 00:05:44,550
cross some of you might have done a

00:05:41,940 --> 00:05:47,849
little bit of work on this force or hava

00:05:44,550 --> 00:05:49,169
Oh have I had a little a really cool

00:05:47,849 --> 00:05:51,840
feature which is as you're harvesting

00:05:49,169 --> 00:05:53,340
there was waste that got generated it

00:05:51,840 --> 00:05:54,870
actually collected it for you

00:05:53,340 --> 00:05:57,690
very cool came with a module called

00:05:54,870 --> 00:06:00,060
garbage collector all these things made

00:05:57,690 --> 00:06:01,740
data more efficient and for our time

00:06:00,060 --> 00:06:04,229
things were good but as the usage of

00:06:01,740 --> 00:06:06,779
these tools grew complexity plates

00:06:04,229 --> 00:06:08,370
appeared then you ended up with things

00:06:06,779 --> 00:06:10,050
like might be hard to read there but

00:06:08,370 --> 00:06:12,960
I'll read it for you it's gonna take a

00:06:10,050 --> 00:06:15,000
while Astrid singleton proxy harvest

00:06:12,960 --> 00:06:18,840
factory being and nobody could we did we

00:06:15,000 --> 00:06:22,289
don't know what that is so in detail and

00:06:18,840 --> 00:06:24,599
this powerful magician calls key had

00:06:22,289 --> 00:06:26,940
roamed at alarm for a long time and had

00:06:24,599 --> 00:06:28,680
tamed many many forces and he actually

00:06:26,940 --> 00:06:33,599
discovered one in particular that he

00:06:28,680 --> 00:06:35,580
called Scala now skiing knowing that

00:06:33,599 --> 00:06:38,069
Scala was a really powerful foes for us

00:06:35,580 --> 00:06:40,889
they wanted it to be yielded wisely and

00:06:38,069 --> 00:06:44,099
skillfully so he said about to create an

00:06:40,889 --> 00:06:46,540
order of apprentices and he called it

00:06:44,099 --> 00:06:50,350
he called this the order of

00:06:46,540 --> 00:06:52,390
some call it order ski for short thank

00:06:50,350 --> 00:06:53,010
you you got I work on that joke for like

00:06:52,390 --> 00:06:57,100
an hour

00:06:53,010 --> 00:07:02,070
thank you anyway so let me show you a

00:06:57,100 --> 00:07:04,510
little bit of Scalla quest so we had a a

00:07:02,070 --> 00:07:08,550
Kickstarter project last year which was

00:07:04,510 --> 00:07:10,780
successful and this is where we are now

00:07:08,550 --> 00:07:13,230
what is harder than playing in games

00:07:10,780 --> 00:07:16,780
playing it when the screen is behind you

00:07:13,230 --> 00:07:19,360
anyway so this is catalá quest I'm

00:07:16,780 --> 00:07:20,860
showing you level 3 so on level 1 it's

00:07:19,360 --> 00:07:22,690
very basic you go around the map and

00:07:20,860 --> 00:07:23,530
you're collecting items and as you try

00:07:22,690 --> 00:07:25,870
to collect them you're actually

00:07:23,530 --> 00:07:29,070
presented with questions that you have

00:07:25,870 --> 00:07:31,900
to answer by writing scallop programs

00:07:29,070 --> 00:07:35,280
whereas here you've gotten to a place

00:07:31,900 --> 00:07:39,940
where we actually collected a wand and

00:07:35,280 --> 00:07:43,930
this one allows us to shoot at these

00:07:39,940 --> 00:07:46,120
little goblins here there we go and

00:07:43,930 --> 00:07:51,160
satisfying it again we work on that

00:07:46,120 --> 00:07:53,560
sound for like a week anyway and as you

00:07:51,160 --> 00:07:55,360
go around you and count for NPCs you

00:07:53,560 --> 00:07:57,460
encounter enemies and some of these guys

00:07:55,360 --> 00:07:58,930
are sort of blocking your way and you

00:07:57,460 --> 00:08:03,730
want to go around and make more progress

00:07:58,930 --> 00:08:05,820
so then you explore and then you find oh

00:08:03,730 --> 00:08:09,850
it's gonna be hard you could use a mouse

00:08:05,820 --> 00:08:11,500
there we go so as you go through things

00:08:09,850 --> 00:08:14,050
you have to answer scout questions right

00:08:11,500 --> 00:08:15,970
then some of them and this is one of the

00:08:14,050 --> 00:08:18,160
sort of like teaching mechanisms we use

00:08:15,970 --> 00:08:20,380
we call this micro challenges questions

00:08:18,160 --> 00:08:22,720
that have very very simple answers it

00:08:20,380 --> 00:08:24,910
might be a one-liner very short it might

00:08:22,720 --> 00:08:27,880
be just multiple-choice ABC and D etc

00:08:24,910 --> 00:08:30,400
okay and the idea here is that we're

00:08:27,880 --> 00:08:32,920
giving you very very small bits that you

00:08:30,400 --> 00:08:34,780
can action all right so you could sit

00:08:32,920 --> 00:08:36,400
down and play for 15 minutes 20 minutes

00:08:34,780 --> 00:08:39,190
and then you go home

00:08:36,400 --> 00:08:42,250
and we keep going okay but we also have

00:08:39,190 --> 00:08:44,530
sort of more elaborate challenges where

00:08:42,250 --> 00:08:46,870
you're writing a larger sort of solution

00:08:44,530 --> 00:08:50,220
okay and that bit is important for

00:08:46,870 --> 00:08:50,220
something I'm gonna talk about later

00:08:51,360 --> 00:08:57,660
okay I do that

00:08:58,020 --> 00:09:08,800
there we go okay so that's just a tiny

00:09:04,480 --> 00:09:10,660
tiny bit of the game and I'm gonna do

00:09:08,800 --> 00:09:12,460
something horrible here I'm gonna break

00:09:10,660 --> 00:09:15,130
the barrier because I just realized my

00:09:12,460 --> 00:09:17,320
computer is at 18 percent battery I am

00:09:15,130 --> 00:09:21,250
certain it's gonna die I'm gonna try to

00:09:17,320 --> 00:09:23,560
continue talking as I do this so I just

00:09:21,250 --> 00:09:26,050
showed you just a very small snippet of

00:09:23,560 --> 00:09:27,760
what the game is like and now I wanna

00:09:26,050 --> 00:09:29,980
talk a little bit about sort of like the

00:09:27,760 --> 00:09:32,680
interesting tech technical challenges we

00:09:29,980 --> 00:09:34,360
encounter when building the game okay so

00:09:32,680 --> 00:09:35,980
like I said we had a Kickstarter last

00:09:34,360 --> 00:09:39,220
year that gives us give us some funds to

00:09:35,980 --> 00:09:40,660
move on we have three levels that are

00:09:39,220 --> 00:09:42,550
playable right now we're working on

00:09:40,660 --> 00:09:43,990
level number four and we're hoping to

00:09:42,550 --> 00:09:45,430
have a public release in the next few

00:09:43,990 --> 00:09:47,770
weeks so it really really close we're

00:09:45,430 --> 00:09:50,500
having this out for everyone to take a

00:09:47,770 --> 00:09:53,140
look and play now

00:09:50,500 --> 00:09:54,910
what we've built here is an application

00:09:53,140 --> 00:09:57,190
that runs in your browser using a

00:09:54,910 --> 00:09:58,510
framework called face which is let's see

00:09:57,190 --> 00:10:00,690
a couple heads nodding so maybe you've

00:09:58,510 --> 00:10:04,480
seen this before it's a cool framework

00:10:00,690 --> 00:10:05,350
but JavaScript so you know as good as it

00:10:04,480 --> 00:10:07,750
can be

00:10:05,350 --> 00:10:08,710
the backend is play application okay and

00:10:07,750 --> 00:10:10,450
right now the play application is

00:10:08,710 --> 00:10:13,350
actually quite small I'll talk about a

00:10:10,450 --> 00:10:16,510
couple of interesting bits and in there

00:10:13,350 --> 00:10:18,820
now those tiny little challenges that I

00:10:16,510 --> 00:10:20,020
mentioned all those are small enough

00:10:18,820 --> 00:10:21,490
that they're evaluated on the

00:10:20,020 --> 00:10:24,220
client-side so using regular expressions

00:10:21,490 --> 00:10:25,960
to evaluate those and recognizes are

00:10:24,220 --> 00:10:27,940
great but they're really limited in one

00:10:25,960 --> 00:10:29,500
and what we can do right so the

00:10:27,940 --> 00:10:32,170
questions has to be phrased in a way

00:10:29,500 --> 00:10:34,800
that there really is one or two or three

00:10:32,170 --> 00:10:37,030
solutions and we can validate those okay

00:10:34,800 --> 00:10:39,010
but we have more interesting challenges

00:10:37,030 --> 00:10:40,270
where we give you a lot more freedom you

00:10:39,010 --> 00:10:42,610
can write a lot more code and of course

00:10:40,270 --> 00:10:44,200
those cannot be evaluated using regular

00:10:42,610 --> 00:10:45,580
expressions so actually do send your

00:10:44,200 --> 00:10:48,280
code to the back end needs to be

00:10:45,580 --> 00:10:49,900
compiled and we come back we also write

00:10:48,280 --> 00:10:51,340
for all those exercises we have unit

00:10:49,900 --> 00:10:54,720
tests so we can validate that you think

00:10:51,340 --> 00:10:56,860
the only composite but it's correct okay

00:10:54,720 --> 00:10:58,720
so there are three things I wanted to

00:10:56,860 --> 00:11:00,850
mention in terms of interesting

00:10:58,720 --> 00:11:03,640
challenges that we encountered when

00:11:00,850 --> 00:11:04,300
building this one that has to do with

00:11:03,640 --> 00:11:07,090
how we define

00:11:04,300 --> 00:11:09,100
those levels how we are keeping user

00:11:07,090 --> 00:11:11,530
state and how we compile that code that

00:11:09,100 --> 00:11:13,930
people send to us okay and this is also

00:11:11,530 --> 00:11:16,140
some of the progress we've shown since

00:11:13,930 --> 00:11:20,140
last time we did this talk a year ago so

00:11:16,140 --> 00:11:22,420
the first thing is phaser gives us the

00:11:20,140 --> 00:11:24,850
ability to write levels right we have a

00:11:22,420 --> 00:11:27,100
number of sort of primitives in here and

00:11:24,850 --> 00:11:28,570
when you create a level there are a few

00:11:27,100 --> 00:11:30,400
basic things you have to figure out well

00:11:28,570 --> 00:11:33,270
what's the size of your level how many

00:11:30,400 --> 00:11:36,010
pixels tall and why do you want it to be

00:11:33,270 --> 00:11:37,540
what are the tiles you using what's the

00:11:36,010 --> 00:11:39,340
background what are the background

00:11:37,540 --> 00:11:40,630
images you want to use for those what

00:11:39,340 --> 00:11:43,000
are some of the items that are there

00:11:40,630 --> 00:11:44,800
right so those gems and that player and

00:11:43,000 --> 00:11:46,180
the door or things are not only

00:11:44,800 --> 00:11:47,530
background images you want to interact

00:11:46,180 --> 00:11:49,630
with this right

00:11:47,530 --> 00:11:51,790
we have sounds and we have animations

00:11:49,630 --> 00:11:53,200
all these things are sort of the the

00:11:51,790 --> 00:11:55,360
basic building blocks that we need in

00:11:53,200 --> 00:11:57,390
order to put together level now

00:11:55,360 --> 00:12:00,550
following sorry now following the

00:11:57,390 --> 00:12:02,410
examples on phaser yes and the community

00:12:00,550 --> 00:12:06,760
we started by defining all those things

00:12:02,410 --> 00:12:08,890
in JSON files plain handcrafted JSON

00:12:06,760 --> 00:12:11,260
files and that was fine for level one

00:12:08,890 --> 00:12:13,330
and that was fine for the beginning but

00:12:11,260 --> 00:12:15,730
we quickly ran into issues with writing

00:12:13,330 --> 00:12:19,420
these things manually right so it was

00:12:15,730 --> 00:12:21,100
like pretty obvious candidate for an

00:12:19,420 --> 00:12:22,270
improvement can we do better than just

00:12:21,100 --> 00:12:26,470
writing these things matter

00:12:22,270 --> 00:12:28,840
okay so Scala developer so we created

00:12:26,470 --> 00:12:30,640
this data model on the back end where we

00:12:28,840 --> 00:12:32,500
defined so now all the level definitions

00:12:30,640 --> 00:12:33,940
are in the back end so we created a

00:12:32,500 --> 00:12:36,040
number of classes that represent all

00:12:33,940 --> 00:12:38,110
those primitives in the process of doing

00:12:36,040 --> 00:12:41,590
that we caught a whole bunch of bugs of

00:12:38,110 --> 00:12:43,120
course that with the word dormant and we

00:12:41,590 --> 00:12:46,000
hadn't actually figured this out

00:12:43,120 --> 00:12:47,920
why by playing the game so pushing that

00:12:46,000 --> 00:12:49,120
data model back saved us I don't know

00:12:47,920 --> 00:12:50,890
how many lines I don't have a numbers

00:12:49,120 --> 00:12:53,980
but we have something like 3,000 lines

00:12:50,890 --> 00:12:55,690
of Jason that was handcrafted and now we

00:12:53,980 --> 00:12:58,510
have a couple hundred lines in scale

00:12:55,690 --> 00:13:00,400
okay so serialization for all this was

00:12:58,510 --> 00:13:03,850
trivial we're using place or we just use

00:13:00,400 --> 00:13:06,730
the play base library and all the errors

00:13:03,850 --> 00:13:08,920
we found once we did this we're about

00:13:06,730 --> 00:13:12,190
again bugs that were dormant and we

00:13:08,920 --> 00:13:15,550
hadn't found before so this was a clear

00:13:12,190 --> 00:13:18,070
win for us target said the good thing is

00:13:15,550 --> 00:13:20,650
now see all the serialization happened

00:13:18,070 --> 00:13:22,720
happen for us whatever changes we had to

00:13:20,650 --> 00:13:25,870
do on the front end we're actual box

00:13:22,720 --> 00:13:28,600
that we had to fix okay and this is one

00:13:25,870 --> 00:13:31,210
of those rare situations where there was

00:13:28,600 --> 00:13:33,430
a whole bunch of good and zero bats like

00:13:31,210 --> 00:13:36,120
there was no pain in doing this and it

00:13:33,430 --> 00:13:39,850
was sort of wind all over okay

00:13:36,120 --> 00:13:43,510
now the the next thing I want to talk to

00:13:39,850 --> 00:13:45,160
you about is well what about you start

00:13:43,510 --> 00:13:47,500
playing the game you go around collect a

00:13:45,160 --> 00:13:49,450
few gems and then you go away you log

00:13:47,500 --> 00:13:51,220
out or you close your browser and come

00:13:49,450 --> 00:13:53,410
back how do we keep all that state

00:13:51,220 --> 00:13:55,510
alright so again or applicate or play

00:13:53,410 --> 00:13:57,850
applications very very small is very

00:13:55,510 --> 00:13:59,830
simple it's delegated to these level

00:13:57,850 --> 00:14:02,050
definitions and most of our codes in

00:13:59,830 --> 00:14:03,820
JavaScript but we obviously need to keep

00:14:02,050 --> 00:14:06,100
the state of the user how long how far

00:14:03,820 --> 00:14:08,020
have to be gone what levels or what

00:14:06,100 --> 00:14:10,870
items they've interacted with collected

00:14:08,020 --> 00:14:12,490
etcetera so in looking at this we found

00:14:10,870 --> 00:14:15,400
that this was a perfect candidate for

00:14:12,490 --> 00:14:18,220
event sourcing because as the player is

00:14:15,400 --> 00:14:20,530
going through the game we're just firing

00:14:18,220 --> 00:14:22,360
events to the back end and all those

00:14:20,530 --> 00:14:24,310
event and the back end is had the

00:14:22,360 --> 00:14:26,500
responsibility to figure out which of

00:14:24,310 --> 00:14:29,320
those events are relevant for a current

00:14:26,500 --> 00:14:31,300
state so for example you start a level

00:14:29,320 --> 00:14:34,480
one and you're let's say beside the main

00:14:31,300 --> 00:14:36,040
door and you walk around do nothing else

00:14:34,480 --> 00:14:38,500
you walk around and then you close your

00:14:36,040 --> 00:14:41,200
browser when you come back it's fine to

00:14:38,500 --> 00:14:42,850
start at the initial position right so

00:14:41,200 --> 00:14:45,010
the events that have to do with your

00:14:42,850 --> 00:14:48,730
where you've walked or not particularly

00:14:45,010 --> 00:14:50,080
relevant for state body.feel finish some

00:14:48,730 --> 00:14:52,060
micro challenges and collect an item

00:14:50,080 --> 00:14:53,530
obviously those are important next time

00:14:52,060 --> 00:14:55,660
you come back with one that I've been to

00:14:53,530 --> 00:14:59,110
to be collected whatever that means for

00:14:55,660 --> 00:15:00,760
us okay so we chose to go event sourcing

00:14:59,110 --> 00:15:03,700
with this we use darker persistence

00:15:00,760 --> 00:15:06,640
who's ever done event sourcing with

00:15:03,700 --> 00:15:08,170
active persistence a couple of you so

00:15:06,640 --> 00:15:11,400
I'll show a couple examples which

00:15:08,170 --> 00:15:14,650
hopefully are interesting for you folks

00:15:11,400 --> 00:15:16,660
and and what happens here is that for

00:15:14,650 --> 00:15:18,790
each user that's currently using the

00:15:16,660 --> 00:15:20,620
application we spin up a New Yorker

00:15:18,790 --> 00:15:23,260
actor and that actor is then responsible

00:15:20,620 --> 00:15:27,330
for storing for keeping level and

00:15:23,260 --> 00:15:27,330
storing whatever events are meaningful

00:15:29,790 --> 00:15:37,920
we're using the plug-in to persist to

00:15:34,410 --> 00:15:43,350
dynamodb and this was painless very easy

00:15:37,920 --> 00:15:45,660
to set up it's work great so far oh and

00:15:43,350 --> 00:15:48,380
this is important and this is not

00:15:45,660 --> 00:15:51,300
particular to worker persistence or to

00:15:48,380 --> 00:15:52,890
dynamodb but whenever you using event

00:15:51,300 --> 00:15:54,930
sourcing in general you have to think

00:15:52,890 --> 00:15:57,000
about what's the evolution of your data

00:15:54,930 --> 00:15:59,190
model anything that you're persisting

00:15:57,000 --> 00:16:01,680
you have to think about whenever your

00:15:59,190 --> 00:16:03,660
model changes if you add a new field you

00:16:01,680 --> 00:16:06,690
are the new object you at a new set of

00:16:03,660 --> 00:16:09,840
values what's gonna happen next time you

00:16:06,690 --> 00:16:11,910
load event that or events that were

00:16:09,840 --> 00:16:14,370
written using your previous model right

00:16:11,910 --> 00:16:15,570
so the the evolution of your data model

00:16:14,370 --> 00:16:18,510
is really important here

00:16:15,570 --> 00:16:20,730
can I my do i migrate all of the

00:16:18,510 --> 00:16:23,670
existing data or do I create adapters

00:16:20,730 --> 00:16:25,710
that can read sort of this legacy event

00:16:23,670 --> 00:16:27,900
data types and move it into the newer

00:16:25,710 --> 00:16:33,570
version okay so version of your data

00:16:27,900 --> 00:16:35,490
model is important here so let's see if

00:16:33,570 --> 00:16:39,840
we can go through a couple code examples

00:16:35,490 --> 00:16:42,450
here so the idea here if you've never

00:16:39,840 --> 00:16:44,850
worked with an actor the one line or is

00:16:42,450 --> 00:16:47,760
this an actor is an object that can

00:16:44,850 --> 00:16:50,460
process messages and that lives inside

00:16:47,760 --> 00:16:53,340
this environment where it's safe to do

00:16:50,460 --> 00:16:56,190
mutability and effects okay that's sort

00:16:53,340 --> 00:16:57,990
of the elevator pitch so imagine we're

00:16:56,190 --> 00:16:59,400
inside an actor is this object that is

00:16:57,990 --> 00:17:02,550
sort of in memory it's working with

00:16:59,400 --> 00:17:04,230
processing messages in our case we're

00:17:02,550 --> 00:17:07,320
doing event sourcing those messages or

00:17:04,230 --> 00:17:10,650
events so we expect them to be game

00:17:07,320 --> 00:17:12,870
events so somewhere in here you have

00:17:10,650 --> 00:17:15,360
this receive thing and that receive is

00:17:12,870 --> 00:17:19,560
what gets cold or invoked whenever a new

00:17:15,360 --> 00:17:21,780
message comes in so here we have we've

00:17:19,560 --> 00:17:24,300
created our own object called event

00:17:21,780 --> 00:17:26,070
parser it'll take that string which is

00:17:24,300 --> 00:17:29,010
going to be adjacent coming from or

00:17:26,070 --> 00:17:31,080
JavaScript or application and that thing

00:17:29,010 --> 00:17:33,330
represents some kind of game event again

00:17:31,080 --> 00:17:36,990
you open it or you collect an item you

00:17:33,330 --> 00:17:39,090
finish a challenge successful and then

00:17:36,990 --> 00:17:40,710
we do this and this line in here is very

00:17:39,090 --> 00:17:41,620
very important because this is where we

00:17:40,710 --> 00:17:44,680
say okay

00:17:41,620 --> 00:17:47,230
found an event that we recognize we want

00:17:44,680 --> 00:17:49,630
to first of all persist the thing so

00:17:47,230 --> 00:17:51,550
here persisting happening happens first

00:17:49,630 --> 00:17:55,240
as soon as you get an event that you

00:17:51,550 --> 00:17:57,910
recognize as valid you save it and after

00:17:55,240 --> 00:18:00,309
this is saved then you can update your

00:17:57,910 --> 00:18:01,000
own state the state of this one actor

00:18:00,309 --> 00:18:04,630
okay

00:18:01,000 --> 00:18:07,570
now part of the magic in in here and the

00:18:04,630 --> 00:18:09,250
update state is there's a discrimination

00:18:07,570 --> 00:18:12,730
between which events are actually

00:18:09,250 --> 00:18:15,809
meaningful for my cursed state and which

00:18:12,730 --> 00:18:19,840
ones are not I'll give you an example

00:18:15,809 --> 00:18:21,940
some of the events we collect we we know

00:18:19,840 --> 00:18:24,250
we'll gonna want them to do sort of

00:18:21,940 --> 00:18:27,550
statistics or to understand YouTube user

00:18:24,250 --> 00:18:30,010
behavior later when you start a micro

00:18:27,550 --> 00:18:31,630
challenge you might try and fail two

00:18:30,010 --> 00:18:34,450
three four times before you actually

00:18:31,630 --> 00:18:36,700
succeed well right now in our game we

00:18:34,450 --> 00:18:39,400
only care about the successes you you

00:18:36,700 --> 00:18:40,840
move forward when you succeed but we're

00:18:39,400 --> 00:18:42,760
actually recording all those failures

00:18:40,840 --> 00:18:45,190
because we later want to understand user

00:18:42,760 --> 00:18:46,660
behavior and go well this question in

00:18:45,190 --> 00:18:48,790
this particular question people are

00:18:46,660 --> 00:18:50,800
getting a lot more failures than the

00:18:48,790 --> 00:18:53,050
rest right so to find sort of these

00:18:50,800 --> 00:18:55,150
abnormal behaviors maybe the question is

00:18:53,050 --> 00:18:57,340
not phrased well maybe there's a bug and

00:18:55,150 --> 00:18:59,800
and how we're actually checking the

00:18:57,340 --> 00:19:02,500
solution okay so this is where you

00:18:59,800 --> 00:19:04,030
discriminate between events that are

00:19:02,500 --> 00:19:08,530
actually meaningful for your current

00:19:04,030 --> 00:19:13,120
state versus the ones that are not okay

00:19:08,530 --> 00:19:15,220
so with that oh and this is the update

00:19:13,120 --> 00:19:16,960
state and again this is where with

00:19:15,220 --> 00:19:18,970
pattern matching would we decide which

00:19:16,960 --> 00:19:25,690
one or which events are actually

00:19:18,970 --> 00:19:27,510
meaningful which ones are not okay so I

00:19:25,690 --> 00:19:32,860
think that's all I'm gonna say about

00:19:27,510 --> 00:19:35,559
about that actually know a couple more

00:19:32,860 --> 00:19:37,720
things so the idea here is when we

00:19:35,559 --> 00:19:40,120
persist we're actually telling akka

00:19:37,720 --> 00:19:42,340
persistence take this object save it

00:19:40,120 --> 00:19:44,320
somewhere whatever the they configured

00:19:42,340 --> 00:19:46,660
plug in a figure method for a

00:19:44,320 --> 00:19:51,400
serialization is so in our case that

00:19:46,660 --> 00:19:53,890
goes to dynamodb okay and then the other

00:19:51,400 --> 00:19:55,720
thing is our system takes care of

00:19:53,890 --> 00:19:57,430
everything that has to do

00:19:55,720 --> 00:20:00,460
with rehydrating that actor when he

00:19:57,430 --> 00:20:03,250
needs to when he needs to be alive again

00:20:00,460 --> 00:20:04,720
right so it's okay it's highly

00:20:03,250 --> 00:20:07,210
configurable and you can say well you

00:20:04,720 --> 00:20:09,370
know keep these many actors alive or

00:20:07,210 --> 00:20:11,230
whatever right so we in our application

00:20:09,370 --> 00:20:14,530
we don't have to worry about those

00:20:11,230 --> 00:20:16,540
actors sort of being in memory right

00:20:14,530 --> 00:20:19,420
I could persistently or I could takes

00:20:16,540 --> 00:20:24,430
care of all those details for us okay

00:20:19,420 --> 00:20:29,380
it's pretty cool okay so that was thing

00:20:24,430 --> 00:20:33,630
number two thing number three which has

00:20:29,380 --> 00:20:35,830
occupied quite a bit of our time lately

00:20:33,630 --> 00:20:37,840
again some of those challenges we

00:20:35,830 --> 00:20:40,300
checked on the on the client side those

00:20:37,840 --> 00:20:41,470
are the easy ones the tougher ones which

00:20:40,300 --> 00:20:43,150
is where a lot of their learning is

00:20:41,470 --> 00:20:45,910
going to occur we actually need to take

00:20:43,150 --> 00:20:48,520
that code and compile it okay so we need

00:20:45,910 --> 00:20:50,410
to take code that that you've submitted

00:20:48,520 --> 00:20:54,760
and actually compile it on your back-end

00:20:50,410 --> 00:20:56,200
okay so we evaluate a number of

00:20:54,760 --> 00:20:57,970
different solutions on how to do this

00:20:56,200 --> 00:20:59,890
right so we have of course the ability

00:20:57,970 --> 00:21:02,050
to compile code in the backend but what

00:20:59,890 --> 00:21:05,770
what does the architecture look like for

00:21:02,050 --> 00:21:08,200
that so we needed something we needed

00:21:05,770 --> 00:21:09,850
something that was of course inexpensive

00:21:08,200 --> 00:21:11,190
so this is a garage project we don't

00:21:09,850 --> 00:21:13,330
have a lot of money to spend

00:21:11,190 --> 00:21:15,070
we need something scalable because

00:21:13,330 --> 00:21:18,550
clearly we're gonna have a billions of

00:21:15,070 --> 00:21:20,710
users for this game right thank you

00:21:18,550 --> 00:21:24,070
thanks for the optimism for those who

00:21:20,710 --> 00:21:25,270
laughed so but we need something that

00:21:24,070 --> 00:21:27,010
can scale right we know that

00:21:25,270 --> 00:21:29,050
compilations heart compilation takes a

00:21:27,010 --> 00:21:31,120
lot of CPU time so we need to make sure

00:21:29,050 --> 00:21:34,210
that's not affecting the rest of the

00:21:31,120 --> 00:21:38,320
performance in our game right security

00:21:34,210 --> 00:21:40,530
of course so code can be malicious by

00:21:38,320 --> 00:21:43,870
intent or and can be unintentionally

00:21:40,530 --> 00:21:45,700
buggy right so we're gonna process code

00:21:43,870 --> 00:21:47,440
that we don't know it's actually safe so

00:21:45,700 --> 00:21:51,520
we need to make sure that that actually

00:21:47,440 --> 00:21:57,660
is taken care of okay which is why we

00:21:51,520 --> 00:22:02,530
ended up with an awesome lambda

00:21:57,660 --> 00:22:04,240
parentheses here I think it's really sad

00:22:02,530 --> 00:22:07,570
state of affairs that when you google

00:22:04,240 --> 00:22:10,360
amazon you get at home a ton of results

00:22:07,570 --> 00:22:13,179
about amazon.com and not about the

00:22:10,360 --> 00:22:14,980
powerful Greek warriors right there are

00:22:13,179 --> 00:22:16,210
at least two Amazon's that I can think

00:22:14,980 --> 00:22:19,870
of they're a lot more important that

00:22:16,210 --> 00:22:22,210
they've just bases this is one right the

00:22:19,870 --> 00:22:25,390
other one the big Amazon River in South

00:22:22,210 --> 00:22:26,920
America so actually having a second

00:22:25,390 --> 00:22:29,890
parenthesis I had an idea when doing

00:22:26,920 --> 00:22:32,440
this about a plugin for your browser

00:22:29,890 --> 00:22:35,110
that just once in a while gives you

00:22:32,440 --> 00:22:36,970
results or your search engine results

00:22:35,110 --> 00:22:39,700
that actually matter right so if your

00:22:36,970 --> 00:22:42,640
google amazon you get this instead of

00:22:39,700 --> 00:22:46,590
amazon.com hey ray skip hawk backing

00:22:42,640 --> 00:22:48,460
track so we looked at a number of

00:22:46,590 --> 00:22:50,860
alternatives but I was allowed to have a

00:22:48,460 --> 00:22:54,070
few things that were really attractive

00:22:50,860 --> 00:22:56,830
for us one is that of course Samsung

00:22:54,070 --> 00:22:59,470
camera I'm a Sun lambda can run any JVM

00:22:56,830 --> 00:23:03,190
app by the way she'd ask who's worked

00:22:59,470 --> 00:23:06,730
with Amazon Amazon lambda before okay so

00:23:03,190 --> 00:23:08,890
a few of you the the again the one line

00:23:06,730 --> 00:23:11,500
of ramazan lambda is that you push

00:23:08,890 --> 00:23:13,600
something up to that infrastructure that

00:23:11,500 --> 00:23:16,630
looks like a function hence the name

00:23:13,600 --> 00:23:18,610
lambda it has an entry point in and has

00:23:16,630 --> 00:23:22,090
some kind of result and it's running

00:23:18,610 --> 00:23:23,830
this very isolated space right the way

00:23:22,090 --> 00:23:25,510
it works is you push a java application

00:23:23,830 --> 00:23:28,450
that has a main method an entry point

00:23:25,510 --> 00:23:30,340
that will process requests right so you

00:23:28,450 --> 00:23:32,910
can wire that to a number of different

00:23:30,340 --> 00:23:38,200
connectors one of them being an HTTP

00:23:32,910 --> 00:23:40,750
connected right okay so an Amazon lambda

00:23:38,200 --> 00:23:42,150
can run any JVM app also no J yes but we

00:23:40,750 --> 00:23:44,440
don't care about those right now

00:23:42,150 --> 00:23:46,120
we can pack a compiler in that

00:23:44,440 --> 00:23:49,059
application of course which is what

00:23:46,120 --> 00:23:51,940
we've done but more importantly that

00:23:49,059 --> 00:23:55,300
lambda is very very restricted on what

00:23:51,940 --> 00:23:57,690
it can do right so it has no disk

00:23:55,300 --> 00:23:59,679
storage to screw up you can limit

00:23:57,690 --> 00:24:00,429
connectivity as much as you want

00:23:59,679 --> 00:24:03,520
etcetera right

00:24:00,429 --> 00:24:05,290
and more importantly if one dies there's

00:24:03,520 --> 00:24:07,300
a whole bunch of others that can be spun

00:24:05,290 --> 00:24:09,429
up so you can configure you have fairly

00:24:07,300 --> 00:24:10,930
fine-grained configuration on how you

00:24:09,429 --> 00:24:12,310
want these to behave

00:24:10,930 --> 00:24:15,550
you typically because there's some

00:24:12,310 --> 00:24:17,590
warm-up sort of period when you bring up

00:24:15,550 --> 00:24:20,350
an amazon lambda you want it to stick

00:24:17,590 --> 00:24:22,570
around for a while if it's not used in a

00:24:20,350 --> 00:24:23,710
few seconds then you bring it down but

00:24:22,570 --> 00:24:26,920
you can configure it how many of these

00:24:23,710 --> 00:24:28,600
things you want right and again the the

00:24:26,920 --> 00:24:33,010
how to configure this actually fairly

00:24:28,600 --> 00:24:36,390
fairly easy so this actually fit our

00:24:33,010 --> 00:24:39,340
model very well we found however that

00:24:36,390 --> 00:24:41,230
packaging and uploading scale

00:24:39,340 --> 00:24:43,420
application to Amazon lambda was less

00:24:41,230 --> 00:24:47,500
than trivial to actually spend a few

00:24:43,420 --> 00:24:50,620
cycles figuring out exactly how this was

00:24:47,500 --> 00:24:52,300
to be done ran into a ton of issues with

00:24:50,620 --> 00:24:56,020
class loaders whenever we're trying to

00:24:52,300 --> 00:24:59,860
do reflection in there but anyway we've

00:24:56,020 --> 00:25:03,100
we sort of over that hum now so we do

00:24:59,860 --> 00:25:05,580
have we were able to now have an Amazon

00:25:03,100 --> 00:25:08,290
lambda that can compile the user code

00:25:05,580 --> 00:25:10,240
this was largely largely the work of

00:25:08,290 --> 00:25:12,610
Modi Co one of the handsome fellows you

00:25:10,240 --> 00:25:14,620
saw at the beginning and he's published

00:25:12,610 --> 00:25:16,660
sort of a distillation of that and to

00:25:14,620 --> 00:25:17,980
small github repo so if you're ever

00:25:16,660 --> 00:25:19,840
interested in doing something like that

00:25:17,980 --> 00:25:21,520
I encourage you to take a look and

00:25:19,840 --> 00:25:25,660
you'll save two or three days of work on

00:25:21,520 --> 00:25:27,310
figuring out the details okay so this is

00:25:25,660 --> 00:25:29,440
great because this gives us now a model

00:25:27,310 --> 00:25:32,020
aware or play app it's very lightweight

00:25:29,440 --> 00:25:33,880
does very little work so we'll have a

00:25:32,020 --> 00:25:35,500
couple now it's there just for

00:25:33,880 --> 00:25:39,010
redundancy cuz we're really only useful

00:25:35,500 --> 00:25:41,650
we only really need one right even for

00:25:39,010 --> 00:25:43,060
the billion users that we'll have and we

00:25:41,650 --> 00:25:45,700
have the completion which is the hard

00:25:43,060 --> 00:25:50,290
work sort of separated into an Amazon

00:25:45,700 --> 00:25:54,190
lambda okay so that's sort of the state

00:25:50,290 --> 00:25:56,230
of affairs for Scala quest again we're

00:25:54,190 --> 00:25:58,780
working level 4 now we'll be publishing

00:25:56,230 --> 00:26:02,590
something very very soon in the next few

00:25:58,780 --> 00:26:03,820
weeks for everyone to try out stay tuned

00:26:02,590 --> 00:26:06,700
if you think this is a cool project

00:26:03,820 --> 00:26:08,590
follow us on Twitter or on mailing lists

00:26:06,700 --> 00:26:11,350
people apparently still do mailing lists

00:26:08,590 --> 00:26:12,910
right so take a take a look at Scala

00:26:11,350 --> 00:26:16,120
quest comm and you can follow us there

00:26:12,910 --> 00:26:19,000
okay that's all I have I think I'm a

00:26:16,120 --> 00:26:22,920
little early so if anyone has any

00:26:19,000 --> 00:26:22,920
questions I'm happy to answer this

00:26:27,190 --> 00:26:34,190
yeah did you consider using sky ojs

00:26:31,820 --> 00:26:36,380
instead of Amazon lambda I'm especially

00:26:34,190 --> 00:26:39,980
thinking of this kind of field which has

00:26:36,380 --> 00:26:43,880
an extremely fast compile and run loop

00:26:39,980 --> 00:26:44,840
yeah we definitely I'll repeat it ok so

00:26:43,880 --> 00:26:47,630
the question is whether we consider

00:26:44,840 --> 00:26:49,669
using Scala Jai yes and as an example

00:26:47,630 --> 00:26:53,510
it's got a fiddle who-who does something

00:26:49,669 --> 00:26:55,250
similar yes we did we decided against

00:26:53,510 --> 00:26:57,350
that for very practical reasons

00:26:55,250 --> 00:26:59,059
this project has one full-time developer

00:26:57,350 --> 00:27:02,149
who knew zero scallop before this

00:26:59,059 --> 00:27:05,389
project so it was hard to have him also

00:27:02,149 --> 00:27:07,100
learn Scala yes if I was to do this from

00:27:05,389 --> 00:27:23,029
scratch I would probably use colleges

00:27:07,100 --> 00:27:25,909
yeah yeah the question how have you made

00:27:23,029 --> 00:27:30,559
decisions about topics to teach or not

00:27:25,909 --> 00:27:32,870
teach we we follow the benevolent

00:27:30,559 --> 00:27:34,460
dictator model so I get to decide

00:27:32,870 --> 00:27:37,490
anything that has to do with that I

00:27:34,460 --> 00:27:40,070
taught the live band training courses

00:27:37,490 --> 00:27:42,110
for a few years so I have a good idea of

00:27:40,070 --> 00:27:45,830
a progression that I think works for

00:27:42,110 --> 00:27:48,169
newcomers and that was hit the we

00:27:45,830 --> 00:27:49,279
definitely our target for the game and I

00:27:48,169 --> 00:27:51,350
should probably mention this is the

00:27:49,279 --> 00:27:52,639
beginning our target are people who know

00:27:51,350 --> 00:27:54,110
how to code they just want to learn the

00:27:52,639 --> 00:27:55,880
language so we're not teaching people

00:27:54,110 --> 00:27:59,149
how to program we're gonna teach him

00:27:55,880 --> 00:28:02,179
what a loop is or what iOS they expect

00:27:59,149 --> 00:28:03,980
that they know that there's no we don't

00:28:02,179 --> 00:28:05,389
make any mention to specific language

00:28:03,980 --> 00:28:08,480
background so we don't say this is like

00:28:05,389 --> 00:28:12,470
Java X or Java Y but obviously that

00:28:08,480 --> 00:28:15,200
makes it easier yeah is there a target

00:28:12,470 --> 00:28:18,500
age range sorry is there a target age

00:28:15,200 --> 00:28:20,360
range is it all adults er age doesn't

00:28:18,500 --> 00:28:21,950
matter as much but definitely the

00:28:20,360 --> 00:28:25,010
background having some programming

00:28:21,950 --> 00:28:27,070
background we are not immediately

00:28:25,010 --> 00:28:29,419
targeting schools or universities

00:28:27,070 --> 00:28:30,770
although again university students

00:28:29,419 --> 00:28:34,550
who've already done a bit of programming

00:28:30,770 --> 00:28:36,470
can perfectly jump into this

00:28:34,550 --> 00:28:39,020
teaching children so I think a very

00:28:36,470 --> 00:28:42,320
different sort of experience and I'm not

00:28:39,020 --> 00:28:43,910
sure this format would work great but

00:28:42,320 --> 00:28:47,990
something I'd definitely like to look

00:28:43,910 --> 00:28:54,650
into later yeah I think there was

00:28:47,990 --> 00:28:56,930
another one would it be possible to them

00:28:54,650 --> 00:28:58,810
a little more how users are prompted to

00:28:56,930 --> 00:29:01,100
code something and how they enter it

00:28:58,810 --> 00:29:04,790
sure all right you're not ready for that

00:29:01,100 --> 00:29:06,260
that's possible yes so yeah I can do a

00:29:04,790 --> 00:29:08,750
bit more of a demo and maybe start from

00:29:06,260 --> 00:29:11,450
from level one why don't we leave that

00:29:08,750 --> 00:29:13,730
for the very end so that people who want

00:29:11,450 --> 00:29:14,780
to see it can say are there any other

00:29:13,730 --> 00:29:19,280
questions

00:29:14,780 --> 00:29:22,520
besides demo yes how do I get an account

00:29:19,280 --> 00:29:24,040
yes how do I try it so it's not public

00:29:22,520 --> 00:29:28,280
yet but it will be in the next few weeks

00:29:24,040 --> 00:29:31,190
so right now follow us sorry it will be

00:29:28,280 --> 00:29:34,280
freemium so you'll get to you'll get to

00:29:31,190 --> 00:29:36,710
try it out yes this is meant to be a

00:29:34,280 --> 00:29:38,750
self-sustaining project so we want we

00:29:36,710 --> 00:29:41,350
want licensing we want to sell licenses

00:29:38,750 --> 00:29:41,350

YouTube URL: https://www.youtube.com/watch?v=jCyp9-GbXvE


