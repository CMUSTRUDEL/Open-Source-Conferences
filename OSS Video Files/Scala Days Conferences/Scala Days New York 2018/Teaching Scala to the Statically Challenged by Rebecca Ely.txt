Title: Teaching Scala to the Statically Challenged by Rebecca Ely
Publication date: 2018-09-22
Playlist: Scala Days New York 2018
Description: 
	This video was recorded at Scala Days New York 2018
Follow us on Twitter @ScalaDays or visit our website for more information http://scaladays.org 

More information and the abstract can be found here:
https://na.scaladays.org/schedule/teaching-scala-to-the-statically-challenged
Captions: 
	00:00:03,600 --> 00:00:08,160
this is on teaching Scala to the

00:00:06,149 --> 00:00:11,250
statically challenged my name is Rebecca

00:00:08,160 --> 00:00:13,469
Ely I am a software engineer on the

00:00:11,250 --> 00:00:17,099
SPARC platform team at Bloomberg which

00:00:13,469 --> 00:00:19,529
means that I use Scala to write tooling

00:00:17,099 --> 00:00:22,890
and infrastructure to support sparked

00:00:19,529 --> 00:00:24,450
adoption across Bloomberg now it's a

00:00:22,890 --> 00:00:27,480
little hard to see but I'm really

00:00:24,450 --> 00:00:29,520
curious to know who here wrote code in

00:00:27,480 --> 00:00:33,960
at least one statically typed language

00:00:29,520 --> 00:00:37,790
before learning Scala yeah it's a whole

00:00:33,960 --> 00:00:42,780
lot of the room who here had not anybody

00:00:37,790 --> 00:00:45,360
okay nobody just me that who here

00:00:42,780 --> 00:00:47,370
taught Scala or has taught Scala is is

00:00:45,360 --> 00:00:48,840
currently teaching Scala to someone who

00:00:47,370 --> 00:00:50,340
hadn't done any statically typed

00:00:48,840 --> 00:00:53,460
languages yeah that's a lot of people

00:00:50,340 --> 00:00:57,390
and who here anticipates that they'll be

00:00:53,460 --> 00:00:59,460
doing that in the future great and to

00:00:57,390 --> 00:01:02,149
hear is just interested in this topic

00:00:59,460 --> 00:01:05,850
and has been going to every teaching Oh

00:01:02,149 --> 00:01:07,620
lecture all day great and who is here

00:01:05,850 --> 00:01:10,229
because they're in the wrong room and

00:01:07,620 --> 00:01:11,100
they're about to head out all right a

00:01:10,229 --> 00:01:16,440
hundred percent

00:01:11,100 --> 00:01:18,900
great so yes as you may have guessed I

00:01:16,440 --> 00:01:21,090
myself came to Scala statically

00:01:18,900 --> 00:01:22,740
challenged and we'll get a little bit

00:01:21,090 --> 00:01:24,120
more into what that means in a few

00:01:22,740 --> 00:01:26,820
minutes

00:01:24,120 --> 00:01:28,979
first of all I want to clarify there are

00:01:26,820 --> 00:01:30,870
a lot of awesome talks about teaching

00:01:28,979 --> 00:01:33,479
Scala at this conference many of them

00:01:30,870 --> 00:01:36,840
are focused on taking complete code

00:01:33,479 --> 00:01:38,430
newbies from zero to Scala and I'm

00:01:36,840 --> 00:01:40,940
really excited about those talks this is

00:01:38,430 --> 00:01:44,070
not one of them this is a talk about

00:01:40,940 --> 00:01:46,950
teaching Scala to folks who are already

00:01:44,070 --> 00:01:48,530
coders just from a more non-traditional

00:01:46,950 --> 00:01:51,530
background as I like to call them

00:01:48,530 --> 00:01:51,530
trailblazers

00:01:51,590 --> 00:01:58,830
now this room what I can see of it is

00:01:55,640 --> 00:02:00,360
clearly some Scala experts we are in the

00:01:58,830 --> 00:02:04,409
expert track we are at a Scala

00:02:00,360 --> 00:02:06,270
conference and well the Scala content of

00:02:04,409 --> 00:02:09,720
this talk should be accessible to anyone

00:02:06,270 --> 00:02:12,389
who's seen Scala before the goal of the

00:02:09,720 --> 00:02:13,829
talk is really to address some of the

00:02:12,389 --> 00:02:16,200
challenges that come up when you are

00:02:13,829 --> 00:02:17,250
teaching something that you yourself

00:02:16,200 --> 00:02:18,930
have so much

00:02:17,250 --> 00:02:21,150
expertise in that you don't necessarily

00:02:18,930 --> 00:02:22,800
remember what it was like to be a

00:02:21,150 --> 00:02:25,350
beginner

00:02:22,800 --> 00:02:27,330
now speaking of expertise my background

00:02:25,350 --> 00:02:29,940
is in teaching most of the jobs that I

00:02:27,330 --> 00:02:33,210
held before transitioning into tech were

00:02:29,940 --> 00:02:36,600
teaching in English in Hebrew in

00:02:33,210 --> 00:02:40,250
mathematics in biology and most relevant

00:02:36,600 --> 00:02:43,650
for today in synchronized swimming and

00:02:40,250 --> 00:02:45,930
you may be wondering why are you here at

00:02:43,650 --> 00:02:48,450
this Scala conference and not in a

00:02:45,930 --> 00:02:50,340
classroom right now and the extremely

00:02:48,450 --> 00:02:52,350
simple answer is it's summertime most

00:02:50,340 --> 00:02:55,020
American classrooms do not have students

00:02:52,350 --> 00:02:57,810
in them but the real answer is that

00:02:55,020 --> 00:03:00,540
while teaching was really interesting

00:02:57,810 --> 00:03:02,610
and conceptually I got a lot out of it

00:03:00,540 --> 00:03:04,770
day to day it wasn't the sort of

00:03:02,610 --> 00:03:06,690
challenges that motivate me the way that

00:03:04,770 --> 00:03:11,070
the challenges that I've found in tech

00:03:06,690 --> 00:03:15,660
do and so we are not here for me to

00:03:11,070 --> 00:03:17,340
bully or sell you into a life of scala

00:03:15,660 --> 00:03:19,560
teacher hood this is not about

00:03:17,340 --> 00:03:21,030
converting you to a new career this is

00:03:19,560 --> 00:03:23,070
about making the mentorship

00:03:21,030 --> 00:03:27,330
opportunities that you choose or have

00:03:23,070 --> 00:03:32,310
chosen for you more rewarding and easy

00:03:27,330 --> 00:03:33,690
on you and on your mentees so let's talk

00:03:32,310 --> 00:03:36,600
a little more about what we mean by

00:03:33,690 --> 00:03:38,970
trailblazers these are coders who come

00:03:36,600 --> 00:03:43,049
from less traditional backgrounds than

00:03:38,970 --> 00:03:45,360
your average CS graduate into tech I

00:03:43,049 --> 00:03:47,160
personally joined Bloomberg straight out

00:03:45,360 --> 00:03:50,640
of a boot camp where I had learned

00:03:47,160 --> 00:03:53,100
Python and JavaScript I had I knew

00:03:50,640 --> 00:03:55,739
absolutely nothing about C++ I had

00:03:53,100 --> 00:03:57,720
written a single fizzbuzz application in

00:03:55,739 --> 00:04:01,350
Java and I had never even heard of

00:03:57,720 --> 00:04:04,700
Haskell this is one of the industry's

00:04:01,350 --> 00:04:07,530
largest growing pools of talent and

00:04:04,700 --> 00:04:09,720
we're talking about bootcampers we're

00:04:07,530 --> 00:04:12,510
talking about data scientists we're

00:04:09,720 --> 00:04:14,280
talking about students who took a few

00:04:12,510 --> 00:04:15,840
courses in computer science and really

00:04:14,280 --> 00:04:18,540
enjoyed themselves but didn't have time

00:04:15,840 --> 00:04:21,780
to go back and do the full major people

00:04:18,540 --> 00:04:24,180
who are self-taught and find languages

00:04:21,780 --> 00:04:26,190
like Python or Ruby a really easy way to

00:04:24,180 --> 00:04:29,190
get into coding and of course web

00:04:26,190 --> 00:04:30,500
developers folks who you know have a lot

00:04:29,190 --> 00:04:32,030
of JavaScript expiry

00:04:30,500 --> 00:04:35,060
and just not much statically-typed

00:04:32,030 --> 00:04:39,620
experience these are people that you

00:04:35,060 --> 00:04:41,570
have hired because they are they have

00:04:39,620 --> 00:04:44,270
great projects that they've written

00:04:41,570 --> 00:04:45,590
maybe they have some relevant technical

00:04:44,270 --> 00:04:48,050
experience that's going to be of great

00:04:45,590 --> 00:04:51,800
value to your team they probably have

00:04:48,050 --> 00:04:53,330
some great communication skills or you

00:04:51,800 --> 00:04:55,730
know they generally have a whole lot of

00:04:53,330 --> 00:04:58,810
gumption and can bring a really cool

00:04:55,730 --> 00:05:02,240
mood to the team and some great energy

00:04:58,810 --> 00:05:04,280
now when I started at Bloomberg

00:05:02,240 --> 00:05:07,400
two-and-a-half years ago all of the

00:05:04,280 --> 00:05:09,920
beginner resources that I could find for

00:05:07,400 --> 00:05:11,660
learning Scala assumed knowledge of at

00:05:09,920 --> 00:05:15,380
least one statically typed language like

00:05:11,660 --> 00:05:17,900
Java they would introduce concepts that

00:05:15,380 --> 00:05:20,720
I had never even heard of or even slide

00:05:17,900 --> 00:05:25,970
right past those concepts with phrases

00:05:20,720 --> 00:05:29,060
like unlike in Haskell or you know a any

00:05:25,970 --> 00:05:31,880
ref in Scala corresponds to object in

00:05:29,060 --> 00:05:34,040
Java which means that I had to learn

00:05:31,880 --> 00:05:35,720
about object in Java and learn enough

00:05:34,040 --> 00:05:38,180
Java to understand where object was

00:05:35,720 --> 00:05:40,130
coming from before I could begin to

00:05:38,180 --> 00:05:42,890
understand the concept that I actually

00:05:40,130 --> 00:05:47,990
needed to move forward in my Scala study

00:05:42,890 --> 00:05:51,229
and work and well I do I have seen this

00:05:47,990 --> 00:05:55,030
situation getting better over the past

00:05:51,229 --> 00:05:57,590
few years I do still see this gap of

00:05:55,030 --> 00:06:01,220
resources that are accessible for

00:05:57,590 --> 00:06:03,650
non-traditional beginners as one of the

00:06:01,220 --> 00:06:06,710
as sort of the lowest hanging fruit of

00:06:03,650 --> 00:06:10,250
what we need to address to bring more

00:06:06,710 --> 00:06:13,280
and more diverse engineers into Scala

00:06:10,250 --> 00:06:16,130
and as teachers and as mentors it falls

00:06:13,280 --> 00:06:21,169
on us to mind this gap as we're helping

00:06:16,130 --> 00:06:23,660
to bring people into the fold now I can

00:06:21,169 --> 00:06:26,690
hear you all thinking Ely clearly you

00:06:23,660 --> 00:06:28,669
are magnificent Blumberg is so lucky to

00:06:26,690 --> 00:06:32,750
have you and I wish we could hire 10 of

00:06:28,669 --> 00:06:35,510
you but why should my team be bringing

00:06:32,750 --> 00:06:40,160
on folks like this who don't even know

00:06:35,510 --> 00:06:42,110
public from static and I have one really

00:06:40,160 --> 00:06:44,150
big answer for you which is take a look

00:06:42,110 --> 00:06:45,860
at this job board

00:06:44,150 --> 00:06:49,070
a couple of years ago at Scala by the

00:06:45,860 --> 00:06:51,920
bay on the left side we can see the 20

00:06:49,070 --> 00:06:54,260
people who were looking for work at this

00:06:51,920 --> 00:06:56,330
conference experienced Scala devs and on

00:06:54,260 --> 00:06:58,880
the right side we can see the you know

00:06:56,330 --> 00:07:01,340
50 companies and teams that were looking

00:06:58,880 --> 00:07:03,350
to hire one or more Scala engineers

00:07:01,340 --> 00:07:06,170
there's clearly a disconnect here and

00:07:03,350 --> 00:07:09,020
there's clearly some room for us to try

00:07:06,170 --> 00:07:11,750
new strategies to bring people in on top

00:07:09,020 --> 00:07:13,820
of that some of the benefits of bringing

00:07:11,750 --> 00:07:17,210
these types of people specifically these

00:07:13,820 --> 00:07:20,000
junior engineers onto your team are for

00:07:17,210 --> 00:07:23,660
you it can be extremely rewarding if you

00:07:20,000 --> 00:07:25,910
enjoy teaching and even I do on occasion

00:07:23,660 --> 00:07:28,070
you also get a chance to learn through a

00:07:25,910 --> 00:07:31,820
beginner's eyes as they say the best way

00:07:28,070 --> 00:07:33,980
to learn is to teach your team will be

00:07:31,820 --> 00:07:36,770
bringing on diverse experiences and

00:07:33,980 --> 00:07:39,590
perspectives and studies have shown that

00:07:36,770 --> 00:07:43,220
more diverse teams make better decisions

00:07:39,590 --> 00:07:45,440
and are more effective you also get a

00:07:43,220 --> 00:07:47,240
chance to mold them in your image now

00:07:45,440 --> 00:07:52,160
tell me who here has opinions about

00:07:47,240 --> 00:07:54,470
Scala alright well now is your chance to

00:07:52,160 --> 00:07:59,980
turn those opinions into facts for

00:07:54,470 --> 00:08:03,230
someone and they won't disagree with you

00:07:59,980 --> 00:08:05,870
for the entire Scala community you could

00:08:03,230 --> 00:08:09,560
be bringing in your next favorite Scala

00:08:05,870 --> 00:08:11,540
dev personally Kelly Robinson you also

00:08:09,560 --> 00:08:13,670
where we also will get the benefit of

00:08:11,540 --> 00:08:16,850
the silly questions that only a beginner

00:08:13,670 --> 00:08:19,520
would ask they question assumptions that

00:08:16,850 --> 00:08:22,250
all experts take for granted and can

00:08:19,520 --> 00:08:24,860
find you know wrong assumptions within

00:08:22,250 --> 00:08:26,470
that also the more silly questions that

00:08:24,860 --> 00:08:29,060
there are out there on Stack Overflow

00:08:26,470 --> 00:08:31,880
the easier it'll be the lower the

00:08:29,060 --> 00:08:34,610
barriers to entry for the next round of

00:08:31,880 --> 00:08:36,920
folks who are learning Scala which means

00:08:34,610 --> 00:08:38,720
that a few years from now when you go to

00:08:36,920 --> 00:08:42,130
hire some new Scala devs there'll be a

00:08:38,720 --> 00:08:45,740
much wider pool of people to hire from

00:08:42,130 --> 00:08:48,560
now I can tell you're with me

00:08:45,740 --> 00:08:53,270
novices are great but I need to remind

00:08:48,560 --> 00:08:56,560
you there are a few gaps in what they

00:08:53,270 --> 00:08:57,860
know that you will be responsible for

00:08:56,560 --> 00:09:00,320
covering

00:08:57,860 --> 00:09:04,519
and here are some tips from my

00:09:00,320 --> 00:09:06,320
experience learning Scala and also as

00:09:04,519 --> 00:09:08,300
I've started mentoring and as I've

00:09:06,320 --> 00:09:10,640
talked with folks who have had these

00:09:08,300 --> 00:09:11,480
mentoring experiences these are not here

00:09:10,640 --> 00:09:14,000
to blow your mind

00:09:11,480 --> 00:09:16,640
they shouldn't shock you but it's really

00:09:14,000 --> 00:09:18,829
about calling out the things that either

00:09:16,640 --> 00:09:21,140
really helped me as I was learning or

00:09:18,829 --> 00:09:23,180
some places where I stumbled that my

00:09:21,140 --> 00:09:24,800
experience could have been better number

00:09:23,180 --> 00:09:27,350
one first day when they get to the

00:09:24,800 --> 00:09:30,140
office ask them how they like to learn

00:09:27,350 --> 00:09:32,690
personally for example I like examples

00:09:30,140 --> 00:09:35,120
other people will really want to read

00:09:32,690 --> 00:09:37,490
the entire Docs before they start

00:09:35,120 --> 00:09:39,709
working with a library other people will

00:09:37,490 --> 00:09:41,720
want to get a quick lecture on whatever

00:09:39,709 --> 00:09:43,880
it is and this isn't about you know

00:09:41,720 --> 00:09:45,440
turning into a teacher and spending all

00:09:43,880 --> 00:09:47,870
of your time becoming their greatest

00:09:45,440 --> 00:09:50,089
teacher this is really about not wasting

00:09:47,870 --> 00:09:51,860
your time on approaches that will be

00:09:50,089 --> 00:09:55,100
less effective and result in you having

00:09:51,860 --> 00:09:58,880
to repeat yourself and find new ways to

00:09:55,100 --> 00:10:01,250
explain the same things that said asking

00:09:58,880 --> 00:10:03,800
the same questions more than once is not

00:10:01,250 --> 00:10:06,440
a bad thing it's how we learn we need

00:10:03,800 --> 00:10:08,060
repetition to grasp concepts and so you

00:10:06,440 --> 00:10:10,370
should definitely encourage your learner

00:10:08,060 --> 00:10:12,230
to ask questions let them know that you

00:10:10,370 --> 00:10:15,620
don't see basic questions as bad

00:10:12,230 --> 00:10:17,600
questions and also let them know that

00:10:15,620 --> 00:10:20,540
you would rather they come to you with

00:10:17,600 --> 00:10:22,579
questions then maybe go to stack

00:10:20,540 --> 00:10:24,320
overflow where they may get the right

00:10:22,579 --> 00:10:28,160
answer they may not get the answer that

00:10:24,320 --> 00:10:30,410
fits your opinions about Scala and well

00:10:28,160 --> 00:10:32,390
this can sound a little scary like am i

00:10:30,410 --> 00:10:37,130
opening myself up to be you know their

00:10:32,390 --> 00:10:38,959
ask Jeeves 24/7 like really a large part

00:10:37,130 --> 00:10:40,370
of encouraging questions is letting them

00:10:38,959 --> 00:10:42,680
know how you would like to be bothered

00:10:40,370 --> 00:10:44,029
would you like to get emails when they

00:10:42,680 --> 00:10:45,709
have questions that they need you to

00:10:44,029 --> 00:10:47,240
answer would you like them to write them

00:10:45,709 --> 00:10:49,670
all down and then every couple of hours

00:10:47,240 --> 00:10:52,610
you'll check in and make sure that they

00:10:49,670 --> 00:10:54,350
understand everything you do get the

00:10:52,610 --> 00:10:55,990
chance to set some boundaries and they

00:10:54,350 --> 00:10:58,670
will appreciate knowing that they're not

00:10:55,990 --> 00:11:00,470
bothering you by asking the questions

00:10:58,670 --> 00:11:03,740
that they have

00:11:00,470 --> 00:11:06,709
next is try to have the conversations

00:11:03,740 --> 00:11:08,600
that you do have and the times when

00:11:06,709 --> 00:11:09,410
you're assigning work or explaining

00:11:08,600 --> 00:11:12,920
something they

00:11:09,410 --> 00:11:16,759
understand into dialogues not into

00:11:12,920 --> 00:11:19,040
monologues if you start ranting and then

00:11:16,759 --> 00:11:19,699
find out that you lost them 20 minutes

00:11:19,040 --> 00:11:21,920
later

00:11:19,699 --> 00:11:23,690
well that's 20 minutes you'll never get

00:11:21,920 --> 00:11:25,040
back and it really doesn't feel great

00:11:23,690 --> 00:11:26,660
for them and it's not going to feel

00:11:25,040 --> 00:11:28,819
great for you and you'll be lucky if

00:11:26,660 --> 00:11:33,170
they let you know that you lost them 20

00:11:28,819 --> 00:11:35,480
minutes earlier or I came to Bloomberg

00:11:33,170 --> 00:11:38,329
having spent five weeks building out a

00:11:35,480 --> 00:11:41,660
recursive backtracking algorithm to

00:11:38,329 --> 00:11:43,670
generate dance choreography and so

00:11:41,660 --> 00:11:45,170
recursion was something that I had been

00:11:43,670 --> 00:11:47,449
teaching to other people in my cohort

00:11:45,170 --> 00:11:48,740
for weeks and then when I joined

00:11:47,449 --> 00:11:50,750
Bloomberg I'm starting to learn

00:11:48,740 --> 00:11:53,000
functional programming and a few people

00:11:50,750 --> 00:11:56,089
took it on themselves to explain

00:11:53,000 --> 00:11:58,699
recursion to me without asking first if

00:11:56,089 --> 00:12:00,230
I had encountered it before not so that

00:11:58,699 --> 00:12:01,459
you know was a waste of time

00:12:00,230 --> 00:12:02,899
that was time that could have been

00:12:01,459 --> 00:12:05,029
better spent explaining something that I

00:12:02,899 --> 00:12:08,600
hadn't encountered yet that they didn't

00:12:05,029 --> 00:12:10,819
think to explain to me on top of all

00:12:08,600 --> 00:12:13,189
that the value of having a dialogue

00:12:10,819 --> 00:12:14,689
instead of a monologue is that when your

00:12:13,189 --> 00:12:17,269
learner is speaking to you they're

00:12:14,689 --> 00:12:19,069
giving you an understanding of their

00:12:17,269 --> 00:12:20,899
understandings so you'll be better in

00:12:19,069 --> 00:12:22,220
tune with what it is that they still

00:12:20,899 --> 00:12:24,410
need to learn or with what they've

00:12:22,220 --> 00:12:27,500
already understood which can help you to

00:12:24,410 --> 00:12:29,959
set better projects for them and further

00:12:27,500 --> 00:12:32,930
their learning more effectively finally

00:12:29,959 --> 00:12:36,199
don't mistake vocabulary ignorance for

00:12:32,930 --> 00:12:42,560
conceptual ignorant what I mean by this

00:12:36,199 --> 00:12:46,430
is having a map explained to me in Scala

00:12:42,560 --> 00:12:48,230
was again sort of wasted time exercise

00:12:46,430 --> 00:12:50,959
because all I really needed to be told

00:12:48,230 --> 00:12:53,660
was a map as like a dictionary in Python

00:12:50,959 --> 00:12:58,309
but with stronger rules about key and

00:12:53,660 --> 00:13:00,350
value types and yeah so that could have

00:12:58,309 --> 00:13:05,059
been some time saved and I definitely

00:13:00,350 --> 00:13:07,459
want to save y'all some time now as far

00:13:05,059 --> 00:13:10,939
as providing structure and support for

00:13:07,459 --> 00:13:13,250
your learner goes do not say oh oh dear

00:13:10,939 --> 00:13:15,110
Sookie has a great course on Coursera go

00:13:13,250 --> 00:13:16,220
do it and then leave for two weeks the

00:13:15,110 --> 00:13:18,709
problem is not the course on Coursera

00:13:16,220 --> 00:13:21,240
although I have some recommendations for

00:13:18,709 --> 00:13:23,279
other resources that might be a

00:13:21,240 --> 00:13:25,620
slightly easier starting place the

00:13:23,279 --> 00:13:28,500
problem is leaving for two weeks because

00:13:25,620 --> 00:13:30,600
on day one and this did happen to me the

00:13:28,500 --> 00:13:31,830
feeling is like yes this is so great

00:13:30,600 --> 00:13:33,750
they have so much faith in me I'm

00:13:31,830 --> 00:13:35,760
getting paid to learn I have all this

00:13:33,750 --> 00:13:38,510
autonomy and then by day three it was

00:13:35,760 --> 00:13:42,360
like why won't anyone talk to me and

00:13:38,510 --> 00:13:44,550
yeah so you want to have a stronger hand

00:13:42,360 --> 00:13:46,230
in what your learner is learning and

00:13:44,550 --> 00:13:48,149
make sure that they know that you're

00:13:46,230 --> 00:13:50,070
there for them and it doesn't have to

00:13:48,149 --> 00:13:51,630
mean you know all day every day for the

00:13:50,070 --> 00:13:53,430
first two weeks you're just sitting in a

00:13:51,630 --> 00:13:54,839
room together teaching things it just

00:13:53,430 --> 00:13:56,490
means that you should check in more

00:13:54,839 --> 00:13:59,160
frequently and make sure they know that

00:13:56,490 --> 00:14:01,980
you're there if they have questions do

00:13:59,160 --> 00:14:04,500
dig up resources for your learner they

00:14:01,980 --> 00:14:06,660
got the job they are coders they know

00:14:04,500 --> 00:14:11,130
how to find resources the issue is with

00:14:06,660 --> 00:14:13,980
finding the right resources I remember a

00:14:11,130 --> 00:14:16,589
time that a co-worker said ah map would

00:14:13,980 --> 00:14:18,540
be a great thing to do here so I went

00:14:16,589 --> 00:14:20,940
and spent an hour trying to figure out

00:14:18,540 --> 00:14:23,010
how I could possibly fit a map data

00:14:20,940 --> 00:14:25,410
structure into the code I was writing

00:14:23,010 --> 00:14:27,690
when what my coworker meant was use this

00:14:25,410 --> 00:14:29,550
method called map this is the sort of

00:14:27,690 --> 00:14:32,700
thing that you can avoid if instead of

00:14:29,550 --> 00:14:35,220
saying use map say use map I'll find you

00:14:32,700 --> 00:14:38,149
an example or use map let me go get the

00:14:35,220 --> 00:14:41,339
docs for you or something like that

00:14:38,149 --> 00:14:44,520
another suggestion I have is to suggest

00:14:41,339 --> 00:14:46,170
set project timelines this is not about

00:14:44,520 --> 00:14:48,329
being mean and saying if you don't do it

00:14:46,170 --> 00:14:50,430
by this time you've failed it's about

00:14:48,329 --> 00:14:52,320
giving your learner who doesn't have a

00:14:50,430 --> 00:14:54,079
lot of context for the sort of things

00:14:52,320 --> 00:14:57,839
that you're asking them to do an

00:14:54,079 --> 00:15:00,690
understanding of how big the scope is of

00:14:57,839 --> 00:15:02,610
what you're asking and a better clue for

00:15:00,690 --> 00:15:04,709
when they should go come to you and say

00:15:02,610 --> 00:15:06,209
I think I've gone a little too far in

00:15:04,709 --> 00:15:06,720
this way can you help set me back on

00:15:06,209 --> 00:15:09,920
track

00:15:06,720 --> 00:15:13,350
for you it's also a really good way to

00:15:09,920 --> 00:15:15,660
do some sort of forethought into the

00:15:13,350 --> 00:15:18,480
appropriateness of what you're asking

00:15:15,660 --> 00:15:20,640
your learner to do one final thought

00:15:18,480 --> 00:15:23,130
here is that you should introduce your

00:15:20,640 --> 00:15:25,950
learner to the community that is meetups

00:15:23,130 --> 00:15:28,140
or conferences or just going out for

00:15:25,950 --> 00:15:31,770
drinks with your Scala buddies as early

00:15:28,140 --> 00:15:33,020
as possible a because it helps to speed

00:15:31,770 --> 00:15:35,840
their learning their encounter

00:15:33,020 --> 00:15:37,280
new concepts quickly they're getting the

00:15:35,840 --> 00:15:40,640
same concepts that they've been learning

00:15:37,280 --> 00:15:42,410
at work in a new context and with new

00:15:40,640 --> 00:15:44,660
explanations which is a really great way

00:15:42,410 --> 00:15:47,180
to learn something well and like

00:15:44,660 --> 00:15:49,820
solidify understanding you are also

00:15:47,180 --> 00:15:52,550
reducing the workload for you you're

00:15:49,820 --> 00:15:54,140
providing them more people that they can

00:15:52,550 --> 00:15:57,350
go to when they have questions about a

00:15:54,140 --> 00:15:58,790
concept you're also you know making it

00:15:57,350 --> 00:16:01,300
look like you have friends which is not

00:15:58,790 --> 00:16:01,300
a bad thing

00:16:01,430 --> 00:16:07,790
final set of suggestions never say the

00:16:04,100 --> 00:16:11,240
word just there is a very cool bootcamp

00:16:07,790 --> 00:16:13,550
II but for all skill levels organization

00:16:11,240 --> 00:16:15,200
here in the city called recurse Center

00:16:13,550 --> 00:16:16,910
and this is their one of their rules

00:16:15,200 --> 00:16:20,120
that I really love is don't fake

00:16:16,910 --> 00:16:22,930
surprise the idea is that if someone you

00:16:20,120 --> 00:16:26,570
know asks a very basic question about

00:16:22,930 --> 00:16:28,280
you know a mean method you don't respond

00:16:26,570 --> 00:16:30,950
with you don't know what a main method

00:16:28,280 --> 00:16:33,020
is because that's extremely mean you're

00:16:30,950 --> 00:16:34,700
not setting them up to want to come to

00:16:33,020 --> 00:16:36,610
you with the basic questions that they

00:16:34,700 --> 00:16:39,500
really need answered in the future and

00:16:36,610 --> 00:16:41,630
you're losing the chance to share with

00:16:39,500 --> 00:16:46,340
someone the excitement of figuring out

00:16:41,630 --> 00:16:48,440
how to work with main methods and saying

00:16:46,340 --> 00:16:52,040
just falls in the same boat where if you

00:16:48,440 --> 00:16:55,280
say oh well as this example that I found

00:16:52,040 --> 00:16:57,100
found earlier online is you just need to

00:16:55,280 --> 00:17:00,110
use the normal option handling methods

00:16:57,100 --> 00:17:02,930
well if I don't know what the normal

00:17:00,110 --> 00:17:04,430
option handling methods are then I'm not

00:17:02,930 --> 00:17:06,440
going to come to you for it because you

00:17:04,430 --> 00:17:09,680
clearly think that I should know what it

00:17:06,440 --> 00:17:11,270
is and I'm sitting there feeling bad

00:17:09,680 --> 00:17:12,680
about not knowing what the normal option

00:17:11,270 --> 00:17:14,540
handling methods are so you haven't

00:17:12,680 --> 00:17:15,680
given me useful advice and you've set me

00:17:14,540 --> 00:17:17,780
up to not feel great about our

00:17:15,680 --> 00:17:21,640
interactions going forward and to not

00:17:17,780 --> 00:17:24,170
feel great about my knowledge base

00:17:21,640 --> 00:17:25,970
speaking of setting someone up to feel

00:17:24,170 --> 00:17:28,730
great or not create positive

00:17:25,970 --> 00:17:30,560
expectations studies have shown that if

00:17:28,730 --> 00:17:32,930
you say this will hurt before you do

00:17:30,560 --> 00:17:34,790
something painful it actually causes

00:17:32,930 --> 00:17:38,300
they're someone's brain to feel more

00:17:34,790 --> 00:17:40,070
pain I was recently in a training class

00:17:38,300 --> 00:17:42,260
a week-long Scala training where the

00:17:40,070 --> 00:17:44,750
instructor opened on day one by saying

00:17:42,260 --> 00:17:46,770
Scala is an extremely difficult language

00:17:44,750 --> 00:17:48,120
and there's a lot of really complicated

00:17:46,770 --> 00:17:50,580
hated things that you need to learn

00:17:48,120 --> 00:17:53,250
which didn't set this class of very

00:17:50,580 --> 00:17:56,430
experienced developers up to approach

00:17:53,250 --> 00:17:58,640
the language with enthusiasm and to see

00:17:56,430 --> 00:18:05,670
themselves as you know capable of

00:17:58,640 --> 00:18:09,690
learning Scala easily also on top of

00:18:05,670 --> 00:18:12,540
that the advantage of coming to Scala

00:18:09,690 --> 00:18:15,480
without 10 years of Java experience is

00:18:12,540 --> 00:18:17,310
that Scala is that these junior Scala

00:18:15,480 --> 00:18:19,740
developers will not have a lot of the

00:18:17,310 --> 00:18:22,080
preconceived notions that can make some

00:18:19,740 --> 00:18:24,450
concepts in Scala more confusing

00:18:22,080 --> 00:18:26,640
concepts like functions as objects we're

00:18:24,450 --> 00:18:28,970
much easier for me to pick up on then

00:18:26,640 --> 00:18:33,750
some of my colleagues who had a lot more

00:18:28,970 --> 00:18:36,870
experience in Java and in C++ model good

00:18:33,750 --> 00:18:41,270
code this means you know writing tests

00:18:36,870 --> 00:18:44,400
writing great names for your methods

00:18:41,270 --> 00:18:46,170
adding examples and read meats and if

00:18:44,400 --> 00:18:51,030
you're really fancy or if you're that

00:18:46,170 --> 00:18:52,140
sort of person comments these are all

00:18:51,030 --> 00:18:54,570
the things you should be doing anyway

00:18:52,140 --> 00:18:56,730
but in addition to making your code so

00:18:54,570 --> 00:18:59,820
much easier for a beginner to start

00:18:56,730 --> 00:19:01,740
working with you will be showing them

00:18:59,820 --> 00:19:03,240
examples of what it is that they should

00:19:01,740 --> 00:19:04,860
write their code like and you'll get

00:19:03,240 --> 00:19:05,850
more great code out of them in the

00:19:04,860 --> 00:19:07,830
future

00:19:05,850 --> 00:19:11,100
finally do not make mistake

00:19:07,830 --> 00:19:13,080
inexperienced for incompetence I went in

00:19:11,100 --> 00:19:16,560
the space of a few months from never

00:19:13,080 --> 00:19:19,170
having heard of JDBC to being my team's

00:19:16,560 --> 00:19:23,400
go-to person for anything sparks equal

00:19:19,170 --> 00:19:25,500
data sources and if you've hired these

00:19:23,400 --> 00:19:27,300
people who've done this impressive thing

00:19:25,500 --> 00:19:31,440
come into Tech through a non-traditional

00:19:27,300 --> 00:19:33,300
route usually with a lot of work a lot

00:19:31,440 --> 00:19:34,770
of extra work that you maybe even didn't

00:19:33,300 --> 00:19:36,960
have to do or a different kind of work

00:19:34,770 --> 00:19:39,420
than you had to do they're quite capable

00:19:36,960 --> 00:19:42,720
all you need to do is give them the

00:19:39,420 --> 00:19:45,120
resources and the support to succeed now

00:19:42,720 --> 00:19:49,710
let's talk a bit about what makes a good

00:19:45,120 --> 00:19:51,960
first project for someone like this now

00:19:49,710 --> 00:19:53,700
by first project I really mean first few

00:19:51,960 --> 00:19:55,950
projects I'd say I had somewhere between

00:19:53,700 --> 00:19:57,270
three and five that I'm really drawing

00:19:55,950 --> 00:20:00,720
from too

00:19:57,270 --> 00:20:03,570
come up with these guidelines I found

00:20:00,720 --> 00:20:05,850
that the very best project that I worked

00:20:03,570 --> 00:20:08,700
on as a very new scholar coder was

00:20:05,850 --> 00:20:09,420
writing unit tests they're very quick

00:20:08,700 --> 00:20:11,550
wins

00:20:09,420 --> 00:20:14,040
they're quite short to write so I can't

00:20:11,550 --> 00:20:15,870
fall down any very deep rabbit holes it

00:20:14,040 --> 00:20:18,540
was a great way to get an introduction

00:20:15,870 --> 00:20:21,780
to the library that I then went on to

00:20:18,540 --> 00:20:23,220
contribute to and to contribute to in

00:20:21,780 --> 00:20:28,650
ways other than writing tests of course

00:20:23,220 --> 00:20:31,110
and it was a chance and tests come with

00:20:28,650 --> 00:20:33,270
this sort of built-in understanding of

00:20:31,110 --> 00:20:35,400
whether you're doing something correctly

00:20:33,270 --> 00:20:37,680
or not it was also really great for the

00:20:35,400 --> 00:20:39,900
mentor who then didn't have to write

00:20:37,680 --> 00:20:43,500
those tests but still got them in his

00:20:39,900 --> 00:20:46,740
library next-best are partially complete

00:20:43,500 --> 00:20:49,920
small projects so with a partially

00:20:46,740 --> 00:20:52,530
complete project you I assumed have

00:20:49,920 --> 00:20:55,170
thought through how the entire project

00:20:52,530 --> 00:20:57,750
is going to be done and it's less about

00:20:55,170 --> 00:21:00,390
making large high-level decisions that

00:20:57,750 --> 00:21:03,330
year coder doesn't have the context yet

00:21:00,390 --> 00:21:05,580
to make effectively and more about

00:21:03,330 --> 00:21:07,380
filling in the blanks in a way that you

00:21:05,580 --> 00:21:09,090
can guide very effectively because

00:21:07,380 --> 00:21:10,650
you've already done part of the project

00:21:09,090 --> 00:21:13,140
and have a good sense of where it's

00:21:10,650 --> 00:21:18,330
going and what's going on in it

00:21:13,140 --> 00:21:20,490
currently after that I would say some

00:21:18,330 --> 00:21:22,590
ideas that could be good but are not my

00:21:20,490 --> 00:21:24,720
favorite would be something like warm-up

00:21:22,590 --> 00:21:27,150
exercises where yes they've got that

00:21:24,720 --> 00:21:29,580
nice contained nough steding tests has

00:21:27,150 --> 00:21:31,350
and often they're very easy to tell if

00:21:29,580 --> 00:21:33,570
you've done something right or not but

00:21:31,350 --> 00:21:36,690
your coder isn't contributing to your

00:21:33,570 --> 00:21:39,330
codebase right away and that's lost time

00:21:36,690 --> 00:21:41,250
for you and also a lost chance for them

00:21:39,330 --> 00:21:43,440
to really feel like they're getting

00:21:41,250 --> 00:21:47,070
involved and get experience with your

00:21:43,440 --> 00:21:49,710
actual codebase small projects can be

00:21:47,070 --> 00:21:52,740
good but without a lot of guidance you

00:21:49,710 --> 00:21:55,380
are leaving decisions up to someone who

00:21:52,740 --> 00:21:58,740
hasn't seen enough to make the decisions

00:21:55,380 --> 00:22:00,300
that you would make yet so if you do if

00:21:58,740 --> 00:22:02,910
that's the best you can offer your

00:22:00,300 --> 00:22:04,830
beginning coder try to be very involved

00:22:02,910 --> 00:22:07,500
with the planning and have very regular

00:22:04,830 --> 00:22:09,420
meetings to ensure that they haven't

00:22:07,500 --> 00:22:10,879
fallen down any deep rabbit holes while

00:22:09,420 --> 00:22:13,519
you weren't looking

00:22:10,879 --> 00:22:15,200
some projects that I have found are not

00:22:13,519 --> 00:22:16,820
great some of them surprisingly some of

00:22:15,200 --> 00:22:18,769
them pretty obvious surprisingly

00:22:16,820 --> 00:22:20,629
dependency upgrades this was one of the

00:22:18,769 --> 00:22:23,990
first things I was asked to do when I

00:22:20,629 --> 00:22:27,980
switched teams into a big new codebase

00:22:23,990 --> 00:22:29,659
that I had never seen before and I had

00:22:27,980 --> 00:22:33,259
never worked with maven before and this

00:22:29,659 --> 00:22:35,389
was a maven dependency upgrade and it

00:22:33,259 --> 00:22:37,820
broke first of all I had to understand

00:22:35,389 --> 00:22:39,289
maven in the codebase and the dependency

00:22:37,820 --> 00:22:41,360
I was upgrading and all that stuff just

00:22:39,289 --> 00:22:44,090
to make this tiny little upgrade and

00:22:41,360 --> 00:22:44,690
then those few twiki things that needed

00:22:44,090 --> 00:22:46,669
to be fixed

00:22:44,690 --> 00:22:48,499
after the upgrade were things that I had

00:22:46,669 --> 00:22:50,059
no context on and I needed so much

00:22:48,499 --> 00:22:52,159
support on that it definitely would have

00:22:50,059 --> 00:22:54,759
been faster for the person who asked me

00:22:52,159 --> 00:22:57,529
to do it to just do it themselves

00:22:54,759 --> 00:22:59,600
behemoth projects are not good for some

00:22:57,529 --> 00:23:02,659
of the reasons that earlier things we

00:22:59,600 --> 00:23:08,090
mentioned are good behemoths very big

00:23:02,659 --> 00:23:12,320
projects oops a little preview ok very

00:23:08,090 --> 00:23:14,119
big projects will offer lots of

00:23:12,320 --> 00:23:17,720
opportunities for your learner to fall

00:23:14,119 --> 00:23:20,119
down extremely deep rabbit holes without

00:23:17,720 --> 00:23:21,860
your support and generally if it's an

00:23:20,119 --> 00:23:24,139
extremely big project you've asked them

00:23:21,860 --> 00:23:25,639
to do it's really several smaller

00:23:24,139 --> 00:23:28,039
projects that you haven't thought

00:23:25,639 --> 00:23:30,169
through how to break down and so you

00:23:28,039 --> 00:23:32,450
probably haven't thought through where

00:23:30,169 --> 00:23:34,190
things could go wrong or what it is that

00:23:32,450 --> 00:23:36,889
they'll even need to do to accomplish

00:23:34,190 --> 00:23:38,899
the projects bug fixes this is another

00:23:36,889 --> 00:23:40,700
surprising one just because it's fast

00:23:38,899 --> 00:23:42,919
for you does not mean it'll be fast for

00:23:40,700 --> 00:23:48,490
your learner they'll probably need a lot

00:23:42,919 --> 00:23:52,460
of context to start oh I'm doing that

00:23:48,490 --> 00:24:00,889
okay I don't know that's very exciting

00:23:52,460 --> 00:24:03,080
all right so okay yeah so bug fix bug

00:24:00,889 --> 00:24:05,269
fixes not great because while they're

00:24:03,080 --> 00:24:07,279
fast for you they will take your learner

00:24:05,269 --> 00:24:08,929
a long time to do if they're not

00:24:07,279 --> 00:24:11,749
familiar enough with the codebase to

00:24:08,929 --> 00:24:13,429
know where they should jump to address

00:24:11,749 --> 00:24:15,110
what's going wrong and if they haven't

00:24:13,429 --> 00:24:17,809
seen the kind of areas that are coming

00:24:15,110 --> 00:24:19,369
up before then they won't they'll have

00:24:17,809 --> 00:24:21,289
to go and learn what those errors mean

00:24:19,369 --> 00:24:22,039
before they can figure out how to fix

00:24:21,289 --> 00:24:24,789
them

00:24:22,039 --> 00:24:27,859
finally concepts that are new to you

00:24:24,789 --> 00:24:30,830
this can get very dangerous because if

00:24:27,859 --> 00:24:32,299
you don't know what it is that you're

00:24:30,830 --> 00:24:33,679
asking them to do or you don't know how

00:24:32,299 --> 00:24:35,720
they can accomplish what you're asking

00:24:33,679 --> 00:24:37,879
them to do you can't provide great

00:24:35,720 --> 00:24:42,830
support when they run into an issue and

00:24:37,879 --> 00:24:44,570
need some guidance now of course

00:24:42,830 --> 00:24:46,460
eventually after they've done several

00:24:44,570 --> 00:24:49,039
projects it will be time to give them

00:24:46,460 --> 00:24:52,609
larger projects or to have them go and

00:24:49,039 --> 00:24:54,409
fix some bugs or to have them go and you

00:24:52,609 --> 00:24:56,539
know figure out something that you're

00:24:54,409 --> 00:24:58,159
not sure how it's going to work yet when

00:24:56,539 --> 00:24:59,450
that time comes just be extremely

00:24:58,159 --> 00:25:02,179
upfront about it because it'll feel

00:24:59,450 --> 00:25:04,789
great for them to be you know the

00:25:02,179 --> 00:25:06,470
pioneer on the team who's figuring out

00:25:04,789 --> 00:25:07,940
what needs to happen and learning

00:25:06,470 --> 00:25:10,970
something that you don't even know yet

00:25:07,940 --> 00:25:14,629
and when things go wrong they won't feel

00:25:10,970 --> 00:25:16,429
as though they are not able to do

00:25:14,629 --> 00:25:21,230
something that everyone else has figured

00:25:16,429 --> 00:25:25,220
out now let's jump into some even more

00:25:21,230 --> 00:25:28,279
Scala specific ideas this is a quote

00:25:25,220 --> 00:25:30,200
said to me by a friend as when I found

00:25:28,279 --> 00:25:30,590
out that I was going to be working in

00:25:30,200 --> 00:25:32,359
Scala

00:25:30,590 --> 00:25:35,299
he said Scala is a language created by

00:25:32,359 --> 00:25:37,669
academics it's very clever don't try to

00:25:35,299 --> 00:25:39,799
get every funky feature now focus on the

00:25:37,669 --> 00:25:41,240
basics and the funky stuff will come in

00:25:39,799 --> 00:25:43,940
time and this turned out to be great

00:25:41,240 --> 00:25:45,409
advice one of the complaints that you

00:25:43,940 --> 00:25:47,269
occasionally hear about Scala is that

00:25:45,409 --> 00:25:51,740
there's six ways to do everything it's

00:25:47,269 --> 00:25:56,659
it allows for a whole lot of exciting

00:25:51,740 --> 00:25:58,940
ways to do unexcited things and coming

00:25:56,659 --> 00:26:01,519
at it with this mindset well your

00:25:58,940 --> 00:26:02,990
learner to sort of shut the firehose off

00:26:01,519 --> 00:26:04,870
or at least really reduce it to a

00:26:02,990 --> 00:26:07,030
trickle and well and

00:26:04,870 --> 00:26:08,710
be good for you to remember that this is

00:26:07,030 --> 00:26:11,290
someone who has a lot to learn and

00:26:08,710 --> 00:26:15,790
doesn't need to learn all of it at the

00:26:11,290 --> 00:26:17,710
same time so with that in mind here are

00:26:15,790 --> 00:26:20,559
some topics that I particularly

00:26:17,710 --> 00:26:21,940
recommend emphasizing when you're

00:26:20,559 --> 00:26:24,460
teaching someone from this background

00:26:21,940 --> 00:26:28,150
Scala number one types and type

00:26:24,460 --> 00:26:31,300
signatures also tools and by tools I

00:26:28,150 --> 00:26:33,820
mean a single IDE a single build tool a

00:26:31,300 --> 00:26:36,400
single test Lib if you want them to be

00:26:33,820 --> 00:26:37,570
working on Chris build tool do Chris

00:26:36,400 --> 00:26:39,550
build tool if you want them to be

00:26:37,570 --> 00:26:42,429
working on bloop go for bloop

00:26:39,550 --> 00:26:45,220
they can't question you all that said if

00:26:42,429 --> 00:26:47,410
you are a hardcore bare-bones

00:26:45,220 --> 00:26:49,870
Emacs or vim user please let them start

00:26:47,410 --> 00:26:53,980
on something like IntelliJ more fully

00:26:49,870 --> 00:26:56,440
featured IDE was instrumental and giving

00:26:53,980 --> 00:26:58,150
me a like helping me to understand my

00:26:56,440 --> 00:26:59,500
code with like types on hover and all of

00:26:58,150 --> 00:27:03,610
these great things that just come out of

00:26:59,500 --> 00:27:06,340
the box you should cover FP basics with

00:27:03,610 --> 00:27:09,190
them these are concepts like what is a

00:27:06,340 --> 00:27:10,600
side effect or right Val not bar and you

00:27:09,190 --> 00:27:12,100
didn't even have to tell them var is an

00:27:10,600 --> 00:27:14,740
option just say we write about when we

00:27:12,100 --> 00:27:17,080
do this for not while things like that

00:27:14,740 --> 00:27:19,480
very actionable concrete things that

00:27:17,080 --> 00:27:21,250
will be simple to explain and will be

00:27:19,480 --> 00:27:25,000
exactly what you want them to be using

00:27:21,250 --> 00:27:28,210
when they code vocabulary object class

00:27:25,000 --> 00:27:30,610
trait method type I'm sure some of these

00:27:28,210 --> 00:27:33,250
were extremely straightforward for you

00:27:30,610 --> 00:27:35,110
to understand when you got into scala

00:27:33,250 --> 00:27:36,760
but for me some of these were more

00:27:35,110 --> 00:27:38,800
complicated and i needed to have them

00:27:36,760 --> 00:27:40,870
explained a few times because my

00:27:38,800 --> 00:27:42,670
understanding was just fuzzier i didn't

00:27:40,870 --> 00:27:45,730
have as much background to draw on for

00:27:42,670 --> 00:27:48,070
those compiler basics like what is a

00:27:45,730 --> 00:27:50,230
compiler or between your compiler and

00:27:48,070 --> 00:27:52,900
your ide get prepared to have your life

00:27:50,230 --> 00:27:55,390
be so much less buggy stuff like that

00:27:52,900 --> 00:27:58,120
finally options i think are pretty

00:27:55,390 --> 00:27:59,920
important to introduce very early on now

00:27:58,120 --> 00:28:02,380
with this slide and i know this is the

00:27:59,920 --> 00:28:04,690
most controversial slide of the talk i'm

00:28:02,380 --> 00:28:06,790
not telling you that you should not

00:28:04,690 --> 00:28:08,260
teach these things and i'm not even

00:28:06,790 --> 00:28:11,470
telling you that you should not teach

00:28:08,260 --> 00:28:15,370
these things right away i'm saying wait

00:28:11,470 --> 00:28:18,010
until your learner has a specific need

00:28:15,370 --> 00:28:18,730
for whatever this concept is whether

00:28:18,010 --> 00:28:22,000
it's employed

00:28:18,730 --> 00:28:24,850
sits or currying or anonymous functions

00:28:22,000 --> 00:28:28,120
case classes recursion compiler

00:28:24,850 --> 00:28:32,200
intricacies functional programming vocab

00:28:28,120 --> 00:28:34,270
so you know you don't need to know what

00:28:32,200 --> 00:28:37,690
a monad is or be able to describe it to

00:28:34,270 --> 00:28:40,750
use a flat map correctly to use flat map

00:28:37,690 --> 00:28:44,470
correctly I know that these are

00:28:40,750 --> 00:28:46,990
extremely important concepts in writing

00:28:44,470 --> 00:28:49,929
Scala and even in writing pretty basic

00:28:46,990 --> 00:28:51,910
Scala but they don't need to be

00:28:49,929 --> 00:28:53,559
introduced immediately and your learner

00:28:51,910 --> 00:28:55,809
will get a lot more out of it if you

00:28:53,559 --> 00:28:57,400
wait until you know they encounter in

00:28:55,809 --> 00:29:01,030
the code and they ask a question about

00:28:57,400 --> 00:29:03,429
it or they have some code for example I

00:29:01,030 --> 00:29:06,190
had case classes explained to me

00:29:03,429 --> 00:29:08,980
probably four times in my first few

00:29:06,190 --> 00:29:10,660
months at Bloomberg and then and I you

00:29:08,980 --> 00:29:13,360
know knew enough to see them and

00:29:10,660 --> 00:29:14,860
recognize what was happening and find

00:29:13,360 --> 00:29:17,260
them good but I wasn't writing them into

00:29:14,860 --> 00:29:18,820
my own code and I didn't really care

00:29:17,260 --> 00:29:21,429
about them until the day that I

00:29:18,820 --> 00:29:22,900
submitted a pull request that had some

00:29:21,429 --> 00:29:25,210
code that had a type signature that

00:29:22,900 --> 00:29:27,669
looked like this all over it and a

00:29:25,210 --> 00:29:28,870
co-worker commented with you know this

00:29:27,669 --> 00:29:30,940
would probably be a good time to use

00:29:28,870 --> 00:29:33,280
case classes and I spent 10 minutes and

00:29:30,940 --> 00:29:36,760
I figured out how I would do that and I

00:29:33,280 --> 00:29:38,470
my code looked so much better and now

00:29:36,760 --> 00:29:40,299
I'm really into case classes but that

00:29:38,470 --> 00:29:42,370
wasn't something that came from the

00:29:40,299 --> 00:29:43,720
enthusiasm of my mentors that was

00:29:42,370 --> 00:29:45,820
something that came from my own

00:29:43,720 --> 00:29:48,160
experience with how these concepts could

00:29:45,820 --> 00:29:50,020
make my life a whole lot easier so they

00:29:48,160 --> 00:29:52,360
have a whole lot to learn wait until

00:29:50,020 --> 00:29:55,630
learning this stuff will really matter

00:29:52,360 --> 00:29:57,100
to their ability to work on the code

00:29:55,630 --> 00:30:00,160
that they're working on and you know

00:29:57,100 --> 00:30:02,340
after they get the basics down we've all

00:30:00,160 --> 00:30:05,350
experienced this you go from

00:30:02,340 --> 00:30:07,840
appreciating what it is Scala can do for

00:30:05,350 --> 00:30:10,120
you to getting a little geeky about the

00:30:07,840 --> 00:30:11,980
concepts behind Scala or the concepts

00:30:10,120 --> 00:30:14,919
behind functional programming that

00:30:11,980 --> 00:30:16,390
elevate you to the next level of doing

00:30:14,919 --> 00:30:18,070
it because I love it not doing it

00:30:16,390 --> 00:30:19,840
because I need it let them get to that

00:30:18,070 --> 00:30:21,309
place and they will follow along and

00:30:19,840 --> 00:30:24,880
want to have these conversations with

00:30:21,309 --> 00:30:27,220
you so I'd like to break for any

00:30:24,880 --> 00:30:29,790
questions I believe we have some time

00:30:27,220 --> 00:30:29,790
now

00:30:40,280 --> 00:30:45,480
thank you hi hi so it seemed to me and I

00:30:44,760 --> 00:30:48,020
could be wrong

00:30:45,480 --> 00:30:50,700
that you're aiming your suggestions at

00:30:48,020 --> 00:30:52,260
mentoring you know individuals that come

00:30:50,700 --> 00:30:54,900
on board as they come on board you know

00:30:52,260 --> 00:30:57,750
one by one not necessarily you know

00:30:54,900 --> 00:31:00,480
bringing on board entire teams or a

00:30:57,750 --> 00:31:02,550
bunch of people at once yeah as I

00:31:00,480 --> 00:31:04,530
mentioned diversity makes for great

00:31:02,550 --> 00:31:06,480
teams and if you've got an entire team

00:31:04,530 --> 00:31:08,820
of people coming from this

00:31:06,480 --> 00:31:09,930
non-traditional background who have sort

00:31:08,820 --> 00:31:11,550
of the same gaps in their knowledge

00:31:09,930 --> 00:31:13,950
that's actually not a diverse team

00:31:11,550 --> 00:31:17,340
anymore and so you'll run into probably

00:31:13,950 --> 00:31:21,540
not the same problems but similar losses

00:31:17,340 --> 00:31:23,880
of effectiveness and of like great idea

00:31:21,540 --> 00:31:26,250
generation as if you have a team of all

00:31:23,880 --> 00:31:27,660
experienced people who you know know

00:31:26,250 --> 00:31:30,530
exactly what they're doing and never ask

00:31:27,660 --> 00:31:30,530
those sorts of questions

00:31:37,290 --> 00:31:44,230
so I do a lot of Scala mentoring at my

00:31:41,650 --> 00:31:46,000
workplace and one thing I noticed didn't

00:31:44,230 --> 00:31:48,850
appear on your teach right away or your

00:31:46,000 --> 00:31:51,160
waiting until a need was the future and

00:31:48,850 --> 00:31:54,250
that is something that I struggle

00:31:51,160 --> 00:31:55,510
teaching and and it pulls in it like

00:31:54,250 --> 00:31:57,010
it's hard to teach futures without

00:31:55,510 --> 00:31:58,330
implicit because you have the execution

00:31:57,010 --> 00:32:00,880
context and so forth do you have any

00:31:58,330 --> 00:32:03,910
advice about I would definitely put them

00:32:00,880 --> 00:32:05,920
in the wait for the need category and if

00:32:03,910 --> 00:32:07,300
you find that what you're asking your

00:32:05,920 --> 00:32:10,050
learners to do because of the nature of

00:32:07,300 --> 00:32:12,820
the work that you have for them is

00:32:10,050 --> 00:32:14,530
requiring futures very early on in their

00:32:12,820 --> 00:32:16,420
instruction then definitely go for it

00:32:14,530 --> 00:32:18,490
because that will be a time when they

00:32:16,420 --> 00:32:20,290
will get a lot out of how you explain it

00:32:18,490 --> 00:32:29,770
because it's going to be critical to the

00:32:20,290 --> 00:32:31,780
work that they're doing hi there I was

00:32:29,770 --> 00:32:34,600
wondering if you could comment about

00:32:31,780 --> 00:32:36,070
kind of the vocabulary we use in the

00:32:34,600 --> 00:32:38,290
relationship between the person who's

00:32:36,070 --> 00:32:40,000
teaching in the person who's learning

00:32:38,290 --> 00:32:41,740
and who were interacting with there's a

00:32:40,000 --> 00:32:45,220
term you know there's senior and junior

00:32:41,740 --> 00:32:48,220
and mentor and mentee and I don't find

00:32:45,220 --> 00:32:49,900
that it captures kind of what's going on

00:32:48,220 --> 00:32:54,460
so I don't know if you have any advice

00:32:49,900 --> 00:32:56,920
about that could you say the question I

00:32:54,460 --> 00:33:00,100
think I'm with you but it ended poorly

00:32:56,920 --> 00:33:03,010
there do you have some advice about how

00:33:00,100 --> 00:33:05,770
we talk about our roles and what we call

00:33:03,010 --> 00:33:08,380
each other so if someone is new are they

00:33:05,770 --> 00:33:10,120
a junior I don't I don't know if I would

00:33:08,380 --> 00:33:12,070
want to be a junior but I'll be a junior

00:33:10,120 --> 00:33:14,470
if I'm a junior sort of in that works

00:33:12,070 --> 00:33:16,660
between myself and the teacher sure so

00:33:14,470 --> 00:33:18,550
this question probably comes up less for

00:33:16,660 --> 00:33:20,650
me than it would for many folks because

00:33:18,550 --> 00:33:22,809
at Bloomberg we don't tend to use titles

00:33:20,650 --> 00:33:24,370
at all which can sometimes get confusing

00:33:22,809 --> 00:33:27,970
when I'm talking to folks outside the

00:33:24,370 --> 00:33:31,240
company about what I do but it's not an

00:33:27,970 --> 00:33:33,309
insult to say junior write it I will

00:33:31,240 --> 00:33:36,250
happily accept the ways that I am still

00:33:33,309 --> 00:33:37,780
a junior still learning and being senior

00:33:36,250 --> 00:33:42,760
doesn't mean not learning anymore

00:33:37,780 --> 00:33:44,980
but there is a lot of sort of it can be

00:33:42,760 --> 00:33:45,370
helpful to say this is where I'm at and

00:33:44,980 --> 00:33:47,530
my learn

00:33:45,370 --> 00:33:48,880
I want to know more from you and if

00:33:47,530 --> 00:33:50,350
you're working with great people they

00:33:48,880 --> 00:33:51,940
won't see someone being a junior

00:33:50,350 --> 00:33:53,590
colleague especially someone who comes

00:33:51,940 --> 00:33:55,810
from a non-traditional background and is

00:33:53,590 --> 00:33:58,270
maybe actually older than whoever it is

00:33:55,810 --> 00:34:03,100
that they're learning from as I have

00:33:58,270 --> 00:34:04,630
been as a as someone who can't teach

00:34:03,100 --> 00:34:05,800
anything right just because someone is

00:34:04,630 --> 00:34:08,050
junior doesn't mean they don't have

00:34:05,800 --> 00:34:11,710
other experience they can bring into the

00:34:08,050 --> 00:34:16,030
situation so I guess one part of my

00:34:11,710 --> 00:34:20,380
answer would be the labels like junior

00:34:16,030 --> 00:34:22,240
or mentee are not insults and I think

00:34:20,380 --> 00:34:24,100
it'll be pretty rare to find someone who

00:34:22,240 --> 00:34:26,770
feels that way unless they do have

00:34:24,100 --> 00:34:29,470
extensive experience and it's not an

00:34:26,770 --> 00:34:31,480
appropriate term to use with them but

00:34:29,470 --> 00:34:34,140
also you can always default to something

00:34:31,480 --> 00:34:36,640
like colleague or teammate and you know

00:34:34,140 --> 00:34:38,740
for all that I have learned a lot about

00:34:36,640 --> 00:34:40,390
Scala from my teammates I've also taught

00:34:38,740 --> 00:34:44,140
them a lot about things like get or

00:34:40,390 --> 00:34:49,090
about how to write emails to co-workers

00:34:44,140 --> 00:34:50,590
who are pretty flaky and and don't seem

00:34:49,090 --> 00:34:54,490
to want to get back on that urgent issue

00:34:50,590 --> 00:34:56,290
so yeah I guess I would say it just

00:34:54,490 --> 00:34:57,580
hasn't stressed me out much but I can

00:34:56,290 --> 00:35:00,460
definitely see where you're coming from

00:34:57,580 --> 00:35:03,010
about why stuff like that can get

00:35:00,460 --> 00:35:05,230
sensitive and spaces where the label

00:35:03,010 --> 00:35:09,640
actually comes with you know some level

00:35:05,230 --> 00:35:13,180
of seniority or compensation or respect

00:35:09,640 --> 00:35:15,550
things like that be respectful of

00:35:13,180 --> 00:35:16,900
everyone is really I didn't say that

00:35:15,550 --> 00:35:23,140
question and demand respect from

00:35:16,900 --> 00:35:28,600
everyone hi I teach swing dancing by the

00:35:23,140 --> 00:35:31,900
way so I am one of those Trailblazers

00:35:28,600 --> 00:35:34,530
mmm I come from a world of complete

00:35:31,900 --> 00:35:38,530
hacking and doing really big things and

00:35:34,530 --> 00:35:42,580
I've struggled because my degrees in

00:35:38,530 --> 00:35:46,360
business and a lot of the stuff up here

00:35:42,580 --> 00:35:48,070
it's kind of hard for it has been hard

00:35:46,360 --> 00:35:50,080
for me to get my head around I'm getting

00:35:48,070 --> 00:35:51,880
it over time you know i'm i've been

00:35:50,080 --> 00:35:57,850
doing this professionally for a year now

00:35:51,880 --> 00:35:58,410
but how do you teach somebody this if

00:35:57,850 --> 00:36:00,630
they've never

00:35:58,410 --> 00:36:02,099
seen it before like I didn't even know

00:36:00,630 --> 00:36:03,660
I'd still don't even know what implicit

00:36:02,099 --> 00:36:06,180
is kind of I know what it is kind of

00:36:03,660 --> 00:36:09,240
yeah so as a learner

00:36:06,180 --> 00:36:14,010
I think getting for me personally asking

00:36:09,240 --> 00:36:16,109
for examples is really the way to wrap

00:36:14,010 --> 00:36:19,020
my head around what it is that these

00:36:16,109 --> 00:36:21,420
things do just getting them explained to

00:36:19,020 --> 00:36:24,210
me it doesn't give me everything I need

00:36:21,420 --> 00:36:25,619
to feel like I understand them and then

00:36:24,210 --> 00:36:27,660
of course when they come up in your work

00:36:25,619 --> 00:36:29,369
and you're using them yourself like

00:36:27,660 --> 00:36:32,849
that's a great time to build like a

00:36:29,369 --> 00:36:35,579
solid understanding but mostly for me

00:36:32,849 --> 00:36:37,740
I've been really lucky to have fallen

00:36:35,579 --> 00:36:41,250
into the SF scholar community as

00:36:37,740 --> 00:36:43,289
thoroughly as I have and have a lot of

00:36:41,250 --> 00:36:45,150
people who I just consider friends now

00:36:43,289 --> 00:36:47,970
who are people that I can go to and say

00:36:45,150 --> 00:36:51,480
so actually I asked a friend last night

00:36:47,970 --> 00:36:53,609
so what Scala written in and you know he

00:36:51,480 --> 00:36:54,720
was able to give me a great tailored to

00:36:53,609 --> 00:36:59,280
me because he knows me very well

00:36:54,720 --> 00:37:02,390
explanation of how programming language

00:36:59,280 --> 00:37:05,309
is written so with more complicated

00:37:02,390 --> 00:37:06,839
topics like this the best advice I can

00:37:05,309 --> 00:37:08,880
give is make friends who you feel

00:37:06,839 --> 00:37:10,829
comfortable asking the same questions

00:37:08,880 --> 00:37:13,589
over and over again until you really get

00:37:10,829 --> 00:37:16,069
it and ask them about times when they

00:37:13,589 --> 00:37:18,690
used it and how it was useful for them

00:37:16,069 --> 00:37:20,150
when it comes to teaching these concepts

00:37:18,690 --> 00:37:23,400
to other people

00:37:20,150 --> 00:37:26,849
small words question whether you need to

00:37:23,400 --> 00:37:30,599
use a piece of Scala vocabulary or if

00:37:26,849 --> 00:37:33,210
you can explain it in a way that someone

00:37:30,599 --> 00:37:34,500
who had never learned any Scala even if

00:37:33,210 --> 00:37:36,539
you're talking to someone who has some

00:37:34,500 --> 00:37:38,670
in a way that's someone who had never

00:37:36,539 --> 00:37:40,650
seen Scala before and just had some

00:37:38,670 --> 00:37:50,309
bare-bones programming experience could

00:37:40,650 --> 00:37:52,920
understand yeah I am in your examples of

00:37:50,309 --> 00:37:55,319
bad first projects as some of the

00:37:52,920 --> 00:37:57,240
reasoning that you used was that the

00:37:55,319 --> 00:37:59,670
person who asked me to do this could

00:37:57,240 --> 00:38:02,400
have done it a lot faster but sometimes

00:37:59,670 --> 00:38:03,539
that's going to be just a fact of life I

00:38:02,400 --> 00:38:08,220
suppose when you're mentoring someone

00:38:03,539 --> 00:38:11,250
and I'm wondering how you decide between

00:38:08,220 --> 00:38:14,369
when to make that trade-off and then

00:38:11,250 --> 00:38:17,130
if you notice the person has realized

00:38:14,369 --> 00:38:19,619
this fact and maybe it's getting them

00:38:17,130 --> 00:38:21,960
down that they know you could just have

00:38:19,619 --> 00:38:24,030
busted out so why have day why have you

00:38:21,960 --> 00:38:26,580
asked him to do it how would you deal

00:38:24,030 --> 00:38:30,030
with that yes those are two great

00:38:26,580 --> 00:38:31,859
questions as far as making the trade-off

00:38:30,030 --> 00:38:35,040
between you could do it faster and

00:38:31,859 --> 00:38:36,540
giving them experience the great thing

00:38:35,040 --> 00:38:38,400
about something like writing tests is

00:38:36,540 --> 00:38:40,859
there's not actually that much trade-off

00:38:38,400 --> 00:38:42,570
timewise for simple unit tests and the

00:38:40,859 --> 00:38:44,310
time that goes into something like that

00:38:42,570 --> 00:38:45,900
has much less to do with figuring out

00:38:44,310 --> 00:38:48,119
how to solve the problem and much more

00:38:45,900 --> 00:38:49,290
to do with figuring out like the small

00:38:48,119 --> 00:38:52,380
piece of the code base that you're

00:38:49,290 --> 00:38:56,130
writing the test for things like that I

00:38:52,380 --> 00:38:58,320
don't recommend whether or not it's a

00:38:56,130 --> 00:39:00,240
thing you want to do like often people

00:38:58,320 --> 00:39:02,099
find writing tests tedious I'm still not

00:39:00,240 --> 00:39:03,630
there but writing tests is really

00:39:02,099 --> 00:39:05,970
exciting when you're first starting out

00:39:03,630 --> 00:39:10,250
and it's like I made a thing run like I

00:39:05,970 --> 00:39:12,390
I am adding to this code base so that's

00:39:10,250 --> 00:39:16,190
whether or not you want to do it isn't a

00:39:12,390 --> 00:39:18,900
great determinant but you can sort of

00:39:16,190 --> 00:39:20,369
try to figure out the ratio between how

00:39:18,900 --> 00:39:23,030
long it would take you and how long it

00:39:20,369 --> 00:39:26,849
would take them and aim for things that

00:39:23,030 --> 00:39:29,670
fall a lot higher on that ratio I guess

00:39:26,849 --> 00:39:32,849
in for things that where it's a much

00:39:29,670 --> 00:39:35,010
more even ratio instead of you know more

00:39:32,849 --> 00:39:36,810
unbalanced one if you do find yourself

00:39:35,010 --> 00:39:39,720
in a situation where you've asked

00:39:36,810 --> 00:39:41,430
someone to do something and it hasn't

00:39:39,720 --> 00:39:43,349
they've they've fallen into a rabbit

00:39:41,430 --> 00:39:45,030
hole or they they're just too many

00:39:43,349 --> 00:39:46,470
concepts that they need to learn and you

00:39:45,030 --> 00:39:50,250
either want to take it away from them or

00:39:46,470 --> 00:39:53,099
you just want to reassure them that it's

00:39:50,250 --> 00:39:54,780
not their fault that this thing has you

00:39:53,099 --> 00:39:57,720
know grown beyond what your expectations

00:39:54,780 --> 00:39:59,700
were I recommend first of all pair

00:39:57,720 --> 00:40:03,119
programming which I have a fun little

00:39:59,700 --> 00:40:04,200
extra slide about I recommend just

00:40:03,119 --> 00:40:05,460
sitting down and say let's do this

00:40:04,200 --> 00:40:07,170
together next time you'll do it by

00:40:05,460 --> 00:40:09,780
yourself let's wrap it up right now or

00:40:07,170 --> 00:40:12,210
you know just saying this ended up being

00:40:09,780 --> 00:40:13,230
more complicated than I expected my bad

00:40:12,210 --> 00:40:16,410
sorry about that

00:40:13,230 --> 00:40:17,580
we'll take like next project I give you

00:40:16,410 --> 00:40:19,200
will be one that's a little better

00:40:17,580 --> 00:40:22,779
suited to what I've already taught you

00:40:19,200 --> 00:40:27,939
things like that hope that was helpful

00:40:22,779 --> 00:40:30,669
I I saw you had a link on the last slide

00:40:27,939 --> 00:40:32,799
which I'm excited to check out I'm also

00:40:30,669 --> 00:40:34,749
wondering if you have other recommended

00:40:32,799 --> 00:40:39,729
resources for these types of learners

00:40:34,749 --> 00:40:42,729
yes but I'm really happy you did the

00:40:39,729 --> 00:40:45,189
link up at the top is started out as a

00:40:42,729 --> 00:40:49,019
collection of resources that I found as

00:40:45,189 --> 00:40:52,089
I have been learning Scala that is what

00:40:49,019 --> 00:40:53,919
that do seem to be well-suited to

00:40:52,089 --> 00:40:58,150
someone who is coming from a background

00:40:53,919 --> 00:41:01,329
more like mine a non-traditional non

00:40:58,150 --> 00:41:03,279
statically typed background and I even

00:41:01,329 --> 00:41:05,289
have them ordered and sort of like start

00:41:03,279 --> 00:41:06,729
here then you'll be ready for this one

00:41:05,289 --> 00:41:08,709
then you'll be ready for this one so I

00:41:06,729 --> 00:41:11,019
would love for you to hand that off to

00:41:08,709 --> 00:41:15,519
any learners in your life and contribute

00:41:11,019 --> 00:41:17,829
to it if you have contributions and also

00:41:15,519 --> 00:41:20,799
up there is a slightly out of date but

00:41:17,829 --> 00:41:24,339
it's going to be in date write-up of

00:41:20,799 --> 00:41:25,630
this talk so if you have if you know

00:41:24,339 --> 00:41:27,130
someone else who's about to start

00:41:25,630 --> 00:41:29,319
mentoring that could be something you

00:41:27,130 --> 00:41:31,869
hand along to them and again I'd really

00:41:29,319 --> 00:41:41,079
welcome any feedback or contributions to

00:41:31,869 --> 00:41:45,279
that we're coming up on time so you

00:41:41,079 --> 00:41:49,419
mentioned people who don't use IDs so so

00:41:45,279 --> 00:41:51,819
I use a text editor and SBT and the

00:41:49,419 --> 00:41:54,009
problem that I have the main problem I

00:41:51,819 --> 00:41:57,099
have is that when I tell someone to use

00:41:54,009 --> 00:41:58,599
something like IntelliJ and they go

00:41:57,099 --> 00:42:00,789
ahead and try to install and all that

00:41:58,599 --> 00:42:04,269
stuff the the project like never loads

00:42:00,789 --> 00:42:05,859
cleanly and and even when it does there

00:42:04,269 --> 00:42:07,599
are like weird errors that don't exist

00:42:05,859 --> 00:42:09,099
when I build it with SBT and all this

00:42:07,599 --> 00:42:11,919
other stuff and I don't know how to use

00:42:09,099 --> 00:42:17,109
the IDE so I cannot help them through

00:42:11,919 --> 00:42:19,509
this process yes is there any like do

00:42:17,109 --> 00:42:21,729
you have any advice for that this is a

00:42:19,509 --> 00:42:24,849
good time to turn to Google also if you

00:42:21,729 --> 00:42:27,489
have co-workers in the office or friends

00:42:24,849 --> 00:42:31,390
in the community folks who are more

00:42:27,489 --> 00:42:32,859
experienced with IDs they good time to

00:42:31,390 --> 00:42:34,060
go to them and say hey could you help

00:42:32,859 --> 00:42:35,440
out we're having

00:42:34,060 --> 00:42:37,720
environment issues eventually your

00:42:35,440 --> 00:42:40,270
learner will become the expert on your

00:42:37,720 --> 00:42:42,190
team at using this ID and then you'll go

00:42:40,270 --> 00:42:44,050
to them for advice on things but it may

00:42:42,190 --> 00:42:46,540
also be worth your time to you know

00:42:44,050 --> 00:42:48,790
spend one day working in that IDE

00:42:46,540 --> 00:42:51,010
environment to get a feel for it so that

00:42:48,790 --> 00:42:53,230
you can be the first resource that they

00:42:51,010 --> 00:42:58,690
come to for simple questions about how

00:42:53,230 --> 00:43:00,070
to work with it oh okay

00:42:58,690 --> 00:43:03,420
looks like we have to wrap up but I'll

00:43:00,070 --> 00:43:06,100
be standing outside after this ready to

00:43:03,420 --> 00:43:07,780
talk more with y'all and I just wanted

00:43:06,100 --> 00:43:09,820
to finish by saying first of all

00:43:07,780 --> 00:43:12,220
Bloomberg is already hired always hiring

00:43:09,820 --> 00:43:16,720
we have some great jobs in Scala that

00:43:12,220 --> 00:43:18,010
you could fill but I hope you'll all

00:43:16,720 --> 00:43:20,470
come away from this with the

00:43:18,010 --> 00:43:23,460
understanding that I don't expect you

00:43:20,470 --> 00:43:28,660
all to be full-time teachers after this

00:43:23,460 --> 00:43:30,010
it may feel like it takes you no effort

00:43:28,660 --> 00:43:33,190
and takes time away from your other

00:43:30,010 --> 00:43:34,630
priorities to focus on bringing folks up

00:43:33,190 --> 00:43:36,460
to speed especially when they come from

00:43:34,630 --> 00:43:38,470
these non-traditional backgrounds and

00:43:36,460 --> 00:43:40,420
you have to figure out more about where

00:43:38,470 --> 00:43:42,580
they are coming from to work with them

00:43:40,420 --> 00:43:44,170
but in the long run putting more

00:43:42,580 --> 00:43:45,880
intentionality into it now and really

00:43:44,170 --> 00:43:49,750
thinking through how you're going to

00:43:45,880 --> 00:43:51,970
work with them will smooth this ramp up

00:43:49,750 --> 00:43:55,600
period for them and result in more

00:43:51,970 --> 00:43:57,150
effective and more grateful coworkers so

00:43:55,600 --> 00:44:00,309
thank you all for you

00:43:57,150 --> 00:44:00,309

YouTube URL: https://www.youtube.com/watch?v=WUoY6mohzOI


