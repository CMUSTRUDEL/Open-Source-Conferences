Title: sbt 1 by Dale Wijnand and Eugene Yokota
Publication date: 2018-09-20
Playlist: Scala Days Berlin 2018
Description: 
	This video was recorded at Scala Days Berlin 2018
Follow us on Twitter @ScalaDays or visit our website for more information http://scaladays.org 

More information and the abstract can be found here:
https://eu.scaladays.org/lect-6919-sbt-1.html
Captions: 
	00:00:04,730 --> 00:00:11,730
thanks for coming to this session we're

00:00:07,890 --> 00:00:15,959
very excited to be here um I'm so let's

00:00:11,730 --> 00:00:20,759
see oh there it is so who are these guys

00:00:15,959 --> 00:00:23,640
I'm Eugene I work for light Bend tooling

00:00:20,759 --> 00:00:25,679
team I'm a tech league there and I'm

00:00:23,640 --> 00:00:27,449
Dale and I work with Eugene and life and

00:00:25,679 --> 00:00:30,240
tooling team yep

00:00:27,449 --> 00:00:33,630
so one of our main responsibilities for

00:00:30,240 --> 00:00:35,640
tooling team is maintenance of the SVT

00:00:33,630 --> 00:00:39,060
so that's basically what we're going to

00:00:35,640 --> 00:00:40,890
talk about today on so each conference I

00:00:39,060 --> 00:00:42,570
go to I keep adding more slides so

00:00:40,890 --> 00:00:44,640
there's gonna be fresh material even if

00:00:42,570 --> 00:00:46,590
you may have seen part of this talk but

00:00:44,640 --> 00:00:48,090
it also means that like I probably have

00:00:46,590 --> 00:00:54,570
to go faster so I can cover all these

00:00:48,090 --> 00:00:56,400
different materials so ok so first I

00:00:54,570 --> 00:00:58,500
just added like 2 minutes ago I just

00:00:56,400 --> 00:01:00,090
want to talk about it because dr it's

00:00:58,500 --> 00:01:03,540
not covered in any other part of the

00:01:00,090 --> 00:01:06,720
talk is that there is a SVT by example

00:01:03,540 --> 00:01:09,509
this is a one-page tutorial that goes

00:01:06,720 --> 00:01:11,999
from like zero to like making docker

00:01:09,509 --> 00:01:15,390
container and like running application

00:01:11,999 --> 00:01:17,009
inside so if someone is new to SPG I'm

00:01:15,390 --> 00:01:18,840
not sure if any of you guys are new to

00:01:17,009 --> 00:01:21,359
SVT but if you know someone who's new to

00:01:18,840 --> 00:01:23,640
SVT this might be a kind of interesting

00:01:21,359 --> 00:01:25,439
entry point into learning what SVT can

00:01:23,640 --> 00:01:26,579
do it doesn't really explain what it

00:01:25,439 --> 00:01:29,280
does but it just kind of goes through

00:01:26,579 --> 00:01:32,670
these examples so I'll check out this

00:01:29,280 --> 00:01:35,520
stuff so today I want to talk about sort

00:01:32,670 --> 00:01:38,639
of like a what a speaking one is are

00:01:35,520 --> 00:01:42,030
compared to the you know 0:13 basically

00:01:38,639 --> 00:01:46,079
and the concept I wanted to talk about

00:01:42,030 --> 00:01:49,740
is the overall so I'm not sure how many

00:01:46,079 --> 00:01:52,740
of you been to Japan before and Kyoto

00:01:49,740 --> 00:01:54,600
like so if you go to Kyoto oftentimes

00:01:52,740 --> 00:01:56,969
you see like the shrines and temples

00:01:54,600 --> 00:01:59,310
like under construction sometimes and

00:01:56,969 --> 00:02:01,979
like the other times it's not so the

00:01:59,310 --> 00:02:04,679
idea is that the country is basically

00:02:01,979 --> 00:02:06,179
like thousand five hundred years old or

00:02:04,679 --> 00:02:08,940
something like that and these temples

00:02:06,179 --> 00:02:10,709
are like hundreds of years old and it's

00:02:08,940 --> 00:02:13,470
always raining and these things are made

00:02:10,709 --> 00:02:15,790
of what right so what do you do is that

00:02:13,470 --> 00:02:17,980
like parts gets all old

00:02:15,790 --> 00:02:20,379
rotten and things like that and actually

00:02:17,980 --> 00:02:21,670
like people who maintain it they kind of

00:02:20,379 --> 00:02:24,670
forget how to put these things together

00:02:21,670 --> 00:02:26,890
so every 30 years or 40 years or

00:02:24,670 --> 00:02:28,959
whatever these generations they actually

00:02:26,890 --> 00:02:31,299
take this whole thing apart and then put

00:02:28,959 --> 00:02:33,400
it back together and if you see like

00:02:31,299 --> 00:02:35,409
parts that's not good then you kind of

00:02:33,400 --> 00:02:37,780
substitute them and you know why you can

00:02:35,409 --> 00:02:39,280
think of like our organisms to be like

00:02:37,780 --> 00:02:41,829
that like we like we have these cells

00:02:39,280 --> 00:02:43,540
and then when cells go bad you just like

00:02:41,829 --> 00:02:45,099
kill them off and then you replace it

00:02:43,540 --> 00:02:48,189
with a new cells or you can think of it

00:02:45,099 --> 00:02:49,959
like microservices like that so that's

00:02:48,189 --> 00:02:54,849
the process of basically overall wing

00:02:49,959 --> 00:02:57,939
and the SVT one essentially is that

00:02:54,849 --> 00:03:00,040
process applied to zero 13 so we

00:02:57,939 --> 00:03:02,889
basically chop them up into different

00:03:00,040 --> 00:03:04,900
modules and parts that you know what

00:03:02,889 --> 00:03:08,169
kind of getting old we replace that with

00:03:04,900 --> 00:03:10,629
the new ones but the overall goal is SVT

00:03:08,169 --> 00:03:12,700
so the over all right so you remove the

00:03:10,629 --> 00:03:16,180
old parts you update some of the new

00:03:12,700 --> 00:03:18,129
parts and along with it so I'm not the

00:03:16,180 --> 00:03:19,180
original author of SBT actually now

00:03:18,129 --> 00:03:21,819
there is they all there is another

00:03:19,180 --> 00:03:23,379
person Mark Harris who created that so

00:03:21,819 --> 00:03:26,729
we're the current maintainer

00:03:23,379 --> 00:03:29,530
so along these process we're also like

00:03:26,729 --> 00:03:32,319
relearning how to put these like temples

00:03:29,530 --> 00:03:34,690
back together and it's actually good for

00:03:32,319 --> 00:03:38,769
the community to actually know how to

00:03:34,690 --> 00:03:41,650
build back the SBT and the goal of spt

00:03:38,769 --> 00:03:44,919
one is to not basically break your

00:03:41,650 --> 00:03:47,650
ecosystem and so the feel of the SBT one

00:03:44,919 --> 00:03:50,349
should be really really similar to SBT

00:03:47,650 --> 00:03:53,979
0:13 with just some of the parts updated

00:03:50,349 --> 00:03:56,139
that's so basically the goal so I'm

00:03:53,979 --> 00:03:59,409
gonna kind of quickly go into the sum of

00:03:56,139 --> 00:04:02,530
the parts so first this is not exactly a

00:03:59,409 --> 00:04:04,389
part thing but the the it comes up

00:04:02,530 --> 00:04:05,709
frequently is the SBT one is

00:04:04,389 --> 00:04:10,449
semantically versioned

00:04:05,709 --> 00:04:13,750
so there is SBT one one five that was

00:04:10,449 --> 00:04:17,349
recently released so one theory one

00:04:13,750 --> 00:04:20,620
wideout said series it will be binary

00:04:17,349 --> 00:04:23,470
compatible similar to that way 0 13 was

00:04:20,620 --> 00:04:26,590
compatible 3 0 13 like 1 2 3 all the way

00:04:23,470 --> 00:04:29,160
to 17 or something like that so once you

00:04:26,590 --> 00:04:32,070
release a plug-in against one point

00:04:29,160 --> 00:04:35,280
something that would work against 1:1

00:04:32,070 --> 00:04:38,040
and 1:2 right and so there is a feature

00:04:35,280 --> 00:04:41,300
release which is 1:1 and then there's

00:04:38,040 --> 00:04:44,670
patch releases like 1 1 2 and 1 1 5

00:04:41,300 --> 00:04:47,880
another thing is that the instead of

00:04:44,670 --> 00:04:50,490
using like IB layout our repositories

00:04:47,880 --> 00:04:52,050
are you know that's using pen tray and

00:04:50,490 --> 00:04:54,810
redirects and stuff like that

00:04:52,050 --> 00:04:57,890
SPT 1 is now just published into maven

00:04:54,810 --> 00:05:01,740
central just like any other libraries um

00:04:57,890 --> 00:05:04,890
and as some of you probably know if

00:05:01,740 --> 00:05:09,060
you've used that so 0:13 series was

00:05:04,890 --> 00:05:12,350
using our SPT 2.10 that's really really

00:05:09,060 --> 00:05:15,420
old now and basically like it's like AOL

00:05:12,350 --> 00:05:21,540
and SVT 1 obviously uses the latest

00:05:15,420 --> 00:05:23,220
stable want which is 2 12 the part

00:05:21,540 --> 00:05:24,900
that's a little like I think this is

00:05:23,220 --> 00:05:27,570
probably the most that you might come

00:05:24,900 --> 00:05:29,550
across as a very different part is that

00:05:27,570 --> 00:05:32,970
they are in order to keep binary

00:05:29,550 --> 00:05:36,240
compatibilities we no longer use our

00:05:32,970 --> 00:05:38,340
case classes we actually use a pseudo

00:05:36,240 --> 00:05:40,350
case class is what I call it's

00:05:38,340 --> 00:05:44,400
essentially a generated code that looks

00:05:40,350 --> 00:05:47,610
like a case class but instead of copy we

00:05:44,400 --> 00:05:49,470
use with so this allows us to

00:05:47,610 --> 00:05:51,840
essentially add a new field without

00:05:49,470 --> 00:05:54,660
breaking a binary compatibility because

00:05:51,840 --> 00:05:56,700
you know copy basically in an unemployed

00:05:54,660 --> 00:05:58,800
is really difficult it's basically

00:05:56,700 --> 00:06:01,790
impossible to keep binary compatibility

00:05:58,800 --> 00:06:04,440
if you have like unemploy and copy and

00:06:01,790 --> 00:06:09,300
conveniently also generates the jason

00:06:04,440 --> 00:06:11,940
codec for us d so if you've been to the

00:06:09,300 --> 00:06:17,340
talk earlier there was talk about zinc

00:06:11,940 --> 00:06:19,650
wan so as part of the process so not

00:06:17,340 --> 00:06:21,960
just I I think of myself sort of as a

00:06:19,650 --> 00:06:24,690
tooling team person not just the SPT

00:06:21,960 --> 00:06:27,419
person and for sort of like a sake of

00:06:24,690 --> 00:06:30,360
the tooling community one that goal was

00:06:27,419 --> 00:06:32,850
to basically allow the different build

00:06:30,360 --> 00:06:35,730
tools or experiment to basically reuse

00:06:32,850 --> 00:06:38,400
zinc so previously the incremental

00:06:35,730 --> 00:06:40,770
compiler was part of the SBT SBT

00:06:38,400 --> 00:06:42,870
codebase but we basically split it up

00:06:40,770 --> 00:06:45,690
and put it into different repository

00:06:42,870 --> 00:06:48,090
and the ownership of this repository is

00:06:45,690 --> 00:06:49,740
actually co maintained by between the

00:06:48,090 --> 00:06:51,540
light band do you who's the original

00:06:49,740 --> 00:06:54,000
author of this incremental compiler in

00:06:51,540 --> 00:06:56,700
the Scala Center and you know anyone who

00:06:54,000 --> 00:06:58,620
wants to join in can now like directly

00:06:56,700 --> 00:07:01,490
contribute to the just incremental

00:06:58,620 --> 00:07:04,440
compiler part of the SBT on the zinc and

00:07:01,490 --> 00:07:06,450
it uses this on new algorithm called

00:07:04,440 --> 00:07:08,610
class-based named hashing which is

00:07:06,450 --> 00:07:11,340
supposed to work for a large larger code

00:07:08,610 --> 00:07:17,370
base so that's one I'm not the updated

00:07:11,340 --> 00:07:21,080
part so another thing that we wanted to

00:07:17,370 --> 00:07:22,729
abstract out as another module oops

00:07:21,080 --> 00:07:28,139
sorry

00:07:22,729 --> 00:07:30,419
is the L on or the library management so

00:07:28,139 --> 00:07:32,520
one of the popular sort of the thing

00:07:30,419 --> 00:07:34,530
that we hear is that the IV is really

00:07:32,520 --> 00:07:37,979
slow and then there is the core seer

00:07:34,530 --> 00:07:40,500
right so we knew that going into SBT one

00:07:37,979 --> 00:07:43,440
but D we weren't really sure if you can

00:07:40,500 --> 00:07:45,990
make this jump immediately so the thing

00:07:43,440 --> 00:07:48,510
like that in the alarm is to create

00:07:45,990 --> 00:07:52,169
essentially the abstraction layer so

00:07:48,510 --> 00:07:55,350
that the there is zero reference to IV

00:07:52,169 --> 00:07:58,130
itself in SBT one there is now like this

00:07:55,350 --> 00:08:01,169
like a essentially cut rate there are

00:07:58,130 --> 00:08:04,160
abstracts the concept of the generation

00:08:01,169 --> 00:08:06,780
so later on we can now add the second

00:08:04,160 --> 00:08:09,539
implementation of the ALM API that is

00:08:06,780 --> 00:08:11,190
now kind of ongoing effort that would

00:08:09,539 --> 00:08:13,229
basically use course here as a back-end

00:08:11,190 --> 00:08:18,260
but you can basically be able to switch

00:08:13,229 --> 00:08:22,650
back and forth or using this Ln API um

00:08:18,260 --> 00:08:24,870
the stuff that got removed or in the so

00:08:22,650 --> 00:08:27,500
in the sort of like the parts that no

00:08:24,870 --> 00:08:31,080
longer are used in this SBT one world is

00:08:27,500 --> 00:08:33,360
SPT the plug-in I'm not sure if you any

00:08:31,080 --> 00:08:36,599
of them you guys use the different

00:08:33,360 --> 00:08:38,820
plugins but basically maybe three four

00:08:36,599 --> 00:08:41,580
years ago there's zero thirteen five

00:08:38,820 --> 00:08:43,919
that came up with the SBT auto plugin so

00:08:41,580 --> 00:08:46,170
that's now the main one so we know we

00:08:43,919 --> 00:08:49,800
really need SBT top plug-in so that's

00:08:46,170 --> 00:08:53,310
what was removed the another part that

00:08:49,800 --> 00:08:55,920
was removed is the essentially SBT 0.12

00:08:53,310 --> 00:08:58,649
style of the dsls that

00:08:55,920 --> 00:09:00,329
the ski dependency operators are

00:08:58,649 --> 00:09:03,899
popularly known as the fishbone

00:09:00,329 --> 00:09:07,110
operators Papua enrichments these are

00:09:03,899 --> 00:09:09,959
removed as well as the SPT build trait

00:09:07,110 --> 00:09:11,760
so that's the build up Scala our style

00:09:09,959 --> 00:09:13,740
of writing build that was removed and

00:09:11,760 --> 00:09:17,760
then basically we just now consolidated

00:09:13,740 --> 00:09:22,769
to using donor SBT as its only way of

00:09:17,760 --> 00:09:25,680
being able to write all your build this

00:09:22,769 --> 00:09:28,410
was a feature that we introduced in in

00:09:25,680 --> 00:09:32,370
0:13 and eventually it was stabilized

00:09:28,410 --> 00:09:37,470
and so with the major version release we

00:09:32,370 --> 00:09:40,139
could remove the old the old syntax the

00:09:37,470 --> 00:09:42,120
new parts we're going to probably talk

00:09:40,139 --> 00:09:45,180
about these later in this separate

00:09:42,120 --> 00:09:47,399
section but SBT server unifies /sand

00:09:45,180 --> 00:09:49,829
facts oh these are kind of like the new

00:09:47,399 --> 00:09:52,410
parts that were added but but basically

00:09:49,829 --> 00:09:53,519
the general feel of the SBT shouldn't

00:09:52,410 --> 00:09:57,570
like shouldn't have really changed

00:09:53,519 --> 00:10:00,300
basically so the we talked a lot about

00:09:57,570 --> 00:10:02,519
like an ecosystem so next section will

00:10:00,300 --> 00:10:07,709
kind of explore why I speak ecosystem

00:10:02,519 --> 00:10:10,110
basically is on so well not concept I

00:10:07,709 --> 00:10:13,350
think I think about is SPT itself is so

00:10:10,110 --> 00:10:15,810
like a hub right so there's all SPT

00:10:13,350 --> 00:10:19,740
itself represents bunch of bills that

00:10:15,810 --> 00:10:21,720
you guys build on and SPT itself like

00:10:19,740 --> 00:10:25,019
our a single build knows about your

00:10:21,720 --> 00:10:27,060
dependency graph and it also is able to

00:10:25,019 --> 00:10:31,560
basically harness the library ecosystem

00:10:27,060 --> 00:10:33,300
for example the 210 or 211 or naming

00:10:31,560 --> 00:10:36,019
convention that was basically created by

00:10:33,300 --> 00:10:38,339
SBT which now we can use that to

00:10:36,019 --> 00:10:40,649
basically keep the binary compatibility

00:10:38,339 --> 00:10:43,380
and cross building so before that

00:10:40,649 --> 00:10:45,120
existed like different versions of akka

00:10:43,380 --> 00:10:47,790
would have different dependency of the

00:10:45,120 --> 00:10:50,459
Scala alright so you weren't able to do

00:10:47,790 --> 00:10:52,769
the cross building or test interface is

00:10:50,459 --> 00:10:55,860
another example where SBT created the

00:10:52,769 --> 00:10:57,810
test interface so specs and scholar

00:10:55,860 --> 00:11:00,329
check and you know scholar you know

00:10:57,810 --> 00:11:02,670
Scala tests can basically use the same

00:11:00,329 --> 00:11:04,529
interface so when you type tests into

00:11:02,670 --> 00:11:06,510
SBT or you don't really have to think

00:11:04,529 --> 00:11:07,960
about different implementation of the

00:11:06,510 --> 00:11:11,110
test frameworks

00:11:07,960 --> 00:11:13,540
um the other things are like a

00:11:11,110 --> 00:11:18,700
development tasks so you can basically

00:11:13,540 --> 00:11:21,610
use SPT as a shell where you might want

00:11:18,700 --> 00:11:23,290
to like you know deploy docker or do

00:11:21,610 --> 00:11:26,110
different things specific to your

00:11:23,290 --> 00:11:27,760
company's workflow or you can customize

00:11:26,110 --> 00:11:30,370
that and then there is like a whole

00:11:27,760 --> 00:11:32,710
bunch of plugins we have and as well I

00:11:30,370 --> 00:11:35,020
think SBT is a community of different

00:11:32,710 --> 00:11:38,620
developers or both in terms of the users

00:11:35,020 --> 00:11:41,620
and as well as the contributors so how

00:11:38,620 --> 00:11:43,000
exactly big is this ecosystem right it's

00:11:41,620 --> 00:11:44,380
kind of like difficult to kind of figure

00:11:43,000 --> 00:11:46,540
out just by looking at the public

00:11:44,380 --> 00:11:49,780
numbers but here are some of the hints

00:11:46,540 --> 00:11:52,750
basically ah so in github I typed in

00:11:49,780 --> 00:11:54,880
Scala version with the extension of SBT

00:11:52,750 --> 00:11:56,860
or thinking that if you have build SBT

00:11:54,880 --> 00:12:00,220
file you can may be able to find these

00:11:56,860 --> 00:12:02,830
things and that's like 147,000 code

00:12:00,220 --> 00:12:06,700
results so that's kind of like what's on

00:12:02,830 --> 00:12:09,400
public um in terms of the download

00:12:06,700 --> 00:12:10,870
numbers these are like even more murkier

00:12:09,400 --> 00:12:14,620
because there's automatic tools and

00:12:10,870 --> 00:12:16,810
stuff like that but dr so SPT one is

00:12:14,620 --> 00:12:19,600
hosted on maybe in center right so I'm

00:12:16,810 --> 00:12:24,040
just looking at the SPT ones adoption

00:12:19,600 --> 00:12:27,670
curve and last month it was around two

00:12:24,040 --> 00:12:30,700
hundred nine thousand download and a

00:12:27,670 --> 00:12:34,210
week ago we released SBT one one five

00:12:30,700 --> 00:12:38,050
right and that installer download number

00:12:34,210 --> 00:12:41,020
was around twelve thousand as of this

00:12:38,050 --> 00:12:43,150
morning so basically these are basically

00:12:41,020 --> 00:12:46,450
the numbers what we're thinking about is

00:12:43,150 --> 00:12:48,520
the you know these bunch of users so the

00:12:46,450 --> 00:12:50,830
reason why these are kind of important

00:12:48,520 --> 00:12:53,230
is that even though there are basically

00:12:50,830 --> 00:12:55,030
things that you can try to rebuild

00:12:53,230 --> 00:12:57,640
another build tools or something like

00:12:55,030 --> 00:12:59,770
that what I kind of keep in mind is

00:12:57,640 --> 00:13:02,800
basically even if he can make like a

00:12:59,770 --> 00:13:04,900
small increments into SBT that can

00:13:02,800 --> 00:13:07,540
affect like a whole bunch of uh you know

00:13:04,900 --> 00:13:10,210
the existing build users that can like

00:13:07,540 --> 00:13:13,440
improve their productivity or like you

00:13:10,210 --> 00:13:16,780
know lives another big thing about

00:13:13,440 --> 00:13:19,270
ecosystem is the plugins is a really

00:13:16,780 --> 00:13:22,510
great way of enhanced

00:13:19,270 --> 00:13:26,740
you're you know like the native packager

00:13:22,510 --> 00:13:29,100
you know is Mookie's in josh's a plugin

00:13:26,740 --> 00:13:31,870
that can really you know enhance the

00:13:29,100 --> 00:13:33,790
capability of the pill to its off by

00:13:31,870 --> 00:13:36,850
basically by adding like two lines and

00:13:33,790 --> 00:13:39,250
your build or you can turn your app into

00:13:36,850 --> 00:13:41,290
a docker container and do all these cool

00:13:39,250 --> 00:13:44,050
thanks sorry

00:13:41,290 --> 00:13:47,740
so the this is like the plugins for us

00:13:44,050 --> 00:13:50,080
is a huge part of is a huge part of the

00:13:47,740 --> 00:13:52,029
ecosystem and it's something that we

00:13:50,080 --> 00:13:53,680
care very much about and it's why we

00:13:52,029 --> 00:13:56,440
make so many references to binary

00:13:53,680 --> 00:13:58,810
compatibility because these plugins use

00:13:56,440 --> 00:14:00,940
SBT as a library they extend the

00:13:58,810 --> 00:14:04,920
behavior SPT and and so they integrate

00:14:00,940 --> 00:14:07,420
in its a programmatic way with SBT and

00:14:04,920 --> 00:14:10,260
and it they provide so much value to the

00:14:07,420 --> 00:14:12,670
SBT community and so we're very

00:14:10,260 --> 00:14:16,149
tentative and careful and making sure

00:14:12,670 --> 00:14:18,250
that when we make changes to SBT and and

00:14:16,149 --> 00:14:20,830
make fixes that we don't break these

00:14:18,250 --> 00:14:22,390
plugins so that the maintain is for

00:14:20,830 --> 00:14:24,760
these plugins can continue to safely

00:14:22,390 --> 00:14:29,529
release new versions or new or

00:14:24,760 --> 00:14:32,050
introduced new plugins and so yeah so

00:14:29,529 --> 00:14:33,579
that just wanted to sort of explain why

00:14:32,050 --> 00:14:35,200
binary compatibility is so important

00:14:33,579 --> 00:14:37,720
because we have this large period of

00:14:35,200 --> 00:14:40,810
time where we commit to our api and

00:14:37,720 --> 00:14:43,060
people can safely introduce new plugins

00:14:40,810 --> 00:14:47,950
or in this case it was about porting the

00:14:43,060 --> 00:14:51,250
plugins from 0 13 to 51 yep yeah so this

00:14:47,950 --> 00:14:54,760
also kind of shows how SBT one is uptake

00:14:51,250 --> 00:14:56,410
is pretty good because out of 340 ones

00:14:54,760 --> 00:14:59,230
there are 13 plugins according to the

00:14:56,410 --> 00:15:01,570
scala tax basically 200 of them have

00:14:59,230 --> 00:15:04,180
basically migrated there already and i'm

00:15:01,570 --> 00:15:08,980
guessing those are the top most popular

00:15:04,180 --> 00:15:11,350
200 and here's a one of the you know the

00:15:08,980 --> 00:15:12,579
what we were doing sort of behind this

00:15:11,350 --> 00:15:13,899
stage i'm not sure if it's complete

00:15:12,579 --> 00:15:18,310
behind the stage because we're tweeting

00:15:13,899 --> 00:15:20,380
and stuff is that the we use the github

00:15:18,310 --> 00:15:23,020
star as a metrics to find out how

00:15:20,380 --> 00:15:25,089
popular the plugins are and then created

00:15:23,020 --> 00:15:28,420
this like a wiki page basically there

00:15:25,089 --> 00:15:31,300
has a number of you know like the stars

00:15:28,420 --> 00:15:33,430
and the status and then tweeted at us

00:15:31,300 --> 00:15:36,540
out and ask people to jump

00:15:33,430 --> 00:15:41,590
and help migrate the odds or 13 plugins

00:15:36,540 --> 00:15:44,170
into our you know SBT one so within 10

00:15:41,590 --> 00:15:47,800
days we also add like there's like in

00:15:44,170 --> 00:15:51,370
progress release released so you know

00:15:47,800 --> 00:15:54,210
like in maybe like there was like a 50

00:15:51,370 --> 00:15:57,400
plugins within like a couple weeks and

00:15:54,210 --> 00:15:58,960
the I think in the 3-4 months or

00:15:57,400 --> 00:16:00,820
something there's like hundred plugins

00:15:58,960 --> 00:16:02,980
now and these are the basically the top

00:16:00,820 --> 00:16:04,570
ones that we cared about and then the

00:16:02,980 --> 00:16:05,890
Skydeck sources show that there is a

00:16:04,570 --> 00:16:08,230
whole bunch of other that happened

00:16:05,890 --> 00:16:10,450
afterwards as well so these are

00:16:08,230 --> 00:16:12,460
basically community efforts that we're

00:16:10,450 --> 00:16:14,800
doing so it's not just us we're like we

00:16:12,460 --> 00:16:16,360
encourage people to do these but a lot

00:16:14,800 --> 00:16:21,010
of these are done by the community

00:16:16,360 --> 00:16:23,140
efforts to migrate this ecosystem on so

00:16:21,010 --> 00:16:28,270
you want to talk about yes so I wanted

00:16:23,140 --> 00:16:30,640
to kind of talk to an audience that you

00:16:28,270 --> 00:16:32,890
know we might not be able to reach often

00:16:30,640 --> 00:16:35,290
sort of give it more understanding of

00:16:32,890 --> 00:16:38,680
SBT as a project as opposed to as a

00:16:35,290 --> 00:16:41,440
product and and very the settlement here

00:16:38,680 --> 00:16:44,200
is very much to explain how you know we

00:16:41,440 --> 00:16:45,700
stick to as much as we can to the way

00:16:44,200 --> 00:16:49,090
things are done in other projects other

00:16:45,700 --> 00:16:51,490
open-source projects so you know we use

00:16:49,090 --> 00:16:53,470
gator for example to communicate and we

00:16:51,490 --> 00:16:55,960
have what seems to be a usual split

00:16:53,470 --> 00:16:57,160
between talking to the users and and and

00:16:55,960 --> 00:16:59,200
having a dedicated channel for

00:16:57,160 --> 00:17:02,140
contributors to talk about internal

00:16:59,200 --> 00:17:05,680
changes and and within that community of

00:17:02,140 --> 00:17:07,959
contributors we have weekly meetings

00:17:05,680 --> 00:17:10,570
that you know Eugene and I used to to

00:17:07,959 --> 00:17:13,180
coordinate things and and we try and we

00:17:10,570 --> 00:17:16,060
invite contributors people interested to

00:17:13,180 --> 00:17:19,600
make changes to SBT to to join us every

00:17:16,060 --> 00:17:21,400
Wednesday to talk about maybe ideas they

00:17:19,600 --> 00:17:23,589
have you know maybe they they have

00:17:21,400 --> 00:17:27,220
something they want to do in terms of

00:17:23,589 --> 00:17:30,460
changing SBT we have a discourse channel

00:17:27,220 --> 00:17:32,290
from home light band where we talked to

00:17:30,460 --> 00:17:35,860
tooling in general and SBT is obviously

00:17:32,290 --> 00:17:39,070
a part of that we use a tag on Stack

00:17:35,860 --> 00:17:41,020
Overflow Eugene and I both try best to

00:17:39,070 --> 00:17:45,280
to try and help people there along with

00:17:41,020 --> 00:17:47,160
on Gator we use github and we have a

00:17:45,280 --> 00:17:50,790
Twitter account so it's

00:17:47,160 --> 00:17:52,230
again as I say ways to show you how this

00:17:50,790 --> 00:17:57,120
is just a software project like many

00:17:52,230 --> 00:17:59,940
others and on a switch and so as Eugene

00:17:57,120 --> 00:18:02,850
mentioned at the beginning in SP t1 we

00:17:59,940 --> 00:18:07,290
started to break down SBT instead of the

00:18:02,850 --> 00:18:09,150
subsystems that compose SBT so zinc has

00:18:07,290 --> 00:18:10,440
been referenced like library management

00:18:09,150 --> 00:18:13,799
there's a couple of smaller ones you

00:18:10,440 --> 00:18:15,630
tale an i/o and as a few additional ones

00:18:13,799 --> 00:18:19,260
on the side that I just wanted to

00:18:15,630 --> 00:18:21,840
mention because you know they are

00:18:19,260 --> 00:18:23,610
relevant at some you know within SVT's

00:18:21,840 --> 00:18:25,679
development so there's a couple of names

00:18:23,610 --> 00:18:27,950
on the slide of the part like the

00:18:25,679 --> 00:18:29,940
website for example is a standalone

00:18:27,950 --> 00:18:31,830
repository where we we have

00:18:29,940 --> 00:18:35,610
documentation and release notes and

00:18:31,830 --> 00:18:41,390
recently the examples page to help users

00:18:35,610 --> 00:18:44,669
learn about how to use SPT and and as

00:18:41,390 --> 00:18:47,910
many other scholar projects out there we

00:18:44,669 --> 00:18:51,030
use SPT ourselves we use Travis CI for

00:18:47,910 --> 00:18:52,559
validation and we test things with the

00:18:51,030 --> 00:18:55,500
test tools that exists in Excel

00:18:52,559 --> 00:18:58,590
ecosystem so if you do look at

00:18:55,500 --> 00:19:00,510
contributing an SPT you'll find that we

00:18:58,590 --> 00:19:03,600
use SPT and then we test with Scala test

00:19:00,510 --> 00:19:06,270
or specs too and so forth so that's as I

00:19:03,600 --> 00:19:08,309
said the sentiment here is that it's

00:19:06,270 --> 00:19:12,120
very similar to to two other projects

00:19:08,309 --> 00:19:13,740
and there are many ways you can

00:19:12,120 --> 00:19:17,130
contribute like I mentioned a bunch of

00:19:13,740 --> 00:19:19,110
things about the code and how its tested

00:19:17,130 --> 00:19:23,100
and so forth but you can also help in

00:19:19,110 --> 00:19:25,620
many other ways being present on the

00:19:23,100 --> 00:19:27,990
Gator channel or on on Stack Overflow

00:19:25,620 --> 00:19:31,730
and helping other users for us is is

00:19:27,990 --> 00:19:34,110
helping contribute to the project and

00:19:31,730 --> 00:19:36,690
documentation fixes as is often

00:19:34,110 --> 00:19:39,090
referenced is a great way to help as

00:19:36,690 --> 00:19:41,790
Eugene and I you know as Eugene said

00:19:39,090 --> 00:19:44,220
we're often learning how a sweetie works

00:19:41,790 --> 00:19:45,870
but at this point we've learned a lot

00:19:44,220 --> 00:19:49,169
we've learnt a bit too much about HP T

00:19:45,870 --> 00:19:52,710
so it's hard for us to explain SBT in a

00:19:49,169 --> 00:19:55,590
way that you know by removing with bar

00:19:52,710 --> 00:19:59,010
so we really understand ourselves so

00:19:55,590 --> 00:20:02,160
your external people helping with that

00:19:59,010 --> 00:20:05,550
improves projects and of course

00:20:02,160 --> 00:20:08,760
reporting issues helping grow that the

00:20:05,550 --> 00:20:10,500
plug-in ecosystem as distinct domain and

00:20:08,760 --> 00:20:14,460
so niche domains get addressed is

00:20:10,500 --> 00:20:17,520
helping SVT be successful and ultimately

00:20:14,460 --> 00:20:23,850
passion a core is what's usually

00:20:17,520 --> 00:20:26,190
referred to as a contribution a few

00:20:23,850 --> 00:20:29,490
examples of how George F in your net

00:20:26,190 --> 00:20:30,720
sure yeah so this is kind of like a more

00:20:29,490 --> 00:20:34,710
newer way of thinking about

00:20:30,720 --> 00:20:36,420
contributions but the issue tracker is

00:20:34,710 --> 00:20:38,640
like one of these like a living thing

00:20:36,420 --> 00:20:40,710
so you know one of the great ways to

00:20:38,640 --> 00:20:43,380
contribute actually if you don't really

00:20:40,710 --> 00:20:45,600
have time to like code and stuff but da

00:20:43,380 --> 00:20:48,420
is just kinda like getting attention to

00:20:45,600 --> 00:20:50,460
to us so sometimes like we're just like

00:20:48,420 --> 00:20:53,130
bogged down in like some like whatever

00:20:50,460 --> 00:20:54,720
tasks but the there could be kind of

00:20:53,130 --> 00:20:57,540
interesting discussion that's happening

00:20:54,720 --> 00:21:00,000
in the issue so if you want to like get

00:20:57,540 --> 00:21:01,170
the attention of us in some channel

00:21:00,000 --> 00:21:02,550
saying hey there's like a really

00:21:01,170 --> 00:21:05,040
interesting issue that's being reported

00:21:02,550 --> 00:21:06,480
but like hasn't we we weren't paying

00:21:05,040 --> 00:21:08,280
attention for like a couple months or

00:21:06,480 --> 00:21:09,960
something like that right so one of the

00:21:08,280 --> 00:21:11,940
ways to contribute might be just like

00:21:09,960 --> 00:21:14,460
getting our attention somehow that there

00:21:11,940 --> 00:21:19,320
was an issue or try to like reproduce it

00:21:14,460 --> 00:21:21,690
and get more data into trackers or one

00:21:19,320 --> 00:21:24,150
other thing we started doing there was a

00:21:21,690 --> 00:21:25,380
hackathon yesterday right and it was

00:21:24,150 --> 00:21:27,120
like a really interesting experience

00:21:25,380 --> 00:21:29,700
just talking to a bunch of contributors

00:21:27,120 --> 00:21:32,190
and then seeing them trying to set up so

00:21:29,700 --> 00:21:34,500
the to set this up one of the things we

00:21:32,190 --> 00:21:37,170
did is like a tag some of the stuff

00:21:34,500 --> 00:21:40,620
that's Help Wanted or good first issues

00:21:37,170 --> 00:21:42,540
and just put the link into here's the

00:21:40,620 --> 00:21:44,640
likely source code you know that you

00:21:42,540 --> 00:21:47,310
need to fix to fix this particular bug

00:21:44,640 --> 00:21:49,260
and we can do that pretty quickly so if

00:21:47,310 --> 00:21:51,510
someone wants to ask hey you know like I

00:21:49,260 --> 00:21:53,940
want to fix this issue like you know

00:21:51,510 --> 00:21:56,070
where do you typically start with this

00:21:53,940 --> 00:21:57,690
particular code we can usually find you

00:21:56,070 --> 00:22:00,030
know tell you in 10 minutes or you know

00:21:57,690 --> 00:22:02,190
or whatever so these are kind of like

00:22:00,030 --> 00:22:04,350
interesting like a ways of contributing

00:22:02,190 --> 00:22:06,180
is to kind of like go into the github

00:22:04,350 --> 00:22:10,290
issues and then kind of like do the

00:22:06,180 --> 00:22:12,780
gardening basically um so patching the

00:22:10,290 --> 00:22:15,390
core that's the actual coding part

00:22:12,780 --> 00:22:18,179
one thing that we encouraged is to if

00:22:15,390 --> 00:22:20,340
you have ideas or try to open the other

00:22:18,179 --> 00:22:22,679
white band discuss forum instead of

00:22:20,340 --> 00:22:24,929
spending too much time like we encourage

00:22:22,679 --> 00:22:26,700
coding but the it won't suck if you

00:22:24,929 --> 00:22:29,909
spend like your all weekend and then

00:22:26,700 --> 00:22:31,740
like there goes and debates like and

00:22:29,909 --> 00:22:33,419
shuts shut the whole thing down right

00:22:31,740 --> 00:22:35,520
like if you're doing it in like some

00:22:33,419 --> 00:22:37,590
ways that the community people didn't

00:22:35,520 --> 00:22:39,809
like or something like that so we

00:22:37,590 --> 00:22:42,630
encourage like a discussion first sort

00:22:39,809 --> 00:22:44,340
of and then you know once the people are

00:22:42,630 --> 00:22:46,380
kind of settled into how things should

00:22:44,340 --> 00:22:48,360
work and then you can kind of like spend

00:22:46,380 --> 00:22:51,240
time more coding so that's kind of like

00:22:48,360 --> 00:22:53,010
the one thing the other thing that we

00:22:51,240 --> 00:22:56,070
it's not here but we discussed a lot

00:22:53,010 --> 00:22:59,520
recently this idea of the optimistic

00:22:56,070 --> 00:23:01,980
merging where instead of like going too

00:22:59,520 --> 00:23:04,860
much detail into the other code reviews

00:23:01,980 --> 00:23:06,960
we basically take your PO request and

00:23:04,860 --> 00:23:08,549
then just like massage it ourselves if

00:23:06,960 --> 00:23:11,370
we don't like like oh you're using

00:23:08,549 --> 00:23:12,990
arrays versus vector versus this and

00:23:11,370 --> 00:23:14,820
that like it's just easier if you just

00:23:12,990 --> 00:23:16,500
take your code and like fix ourselves or

00:23:14,820 --> 00:23:19,289
something so that's something that we

00:23:16,500 --> 00:23:20,460
might try to do and it usually works

00:23:19,289 --> 00:23:22,890
what we're like we do that to each other

00:23:20,460 --> 00:23:26,840
sometimes like your fork is curved and

00:23:22,890 --> 00:23:26,840
evokes my code and back and forth so

00:23:27,020 --> 00:23:33,330
yeah so what are the what are the

00:23:30,630 --> 00:23:37,500
strengths and SPT as well is we have a

00:23:33,330 --> 00:23:38,940
plug-in ecosystem which allows things to

00:23:37,500 --> 00:23:42,240
be explored within a plug-in ecosystem

00:23:38,940 --> 00:23:44,220
if it's a niche domain then you know it

00:23:42,240 --> 00:23:46,620
can be born as a plug-in and stay as a

00:23:44,220 --> 00:23:49,860
plug-in but sometimes and when there is

00:23:46,620 --> 00:23:51,330
history for this where some part of SVT

00:23:49,860 --> 00:23:54,659
doesn't quite work the way you want it

00:23:51,330 --> 00:23:58,080
to work and and the lovely thing about

00:23:54,659 --> 00:24:01,409
SVT is that you can explore an idea as a

00:23:58,080 --> 00:24:04,350
separate plug-in without requiring to

00:24:01,409 --> 00:24:06,330
modify the core and and and at that

00:24:04,350 --> 00:24:08,760
point you're no longer bound to the

00:24:06,330 --> 00:24:12,120
cadence the release cadence of SBT to

00:24:08,760 --> 00:24:13,520
sort of merging into SVT and integrating

00:24:12,120 --> 00:24:18,240
you can you can just iterate

00:24:13,520 --> 00:24:20,970
independently and actually the the this

00:24:18,240 --> 00:24:22,890
this modifying the way that SBT works

00:24:20,970 --> 00:24:24,330
can even start earlier than a plug-in

00:24:22,890 --> 00:24:26,130
you can it within your build

00:24:24,330 --> 00:24:28,170
you have full flexibility

00:24:26,130 --> 00:24:32,760
because it's a Scala is defined in Scala

00:24:28,170 --> 00:24:34,650
to define behavior within the build you

00:24:32,760 --> 00:24:36,300
can then eventually like step two might

00:24:34,650 --> 00:24:37,920
be to extract that and generalize it

00:24:36,300 --> 00:24:39,600
away from your specific project in your

00:24:37,920 --> 00:24:42,330
specific build so that would be a local

00:24:39,600 --> 00:24:44,430
plugin and then you might find that that

00:24:42,330 --> 00:24:46,130
works really well and you want to use it

00:24:44,430 --> 00:24:49,410
in multiple bills and you can extract it

00:24:46,130 --> 00:24:54,660
in a standalone plugin and and then

00:24:49,410 --> 00:24:57,060
these are examples here of of things

00:24:54,660 --> 00:24:59,790
that were experiment with and in

00:24:57,060 --> 00:25:02,270
iterated on and to the point where they

00:24:59,790 --> 00:25:05,400
were better than the way SBT worked so

00:25:02,270 --> 00:25:08,700
dual game is maybe one that's known a

00:25:05,400 --> 00:25:11,160
bit better where one of the one of the

00:25:08,700 --> 00:25:15,060
things that SBT did is it has support

00:25:11,160 --> 00:25:17,190
from multiple multiple Scala versions

00:25:15,060 --> 00:25:19,470
but sometimes we're going to build where

00:25:17,190 --> 00:25:22,740
you have multiple projects not all

00:25:19,470 --> 00:25:25,620
projects use the same set of Scala

00:25:22,740 --> 00:25:31,200
versions and and so the way the support

00:25:25,620 --> 00:25:33,690
that SBT had for do make doing things

00:25:31,200 --> 00:25:35,340
across multiple scholar versions didn't

00:25:33,690 --> 00:25:38,100
handle that different projects had

00:25:35,340 --> 00:25:41,730
different sets of versions so doget was

00:25:38,100 --> 00:25:43,680
Eugene's experiment to to look at how

00:25:41,730 --> 00:25:46,620
this could be done better how support

00:25:43,680 --> 00:25:50,040
for variant Scala versions could could

00:25:46,620 --> 00:25:53,550
be fixed in SBT and and eventually the

00:25:50,040 --> 00:25:55,350
whole community basically used it and it

00:25:53,550 --> 00:25:57,360
was was better than the way core worked

00:25:55,350 --> 00:26:00,870
and we rolled it in and slash is a

00:25:57,360 --> 00:26:04,110
similar similar story where we had this

00:26:00,870 --> 00:26:06,540
while Eugene had this idea of I think we

00:26:04,110 --> 00:26:08,100
talk we talk later about slash but about

00:26:06,540 --> 00:26:09,780
this difference in syntax and we

00:26:08,100 --> 00:26:12,060
explored it in Eugene exported in a

00:26:09,780 --> 00:26:14,340
plug-in and and it looked great it

00:26:12,060 --> 00:26:17,010
worked great and we brought it in and we

00:26:14,340 --> 00:26:18,720
shipped it in SBT itself so one of the

00:26:17,010 --> 00:26:20,940
thing that's kind of unique of our SBT

00:26:18,720 --> 00:26:23,460
potentially is that like compile code

00:26:20,940 --> 00:26:24,960
like tasks and tests tax and like

00:26:23,460 --> 00:26:26,850
something that you are probably used to

00:26:24,960 --> 00:26:29,310
they're actually implemented as a

00:26:26,850 --> 00:26:31,920
plug-in itself so you can a lot of times

00:26:29,310 --> 00:26:34,230
swap out these implementation that's

00:26:31,920 --> 00:26:36,930
already in SVT and really flexible way

00:26:34,230 --> 00:26:38,610
so let's that's one of the reason you're

00:26:36,930 --> 00:26:40,670
able to basically write another plug-in

00:26:38,610 --> 00:26:44,520
that replaces its behavior

00:26:40,670 --> 00:26:48,270
so server is this is a brand new feature

00:26:44,520 --> 00:26:50,760
of SVT um so the you know like there's

00:26:48,270 --> 00:26:52,200
been some mention of us LSP so I just

00:26:50,760 --> 00:26:54,720
want to kind of quickly mention this is

00:26:52,200 --> 00:26:57,240
the AH the created by Microsoft

00:26:54,720 --> 00:27:00,240
originally for the vs code ah vs code is

00:26:57,240 --> 00:27:02,220
this spa editor not a visual studio code

00:27:00,240 --> 00:27:04,740
I mean the idea is that the traditional

00:27:02,220 --> 00:27:07,440
the like Eclipse and IntelliJ and all

00:27:04,740 --> 00:27:08,820
these are IDs like Visual Studio there

00:27:07,440 --> 00:27:11,460
are kind of hard-coded to one language

00:27:08,820 --> 00:27:13,440
right so only like the huge vendors with

00:27:11,460 --> 00:27:16,080
like a lot of budget can you know create

00:27:13,440 --> 00:27:18,150
like this great RTE and then kind of

00:27:16,080 --> 00:27:20,370
like gradually they're like language or

00:27:18,150 --> 00:27:22,560
the ID kind of loses popularity and then

00:27:20,370 --> 00:27:25,950
like it kind of dies or something so

00:27:22,560 --> 00:27:27,750
instead of doing this what Microsoft did

00:27:25,950 --> 00:27:29,190
what the vs code is that the realize

00:27:27,750 --> 00:27:30,900
that there's a whole bunch of languages

00:27:29,190 --> 00:27:31,800
that's happening and they couldn't do

00:27:30,900 --> 00:27:34,440
this on their own

00:27:31,800 --> 00:27:36,060
so they created this like a protocol

00:27:34,440 --> 00:27:38,790
called LSP language server protocol

00:27:36,060 --> 00:27:42,240
where you basically make this like a

00:27:38,790 --> 00:27:44,340
node web server like abstraction of the

00:27:42,240 --> 00:27:48,570
IDE features like go to the definition

00:27:44,340 --> 00:27:50,700
or just type compile and people realize

00:27:48,570 --> 00:27:53,070
that oh like this is just a protocol we

00:27:50,700 --> 00:27:56,640
can do this ourselves to like sublime in

00:27:53,070 --> 00:28:00,120
Eclipse J and niobium they all kind of

00:27:56,640 --> 00:28:03,120
act as the LSP client in the backend or

00:28:00,120 --> 00:28:05,670
people can like implement Python and all

00:28:03,120 --> 00:28:08,040
these different things and actually SBT

00:28:05,670 --> 00:28:11,550
server kind of like works sort of as the

00:28:08,040 --> 00:28:13,140
LSP server so you can point vs code

00:28:11,550 --> 00:28:14,010
against it and then you can just kind of

00:28:13,140 --> 00:28:17,400
like do your thing

00:28:14,010 --> 00:28:22,670
oh I can actually show you this what

00:28:17,400 --> 00:28:22,670
y'all let's see if this works

00:28:33,830 --> 00:28:43,500
can you guys see from law all the way in

00:28:38,070 --> 00:28:45,450
the back okay so I opened des Code and

00:28:43,500 --> 00:28:56,550
there is actually a lot of plugin for

00:28:45,450 --> 00:28:59,820
this on and object so I'm just gonna

00:28:56,550 --> 00:29:02,580
make an error try to make an error so

00:28:59,820 --> 00:29:04,830
that's how long it took to get the red

00:29:02,580 --> 00:29:06,870
squigglies basically right like in the

00:29:04,830 --> 00:29:09,660
or because it's zoomed out I have to

00:29:06,870 --> 00:29:11,670
finally go here and this shows the

00:29:09,660 --> 00:29:14,190
location of the error message basically

00:29:11,670 --> 00:29:17,100
all right so this is just basically

00:29:14,190 --> 00:29:21,540
running SBT inside of this like a tab

00:29:17,100 --> 00:29:23,690
here so you can know so like you know

00:29:21,540 --> 00:29:28,350
normal stuff like name or something

00:29:23,690 --> 00:29:31,890
right and then say and all you do is

00:29:28,350 --> 00:29:34,290
like command S Save and then it compiles

00:29:31,890 --> 00:29:36,510
right so basically kind of like

00:29:34,290 --> 00:29:38,250
replacing tilde kind of thing but just

00:29:36,510 --> 00:29:40,410
with like a saving function so it's kind

00:29:38,250 --> 00:29:42,240
of like a classic Eclipse kind of thing

00:29:40,410 --> 00:29:43,890
where you hit save and then it compiles

00:29:42,240 --> 00:29:49,140
and then you get the error message like

00:29:43,890 --> 00:29:51,510
this so that's the obvious code oh this

00:29:49,140 --> 00:29:54,330
is sort of like a like a low-tech LSP

00:29:51,510 --> 00:29:56,850
server Scala Center and other guys are

00:29:54,330 --> 00:29:58,650
making even better one so hopefully soon

00:29:56,850 --> 00:30:00,870
we'll have like even better one that has

00:29:58,650 --> 00:30:02,580
like yeah indexing and all these

00:30:00,870 --> 00:30:05,370
different things well this kind of goes

00:30:02,580 --> 00:30:08,370
to show that the one of the key goal of

00:30:05,370 --> 00:30:12,900
dr SBT server basically is more about

00:30:08,370 --> 00:30:14,180
integrations so the SPT you know like I

00:30:12,900 --> 00:30:16,710
was saying it's like a hub of

00:30:14,180 --> 00:30:19,710
incremental compiler and like your

00:30:16,710 --> 00:30:22,080
dependency graph but the there's this

00:30:19,710 --> 00:30:24,090
all these need for like more like a

00:30:22,080 --> 00:30:26,010
richer experience right like being able

00:30:24,090 --> 00:30:28,290
to jump errors and Cole navigation and

00:30:26,010 --> 00:30:30,180
things like that and LSP and the event

00:30:28,290 --> 00:30:34,470
logging kind of sits right in the middle

00:30:30,180 --> 00:30:37,170
basically no skip the history of SBT

00:30:34,470 --> 00:30:38,220
server basically you know the activator

00:30:37,170 --> 00:30:40,980
sort of like you can see

00:30:38,220 --> 00:30:44,549
as like a kind of indecent direction

00:30:40,980 --> 00:30:46,679
towards that stuff and the the basically

00:30:44,549 --> 00:30:48,659
show this stuff already but one of the

00:30:46,679 --> 00:30:50,400
kinda like interesting experiments

00:30:48,659 --> 00:30:52,919
toward Nino like a direction of doc

00:30:50,400 --> 00:30:55,020
being able to use these server is like I

00:30:52,919 --> 00:30:57,030
said the Rd integration is one another

00:30:55,020 --> 00:30:58,770
potential is basically be able to

00:30:57,030 --> 00:31:00,630
distribute this build once you're able

00:30:58,770 --> 00:31:03,059
to basically talk to another machine and

00:31:00,630 --> 00:31:04,799
like cooperate the bill together and

00:31:03,059 --> 00:31:06,600
stuff like that but these are basically

00:31:04,799 --> 00:31:15,240
some of the ideas that can potentially

00:31:06,600 --> 00:31:16,830
be used okay so alright so let's talk

00:31:15,240 --> 00:31:24,030
about unify syntax I think these are

00:31:16,830 --> 00:31:27,200
more fun um so right so insert thirteen

00:31:24,030 --> 00:31:30,450
there was basically two notations for

00:31:27,200 --> 00:31:32,010
build right so there's one build

00:31:30,450 --> 00:31:35,130
description which is what you write

00:31:32,010 --> 00:31:37,700
inside of the build order SBT and then

00:31:35,130 --> 00:31:40,919
there's a whole other language within

00:31:37,700 --> 00:31:44,039
the interactive shell if you want to do

00:31:40,919 --> 00:31:47,600
something more complex like I want to

00:31:44,039 --> 00:31:49,890
run the you know this sub projects test

00:31:47,600 --> 00:31:52,020
configuration compilation or something

00:31:49,890 --> 00:31:53,970
like that you have to know like slash

00:31:52,020 --> 00:31:56,700
and Collins and double Collins and all

00:31:53,970 --> 00:31:58,500
these different things and I always kind

00:31:56,700 --> 00:32:01,440
of like annoyed me that you have this

00:31:58,500 --> 00:32:04,230
like two different notation for exactly

00:32:01,440 --> 00:32:06,900
same thing so that's kind of like

00:32:04,230 --> 00:32:10,590
example that right so you say like skull

00:32:06,900 --> 00:32:12,360
options in test console value or you do

00:32:10,590 --> 00:32:17,490
that in shell using columns and double

00:32:12,360 --> 00:32:19,409
columns so SPT one 1x or they're the

00:32:17,490 --> 00:32:26,010
same thing you just use slash for

00:32:19,409 --> 00:32:30,720
everything so the unification basically

00:32:26,010 --> 00:32:33,690
is slash you say reference that refers

00:32:30,720 --> 00:32:36,210
to basically either disk build or naval

00:32:33,690 --> 00:32:40,169
your sub project and you write the

00:32:36,210 --> 00:32:42,809
configuration and all uppercase and key

00:32:40,169 --> 00:32:44,549
will be in the lower case so all if you

00:32:42,809 --> 00:32:47,789
want like you know basically what you

00:32:44,549 --> 00:32:50,730
typically write and build is PT or it

00:32:47,789 --> 00:32:52,890
basically works both ways so food

00:32:50,730 --> 00:32:54,780
passed uppercase t-test / compiled

00:32:52,890 --> 00:32:56,760
basically you know as you can figure it

00:32:54,780 --> 00:32:59,520
out so I test you know configuration

00:32:56,760 --> 00:33:01,440
compiled and this was partially aided by

00:32:59,520 --> 00:33:07,200
the the work that we'd already done in

00:33:01,440 --> 00:33:10,049
SBT 0:13 of transitioning keys so toss

00:33:07,200 --> 00:33:11,429
keys it's setting keys from kabab case

00:33:10,049 --> 00:33:15,330
where it's called you know where the -

00:33:11,429 --> 00:33:17,910
dashes in the middle - camel case so

00:33:15,330 --> 00:33:21,000
some of this had already been started in

00:33:17,910 --> 00:33:23,940
0:13 where there was a difference

00:33:21,000 --> 00:33:26,280
between the codes the the configuration

00:33:23,940 --> 00:33:28,650
stage of SBT and actual the runtime of

00:33:26,280 --> 00:33:31,650
SVT when you're interacting SBT in the

00:33:28,650 --> 00:33:33,660
shell so we transition most things and a

00:33:31,650 --> 00:33:36,780
lot of the plugins transitions as well -

00:33:33,660 --> 00:33:41,790
using a camel case but the rest of the

00:33:36,780 --> 00:33:44,730
syntax had had the original shell syntax

00:33:41,790 --> 00:33:48,000
and so this difference was was jarring

00:33:44,730 --> 00:33:51,990
was it was an unnecessary learning curve

00:33:48,000 --> 00:33:54,840
of of SBT to have two versions and there

00:33:51,990 --> 00:33:57,090
were reasons why each had developed in

00:33:54,840 --> 00:33:59,309
the direction they had thankfully we

00:33:57,090 --> 00:34:02,040
were able to explore as I said earlier

00:33:59,309 --> 00:34:05,880
in a separate plugin an alternative

00:34:02,040 --> 00:34:08,220
syntax that unified the the interests of

00:34:05,880 --> 00:34:11,070
both of them and and then this is what

00:34:08,220 --> 00:34:17,609
it is and as Eugene says it's as of 1 1

00:34:11,070 --> 00:34:19,950
0 it's it's available now you think this

00:34:17,609 --> 00:34:22,590
is better than 0 13 I just want to kind

00:34:19,950 --> 00:34:25,560
of like get the feel of you guys or do

00:34:22,590 --> 00:34:31,800
you or who thinks the the 0:13 style was

00:34:25,560 --> 00:34:36,000
better you like typing double columns so

00:34:31,800 --> 00:34:38,940
the I don't to the scope delegation is a

00:34:36,000 --> 00:34:41,879
complicated stuff but the disordering

00:34:38,940 --> 00:34:45,330
actually doesn't matter so when you type

00:34:41,879 --> 00:34:48,300
something like food tests console there

00:34:45,330 --> 00:34:51,899
are basically places that SBT looks for

00:34:48,300 --> 00:34:54,149
that you know the existing stuff so you

00:34:51,899 --> 00:34:56,609
know basically in case you don't have

00:34:54,149 --> 00:34:59,460
food test consoles color options defined

00:34:56,609 --> 00:35:01,950
these are the ordering basically of the

00:34:59,460 --> 00:35:04,420
places that was going to look for so if

00:35:01,950 --> 00:35:07,450
you have it in like a compiled consoles

00:35:04,420 --> 00:35:10,059
options it's gonna look for that so this

00:35:07,450 --> 00:35:12,339
this if you can remember disordering

00:35:10,059 --> 00:35:16,559
this kind of like in Tooele V sort of

00:35:12,339 --> 00:35:16,559
tells you the scorpion ordering as well

00:35:16,740 --> 00:35:23,619
alright so I'm gonna quickly talk about

00:35:20,319 --> 00:35:25,420
time there's a movie quote about time

00:35:23,619 --> 00:35:28,200
which is kind of fun I like to think

00:35:25,420 --> 00:35:31,000
about these like time-traveling stuff so

00:35:28,200 --> 00:35:33,970
there is this paper I think that came

00:35:31,000 --> 00:35:36,130
out in like 1979 or something called

00:35:33,970 --> 00:35:38,950
time clocks and the ordering of events

00:35:36,130 --> 00:35:42,520
and yeah this actually kind of doesn't

00:35:38,950 --> 00:35:45,849
matter to SVT on so if you're a time

00:35:42,520 --> 00:35:47,200
traveling there's like you have to kind

00:35:45,849 --> 00:35:49,390
of think about different things and this

00:35:47,200 --> 00:35:51,099
is how you kind of describe how you time

00:35:49,390 --> 00:35:54,700
travel right it suppose you're a time

00:35:51,099 --> 00:35:56,920
traveler on so this is a time space time

00:35:54,700 --> 00:36:00,940
diagram to describe your kind of like at

00:35:56,920 --> 00:36:03,460
your journey and by sort of the you know

00:36:00,940 --> 00:36:05,589
relativity there is no such thing as

00:36:03,460 --> 00:36:08,859
clock once you have time travel right

00:36:05,589 --> 00:36:10,599
because the moment I tell you what time

00:36:08,859 --> 00:36:12,790
it is it's already happened in the past

00:36:10,599 --> 00:36:16,089
so there's really no way to synchronize

00:36:12,790 --> 00:36:18,670
clock between you and I right so but you

00:36:16,089 --> 00:36:20,589
can kind of tell each other what has

00:36:18,670 --> 00:36:23,349
happened already in the past

00:36:20,589 --> 00:36:24,910
so that's basically what basically time

00:36:23,349 --> 00:36:28,359
is and there is no such thing as clock

00:36:24,910 --> 00:36:32,829
but there are events and what this is

00:36:28,359 --> 00:36:34,240
kind of showing that the so Lamport has

00:36:32,829 --> 00:36:38,020
invented this great thing called

00:36:34,240 --> 00:36:40,210
lamport's arrow where this arrow means

00:36:38,020 --> 00:36:42,640
it happened before so event a has

00:36:40,210 --> 00:36:45,700
happened before even be right so if it's

00:36:42,640 --> 00:36:47,740
within this same process that's what

00:36:45,700 --> 00:36:49,690
this error means and in case that

00:36:47,740 --> 00:36:51,609
there's two different processes or cores

00:36:49,690 --> 00:36:53,920
or whatever you want to think about it

00:36:51,609 --> 00:36:55,569
means that happened before actually

00:36:53,920 --> 00:36:57,069
means that like you told me about it

00:36:55,569 --> 00:37:01,839
right so that's basically message

00:36:57,069 --> 00:37:03,819
passing and there's so a arrow b means a

00:37:01,839 --> 00:37:06,819
happened before B and you have this like

00:37:03,819 --> 00:37:09,400
slash that means that a did not happen

00:37:06,819 --> 00:37:13,260
before B right these are okay okay all

00:37:09,400 --> 00:37:17,800
right what's interesting is that if a

00:37:13,260 --> 00:37:20,740
event a and event B has mutually

00:37:17,800 --> 00:37:23,200
God didn't happen relationship that's

00:37:20,740 --> 00:37:25,960
the definition of concurrent right

00:37:23,200 --> 00:37:30,490
do you see maybe people are a lot of

00:37:25,960 --> 00:37:32,890
confused but so you know like these I

00:37:30,490 --> 00:37:34,780
don't know like it's sunny today and

00:37:32,890 --> 00:37:36,880
someone is wearing black or something

00:37:34,780 --> 00:37:38,830
like that right they didn't happen with

00:37:36,880 --> 00:37:40,930
any sort of correlation right something

00:37:38,830 --> 00:37:43,060
someone is wearing black shirt and it's

00:37:40,930 --> 00:37:45,190
sunny today there is no you know it

00:37:43,060 --> 00:37:46,540
happened before relationship therefore

00:37:45,190 --> 00:37:49,810
they are concurrent

00:37:46,540 --> 00:37:52,510
so concurrency has more to do with the

00:37:49,810 --> 00:37:56,230
causal effect than the actual

00:37:52,510 --> 00:37:57,670
parallelism right so but the interesting

00:37:56,230 --> 00:37:59,860
effect is that because they don't have

00:37:57,670 --> 00:38:02,920
causality you can basically paralyzed

00:37:59,860 --> 00:38:06,820
that and that's why in this case P 3 and

00:38:02,920 --> 00:38:09,970
Q 3 is concurrent right and this sort of

00:38:06,820 --> 00:38:12,400
shows that in the event of time-space

00:38:09,970 --> 00:38:14,560
you can kind of reorder things without

00:38:12,400 --> 00:38:16,960
affecting the causality and like break

00:38:14,560 --> 00:38:19,620
everything in the world and why does

00:38:16,960 --> 00:38:23,820
this matter is in functional programming

00:38:19,620 --> 00:38:26,950
this is expressed as applicable functor

00:38:23,820 --> 00:38:29,590
there was all talk today oh do they call

00:38:26,950 --> 00:38:33,550
it monoidal functor but the essential

00:38:29,590 --> 00:38:35,350
you put like 2 & 3 into like a box and

00:38:33,550 --> 00:38:41,050
you take it out and then you put it back

00:38:35,350 --> 00:38:43,470
in so in a way like the the task or the

00:38:41,050 --> 00:38:46,660
setting graph is essentially using the

00:38:43,470 --> 00:38:52,510
applicator functor and if you think

00:38:46,660 --> 00:38:54,130
about this D essentially spt you know so

00:38:52,510 --> 00:38:56,050
there's a do notation in house scale

00:38:54,130 --> 00:38:58,810
that encodes the flat mapping right look

00:38:56,050 --> 00:39:01,090
I'm monad dang and this is really like

00:38:58,810 --> 00:39:03,070
nicer eyes I think then the Scala

00:39:01,090 --> 00:39:05,770
because you know it's it's really kind

00:39:03,070 --> 00:39:07,720
of tells you like it's almost like it's

00:39:05,770 --> 00:39:09,850
a real code right like there is no

00:39:07,720 --> 00:39:11,290
foreign curly brace in something like

00:39:09,850 --> 00:39:14,830
that there's like it happens this and it

00:39:11,290 --> 00:39:18,970
happens that and in a way I think SP T's

00:39:14,830 --> 00:39:25,210
build is essentially like the do

00:39:18,970 --> 00:39:26,800
notation for the applicable right so in

00:39:25,210 --> 00:39:28,720
the procedural code there is has

00:39:26,800 --> 00:39:30,400
happened before for each line right like

00:39:28,720 --> 00:39:33,190
vowel X get line print

00:39:30,400 --> 00:39:35,140
and then get lying again in xny so there

00:39:33,190 --> 00:39:37,569
is this like implicit like happened

00:39:35,140 --> 00:39:41,980
before relationship within your

00:39:37,569 --> 00:39:44,109
procedural code but SVT is not like that

00:39:41,980 --> 00:39:48,520
and that's why I'm mentioning this right

00:39:44,109 --> 00:39:51,190
now is that in SVT dot value is not a

00:39:48,520 --> 00:39:55,150
function call it's actually a denotation

00:39:51,190 --> 00:39:59,200
saying that compile compile is happened

00:39:55,150 --> 00:40:02,680
before foo and bar has happened before

00:39:59,200 --> 00:40:06,099
phew so by the time this beginning

00:40:02,680 --> 00:40:09,339
curly-braces reaches you these two tasks

00:40:06,099 --> 00:40:11,200
has already happened before so it looks

00:40:09,339 --> 00:40:14,109
like this right this is still the

00:40:11,200 --> 00:40:16,950
lamport's happen before so compile

00:40:14,109 --> 00:40:19,900
compile has happened before phew and

00:40:16,950 --> 00:40:23,109
that's what this bill dsl basically

00:40:19,900 --> 00:40:25,480
incurs so that's kinda like the most

00:40:23,109 --> 00:40:27,160
difficult part about SBT you kind of

00:40:25,480 --> 00:40:29,140
have to grasp to really understand this

00:40:27,160 --> 00:40:33,700
and this tradition goes all the way back

00:40:29,140 --> 00:40:35,380
to like make and you know the ant they

00:40:33,700 --> 00:40:37,900
all do these things basically you're

00:40:35,380 --> 00:40:40,150
describing your task based on the

00:40:37,900 --> 00:40:41,440
dependency of someone else and then

00:40:40,150 --> 00:40:43,510
you're kind of building up this graph

00:40:41,440 --> 00:40:46,140
but the the way we express it

00:40:43,510 --> 00:40:48,520
functionally is using this applicative

00:40:46,140 --> 00:40:52,079
so that's that line of sand in the

00:40:48,520 --> 00:40:54,460
time-space and these these can be run

00:40:52,079 --> 00:40:56,710
both in terms of the real meaning of the

00:40:54,460 --> 00:41:03,430
concurrency as well as in peril

00:40:56,710 --> 00:41:09,090
physically so that's all I have for

00:41:03,430 --> 00:41:13,199
today thank you

00:41:09,090 --> 00:41:13,199

YouTube URL: https://www.youtube.com/watch?v=rjW-H8hY7BM


